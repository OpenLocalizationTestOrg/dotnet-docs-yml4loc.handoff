{"nodes":[{"content":"Contains methods for setting cache-specific HTTP headers and for controlling the ASP.NET page output cache.","nodes":[{"pos":[0,107],"content":"Contains methods for setting cache-specific HTTP headers and for controlling the ASP.NET page output cache.","nodes":[{"content":"Contains methods for setting cache-specific HTTP headers and for controlling the ASP.NET page output cache.","pos":[0,107]}]}],"pos":[2775,2883],"yaml":true},{"content":"For background information about HTTP headers and controlling caching, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).","nodes":[{"pos":[0,232],"content":"For background information about HTTP headers and controlling caching, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the <bpt id=\"p1\">[</bpt>World Wide Web Consortium (W3C) Web site<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>.","source":"For background information about HTTP headers and controlling caching, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125)."}],"pos":[2894,3129],"yaml":true,"extradata":"MT"},{"content":"Registers a validation callback for the current response.","nodes":[{"pos":[0,57],"content":"Registers a validation callback for the current response.","nodes":[{"content":"Registers a validation callback for the current response.","pos":[0,57]}]}],"pos":[4712,4770],"yaml":true},{"content":"The<xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> method provides a mechanism to check the response programmatically in the cache before the response is returned to the client by the output cache.  \n  \n Before the response is served from the Web server cache, all registered handlers are queried to ensure resource validity. If any handler sets a flag indicating that the cached response is not valid, the entry is marked as not valid and expelled from the cache. In this case, as well as when any handler indicates that the cached response should be ignored for this request, the request is then handled as if it were a cache miss.  \n  \n <xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,208],"content":"The<xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> method provides a mechanism to check the response programmatically in the cache before the response is returned to the client by the output cache.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.AddValidationCallback%2A&gt;</ph> method provides a mechanism to check the response programmatically in the cache before the response is returned to the client by the output cache.","pos":[0,208],"source":"The<xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> method provides a mechanism to check the response programmatically in the cache before the response is returned to the client by the output cache."}]},{"pos":[215,644],"content":"Before the response is served from the Web server cache, all registered handlers are queried to ensure resource validity. If any handler sets a flag indicating that the cached response is not valid, the entry is marked as not valid and expelled from the cache. In this case, as well as when any handler indicates that the cached response should be ignored for this request, the request is then handled as if it were a cache miss.","nodes":[{"content":"Before the response is served from the Web server cache, all registered handlers are queried to ensure resource validity. If any handler sets a flag indicating that the cached response is not valid, the entry is marked as not valid and expelled from the cache. In this case, as well as when any handler indicates that the cached response should be ignored for this request, the request is then handled as if it were a cache miss.","pos":[0,429],"nodes":[{"content":"Before the response is served from the Web server cache, all registered handlers are queried to ensure resource validity.","pos":[0,121]},{"content":"If any handler sets a flag indicating that the cached response is not valid, the entry is marked as not valid and expelled from the cache.","pos":[122,260]},{"content":"In this case, as well as when any handler indicates that the cached response should be ignored for this request, the request is then handled as if it were a cache miss.","pos":[261,429]}]}]},{"pos":[651,877],"content":"<xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.AddValidationCallback%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,107],"source":"<xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[109,226],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[4781,5665],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpCacheValidateHandler\"></xref> value.","nodes":[{"pos":[0,67],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCacheValidateHandler\"&gt;&lt;/xref&gt;</ph> value.","source":"The <xref href=\"System.Web.HttpCacheValidateHandler\"></xref> value."}],"pos":[6401,6469],"yaml":true},{"content":"The arbitrary user-supplied data that is passed back to the <xref href=\"System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)\"></xref> delegate.","nodes":[{"pos":[0,190],"content":"The arbitrary user-supplied data that is passed back to the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)\"&gt;&lt;/xref&gt;</ph> delegate.","source":"The arbitrary user-supplied data that is passed back to the <xref href=\"System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)\"></xref> delegate."}],"pos":[6529,6720],"yaml":true},{"content":"The specified <code>handler</code> is `null`.","nodes":[{"pos":[0,45],"content":"The specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handler</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The specified <code>handler</code> is `null`."}],"pos":[6898,6944],"yaml":true},{"content":"Appends the specified text to the `Cache-Control` HTTP header.","nodes":[{"pos":[0,62],"content":"Appends the specified text to the <ph id=\"ph1\">`Cache-Control`</ph> HTTP header.","source":"Appends the specified text to the `Cache-Control` HTTP header."}],"pos":[7932,7995],"yaml":true},{"content":"If the browser does not recognize cache control directives or extensions, the browser must ignore the unrecognized terms. For more information, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).  \n  \n <xref:System.Web.HttpCachePolicy.AppendCacheExtension%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,305],"content":"If the browser does not recognize cache control directives or extensions, the browser must ignore the unrecognized terms. For more information, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).","nodes":[{"content":"If the browser does not recognize cache control directives or extensions, the browser must ignore the unrecognized terms.","pos":[0,121]},{"content":"For more information, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the <bpt id=\"p1\">[</bpt>World Wide Web Consortium (W3C) Web site<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>.","pos":[122,305],"source":" For more information, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125)."}]},{"pos":[312,537],"content":"<xref:System.Web.HttpCachePolicy.AppendCacheExtension%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.AppendCacheExtension%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,106],"source":"<xref:System.Web.HttpCachePolicy.AppendCacheExtension%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[108,225],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[8006,8548],"yaml":true,"extradata":"MT"},{"content":"The text to append to the `Cache-Control` header.","nodes":[{"pos":[0,49],"content":"The text to append to the <ph id=\"ph1\">`Cache-Control`</ph> header.","source":"The text to append to the `Cache-Control` header."}],"pos":[9693,9743],"yaml":true},{"content":"<code>extension</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;extension&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>extension</code> is `null`."}],"pos":[9920,9954],"yaml":true},{"content":"Gets the cache-control directive.","nodes":[{"pos":[0,33],"content":"Gets the cache-control directive.","nodes":[{"content":"Gets the cache-control directive.","pos":[0,33]}]}],"pos":[10849,10883],"yaml":true},{"content":"The cache-control directive.","nodes":[{"pos":[0,28],"content":"The cache-control directive.","nodes":[{"content":"The cache-control directive.","pos":[0,28]}]}],"pos":[11051,11080],"yaml":true},{"content":"Gets the cache extensions.","nodes":[{"pos":[0,26],"content":"Gets the cache extensions.","nodes":[{"content":"Gets the cache extensions.","pos":[0,26]}]}],"pos":[11844,11871],"yaml":true},{"content":"The cache extensions.","nodes":[{"pos":[0,21],"content":"The cache extensions.","nodes":[{"content":"The cache extensions.","pos":[0,21]}]}],"pos":[12007,12029],"yaml":true},{"content":"Gets the ETag.","nodes":[{"pos":[0,14],"content":"Gets the ETag.","nodes":[{"content":"Gets the ETag.","pos":[0,14]}]}],"pos":[12730,12745],"yaml":true},{"content":"The ETag.","nodes":[{"pos":[0,9],"content":"The ETag.","nodes":[{"content":"The ETag.","pos":[0,9]}]}],"pos":[12870,12880],"yaml":true},{"content":"Gets the status indicating whether the `ETag` header has been set  based on the timestamps of the file   dependencies of the handler.","nodes":[{"pos":[0,133],"content":"Gets the status indicating whether the <ph id=\"ph1\">`ETag`</ph> header has been set  based on the timestamps of the file   dependencies of the handler.","source":"Gets the status indicating whether the `ETag` header has been set  based on the timestamps of the file   dependencies of the handler."}],"pos":[13690,13824],"yaml":true},{"content":"`true` if the `ETag` header has been set  based on the timestamps of the file   dependencies of the handler; otherwise `false`.","nodes":[{"pos":[0,127],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">`ETag`</ph> header has been set  based on the timestamps of the file   dependencies of the handler; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the `ETag` header has been set  based on the timestamps of the file   dependencies of the handler; otherwise `false`."}],"pos":[13968,14098],"yaml":true},{"content":"Gets the expire header.","nodes":[{"pos":[0,23],"content":"Gets the expire header.","nodes":[{"content":"Gets the expire header.","pos":[0,23]}]}],"pos":[14826,14850],"yaml":true},{"content":"The expire header.","nodes":[{"pos":[0,18],"content":"The expire header.","nodes":[{"content":"The expire header.","pos":[0,18]}]}],"pos":[14982,15001],"yaml":true},{"content":"Gets the status of ignore range requests.","nodes":[{"pos":[0,41],"content":"Gets the status of ignore range requests.","nodes":[{"content":"Gets the status of ignore range requests.","pos":[0,41]}]}],"pos":[15784,15826],"yaml":true},{"content":"`true` if range requests are ignored; otherwise `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if range requests are ignored; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if range requests are ignored; otherwise `false`."}],"pos":[15965,16024],"yaml":true},{"content":"Gets the status of the Last-Modified headerset to base on the timestamps of the   file dependencies of the handler.","nodes":[{"pos":[0,115],"content":"Gets the status of the Last-Modified headerset to base on the timestamps of the   file dependencies of the handler.","nodes":[{"content":"Gets the status of the Last-Modified headerset to base on the timestamps of the   file dependencies of the handler.","pos":[0,115]}]}],"pos":[16897,17013],"yaml":true},{"content":"`true` if the Last-Modified header  is set to base on the timestamps of the   file dependencies of the handler; otherwise `false`.","nodes":[{"pos":[0,130],"content":"<ph id=\"ph1\">`true`</ph> if the Last-Modified header  is set to base on the timestamps of the   file dependencies of the handler; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the Last-Modified header  is set to base on the timestamps of the   file dependencies of the handler; otherwise `false`."}],"pos":[17165,17298],"yaml":true},{"content":"Gets the cache-control max age.","nodes":[{"pos":[0,31],"content":"Gets the cache-control max age.","nodes":[{"content":"Gets the cache-control max age.","pos":[0,31]}]}],"pos":[18028,18060],"yaml":true},{"content":"The cache-control max age.","nodes":[{"pos":[0,26],"content":"The cache-control max age.","nodes":[{"content":"The cache-control max age.","pos":[0,26]}]}],"pos":[18191,18218],"yaml":true},{"content":"Gets the status of server caching for the current response.","nodes":[{"pos":[0,59],"content":"Gets the status of server caching for the current response.","nodes":[{"content":"Gets the status of server caching for the current response.","pos":[0,59]}]}],"pos":[18976,19036],"yaml":true},{"content":"`true` if server caching is stopped for the current response; otherwise `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if server caching is stopped for the current response; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if server caching is stopped for the current response; otherwise `false`."}],"pos":[19171,19254],"yaml":true},{"content":"Gets the status of the store.","nodes":[{"pos":[0,29],"content":"Gets the status of the store.","nodes":[{"content":"Gets the status of the store.","pos":[0,29]}]}],"pos":[19973,20003],"yaml":true},{"content":"`true` if no store is set; otherwise `false`.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">`true`</ph> if no store is set; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if no store is set; otherwise `false`."}],"pos":[20130,20178],"yaml":true},{"content":"Gets the status of the HTTP No-Transform Directive.","nodes":[{"pos":[0,51],"content":"Gets the status of the HTTP No-Transform Directive.","nodes":[{"content":"Gets the status of the HTTP No-Transform Directive.","pos":[0,51]}]}],"pos":[20919,20971],"yaml":true},{"content":"Enables the sending of the Cache-Control HTTP header.","nodes":[{"pos":[0,53],"content":"Enables the sending of the Cache-Control HTTP header.","nodes":[{"content":"Enables the sending of the Cache-Control HTTP header.","pos":[0,53]}]}],"pos":[20982,21036],"yaml":true,"extradata":"MT"},{"content":"`true` if the HTTP No-Transform Directive is set; otherwise `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the HTTP No-Transform Directive is set; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the HTTP No-Transform Directive is set; otherwise `false`."}],"pos":[21168,21239],"yaml":true},{"content":"Gets the status of the `vary:*` header.","nodes":[{"pos":[0,39],"content":"Gets the status of the <ph id=\"ph1\">`vary:*`</ph> header.","source":"Gets the status of the `vary:*` header."}],"pos":[21985,22025],"yaml":true},{"content":"`true` if the `vary:*` header is omitted; otherwise `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">`vary:*`</ph> header is omitted; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the `vary:*` header is omitted; otherwise `false`."}],"pos":[22154,22217],"yaml":true},{"content":"Gets the HTTP Cache-Control: Proxy Max Age.","nodes":[{"pos":[0,43],"content":"Gets the HTTP Cache-Control: Proxy Max Age.","nodes":[{"content":"Gets the HTTP Cache-Control: Proxy Max Age.","pos":[0,43]}]}],"pos":[22957,23003],"yaml":true},{"content":"The HTTP Cache-Control: Proxy Max Age.","nodes":[{"pos":[0,38],"content":"The HTTP Cache-Control: Proxy Max Age.","nodes":[{"content":"The HTTP Cache-Control: Proxy Max Age.","pos":[0,38]}]}],"pos":[23139,23180],"yaml":true},{"content":"Gets the Cache-Control: header to reflect either the must-revalidate or   proxy-revalidate directives.","nodes":[{"pos":[0,102],"content":"Gets the Cache-Control: header to reflect either the must-revalidate or   proxy-revalidate directives.","nodes":[{"content":"Gets the Cache-Control: header to reflect either the must-revalidate or   proxy-revalidate directives.","pos":[0,102]}]}],"pos":[23925,24030],"yaml":true},{"content":"The default is to not send either of these directives unless explicitly enabled using this method.","nodes":[{"pos":[0,98],"content":"The default is to not send either of these directives unless explicitly enabled using this method.","nodes":[{"content":"The default is to not send either of these directives unless explicitly enabled using this method.","pos":[0,98]}]}],"pos":[24041,24140],"yaml":true,"extradata":"MT"},{"content":"The Cache-Control: header to reflect either the must-revalidate or   proxy-revalidate directives.","nodes":[{"pos":[0,97],"content":"The Cache-Control: header to reflect either the must-revalidate or   proxy-revalidate directives.","nodes":[{"content":"The Cache-Control: header to reflect either the must-revalidate or   proxy-revalidate directives.","pos":[0,97]}]}],"pos":[24318,24418],"yaml":true},{"content":"Gets the value of the `Last-Modified` HTTP header in Coordinated Universal Time (UTC).","nodes":[{"pos":[0,86],"content":"Gets the value of the <ph id=\"ph1\">`Last-Modified`</ph> HTTP header in Coordinated Universal Time (UTC).","source":"Gets the value of the `Last-Modified` HTTP header in Coordinated Universal Time (UTC)."}],"pos":[25182,25269],"yaml":true},{"content":"The value of the `Last-Modified` HTTP header.","nodes":[{"pos":[0,45],"content":"The value of the <ph id=\"ph1\">`Last-Modified`</ph> HTTP header.","source":"The value of the `Last-Modified` HTTP header."}],"pos":[25409,25455],"yaml":true},{"content":"Gets the custom string that is used to vary the HTTP caching.","nodes":[{"pos":[0,61],"content":"Gets the custom string that is used to vary the HTTP caching.","nodes":[{"content":"Gets the custom string that is used to vary the HTTP caching.","pos":[0,61]}]}],"pos":[26204,26266],"yaml":true},{"content":"The custom string for varying the HTTP caching.","nodes":[{"pos":[0,47],"content":"The custom string for varying the HTTP caching.","nodes":[{"content":"The custom string for varying the HTTP caching.","pos":[0,47]}]}],"pos":[26399,26447],"yaml":true},{"content":"Gets a value which specifies whether the cache has a sliding expiration policy.","nodes":[{"pos":[0,79],"content":"Gets a value which specifies whether the cache has a sliding expiration policy.","nodes":[{"content":"Gets a value which specifies whether the cache has a sliding expiration policy.","pos":[0,79]}]}],"pos":[27223,27303],"yaml":true},{"content":"`true` if the the cache has a sliding expiration policy; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the the cache has a sliding expiration policy; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the the cache has a sliding expiration policy; otherwise, `false`."}],"pos":[27440,27519],"yaml":true},{"content":"Gets a value which specifies whether the HTTP cache has been modified.","nodes":[{"pos":[0,70],"content":"Gets a value which specifies whether the HTTP cache has been modified.","nodes":[{"content":"Gets a value which specifies whether the HTTP cache has been modified.","pos":[0,70]}]}],"pos":[28240,28311],"yaml":true},{"content":"`true` if the the cache has been modified; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the the cache has been modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the the cache has been modified; otherwise, `false`."}],"pos":[28438,28503],"yaml":true},{"content":"Gets a value which specifies whether the ASP.NET cache should ignore HTTP `Cache-Control` headers sent by the client that invalidate the cache.","nodes":[{"pos":[0,143],"content":"Gets a value which specifies whether the ASP.NET cache should ignore HTTP <ph id=\"ph1\">`Cache-Control`</ph> headers sent by the client that invalidate the cache.","source":"Gets a value which specifies whether the ASP.NET cache should ignore HTTP `Cache-Control` headers sent by the client that invalidate the cache."}],"pos":[29268,29412],"yaml":true},{"content":"`true` if the the ASP.NET cache should ignore HTTP `Cache-Control` headers sent by the client; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if the the ASP.NET cache should ignore HTTP <ph id=\"ph2\">`Cache-Control`</ph> headers sent by the client; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the the ASP.NET cache should ignore HTTP `Cache-Control` headers sent by the client; otherwise, `false`."}],"pos":[29548,29665],"yaml":true},{"content":"Makes the response is available in the client browser History cache, regardless of the <xref href=\"System.Web.HttpCacheability\"></xref> setting made on the server, when the <code>allow</code> parameter is `true`.","nodes":[{"pos":[0,212],"content":"Makes the response is available in the client browser History cache, regardless of the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCacheability\"&gt;&lt;/xref&gt;</ph> setting made on the server, when the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">allow</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`true`</ph>.","source":"Makes the response is available in the client browser History cache, regardless of the <xref href=\"System.Web.HttpCacheability\"></xref> setting made on the server, when the <code>allow</code> parameter is `true`."}],"pos":[30586,30799],"yaml":true},{"content":"When <xref:System.Web.HttpCacheability> is set to <xref:System.Web.HttpCacheability.NoCache> or <xref:System.Web.HttpCacheability.ServerAndNoCache> the `Expires` HTTP header is by default set to -1; this tells the client not to cache responses in the History folder, so that when you use the back/forward buttons the client requests a new version of the response each time. You can override this behavior by calling the <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> method with the `allow` parameter set to `true`.  \n  \n If <xref:System.Web.HttpCacheability> is set to values other than <xref:System.Web.HttpCacheability.NoCache> or <xref:System.Web.HttpCacheability.ServerAndNoCache>, calling the <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> method with either value for `allow` has no effect.  \n  \n <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,538],"content":"When <xref:System.Web.HttpCacheability> is set to <xref:System.Web.HttpCacheability.NoCache> or <xref:System.Web.HttpCacheability.ServerAndNoCache> the `Expires` HTTP header is by default set to -1; this tells the client not to cache responses in the History folder, so that when you use the back/forward buttons the client requests a new version of the response each time. You can override this behavior by calling the <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> method with the `allow` parameter set to `true`.","nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.Web.HttpCacheability&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Web.HttpCacheability.NoCache&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Web.HttpCacheability.ServerAndNoCache&gt;</ph> the <ph id=\"ph4\">`Expires`</ph> HTTP header is by default set to -1; this tells the client not to cache responses in the History folder, so that when you use the back/forward buttons the client requests a new version of the response each time.","pos":[0,373],"source":"When <xref:System.Web.HttpCacheability> is set to <xref:System.Web.HttpCacheability.NoCache> or <xref:System.Web.HttpCacheability.ServerAndNoCache> the `Expires` HTTP header is by default set to -1; this tells the client not to cache responses in the History folder, so that when you use the back/forward buttons the client requests a new version of the response each time."},{"content":"You can override this behavior by calling the <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A&gt;</ph> method with the <ph id=\"ph2\">`allow`</ph> parameter set to <ph id=\"ph3\">`true`</ph>.","pos":[374,538],"source":" You can override this behavior by calling the <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> method with the `allow` parameter set to `true`."}]},{"pos":[545,843],"content":"If <ph id=\"ph1\">&lt;xref:System.Web.HttpCacheability&gt;</ph> is set to values other than <ph id=\"ph2\">&lt;xref:System.Web.HttpCacheability.NoCache&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Web.HttpCacheability.ServerAndNoCache&gt;</ph>, calling the <ph id=\"ph4\">&lt;xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A&gt;</ph> method with either value for <ph id=\"ph5\">`allow`</ph> has no effect.","source":"If <xref:System.Web.HttpCacheability> is set to values other than <xref:System.Web.HttpCacheability.NoCache> or <xref:System.Web.HttpCacheability.ServerAndNoCache>, calling the <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> method with either value for `allow` has no effect."},{"pos":[850,1087],"content":"<xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,118],"source":"<xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[120,237],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[30810,31904],"yaml":true,"extradata":"MT"},{"content":"`true` to direct the client browser to store responses in the History folder; otherwise `false`. The default is `false`.","nodes":[{"pos":[0,120],"content":"`true` to direct the client browser to store responses in the History folder; otherwise `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to direct the client browser to store responses in the History folder; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,96],"source":"`true` to direct the client browser to store responses in the History folder; otherwise `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[97,120],"source":" The default is `false`."}]}],"pos":[32859,32982],"yaml":true},{"content":"Sets the `Cache-Control` header to one of the values of <xref href=\"System.Web.HttpCacheability\"></xref>.","nodes":[{"pos":[0,105],"content":"Sets the <ph id=\"ph1\">`Cache-Control`</ph> header to one of the values of <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpCacheability\"&gt;&lt;/xref&gt;</ph>.","source":"Sets the `Cache-Control` header to one of the values of <xref href=\"System.Web.HttpCacheability\"></xref>."}],"pos":[34102,34208],"yaml":true},{"content":"<xref:System.Web.HttpCachePolicy.SetCacheability%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,220],"content":"<xref:System.Web.HttpCachePolicy.SetCacheability%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetCacheability%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,101],"source":"<xref:System.Web.HttpCachePolicy.SetCacheability%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[103,220],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[34219,34440],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Web.HttpCacheability\"></xref> enumeration value.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCacheability\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"An <xref href=\"System.Web.HttpCacheability\"></xref> enumeration value."}],"pos":[35129,35200],"yaml":true},{"content":"<code>cacheability</code> is not one of the enumeration values.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;cacheability&lt;/code&gt;</ph> is not one of the enumeration values.","source":"<code>cacheability</code> is not one of the enumeration values."}],"pos":[35384,35448],"yaml":true},{"content":"Sets the `Cache-Control` header to one of the values of <xref href=\"System.Web.HttpCacheability\"></xref> and appends an extension to the directive.","nodes":[{"pos":[0,147],"content":"Sets the <ph id=\"ph1\">`Cache-Control`</ph> header to one of the values of <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpCacheability\"&gt;&lt;/xref&gt;</ph> and appends an extension to the directive.","source":"Sets the `Cache-Control` header to one of the values of <xref href=\"System.Web.HttpCacheability\"></xref> and appends an extension to the directive."}],"pos":[36544,36692],"yaml":true},{"content":"The field name extension is valid only when used with the `private` or `no-cache` directives. For more information, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).  \n  \n This method will throw an invalid argument exception if incompatible directives and extensions are combined.  \n  \n <xref:System.Web.HttpCachePolicy.SetCacheability%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,277],"content":"The field name extension is valid only when used with the `private` or `no-cache` directives. For more information, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).","nodes":[{"content":"The field name extension is valid only when used with the <ph id=\"ph1\">`private`</ph> or <ph id=\"ph2\">`no-cache`</ph> directives.","pos":[0,93],"source":"The field name extension is valid only when used with the `private` or `no-cache` directives."},{"content":"For more information, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the <bpt id=\"p1\">[</bpt>World Wide Web Consortium (W3C) Web site<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>.","pos":[94,277],"source":" For more information, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125)."}]},{"pos":[284,392],"content":"This method will throw an invalid argument exception if incompatible directives and extensions are combined.","nodes":[{"content":"This method will throw an invalid argument exception if incompatible directives and extensions are combined.","pos":[0,108]}]},{"pos":[399,619],"content":"<xref:System.Web.HttpCachePolicy.SetCacheability%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetCacheability%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,101],"source":"<xref:System.Web.HttpCachePolicy.SetCacheability%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[103,220],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[36703,37329],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpCacheability\"></xref> enumeration value to set the header to.","nodes":[{"pos":[0,92],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCacheability\"&gt;&lt;/xref&gt;</ph> enumeration value to set the header to.","source":"The <xref href=\"System.Web.HttpCacheability\"></xref> enumeration value to set the header to."}],"pos":[38226,38319],"yaml":true},{"content":"The cache control extension to add to the header.","nodes":[{"pos":[0,49],"content":"The cache control extension to add to the header.","nodes":[{"content":"The cache control extension to add to the header.","pos":[0,49]}]}],"pos":[38380,38430],"yaml":true},{"content":"<code>field</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;field&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>field</code> is `null`."}],"pos":[38602,38632],"yaml":true},{"content":"<code>cacheability</code> is not <xref href=\"System.Web.HttpCacheability.Private\"></xref> or <xref href=\"System.Web.HttpCacheability.NoCache\"></xref>.","nodes":[{"pos":[0,150],"content":"<ph id=\"ph1\">&lt;code&gt;cacheability&lt;/code&gt;</ph> is not <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpCacheability.Private\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Web.HttpCacheability.NoCache\"&gt;&lt;/xref&gt;</ph>.","source":"<code>cacheability</code> is not <xref href=\"System.Web.HttpCacheability.Private\"></xref> or <xref href=\"System.Web.HttpCacheability.NoCache\"></xref>."}],"pos":[38726,38877],"yaml":true},{"content":"Sets the `ETag` HTTP header to the specified string.","nodes":[{"pos":[0,52],"content":"Sets the <ph id=\"ph1\">`ETag`</ph> HTTP header to the specified string.","source":"Sets the `ETag` HTTP header to the specified string."}],"pos":[39787,39840],"yaml":true},{"content":"The `ETag` header is a unique identifier for a specific version of a document. It is used by clients to validate client-cached content to avoid requesting it again. Once an `ETag` header is set, subsequent attempts to set it fail and an exception is thrown.  \n  \n <xref:System.Web.HttpCachePolicy.SetETag%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,257],"content":"The `ETag` header is a unique identifier for a specific version of a document. It is used by clients to validate client-cached content to avoid requesting it again. Once an `ETag` header is set, subsequent attempts to set it fail and an exception is thrown.","nodes":[{"content":"The <ph id=\"ph1\">`ETag`</ph> header is a unique identifier for a specific version of a document.","pos":[0,78],"source":"The `ETag` header is a unique identifier for a specific version of a document."},{"content":"It is used by clients to validate client-cached content to avoid requesting it again.","pos":[79,164]},{"content":"Once an <ph id=\"ph1\">`ETag`</ph> header is set, subsequent attempts to set it fail and an exception is thrown.","pos":[165,257],"source":" Once an `ETag` header is set, subsequent attempts to set it fail and an exception is thrown."}]},{"pos":[264,476],"content":"<xref:System.Web.HttpCachePolicy.SetETag%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetETag%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,93],"source":"<xref:System.Web.HttpCachePolicy.SetETag%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[95,212],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[39851,40332],"yaml":true,"extradata":"MT"},{"content":"The text to use for the `ETag` header.","nodes":[{"pos":[0,38],"content":"The text to use for the <ph id=\"ph1\">`ETag`</ph> header.","source":"The text to use for the `ETag` header."}],"pos":[40900,40939],"yaml":true},{"content":"<code>etag</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;etag&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>etag</code> is `null`."}],"pos":[41103,41132],"yaml":true},{"content":"The `ETag` header has already been set.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.HttpCachePolicy.SetETagFromFileDependencies\"></xref> has already been called.","nodes":[{"pos":[0,39],"content":"The <ph id=\"ph1\">`ETag`</ph> header has already been set.","source":"The `ETag` header has already been set."},{"pos":[46,53],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[60,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCachePolicy.SetETagFromFileDependencies\"&gt;&lt;/xref&gt;</ph> has already been called.","source":"The <xref href=\"System.Web.HttpCachePolicy.SetETagFromFileDependencies\"></xref> has already been called."}],"pos":[41242,41416],"yaml":true},{"content":"Sets the `ETag` HTTP header based on the time stamps of the handler's file dependencies.","nodes":[{"pos":[0,88],"content":"Sets the <ph id=\"ph1\">`ETag`</ph> HTTP header based on the time stamps of the handler's file dependencies.","source":"Sets the `ETag` HTTP header based on the time stamps of the handler's file dependencies."}],"pos":[42383,42472],"yaml":true},{"content":"The<xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A> method sets the `ETag` header by retrieving the last modified time stamps of all files on which the handler is dependent, combining all file names and time stamps into a single string, then hashing that string into a single digest that is used as the `ETag`.  \n  \n <xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,326],"content":"The<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A&gt;</ph> method sets the <ph id=\"ph2\">`ETag`</ph> header by retrieving the last modified time stamps of all files on which the handler is dependent, combining all file names and time stamps into a single string, then hashing that string into a single digest that is used as the <ph id=\"ph3\">`ETag`</ph>.","source":"The<xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A> method sets the `ETag` header by retrieving the last modified time stamps of all files on which the handler is dependent, combining all file names and time stamps into a single string, then hashing that string into a single digest that is used as the `ETag`."},{"pos":[333,565],"content":"<xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,113],"source":"<xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[115,232],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[42483,43053],"yaml":true,"extradata":"MT"},{"content":"The `ETag` header has already been set.","nodes":[{"pos":[0,39],"content":"The <ph id=\"ph1\">`ETag`</ph> header has already been set.","source":"The `ETag` header has already been set."}],"pos":[43827,43867],"yaml":true},{"content":"Sets the `Expires` HTTP header to an absolute date and time.","nodes":[{"pos":[0,60],"content":"Sets the <ph id=\"ph1\">`Expires`</ph> HTTP header to an absolute date and time.","source":"Sets the `Expires` HTTP header to an absolute date and time."}],"pos":[44807,44868],"yaml":true},{"content":"This method will fail if the expiration date violates the principle of restrictiveness.","nodes":[{"pos":[0,87],"content":"This method will fail if the expiration date violates the principle of restrictiveness.","nodes":[{"content":"This method will fail if the expiration date violates the principle of restrictiveness.","pos":[0,87]}]}],"pos":[44879,44967],"yaml":true,"extradata":"MT"},{"content":"The absolute <xref href=\"System.DateTime\"></xref> value to set the `Expires` header to.","nodes":[{"pos":[0,87],"content":"The absolute <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value to set the <ph id=\"ph2\">`Expires`</ph> header to.","source":"The absolute <xref href=\"System.DateTime\"></xref> value to set the `Expires` header to."}],"pos":[45592,45680],"yaml":true},{"content":"Sets the `Last-Modified` HTTP header to the <xref href=\"System.DateTime\"></xref> value supplied.","nodes":[{"pos":[0,96],"content":"Sets the <ph id=\"ph1\">`Last-Modified`</ph> HTTP header to the <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value supplied.","source":"Sets the `Last-Modified` HTTP header to the <xref href=\"System.DateTime\"></xref> value supplied."}],"pos":[46718,46815],"yaml":true},{"content":"The `Last-Modified` HTTP header time stamps the document with the `DateTime` value indicating when the document was last modified.  \n  \n This method will fail if the caching restrictiveness hierarchy is violated.  \n  \n <xref:System.Web.HttpCachePolicy.SetLastModified%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,130],"content":"The <ph id=\"ph1\">`Last-Modified`</ph> HTTP header time stamps the document with the <ph id=\"ph2\">`DateTime`</ph> value indicating when the document was last modified.","source":"The `Last-Modified` HTTP header time stamps the document with the `DateTime` value indicating when the document was last modified."},{"pos":[137,212],"content":"This method will fail if the caching restrictiveness hierarchy is violated.","nodes":[{"content":"This method will fail if the caching restrictiveness hierarchy is violated.","pos":[0,75]}]},{"pos":[219,439],"content":"<xref:System.Web.HttpCachePolicy.SetLastModified%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetLastModified%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,101],"source":"<xref:System.Web.HttpCachePolicy.SetLastModified%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[103,220],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[46826,47272],"yaml":true,"extradata":"MT"},{"content":"The new <xref href=\"System.DateTime\"></xref> value for the `Last-Modified` header.","nodes":[{"pos":[0,82],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value for the <ph id=\"ph2\">`Last-Modified`</ph> header.","source":"The new <xref href=\"System.DateTime\"></xref> value for the `Last-Modified` header."}],"pos":[47889,47972],"yaml":true},{"content":"<code>date</code> is later than the current `DateTime`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;date&lt;/code&gt;</ph> is later than the current <ph id=\"ph2\">`DateTime`</ph>.","source":"<code>date</code> is later than the current `DateTime`."}],"pos":[48156,48212],"yaml":true},{"content":"Sets the `Last-Modified` HTTP header based on the time stamps of the handler's file dependencies.","nodes":[{"pos":[0,97],"content":"Sets the <ph id=\"ph1\">`Last-Modified`</ph> HTTP header based on the time stamps of the handler's file dependencies.","source":"Sets the `Last-Modified` HTTP header based on the time stamps of the handler's file dependencies."}],"pos":[49227,49325],"yaml":true},{"content":"<xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,240],"content":"<xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,121],"source":"<xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[123,240],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[49336,49577],"yaml":true,"extradata":"MT"},{"content":"Sets the `Cache-Control: max-age` HTTP header based on the specified time span.","nodes":[{"pos":[0,79],"content":"Sets the <ph id=\"ph1\">`Cache-Control: max-age`</ph> HTTP header based on the specified time span.","source":"Sets the `Cache-Control: max-age` HTTP header based on the specified time span."}],"pos":[51325,51407],"yaml":true},{"content":"`Max-age` is the maximum absolute time a document is allowed to exist before being considered stale.  \n  \n The <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> method does not use sliding expiration and will fail if the expiration date violates the principle of restrictiveness.  \n  \n <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).  \n  \n> [!NOTE]\n>  If the <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> method is called repeatedly, on the second and subsequent calls, the value of the maximum age can only be decreased.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`Max-age`</ph> is the maximum absolute time a document is allowed to exist before being considered stale.","source":"`Max-age` is the maximum absolute time a document is allowed to exist before being considered stale."},{"pos":[107,276],"content":"The <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> method does not use sliding expiration and will fail if the expiration date violates the principle of restrictiveness.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetMaxAge%2A&gt;</ph> method does not use sliding expiration and will fail if the expiration date violates the principle of restrictiveness.","pos":[0,169],"source":"The <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> method does not use sliding expiration and will fail if the expiration date violates the principle of restrictiveness."}]},{"pos":[283,497],"content":"<xref:System.Web.HttpCachePolicy.SetMaxAge%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetMaxAge%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,95],"source":"<xref:System.Web.HttpCachePolicy.SetMaxAge%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[97,214],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]},{"pos":[505,686],"content":"[!NOTE]\n If the <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> method is called repeatedly, on the second and subsequent calls, the value of the maximum age can only be decreased.","leadings":["","> "],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetMaxAge%2A&gt;</ph> method is called repeatedly, on the second and subsequent calls, the value of the maximum age can only be decreased.","pos":[9,179],"source":" If the <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> method is called repeatedly, on the second and subsequent calls, the value of the maximum age can only be decreased."}]}],"pos":[51418,52114],"yaml":true,"extradata":"MT"},{"content":"The time span used to set the `Cache` - `Control: max-age` header.","nodes":[{"pos":[0,66],"content":"The time span used to set the <ph id=\"ph1\">`Cache`</ph><ph id=\"ph2\"> - </ph><ph id=\"ph3\">`Control: max-age`</ph> header.","source":"The time span used to set the `Cache` - `Control: max-age` header."}],"pos":[52736,52805],"yaml":true},{"content":"<code>delta</code> is less than 0 or greater than one year.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;delta&lt;/code&gt;</ph> is less than 0 or greater than one year.","source":"<code>delta</code> is less than 0 or greater than one year."}],"pos":[52983,53043],"yaml":true},{"content":"Stops all origin-server caching for the current response.","nodes":[{"pos":[0,57],"content":"Stops all origin-server caching for the current response.","nodes":[{"content":"Stops all origin-server caching for the current response.","pos":[0,57]}]}],"pos":[53956,54014],"yaml":true},{"content":"Explicitly denies caching of the document on the origin-server. Once set, all requests for the document are fully processed. When this method is invoked, caching cannot be re-enabled for the current response.  \n  \n <xref:System.Web.HttpCachePolicy.SetNoServerCaching%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,208],"content":"Explicitly denies caching of the document on the origin-server. Once set, all requests for the document are fully processed. When this method is invoked, caching cannot be re-enabled for the current response.","nodes":[{"content":"Explicitly denies caching of the document on the origin-server. Once set, all requests for the document are fully processed. When this method is invoked, caching cannot be re-enabled for the current response.","pos":[0,208],"nodes":[{"content":"Explicitly denies caching of the document on the origin-server.","pos":[0,63]},{"content":"Once set, all requests for the document are fully processed.","pos":[64,124]},{"content":"When this method is invoked, caching cannot be re-enabled for the current response.","pos":[125,208]}]}]},{"pos":[215,438],"content":"<xref:System.Web.HttpCachePolicy.SetNoServerCaching%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetNoServerCaching%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,104],"source":"<xref:System.Web.HttpCachePolicy.SetNoServerCaching%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[106,223],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[54025,54468],"yaml":true,"extradata":"MT"},{"content":"Sets the `Cache-Control: no-store` HTTP header.","nodes":[{"pos":[0,47],"content":"Sets the <ph id=\"ph1\">`Cache-Control: no-store`</ph> HTTP header.","source":"Sets the `Cache-Control: no-store` HTTP header."}],"pos":[55981,56031],"yaml":true},{"content":"Sets the `Cache-Control: no-transform` HTTP header.","nodes":[{"pos":[0,51],"content":"Sets the <ph id=\"ph1\">`Cache-Control: no-transform`</ph> HTTP header.","source":"Sets the `Cache-Control: no-transform` HTTP header."}],"pos":[57718,57772],"yaml":true},{"content":"The `Cache-Control: no-transform` HTTP header instructs network caching applications not to modify the document.  \n  \n The `Cache-Control: no-transform` HTTP header prevents downstream proxy servers from changing any header values specified by the `Content-Encoding`, `Content-Range`, or `Content-Type` headers (this includes the entity body). For example, it prevents proxies from converting GIF images to PNG.  \n  \n As with other restrictions on caching, once <xref:System.Web.HttpCachePolicy.SetNoTransforms%2A> is called, the `Cache-Control: no-transform` HTTP header cannot be disabled through the <xref:System.Web.HttpCachePolicy> interface.  \n  \n <xref:System.Web.HttpCachePolicy.SetNoTransforms%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">`Cache-Control: no-transform`</ph> HTTP header instructs network caching applications not to modify the document.","source":"The `Cache-Control: no-transform` HTTP header instructs network caching applications not to modify the document."},{"pos":[119,411],"content":"The `Cache-Control: no-transform` HTTP header prevents downstream proxy servers from changing any header values specified by the `Content-Encoding`, `Content-Range`, or `Content-Type` headers (this includes the entity body). For example, it prevents proxies from converting GIF images to PNG.","nodes":[{"content":"The <ph id=\"ph1\">`Cache-Control: no-transform`</ph> HTTP header prevents downstream proxy servers from changing any header values specified by the <ph id=\"ph2\">`Content-Encoding`</ph>, <ph id=\"ph3\">`Content-Range`</ph>, or <ph id=\"ph4\">`Content-Type`</ph> headers (this includes the entity body).","pos":[0,224],"source":"The `Cache-Control: no-transform` HTTP header prevents downstream proxy servers from changing any header values specified by the `Content-Encoding`, `Content-Range`, or `Content-Type` headers (this includes the entity body)."},{"content":"For example, it prevents proxies from converting GIF images to PNG.","pos":[225,292]}]},{"pos":[418,647],"content":"As with other restrictions on caching, once <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetNoTransforms%2A&gt;</ph> is called, the <ph id=\"ph2\">`Cache-Control: no-transform`</ph> HTTP header cannot be disabled through the <ph id=\"ph3\">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> interface.","source":"As with other restrictions on caching, once <xref:System.Web.HttpCachePolicy.SetNoTransforms%2A> is called, the `Cache-Control: no-transform` HTTP header cannot be disabled through the <xref:System.Web.HttpCachePolicy> interface."},{"pos":[654,874],"content":"<xref:System.Web.HttpCachePolicy.SetNoTransforms%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetNoTransforms%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,101],"source":"<xref:System.Web.HttpCachePolicy.SetNoTransforms%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[103,220],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[57783,58666],"yaml":true,"extradata":"MT"},{"content":"Specifies whether the response should contain the `vary:*` header when varying by parameters.","nodes":[{"pos":[0,93],"content":"Specifies whether the response should contain the <ph id=\"ph1\">`vary:*`</ph> header when varying by parameters.","source":"Specifies whether the response should contain the `vary:*` header when varying by parameters."}],"pos":[60278,60372],"yaml":true},{"content":"This method allows you to prevent the output ached from adding a `vary:*` header to the outgoing response when the cached response varies by parameter. This is useful for clients varying caching by query string because most clients will automatically vary by query string without requiring the `vary:*` header.  \n  \n> [!NOTE]\n>  The use of the `vary:*` header can disable all client caching.  \n  \n This is a convenience method to affect the <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> property. Passing `true` to the method directs the <xref:System.Web.HttpCachePolicy> to ignore the * value for the <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> property.  \n  \n <xref:System.Web.HttpCachePolicy.SetOmitVaryStar%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,310],"content":"This method allows you to prevent the output ached from adding a `vary:*` header to the outgoing response when the cached response varies by parameter. This is useful for clients varying caching by query string because most clients will automatically vary by query string without requiring the `vary:*` header.","nodes":[{"content":"This method allows you to prevent the output ached from adding a <ph id=\"ph1\">`vary:*`</ph> header to the outgoing response when the cached response varies by parameter.","pos":[0,151],"source":"This method allows you to prevent the output ached from adding a `vary:*` header to the outgoing response when the cached response varies by parameter."},{"content":"This is useful for clients varying caching by query string because most clients will automatically vary by query string without requiring the <ph id=\"ph1\">`vary:*`</ph> header.","pos":[152,310],"source":" This is useful for clients varying caching by query string because most clients will automatically vary by query string without requiring the `vary:*` header."}]},{"pos":[318,391],"content":"[!NOTE]\n The use of the `vary:*` header can disable all client caching.","leadings":["","> "],"nodes":[{"content":"The use of the <ph id=\"ph1\">`vary:*`</ph> header can disable all client caching.","pos":[9,71],"source":" The use of the `vary:*` header can disable all client caching."}]},{"pos":[398,667],"content":"This is a convenience method to affect the <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> property. Passing `true` to the method directs the <xref:System.Web.HttpCachePolicy> to ignore the * value for the <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> property.","nodes":[{"content":"This is a convenience method to affect the <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByHeaders%2A&gt;</ph> property.","pos":[0,103],"source":"This is a convenience method to affect the <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> property."},{"content":"Passing <ph id=\"ph1\">`true`</ph> to the method directs the <ph id=\"ph2\">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> to ignore the * value for the <ph id=\"ph3\">&lt;xref:System.Web.HttpCachePolicy.VaryByHeaders%2A&gt;</ph> property.","pos":[104,269],"source":" Passing `true` to the method directs the <xref:System.Web.HttpCachePolicy> to ignore the * value for the <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> property."}]},{"pos":[674,894],"content":"<xref:System.Web.HttpCachePolicy.SetOmitVaryStar%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetOmitVaryStar%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,101],"source":"<xref:System.Web.HttpCachePolicy.SetOmitVaryStar%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[103,220],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[60383,61287],"yaml":true,"extradata":"MT"},{"content":"`true` to direct the <xref href=\"System.Web.HttpCachePolicy\"></xref> to not use the * value for its <xref href=\"System.Web.HttpCachePolicy.VaryByHeaders\"></xref> property; otherwise, `false`.","nodes":[{"pos":[0,191],"content":"<ph id=\"ph1\">`true`</ph> to direct the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpCachePolicy\"&gt;&lt;/xref&gt;</ph> to not use the * value for its <ph id=\"ph3\">&lt;xref href=\"System.Web.HttpCachePolicy.VaryByHeaders\"&gt;&lt;/xref&gt;</ph> property; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` to direct the <xref href=\"System.Web.HttpCachePolicy\"></xref> to not use the * value for its <xref href=\"System.Web.HttpCachePolicy.VaryByHeaders\"></xref> property; otherwise, `false`."}],"pos":[61428,61622],"yaml":true},{"content":"Sets the `Cache-Control: s-maxage` HTTP header based on the specified time span.","nodes":[{"pos":[0,80],"content":"Sets the <ph id=\"ph1\">`Cache-Control: s-maxage`</ph> HTTP header based on the specified time span.","source":"Sets the `Cache-Control: s-maxage` HTTP header based on the specified time span."}],"pos":[62659,62742],"yaml":true},{"content":"The <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> method does not use sliding expiration and will fail if the expiration date violates the principle of restrictiveness.  \n  \n <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,174],"content":"The <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> method does not use sliding expiration and will fail if the expiration date violates the principle of restrictiveness.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A&gt;</ph> method does not use sliding expiration and will fail if the expiration date violates the principle of restrictiveness.","pos":[0,174],"source":"The <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> method does not use sliding expiration and will fail if the expiration date violates the principle of restrictiveness."}]},{"pos":[181,400],"content":"<xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,100],"source":"<xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[102,219],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[62753,63158],"yaml":true,"extradata":"MT"},{"content":"The time span used to set the `Cache-Control: s-maxage` header.","nodes":[{"pos":[0,63],"content":"The time span used to set the <ph id=\"ph1\">`Cache-Control: s-maxage`</ph> header.","source":"The time span used to set the `Cache-Control: s-maxage` header."}],"pos":[63806,63872],"yaml":true},{"content":"<code>delta</code> is less than 0.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;delta&lt;/code&gt;</ph> is less than 0.","source":"<code>delta</code> is less than 0."}],"pos":[64055,64090],"yaml":true},{"content":"Sets the `Cache-Control` HTTP header to either the `must-revalidate` or the `proxy-revalidate` directives based on the supplied enumeration value.","nodes":[{"pos":[0,146],"content":"Sets the <ph id=\"ph1\">`Cache-Control`</ph> HTTP header to either the <ph id=\"ph2\">`must-revalidate`</ph> or the <ph id=\"ph3\">`proxy-revalidate`</ph> directives based on the supplied enumeration value.","source":"Sets the `Cache-Control` HTTP header to either the `must-revalidate` or the `proxy-revalidate` directives based on the supplied enumeration value."}],"pos":[65150,65297],"yaml":true},{"content":"The default, which is equivalent to <xref:System.Web.HttpCacheRevalidation.None>, is to send neither directive in a header unless explicitly specified by this method.  \n  \n <xref:System.Web.HttpCachePolicy.SetRevalidation%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,166],"content":"The default, which is equivalent to <xref:System.Web.HttpCacheRevalidation.None>, is to send neither directive in a header unless explicitly specified by this method.","nodes":[{"content":"The default, which is equivalent to <ph id=\"ph1\">&lt;xref:System.Web.HttpCacheRevalidation.None&gt;</ph>, is to send neither directive in a header unless explicitly specified by this method.","pos":[0,166],"source":"The default, which is equivalent to <xref:System.Web.HttpCacheRevalidation.None>, is to send neither directive in a header unless explicitly specified by this method."}]},{"pos":[173,393],"content":"<xref:System.Web.HttpCachePolicy.SetRevalidation%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetRevalidation%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,101],"source":"<xref:System.Web.HttpCachePolicy.SetRevalidation%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[103,220],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[65308,65706],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpCacheRevalidation\"></xref> enumeration value to set the `Cache-Control` header to.","nodes":[{"pos":[0,113],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCacheRevalidation\"&gt;&lt;/xref&gt;</ph> enumeration value to set the <ph id=\"ph2\">`Cache-Control`</ph> header to.","source":"The <xref href=\"System.Web.HttpCacheRevalidation\"></xref> enumeration value to set the `Cache-Control` header to."}],"pos":[66411,66525],"yaml":true},{"content":"<code>revalidation</code> is not one of the enumeration values.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;revalidation&lt;/code&gt;</ph> is not one of the enumeration values.","source":"<code>revalidation</code> is not one of the enumeration values."}],"pos":[66709,66773],"yaml":true},{"content":"Sets cache expiration to from absolute to sliding.","nodes":[{"pos":[0,50],"content":"Sets cache expiration to from absolute to sliding.","nodes":[{"content":"Sets cache expiration to from absolute to sliding.","pos":[0,50]}]}],"pos":[67767,67818],"yaml":true},{"content":"When cache expiration is set to sliding, the `Cache-Control` HTTP header will be renewed with each response. This expiration mode is identical to the IIS configuration option to add an expiration header to all output set relative to the current time.  \n  \n If you explicitly set sliding expiration to off (`false`), that setting will be preserved and any attempts to enable sliding expiration will silently fail. This method does not directly map to an HTTP header. It is used by subsequent modules or worker requests to set origin-server cache policy.  \n  \n <xref:System.Web.HttpCachePolicy.SetSlidingExpiration%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,250],"content":"When cache expiration is set to sliding, the `Cache-Control` HTTP header will be renewed with each response. This expiration mode is identical to the IIS configuration option to add an expiration header to all output set relative to the current time.","nodes":[{"content":"When cache expiration is set to sliding, the <ph id=\"ph1\">`Cache-Control`</ph> HTTP header will be renewed with each response.","pos":[0,108],"source":"When cache expiration is set to sliding, the `Cache-Control` HTTP header will be renewed with each response."},{"content":"This expiration mode is identical to the IIS configuration option to add an expiration header to all output set relative to the current time.","pos":[109,250]}]},{"pos":[257,552],"content":"If you explicitly set sliding expiration to off (`false`), that setting will be preserved and any attempts to enable sliding expiration will silently fail. This method does not directly map to an HTTP header. It is used by subsequent modules or worker requests to set origin-server cache policy.","nodes":[{"content":"If you explicitly set sliding expiration to off (<ph id=\"ph1\">`false`</ph>), that setting will be preserved and any attempts to enable sliding expiration will silently fail.","pos":[0,155],"source":"If you explicitly set sliding expiration to off (`false`), that setting will be preserved and any attempts to enable sliding expiration will silently fail."},{"content":"This method does not directly map to an HTTP header.","pos":[156,208]},{"content":"It is used by subsequent modules or worker requests to set origin-server cache policy.","pos":[209,295]}]},{"pos":[559,784],"content":"<xref:System.Web.HttpCachePolicy.SetSlidingExpiration%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetSlidingExpiration%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,106],"source":"<xref:System.Web.HttpCachePolicy.SetSlidingExpiration%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[108,225],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[67829,68620],"yaml":true,"extradata":"MT"},{"content":"`true` or `false`.","nodes":[{"pos":[0,18],"content":"<ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>.","source":"`true` or `false`."}],"pos":[69247,69268],"yaml":true},{"content":"Specifies whether the ASP.NET cache should ignore HTTP `Cache-Control` headers sent by the client that invalidate the cache.","nodes":[{"pos":[0,124],"content":"Specifies whether the ASP.NET cache should ignore HTTP <ph id=\"ph1\">`Cache-Control`</ph> headers sent by the client that invalidate the cache.","source":"Specifies whether the ASP.NET cache should ignore HTTP `Cache-Control` headers sent by the client that invalidate the cache."}],"pos":[70340,70465],"yaml":true},{"content":"The <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> method is set to `true` automatically when the high-level `<%@ OutputCache … %>` page directive is used.  \n  \n This method is provided because some browsers, when refreshing a page view, send HTTP cache invalidation headers to the Web server and evict the page from the cache. When the `validUntilExpires` parameter is `true`, ASP.NET ignores cache invalidation headers and the page remains in the cache until it expires.  \n  \n <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,166],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A&gt;</ph> method is set to <ph id=\"ph2\">`true`</ph> automatically when the high-level <ph id=\"ph3\">`&lt;%@ OutputCache … %&gt;`</ph> page directive is used.","source":"The <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> method is set to `true` automatically when the high-level `<%@ OutputCache … %>` page directive is used."},{"pos":[173,483],"content":"This method is provided because some browsers, when refreshing a page view, send HTTP cache invalidation headers to the Web server and evict the page from the cache. When the `validUntilExpires` parameter is `true`, ASP.NET ignores cache invalidation headers and the page remains in the cache until it expires.","nodes":[{"content":"This method is provided because some browsers, when refreshing a page view, send HTTP cache invalidation headers to the Web server and evict the page from the cache.","pos":[0,165]},{"content":"When the <ph id=\"ph1\">`validUntilExpires`</ph> parameter is <ph id=\"ph2\">`true`</ph>, ASP.NET ignores cache invalidation headers and the page remains in the cache until it expires.","pos":[166,310],"source":" When the `validUntilExpires` parameter is `true`, ASP.NET ignores cache invalidation headers and the page remains in the cache until it expires."}]},{"pos":[490,715],"content":"<xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,106],"source":"<xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[108,225],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[70476,71198],"yaml":true,"extradata":"MT"},{"content":"`true` if the cache ignores `Cache-Control` invalidation headers; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if the cache ignores <ph id=\"ph2\">`Cache-Control`</ph> invalidation headers; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the cache ignores `Cache-Control` invalidation headers; otherwise, `false`."}],"pos":[72054,72142],"yaml":true},{"content":"Specifies a custom text string to vary cached output responses by.","nodes":[{"pos":[0,66],"content":"Specifies a custom text string to vary cached output responses by.","nodes":[{"content":"Specifies a custom text string to vary cached output responses by.","pos":[0,66]}]}],"pos":[73178,73245],"yaml":true},{"content":"<xref:System.Web.HttpCachePolicy.SetVaryByCustom%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,220],"content":"<xref:System.Web.HttpCachePolicy.SetVaryByCustom%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.SetVaryByCustom%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,101],"source":"<xref:System.Web.HttpCachePolicy.SetVaryByCustom%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[103,220],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[73256,73477],"yaml":true,"extradata":"MT"},{"content":"The text string to vary cached output by.","nodes":[{"pos":[0,41],"content":"The text string to vary cached output by.","nodes":[{"content":"The text string to vary cached output by.","pos":[0,41]}]}],"pos":[74231,74273],"yaml":true},{"content":"<code>custom</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;custom&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>custom</code> is `null`."}],"pos":[74445,74476],"yaml":true},{"content":"The <xref href=\"System.Web.HttpCachePolicy.SetVaryByCustom(System.String)\"></xref> method has already been called.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCachePolicy.SetVaryByCustom(System.String)\"&gt;&lt;/xref&gt;</ph> method has already been called.","source":"The <xref href=\"System.Web.HttpCachePolicy.SetVaryByCustom(System.String)\"></xref> method has already been called."}],"pos":[74586,74701],"yaml":true},{"content":"Gets or sets the timestamp in Coordinated Universal Iime (UTC) for the <xref href=\"System.Web.HttpCachePolicy\"></xref>.","nodes":[{"pos":[0,119],"content":"Gets or sets the timestamp in Coordinated Universal Iime (UTC) for the <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCachePolicy\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the timestamp in Coordinated Universal Iime (UTC) for the <xref href=\"System.Web.HttpCachePolicy\"></xref>."}],"pos":[75616,75736],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> for the <xref href=\"System.Web.HttpCachePolicy\"></xref>.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.Web.HttpCachePolicy\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime\"></xref> for the <xref href=\"System.Web.HttpCachePolicy\"></xref>."}],"pos":[75868,75966],"yaml":true},{"content":"Gets the list of `Content-Encoding` headers that will be used to vary the output cache.","nodes":[{"pos":[0,87],"content":"Gets the list of <ph id=\"ph1\">`Content-Encoding`</ph> headers that will be used to vary the output cache.","source":"Gets the list of `Content-Encoding` headers that will be used to vary the output cache."}],"pos":[76754,76842],"yaml":true},{"content":"The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property returns a list of Content-Encoding headers that represent compression schemes to vary the output cache by. Caching dynamically compressed responses means that the cost of compression is incurred only one time, during the first request for the resource.  \n  \n The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property is used with the `Accept-Encoding` header of a request to determine how to serve cached responses for different content encodings that are dynamically compressed. The Accept-Encoding header lists the encodings that the client can decompress.  \n  \n When you set the cache to vary by content encoding, it lets the response vary indirectly by the value in the `Accept-Encoding` header. When a request is processed, the `Accept-Encoding` header is checked and the first acceptable encoding is identified and used to take one of the following actions:  \n  \n-   If a matching encoding is found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list and a cached response exists, the cached response is sent.  \n  \n-   If a matching encoding is found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list but a cached response does not exist, a response is generated and inserted into the cache.  \n  \n-   If a matching encoding is not found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list, the cache is searched for a non-encoded response, also referred to as the identity response. If the non-encoded response is found, it is sent. Otherwise, a new non-encoded response is generated, sent, and stored in the cache.  \n  \n For more information about the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property, see \"RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1,\" which is available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125). Information about content encodings is in section 14, \"Header Field Definitions.\"  \n  \n You can set the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property by using the `VaryByContentEncodings` attribute of the  directive. You can also add a cache profile to the  element in the Web.config file.  \n  \n <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,325],"content":"The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property returns a list of Content-Encoding headers that represent compression schemes to vary the output cache by. Caching dynamically compressed responses means that the cost of compression is incurred only one time, during the first request for the resource.","nodes":[{"content":"The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property returns a list of Content-Encoding headers that represent compression schemes to vary the output cache by. Caching dynamically compressed responses means that the cost of compression is incurred only one time, during the first request for the resource.","pos":[0,325],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt;</ph> property returns a list of Content-Encoding headers that represent compression schemes to vary the output cache by.","pos":[0,179],"source":"The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property returns a list of Content-Encoding headers that represent compression schemes to vary the output cache by."},{"content":"Caching dynamically compressed responses means that the cost of compression is incurred only one time, during the first request for the resource.","pos":[180,325]}]}]},{"pos":[332,646],"content":"The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property is used with the `Accept-Encoding` header of a request to determine how to serve cached responses for different content encodings that are dynamically compressed. The Accept-Encoding header lists the encodings that the client can decompress.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt;</ph> property is used with the <ph id=\"ph2\">`Accept-Encoding`</ph> header of a request to determine how to serve cached responses for different content encodings that are dynamically compressed.","pos":[0,235],"source":"The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property is used with the `Accept-Encoding` header of a request to determine how to serve cached responses for different content encodings that are dynamically compressed."},{"content":"The Accept-Encoding header lists the encodings that the client can decompress.","pos":[236,314]}]},{"pos":[653,951],"content":"When you set the cache to vary by content encoding, it lets the response vary indirectly by the value in the `Accept-Encoding` header. When a request is processed, the `Accept-Encoding` header is checked and the first acceptable encoding is identified and used to take one of the following actions:","nodes":[{"content":"When you set the cache to vary by content encoding, it lets the response vary indirectly by the value in the <ph id=\"ph1\">`Accept-Encoding`</ph> header.","pos":[0,134],"source":"When you set the cache to vary by content encoding, it lets the response vary indirectly by the value in the `Accept-Encoding` header."},{"content":"When a request is processed, the <ph id=\"ph1\">`Accept-Encoding`</ph> header is checked and the first acceptable encoding is identified and used to take one of the following actions:","pos":[135,298],"source":" When a request is processed, the `Accept-Encoding` header is checked and the first acceptable encoding is identified and used to take one of the following actions:"}]},{"pos":[961,1123],"content":"If a matching encoding is found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list and a cached response exists, the cached response is sent.","nodes":[{"content":"If a matching encoding is found in the <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt;</ph> list and a cached response exists, the cached response is sent.","pos":[0,162],"source":"If a matching encoding is found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list and a cached response exists, the cached response is sent."}]},{"pos":[1133,1327],"content":"If a matching encoding is found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list but a cached response does not exist, a response is generated and inserted into the cache.","nodes":[{"content":"If a matching encoding is found in the <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt;</ph> list but a cached response does not exist, a response is generated and inserted into the cache.","pos":[0,194],"source":"If a matching encoding is found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list but a cached response does not exist, a response is generated and inserted into the cache."}]},{"pos":[1337,1671],"content":"If a matching encoding is not found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list, the cache is searched for a non-encoded response, also referred to as the identity response. If the non-encoded response is found, it is sent. Otherwise, a new non-encoded response is generated, sent, and stored in the cache.","nodes":[{"content":"If a matching encoding is not found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list, the cache is searched for a non-encoded response, also referred to as the identity response. If the non-encoded response is found, it is sent. Otherwise, a new non-encoded response is generated, sent, and stored in the cache.","pos":[0,334],"nodes":[{"content":"If a matching encoding is not found in the <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt;</ph> list, the cache is searched for a non-encoded response, also referred to as the identity response.","pos":[0,201],"source":"If a matching encoding is not found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list, the cache is searched for a non-encoded response, also referred to as the identity response."},{"content":"If the non-encoded response is found, it is sent.","pos":[202,251]},{"content":"Otherwise, a new non-encoded response is generated, sent, and stored in the cache.","pos":[252,334]}]}]},{"pos":[1678,2033],"content":"For more information about the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property, see \"RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1,\" which is available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125). Information about content encodings is in section 14, \"Header Field Definitions.\"","nodes":[{"content":"For more information about the <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt;</ph> property, see \"RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1,\" which is available on the <bpt id=\"p1\">[</bpt>World Wide Web Consortium (W3C) Web site<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>.","pos":[0,273],"source":"For more information about the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property, see \"RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1,\" which is available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125)."},{"content":"Information about content encodings is in section 14, \"Header Field Definitions.\"","pos":[274,355]}]},{"pos":[2040,2264],"content":"You can set the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property by using the `VaryByContentEncodings` attribute of the  directive. You can also add a cache profile to the  element in the Web.config file.","nodes":[{"content":"You can set the <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt;</ph> property by using the <ph id=\"ph2\">`VaryByContentEncodings`</ph> attribute of the  directive.","pos":[0,151],"source":"You can set the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property by using the `VaryByContentEncodings` attribute of the  directive."},{"content":"You can also add a cache profile to the  element in the Web.config file.","pos":[152,224]}]},{"pos":[2271,2498],"content":"<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,108],"source":"<xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[110,227],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[76853,79374],"yaml":true,"extradata":"MT"},{"content":"An object that specifies which `Content-Encoding` headers are used to select the cached response.","nodes":[{"pos":[0,97],"content":"An object that specifies which <ph id=\"ph1\">`Content-Encoding`</ph> headers are used to select the cached response.","source":"An object that specifies which `Content-Encoding` headers are used to select the cached response."}],"pos":[80468,80566],"yaml":true},{"content":"Gets the list of all HTTP headers that will be used to vary cache output.","nodes":[{"pos":[0,73],"content":"Gets the list of all HTTP headers that will be used to vary cache output.","nodes":[{"content":"Gets the list of all HTTP headers that will be used to vary cache output.","pos":[0,73]}]}],"pos":[81525,81599],"yaml":true},{"content":"When a cached item has several vary headers, a separate version of the requested document is available from the cache for each HTTP header type.  \n  \n <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,144],"content":"When a cached item has several vary headers, a separate version of the requested document is available from the cache for each HTTP header type.","nodes":[{"content":"When a cached item has several vary headers, a separate version of the requested document is available from the cache for each HTTP header type.","pos":[0,144]}]},{"pos":[151,369],"content":"<xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByHeaders%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,99],"source":"<xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[101,218],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[81610,81984],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Web.HttpCacheVaryByHeaders\"></xref> that specifies which HTTP headers are used to select the cached response.","nodes":[{"pos":[0,131],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCacheVaryByHeaders\"&gt;&lt;/xref&gt;</ph> that specifies which HTTP headers are used to select the cached response.","source":"An <xref href=\"System.Web.HttpCacheVaryByHeaders\"></xref> that specifies which HTTP headers are used to select the cached response."}],"pos":[82148,82280],"yaml":true},{"content":"Gets the list of parameters received by an HTTP `GET` or HTTP `POST` that affect caching.","nodes":[{"pos":[0,89],"content":"Gets the list of parameters received by an HTTP <ph id=\"ph1\">`GET`</ph> or HTTP <ph id=\"ph2\">`POST`</ph> that affect caching.","source":"Gets the list of parameters received by an HTTP `GET` or HTTP `POST` that affect caching."}],"pos":[83224,83314],"yaml":true},{"content":"A separate version of the requested document is available from the cache for each named parameter in the <xref:System.Web.HttpCachePolicy.VaryByParams%2A> collection.  \n  \n <xref:System.Web.HttpCachePolicy.VaryByParams%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"pos":[0,166],"content":"A separate version of the requested document is available from the cache for each named parameter in the <xref:System.Web.HttpCachePolicy.VaryByParams%2A> collection.","nodes":[{"content":"A separate version of the requested document is available from the cache for each named parameter in the <ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByParams%2A&gt;</ph> collection.","pos":[0,166],"source":"A separate version of the requested document is available from the cache for each named parameter in the <xref:System.Web.HttpCachePolicy.VaryByParams%2A> collection."}]},{"pos":[173,390],"content":"<xref:System.Web.HttpCachePolicy.VaryByParams%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.HttpCachePolicy.VaryByParams%2A&gt;</ph> is introduced in the .NET Framework version 3.5.","pos":[0,98],"source":"<xref:System.Web.HttpCachePolicy.VaryByParams%2A> is introduced in the .NET Framework version 3.5."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Versions and Dependencies<ept id=\"p1\">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.","pos":[100,217],"source":"  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md)."}]}],"pos":[83325,83720],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Web.HttpCacheVaryByParams\"></xref> that specifies which cache-control headers are used to select the cached response.","nodes":[{"pos":[0,139],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpCacheVaryByParams\"&gt;&lt;/xref&gt;</ph> that specifies which cache-control headers are used to select the cached response.","source":"An <xref href=\"System.Web.HttpCacheVaryByParams\"></xref> that specifies which cache-control headers are used to select the cached response."}],"pos":[83881,84021],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.HttpCachePolicy\n  commentId: T:System.Web.HttpCachePolicy\n  id: HttpCachePolicy\n  children:\n  - System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)\n  - System.Web.HttpCachePolicy.AppendCacheExtension(System.String)\n  - System.Web.HttpCachePolicy.GetCacheability\n  - System.Web.HttpCachePolicy.GetCacheExtensions\n  - System.Web.HttpCachePolicy.GetETag\n  - System.Web.HttpCachePolicy.GetETagFromFileDependencies\n  - System.Web.HttpCachePolicy.GetExpires\n  - System.Web.HttpCachePolicy.GetIgnoreRangeRequests\n  - System.Web.HttpCachePolicy.GetLastModifiedFromFileDependencies\n  - System.Web.HttpCachePolicy.GetMaxAge\n  - System.Web.HttpCachePolicy.GetNoServerCaching\n  - System.Web.HttpCachePolicy.GetNoStore\n  - System.Web.HttpCachePolicy.GetNoTransforms\n  - System.Web.HttpCachePolicy.GetOmitVaryStar\n  - System.Web.HttpCachePolicy.GetProxyMaxAge\n  - System.Web.HttpCachePolicy.GetRevalidation\n  - System.Web.HttpCachePolicy.GetUtcLastModified\n  - System.Web.HttpCachePolicy.GetVaryByCustom\n  - System.Web.HttpCachePolicy.HasSlidingExpiration\n  - System.Web.HttpCachePolicy.IsModified\n  - System.Web.HttpCachePolicy.IsValidUntilExpires\n  - System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory(System.Boolean)\n  - System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability)\n  - System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability,System.String)\n  - System.Web.HttpCachePolicy.SetETag(System.String)\n  - System.Web.HttpCachePolicy.SetETagFromFileDependencies\n  - System.Web.HttpCachePolicy.SetExpires(System.DateTime)\n  - System.Web.HttpCachePolicy.SetLastModified(System.DateTime)\n  - System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies\n  - System.Web.HttpCachePolicy.SetMaxAge(System.TimeSpan)\n  - System.Web.HttpCachePolicy.SetNoServerCaching\n  - System.Web.HttpCachePolicy.SetNoStore\n  - System.Web.HttpCachePolicy.SetNoTransforms\n  - System.Web.HttpCachePolicy.SetOmitVaryStar(System.Boolean)\n  - System.Web.HttpCachePolicy.SetProxyMaxAge(System.TimeSpan)\n  - System.Web.HttpCachePolicy.SetRevalidation(System.Web.HttpCacheRevalidation)\n  - System.Web.HttpCachePolicy.SetSlidingExpiration(System.Boolean)\n  - System.Web.HttpCachePolicy.SetValidUntilExpires(System.Boolean)\n  - System.Web.HttpCachePolicy.SetVaryByCustom(System.String)\n  - System.Web.HttpCachePolicy.UtcTimestampCreated\n  - System.Web.HttpCachePolicy.VaryByContentEncodings\n  - System.Web.HttpCachePolicy.VaryByHeaders\n  - System.Web.HttpCachePolicy.VaryByParams\n  langs:\n  - csharp\n  name: HttpCachePolicy\n  nameWithType: HttpCachePolicy\n  fullName: System.Web.HttpCachePolicy\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Contains methods for setting cache-specific HTTP headers and for controlling the ASP.NET page output cache.\n  remarks: 'For background information about HTTP headers and controlling caching, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).'\n  syntax:\n    content: public sealed class HttpCachePolicy\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)\n  commentId: M:System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)\n  id: AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: AddValidationCallback(HttpCacheValidateHandler, Object)\n  nameWithType: HttpCachePolicy.AddValidationCallback(HttpCacheValidateHandler, Object)\n  fullName: HttpCachePolicy.AddValidationCallback(HttpCacheValidateHandler, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Registers a validation callback for the current response.\n  remarks: \"The<xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> method provides a mechanism to check the response programmatically in the cache before the response is returned to the client by the output cache.  \\n  \\n Before the response is served from the Web server cache, all registered handlers are queried to ensure resource validity. If any handler sets a flag indicating that the cached response is not valid, the entry is marked as not valid and expelled from the cache. In this case, as well as when any handler indicates that the cached response should be ignored for this request, the request is then handled as if it were a cache miss.  \\n  \\n <xref:System.Web.HttpCachePolicy.AddValidationCallback%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how to add a delegate to validate a request based on query string values.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[Cache Validation Callback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache validation callback/CS/ValidationCallbackcs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[Cache Validation Callback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache validation callback/VB/ValidationCallbackvb.aspx#1)]  -->\"\n  syntax:\n    content: public void AddValidationCallback (System.Web.HttpCacheValidateHandler handler, object data);\n    parameters:\n    - id: handler\n      type: System.Web.HttpCacheValidateHandler\n      description: The <xref href=\"System.Web.HttpCacheValidateHandler\"></xref> value.\n    - id: data\n      type: System.Object\n      description: The arbitrary user-supplied data that is passed back to the <xref href=\"System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)\"></xref> delegate.\n  overload: System.Web.HttpCachePolicy.AddValidationCallback*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The specified <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.AppendCacheExtension(System.String)\n  commentId: M:System.Web.HttpCachePolicy.AppendCacheExtension(System.String)\n  id: AppendCacheExtension(System.String)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: AppendCacheExtension(String)\n  nameWithType: HttpCachePolicy.AppendCacheExtension(String)\n  fullName: HttpCachePolicy.AppendCacheExtension(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Appends the specified text to the `Cache-Control` HTTP header.\n  remarks: \"If the browser does not recognize cache control directives or extensions, the browser must ignore the unrecognized terms. For more information, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).  \\n  \\n <xref:System.Web.HttpCachePolicy.AppendCacheExtension%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates the use of a cache-control extension supported by Internet Explorer. The server is indicating to the browser that the content will not change for one hour (`pre-check=3600`) and instructs it to retrieve the content directly from the local cache. However, if the content is modified by the server and the page is requested by the user within a fifteen-minute (`post-check= 900`) to one-hour period, the browser displays the information found in the local cache but also performs a background check and optional fetch of the new content on the server.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.AppendCacheExtension Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.AppendCacheExtension Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.AppendCacheExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.AppendCacheExtension Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void AppendCacheExtension (string extension);\n    parameters:\n    - id: extension\n      type: System.String\n      description: The text to append to the `Cache-Control` header.\n  overload: System.Web.HttpCachePolicy.AppendCacheExtension*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>extension</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetCacheability\n  commentId: M:System.Web.HttpCachePolicy.GetCacheability\n  id: GetCacheability\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetCacheability()\n  nameWithType: HttpCachePolicy.GetCacheability()\n  fullName: HttpCachePolicy.GetCacheability()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the cache-control directive.\n  syntax:\n    content: public System.Web.HttpCacheability GetCacheability ();\n    parameters: []\n    return:\n      type: System.Web.HttpCacheability\n      description: The cache-control directive.\n  overload: System.Web.HttpCachePolicy.GetCacheability*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetCacheExtensions\n  commentId: M:System.Web.HttpCachePolicy.GetCacheExtensions\n  id: GetCacheExtensions\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetCacheExtensions()\n  nameWithType: HttpCachePolicy.GetCacheExtensions()\n  fullName: HttpCachePolicy.GetCacheExtensions()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the cache extensions.\n  syntax:\n    content: public string GetCacheExtensions ();\n    parameters: []\n    return:\n      type: System.String\n      description: The cache extensions.\n  overload: System.Web.HttpCachePolicy.GetCacheExtensions*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetETag\n  commentId: M:System.Web.HttpCachePolicy.GetETag\n  id: GetETag\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetETag()\n  nameWithType: HttpCachePolicy.GetETag()\n  fullName: HttpCachePolicy.GetETag()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the ETag.\n  syntax:\n    content: public string GetETag ();\n    parameters: []\n    return:\n      type: System.String\n      description: The ETag.\n  overload: System.Web.HttpCachePolicy.GetETag*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetETagFromFileDependencies\n  commentId: M:System.Web.HttpCachePolicy.GetETagFromFileDependencies\n  id: GetETagFromFileDependencies\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetETagFromFileDependencies()\n  nameWithType: HttpCachePolicy.GetETagFromFileDependencies()\n  fullName: HttpCachePolicy.GetETagFromFileDependencies()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the status indicating whether the `ETag` header has been set  based on the timestamps of the file   dependencies of the handler.\n  syntax:\n    content: public bool GetETagFromFileDependencies ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the `ETag` header has been set  based on the timestamps of the file   dependencies of the handler; otherwise `false`.'\n  overload: System.Web.HttpCachePolicy.GetETagFromFileDependencies*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetExpires\n  commentId: M:System.Web.HttpCachePolicy.GetExpires\n  id: GetExpires\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetExpires()\n  nameWithType: HttpCachePolicy.GetExpires()\n  fullName: HttpCachePolicy.GetExpires()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the expire header.\n  syntax:\n    content: public DateTime GetExpires ();\n    parameters: []\n    return:\n      type: System.DateTime\n      description: The expire header.\n  overload: System.Web.HttpCachePolicy.GetExpires*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetIgnoreRangeRequests\n  commentId: M:System.Web.HttpCachePolicy.GetIgnoreRangeRequests\n  id: GetIgnoreRangeRequests\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetIgnoreRangeRequests()\n  nameWithType: HttpCachePolicy.GetIgnoreRangeRequests()\n  fullName: HttpCachePolicy.GetIgnoreRangeRequests()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the status of ignore range requests.\n  syntax:\n    content: public bool GetIgnoreRangeRequests ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if range requests are ignored; otherwise `false`.'\n  overload: System.Web.HttpCachePolicy.GetIgnoreRangeRequests*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetLastModifiedFromFileDependencies\n  commentId: M:System.Web.HttpCachePolicy.GetLastModifiedFromFileDependencies\n  id: GetLastModifiedFromFileDependencies\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetLastModifiedFromFileDependencies()\n  nameWithType: HttpCachePolicy.GetLastModifiedFromFileDependencies()\n  fullName: HttpCachePolicy.GetLastModifiedFromFileDependencies()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the status of the Last-Modified headerset to base on the timestamps of the   file dependencies of the handler.\n  syntax:\n    content: public bool GetLastModifiedFromFileDependencies ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the Last-Modified header  is set to base on the timestamps of the   file dependencies of the handler; otherwise `false`.'\n  overload: System.Web.HttpCachePolicy.GetLastModifiedFromFileDependencies*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetMaxAge\n  commentId: M:System.Web.HttpCachePolicy.GetMaxAge\n  id: GetMaxAge\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetMaxAge()\n  nameWithType: HttpCachePolicy.GetMaxAge()\n  fullName: HttpCachePolicy.GetMaxAge()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the cache-control max age.\n  syntax:\n    content: public TimeSpan GetMaxAge ();\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: The cache-control max age.\n  overload: System.Web.HttpCachePolicy.GetMaxAge*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetNoServerCaching\n  commentId: M:System.Web.HttpCachePolicy.GetNoServerCaching\n  id: GetNoServerCaching\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetNoServerCaching()\n  nameWithType: HttpCachePolicy.GetNoServerCaching()\n  fullName: HttpCachePolicy.GetNoServerCaching()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the status of server caching for the current response.\n  syntax:\n    content: public bool GetNoServerCaching ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if server caching is stopped for the current response; otherwise `false`.'\n  overload: System.Web.HttpCachePolicy.GetNoServerCaching*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetNoStore\n  commentId: M:System.Web.HttpCachePolicy.GetNoStore\n  id: GetNoStore\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetNoStore()\n  nameWithType: HttpCachePolicy.GetNoStore()\n  fullName: HttpCachePolicy.GetNoStore()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the status of the store.\n  syntax:\n    content: public bool GetNoStore ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if no store is set; otherwise `false`.'\n  overload: System.Web.HttpCachePolicy.GetNoStore*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetNoTransforms\n  commentId: M:System.Web.HttpCachePolicy.GetNoTransforms\n  id: GetNoTransforms\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetNoTransforms()\n  nameWithType: HttpCachePolicy.GetNoTransforms()\n  fullName: HttpCachePolicy.GetNoTransforms()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the status of the HTTP No-Transform Directive.\n  remarks: Enables the sending of the Cache-Control HTTP header.\n  syntax:\n    content: public bool GetNoTransforms ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the HTTP No-Transform Directive is set; otherwise `false`.'\n  overload: System.Web.HttpCachePolicy.GetNoTransforms*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetOmitVaryStar\n  commentId: M:System.Web.HttpCachePolicy.GetOmitVaryStar\n  id: GetOmitVaryStar\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetOmitVaryStar()\n  nameWithType: HttpCachePolicy.GetOmitVaryStar()\n  fullName: HttpCachePolicy.GetOmitVaryStar()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the status of the `vary:*` header.\n  syntax:\n    content: public int GetOmitVaryStar ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: '`true` if the `vary:*` header is omitted; otherwise `false`.'\n  overload: System.Web.HttpCachePolicy.GetOmitVaryStar*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetProxyMaxAge\n  commentId: M:System.Web.HttpCachePolicy.GetProxyMaxAge\n  id: GetProxyMaxAge\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetProxyMaxAge()\n  nameWithType: HttpCachePolicy.GetProxyMaxAge()\n  fullName: HttpCachePolicy.GetProxyMaxAge()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: 'Gets the HTTP Cache-Control: Proxy Max Age.'\n  syntax:\n    content: public TimeSpan GetProxyMaxAge ();\n    parameters: []\n    return:\n      type: System.TimeSpan\n      description: 'The HTTP Cache-Control: Proxy Max Age.'\n  overload: System.Web.HttpCachePolicy.GetProxyMaxAge*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetRevalidation\n  commentId: M:System.Web.HttpCachePolicy.GetRevalidation\n  id: GetRevalidation\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetRevalidation()\n  nameWithType: HttpCachePolicy.GetRevalidation()\n  fullName: HttpCachePolicy.GetRevalidation()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: 'Gets the Cache-Control: header to reflect either the must-revalidate or   proxy-revalidate directives.'\n  remarks: The default is to not send either of these directives unless explicitly enabled using this method.\n  syntax:\n    content: public System.Web.HttpCacheRevalidation GetRevalidation ();\n    parameters: []\n    return:\n      type: System.Web.HttpCacheRevalidation\n      description: 'The Cache-Control: header to reflect either the must-revalidate or   proxy-revalidate directives.'\n  overload: System.Web.HttpCachePolicy.GetRevalidation*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetUtcLastModified\n  commentId: M:System.Web.HttpCachePolicy.GetUtcLastModified\n  id: GetUtcLastModified\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetUtcLastModified()\n  nameWithType: HttpCachePolicy.GetUtcLastModified()\n  fullName: HttpCachePolicy.GetUtcLastModified()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the value of the `Last-Modified` HTTP header in Coordinated Universal Time (UTC).\n  syntax:\n    content: public DateTime GetUtcLastModified ();\n    parameters: []\n    return:\n      type: System.DateTime\n      description: The value of the `Last-Modified` HTTP header.\n  overload: System.Web.HttpCachePolicy.GetUtcLastModified*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.GetVaryByCustom\n  commentId: M:System.Web.HttpCachePolicy.GetVaryByCustom\n  id: GetVaryByCustom\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: GetVaryByCustom()\n  nameWithType: HttpCachePolicy.GetVaryByCustom()\n  fullName: HttpCachePolicy.GetVaryByCustom()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the custom string that is used to vary the HTTP caching.\n  syntax:\n    content: public string GetVaryByCustom ();\n    parameters: []\n    return:\n      type: System.String\n      description: The custom string for varying the HTTP caching.\n  overload: System.Web.HttpCachePolicy.GetVaryByCustom*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.HasSlidingExpiration\n  commentId: M:System.Web.HttpCachePolicy.HasSlidingExpiration\n  id: HasSlidingExpiration\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: HasSlidingExpiration()\n  nameWithType: HttpCachePolicy.HasSlidingExpiration()\n  fullName: HttpCachePolicy.HasSlidingExpiration()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a value which specifies whether the cache has a sliding expiration policy.\n  syntax:\n    content: public bool HasSlidingExpiration ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the the cache has a sliding expiration policy; otherwise, `false`.'\n  overload: System.Web.HttpCachePolicy.HasSlidingExpiration*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.IsModified\n  commentId: M:System.Web.HttpCachePolicy.IsModified\n  id: IsModified\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: IsModified()\n  nameWithType: HttpCachePolicy.IsModified()\n  fullName: HttpCachePolicy.IsModified()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a value which specifies whether the HTTP cache has been modified.\n  syntax:\n    content: public bool IsModified ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the the cache has been modified; otherwise, `false`.'\n  overload: System.Web.HttpCachePolicy.IsModified*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.IsValidUntilExpires\n  commentId: M:System.Web.HttpCachePolicy.IsValidUntilExpires\n  id: IsValidUntilExpires\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: IsValidUntilExpires()\n  nameWithType: HttpCachePolicy.IsValidUntilExpires()\n  fullName: HttpCachePolicy.IsValidUntilExpires()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets a value which specifies whether the ASP.NET cache should ignore HTTP `Cache-Control` headers sent by the client that invalidate the cache.\n  syntax:\n    content: public bool IsValidUntilExpires ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the the ASP.NET cache should ignore HTTP `Cache-Control` headers sent by the client; otherwise, `false`.'\n  overload: System.Web.HttpCachePolicy.IsValidUntilExpires*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory(System.Boolean)\n  commentId: M:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory(System.Boolean)\n  id: SetAllowResponseInBrowserHistory(System.Boolean)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetAllowResponseInBrowserHistory(Boolean)\n  nameWithType: HttpCachePolicy.SetAllowResponseInBrowserHistory(Boolean)\n  fullName: HttpCachePolicy.SetAllowResponseInBrowserHistory(Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Makes the response is available in the client browser History cache, regardless of the <xref href=\"System.Web.HttpCacheability\"></xref> setting made on the server, when the <code>allow</code> parameter is `true`.\n  remarks: \"When <xref:System.Web.HttpCacheability> is set to <xref:System.Web.HttpCacheability.NoCache> or <xref:System.Web.HttpCacheability.ServerAndNoCache> the `Expires` HTTP header is by default set to -1; this tells the client not to cache responses in the History folder, so that when you use the back/forward buttons the client requests a new version of the response each time. You can override this behavior by calling the <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> method with the `allow` parameter set to `true`.  \\n  \\n If <xref:System.Web.HttpCacheability> is set to values other than <xref:System.Web.HttpCacheability.NoCache> or <xref:System.Web.HttpCacheability.ServerAndNoCache>, calling the <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> method with either value for `allow` has no effect.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how to override the <xref:System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory%2A> method to direct the client to store the responses in its history in a custom <xref:System.Web.HttpCachePolicy>.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[HttpCachePolicySetAllowResponseInBrowserHistory#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicySetAllowResponseInBrowserHistory/CS/httpcachepolicy_setallowresponseinbrowserhistorycs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[HttpCachePolicySetAllowResponseInBrowserHistory#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicySetAllowResponseInBrowserHistory/VB/httpcachepolicy_setallowresponseinbrowserhistoryvb.aspx#1)]  -->\"\n  syntax:\n    content: public void SetAllowResponseInBrowserHistory (bool allow);\n    parameters:\n    - id: allow\n      type: System.Boolean\n      description: '`true` to direct the client browser to store responses in the History folder; otherwise `false`. The default is `false`.'\n  overload: System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability)\n  commentId: M:System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability)\n  id: SetCacheability(System.Web.HttpCacheability)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetCacheability(HttpCacheability)\n  nameWithType: HttpCachePolicy.SetCacheability(HttpCacheability)\n  fullName: HttpCachePolicy.SetCacheability(HttpCacheability)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sets the `Cache-Control` header to one of the values of <xref href=\"System.Web.HttpCacheability\"></xref>.\n  remarks: <xref:System.Web.HttpCachePolicy.SetCacheability%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\n  example:\n  - \"The following code example demonstrates how to set the `Cache-Control` header to the enumerated value for `no-cache`.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetCacheability Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetCacheability Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetCacheability (System.Web.HttpCacheability cacheability);\n    parameters:\n    - id: cacheability\n      type: System.Web.HttpCacheability\n      description: An <xref href=\"System.Web.HttpCacheability\"></xref> enumeration value.\n  overload: System.Web.HttpCachePolicy.SetCacheability*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>cacheability</code> is not one of the enumeration values.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability,System.String)\n  commentId: M:System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability,System.String)\n  id: SetCacheability(System.Web.HttpCacheability,System.String)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetCacheability(HttpCacheability, String)\n  nameWithType: HttpCachePolicy.SetCacheability(HttpCacheability, String)\n  fullName: HttpCachePolicy.SetCacheability(HttpCacheability, String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sets the `Cache-Control` header to one of the values of <xref href=\"System.Web.HttpCacheability\"></xref> and appends an extension to the directive.\n  remarks: \"The field name extension is valid only when used with the `private` or `no-cache` directives. For more information, see RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1, available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).  \\n  \\n This method will throw an invalid argument exception if incompatible directives and extensions are combined.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetCacheability%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how the `Cache-Control` header is set to the enumeration value `private` and adds a cache-control extension. The modified directive means that in addition to any non-shared cache, any cache shared only by members of the community named \\\"DEV\\\" may cache the response.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetCacheability1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability1 Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetCacheability1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetCacheability1 Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetCacheability (System.Web.HttpCacheability cacheability, string field);\n    parameters:\n    - id: cacheability\n      type: System.Web.HttpCacheability\n      description: The <xref href=\"System.Web.HttpCacheability\"></xref> enumeration value to set the header to.\n    - id: field\n      type: System.String\n      description: The cache control extension to add to the header.\n  overload: System.Web.HttpCachePolicy.SetCacheability*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>field</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>cacheability</code> is not <xref href=\"System.Web.HttpCacheability.Private\"></xref> or <xref href=\"System.Web.HttpCacheability.NoCache\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetETag(System.String)\n  commentId: M:System.Web.HttpCachePolicy.SetETag(System.String)\n  id: SetETag(System.String)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetETag(String)\n  nameWithType: HttpCachePolicy.SetETag(String)\n  fullName: HttpCachePolicy.SetETag(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sets the `ETag` HTTP header to the specified string.\n  remarks: \"The `ETag` header is a unique identifier for a specific version of a document. It is used by clients to validate client-cached content to avoid requesting it again. Once an `ETag` header is set, subsequent attempts to set it fail and an exception is thrown.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetETag%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how to set the `ETag` header to a custom value.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetETag Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETag Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetETag Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETag Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetETag (string etag);\n    parameters:\n    - id: etag\n      type: System.String\n      description: The text to use for the `ETag` header.\n  overload: System.Web.HttpCachePolicy.SetETag*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>etag</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The `ETag` header has already been set.  \\n  \\n \\\\- or -  \\n  \\n The <xref href=\\\"System.Web.HttpCachePolicy.SetETagFromFileDependencies\\\"></xref> has already been called.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetETagFromFileDependencies\n  commentId: M:System.Web.HttpCachePolicy.SetETagFromFileDependencies\n  id: SetETagFromFileDependencies\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetETagFromFileDependencies()\n  nameWithType: HttpCachePolicy.SetETagFromFileDependencies()\n  fullName: HttpCachePolicy.SetETagFromFileDependencies()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sets the `ETag` HTTP header based on the time stamps of the handler's file dependencies.\n  remarks: \"The<xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A> method sets the `ETag` header by retrieving the last modified time stamps of all files on which the handler is dependent, combining all file names and time stamps into a single string, then hashing that string into a single digest that is used as the `ETag`.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetETagFromFileDependencies%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how to set the `ETag` header.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetETagFromFileDependencies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETagFromFileDependencies Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetETagFromFileDependencies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetETagFromFileDependencies Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetETagFromFileDependencies ();\n    parameters: []\n  overload: System.Web.HttpCachePolicy.SetETagFromFileDependencies*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The `ETag` header has already been set.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetExpires(System.DateTime)\n  commentId: M:System.Web.HttpCachePolicy.SetExpires(System.DateTime)\n  id: SetExpires(System.DateTime)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetExpires(DateTime)\n  nameWithType: HttpCachePolicy.SetExpires(DateTime)\n  fullName: HttpCachePolicy.SetExpires(DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sets the `Expires` HTTP header to an absolute date and time.\n  remarks: This method will fail if the expiration date violates the principle of restrictiveness.\n  example:\n  - \"The following code example demonstrates how to set the expiration time to 6:00 P.M. local time on the current expiration day.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetExpires Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetExpires Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetExpires Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetExpires Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetExpires (DateTime date);\n    parameters:\n    - id: date\n      type: System.DateTime\n      description: The absolute <xref href=\"System.DateTime\"></xref> value to set the `Expires` header to.\n  overload: System.Web.HttpCachePolicy.SetExpires*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetLastModified(System.DateTime)\n  commentId: M:System.Web.HttpCachePolicy.SetLastModified(System.DateTime)\n  id: SetLastModified(System.DateTime)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetLastModified(DateTime)\n  nameWithType: HttpCachePolicy.SetLastModified(DateTime)\n  fullName: HttpCachePolicy.SetLastModified(DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sets the `Last-Modified` HTTP header to the <xref href=\"System.DateTime\"></xref> value supplied.\n  remarks: \"The `Last-Modified` HTTP header time stamps the document with the `DateTime` value indicating when the document was last modified.  \\n  \\n This method will fail if the caching restrictiveness hierarchy is violated.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetLastModified%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how to set the `Last-Modified` header to a new date.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetLastModified Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModified Example/cs/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetLastModified Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModified Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetLastModified (DateTime date);\n    parameters:\n    - id: date\n      type: System.DateTime\n      description: The new <xref href=\"System.DateTime\"></xref> value for the `Last-Modified` header.\n  overload: System.Web.HttpCachePolicy.SetLastModified*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>date</code> is later than the current `DateTime`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies\n  commentId: M:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies\n  id: SetLastModifiedFromFileDependencies\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetLastModifiedFromFileDependencies()\n  nameWithType: HttpCachePolicy.SetLastModifiedFromFileDependencies()\n  fullName: HttpCachePolicy.SetLastModifiedFromFileDependencies()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sets the `Last-Modified` HTTP header based on the time stamps of the handler's file dependencies.\n  remarks: <xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\n  example:\n  - \"The following code example demonstrates how to set the `Last-Modified` header using the <xref:System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies%2A> method.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetLastModifiedFromFileDependencies Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetLastModifiedFromFileDependencies ();\n    parameters: []\n  overload: System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetMaxAge(System.TimeSpan)\n  commentId: M:System.Web.HttpCachePolicy.SetMaxAge(System.TimeSpan)\n  id: SetMaxAge(System.TimeSpan)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetMaxAge(TimeSpan)\n  nameWithType: HttpCachePolicy.SetMaxAge(TimeSpan)\n  fullName: HttpCachePolicy.SetMaxAge(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: 'Sets the `Cache-Control: max-age` HTTP header based on the specified time span.'\n  remarks: \"`Max-age` is the maximum absolute time a document is allowed to exist before being considered stale.  \\n  \\n The <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> method does not use sliding expiration and will fail if the expiration date violates the principle of restrictiveness.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).  \\n  \\n> [!NOTE]\\n>  If the <xref:System.Web.HttpCachePolicy.SetMaxAge%2A> method is called repeatedly, on the second and subsequent calls, the value of the maximum age can only be decreased.\"\n  example:\n  - \"The following code example demonstrates how to set the `Cache-Control: max-age` header to 0 hours, 30 minutes, and 0 seconds.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetMaxAge Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetMaxAge Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetMaxAge Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetMaxAge Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetMaxAge (TimeSpan delta);\n    parameters:\n    - id: delta\n      type: System.TimeSpan\n      description: 'The time span used to set the `Cache` - `Control: max-age` header.'\n  overload: System.Web.HttpCachePolicy.SetMaxAge*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>delta</code> is less than 0 or greater than one year.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetNoServerCaching\n  commentId: M:System.Web.HttpCachePolicy.SetNoServerCaching\n  id: SetNoServerCaching\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetNoServerCaching()\n  nameWithType: HttpCachePolicy.SetNoServerCaching()\n  fullName: HttpCachePolicy.SetNoServerCaching()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Stops all origin-server caching for the current response.\n  remarks: \"Explicitly denies caching of the document on the origin-server. Once set, all requests for the document are fully processed. When this method is invoked, caching cannot be re-enabled for the current response.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetNoServerCaching%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how to disable output caching for the remainder of the response.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetNoServerCaching Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoServerCaching Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetNoServerCaching Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoServerCaching Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetNoServerCaching ();\n    parameters: []\n  overload: System.Web.HttpCachePolicy.SetNoServerCaching*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetNoStore\n  commentId: M:System.Web.HttpCachePolicy.SetNoStore\n  id: SetNoStore\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetNoStore()\n  nameWithType: HttpCachePolicy.SetNoStore()\n  fullName: HttpCachePolicy.SetNoStore()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: 'Sets the `Cache-Control: no-store` HTTP header.'\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.HttpCachePolicy.SetNoStore%2A> method of the <xref:System.Web.HttpCachePolicy> class to direct the client not to store the responses in its history.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[HttpCachePolicySetNoStore#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicySetNoStore/CS/httpcachepolicy_setnostorecs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[HttpCachePolicySetNoStore#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicySetNoStore/VB/httpcachepolicy_setnostorevb.aspx#1)]  -->\"\n  syntax:\n    content: public void SetNoStore ();\n    parameters: []\n  overload: System.Web.HttpCachePolicy.SetNoStore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetNoTransforms\n  commentId: M:System.Web.HttpCachePolicy.SetNoTransforms\n  id: SetNoTransforms\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetNoTransforms()\n  nameWithType: HttpCachePolicy.SetNoTransforms()\n  fullName: HttpCachePolicy.SetNoTransforms()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: 'Sets the `Cache-Control: no-transform` HTTP header.'\n  remarks: \"The `Cache-Control: no-transform` HTTP header instructs network caching applications not to modify the document.  \\n  \\n The `Cache-Control: no-transform` HTTP header prevents downstream proxy servers from changing any header values specified by the `Content-Encoding`, `Content-Range`, or `Content-Type` headers (this includes the entity body). For example, it prevents proxies from converting GIF images to PNG.  \\n  \\n As with other restrictions on caching, once <xref:System.Web.HttpCachePolicy.SetNoTransforms%2A> is called, the `Cache-Control: no-transform` HTTP header cannot be disabled through the <xref:System.Web.HttpCachePolicy> interface.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetNoTransforms%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how to send the `Cache-Control: no-transform` directive with the current response.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetNoTransforms Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoTransforms Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetNoTransforms Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetNoTransforms Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetNoTransforms ();\n    parameters: []\n  overload: System.Web.HttpCachePolicy.SetNoTransforms*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetOmitVaryStar(System.Boolean)\n  commentId: M:System.Web.HttpCachePolicy.SetOmitVaryStar(System.Boolean)\n  id: SetOmitVaryStar(System.Boolean)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetOmitVaryStar(Boolean)\n  nameWithType: HttpCachePolicy.SetOmitVaryStar(Boolean)\n  fullName: HttpCachePolicy.SetOmitVaryStar(Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies whether the response should contain the `vary:*` header when varying by parameters.\n  remarks: \"This method allows you to prevent the output ached from adding a `vary:*` header to the outgoing response when the cached response varies by parameter. This is useful for clients varying caching by query string because most clients will automatically vary by query string without requiring the `vary:*` header.  \\n  \\n> [!NOTE]\\n>  The use of the `vary:*` header can disable all client caching.  \\n  \\n This is a convenience method to affect the <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> property. Passing `true` to the method directs the <xref:System.Web.HttpCachePolicy> to ignore the * value for the <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> property.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetOmitVaryStar%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  syntax:\n    content: public void SetOmitVaryStar (bool omit);\n    parameters:\n    - id: omit\n      type: System.Boolean\n      description: '`true` to direct the <xref href=\"System.Web.HttpCachePolicy\"></xref> to not use the * value for its <xref href=\"System.Web.HttpCachePolicy.VaryByHeaders\"></xref> property; otherwise, `false`.'\n  overload: System.Web.HttpCachePolicy.SetOmitVaryStar*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetProxyMaxAge(System.TimeSpan)\n  commentId: M:System.Web.HttpCachePolicy.SetProxyMaxAge(System.TimeSpan)\n  id: SetProxyMaxAge(System.TimeSpan)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetProxyMaxAge(TimeSpan)\n  nameWithType: HttpCachePolicy.SetProxyMaxAge(TimeSpan)\n  fullName: HttpCachePolicy.SetProxyMaxAge(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: 'Sets the `Cache-Control: s-maxage` HTTP header based on the specified time span.'\n  remarks: \"The <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> method does not use sliding expiration and will fail if the expiration date violates the principle of restrictiveness.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetProxyMaxAge%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how to set the `Cache-Control: s-maxage` header to 0 hours, 30 minutes, and 0 seconds.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetProxyMaxAge Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetProxyMaxAge Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetProxyMaxAge Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetProxyMaxAge Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetProxyMaxAge (TimeSpan delta);\n    parameters:\n    - id: delta\n      type: System.TimeSpan\n      description: 'The time span used to set the `Cache-Control: s-maxage` header.'\n  overload: System.Web.HttpCachePolicy.SetProxyMaxAge*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>delta</code> is less than 0.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetRevalidation(System.Web.HttpCacheRevalidation)\n  commentId: M:System.Web.HttpCachePolicy.SetRevalidation(System.Web.HttpCacheRevalidation)\n  id: SetRevalidation(System.Web.HttpCacheRevalidation)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetRevalidation(HttpCacheRevalidation)\n  nameWithType: HttpCachePolicy.SetRevalidation(HttpCacheRevalidation)\n  fullName: HttpCachePolicy.SetRevalidation(HttpCacheRevalidation)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sets the `Cache-Control` HTTP header to either the `must-revalidate` or the `proxy-revalidate` directives based on the supplied enumeration value.\n  remarks: \"The default, which is equivalent to <xref:System.Web.HttpCacheRevalidation.None>, is to send neither directive in a header unless explicitly specified by this method.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetRevalidation%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how to set cache revalidation to <xref:System.Web.HttpCacheRevalidation.AllCaches>.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetRevalidation Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetRevalidation Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetRevalidation Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetRevalidation Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetRevalidation (System.Web.HttpCacheRevalidation revalidation);\n    parameters:\n    - id: revalidation\n      type: System.Web.HttpCacheRevalidation\n      description: The <xref href=\"System.Web.HttpCacheRevalidation\"></xref> enumeration value to set the `Cache-Control` header to.\n  overload: System.Web.HttpCachePolicy.SetRevalidation*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>revalidation</code> is not one of the enumeration values.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetSlidingExpiration(System.Boolean)\n  commentId: M:System.Web.HttpCachePolicy.SetSlidingExpiration(System.Boolean)\n  id: SetSlidingExpiration(System.Boolean)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetSlidingExpiration(Boolean)\n  nameWithType: HttpCachePolicy.SetSlidingExpiration(Boolean)\n  fullName: HttpCachePolicy.SetSlidingExpiration(Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Sets cache expiration to from absolute to sliding.\n  remarks: \"When cache expiration is set to sliding, the `Cache-Control` HTTP header will be renewed with each response. This expiration mode is identical to the IIS configuration option to add an expiration header to all output set relative to the current time.  \\n  \\n If you explicitly set sliding expiration to off (`false`), that setting will be preserved and any attempts to enable sliding expiration will silently fail. This method does not directly map to an HTTP header. It is used by subsequent modules or worker requests to set origin-server cache policy.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetSlidingExpiration%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how to set sliding expiration to `true`.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetSlidingExpiration Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetSlidingExpiration Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetSlidingExpiration (bool slide);\n    parameters:\n    - id: slide\n      type: System.Boolean\n      description: '`true` or `false`.'\n  overload: System.Web.HttpCachePolicy.SetSlidingExpiration*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetValidUntilExpires(System.Boolean)\n  commentId: M:System.Web.HttpCachePolicy.SetValidUntilExpires(System.Boolean)\n  id: SetValidUntilExpires(System.Boolean)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetValidUntilExpires(Boolean)\n  nameWithType: HttpCachePolicy.SetValidUntilExpires(Boolean)\n  fullName: HttpCachePolicy.SetValidUntilExpires(Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies whether the ASP.NET cache should ignore HTTP `Cache-Control` headers sent by the client that invalidate the cache.\n  remarks: \"The <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> method is set to `true` automatically when the high-level `<%@ OutputCache … %>` page directive is used.  \\n  \\n This method is provided because some browsers, when refreshing a page view, send HTTP cache invalidation headers to the Web server and evict the page from the cache. When the `validUntilExpires` parameter is `true`, ASP.NET ignores cache invalidation headers and the page remains in the cache until it expires.  \\n  \\n <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Web.HttpCachePolicy.SetValidUntilExpires%2A> method to instruct that any cache invalidation headers sent by the client are ignored.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[HttpCachePolicy_SetValidUntilExpires#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCachePolicy_SetValidUntilExpires/CS/httpcachepolicy_setvaliduntilexpirescs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[HttpCachePolicy_SetValidUntilExpires#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCachePolicy_SetValidUntilExpires/VB/httpcachepolicy_setvaliduntilexpiresvb.aspx#1)]  -->\"\n  syntax:\n    content: public void SetValidUntilExpires (bool validUntilExpires);\n    parameters:\n    - id: validUntilExpires\n      type: System.Boolean\n      description: '`true` if the cache ignores `Cache-Control` invalidation headers; otherwise, `false`.'\n  overload: System.Web.HttpCachePolicy.SetValidUntilExpires*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.SetVaryByCustom(System.String)\n  commentId: M:System.Web.HttpCachePolicy.SetVaryByCustom(System.String)\n  id: SetVaryByCustom(System.String)\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: SetVaryByCustom(String)\n  nameWithType: HttpCachePolicy.SetVaryByCustom(String)\n  fullName: HttpCachePolicy.SetVaryByCustom(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Specifies a custom text string to vary cached output responses by.\n  remarks: <xref:System.Web.HttpCachePolicy.SetVaryByCustom%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\n  example:\n  - \"The following code example demonstrates how to set the custom vary string to \\\"Accept-Charset\\\", which causes the origin-server's cache to choose one of several cached responses depending on the browser's `Accept-Charset` header.  \\n  \\n [!code-csharp[Classic HttpCachePolicy.SetVaryByCustom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCachePolicy.SetVaryByCustom Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpCachePolicy.SetVaryByCustom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCachePolicy.SetVaryByCustom Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void SetVaryByCustom (string custom);\n    parameters:\n    - id: custom\n      type: System.String\n      description: The text string to vary cached output by.\n  overload: System.Web.HttpCachePolicy.SetVaryByCustom*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>custom</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Web.HttpCachePolicy.SetVaryByCustom(System.String)\"></xref> method has already been called.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.UtcTimestampCreated\n  commentId: P:System.Web.HttpCachePolicy.UtcTimestampCreated\n  id: UtcTimestampCreated\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: UtcTimestampCreated\n  nameWithType: HttpCachePolicy.UtcTimestampCreated\n  fullName: HttpCachePolicy.UtcTimestampCreated\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets or sets the timestamp in Coordinated Universal Iime (UTC) for the <xref href=\"System.Web.HttpCachePolicy\"></xref>.\n  syntax:\n    content: public DateTime UtcTimestampCreated { get; set; }\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> for the <xref href=\"System.Web.HttpCachePolicy\"></xref>.\n  overload: System.Web.HttpCachePolicy.UtcTimestampCreated*\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.VaryByContentEncodings\n  commentId: P:System.Web.HttpCachePolicy.VaryByContentEncodings\n  id: VaryByContentEncodings\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: VaryByContentEncodings\n  nameWithType: HttpCachePolicy.VaryByContentEncodings\n  fullName: HttpCachePolicy.VaryByContentEncodings\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the list of `Content-Encoding` headers that will be used to vary the output cache.\n  remarks: \"The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property returns a list of Content-Encoding headers that represent compression schemes to vary the output cache by. Caching dynamically compressed responses means that the cost of compression is incurred only one time, during the first request for the resource.  \\n  \\n The <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property is used with the `Accept-Encoding` header of a request to determine how to serve cached responses for different content encodings that are dynamically compressed. The Accept-Encoding header lists the encodings that the client can decompress.  \\n  \\n When you set the cache to vary by content encoding, it lets the response vary indirectly by the value in the `Accept-Encoding` header. When a request is processed, the `Accept-Encoding` header is checked and the first acceptable encoding is identified and used to take one of the following actions:  \\n  \\n-   If a matching encoding is found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list and a cached response exists, the cached response is sent.  \\n  \\n-   If a matching encoding is found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list but a cached response does not exist, a response is generated and inserted into the cache.  \\n  \\n-   If a matching encoding is not found in the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> list, the cache is searched for a non-encoded response, also referred to as the identity response. If the non-encoded response is found, it is sent. Otherwise, a new non-encoded response is generated, sent, and stored in the cache.  \\n  \\n For more information about the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property, see \\\"RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1,\\\" which is available on the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125). Information about content encodings is in section 14, \\\"Header Field Definitions.\\\"  \\n  \\n You can set the <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> property by using the `VaryByContentEncodings` attribute of the  directive. You can also add a cache profile to the  element in the Web.config file.  \\n  \\n <xref:System.Web.HttpCachePolicy.VaryByContentEncodings%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  example:\n  - \"The following example shows how to enable a dynamically compressed response for a page to be served from the output cache. The encoding that is acceptable is \\\"gzip\\\" and is set by using the `VaryByContentEncodings` attribute of the  directive. If the Web server that is hosting the page does not have dynamic compression enabled, the output cache will not have a cached response that is based on the specified content encoding.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCachePolicy.VaryByContentEncodings/CS/default.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.HttpCachePolicy.VaryByContentEncodings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCachePolicy.VaryByContentEncodings/VB/default.aspx#1)]  -->\"\n  syntax:\n    content: public System.Web.HttpCacheVaryByContentEncodings VaryByContentEncodings { get; }\n    return:\n      type: System.Web.HttpCacheVaryByContentEncodings\n      description: An object that specifies which `Content-Encoding` headers are used to select the cached response.\n  overload: System.Web.HttpCachePolicy.VaryByContentEncodings*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.VaryByHeaders\n  commentId: P:System.Web.HttpCachePolicy.VaryByHeaders\n  id: VaryByHeaders\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: VaryByHeaders\n  nameWithType: HttpCachePolicy.VaryByHeaders\n  fullName: HttpCachePolicy.VaryByHeaders\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the list of all HTTP headers that will be used to vary cache output.\n  remarks: \"When a cached item has several vary headers, a separate version of the requested document is available from the cache for each HTTP header type.  \\n  \\n <xref:System.Web.HttpCachePolicy.VaryByHeaders%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  syntax:\n    content: public System.Web.HttpCacheVaryByHeaders VaryByHeaders { get; }\n    return:\n      type: System.Web.HttpCacheVaryByHeaders\n      description: An <xref href=\"System.Web.HttpCacheVaryByHeaders\"></xref> that specifies which HTTP headers are used to select the cached response.\n  overload: System.Web.HttpCachePolicy.VaryByHeaders*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.HttpCachePolicy.VaryByParams\n  commentId: P:System.Web.HttpCachePolicy.VaryByParams\n  id: VaryByParams\n  parent: System.Web.HttpCachePolicy\n  langs:\n  - csharp\n  name: VaryByParams\n  nameWithType: HttpCachePolicy.VaryByParams\n  fullName: HttpCachePolicy.VaryByParams\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Gets the list of parameters received by an HTTP `GET` or HTTP `POST` that affect caching.\n  remarks: \"A separate version of the requested document is available from the cache for each named parameter in the <xref:System.Web.HttpCachePolicy.VaryByParams%2A> collection.  \\n  \\n <xref:System.Web.HttpCachePolicy.VaryByParams%2A> is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).\"\n  syntax:\n    content: public System.Web.HttpCacheVaryByParams VaryByParams { get; }\n    return:\n      type: System.Web.HttpCacheVaryByParams\n      description: An <xref href=\"System.Web.HttpCacheVaryByParams\"></xref> that specifies which cache-control headers are used to select the cached response.\n  overload: System.Web.HttpCachePolicy.VaryByParams*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Web.HttpCachePolicy.AddValidationCallback(System.Web.HttpCacheValidateHandler,System.Object)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: AddValidationCallback(HttpCacheValidateHandler, Object)\n  nameWithType: HttpCachePolicy.AddValidationCallback(HttpCacheValidateHandler, Object)\n  fullName: HttpCachePolicy.AddValidationCallback(HttpCacheValidateHandler, Object)\n- uid: System.Web.HttpCacheValidateHandler\n  parent: System.Web\n  isExternal: false\n  name: HttpCacheValidateHandler\n  nameWithType: HttpCacheValidateHandler\n  fullName: System.Web.HttpCacheValidateHandler\n- uid: System.Web.HttpCachePolicy.AppendCacheExtension(System.String)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: AppendCacheExtension(String)\n  nameWithType: HttpCachePolicy.AppendCacheExtension(String)\n  fullName: HttpCachePolicy.AppendCacheExtension(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.HttpCachePolicy.GetCacheability\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetCacheability()\n  nameWithType: HttpCachePolicy.GetCacheability()\n  fullName: HttpCachePolicy.GetCacheability()\n- uid: System.Web.HttpCacheability\n  parent: System.Web\n  isExternal: false\n  name: HttpCacheability\n  nameWithType: HttpCacheability\n  fullName: System.Web.HttpCacheability\n- uid: System.Web.HttpCachePolicy.GetCacheExtensions\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetCacheExtensions()\n  nameWithType: HttpCachePolicy.GetCacheExtensions()\n  fullName: HttpCachePolicy.GetCacheExtensions()\n- uid: System.Web.HttpCachePolicy.GetETag\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetETag()\n  nameWithType: HttpCachePolicy.GetETag()\n  fullName: HttpCachePolicy.GetETag()\n- uid: System.Web.HttpCachePolicy.GetETagFromFileDependencies\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetETagFromFileDependencies()\n  nameWithType: HttpCachePolicy.GetETagFromFileDependencies()\n  fullName: HttpCachePolicy.GetETagFromFileDependencies()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.HttpCachePolicy.GetExpires\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetExpires()\n  nameWithType: HttpCachePolicy.GetExpires()\n  fullName: HttpCachePolicy.GetExpires()\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Web.HttpCachePolicy.GetIgnoreRangeRequests\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetIgnoreRangeRequests()\n  nameWithType: HttpCachePolicy.GetIgnoreRangeRequests()\n  fullName: HttpCachePolicy.GetIgnoreRangeRequests()\n- uid: System.Web.HttpCachePolicy.GetLastModifiedFromFileDependencies\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetLastModifiedFromFileDependencies()\n  nameWithType: HttpCachePolicy.GetLastModifiedFromFileDependencies()\n  fullName: HttpCachePolicy.GetLastModifiedFromFileDependencies()\n- uid: System.Web.HttpCachePolicy.GetMaxAge\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetMaxAge()\n  nameWithType: HttpCachePolicy.GetMaxAge()\n  fullName: HttpCachePolicy.GetMaxAge()\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Web.HttpCachePolicy.GetNoServerCaching\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetNoServerCaching()\n  nameWithType: HttpCachePolicy.GetNoServerCaching()\n  fullName: HttpCachePolicy.GetNoServerCaching()\n- uid: System.Web.HttpCachePolicy.GetNoStore\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetNoStore()\n  nameWithType: HttpCachePolicy.GetNoStore()\n  fullName: HttpCachePolicy.GetNoStore()\n- uid: System.Web.HttpCachePolicy.GetNoTransforms\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetNoTransforms()\n  nameWithType: HttpCachePolicy.GetNoTransforms()\n  fullName: HttpCachePolicy.GetNoTransforms()\n- uid: System.Web.HttpCachePolicy.GetOmitVaryStar\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetOmitVaryStar()\n  nameWithType: HttpCachePolicy.GetOmitVaryStar()\n  fullName: HttpCachePolicy.GetOmitVaryStar()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.HttpCachePolicy.GetProxyMaxAge\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetProxyMaxAge()\n  nameWithType: HttpCachePolicy.GetProxyMaxAge()\n  fullName: HttpCachePolicy.GetProxyMaxAge()\n- uid: System.Web.HttpCachePolicy.GetRevalidation\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetRevalidation()\n  nameWithType: HttpCachePolicy.GetRevalidation()\n  fullName: HttpCachePolicy.GetRevalidation()\n- uid: System.Web.HttpCacheRevalidation\n  parent: System.Web\n  isExternal: false\n  name: HttpCacheRevalidation\n  nameWithType: HttpCacheRevalidation\n  fullName: System.Web.HttpCacheRevalidation\n- uid: System.Web.HttpCachePolicy.GetUtcLastModified\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetUtcLastModified()\n  nameWithType: HttpCachePolicy.GetUtcLastModified()\n  fullName: HttpCachePolicy.GetUtcLastModified()\n- uid: System.Web.HttpCachePolicy.GetVaryByCustom\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetVaryByCustom()\n  nameWithType: HttpCachePolicy.GetVaryByCustom()\n  fullName: HttpCachePolicy.GetVaryByCustom()\n- uid: System.Web.HttpCachePolicy.HasSlidingExpiration\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: HasSlidingExpiration()\n  nameWithType: HttpCachePolicy.HasSlidingExpiration()\n  fullName: HttpCachePolicy.HasSlidingExpiration()\n- uid: System.Web.HttpCachePolicy.IsModified\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: IsModified()\n  nameWithType: HttpCachePolicy.IsModified()\n  fullName: HttpCachePolicy.IsModified()\n- uid: System.Web.HttpCachePolicy.IsValidUntilExpires\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: IsValidUntilExpires()\n  nameWithType: HttpCachePolicy.IsValidUntilExpires()\n  fullName: HttpCachePolicy.IsValidUntilExpires()\n- uid: System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory(System.Boolean)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetAllowResponseInBrowserHistory(Boolean)\n  nameWithType: HttpCachePolicy.SetAllowResponseInBrowserHistory(Boolean)\n  fullName: HttpCachePolicy.SetAllowResponseInBrowserHistory(Boolean)\n- uid: System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetCacheability(HttpCacheability)\n  nameWithType: HttpCachePolicy.SetCacheability(HttpCacheability)\n  fullName: HttpCachePolicy.SetCacheability(HttpCacheability)\n- uid: System.Web.HttpCachePolicy.SetCacheability(System.Web.HttpCacheability,System.String)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetCacheability(HttpCacheability, String)\n  nameWithType: HttpCachePolicy.SetCacheability(HttpCacheability, String)\n  fullName: HttpCachePolicy.SetCacheability(HttpCacheability, String)\n- uid: System.Web.HttpCachePolicy.SetETag(System.String)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetETag(String)\n  nameWithType: HttpCachePolicy.SetETag(String)\n  fullName: HttpCachePolicy.SetETag(String)\n- uid: System.Web.HttpCachePolicy.SetETagFromFileDependencies\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetETagFromFileDependencies()\n  nameWithType: HttpCachePolicy.SetETagFromFileDependencies()\n  fullName: HttpCachePolicy.SetETagFromFileDependencies()\n- uid: System.Web.HttpCachePolicy.SetExpires(System.DateTime)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetExpires(DateTime)\n  nameWithType: HttpCachePolicy.SetExpires(DateTime)\n  fullName: HttpCachePolicy.SetExpires(DateTime)\n- uid: System.Web.HttpCachePolicy.SetLastModified(System.DateTime)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetLastModified(DateTime)\n  nameWithType: HttpCachePolicy.SetLastModified(DateTime)\n  fullName: HttpCachePolicy.SetLastModified(DateTime)\n- uid: System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetLastModifiedFromFileDependencies()\n  nameWithType: HttpCachePolicy.SetLastModifiedFromFileDependencies()\n  fullName: HttpCachePolicy.SetLastModifiedFromFileDependencies()\n- uid: System.Web.HttpCachePolicy.SetMaxAge(System.TimeSpan)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetMaxAge(TimeSpan)\n  nameWithType: HttpCachePolicy.SetMaxAge(TimeSpan)\n  fullName: HttpCachePolicy.SetMaxAge(TimeSpan)\n- uid: System.Web.HttpCachePolicy.SetNoServerCaching\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetNoServerCaching()\n  nameWithType: HttpCachePolicy.SetNoServerCaching()\n  fullName: HttpCachePolicy.SetNoServerCaching()\n- uid: System.Web.HttpCachePolicy.SetNoStore\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetNoStore()\n  nameWithType: HttpCachePolicy.SetNoStore()\n  fullName: HttpCachePolicy.SetNoStore()\n- uid: System.Web.HttpCachePolicy.SetNoTransforms\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetNoTransforms()\n  nameWithType: HttpCachePolicy.SetNoTransforms()\n  fullName: HttpCachePolicy.SetNoTransforms()\n- uid: System.Web.HttpCachePolicy.SetOmitVaryStar(System.Boolean)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetOmitVaryStar(Boolean)\n  nameWithType: HttpCachePolicy.SetOmitVaryStar(Boolean)\n  fullName: HttpCachePolicy.SetOmitVaryStar(Boolean)\n- uid: System.Web.HttpCachePolicy.SetProxyMaxAge(System.TimeSpan)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetProxyMaxAge(TimeSpan)\n  nameWithType: HttpCachePolicy.SetProxyMaxAge(TimeSpan)\n  fullName: HttpCachePolicy.SetProxyMaxAge(TimeSpan)\n- uid: System.Web.HttpCachePolicy.SetRevalidation(System.Web.HttpCacheRevalidation)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetRevalidation(HttpCacheRevalidation)\n  nameWithType: HttpCachePolicy.SetRevalidation(HttpCacheRevalidation)\n  fullName: HttpCachePolicy.SetRevalidation(HttpCacheRevalidation)\n- uid: System.Web.HttpCachePolicy.SetSlidingExpiration(System.Boolean)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetSlidingExpiration(Boolean)\n  nameWithType: HttpCachePolicy.SetSlidingExpiration(Boolean)\n  fullName: HttpCachePolicy.SetSlidingExpiration(Boolean)\n- uid: System.Web.HttpCachePolicy.SetValidUntilExpires(System.Boolean)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetValidUntilExpires(Boolean)\n  nameWithType: HttpCachePolicy.SetValidUntilExpires(Boolean)\n  fullName: HttpCachePolicy.SetValidUntilExpires(Boolean)\n- uid: System.Web.HttpCachePolicy.SetVaryByCustom(System.String)\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetVaryByCustom(String)\n  nameWithType: HttpCachePolicy.SetVaryByCustom(String)\n  fullName: HttpCachePolicy.SetVaryByCustom(String)\n- uid: System.Web.HttpCachePolicy.UtcTimestampCreated\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: UtcTimestampCreated\n  nameWithType: HttpCachePolicy.UtcTimestampCreated\n  fullName: HttpCachePolicy.UtcTimestampCreated\n- uid: System.Web.HttpCachePolicy.VaryByContentEncodings\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: VaryByContentEncodings\n  nameWithType: HttpCachePolicy.VaryByContentEncodings\n  fullName: HttpCachePolicy.VaryByContentEncodings\n- uid: System.Web.HttpCacheVaryByContentEncodings\n  parent: System.Web\n  isExternal: false\n  name: HttpCacheVaryByContentEncodings\n  nameWithType: HttpCacheVaryByContentEncodings\n  fullName: System.Web.HttpCacheVaryByContentEncodings\n- uid: System.Web.HttpCachePolicy.VaryByHeaders\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: VaryByHeaders\n  nameWithType: HttpCachePolicy.VaryByHeaders\n  fullName: HttpCachePolicy.VaryByHeaders\n- uid: System.Web.HttpCacheVaryByHeaders\n  parent: System.Web\n  isExternal: false\n  name: HttpCacheVaryByHeaders\n  nameWithType: HttpCacheVaryByHeaders\n  fullName: System.Web.HttpCacheVaryByHeaders\n- uid: System.Web.HttpCachePolicy.VaryByParams\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: VaryByParams\n  nameWithType: HttpCachePolicy.VaryByParams\n  fullName: HttpCachePolicy.VaryByParams\n- uid: System.Web.HttpCacheVaryByParams\n  parent: System.Web\n  isExternal: false\n  name: HttpCacheVaryByParams\n  nameWithType: HttpCacheVaryByParams\n  fullName: System.Web.HttpCacheVaryByParams\n- uid: System.Web.HttpCachePolicy.AddValidationCallback*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: AddValidationCallback\n  nameWithType: HttpCachePolicy.AddValidationCallback\n  fullName: HttpCachePolicy.AddValidationCallback\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.AppendCacheExtension*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: AppendCacheExtension\n  nameWithType: HttpCachePolicy.AppendCacheExtension\n  fullName: HttpCachePolicy.AppendCacheExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetCacheability*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetCacheability\n  nameWithType: HttpCachePolicy.GetCacheability\n  fullName: HttpCachePolicy.GetCacheability\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetCacheExtensions*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetCacheExtensions\n  nameWithType: HttpCachePolicy.GetCacheExtensions\n  fullName: HttpCachePolicy.GetCacheExtensions\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetETag*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetETag\n  nameWithType: HttpCachePolicy.GetETag\n  fullName: HttpCachePolicy.GetETag\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetETagFromFileDependencies*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetETagFromFileDependencies\n  nameWithType: HttpCachePolicy.GetETagFromFileDependencies\n  fullName: HttpCachePolicy.GetETagFromFileDependencies\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetExpires*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetExpires\n  nameWithType: HttpCachePolicy.GetExpires\n  fullName: HttpCachePolicy.GetExpires\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetIgnoreRangeRequests*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetIgnoreRangeRequests\n  nameWithType: HttpCachePolicy.GetIgnoreRangeRequests\n  fullName: HttpCachePolicy.GetIgnoreRangeRequests\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetLastModifiedFromFileDependencies*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetLastModifiedFromFileDependencies\n  nameWithType: HttpCachePolicy.GetLastModifiedFromFileDependencies\n  fullName: HttpCachePolicy.GetLastModifiedFromFileDependencies\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetMaxAge*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetMaxAge\n  nameWithType: HttpCachePolicy.GetMaxAge\n  fullName: HttpCachePolicy.GetMaxAge\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetNoServerCaching*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetNoServerCaching\n  nameWithType: HttpCachePolicy.GetNoServerCaching\n  fullName: HttpCachePolicy.GetNoServerCaching\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetNoStore*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetNoStore\n  nameWithType: HttpCachePolicy.GetNoStore\n  fullName: HttpCachePolicy.GetNoStore\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetNoTransforms*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetNoTransforms\n  nameWithType: HttpCachePolicy.GetNoTransforms\n  fullName: HttpCachePolicy.GetNoTransforms\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetOmitVaryStar*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetOmitVaryStar\n  nameWithType: HttpCachePolicy.GetOmitVaryStar\n  fullName: HttpCachePolicy.GetOmitVaryStar\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetProxyMaxAge*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetProxyMaxAge\n  nameWithType: HttpCachePolicy.GetProxyMaxAge\n  fullName: HttpCachePolicy.GetProxyMaxAge\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetRevalidation*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetRevalidation\n  nameWithType: HttpCachePolicy.GetRevalidation\n  fullName: HttpCachePolicy.GetRevalidation\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetUtcLastModified*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetUtcLastModified\n  nameWithType: HttpCachePolicy.GetUtcLastModified\n  fullName: HttpCachePolicy.GetUtcLastModified\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.GetVaryByCustom*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: GetVaryByCustom\n  nameWithType: HttpCachePolicy.GetVaryByCustom\n  fullName: HttpCachePolicy.GetVaryByCustom\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.HasSlidingExpiration*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: HasSlidingExpiration\n  nameWithType: HttpCachePolicy.HasSlidingExpiration\n  fullName: HttpCachePolicy.HasSlidingExpiration\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.IsModified*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: IsModified\n  nameWithType: HttpCachePolicy.IsModified\n  fullName: HttpCachePolicy.IsModified\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.IsValidUntilExpires*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: IsValidUntilExpires\n  nameWithType: HttpCachePolicy.IsValidUntilExpires\n  fullName: HttpCachePolicy.IsValidUntilExpires\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetAllowResponseInBrowserHistory*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetAllowResponseInBrowserHistory\n  nameWithType: HttpCachePolicy.SetAllowResponseInBrowserHistory\n  fullName: HttpCachePolicy.SetAllowResponseInBrowserHistory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetCacheability*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetCacheability\n  nameWithType: HttpCachePolicy.SetCacheability\n  fullName: HttpCachePolicy.SetCacheability\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetETag*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetETag\n  nameWithType: HttpCachePolicy.SetETag\n  fullName: HttpCachePolicy.SetETag\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetETagFromFileDependencies*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetETagFromFileDependencies\n  nameWithType: HttpCachePolicy.SetETagFromFileDependencies\n  fullName: HttpCachePolicy.SetETagFromFileDependencies\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetExpires*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetExpires\n  nameWithType: HttpCachePolicy.SetExpires\n  fullName: HttpCachePolicy.SetExpires\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetLastModified*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetLastModified\n  nameWithType: HttpCachePolicy.SetLastModified\n  fullName: HttpCachePolicy.SetLastModified\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetLastModifiedFromFileDependencies*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetLastModifiedFromFileDependencies\n  nameWithType: HttpCachePolicy.SetLastModifiedFromFileDependencies\n  fullName: HttpCachePolicy.SetLastModifiedFromFileDependencies\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetMaxAge*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetMaxAge\n  nameWithType: HttpCachePolicy.SetMaxAge\n  fullName: HttpCachePolicy.SetMaxAge\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetNoServerCaching*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetNoServerCaching\n  nameWithType: HttpCachePolicy.SetNoServerCaching\n  fullName: HttpCachePolicy.SetNoServerCaching\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetNoStore*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetNoStore\n  nameWithType: HttpCachePolicy.SetNoStore\n  fullName: HttpCachePolicy.SetNoStore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetNoTransforms*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetNoTransforms\n  nameWithType: HttpCachePolicy.SetNoTransforms\n  fullName: HttpCachePolicy.SetNoTransforms\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetOmitVaryStar*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetOmitVaryStar\n  nameWithType: HttpCachePolicy.SetOmitVaryStar\n  fullName: HttpCachePolicy.SetOmitVaryStar\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetProxyMaxAge*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetProxyMaxAge\n  nameWithType: HttpCachePolicy.SetProxyMaxAge\n  fullName: HttpCachePolicy.SetProxyMaxAge\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetRevalidation*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetRevalidation\n  nameWithType: HttpCachePolicy.SetRevalidation\n  fullName: HttpCachePolicy.SetRevalidation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetSlidingExpiration*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetSlidingExpiration\n  nameWithType: HttpCachePolicy.SetSlidingExpiration\n  fullName: HttpCachePolicy.SetSlidingExpiration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetValidUntilExpires*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetValidUntilExpires\n  nameWithType: HttpCachePolicy.SetValidUntilExpires\n  fullName: HttpCachePolicy.SetValidUntilExpires\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.SetVaryByCustom*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: SetVaryByCustom\n  nameWithType: HttpCachePolicy.SetVaryByCustom\n  fullName: HttpCachePolicy.SetVaryByCustom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.UtcTimestampCreated*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: UtcTimestampCreated\n  nameWithType: HttpCachePolicy.UtcTimestampCreated\n  fullName: HttpCachePolicy.UtcTimestampCreated\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.VaryByContentEncodings*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: VaryByContentEncodings\n  nameWithType: HttpCachePolicy.VaryByContentEncodings\n  fullName: HttpCachePolicy.VaryByContentEncodings\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.VaryByHeaders*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: VaryByHeaders\n  nameWithType: HttpCachePolicy.VaryByHeaders\n  fullName: HttpCachePolicy.VaryByHeaders\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Web.HttpCachePolicy.VaryByParams*\n  parent: System.Web.HttpCachePolicy\n  isExternal: false\n  name: VaryByParams\n  nameWithType: HttpCachePolicy.VaryByParams\n  fullName: HttpCachePolicy.VaryByParams\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/HttpCachePolicy.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}