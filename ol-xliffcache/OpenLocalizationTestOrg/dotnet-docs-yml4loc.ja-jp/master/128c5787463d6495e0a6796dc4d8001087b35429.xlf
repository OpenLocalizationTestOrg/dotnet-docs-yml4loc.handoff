<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">128c5787463d6495e0a6796dc4d8001087b35429</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Configuration.MsmqElementBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15c4f93056a8f984fdb1e0b253e7ce5fac22b8c0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee62c6bc05a397e9efd3203d6b4342a239af45a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base class with members common to the <ph id="ph1">&lt;xref href="System.ServiceModel.Configuration.MsmqIntegrationElement"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.ServiceModel.Configuration.MsmqTransportElement"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Configuration.MsmqElementBase"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Applies the settings of this binding element to a specified binding element.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A binding element that contains the settings to be applied.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Copies settings from a specified <ph id="ph1">&lt;xref href="System.ServiceModel.Configuration.ServiceModelExtensionElement"&gt;&lt;/xref&gt;</ph> to this binding element.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Configuration.ServiceModelExtensionElement"&gt;&lt;/xref&gt;</ph> that contains the values to be copied.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets or sets a URI that contains the location of the per-application dead-letter queue, where messages that have expired or that have failed transfer or delivery are placed.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The URI that is specified by <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A&gt;</ph> must use the Net.msmq scheme.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.ServiceModel.DeadLetterQueue.None&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.DeadLetterQueue.System&gt;</ph>, then <ph id="ph4">&lt;xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A&gt;</ph> must be set to <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A&gt;</ph> is not <ph id="ph2">`null`</ph>, then <ph id="ph3">&lt;xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A&gt;</ph> must be set to <ph id="ph4">&lt;xref:System.ServiceModel.DeadLetterQueue.Custom&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the location of the per-application dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets or sets an enumeration value that indicates the type of dead-letter queue to use.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The dead-letter queue enumeration specifies the type of dead-letter queue to use.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values are:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>None: If no dead-letter queue is required.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, if a message were to fail delivery, no record of it would be maintained in the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the default value when <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>System: The system-wide dead-letter queue would be used to record messages that fail delivery.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing (also known as MSMQ) has a transactional system dead-letter queue and a nontransactional system dead-letter queue to record messages that failed delivery from transactional and nontransactional queues, respectively.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the default value when <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom: The queue specified in the <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A&gt;</ph> is used to record messages that fail delivery.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reasons that a message can fail to reach the receiving application include:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>A transactional message is sent to a nontransactional queue.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>A nontransactional message is sent to a transactional queue.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>An unauthenticated message is sent to a queue that accepts only authenticated messages.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>An unencrypted message is sent to a queue that accepts only encrypted messages.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message expires before the message is delivered to a receiver.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message storage quota of the target computer or the storage quota of the destination queue is exceeded, or there is no available storage space on the target computer when the message arrives.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sender does not have the access rights needed to place the message in the destination queue.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The digital signature attached to the message is not valid.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>An encrypted message cannot be decrypted by the destination queue manager.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The destination queue is purged or deleted before the message is retrieved.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.DeadLetterQueue"&gt;&lt;/xref&gt;</ph> enumeration value that indicates the type of dead-letter queue to use.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the messages processed by this binding are durable or volatile.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>A durable message survives a queue manager crash, while a volatile message does not.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Volatile messages are useful when applications can tolerate occasional lost messages.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the messages must be durable.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the messages processed by this binding are durable; <ph id="ph2">`false`</ph> if they are volatile.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that indicates whether messages processed by this binding will be received exactly once.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>A message can be sent with or without assurances.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>An assurance enables an application to ensure that a sent message reached the receiving message queue, or if it did not, the application can determine this by reading the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages sent with <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A&gt;</ph> set to <ph id="ph2">`true`</ph> must be sent only to a transactional queue.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A&gt;</ph>, when set to <ph id="ph2">`true`</ph>, indicates that Message Queuing (also known as MSMQ) will ensure that a sent message is delivered to the receiving message queue once and only once, and if delivery fails, the message is sent to the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For messages that require <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A&gt;</ph> to be <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A&gt;</ph> property defaults to <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For messages that require <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A&gt;</ph> to be <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A&gt;</ph> property defaults to a transactional system-wide dead-letter queue in Message Queuing.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if messages processed by this binding will be received exactly once; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Initializes this binding element with the content from the specified binding element.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A binding element that contains the settings to be used to initialize this binding element.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>A single retry cycle attempts to deliver a message to an application a specified number of times.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The number of attempts made is set by the <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application fails to consume the message after the attempts at delivery have been exhausted, the message is sent to a retry queue.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A&gt;</ph> property specifies the number of retry cycles that the application uses to attempt to deliver the message.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An integer that indicates the maximum number of retry cycles to attempt delivery of messages to the application.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The default value is 2.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets an <ph id="ph1">&lt;xref href="System.ServiceModel.Configuration.MsmqTransportSecurityElement"&gt;&lt;/xref&gt;</ph> instance that encapsulates the transport security settings for a binding.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ServiceModel.Configuration.MsmqTransportSecurityElement"&gt;&lt;/xref&gt;</ph> instance that encapsulates the transport security settings for a binding.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Configuration.ConfigurationPropertyCollection"&gt;&lt;/xref&gt;</ph> instance that contains a collection of <ph id="ph2">&lt;xref href="System.Configuration.ConfigurationProperty"&gt;&lt;/xref&gt;</ph> objects that can be attributes or <ph id="ph3">&lt;xref href="System.Configuration.ConfigurationElement"&gt;&lt;/xref&gt;</ph> objects of this configuration element.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.ConfigurationPropertyCollection"&gt;&lt;/xref&gt;</ph> instance that contains a collection of <ph id="ph2">&lt;xref href="System.Configuration.ConfigurationProperty"&gt;&lt;/xref&gt;</ph> objects that can be attributes or <ph id="ph3">&lt;xref href="System.Configuration.ConfigurationElement"&gt;&lt;/xref&gt;</ph> objects of this binding configuration element.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies if receive context for processing messages in queues is enabled.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this is <ph id="ph1">`true`</ph>, a service can "peek" a message on the queue to begin processing it, and, if anything goes wrong and an exception is thrown, it remains on the queue.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Services can also "lock" messages in order to retry processing at a later point in time.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>ReceiveContext provides a mechanism for "completing" the message once processed so it can be removed from the queue.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages are no longer being read and re-written to queues over the network, and individual messages aren’t bouncing across different service instances during processing.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if receive context for processing messages in queues is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets an enumeration value that specifies how poison and nondispatchable messages are handled.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.ServiceModel.ReceiveErrorHandling.Fault&gt;</ph>, the channel listener is faulted and a <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> (wrapping a <ph id="ph3">&lt;xref:System.ServiceModel.MsmqPoisonMessageException&gt;</ph>) is traced and thrown.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The offending message is left in the queue and needs to be removed by some manual method.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MsmqPoisonMessageException&gt;</ph> contains a <ph id="ph2">&lt;xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A&gt;</ph> that can be used to identify and manually remove the offending message from the poison-message queue.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.ServiceModel.ReceiveErrorHandling.Drop&gt;</ph>, the offending message is simply dropped.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.ServiceModel.ReceiveErrorHandling.Reject&gt;</ph>, a negative acknowledgment is sent to the client and the offending message is removed from the poison-message queue.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This option is available only on Message Queuing (also known as MSMQ) 4.0.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>When set to <ph id="ph1">&lt;xref:System.ServiceModel.ReceiveErrorHandling.Move&gt;</ph>, the offending message is moved to the final poison subqueue.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This option is available only on Message Queuing 4.0.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.ReceiveErrorHandling"&gt;&lt;/xref&gt;</ph> value that specifies how poison and nondispatchable messages are handled.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum number of times that the queue manager should attempt to send a message before transferring it to the retry queue.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the maximum number of delivery attempts is reached and the message is not consumed by the application, then the message is sent to a retry queue for redelivery at some later point in time.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The amount of time before the message is transferred back to the sending queue is controlled by <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If retry cycles reach the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A&gt;</ph> value, then either the message is sent to the poison-message queue, or a negative acknowledgment is sent back to the sender.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer that specifies the maximum number of times that the queue manager should attempt to send a message before transferring it to the retry queue.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the time delay between retry cycles when attempting to deliver a message that could not be delivered immediately.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>A single retry cycle attempts to deliver a message to a receiving application a specified number of times.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The number of attempts made is specified by the <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application fails to consume the message after the specified number of immediate retries, the message is sent to a retry queue.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The number of retry cycles is specified by the <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The default value is "00:10:00".</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets or sets the interval of time that indicates how long the messages processed by this binding can be in the queue before they expire.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A&gt;</ph> property is set to ensure that time-sensitive messages do not become stale before they are processed by the receiving applications.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>A message in a queue that is not consumed by the receiving application within the time interval specified is said to be expired.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Expired messages are sent to a special queue called the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The location of the dead-letter queue is set with the <ph id="ph1">&lt;xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A&gt;</ph> property or to the appropriate default, based on assurances.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that indicates how long the messages can be in the queue before they expire.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The default value is one day (01:00:00:00).</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that indicates whether messages processed by this binding should be traced.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>When tracing is enabled, report messages are created and sent to the report queue each time the message leaves or arrives at a computer running Message Queuing (also known as MSMQ).</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if messages processed by this binding should be traced; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queued applications that must keep a record of messages that have left the computer's outgoing queue can copy the messages to a journal queue.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once a message leaves the outgoing queue and an acknowledgment is received that the message was received on the destination computer, a copy of the message is kept in the sending computer's system journal queue.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if copies of messages processed by this binding should be stored in the source journal queue; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies a connection time-out when used with queued channels.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A&gt;</ph> expires for a message, any transaction that may be used for its processing will be aborted along with the workflow instance if the expiration occurs during the transaction.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A connection time-out when used with queued channels.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>