{"nodes":[{"content":"Defines the base class for all context-bound classes.","nodes":[{"pos":[0,53],"content":"Defines the base class for all context-bound classes.","nodes":[{"content":"Defines the base class for all context-bound classes.","pos":[0,53]}]}],"pos":[421,475],"yaml":true},{"content":"Objects that reside in a context and are bound to the context rules are called context-bound objects. A context is a set of properties or usage rules that define an environment where a collection of objects resides. The rules are enforced when the objects are entering or leaving a context. Objects that are not context-bound are called agile objects.  \n  \n Contexts are created during object activation. A new object is placed into an existing context or into a new context created using the attributes included in the metadata of the type. Context-bound classes are marked with a <xref:System.Runtime.Remoting.Contexts.ContextAttribute> that provides the usage rules. The context properties that can be added include policies regarding synchronization and transactions.","nodes":[{"pos":[0,351],"content":"Objects that reside in a context and are bound to the context rules are called context-bound objects. A context is a set of properties or usage rules that define an environment where a collection of objects resides. The rules are enforced when the objects are entering or leaving a context. Objects that are not context-bound are called agile objects.","nodes":[{"content":"Objects that reside in a context and are bound to the context rules are called context-bound objects. A context is a set of properties or usage rules that define an environment where a collection of objects resides. The rules are enforced when the objects are entering or leaving a context. Objects that are not context-bound are called agile objects.","pos":[0,351],"nodes":[{"content":"Objects that reside in a context and are bound to the context rules are called context-bound objects.","pos":[0,101]},{"content":"A context is a set of properties or usage rules that define an environment where a collection of objects resides.","pos":[102,215]},{"content":"The rules are enforced when the objects are entering or leaving a context.","pos":[216,290]},{"content":"Objects that are not context-bound are called agile objects.","pos":[291,351]}]}]},{"pos":[358,771],"content":"Contexts are created during object activation. A new object is placed into an existing context or into a new context created using the attributes included in the metadata of the type. Context-bound classes are marked with a <xref:System.Runtime.Remoting.Contexts.ContextAttribute> that provides the usage rules. The context properties that can be added include policies regarding synchronization and transactions.","nodes":[{"content":"Contexts are created during object activation. A new object is placed into an existing context or into a new context created using the attributes included in the metadata of the type. Context-bound classes are marked with a <xref:System.Runtime.Remoting.Contexts.ContextAttribute> that provides the usage rules. The context properties that can be added include policies regarding synchronization and transactions.","pos":[0,413],"nodes":[{"content":"Contexts are created during object activation.","pos":[0,46]},{"content":"A new object is placed into an existing context or into a new context created using the attributes included in the metadata of the type.","pos":[47,183]},{"content":"Context-bound classes are marked with a <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.ContextAttribute&gt;</ph> that provides the usage rules.","pos":[184,311],"source":" Context-bound classes are marked with a <xref:System.Runtime.Remoting.Contexts.ContextAttribute> that provides the usage rules."},{"content":"The context properties that can be added include policies regarding synchronization and transactions.","pos":[312,413]}]}]}],"pos":[486,1262],"yaml":true,"extradata":"MT"},{"content":"Instantiates an instance of the <xref href=\"System.ContextBoundObject\"></xref> class.","nodes":[{"pos":[0,85],"content":"Instantiates an instance of the <ph id=\"ph1\">&lt;xref href=\"System.ContextBoundObject\"&gt;&lt;/xref&gt;</ph> class.","source":"Instantiates an instance of the <xref href=\"System.ContextBoundObject\"></xref> class."}],"pos":[3296,3382],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ContextBoundObject\n  commentId: T:System.ContextBoundObject\n  id: ContextBoundObject\n  children:\n  - System.ContextBoundObject.#ctor\n  langs:\n  - csharp\n  name: ContextBoundObject\n  nameWithType: ContextBoundObject\n  fullName: System.ContextBoundObject\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Defines the base class for all context-bound classes.\n  remarks: \"Objects that reside in a context and are bound to the context rules are called context-bound objects. A context is a set of properties or usage rules that define an environment where a collection of objects resides. The rules are enforced when the objects are entering or leaving a context. Objects that are not context-bound are called agile objects.  \\n  \\n Contexts are created during object activation. A new object is placed into an existing context or into a new context created using the attributes included in the metadata of the type. Context-bound classes are marked with a <xref:System.Runtime.Remoting.Contexts.ContextAttribute> that provides the usage rules. The context properties that can be added include policies regarding synchronization and transactions.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class ContextBoundObject : MarshalByRefObject\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  derivedClasses:\n  - System.ServiceModel.ComIntegration.ServiceMoniker\n  implements: []\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ContextBoundObject.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ContextBoundObject.#ctor\n  commentId: M:System.ContextBoundObject.#ctor\n  id: '#ctor'\n  parent: System.ContextBoundObject\n  langs:\n  - csharp\n  name: ContextBoundObject()\n  nameWithType: ContextBoundObject.ContextBoundObject()\n  fullName: ContextBoundObject.ContextBoundObject()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Instantiates an instance of the <xref href=\"System.ContextBoundObject\"></xref> class.\n  syntax:\n    content: protected ContextBoundObject ();\n    parameters: []\n  overload: System.ContextBoundObject.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ContextBoundObject.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.ContextBoundObject.#ctor\n  parent: System.ContextBoundObject\n  isExternal: false\n  name: ContextBoundObject()\n  nameWithType: ContextBoundObject.ContextBoundObject()\n  fullName: ContextBoundObject.ContextBoundObject()\n- uid: System.ContextBoundObject.#ctor*\n  parent: System.ContextBoundObject\n  isExternal: false\n  name: ContextBoundObject\n  nameWithType: ContextBoundObject.ContextBoundObject\n  fullName: ContextBoundObject.ContextBoundObject\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/ContextBoundObject.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n"}