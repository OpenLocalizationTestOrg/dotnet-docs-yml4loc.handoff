{"nodes":[{"content":"Provides the basic functionality for propagating a synchronization context in various synchronization models.","nodes":[{"pos":[0,109],"content":"Provides the basic functionality for propagating a synchronization context in various synchronization models.","nodes":[{"content":"Provides the basic functionality for propagating a synchronization context in various synchronization models.","pos":[0,109]}]}],"pos":[1477,1587],"yaml":true},{"content":"The <xref:System.Threading.SynchronizationContext> class is a base class that provides a free-threaded context with no synchronization.  \n  \n The purpose of the synchronization model implemented by this class is to allow the internal asynchronous/synchronous operations of the common language runtime to behave properly with different synchronization models. This model also simplifies some of the requirements that managed applications have had to follow in order to work correctly under different synchronization environments.  \n  \n Providers of synchronization models can extend this class and provide their own implementations for these methods.  \n  \n For more information about synchronization contexts, see the article [It's All About the SynchronizationContext](http://msdn.microsoft.com/magazine/gg598924.aspx) in the MSDN Magazine.","nodes":[{"pos":[0,135],"content":"The <xref:System.Threading.SynchronizationContext> class is a base class that provides a free-threaded context with no synchronization.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> class is a base class that provides a free-threaded context with no synchronization.","pos":[0,135],"source":"The <xref:System.Threading.SynchronizationContext> class is a base class that provides a free-threaded context with no synchronization."}]},{"pos":[142,528],"content":"The purpose of the synchronization model implemented by this class is to allow the internal asynchronous/synchronous operations of the common language runtime to behave properly with different synchronization models. This model also simplifies some of the requirements that managed applications have had to follow in order to work correctly under different synchronization environments.","nodes":[{"content":"The purpose of the synchronization model implemented by this class is to allow the internal asynchronous/synchronous operations of the common language runtime to behave properly with different synchronization models. This model also simplifies some of the requirements that managed applications have had to follow in order to work correctly under different synchronization environments.","pos":[0,386],"nodes":[{"content":"The purpose of the synchronization model implemented by this class is to allow the internal asynchronous/synchronous operations of the common language runtime to behave properly with different synchronization models.","pos":[0,216]},{"content":"This model also simplifies some of the requirements that managed applications have had to follow in order to work correctly under different synchronization environments.","pos":[217,386]}]}]},{"pos":[535,649],"content":"Providers of synchronization models can extend this class and provide their own implementations for these methods.","nodes":[{"content":"Providers of synchronization models can extend this class and provide their own implementations for these methods.","pos":[0,114]}]},{"pos":[656,840],"content":"For more information about synchronization contexts, see the article <bpt id=\"p1\">[</bpt>It's All About the SynchronizationContext<ept id=\"p1\">](http://msdn.microsoft.com/magazine/gg598924.aspx)</ept> in the MSDN Magazine.","source":"For more information about synchronization contexts, see the article [It's All About the SynchronizationContext](http://msdn.microsoft.com/magazine/gg598924.aspx) in the MSDN Magazine."}],"pos":[1598,2447],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Threading.SynchronizationContext\"></xref> class.","nodes":[{"pos":[0,97],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.SynchronizationContext\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Threading.SynchronizationContext\"></xref> class."}],"pos":[4510,4608],"yaml":true},{"content":"The default constructor performs no parameter initialization.","nodes":[{"pos":[0,61],"content":"The default constructor performs no parameter initialization.","nodes":[{"content":"The default constructor performs no parameter initialization.","pos":[0,61]}]}],"pos":[4619,4681],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, creates a copy of the synchronization context.","nodes":[{"pos":[0,82],"content":"When overridden in a derived class, creates a copy of the synchronization context.","nodes":[{"content":"When overridden in a derived class, creates a copy of the synchronization context.","pos":[0,82]}]}],"pos":[6325,6408],"yaml":true},{"content":"The default implementation returns an empty <xref:System.Threading.SynchronizationContext> object.","nodes":[{"pos":[0,98],"content":"The default implementation returns an empty <xref:System.Threading.SynchronizationContext> object.","nodes":[{"content":"The default implementation returns an empty <ph id=\"ph1\">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object.","pos":[0,98],"source":"The default implementation returns an empty <xref:System.Threading.SynchronizationContext> object."}]}],"pos":[6419,6518],"yaml":true,"extradata":"MT"},{"content":"A new <xref href=\"System.Threading.SynchronizationContext\"></xref> object.","nodes":[{"pos":[0,74],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Threading.SynchronizationContext\"&gt;&lt;/xref&gt;</ph> object.","source":"A new <xref href=\"System.Threading.SynchronizationContext\"></xref> object."}],"pos":[6713,6788],"yaml":true},{"content":"Gets the synchronization context for the current thread.","nodes":[{"pos":[0,56],"content":"Gets the synchronization context for the current thread.","nodes":[{"content":"Gets the synchronization context for the current thread.","pos":[0,56]}]}],"pos":[8339,8396],"yaml":true},{"content":"This property is useful for propagating a synchronization context from one thread to another.","nodes":[{"pos":[0,93],"content":"This property is useful for propagating a synchronization context from one thread to another.","nodes":[{"content":"This property is useful for propagating a synchronization context from one thread to another.","pos":[0,93]}]}],"pos":[8407,8501],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Threading.SynchronizationContext\"></xref> object representing the current synchronization context.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Threading.SynchronizationContext\"&gt;&lt;/xref&gt;</ph> object representing the current synchronization context.","source":"A <xref href=\"System.Threading.SynchronizationContext\"></xref> object representing the current synchronization context."}],"pos":[8678,8798],"yaml":true},{"content":"Determines if wait notification is required.","nodes":[{"pos":[0,44],"content":"Determines if wait notification is required.","nodes":[{"content":"Determines if wait notification is required.","pos":[0,44]}]}],"pos":[10464,10509],"yaml":true},{"content":"`true` if wait notification is required; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if wait notification is required; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if wait notification is required; otherwise, `false`."}],"pos":[10652,10715],"yaml":true},{"content":"When overridden in a derived class, responds to the notification that an operation has completed.","nodes":[{"pos":[0,97],"content":"When overridden in a derived class, responds to the notification that an operation has completed.","nodes":[{"content":"When overridden in a derived class, responds to the notification that an operation has completed.","pos":[0,97]}]}],"pos":[12048,12146],"yaml":true},{"content":"The default implementation contains no code. You can optionally override this method to provide code that executes when an operation is complete.","nodes":[{"pos":[0,145],"content":"The default implementation contains no code. You can optionally override this method to provide code that executes when an operation is complete.","nodes":[{"content":"The default implementation contains no code. You can optionally override this method to provide code that executes when an operation is complete.","pos":[0,145],"nodes":[{"content":"The default implementation contains no code.","pos":[0,44]},{"content":"You can optionally override this method to provide code that executes when an operation is complete.","pos":[45,145]}]}]}],"pos":[12157,12303],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, responds to the notification that an operation has started.","nodes":[{"pos":[0,95],"content":"When overridden in a derived class, responds to the notification that an operation has started.","nodes":[{"content":"When overridden in a derived class, responds to the notification that an operation has started.","pos":[0,95]}]}],"pos":[14005,14101],"yaml":true},{"content":"The default implementation contains no code. You can optionally override this method to provide code that executes when an operation starts.","nodes":[{"pos":[0,140],"content":"The default implementation contains no code. You can optionally override this method to provide code that executes when an operation starts.","nodes":[{"content":"The default implementation contains no code. You can optionally override this method to provide code that executes when an operation starts.","pos":[0,140],"nodes":[{"content":"The default implementation contains no code.","pos":[0,44]},{"content":"You can optionally override this method to provide code that executes when an operation starts.","pos":[45,140]}]}]}],"pos":[14112,14253],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, dispatches an asynchronous message to a synchronization context.","nodes":[{"pos":[0,100],"content":"When overridden in a derived class, dispatches an asynchronous message to a synchronization context.","nodes":[{"content":"When overridden in a derived class, dispatches an asynchronous message to a synchronization context.","pos":[0,100]}]}],"pos":[16110,16211],"yaml":true},{"content":"The <xref:System.Threading.SynchronizationContext.Post%2A> method starts an asynchronous request to post a message.","nodes":[{"pos":[0,115],"content":"The <xref:System.Threading.SynchronizationContext.Post%2A> method starts an asynchronous request to post a message.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.SynchronizationContext.Post%2A&gt;</ph> method starts an asynchronous request to post a message.","pos":[0,115],"source":"The <xref:System.Threading.SynchronizationContext.Post%2A> method starts an asynchronous request to post a message."}]}],"pos":[16222,16338],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Threading.SendOrPostCallback\"></xref> delegate to call.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.SendOrPostCallback\"&gt;&lt;/xref&gt;</ph> delegate to call.","source":"The <xref href=\"System.Threading.SendOrPostCallback\"></xref> delegate to call."}],"pos":[16536,16615],"yaml":true},{"content":"The object passed to the delegate.","nodes":[{"pos":[0,34],"content":"The object passed to the delegate.","nodes":[{"content":"The object passed to the delegate.","pos":[0,34]}]}],"pos":[16676,16711],"yaml":true},{"content":"When overridden in a derived class, dispatches a synchronous message to a synchronization context.","nodes":[{"pos":[0,98],"content":"When overridden in a derived class, dispatches a synchronous message to a synchronization context.","nodes":[{"content":"When overridden in a derived class, dispatches a synchronous message to a synchronization context.","pos":[0,98]}]}],"pos":[18473,18572],"yaml":true},{"content":"The <xref:System.Threading.SynchronizationContext.Send%2A> method starts a synchronous request to send a message.","nodes":[{"pos":[0,113],"content":"The <xref:System.Threading.SynchronizationContext.Send%2A> method starts a synchronous request to send a message.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.SynchronizationContext.Send%2A&gt;</ph> method starts a synchronous request to send a message.","pos":[0,113],"source":"The <xref:System.Threading.SynchronizationContext.Send%2A> method starts a synchronous request to send a message."}]}],"pos":[18583,18697],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Threading.SendOrPostCallback\"></xref> delegate to call.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.SendOrPostCallback\"&gt;&lt;/xref&gt;</ph> delegate to call.","source":"The <xref href=\"System.Threading.SendOrPostCallback\"></xref> delegate to call."}],"pos":[18895,18974],"yaml":true},{"content":"The object passed to the delegate.","nodes":[{"pos":[0,34],"content":"The object passed to the delegate.","nodes":[{"content":"The object passed to the delegate.","pos":[0,34]}]}],"pos":[19035,19070],"yaml":true},{"content":"The method was called in a Windows Store app. The implementation of <xref href=\"System.Threading.SynchronizationContext\"></xref> for Windows Store apps does not support the <xref href=\"System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\"></xref> method.","nodes":[{"pos":[0,297],"content":"The method was called in a Windows Store app. The implementation of <xref href=\"System.Threading.SynchronizationContext\"></xref> for Windows Store apps does not support the <xref href=\"System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\"></xref> method.","nodes":[{"content":"The method was called in a Windows Store app.","pos":[0,45]},{"content":"The implementation of <ph id=\"ph1\">&lt;xref href=\"System.Threading.SynchronizationContext\"&gt;&lt;/xref&gt;</ph> for Windows Store apps does not support the <ph id=\"ph2\">&lt;xref href=\"System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","pos":[46,297],"source":" The implementation of <xref href=\"System.Threading.SynchronizationContext\"></xref> for Windows Store apps does not support the <xref href=\"System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\"></xref> method."}]}],"pos":[19244,19542],"yaml":true},{"content":"Sets the current synchronization context.","nodes":[{"pos":[0,41],"content":"Sets the current synchronization context.","nodes":[{"content":"Sets the current synchronization context.","pos":[0,41]}]}],"pos":[21313,21355],"yaml":true},{"content":"The <xref href=\"System.Threading.SynchronizationContext\"></xref> object to be set.","nodes":[{"pos":[0,82],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.SynchronizationContext\"&gt;&lt;/xref&gt;</ph> object to be set.","source":"The <xref href=\"System.Threading.SynchronizationContext\"></xref> object to be set."}],"pos":[21638,21721],"yaml":true},{"content":"Sets notification that wait notification is required and prepares the callback method so it can be called more reliably when a wait occurs.","nodes":[{"pos":[0,139],"content":"Sets notification that wait notification is required and prepares the callback method so it can be called more reliably when a wait occurs.","nodes":[{"content":"Sets notification that wait notification is required and prepares the callback method so it can be called more reliably when a wait occurs.","pos":[0,139]}]}],"pos":[24820,24960],"yaml":true},{"content":"Waits for any or all the elements in the specified array to receive a signal.","nodes":[{"pos":[0,77],"content":"Waits for any or all the elements in the specified array to receive a signal.","nodes":[{"content":"Waits for any or all the elements in the specified array to receive a signal.","pos":[0,77]}]}],"pos":[26523,26601],"yaml":true},{"content":"The <xref:System.Threading.SynchronizationContext.Wait%2A> method calls the external declaration <xref:System.Threading.SynchronizationContext.WaitHelper%2A> to perform the wait activity.  Override the <xref:System.Threading.SynchronizationContext.Wait%2A> method to change the wait behavior for the synchronization context.","nodes":[{"pos":[0,324],"content":"The <xref:System.Threading.SynchronizationContext.Wait%2A> method calls the external declaration <xref:System.Threading.SynchronizationContext.WaitHelper%2A> to perform the wait activity.  Override the <xref:System.Threading.SynchronizationContext.Wait%2A> method to change the wait behavior for the synchronization context.","nodes":[{"content":"The <xref:System.Threading.SynchronizationContext.Wait%2A> method calls the external declaration <xref:System.Threading.SynchronizationContext.WaitHelper%2A> to perform the wait activity.  Override the <xref:System.Threading.SynchronizationContext.Wait%2A> method to change the wait behavior for the synchronization context.","pos":[0,324],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> method calls the external declaration <ph id=\"ph2\">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> to perform the wait activity.","pos":[0,187],"source":"The <xref:System.Threading.SynchronizationContext.Wait%2A> method calls the external declaration <xref:System.Threading.SynchronizationContext.WaitHelper%2A> to perform the wait activity."},{"content":"Override the <ph id=\"ph1\">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> method to change the wait behavior for the synchronization context.","pos":[189,324],"source":"  Override the <xref:System.Threading.SynchronizationContext.Wait%2A> method to change the wait behavior for the synchronization context."}]}]}],"pos":[26612,26937],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.IntPtr\"></xref> that contains the native operating system handles.","nodes":[{"pos":[0,102],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph> that contains the native operating system handles.","source":"An array of type <xref href=\"System.IntPtr\"></xref> that contains the native operating system handles."}],"pos":[27219,27322],"yaml":true},{"content":"`true` to wait for all handles; `false` to wait for any handle.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> to wait for all handles; <ph id=\"ph2\">`false`</ph> to wait for any handle.","source":"`true` to wait for all handles; `false` to wait for any handle."}],"pos":[27386,27452],"yaml":true},{"content":"The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref> (-1) to wait indefinitely.","nodes":[{"pos":[0,120],"content":"The number of milliseconds to wait, or <ph id=\"ph1\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph> (-1) to wait indefinitely.","source":"The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref> (-1) to wait indefinitely."}],"pos":[27526,27647],"yaml":true},{"content":"The array index of the object that satisfied the wait.","nodes":[{"pos":[0,54],"content":"The array index of the object that satisfied the wait.","nodes":[{"content":"The array index of the object that satisfied the wait.","pos":[0,54]}]}],"pos":[27703,27758],"yaml":true},{"content":"<code>waitHandles</code> is null.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;waitHandles&lt;/code&gt;</ph> is null.","source":"<code>waitHandles</code> is null."}],"pos":[27932,27966],"yaml":true},{"content":"Helper function that waits for any or all the elements in the specified array to receive a signal.","nodes":[{"pos":[0,98],"content":"Helper function that waits for any or all the elements in the specified array to receive a signal.","nodes":[{"content":"Helper function that waits for any or all the elements in the specified array to receive a signal.","pos":[0,98]}]}],"pos":[29580,29679],"yaml":true},{"content":"<xref:System.Threading.SynchronizationContext.WaitHelper%2A> is a declaration for an unmanaged external helper function. <xref:System.Threading.SynchronizationContext.WaitHelper%2A> is called by the <xref:System.Threading.SynchronizationContext.Wait%2A> method to wait for a signal for the specified operating system handles.","nodes":[{"pos":[0,325],"content":"<xref:System.Threading.SynchronizationContext.WaitHelper%2A> is a declaration for an unmanaged external helper function. <xref:System.Threading.SynchronizationContext.WaitHelper%2A> is called by the <xref:System.Threading.SynchronizationContext.Wait%2A> method to wait for a signal for the specified operating system handles.","nodes":[{"content":"<xref:System.Threading.SynchronizationContext.WaitHelper%2A> is a declaration for an unmanaged external helper function. <xref:System.Threading.SynchronizationContext.WaitHelper%2A> is called by the <xref:System.Threading.SynchronizationContext.Wait%2A> method to wait for a signal for the specified operating system handles.","pos":[0,325],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> is a declaration for an unmanaged external helper function.","pos":[0,120],"source":"<xref:System.Threading.SynchronizationContext.WaitHelper%2A> is a declaration for an unmanaged external helper function."},{"content":"<ph id=\"ph1\">&lt;xref:System.Threading.SynchronizationContext.WaitHelper%2A&gt;</ph> is called by the <ph id=\"ph2\">&lt;xref:System.Threading.SynchronizationContext.Wait%2A&gt;</ph> method to wait for a signal for the specified operating system handles.","pos":[121,325],"source":" <xref:System.Threading.SynchronizationContext.WaitHelper%2A> is called by the <xref:System.Threading.SynchronizationContext.Wait%2A> method to wait for a signal for the specified operating system handles."}]}]}],"pos":[29690,30016],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.IntPtr\"></xref> that contains the native operating system handles.","nodes":[{"pos":[0,102],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph> that contains the native operating system handles.","source":"An array of type <xref href=\"System.IntPtr\"></xref> that contains the native operating system handles."}],"pos":[30306,30409],"yaml":true},{"content":"`true` to wait for all handles;  `false` to wait for any handle.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> to wait for all handles;  <ph id=\"ph2\">`false`</ph> to wait for any handle.","source":"`true` to wait for all handles;  `false` to wait for any handle."}],"pos":[30473,30540],"yaml":true},{"content":"The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref> (-1) to wait indefinitely.","nodes":[{"pos":[0,120],"content":"The number of milliseconds to wait, or <ph id=\"ph1\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph> (-1) to wait indefinitely.","source":"The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref> (-1) to wait indefinitely."}],"pos":[30614,30735],"yaml":true},{"content":"The array index of the object that satisfied the wait.","nodes":[{"pos":[0,54],"content":"The array index of the object that satisfied the wait.","nodes":[{"content":"The array index of the object that satisfied the wait.","pos":[0,54]}]}],"pos":[30791,30846],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.SynchronizationContext\n  commentId: T:System.Threading.SynchronizationContext\n  id: SynchronizationContext\n  children:\n  - System.Threading.SynchronizationContext.#ctor\n  - System.Threading.SynchronizationContext.CreateCopy\n  - System.Threading.SynchronizationContext.Current\n  - System.Threading.SynchronizationContext.IsWaitNotificationRequired\n  - System.Threading.SynchronizationContext.OperationCompleted\n  - System.Threading.SynchronizationContext.OperationStarted\n  - System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)\n  - System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\n  - System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)\n  - System.Threading.SynchronizationContext.SetThreadStaticContext(System.Threading.SynchronizationContext)\n  - System.Threading.SynchronizationContext.SetWaitNotificationRequired\n  - System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)\n  - System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)\n  langs:\n  - csharp\n  name: SynchronizationContext\n  nameWithType: SynchronizationContext\n  fullName: System.Threading.SynchronizationContext\n  type: Class\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Provides the basic functionality for propagating a synchronization context in various synchronization models.\n  remarks: \"The <xref:System.Threading.SynchronizationContext> class is a base class that provides a free-threaded context with no synchronization.  \\n  \\n The purpose of the synchronization model implemented by this class is to allow the internal asynchronous/synchronous operations of the common language runtime to behave properly with different synchronization models. This model also simplifies some of the requirements that managed applications have had to follow in order to work correctly under different synchronization environments.  \\n  \\n Providers of synchronization models can extend this class and provide their own implementations for these methods.  \\n  \\n For more information about synchronization contexts, see the article [It's All About the SynchronizationContext](http://msdn.microsoft.com/magazine/gg598924.aspx) in the MSDN Magazine.\"\n  syntax:\n    content: public class SynchronizationContext\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Windows.Forms.WindowsFormsSynchronizationContext\n  - System.Windows.Threading.DispatcherSynchronizationContext\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.#ctor\n  commentId: M:System.Threading.SynchronizationContext.#ctor\n  id: '#ctor'\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: SynchronizationContext()\n  nameWithType: SynchronizationContext.SynchronizationContext()\n  fullName: SynchronizationContext.SynchronizationContext()\n  type: Constructor\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Creates a new instance of the <xref href=\"System.Threading.SynchronizationContext\"></xref> class.\n  remarks: The default constructor performs no parameter initialization.\n  syntax:\n    content: public SynchronizationContext ();\n    parameters: []\n  overload: System.Threading.SynchronizationContext.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.CreateCopy\n  commentId: M:System.Threading.SynchronizationContext.CreateCopy\n  id: CreateCopy\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: CreateCopy()\n  nameWithType: SynchronizationContext.CreateCopy()\n  fullName: SynchronizationContext.CreateCopy()\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: When overridden in a derived class, creates a copy of the synchronization context.\n  remarks: The default implementation returns an empty <xref:System.Threading.SynchronizationContext> object.\n  syntax:\n    content: public virtual System.Threading.SynchronizationContext CreateCopy ();\n    parameters: []\n    return:\n      type: System.Threading.SynchronizationContext\n      description: A new <xref href=\"System.Threading.SynchronizationContext\"></xref> object.\n  overload: System.Threading.SynchronizationContext.CreateCopy*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.Current\n  commentId: P:System.Threading.SynchronizationContext.Current\n  id: Current\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: Current\n  nameWithType: SynchronizationContext.Current\n  fullName: SynchronizationContext.Current\n  type: Property\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Gets the synchronization context for the current thread.\n  remarks: This property is useful for propagating a synchronization context from one thread to another.\n  syntax:\n    content: public static System.Threading.SynchronizationContext Current { get; }\n    return:\n      type: System.Threading.SynchronizationContext\n      description: A <xref href=\"System.Threading.SynchronizationContext\"></xref> object representing the current synchronization context.\n  overload: System.Threading.SynchronizationContext.Current*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.IsWaitNotificationRequired\n  commentId: M:System.Threading.SynchronizationContext.IsWaitNotificationRequired\n  id: IsWaitNotificationRequired\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: IsWaitNotificationRequired()\n  nameWithType: SynchronizationContext.IsWaitNotificationRequired()\n  fullName: SynchronizationContext.IsWaitNotificationRequired()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Determines if wait notification is required.\n  syntax:\n    content: public bool IsWaitNotificationRequired ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if wait notification is required; otherwise, `false`.'\n  overload: System.Threading.SynchronizationContext.IsWaitNotificationRequired*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.OperationCompleted\n  commentId: M:System.Threading.SynchronizationContext.OperationCompleted\n  id: OperationCompleted\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: OperationCompleted()\n  nameWithType: SynchronizationContext.OperationCompleted()\n  fullName: SynchronizationContext.OperationCompleted()\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: When overridden in a derived class, responds to the notification that an operation has completed.\n  remarks: The default implementation contains no code. You can optionally override this method to provide code that executes when an operation is complete.\n  syntax:\n    content: public virtual void OperationCompleted ();\n    parameters: []\n  overload: System.Threading.SynchronizationContext.OperationCompleted*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.OperationStarted\n  commentId: M:System.Threading.SynchronizationContext.OperationStarted\n  id: OperationStarted\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: OperationStarted()\n  nameWithType: SynchronizationContext.OperationStarted()\n  fullName: SynchronizationContext.OperationStarted()\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: When overridden in a derived class, responds to the notification that an operation has started.\n  remarks: The default implementation contains no code. You can optionally override this method to provide code that executes when an operation starts.\n  syntax:\n    content: public virtual void OperationStarted ();\n    parameters: []\n  overload: System.Threading.SynchronizationContext.OperationStarted*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)\n  commentId: M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)\n  id: Post(System.Threading.SendOrPostCallback,System.Object)\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: Post(SendOrPostCallback, Object)\n  nameWithType: SynchronizationContext.Post(SendOrPostCallback, Object)\n  fullName: SynchronizationContext.Post(SendOrPostCallback, Object)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: When overridden in a derived class, dispatches an asynchronous message to a synchronization context.\n  remarks: The <xref:System.Threading.SynchronizationContext.Post%2A> method starts an asynchronous request to post a message.\n  syntax:\n    content: public virtual void Post (System.Threading.SendOrPostCallback d, object state);\n    parameters:\n    - id: d\n      type: System.Threading.SendOrPostCallback\n      description: The <xref href=\"System.Threading.SendOrPostCallback\"></xref> delegate to call.\n    - id: state\n      type: System.Object\n      description: The object passed to the delegate.\n  overload: System.Threading.SynchronizationContext.Post*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\n  commentId: M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\n  id: Send(System.Threading.SendOrPostCallback,System.Object)\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: Send(SendOrPostCallback, Object)\n  nameWithType: SynchronizationContext.Send(SendOrPostCallback, Object)\n  fullName: SynchronizationContext.Send(SendOrPostCallback, Object)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: When overridden in a derived class, dispatches a synchronous message to a synchronization context.\n  remarks: The <xref:System.Threading.SynchronizationContext.Send%2A> method starts a synchronous request to send a message.\n  syntax:\n    content: public virtual void Send (System.Threading.SendOrPostCallback d, object state);\n    parameters:\n    - id: d\n      type: System.Threading.SendOrPostCallback\n      description: The <xref href=\"System.Threading.SendOrPostCallback\"></xref> delegate to call.\n    - id: state\n      type: System.Object\n      description: The object passed to the delegate.\n  overload: System.Threading.SynchronizationContext.Send*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The method was called in a Windows Store app. The implementation of <xref href=\"System.Threading.SynchronizationContext\"></xref> for Windows Store apps does not support the <xref href=\"System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\"></xref> method.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)\n  commentId: M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)\n  id: SetSynchronizationContext(System.Threading.SynchronizationContext)\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: SetSynchronizationContext(SynchronizationContext)\n  nameWithType: SynchronizationContext.SetSynchronizationContext(SynchronizationContext)\n  fullName: SynchronizationContext.SetSynchronizationContext(SynchronizationContext)\n  type: Method\n  assemblies:\n  - System.Threading\n  - mscorlib\n  - netstandard\n  namespace: System.Threading\n  summary: Sets the current synchronization context.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public static void SetSynchronizationContext (System.Threading.SynchronizationContext syncContext);\n    parameters:\n    - id: syncContext\n      type: System.Threading.SynchronizationContext\n      description: The <xref href=\"System.Threading.SynchronizationContext\"></xref> object to be set.\n  overload: System.Threading.SynchronizationContext.SetSynchronizationContext*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.SetThreadStaticContext(System.Threading.SynchronizationContext)\n  commentId: M:System.Threading.SynchronizationContext.SetThreadStaticContext(System.Threading.SynchronizationContext)\n  id: SetThreadStaticContext(System.Threading.SynchronizationContext)\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: SetThreadStaticContext(SynchronizationContext)\n  nameWithType: SynchronizationContext.SetThreadStaticContext(SynchronizationContext)\n  fullName: SynchronizationContext.SetThreadStaticContext(SynchronizationContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: >-\n      [System.Obsolete(\"The method is not supported and will be removed\")]\n\n      public static void SetThreadStaticContext (System.Threading.SynchronizationContext syncContext);\n    parameters:\n    - id: syncContext\n      type: System.Threading.SynchronizationContext\n      description: ''\n  overload: System.Threading.SynchronizationContext.SetThreadStaticContext*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.SetWaitNotificationRequired\n  commentId: M:System.Threading.SynchronizationContext.SetWaitNotificationRequired\n  id: SetWaitNotificationRequired\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: SetWaitNotificationRequired()\n  nameWithType: SynchronizationContext.SetWaitNotificationRequired()\n  fullName: SynchronizationContext.SetWaitNotificationRequired()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Sets notification that wait notification is required and prepares the callback method so it can be called more reliably when a wait occurs.\n  syntax:\n    content: protected void SetWaitNotificationRequired ();\n    parameters: []\n  overload: System.Threading.SynchronizationContext.SetWaitNotificationRequired*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)\n  commentId: M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)\n  id: Wait(System.IntPtr[],System.Boolean,System.Int32)\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: Wait(IntPtr[], Boolean, Int32)\n  nameWithType: SynchronizationContext.Wait(IntPtr[], Boolean, Int32)\n  fullName: SynchronizationContext.Wait(IntPtr[], Boolean, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Waits for any or all the elements in the specified array to receive a signal.\n  remarks: The <xref:System.Threading.SynchronizationContext.Wait%2A> method calls the external declaration <xref:System.Threading.SynchronizationContext.WaitHelper%2A> to perform the wait activity.  Override the <xref:System.Threading.SynchronizationContext.Wait%2A> method to change the wait behavior for the synchronization context.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Security.SecurityCritical]\n\n      public virtual int Wait (IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout);\n    parameters:\n    - id: waitHandles\n      type: System.IntPtr[]\n      description: An array of type <xref href=\"System.IntPtr\"></xref> that contains the native operating system handles.\n    - id: waitAll\n      type: System.Boolean\n      description: '`true` to wait for all handles; `false` to wait for any handle.'\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref> (-1) to wait indefinitely.\n    return:\n      type: System.Int32\n      description: The array index of the object that satisfied the wait.\n  overload: System.Threading.SynchronizationContext.Wait*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>waitHandles</code> is null.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)\n  commentId: M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)\n  id: WaitHelper(System.IntPtr[],System.Boolean,System.Int32)\n  parent: System.Threading.SynchronizationContext\n  langs:\n  - csharp\n  name: WaitHelper(IntPtr[], Boolean, Int32)\n  nameWithType: SynchronizationContext.WaitHelper(IntPtr[], Boolean, Int32)\n  fullName: SynchronizationContext.WaitHelper(IntPtr[], Boolean, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Helper function that waits for any or all the elements in the specified array to receive a signal.\n  remarks: <xref:System.Threading.SynchronizationContext.WaitHelper%2A> is a declaration for an unmanaged external helper function. <xref:System.Threading.SynchronizationContext.WaitHelper%2A> is called by the <xref:System.Threading.SynchronizationContext.Wait%2A> method to wait for a signal for the specified operating system handles.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Security.SecurityCritical]\n\n      protected static int WaitHelper (IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout);\n    parameters:\n    - id: waitHandles\n      type: System.IntPtr[]\n      description: An array of type <xref href=\"System.IntPtr\"></xref> that contains the native operating system handles.\n    - id: waitAll\n      type: System.Boolean\n      description: '`true` to wait for all handles;  `false` to wait for any handle.'\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: The number of milliseconds to wait, or <xref href=\"System.Threading.Timeout.Infinite\"></xref> (-1) to wait indefinitely.\n    return:\n      type: System.Int32\n      description: The array index of the object that satisfied the wait.\n  overload: System.Threading.SynchronizationContext.WaitHelper*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Threading.SynchronizationContext.#ctor\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: SynchronizationContext()\n  nameWithType: SynchronizationContext.SynchronizationContext()\n  fullName: SynchronizationContext.SynchronizationContext()\n- uid: System.Threading.SynchronizationContext.CreateCopy\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: CreateCopy()\n  nameWithType: SynchronizationContext.CreateCopy()\n  fullName: SynchronizationContext.CreateCopy()\n- uid: System.Threading.SynchronizationContext\n  parent: System.Threading\n  isExternal: false\n  name: SynchronizationContext\n  nameWithType: SynchronizationContext\n  fullName: System.Threading.SynchronizationContext\n- uid: System.Threading.SynchronizationContext.Current\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: Current\n  nameWithType: SynchronizationContext.Current\n  fullName: SynchronizationContext.Current\n- uid: System.Threading.SynchronizationContext.IsWaitNotificationRequired\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: IsWaitNotificationRequired()\n  nameWithType: SynchronizationContext.IsWaitNotificationRequired()\n  fullName: SynchronizationContext.IsWaitNotificationRequired()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.SynchronizationContext.OperationCompleted\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: OperationCompleted()\n  nameWithType: SynchronizationContext.OperationCompleted()\n  fullName: SynchronizationContext.OperationCompleted()\n- uid: System.Threading.SynchronizationContext.OperationStarted\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: OperationStarted()\n  nameWithType: SynchronizationContext.OperationStarted()\n  fullName: SynchronizationContext.OperationStarted()\n- uid: System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: Post(SendOrPostCallback, Object)\n  nameWithType: SynchronizationContext.Post(SendOrPostCallback, Object)\n  fullName: SynchronizationContext.Post(SendOrPostCallback, Object)\n- uid: System.Threading.SendOrPostCallback\n  parent: System.Threading\n  isExternal: false\n  name: SendOrPostCallback\n  nameWithType: SendOrPostCallback\n  fullName: System.Threading.SendOrPostCallback\n- uid: System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: Send(SendOrPostCallback, Object)\n  nameWithType: SynchronizationContext.Send(SendOrPostCallback, Object)\n  fullName: SynchronizationContext.Send(SendOrPostCallback, Object)\n- uid: System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: SetSynchronizationContext(SynchronizationContext)\n  nameWithType: SynchronizationContext.SetSynchronizationContext(SynchronizationContext)\n  fullName: SynchronizationContext.SetSynchronizationContext(SynchronizationContext)\n- uid: System.Threading.SynchronizationContext.SetThreadStaticContext(System.Threading.SynchronizationContext)\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: SetThreadStaticContext(SynchronizationContext)\n  nameWithType: SynchronizationContext.SetThreadStaticContext(SynchronizationContext)\n  fullName: SynchronizationContext.SetThreadStaticContext(SynchronizationContext)\n- uid: System.Threading.SynchronizationContext.SetWaitNotificationRequired\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: SetWaitNotificationRequired()\n  nameWithType: SynchronizationContext.SetWaitNotificationRequired()\n  fullName: SynchronizationContext.SetWaitNotificationRequired()\n- uid: System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: Wait(IntPtr[], Boolean, Int32)\n  nameWithType: SynchronizationContext.Wait(IntPtr[], Boolean, Int32)\n  fullName: SynchronizationContext.Wait(IntPtr[], Boolean, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IntPtr\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr[]\n  parent: System\n  isExternal: false\n  name: IntPtr[]\n  nameWithType: IntPtr[]\n  fullName: System.IntPtr[]\n  spec.csharp:\n  - uid: System.IntPtr\n    name: IntPtr\n    nameWithType: IntPtr\n    fullName: System.IntPtr\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: WaitHelper(IntPtr[], Boolean, Int32)\n  nameWithType: SynchronizationContext.WaitHelper(IntPtr[], Boolean, Int32)\n  fullName: SynchronizationContext.WaitHelper(IntPtr[], Boolean, Int32)\n- uid: System.Threading.SynchronizationContext.#ctor*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: SynchronizationContext\n  nameWithType: SynchronizationContext.SynchronizationContext\n  fullName: SynchronizationContext.SynchronizationContext\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.CreateCopy*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: CreateCopy\n  nameWithType: SynchronizationContext.CreateCopy\n  fullName: SynchronizationContext.CreateCopy\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.Current*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: Current\n  nameWithType: SynchronizationContext.Current\n  fullName: SynchronizationContext.Current\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.IsWaitNotificationRequired*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: IsWaitNotificationRequired\n  nameWithType: SynchronizationContext.IsWaitNotificationRequired\n  fullName: SynchronizationContext.IsWaitNotificationRequired\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.OperationCompleted*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: OperationCompleted\n  nameWithType: SynchronizationContext.OperationCompleted\n  fullName: SynchronizationContext.OperationCompleted\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.OperationStarted*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: OperationStarted\n  nameWithType: SynchronizationContext.OperationStarted\n  fullName: SynchronizationContext.OperationStarted\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.Post*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: Post\n  nameWithType: SynchronizationContext.Post\n  fullName: SynchronizationContext.Post\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.Send*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: Send\n  nameWithType: SynchronizationContext.Send\n  fullName: SynchronizationContext.Send\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.SetSynchronizationContext*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: SetSynchronizationContext\n  nameWithType: SynchronizationContext.SetSynchronizationContext\n  fullName: SynchronizationContext.SetSynchronizationContext\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.SetThreadStaticContext*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: SetThreadStaticContext\n  nameWithType: SynchronizationContext.SetThreadStaticContext\n  fullName: SynchronizationContext.SetThreadStaticContext\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.SetWaitNotificationRequired*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: SetWaitNotificationRequired\n  nameWithType: SynchronizationContext.SetWaitNotificationRequired\n  fullName: SynchronizationContext.SetWaitNotificationRequired\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.Wait*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: Wait\n  nameWithType: SynchronizationContext.Wait\n  fullName: SynchronizationContext.Wait\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Threading.SynchronizationContext.WaitHelper*\n  parent: System.Threading.SynchronizationContext\n  isExternal: false\n  name: WaitHelper\n  nameWithType: SynchronizationContext.WaitHelper\n  fullName: SynchronizationContext.WaitHelper\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SynchronizationContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}