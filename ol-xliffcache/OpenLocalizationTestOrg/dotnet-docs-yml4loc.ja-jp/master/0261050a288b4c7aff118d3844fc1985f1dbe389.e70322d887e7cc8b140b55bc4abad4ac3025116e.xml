{"nodes":[{"content":"Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.","nodes":[{"pos":[0,143],"content":"Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.","nodes":[{"content":"Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.","pos":[0,143],"nodes":[{"content":"Specifies the settings provider used to provide storage for the current application settings class or property.","pos":[0,111]},{"content":"This class cannot be inherited.","pos":[112,143]}]}]}],"pos":[691,835],"yaml":true},{"content":"Each application settings class defines a group of application settings properties that represent information that persists between executions of the application. However, it is a settings provider—a class derived from <xref:System.Configuration.SettingsProvider>—that actually provides the storage mechanism.  \n  \n The <xref:System.Configuration.SettingsProviderAttribute> specifies the settings provider used to provide storage for application settings properties. This attribute can be applied to the entire application settings class or individual application settings properties. A <xref:System.Configuration.SettingsProviderAttribute> set at the property level will override the class-level attribute. If a settings provider is not explicitly specified, the default provider is used. For client applications, the default provider is <xref:System.Configuration.LocalFileSettingsProvider>.  \n  \n Setting providers cannot be determined at run time. Any run-time determination of storage methods must be coded into the settings provider class itself.  \n  \n> [!CAUTION]\n>  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.","nodes":[{"pos":[0,309],"content":"Each application settings class defines a group of application settings properties that represent information that persists between executions of the application. However, it is a settings provider—a class derived from <xref:System.Configuration.SettingsProvider>—that actually provides the storage mechanism.","nodes":[{"content":"Each application settings class defines a group of application settings properties that represent information that persists between executions of the application. However, it is a settings provider—a class derived from <xref:System.Configuration.SettingsProvider>—that actually provides the storage mechanism.","pos":[0,309],"nodes":[{"content":"Each application settings class defines a group of application settings properties that represent information that persists between executions of the application.","pos":[0,162]},{"content":"However, it is a settings provider—a class derived from <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsProvider&gt;</ph>—that actually provides the storage mechanism.","pos":[163,309],"source":" However, it is a settings provider—a class derived from <xref:System.Configuration.SettingsProvider>—that actually provides the storage mechanism."}]}]},{"pos":[316,893],"content":"The <xref:System.Configuration.SettingsProviderAttribute> specifies the settings provider used to provide storage for application settings properties. This attribute can be applied to the entire application settings class or individual application settings properties. A <xref:System.Configuration.SettingsProviderAttribute> set at the property level will override the class-level attribute. If a settings provider is not explicitly specified, the default provider is used. For client applications, the default provider is <xref:System.Configuration.LocalFileSettingsProvider>.","nodes":[{"content":"The <xref:System.Configuration.SettingsProviderAttribute> specifies the settings provider used to provide storage for application settings properties. This attribute can be applied to the entire application settings class or individual application settings properties. A <xref:System.Configuration.SettingsProviderAttribute> set at the property level will override the class-level attribute. If a settings provider is not explicitly specified, the default provider is used. For client applications, the default provider is <xref:System.Configuration.LocalFileSettingsProvider>.","pos":[0,577],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph> specifies the settings provider used to provide storage for application settings properties.","pos":[0,150],"source":"The <xref:System.Configuration.SettingsProviderAttribute> specifies the settings provider used to provide storage for application settings properties."},{"content":"This attribute can be applied to the entire application settings class or individual application settings properties.","pos":[151,268]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph> set at the property level will override the class-level attribute.","pos":[269,391],"source":" A <xref:System.Configuration.SettingsProviderAttribute> set at the property level will override the class-level attribute."},{"content":"If a settings provider is not explicitly specified, the default provider is used.","pos":[392,473]},{"content":"For client applications, the default provider is <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>.","pos":[474,577],"source":" For client applications, the default provider is <xref:System.Configuration.LocalFileSettingsProvider>."}]}]},{"pos":[900,1052],"content":"Setting providers cannot be determined at run time. Any run-time determination of storage methods must be coded into the settings provider class itself.","nodes":[{"content":"Setting providers cannot be determined at run time. Any run-time determination of storage methods must be coded into the settings provider class itself.","pos":[0,152],"nodes":[{"content":"Setting providers cannot be determined at run time.","pos":[0,51]},{"content":"Any run-time determination of storage methods must be coded into the settings provider class itself.","pos":[52,152]}]}]},{"pos":[1060,1342],"content":"[!CAUTION]\n Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.","leadings":["","> "],"nodes":[{"content":" Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.","pos":[11,280],"nodes":[{"content":"Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information.","pos":[1,183]},{"content":"A settings provider should be thoroughly vetted before it is adopted for general use.","pos":[184,269]}]}]}],"pos":[846,2198],"yaml":true,"extradata":"MT"},{"content":"Initializes an instance of the <xref href=\"System.Configuration.SettingsProviderAttribute\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsProviderAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes an instance of the <xref href=\"System.Configuration.SettingsProviderAttribute\"></xref> class."}],"pos":[7357,7463],"yaml":true},{"content":"The type name is the name of the class, derived from <xref:System.Configuration.SettingsProvider>, that is being specified as the settings provider.  \n  \n> [!CAUTION]\n>  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.","nodes":[{"pos":[0,148],"content":"The type name is the name of the class, derived from <xref:System.Configuration.SettingsProvider>, that is being specified as the settings provider.","nodes":[{"content":"The type name is the name of the class, derived from <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsProvider&gt;</ph>, that is being specified as the settings provider.","pos":[0,148],"source":"The type name is the name of the class, derived from <xref:System.Configuration.SettingsProvider>, that is being specified as the settings provider."}]},{"pos":[156,438],"content":"[!CAUTION]\n Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.","leadings":["","> "],"nodes":[{"content":" Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.","pos":[11,280],"nodes":[{"content":"Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information.","pos":[1,183]},{"content":"A settings provider should be thoroughly vetted before it is adopted for general use.","pos":[184,269]}]}]}],"pos":[7474,7918],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing the name of the settings provider.","nodes":[{"pos":[0,82],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the settings provider.","source":"A <xref href=\"System.String\"></xref> containing the name of the settings provider."}],"pos":[8089,8172],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.SettingsProviderAttribute\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsProviderAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.SettingsProviderAttribute\"></xref> class."}],"pos":[9449,9558],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> containing the settings provider type.","nodes":[{"pos":[0,73],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> containing the settings provider type.","source":"A <xref href=\"System.Type\"></xref> containing the settings provider type."}],"pos":[9717,9791],"yaml":true},{"content":"Gets the type name of the settings provider.","nodes":[{"pos":[0,44],"content":"Gets the type name of the settings provider.","nodes":[{"content":"Gets the type name of the settings provider.","pos":[0,44]}]}],"pos":[11012,11057],"yaml":true},{"content":"The <xref:System.Configuration.SettingsProviderAttribute.ProviderTypeName%2A> property is set in the <xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A> for the class.","nodes":[{"pos":[0,180],"content":"The <xref:System.Configuration.SettingsProviderAttribute.ProviderTypeName%2A> property is set in the <xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A> for the class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsProviderAttribute.ProviderTypeName%2A&gt;</ph> property is set in the <ph id=\"ph2\">&lt;xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A&gt;</ph> for the class.","pos":[0,180],"source":"The <xref:System.Configuration.SettingsProviderAttribute.ProviderTypeName%2A> property is set in the <xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A> for the class."}]}],"pos":[11068,11249],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing the name of the settings provider.","nodes":[{"pos":[0,82],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of the settings provider.","source":"A <xref href=\"System.String\"></xref> containing the name of the settings provider."}],"pos":[11369,11452],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.SettingsProviderAttribute\n  commentId: T:System.Configuration.SettingsProviderAttribute\n  id: SettingsProviderAttribute\n  children:\n  - System.Configuration.SettingsProviderAttribute.#ctor(System.String)\n  - System.Configuration.SettingsProviderAttribute.#ctor(System.Type)\n  - System.Configuration.SettingsProviderAttribute.ProviderTypeName\n  langs:\n  - csharp\n  name: SettingsProviderAttribute\n  nameWithType: SettingsProviderAttribute\n  fullName: System.Configuration.SettingsProviderAttribute\n  type: Class\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.\n  remarks: \"Each application settings class defines a group of application settings properties that represent information that persists between executions of the application. However, it is a settings provider—a class derived from <xref:System.Configuration.SettingsProvider>—that actually provides the storage mechanism.  \\n  \\n The <xref:System.Configuration.SettingsProviderAttribute> specifies the settings provider used to provide storage for application settings properties. This attribute can be applied to the entire application settings class or individual application settings properties. A <xref:System.Configuration.SettingsProviderAttribute> set at the property level will override the class-level attribute. If a settings provider is not explicitly specified, the default provider is used. For client applications, the default provider is <xref:System.Configuration.LocalFileSettingsProvider>.  \\n  \\n Setting providers cannot be determined at run time. Any run-time determination of storage methods must be coded into the settings provider class itself.  \\n  \\n> [!CAUTION]\\n>  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]\n\n      public sealed class SettingsProviderAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.String)\n  commentId: M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Configuration.SettingsProviderAttribute\n  langs:\n  - csharp\n  name: SettingsProviderAttribute(String)\n  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(String)\n  fullName: SettingsProviderAttribute.SettingsProviderAttribute(String)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes an instance of the <xref href=\"System.Configuration.SettingsProviderAttribute\"></xref> class.\n  remarks: \"The type name is the name of the class, derived from <xref:System.Configuration.SettingsProvider>, that is being specified as the settings provider.  \\n  \\n> [!CAUTION]\\n>  Using custom settings providers from arbitrary third parties is inherently unsafe because these providers have full read/write access to your application's configuration information. A settings provider should be thoroughly vetted before it is adopted for general use.\"\n  syntax:\n    content: public SettingsProviderAttribute (string providerTypeName);\n    parameters:\n    - id: providerTypeName\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing the name of the settings provider.\n  overload: System.Configuration.SettingsProviderAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.Type)\n  commentId: M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Configuration.SettingsProviderAttribute\n  langs:\n  - csharp\n  name: SettingsProviderAttribute(Type)\n  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(Type)\n  fullName: SettingsProviderAttribute.SettingsProviderAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.SettingsProviderAttribute\"></xref> class.\n  syntax:\n    content: public SettingsProviderAttribute (Type providerType);\n    parameters:\n    - id: providerType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> containing the settings provider type.\n  overload: System.Configuration.SettingsProviderAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.SettingsProviderAttribute.ProviderTypeName\n  commentId: P:System.Configuration.SettingsProviderAttribute.ProviderTypeName\n  id: ProviderTypeName\n  parent: System.Configuration.SettingsProviderAttribute\n  langs:\n  - csharp\n  name: ProviderTypeName\n  nameWithType: SettingsProviderAttribute.ProviderTypeName\n  fullName: SettingsProviderAttribute.ProviderTypeName\n  type: Property\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets the type name of the settings provider.\n  remarks: The <xref:System.Configuration.SettingsProviderAttribute.ProviderTypeName%2A> property is set in the <xref:System.Configuration.SettingsProviderAttribute.%23ctor%2A> for the class.\n  syntax:\n    content: public string ProviderTypeName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing the name of the settings provider.\n  overload: System.Configuration.SettingsProviderAttribute.ProviderTypeName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.String)\n  parent: System.Configuration.SettingsProviderAttribute\n  isExternal: false\n  name: SettingsProviderAttribute(String)\n  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(String)\n  fullName: SettingsProviderAttribute.SettingsProviderAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.SettingsProviderAttribute.#ctor(System.Type)\n  parent: System.Configuration.SettingsProviderAttribute\n  isExternal: false\n  name: SettingsProviderAttribute(Type)\n  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute(Type)\n  fullName: SettingsProviderAttribute.SettingsProviderAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.SettingsProviderAttribute.ProviderTypeName\n  parent: System.Configuration.SettingsProviderAttribute\n  isExternal: false\n  name: ProviderTypeName\n  nameWithType: SettingsProviderAttribute.ProviderTypeName\n  fullName: SettingsProviderAttribute.ProviderTypeName\n- uid: System.Configuration.SettingsProviderAttribute.#ctor*\n  parent: System.Configuration.SettingsProviderAttribute\n  isExternal: false\n  name: SettingsProviderAttribute\n  nameWithType: SettingsProviderAttribute.SettingsProviderAttribute\n  fullName: SettingsProviderAttribute.SettingsProviderAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderAttribute.xml\n- uid: System.Configuration.SettingsProviderAttribute.ProviderTypeName*\n  parent: System.Configuration.SettingsProviderAttribute\n  isExternal: false\n  name: ProviderTypeName\n  nameWithType: SettingsProviderAttribute.ProviderTypeName\n  fullName: SettingsProviderAttribute.ProviderTypeName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsProviderAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}