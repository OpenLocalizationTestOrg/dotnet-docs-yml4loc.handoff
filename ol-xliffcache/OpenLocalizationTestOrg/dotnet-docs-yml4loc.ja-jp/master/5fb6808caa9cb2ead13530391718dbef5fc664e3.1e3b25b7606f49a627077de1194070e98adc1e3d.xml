{"nodes":[{"content":"Abstract base class for the channel dispatcher that accepts channels and associates them with a service.","nodes":[{"pos":[0,104],"content":"Abstract base class for the channel dispatcher that accepts channels and associates them with a service.","nodes":[{"content":"Abstract base class for the channel dispatcher that accepts channels and associates them with a service.","pos":[0,104]}]}],"pos":[925,1030],"yaml":true},{"content":"This is used by developers who want to keep the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] programming model but replace the system-provided runtime. Such applications will pull messages out of channels and handle them directly with user-defined dispatchers. To use <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  \n  \n The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively.  \n  \n <xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.  \n  \n <xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts. [!INCLUDE[indigo1](~/includes/indigo1-md.md)] uses this call to close datagram channels and wait for all messages to get to an InstanceContext.","nodes":[{"pos":[0,659],"content":"This is used by developers who want to keep the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] programming model but replace the system-provided runtime. Such applications will pull messages out of channels and handle them directly with user-defined dispatchers. To use <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.","nodes":[{"content":"This is used by developers who want to keep the <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> programming model but replace the system-provided runtime.","pos":[0,152],"source":"This is used by developers who want to keep the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] programming model but replace the system-provided runtime."},{"content":"Such applications will pull messages out of channels and handle them directly with user-defined dispatchers.","pos":[153,261]},{"content":"To use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> , create a class derived from it, extend <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> and override <ph id=\"ph3\">&lt;xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A&gt;</ph>, adding instances of your class derived from <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> to <ph id=\"ph5\">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph>.","pos":[262,659],"source":" To use <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>."}]},{"pos":[666,1072],"content":"The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, associated with the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> object are available for inspection or modification through the <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> respectively.","pos":[0,406],"source":"The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively."}]},{"pos":[1079,1531],"content":"<xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> methods when adding or removing a <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> item from its <ph id=\"ph5\">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.","pos":[0,452],"source":"<xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection."}]},{"pos":[1538,1853],"content":"<xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts. [!INCLUDE[indigo1](~/includes/indigo1-md.md)] uses this call to close datagram channels and wait for all messages to get to an InstanceContext.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A&gt;</ph> during shutdown before closing InstanceContexts.","pos":[0,171],"source":"<xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts."},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses this call to close datagram channels and wait for all messages to get to an InstanceContext.","pos":[172,315],"source":"[!INCLUDE[indigo1](~/includes/indigo1-md.md)] uses this call to close datagram channels and wait for all messages to get to an InstanceContext."}]}],"pos":[1041,2903],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcherBase\"></xref> class.","nodes":[{"pos":[0,114],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcherBase\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcherBase\"></xref> class."}],"pos":[7395,7510],"yaml":true},{"content":"When overridden in a derived class, attaches the channel dispatcher to a specific host.","nodes":[{"pos":[0,87],"content":"When overridden in a derived class, attaches the channel dispatcher to a specific host.","nodes":[{"content":"When overridden in a derived class, attaches the channel dispatcher to a specific host.","pos":[0,87]}]}],"pos":[8834,8922],"yaml":true},{"content":"This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.  \n  \n A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.  This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.","nodes":[{"pos":[0,244],"content":"This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"This method can only be set when the instance of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,244],"source":"This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]},{"pos":[251,761],"content":"A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.  This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.","nodes":[{"content":"A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.  This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.","pos":[0,510],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method when the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is added to its <ph id=\"ph3\">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.","pos":[0,220],"source":"A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection."},{"content":"This gives the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> a chance to hook events and inspect the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, and provides the value that should be returned from the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> property.","pos":[222,510],"source":"  This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property."}]}]}],"pos":[8933,9699],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;&lt;/xref&gt;</ph> for the service.","source":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service."}],"pos":[9894,9972],"yaml":true},{"content":"<code>host</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;host&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>host</code> is `null`."}],"pos":[10161,10190],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state or the host is already set.","nodes":[{"pos":[0,205],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state or the host is already set.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state or the host is already set."}],"pos":[10300,10506],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[10612,10790],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[10946,11054],"yaml":true},{"content":"When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.","nodes":[{"pos":[0,108],"content":"When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.","nodes":[{"content":"When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.","pos":[0,108]}]}],"pos":[12079,12188],"yaml":true},{"content":"<xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.","nodes":[{"pos":[0,222],"content":"<xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.","nodes":[{"content":"<xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.","pos":[0,222],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method during shutdown to give the dispatcher a chance to drain messages.","pos":[0,123],"source":"<xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> uses this call to close datagram channels.","pos":[124,222],"source":" <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels."}]}]}],"pos":[12199,12422],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, detaches the channel dispatcher from a specific host.","nodes":[{"pos":[0,89],"content":"When overridden in a derived class, detaches the channel dispatcher from a specific host.","nodes":[{"content":"When overridden in a derived class, detaches the channel dispatcher from a specific host.","pos":[0,89]}]}],"pos":[13750,13840],"yaml":true},{"content":"The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.  \n  \n Should set the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.  \n  \n <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection. This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>.","nodes":[{"pos":[0,284],"content":"The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> can only be detached when the instance of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id=\"ph3\">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.","pos":[0,284],"source":"The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."}]},{"pos":[291,398],"content":"Should set the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> associated with the channel dispatcher to <ph id=\"ph2\">`null`</ph>.","source":"Should set the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`."},{"pos":[405,784],"content":"<xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection. This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>.","nodes":[{"content":"<xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection. This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>.","pos":[0,379],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method when the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is removed from its <ph id=\"ph3\">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.","pos":[0,222],"source":"<xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection."},{"content":"This gives the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> a chance to unhook events and inspect the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.","pos":[223,379],"source":" This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>."}]}]}],"pos":[13851,14642],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref>.","nodes":[{"pos":[0,61],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref>."}],"pos":[14837,14899],"yaml":true},{"content":"<code>host</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;host&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>host</code> is `null`."}],"pos":[15088,15117],"yaml":true},{"content":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state or the host is already set.","nodes":[{"pos":[0,205],"content":"The communication object is in an <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opening\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Opened\"&gt;&lt;/xref&gt;</ph> state or the host is already set.","source":"The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state or the host is already set."}],"pos":[15227,15433],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.","nodes":[{"pos":[0,177],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closing\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.CommunicationState.Closed\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state."}],"pos":[15539,15717],"yaml":true},{"content":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.","nodes":[{"pos":[0,107],"content":"The communication object is in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.CommunicationState.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state."}],"pos":[15873,15981],"yaml":true},{"content":"When overridden in a derived class, gets the service host associated with the channel dispatcher.","nodes":[{"pos":[0,97],"content":"When overridden in a derived class, gets the service host associated with the channel dispatcher.","nodes":[{"content":"When overridden in a derived class, gets the service host associated with the channel dispatcher.","pos":[0,97]}]}],"pos":[16966,17064],"yaml":true},{"content":"Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service. The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.","nodes":[{"pos":[0,416],"content":"Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service. The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.","nodes":[{"content":"Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service. The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.","pos":[0,416],"nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object can have many <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects, each associated with a different <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> for that service.","pos":[0,233],"source":"Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service."},{"content":"The host keeps a list of these <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> objects in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.","pos":[234,416],"source":" The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection."}]}]}],"pos":[17075,17492],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service associated with the dispatcher.","nodes":[{"pos":[0,108],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;&lt;/xref&gt;</ph> for the service associated with the dispatcher.","source":"The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service associated with the dispatcher."}],"pos":[17660,17769],"yaml":true},{"content":"When overridden in a derived class, gets the channel listener associated with the channel dispatcher.","nodes":[{"pos":[0,101],"content":"When overridden in a derived class, gets the channel listener associated with the channel dispatcher.","nodes":[{"content":"When overridden in a derived class, gets the channel listener associated with the channel dispatcher.","pos":[0,101]}]}],"pos":[18866,18968],"yaml":true},{"content":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching.","nodes":[{"pos":[0,233],"content":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> associates an <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> whose channels and messages this <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is dispatching.","pos":[0,233],"source":"A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching."}]}],"pos":[18979,19213],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> associated with the channel dispatcher.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener\"&gt;&lt;/xref&gt;</ph> associated with the channel dispatcher.","source":"The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> associated with the channel dispatcher."}],"pos":[19405,19516],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  commentId: T:System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  id: ChannelDispatcherBase\n  children:\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host\n  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener\n  langs:\n  - csharp\n  name: ChannelDispatcherBase\n  nameWithType: ChannelDispatcherBase\n  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Abstract base class for the channel dispatcher that accepts channels and associates them with a service.\n  remarks: \"This is used by developers who want to keep the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] programming model but replace the system-provided runtime. Such applications will pull messages out of channels and handle them directly with user-defined dispatchers. To use <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  \\n  \\n The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively.  \\n  \\n <xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.  \\n  \\n <xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts. [!INCLUDE[indigo1](~/includes/indigo1-md.md)] uses this call to close datagram channels and wait for all messages to get to an InstanceContext.\"\n  syntax:\n    content: 'public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  derivedClasses:\n  - System.ServiceModel.Dispatcher.ChannelDispatcher\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout\n  - System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnAbort\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnOpened\n  - System.ServiceModel.Channels.CommunicationObject.OnOpening\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: ChannelDispatcherBase()\n  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()\n  fullName: ChannelDispatcherBase.ChannelDispatcherBase()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.ChannelDispatcherBase\"></xref> class.\n  syntax:\n    content: protected ChannelDispatcherBase ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)\n  id: Attach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: Attach(ServiceHostBase)\n  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)\n  fullName: ChannelDispatcherBase.Attach(ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, attaches the channel dispatcher to a specific host.\n  remarks: \"This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.  \\n  \\n A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.  This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.\"\n  syntax:\n    content: protected virtual void Attach (System.ServiceModel.ServiceHostBase host);\n    parameters:\n    - id: host\n      type: System.ServiceModel.ServiceHostBase\n      description: The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>host</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state or the host is already set.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput\n  id: CloseInput\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: CloseInput()\n  nameWithType: ChannelDispatcherBase.CloseInput()\n  fullName: ChannelDispatcherBase.CloseInput()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.\n  remarks: <xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.\n  syntax:\n    content: public virtual void CloseInput ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)\n  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)\n  id: Detach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: Detach(ServiceHostBase)\n  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)\n  fullName: ChannelDispatcherBase.Detach(ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, detaches the channel dispatcher from a specific host.\n  remarks: \"The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.  \\n  \\n Should set the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.  \\n  \\n <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection. This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>.\"\n  syntax:\n    content: protected virtual void Detach (System.ServiceModel.ServiceHostBase host);\n    parameters:\n    - id: host\n      type: System.ServiceModel.ServiceHostBase\n      description: The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref>.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>host</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The communication object is in an <xref href=\"System.ServiceModel.CommunicationState.Opening\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Opened\"></xref> state or the host is already set.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\"></xref> state.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\"></xref> state.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host\n  id: Host\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: Host\n  nameWithType: ChannelDispatcherBase.Host\n  fullName: ChannelDispatcherBase.Host\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, gets the service host associated with the channel dispatcher.\n  remarks: Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service. The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.\n  syntax:\n    content: public abstract System.ServiceModel.ServiceHostBase Host { get; }\n    return:\n      type: System.ServiceModel.ServiceHostBase\n      description: The <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> for the service associated with the dispatcher.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener\n  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener\n  id: Listener\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  langs:\n  - csharp\n  name: Listener\n  nameWithType: ChannelDispatcherBase.Listener\n  fullName: ChannelDispatcherBase.Listener\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, gets the channel listener associated with the channel dispatcher.\n  remarks: A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching.\n  syntax:\n    content: public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }\n    return:\n      type: System.ServiceModel.Channels.IChannelListener\n      description: The <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> associated with the channel dispatcher.\n  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.CommunicationObject\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: CommunicationObject\n  nameWithType: CommunicationObject\n  fullName: System.ServiceModel.Channels.CommunicationObject\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.ServiceModel.CommunicationObjectFaultedException\n  parent: System.ServiceModel\n  isExternal: false\n  name: CommunicationObjectFaultedException\n  nameWithType: CommunicationObjectFaultedException\n  fullName: System.ServiceModel.CommunicationObjectFaultedException\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: ChannelDispatcherBase()\n  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()\n  fullName: ChannelDispatcherBase.ChannelDispatcherBase()\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Attach(ServiceHostBase)\n  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)\n  fullName: ChannelDispatcherBase.Attach(ServiceHostBase)\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: CloseInput()\n  nameWithType: ChannelDispatcherBase.CloseInput()\n  fullName: ChannelDispatcherBase.CloseInput()\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Detach(ServiceHostBase)\n  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)\n  fullName: ChannelDispatcherBase.Detach(ServiceHostBase)\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Host\n  nameWithType: ChannelDispatcherBase.Host\n  fullName: ChannelDispatcherBase.Host\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Listener\n  nameWithType: ChannelDispatcherBase.Listener\n  fullName: ChannelDispatcherBase.Listener\n- uid: System.ServiceModel.Channels.IChannelListener\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener\n  nameWithType: IChannelListener\n  fullName: System.ServiceModel.Channels.IChannelListener\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: ChannelDispatcherBase\n  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase\n  fullName: ChannelDispatcherBase.ChannelDispatcherBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Attach\n  nameWithType: ChannelDispatcherBase.Attach\n  fullName: ChannelDispatcherBase.Attach\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: CloseInput\n  nameWithType: ChannelDispatcherBase.CloseInput\n  fullName: ChannelDispatcherBase.CloseInput\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Detach\n  nameWithType: ChannelDispatcherBase.Detach\n  fullName: ChannelDispatcherBase.Detach\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Host\n  nameWithType: ChannelDispatcherBase.Host\n  fullName: ChannelDispatcherBase.Host\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*\n  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase\n  isExternal: false\n  name: Listener\n  nameWithType: ChannelDispatcherBase.Listener\n  fullName: ChannelDispatcherBase.Listener\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcherBase.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: CommunicationObject.DefaultCloseTimeout\n  fullName: CommunicationObject.DefaultCloseTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: CommunicationObject.DefaultOpenTimeout\n  fullName: CommunicationObject.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.Channels.CommunicationObject.OnAbort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnAbort()\n  nameWithType: CommunicationObject.OnAbort()\n  fullName: CommunicationObject.OnAbort()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: CommunicationObject.OnClose(TimeSpan)\n  fullName: CommunicationObject.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndClose(IAsyncResult)\n  fullName: CommunicationObject.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)\n  fullName: CommunicationObject.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: CommunicationObject.OnOpen(TimeSpan)\n  fullName: CommunicationObject.OnOpen(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpened()\n  nameWithType: CommunicationObject.OnOpened()\n  fullName: CommunicationObject.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpening()\n  nameWithType: CommunicationObject.OnOpening()\n  fullName: CommunicationObject.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n"}