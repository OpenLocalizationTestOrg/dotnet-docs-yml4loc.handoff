{"nodes":[{"content":"Represents a configuration element that contains sub-elements that specify the routing behavior.","nodes":[{"pos":[0,96],"content":"Represents a configuration element that contains sub-elements that specify the routing behavior.","nodes":[{"content":"Represents a configuration element that contains sub-elements that specify the routing behavior.","pos":[0,96]}]}],"pos":[1131,1228],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.ServiceModel.Routing.Configuration.RoutingExtensionElement\"></xref> class.","nodes":[{"pos":[0,123],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.RoutingExtensionElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of <xref href=\"System.ServiceModel.Routing.Configuration.RoutingExtensionElement\"></xref> class."}],"pos":[6185,6309],"yaml":true},{"content":"Gets the type of behavior.","nodes":[{"pos":[0,26],"content":"Gets the type of behavior.","nodes":[{"content":"Gets the type of behavior.","pos":[0,26]}]}],"pos":[7596,7623],"yaml":true},{"content":"The behavior type.","nodes":[{"pos":[0,18],"content":"The behavior type.","nodes":[{"content":"The behavior type.","pos":[0,18]}]}],"pos":[7744,7763],"yaml":true},{"content":"Gets or sets a value that indicates whether messages are to be dispatched in the order they were sent.","nodes":[{"pos":[0,102],"content":"Gets or sets a value that indicates whether messages are to be dispatched in the order they were sent.","nodes":[{"content":"Gets or sets a value that indicates whether messages are to be dispatched in the order they were sent.","pos":[0,102]}]}],"pos":[10313,10416],"yaml":true},{"content":"`true` if messages are to be dispatched in the order they were sent; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if messages are to be dispatched in the order they were sent; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if messages are to be dispatched in the order they were sent; otherwise, `false`."}],"pos":[10680,10771],"yaml":true},{"content":"Gets or sets the name of the filter table used by this routing service for routing messages.","nodes":[{"pos":[0,92],"content":"Gets or sets the name of the filter table used by this routing service for routing messages.","nodes":[{"content":"Gets or sets the name of the filter table used by this routing service for routing messages.","pos":[0,92]}]}],"pos":[12091,12184],"yaml":true},{"content":"The name of the filter table.","nodes":[{"pos":[0,29],"content":"The name of the filter table.","nodes":[{"content":"The name of the filter table.","pos":[0,29]}]}],"pos":[12437,12467],"yaml":true},{"content":"Gets or sets a value that indicates whether the filter is allowed to access only the message headers or the message headers and message body.","nodes":[{"pos":[0,141],"content":"Gets or sets a value that indicates whether the filter is allowed to access only the message headers or the message headers and message body.","nodes":[{"content":"Gets or sets a value that indicates whether the filter is allowed to access only the message headers or the message headers and message body.","pos":[0,141]}]}],"pos":[13799,13941],"yaml":true},{"content":"**true** if the filter can only access header values; otherwise, **false**. The default is **true**.","nodes":[{"pos":[0,100],"content":"**true** if the filter can only access header values; otherwise, **false**. The default is **true**.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the filter can only access header values; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","pos":[0,75],"source":"**true** if the filter can only access header values; otherwise, **false**."},{"content":"The default is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>.","pos":[76,100],"source":" The default is **true**."}]}],"pos":[14263,14366],"yaml":true},{"content":"Gets or sets a value that indicates whether SOAP processing should occur.","nodes":[{"pos":[0,73],"content":"Gets or sets a value that indicates whether SOAP processing should occur.","nodes":[{"content":"Gets or sets a value that indicates whether SOAP processing should occur.","pos":[0,73]}]}],"pos":[15719,15793],"yaml":true},{"content":"[!INCLUDE[crabout](~/includes/crabout-md.md)] SOAP processing, see <xref:System.ServiceModel.Routing.SoapProcessingBehavior>.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> SOAP processing, see <ph id=\"ph2\">&lt;xref:System.ServiceModel.Routing.SoapProcessingBehavior&gt;</ph>.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] SOAP processing, see <xref:System.ServiceModel.Routing.SoapProcessingBehavior>."}],"pos":[15804,15932],"yaml":true,"extradata":"MT"},{"content":"**true** if messages should be marshaled; otherwise, **false**. The default is **true**.","nodes":[{"pos":[0,88],"content":"**true** if messages should be marshaled; otherwise, **false**. The default is **true**.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if messages should be marshaled; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","pos":[0,63],"source":"**true** if messages should be marshaled; otherwise, **false**."},{"content":"The default is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>.","pos":[64,88],"source":" The default is **true**."}]}],"pos":[16196,16287],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  commentId: T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  id: RoutingExtensionElement\n  children:\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly\n  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled\n  langs:\n  - csharp\n  name: RoutingExtensionElement\n  nameWithType: RoutingExtensionElement\n  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  type: Class\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Represents a configuration element that contains sub-elements that specify the routing behavior.\n  syntax:\n    content: 'public sealed class RoutingExtensionElement : System.ServiceModel.Configuration.BehaviorExtensionElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement\n  - System.ServiceModel.Configuration.BehaviorExtensionElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Properties\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor\n  commentId: M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: RoutingExtensionElement()\n  nameWithType: RoutingExtensionElement.RoutingExtensionElement()\n  fullName: RoutingExtensionElement.RoutingExtensionElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Initializes a new instance of <xref href=\"System.ServiceModel.Routing.Configuration.RoutingExtensionElement\"></xref> class.\n  syntax:\n    content: public RoutingExtensionElement ();\n    parameters: []\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType\n  commentId: P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType\n  id: BehaviorType\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: BehaviorType\n  nameWithType: RoutingExtensionElement.BehaviorType\n  fullName: RoutingExtensionElement.BehaviorType\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets the type of behavior.\n  syntax:\n    content: public override Type BehaviorType { get; }\n    return:\n      type: System.Type\n      description: The behavior type.\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior\n  commentId: M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior\n  id: CreateBehavior\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: CreateBehavior()\n  nameWithType: RoutingExtensionElement.CreateBehavior()\n  fullName: RoutingExtensionElement.CreateBehavior()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  syntax:\n    content: protected override object CreateBehavior ();\n    parameters: []\n    return:\n      type: System.Object\n      description: ''\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch\n  commentId: P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch\n  id: EnsureOrderedDispatch\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: EnsureOrderedDispatch\n  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch\n  fullName: RoutingExtensionElement.EnsureOrderedDispatch\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets a value that indicates whether messages are to be dispatched in the order they were sent.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"ensureOrderedDispatch\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool EnsureOrderedDispatch { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if messages are to be dispatched in the order they were sent; otherwise, `false`.'\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName\n  commentId: P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName\n  id: FilterTableName\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: FilterTableName\n  nameWithType: RoutingExtensionElement.FilterTableName\n  fullName: RoutingExtensionElement.FilterTableName\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the name of the filter table used by this routing service for routing messages.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"filterTableName\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public string FilterTableName { get; set; }\n    return:\n      type: System.String\n      description: The name of the filter table.\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly\n  commentId: P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly\n  id: RouteOnHeadersOnly\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: RouteOnHeadersOnly\n  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly\n  fullName: RoutingExtensionElement.RouteOnHeadersOnly\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets a value that indicates whether the filter is allowed to access only the message headers or the message headers and message body.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"routeOnHeadersOnly\", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)]\n\n      public bool RouteOnHeadersOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: '**true** if the filter can only access header values; otherwise, **false**. The default is **true**.'\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled\n  commentId: P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled\n  id: SoapProcessingEnabled\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  langs:\n  - csharp\n  name: SoapProcessingEnabled\n  nameWithType: RoutingExtensionElement.SoapProcessingEnabled\n  fullName: RoutingExtensionElement.SoapProcessingEnabled\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets a value that indicates whether SOAP processing should occur.\n  remarks: '[!INCLUDE[crabout](~/includes/crabout-md.md)] SOAP processing, see <xref:System.ServiceModel.Routing.SoapProcessingBehavior>.'\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"soapProcessingEnabled\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool SoapProcessingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '**true** if messages should be marshaled; otherwise, **false**. The default is **true**.'\n  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Configuration.BehaviorExtensionElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: BehaviorExtensionElement\n  nameWithType: BehaviorExtensionElement\n  fullName: System.ServiceModel.Configuration.BehaviorExtensionElement\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: RoutingExtensionElement()\n  nameWithType: RoutingExtensionElement.RoutingExtensionElement()\n  fullName: RoutingExtensionElement.RoutingExtensionElement()\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: BehaviorType\n  nameWithType: RoutingExtensionElement.BehaviorType\n  fullName: RoutingExtensionElement.BehaviorType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: CreateBehavior()\n  nameWithType: RoutingExtensionElement.CreateBehavior()\n  fullName: RoutingExtensionElement.CreateBehavior()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: EnsureOrderedDispatch\n  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch\n  fullName: RoutingExtensionElement.EnsureOrderedDispatch\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: FilterTableName\n  nameWithType: RoutingExtensionElement.FilterTableName\n  fullName: RoutingExtensionElement.FilterTableName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: RouteOnHeadersOnly\n  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly\n  fullName: RoutingExtensionElement.RouteOnHeadersOnly\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: SoapProcessingEnabled\n  nameWithType: RoutingExtensionElement.SoapProcessingEnabled\n  fullName: RoutingExtensionElement.SoapProcessingEnabled\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: RoutingExtensionElement\n  nameWithType: RoutingExtensionElement.RoutingExtensionElement\n  fullName: RoutingExtensionElement.RoutingExtensionElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: BehaviorType\n  nameWithType: RoutingExtensionElement.BehaviorType\n  fullName: RoutingExtensionElement.BehaviorType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: CreateBehavior\n  nameWithType: RoutingExtensionElement.CreateBehavior\n  fullName: RoutingExtensionElement.CreateBehavior\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: EnsureOrderedDispatch\n  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch\n  fullName: RoutingExtensionElement.EnsureOrderedDispatch\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: FilterTableName\n  nameWithType: RoutingExtensionElement.FilterTableName\n  fullName: RoutingExtensionElement.FilterTableName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: RouteOnHeadersOnly\n  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly\n  fullName: RoutingExtensionElement.RouteOnHeadersOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled*\n  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement\n  isExternal: false\n  name: SoapProcessingEnabled\n  nameWithType: RoutingExtensionElement.SoapProcessingEnabled\n  fullName: RoutingExtensionElement.SoapProcessingEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ServiceModelExtensionElement.IsModified()\n  fullName: ServiceModelExtensionElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Properties\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Properties\n  nameWithType: ConfigurationElement.Properties\n  fullName: ConfigurationElement.Properties\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ServiceModelExtensionElement.Reset(ConfigurationElement)\n  fullName: ServiceModelExtensionElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ServiceModelExtensionElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ServiceModelExtensionElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  parent: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  isExternal: false\n  name: SetPropertyValueIfNotDefaultValue<T>(String, T)\n  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n  fullName: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: ConfigurationElementName\n  nameWithType: ServiceModelExtensionElement.ConfigurationElementName\n  fullName: ServiceModelExtensionElement.ConfigurationElementName\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: CopyFrom(ServiceModelExtensionElement)\n  nameWithType: ServiceModelExtensionElement.CopyFrom(ServiceModelExtensionElement)\n  fullName: ServiceModelExtensionElement.CopyFrom(ServiceModelExtensionElement)\n"}