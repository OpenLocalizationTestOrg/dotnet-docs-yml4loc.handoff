### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1
  commentId: T:Microsoft.VisualC.StlClr.ListEnumerator`1
  id: ListEnumerator`1
  children:
  - Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})
  - Microsoft.VisualC.StlClr.ListEnumerator`1.Current
  - Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose
  - Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)
  - Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext
  - Microsoft.VisualC.StlClr.ListEnumerator`1.Reset
  langs:
  - csharp
  name: ListEnumerator<TValue>
  nameWithType: ListEnumerator<TValue>
  fullName: Microsoft.VisualC.StlClr.ListEnumerator<TValue>
  type: Class
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Supports simple iteration over any STL/CLR object that implements the <xref href="Microsoft.VisualC.StlClr.IList`1"></xref> interface.
  remarks: '[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]'
  syntax:
    content: 'public class ListEnumerator<TValue> : Microsoft.VisualC.StlClr.ListEnumeratorBase<TValue>, System.Collections.Generic.IEnumerator<TValue>'
    typeParameters:
    - id: TValue
      description: The type of an element in the controlled sequence.
  inheritance:
  - System.Object
  - Microsoft.VisualC.StlClr.ListEnumeratorBase`1
  implements:
  - System.Collections.Generic.IEnumerator{TValue}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})
  commentId: M:Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})
  id: '#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})'
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  langs:
  - csharp
  name: ListEnumerator<TValue>(INode<TValue>)
  nameWithType: ListEnumerator<TValue>.ListEnumerator<TValue>(INode<TValue>)
  fullName: ListEnumerator<TValue>.ListEnumerator<TValue>(INode<TValue>)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Allocates and initializes a new <xref href="Microsoft.VisualC.StlClr.ListEnumerator`1"></xref> object.
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public ListEnumerator (Microsoft.VisualC.StlClr.Generic.INode<TValue> _First);
    parameters:
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.INode`1
      description: The first node in the container over which to iterate.
  overload: Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.Current
  commentId: P:Microsoft.VisualC.StlClr.ListEnumerator`1.Current
  id: Current
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  langs:
  - csharp
  name: Current
  nameWithType: ListEnumerator<TValue>.Current
  fullName: ListEnumerator<TValue>.Current
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Gets or sets the current element in the collection.
  syntax:
    content: public virtual TValue Current { get; set; }
    return:
      type: TValue
      description: The current element in the collection.
  overload: Microsoft.VisualC.StlClr.ListEnumerator`1.Current*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose
  commentId: M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose
  id: Dispose
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  langs:
  - csharp
  name: Dispose()
  nameWithType: ListEnumerator<TValue>.Dispose()
  fullName: ListEnumerator<TValue>.Dispose()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Frees, releases, or resets unmanaged resources that are used by the <xref href="Microsoft.VisualC.StlClr.ListEnumerator`1"></xref> object.
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)
  commentId: M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ListEnumerator<TValue>.Dispose(Boolean)
  fullName: ListEnumerator<TValue>.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Frees, releases, or resets unmanaged resources that are used by the <xref href="Microsoft.VisualC.StlClr.ListEnumerator`1"></xref> object.
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: '`true` to dispose of managed objects; `false` to dispose of unmanaged objects.'
  overload: Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext
  commentId: M:Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext
  id: MoveNext
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  langs:
  - csharp
  name: MoveNext()
  nameWithType: ListEnumerator<TValue>.MoveNext()
  fullName: ListEnumerator<TValue>.MoveNext()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Advances the enumerator to the next element in the collection.
  syntax:
    content: public override bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.'
  overload: Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.Reset
  commentId: M:Microsoft.VisualC.StlClr.ListEnumerator`1.Reset
  id: Reset
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  langs:
  - csharp
  name: Reset()
  nameWithType: ListEnumerator<TValue>.Reset()
  fullName: ListEnumerator<TValue>.Reset()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Sets the enumerator to its initial position, which is before the first element in the collection.
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.ListEnumerator`1.Reset*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
  ms.author: mblome
  manager: ghogen
references:
- uid: Microsoft.VisualC.StlClr.ListEnumeratorBase`1
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: ListEnumeratorBase<TValue>
  nameWithType: ListEnumeratorBase<TValue>
  fullName: Microsoft.VisualC.StlClr.ListEnumeratorBase<TValue>
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  isExternal: false
  name: ListEnumerator<TValue>(INode<TValue>)
  nameWithType: ListEnumerator<TValue>.ListEnumerator<TValue>(INode<TValue>)
  fullName: ListEnumerator<TValue>.ListEnumerator<TValue>(INode<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.INode`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: INode<TValue>
  nameWithType: INode<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.Current
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  isExternal: false
  name: Current
  nameWithType: ListEnumerator<TValue>.Current
  fullName: ListEnumerator<TValue>.Current
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  isExternal: false
  name: Dispose()
  nameWithType: ListEnumerator<TValue>.Dispose()
  fullName: ListEnumerator<TValue>.Dispose()
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ListEnumerator<TValue>.Dispose(Boolean)
  fullName: ListEnumerator<TValue>.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  isExternal: false
  name: MoveNext()
  nameWithType: ListEnumerator<TValue>.MoveNext()
  fullName: ListEnumerator<TValue>.MoveNext()
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.Reset
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  isExternal: false
  name: Reset()
  nameWithType: ListEnumerator<TValue>.Reset()
  fullName: ListEnumerator<TValue>.Reset()
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor*
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  isExternal: false
  name: ListEnumerator<TValue>
  nameWithType: ListEnumerator<TValue>.ListEnumerator<TValue>
  fullName: ListEnumerator<TValue>.ListEnumerator<TValue>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.Current*
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  isExternal: false
  name: Current
  nameWithType: ListEnumerator<TValue>.Current
  fullName: ListEnumerator<TValue>.Current
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose*
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  isExternal: false
  name: Dispose
  nameWithType: ListEnumerator<TValue>.Dispose
  fullName: ListEnumerator<TValue>.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext*
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  isExternal: false
  name: MoveNext
  nameWithType: ListEnumerator<TValue>.MoveNext
  fullName: ListEnumerator<TValue>.MoveNext
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
- uid: Microsoft.VisualC.StlClr.ListEnumerator`1.Reset*
  parent: Microsoft.VisualC.StlClr.ListEnumerator`1
  isExternal: false
  name: Reset
  nameWithType: ListEnumerator<TValue>.Reset
  fullName: ListEnumerator<TValue>.Reset
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/ListEnumerator`1.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
- uid: System.Collections.Generic.IEnumerator{TValue}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<TValue>
  nameWithType: IEnumerator<TValue>
  fullName: System.Collections.Generic.IEnumerator<TValue>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
