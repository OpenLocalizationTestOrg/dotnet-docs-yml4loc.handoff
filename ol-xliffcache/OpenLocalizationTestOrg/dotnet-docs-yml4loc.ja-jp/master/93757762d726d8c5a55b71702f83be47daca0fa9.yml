### YamlMime:ManagedReference
items:
- uid: System.Threading.Volatile
  commentId: T:System.Threading.Volatile
  id: Volatile
  children:
  - System.Threading.Volatile.Read(System.Boolean@)
  - System.Threading.Volatile.Read(System.Byte@)
  - System.Threading.Volatile.Read(System.Double@)
  - System.Threading.Volatile.Read(System.Int16@)
  - System.Threading.Volatile.Read(System.Int32@)
  - System.Threading.Volatile.Read(System.Int64@)
  - System.Threading.Volatile.Read(System.IntPtr@)
  - System.Threading.Volatile.Read(System.SByte@)
  - System.Threading.Volatile.Read(System.Single@)
  - System.Threading.Volatile.Read(System.UInt16@)
  - System.Threading.Volatile.Read(System.UInt32@)
  - System.Threading.Volatile.Read(System.UInt64@)
  - System.Threading.Volatile.Read(System.UIntPtr@)
  - System.Threading.Volatile.Read``1(``0@)
  - System.Threading.Volatile.Write(System.Boolean@,System.Boolean)
  - System.Threading.Volatile.Write(System.Byte@,System.Byte)
  - System.Threading.Volatile.Write(System.Double@,System.Double)
  - System.Threading.Volatile.Write(System.Int16@,System.Int16)
  - System.Threading.Volatile.Write(System.Int32@,System.Int32)
  - System.Threading.Volatile.Write(System.Int64@,System.Int64)
  - System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)
  - System.Threading.Volatile.Write(System.SByte@,System.SByte)
  - System.Threading.Volatile.Write(System.Single@,System.Single)
  - System.Threading.Volatile.Write(System.UInt16@,System.UInt16)
  - System.Threading.Volatile.Write(System.UInt32@,System.UInt32)
  - System.Threading.Volatile.Write(System.UInt64@,System.UInt64)
  - System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)
  - System.Threading.Volatile.Write``1(``0@,``0)
  langs:
  - csharp
  name: Volatile
  nameWithType: Volatile
  fullName: System.Threading.Volatile
  type: Class
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Contains methods for performing volatile memory operations.
  remarks: "On a multiprocessor system, a volatile write operation ensures that a value written to a memory location is immediately visible to all processors. A volatile read operation obtains the very latest value written to a memory location by any processor. These operations might require flushing processor caches, which can affect performance.  \n  \n> [!NOTE]\n>  On a uniprocessor system, volatile reads and writes ensure that a value is read or written to memory and not cached (for example, in a processor register). Thus, you can use these operations to synchronize access to a field that can be updated by another thread or by hardware.  \n  \n Volatile memory operations are for special cases of synchronization, where normal locking is not an acceptable alternative. Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide the easiest and least error-prone way of synchronizing access to data, and the <xref:System.Lazy%601> class provides a simple way to write lazy initialization code without directly using double-checked locking.  \n  \n The <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods enable functionality that is not supported in languages. For example:  \n  \n-   Some languages, such as Visual Basic, do not recognize the concept of volatile memory operations. The <xref:System.Threading.Volatile> class provides that functionality in such languages.  \n  \n    > [!NOTE]\n    >  Calling one of these methods affects only a single memory access. To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName>.  \n  \n-   In C#, using the `volatile` modifier on a field guarantees that every access to that field uses the <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods, but the `volatile` modifier cannot be applied to array elements. The <xref:System.Threading.Volatile.Read%2A?displayProperty=fullName> and <xref:System.Threading.Volatile.Write%2A?displayProperty=fullName> methods can be used on array elements."
  syntax:
    content: public static class Volatile
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.Boolean@)
  commentId: M:System.Threading.Volatile.Read(System.Boolean@)
  id: Read(System.Boolean@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(Boolean)
  nameWithType: Volatile.Read(Boolean)
  fullName: Volatile.Read(Boolean)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static bool Read (ref bool location);
    parameters:
    - id: location
      type: System.Boolean
      description: The field to read.
    return:
      type: System.Boolean
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.Byte@)
  commentId: M:System.Threading.Volatile.Read(System.Byte@)
  id: Read(System.Byte@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(Byte)
  nameWithType: Volatile.Read(Byte)
  fullName: Volatile.Read(Byte)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static byte Read (ref byte location);
    parameters:
    - id: location
      type: System.Byte
      description: The field to read.
    return:
      type: System.Byte
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.Double@)
  commentId: M:System.Threading.Volatile.Read(System.Double@)
  id: Read(System.Double@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(Double)
  nameWithType: Volatile.Read(Double)
  fullName: Volatile.Read(Double)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static double Read (ref double location);
    parameters:
    - id: location
      type: System.Double
      description: The field to read.
    return:
      type: System.Double
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.Int16@)
  commentId: M:System.Threading.Volatile.Read(System.Int16@)
  id: Read(System.Int16@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(Int16)
  nameWithType: Volatile.Read(Int16)
  fullName: Volatile.Read(Int16)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static short Read (ref short location);
    parameters:
    - id: location
      type: System.Int16
      description: The field to read.
    return:
      type: System.Int16
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.Int32@)
  commentId: M:System.Threading.Volatile.Read(System.Int32@)
  id: Read(System.Int32@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(Int32)
  nameWithType: Volatile.Read(Int32)
  fullName: Volatile.Read(Int32)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static int Read (ref int location);
    parameters:
    - id: location
      type: System.Int32
      description: The field to read.
    return:
      type: System.Int32
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.Int64@)
  commentId: M:System.Threading.Volatile.Read(System.Int64@)
  id: Read(System.Int64@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(Int64)
  nameWithType: Volatile.Read(Int64)
  fullName: Volatile.Read(Int64)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static long Read (ref long location);
    parameters:
    - id: location
      type: System.Int64
      description: The field to read.
    return:
      type: System.Int64
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.IntPtr@)
  commentId: M:System.Threading.Volatile.Read(System.IntPtr@)
  id: Read(System.IntPtr@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(IntPtr)
  nameWithType: Volatile.Read(IntPtr)
  fullName: Volatile.Read(IntPtr)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static IntPtr Read (ref IntPtr location);
    parameters:
    - id: location
      type: System.IntPtr
      description: The field to read.
    return:
      type: System.IntPtr
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.SByte@)
  commentId: M:System.Threading.Volatile.Read(System.SByte@)
  id: Read(System.SByte@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(SByte)
  nameWithType: Volatile.Read(SByte)
  fullName: Volatile.Read(SByte)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static sbyte Read (ref sbyte location);
    parameters:
    - id: location
      type: System.SByte
      description: The field to read.
    return:
      type: System.SByte
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.Single@)
  commentId: M:System.Threading.Volatile.Read(System.Single@)
  id: Read(System.Single@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(Single)
  nameWithType: Volatile.Read(Single)
  fullName: Volatile.Read(Single)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static float Read (ref float location);
    parameters:
    - id: location
      type: System.Single
      description: The field to read.
    return:
      type: System.Single
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.UInt16@)
  commentId: M:System.Threading.Volatile.Read(System.UInt16@)
  id: Read(System.UInt16@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(UInt16)
  nameWithType: Volatile.Read(UInt16)
  fullName: Volatile.Read(UInt16)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static ushort Read (ref ushort location);
    parameters:
    - id: location
      type: System.UInt16
      description: The field to read.
    return:
      type: System.UInt16
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  altCompliant: System.Threading.Volatile.Read(System.Int16@)
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.UInt32@)
  commentId: M:System.Threading.Volatile.Read(System.UInt32@)
  id: Read(System.UInt32@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(UInt32)
  nameWithType: Volatile.Read(UInt32)
  fullName: Volatile.Read(UInt32)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static uint Read (ref uint location);
    parameters:
    - id: location
      type: System.UInt32
      description: The field to read.
    return:
      type: System.UInt32
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  altCompliant: System.Threading.Volatile.Read(System.Int32@)
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.UInt64@)
  commentId: M:System.Threading.Volatile.Read(System.UInt64@)
  id: Read(System.UInt64@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(UInt64)
  nameWithType: Volatile.Read(UInt64)
  fullName: Volatile.Read(UInt64)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static ulong Read (ref ulong location);
    parameters:
    - id: location
      type: System.UInt64
      description: The field to read.
    return:
      type: System.UInt64
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  altCompliant: System.Threading.Volatile.Read(System.Int64@)
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read(System.UIntPtr@)
  commentId: M:System.Threading.Volatile.Read(System.UIntPtr@)
  id: Read(System.UIntPtr@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read(UIntPtr)
  nameWithType: Volatile.Read(UIntPtr)
  fullName: Volatile.Read(UIntPtr)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the value of the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static UIntPtr Read (ref UIntPtr location);
    parameters:
    - id: location
      type: System.UIntPtr
      description: The field to read.
    return:
      type: System.UIntPtr
      description: The value that was read. This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  altCompliant: System.Threading.Volatile.Read(System.IntPtr@)
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Read``1(``0@)
  commentId: M:System.Threading.Volatile.Read``1(``0@)
  id: Read``1(``0@)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Read<T>(T)
  nameWithType: Volatile.Read<T>(T)
  fullName: Volatile.Read<T>(T)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Reads the object reference from the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: 'public static T Read<T> (ref T location) where T : class;'
    parameters:
    - id: location
      type: T
      description: The field to read.
    typeParameters:
    - id: T
      description: The type of field to read. This must be a reference type, not a value type.
    return:
      type: T
      description: The reference to <code>T</code> that was read. This reference is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.
  overload: System.Threading.Volatile.Read``1*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.Boolean@,System.Boolean)
  commentId: M:System.Threading.Volatile.Write(System.Boolean@,System.Boolean)
  id: Write(System.Boolean@,System.Boolean)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(Boolean, Boolean)
  nameWithType: Volatile.Write(Boolean, Boolean)
  fullName: Volatile.Write(Boolean, Boolean)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static void Write (ref bool location, bool value);
    parameters:
    - id: location
      type: System.Boolean
      description: The field where the value is written.
    - id: value
      type: System.Boolean
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.Byte@,System.Byte)
  commentId: M:System.Threading.Volatile.Write(System.Byte@,System.Byte)
  id: Write(System.Byte@,System.Byte)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(Byte, Byte)
  nameWithType: Volatile.Write(Byte, Byte)
  fullName: Volatile.Write(Byte, Byte)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static void Write (ref byte location, byte value);
    parameters:
    - id: location
      type: System.Byte
      description: The field where the value is written.
    - id: value
      type: System.Byte
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.Double@,System.Double)
  commentId: M:System.Threading.Volatile.Write(System.Double@,System.Double)
  id: Write(System.Double@,System.Double)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(Double, Double)
  nameWithType: Volatile.Write(Double, Double)
  fullName: Volatile.Write(Double, Double)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static void Write (ref double location, double value);
    parameters:
    - id: location
      type: System.Double
      description: The field where the value is written.
    - id: value
      type: System.Double
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.Int16@,System.Int16)
  commentId: M:System.Threading.Volatile.Write(System.Int16@,System.Int16)
  id: Write(System.Int16@,System.Int16)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(Int16, Int16)
  nameWithType: Volatile.Write(Int16, Int16)
  fullName: Volatile.Write(Int16, Int16)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static void Write (ref short location, short value);
    parameters:
    - id: location
      type: System.Int16
      description: The field where the value is written.
    - id: value
      type: System.Int16
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.Int32@,System.Int32)
  commentId: M:System.Threading.Volatile.Write(System.Int32@,System.Int32)
  id: Write(System.Int32@,System.Int32)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(Int32, Int32)
  nameWithType: Volatile.Write(Int32, Int32)
  fullName: Volatile.Write(Int32, Int32)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static void Write (ref int location, int value);
    parameters:
    - id: location
      type: System.Int32
      description: The field where the value is written.
    - id: value
      type: System.Int32
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.Int64@,System.Int64)
  commentId: M:System.Threading.Volatile.Write(System.Int64@,System.Int64)
  id: Write(System.Int64@,System.Int64)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(Int64, Int64)
  nameWithType: Volatile.Write(Int64, Int64)
  fullName: Volatile.Write(Int64, Int64)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a memory operation appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static void Write (ref long location, long value);
    parameters:
    - id: location
      type: System.Int64
      description: The field where the value is written.
    - id: value
      type: System.Int64
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)
  commentId: M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)
  id: Write(System.IntPtr@,System.IntPtr)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(IntPtr, IntPtr)
  nameWithType: Volatile.Write(IntPtr, IntPtr)
  fullName: Volatile.Write(IntPtr, IntPtr)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static void Write (ref IntPtr location, IntPtr value);
    parameters:
    - id: location
      type: System.IntPtr
      description: The field where the value is written.
    - id: value
      type: System.IntPtr
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.SByte@,System.SByte)
  commentId: M:System.Threading.Volatile.Write(System.SByte@,System.SByte)
  id: Write(System.SByte@,System.SByte)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(SByte, SByte)
  nameWithType: Volatile.Write(SByte, SByte)
  fullName: Volatile.Write(SByte, SByte)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static void Write (ref sbyte location, sbyte value);
    parameters:
    - id: location
      type: System.SByte
      description: The field where the value is written.
    - id: value
      type: System.SByte
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.Single@,System.Single)
  commentId: M:System.Threading.Volatile.Write(System.Single@,System.Single)
  id: Write(System.Single@,System.Single)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(Single, Single)
  nameWithType: Volatile.Write(Single, Single)
  fullName: Volatile.Write(Single, Single)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: public static void Write (ref float location, float value);
    parameters:
    - id: location
      type: System.Single
      description: The field where the value is written.
    - id: value
      type: System.Single
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.UInt16@,System.UInt16)
  commentId: M:System.Threading.Volatile.Write(System.UInt16@,System.UInt16)
  id: Write(System.UInt16@,System.UInt16)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(UInt16, UInt16)
  nameWithType: Volatile.Write(UInt16, UInt16)
  fullName: Volatile.Write(UInt16, UInt16)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static void Write (ref ushort location, ushort value);
    parameters:
    - id: location
      type: System.UInt16
      description: The field where the value is written.
    - id: value
      type: System.UInt16
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  altCompliant: System.Threading.Volatile.Write(System.Int16@,System.Int16)
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.UInt32@,System.UInt32)
  commentId: M:System.Threading.Volatile.Write(System.UInt32@,System.UInt32)
  id: Write(System.UInt32@,System.UInt32)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(UInt32, UInt32)
  nameWithType: Volatile.Write(UInt32, UInt32)
  fullName: Volatile.Write(UInt32, UInt32)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static void Write (ref uint location, uint value);
    parameters:
    - id: location
      type: System.UInt32
      description: The field where the value is written.
    - id: value
      type: System.UInt32
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  altCompliant: System.Threading.Volatile.Write(System.Int32@,System.Int32)
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.UInt64@,System.UInt64)
  commentId: M:System.Threading.Volatile.Write(System.UInt64@,System.UInt64)
  id: Write(System.UInt64@,System.UInt64)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(UInt64, UInt64)
  nameWithType: Volatile.Write(UInt64, UInt64)
  fullName: Volatile.Write(UInt64, UInt64)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static void Write (ref ulong location, ulong value);
    parameters:
    - id: location
      type: System.UInt64
      description: The field where the value is written.
    - id: value
      type: System.UInt64
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  altCompliant: System.Threading.Volatile.Write(System.Int64@,System.Int64)
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)
  commentId: M:System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)
  id: Write(System.UIntPtr@,System.UIntPtr)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write(UIntPtr, UIntPtr)
  nameWithType: Volatile.Write(UIntPtr, UIntPtr)
  fullName: Volatile.Write(UIntPtr, UIntPtr)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified value to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static void Write (ref UIntPtr location, UIntPtr value);
    parameters:
    - id: location
      type: System.UIntPtr
      description: The field where the value is written.
    - id: value
      type: System.UIntPtr
      description: The value to write. The value is written immediately so that it is visible to all processors in the computer.
  overload: System.Threading.Volatile.Write*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  altCompliant: System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.Volatile.Write``1(``0@,``0)
  commentId: M:System.Threading.Volatile.Write``1(``0@,``0)
  id: Write``1(``0@,``0)
  parent: System.Threading.Volatile
  langs:
  - csharp
  name: Write<T>(T, T)
  nameWithType: Volatile.Write<T>(T, T)
  fullName: Volatile.Write<T>(T, T)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: 'Writes the specified object reference to the specified field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.'
  remarks: For more information, see the <xref:System.Threading.Volatile> class.
  syntax:
    content: 'public static void Write<T> (ref T location, T value) where T : class;'
    parameters:
    - id: location
      type: T
      description: The field where the object reference is written.
    - id: value
      type: T
      description: The object reference to write. The reference is written immediately so that it is visible to all processors in the computer.
    typeParameters:
    - id: T
      description: The type of field to write. This must be a reference type, not a value type.
  overload: System.Threading.Volatile.Write``1*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Volatile.Read(System.Boolean@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(Boolean)
  nameWithType: Volatile.Read(Boolean)
  fullName: Volatile.Read(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Volatile.Read(System.Byte@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(Byte)
  nameWithType: Volatile.Read(Byte)
  fullName: Volatile.Read(Byte)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Threading.Volatile.Read(System.Double@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(Double)
  nameWithType: Volatile.Read(Double)
  fullName: Volatile.Read(Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Threading.Volatile.Read(System.Int16@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(Int16)
  nameWithType: Volatile.Read(Int16)
  fullName: Volatile.Read(Int16)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Threading.Volatile.Read(System.Int32@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(Int32)
  nameWithType: Volatile.Read(Int32)
  fullName: Volatile.Read(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Volatile.Read(System.Int64@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(Int64)
  nameWithType: Volatile.Read(Int64)
  fullName: Volatile.Read(Int64)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Threading.Volatile.Read(System.IntPtr@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(IntPtr)
  nameWithType: Volatile.Read(IntPtr)
  fullName: Volatile.Read(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.Volatile.Read(System.SByte@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(SByte)
  nameWithType: Volatile.Read(SByte)
  fullName: Volatile.Read(SByte)
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Threading.Volatile.Read(System.Single@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(Single)
  nameWithType: Volatile.Read(Single)
  fullName: Volatile.Read(Single)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Threading.Volatile.Read(System.UInt16@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(UInt16)
  nameWithType: Volatile.Read(UInt16)
  fullName: Volatile.Read(UInt16)
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Threading.Volatile.Read(System.UInt32@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(UInt32)
  nameWithType: Volatile.Read(UInt32)
  fullName: Volatile.Read(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Threading.Volatile.Read(System.UInt64@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(UInt64)
  nameWithType: Volatile.Read(UInt64)
  fullName: Volatile.Read(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Threading.Volatile.Read(System.UIntPtr@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read(UIntPtr)
  nameWithType: Volatile.Read(UIntPtr)
  fullName: Volatile.Read(UIntPtr)
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.Threading.Volatile.Read``1(``0@)
  parent: System.Threading.Volatile
  isExternal: false
  name: Read<T>(T)
  nameWithType: Volatile.Read<T>(T)
  fullName: Volatile.Read<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Volatile.Write(System.Boolean@,System.Boolean)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(Boolean, Boolean)
  nameWithType: Volatile.Write(Boolean, Boolean)
  fullName: Volatile.Write(Boolean, Boolean)
- uid: System.Threading.Volatile.Write(System.Byte@,System.Byte)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(Byte, Byte)
  nameWithType: Volatile.Write(Byte, Byte)
  fullName: Volatile.Write(Byte, Byte)
- uid: System.Threading.Volatile.Write(System.Double@,System.Double)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(Double, Double)
  nameWithType: Volatile.Write(Double, Double)
  fullName: Volatile.Write(Double, Double)
- uid: System.Threading.Volatile.Write(System.Int16@,System.Int16)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(Int16, Int16)
  nameWithType: Volatile.Write(Int16, Int16)
  fullName: Volatile.Write(Int16, Int16)
- uid: System.Threading.Volatile.Write(System.Int32@,System.Int32)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(Int32, Int32)
  nameWithType: Volatile.Write(Int32, Int32)
  fullName: Volatile.Write(Int32, Int32)
- uid: System.Threading.Volatile.Write(System.Int64@,System.Int64)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(Int64, Int64)
  nameWithType: Volatile.Write(Int64, Int64)
  fullName: Volatile.Write(Int64, Int64)
- uid: System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(IntPtr, IntPtr)
  nameWithType: Volatile.Write(IntPtr, IntPtr)
  fullName: Volatile.Write(IntPtr, IntPtr)
- uid: System.Threading.Volatile.Write(System.SByte@,System.SByte)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(SByte, SByte)
  nameWithType: Volatile.Write(SByte, SByte)
  fullName: Volatile.Write(SByte, SByte)
- uid: System.Threading.Volatile.Write(System.Single@,System.Single)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(Single, Single)
  nameWithType: Volatile.Write(Single, Single)
  fullName: Volatile.Write(Single, Single)
- uid: System.Threading.Volatile.Write(System.UInt16@,System.UInt16)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(UInt16, UInt16)
  nameWithType: Volatile.Write(UInt16, UInt16)
  fullName: Volatile.Write(UInt16, UInt16)
- uid: System.Threading.Volatile.Write(System.UInt32@,System.UInt32)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(UInt32, UInt32)
  nameWithType: Volatile.Write(UInt32, UInt32)
  fullName: Volatile.Write(UInt32, UInt32)
- uid: System.Threading.Volatile.Write(System.UInt64@,System.UInt64)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(UInt64, UInt64)
  nameWithType: Volatile.Write(UInt64, UInt64)
  fullName: Volatile.Write(UInt64, UInt64)
- uid: System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write(UIntPtr, UIntPtr)
  nameWithType: Volatile.Write(UIntPtr, UIntPtr)
  fullName: Volatile.Write(UIntPtr, UIntPtr)
- uid: System.Threading.Volatile.Write``1(``0@,``0)
  parent: System.Threading.Volatile
  isExternal: false
  name: Write<T>(T, T)
  nameWithType: Volatile.Write<T>(T, T)
  fullName: Volatile.Write<T>(T, T)
- uid: System.Threading.Volatile.Read*
  parent: System.Threading.Volatile
  isExternal: false
  name: Read
  nameWithType: Volatile.Read
  fullName: Volatile.Read
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
- uid: System.Threading.Volatile.Read``1*
  parent: System.Threading.Volatile
  isExternal: false
  name: Read<T>
  nameWithType: Volatile.Read<T>
  fullName: Volatile.Read<T>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
- uid: System.Threading.Volatile.Write*
  parent: System.Threading.Volatile
  isExternal: false
  name: Write
  nameWithType: Volatile.Write
  fullName: Volatile.Write
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
- uid: System.Threading.Volatile.Write``1*
  parent: System.Threading.Volatile
  isExternal: false
  name: Write<T>
  nameWithType: Volatile.Write<T>
  fullName: Volatile.Write<T>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/Volatile.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
