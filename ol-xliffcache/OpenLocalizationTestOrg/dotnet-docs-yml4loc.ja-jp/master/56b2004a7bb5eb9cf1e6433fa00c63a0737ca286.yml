### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngAlgorithm
  commentId: T:System.Security.Cryptography.CngAlgorithm
  id: CngAlgorithm
  children:
  - System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  - System.Security.Cryptography.CngAlgorithm.Algorithm
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellman
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  - System.Security.Cryptography.CngAlgorithm.ECDsa
  - System.Security.Cryptography.CngAlgorithm.ECDsaP256
  - System.Security.Cryptography.CngAlgorithm.ECDsaP384
  - System.Security.Cryptography.CngAlgorithm.ECDsaP521
  - System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  - System.Security.Cryptography.CngAlgorithm.GetHashCode
  - System.Security.Cryptography.CngAlgorithm.MD5
  - System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.Rsa
  - System.Security.Cryptography.CngAlgorithm.Sha1
  - System.Security.Cryptography.CngAlgorithm.Sha256
  - System.Security.Cryptography.CngAlgorithm.Sha384
  - System.Security.Cryptography.CngAlgorithm.Sha512
  - System.Security.Cryptography.CngAlgorithm.ToString
  langs:
  - csharp
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
  type: Class
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Encapsulates the name of an encryption algorithm.
  remarks: "The <xref:System.Security.Cryptography.CngAlgorithm> class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained, algorithm name string.  \n  \n The static properties return <xref:System.Security.Cryptography.CngAlgorithm> objects. Each object's internal string is initialized to the algorithm name that corresponds to the name of the static property.  \n  \n You can also use this class to create objects for algorithm types that are not covered by the static properties.  \n  \n Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) accept <xref:System.Security.Cryptography.CngAlgorithm> objects through an `algorithm` parameter. When the class receives the <xref:System.Security.Cryptography.CngAlgorithm> object, it retrieves the embedded algorithm name by calling the object's <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A> property.  \n  \n Therefore, <xref:System.Security.Cryptography.CngAlgorithm> serves as an enumeration of well-known algorithms. It lets you specify a well-known algorithm by using a strongly typed value instead of a string."
  syntax:
    content: 'public sealed class CngAlgorithm : IEquatable<System.Security.Cryptography.CngAlgorithm>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{System.Security.Cryptography.CngAlgorithm}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  commentId: M:System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: CngAlgorithm(String)
  nameWithType: CngAlgorithm.CngAlgorithm(String)
  fullName: CngAlgorithm.CngAlgorithm(String)
  type: Constructor
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.CngAlgorithm"></xref> class.
  remarks: "Instances of the <xref:System.Security.Cryptography.CngAlgorithm> class internally maintain the algorithm name that is specified by the `algorithm` parameter.  \n  \n The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithm> objects for algorithm types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithm> class. This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithms, which can be accessed just like the algorithms that are currently available."
  syntax:
    content: public CngAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: The name of the algorithm to initialize.
  overload: System.Security.Cryptography.CngAlgorithm.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>algorithm</code> parameter is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>algorithm</code> parameter length is 0 (zero).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm
  commentId: P:System.Security.Cryptography.CngAlgorithm.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
  fullName: CngAlgorithm.Algorithm
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets the algorithm name that the current <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object specifies.
  syntax:
    content: public string Algorithm { get; }
    return:
      type: System.String
      description: The embedded algorithm name.
  overload: System.Security.Cryptography.CngAlgorithm.Algorithm*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellman
  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellman
  id: ECDiffieHellman
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellman
  nameWithType: CngAlgorithm.ECDiffieHellman
  fullName: CngAlgorithm.ECDiffieHellman
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm whose curve is described via a key property.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellman { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDH key exchange algorithm whose curve is described via a key property.
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellman*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  id: ECDiffieHellmanP256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
  fullName: CngAlgorithm.ECDiffieHellmanP256
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-256 curve.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDH algorithm that uses the P-256 curve.
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  id: ECDiffieHellmanP384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
  fullName: CngAlgorithm.ECDiffieHellmanP384
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-384 curve.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDH algorithm that uses the P-384 curve.
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  id: ECDiffieHellmanP521
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
  fullName: CngAlgorithm.ECDiffieHellmanP521
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-521 curve.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDH algorithm that uses the P-521 curve.
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.ECDsa
  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDsa
  id: ECDsa
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsa
  nameWithType: CngAlgorithm.ECDsa
  fullName: CngAlgorithm.ECDsa
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) whose curve is described via a key property.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDSA whose curve is described via a key property.
  overload: System.Security.Cryptography.CngAlgorithm.ECDsa*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDsaP256
  id: ECDsaP256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
  fullName: CngAlgorithm.ECDsaP256
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-256 curve.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDSA algorithm that uses the P-256 curve.
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP256*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDsaP384
  id: ECDsaP384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
  fullName: CngAlgorithm.ECDsaP384
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-384 curve.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDSA algorithm that uses the P-384 curve.
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP384*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDsaP521
  id: ECDsaP521
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
  fullName: CngAlgorithm.ECDsaP521
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a new <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-521 curve.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP521 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an ECDSA algorithm that uses the P-521 curve.
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP521*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  commentId: M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  id: Equals(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Equals(CngAlgorithm)
  nameWithType: CngAlgorithm.Equals(CngAlgorithm)
  fullName: CngAlgorithm.Equals(CngAlgorithm)
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Compares the specified <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object to the current <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object.
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngAlgorithm other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngAlgorithm
      description: An object to be compared to the current <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the <code>other</code> parameter specifies the same algorithm as the current object; otherwise, `false`.'
  overload: System.Security.Cryptography.CngAlgorithm.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  commentId: M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngAlgorithm.Equals(Object)
  fullName: CngAlgorithm.Equals(Object)
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Compares the specified object to the current <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: An object to be compared to the current <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the <code>obj</code> parameter is a <xref href="System.Security.Cryptography.CngAlgorithm"></xref> that specifies the same algorithm as the current object; otherwise, `false`.'
  overload: System.Security.Cryptography.CngAlgorithm.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode
  commentId: M:System.Security.Cryptography.CngAlgorithm.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngAlgorithm.GetHashCode()
  fullName: CngAlgorithm.GetHashCode()
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Generates a hash value for the algorithm name that is embedded in the current <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: The hash value of the embedded algorithm name.
  overload: System.Security.Cryptography.CngAlgorithm.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.MD5
  commentId: P:System.Security.Cryptography.CngAlgorithm.MD5
  id: MD5
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: MD5
  nameWithType: CngAlgorithm.MD5
  fullName: CngAlgorithm.MD5
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a new <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies the Message Digest 5 (MD5) hash algorithm.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm MD5 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the MD5 algorithm.
  overload: System.Security.Cryptography.CngAlgorithm.MD5*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  commentId: M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  id: op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: op_Equality(CngAlgorithm, CngAlgorithm)
  nameWithType: CngAlgorithm.op_Equality(CngAlgorithm, CngAlgorithm)
  fullName: CngAlgorithm.op_Equality(CngAlgorithm, CngAlgorithm)
  type: Operator
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Determines whether two <xref href="System.Security.Cryptography.CngAlgorithm"></xref> objects specify the same algorithm name.
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an algorithm name.
    - id: right
      type: System.Security.Cryptography.CngAlgorithm
      description: A second object, to be compared to the object that is identified by the <code>left</code> parameter.
    return:
      type: System.Boolean
      description: '`true` if the two objects specify the same algorithm name; otherwise, `false`.'
  overload: System.Security.Cryptography.CngAlgorithm.op_Equality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  commentId: M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  id: op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: op_Inequality(CngAlgorithm, CngAlgorithm)
  nameWithType: CngAlgorithm.op_Inequality(CngAlgorithm, CngAlgorithm)
  fullName: CngAlgorithm.op_Inequality(CngAlgorithm, CngAlgorithm)
  type: Operator
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Determines whether two <xref href="System.Security.Cryptography.CngAlgorithm"></xref> objects do not specify the same algorithm.
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies an algorithm name.
    - id: right
      type: System.Security.Cryptography.CngAlgorithm
      description: A second object, to be compared to the object that is identified by the <code>left</code> parameter.
    return:
      type: System.Boolean
      description: '`true` if the two objects do not specify the same algorithm name; otherwise, `false`.'
  overload: System.Security.Cryptography.CngAlgorithm.op_Inequality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.Rsa
  commentId: P:System.Security.Cryptography.CngAlgorithm.Rsa
  id: Rsa
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
  fullName: CngAlgorithm.Rsa
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a new <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies the RSA hash algorithm.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Rsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the RSA algorithm.
  overload: System.Security.Cryptography.CngAlgorithm.Rsa*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.Sha1
  commentId: P:System.Security.Cryptography.CngAlgorithm.Sha1
  id: Sha1
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
  fullName: CngAlgorithm.Sha1
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a new <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies the Secure Hash Algorithm 1 (SHA-1) algorithm.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha1 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the SHA-1 algorithm.
  overload: System.Security.Cryptography.CngAlgorithm.Sha1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.Sha256
  commentId: P:System.Security.Cryptography.CngAlgorithm.Sha256
  id: Sha256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
  fullName: CngAlgorithm.Sha256
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a new <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies the Secure Hash Algorithm 256 (SHA-256) algorithm.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the SHA-256 algorithm.
  overload: System.Security.Cryptography.CngAlgorithm.Sha256*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.Sha384
  commentId: P:System.Security.Cryptography.CngAlgorithm.Sha384
  id: Sha384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
  fullName: CngAlgorithm.Sha384
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a new <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies the Secure Hash Algorithm 384 (SHA-384) algorithm.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the SHA-384 algorithm.
  overload: System.Security.Cryptography.CngAlgorithm.Sha384*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.Sha512
  commentId: P:System.Security.Cryptography.CngAlgorithm.Sha512
  id: Sha512
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
  fullName: CngAlgorithm.Sha512
  type: Property
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets a new <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object that specifies the Secure Hash Algorithm 512 (SHA-512) algorithm.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha512 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: An object that specifies the SHA-512 algorithm.
  overload: System.Security.Cryptography.CngAlgorithm.Sha512*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.CngAlgorithm.ToString
  commentId: M:System.Security.Cryptography.CngAlgorithm.ToString
  id: ToString
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ToString()
  nameWithType: CngAlgorithm.ToString()
  fullName: CngAlgorithm.ToString()
  type: Method
  assemblies:
  - System.Security.Cryptography.Cng
  - System.Core
  - netstandard
  namespace: System.Security.Cryptography
  summary: Gets the name of the algorithm that the current <xref href="System.Security.Cryptography.CngAlgorithm"></xref> object specifies.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The embedded algorithm name.
  overload: System.Security.Cryptography.CngAlgorithm.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: CngAlgorithm(String)
  nameWithType: CngAlgorithm.CngAlgorithm(String)
  fullName: CngAlgorithm.CngAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
  fullName: CngAlgorithm.Algorithm
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellman
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellman
  nameWithType: CngAlgorithm.ECDiffieHellman
  fullName: CngAlgorithm.ECDiffieHellman
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
  fullName: CngAlgorithm.ECDiffieHellmanP256
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
  fullName: CngAlgorithm.ECDiffieHellmanP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
  fullName: CngAlgorithm.ECDiffieHellmanP521
- uid: System.Security.Cryptography.CngAlgorithm.ECDsa
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsa
  nameWithType: CngAlgorithm.ECDsa
  fullName: CngAlgorithm.ECDsa
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
  fullName: CngAlgorithm.ECDsaP256
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
  fullName: CngAlgorithm.ECDsaP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
  fullName: CngAlgorithm.ECDsaP521
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals(CngAlgorithm)
  nameWithType: CngAlgorithm.Equals(CngAlgorithm)
  fullName: CngAlgorithm.Equals(CngAlgorithm)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals(Object)
  nameWithType: CngAlgorithm.Equals(Object)
  fullName: CngAlgorithm.Equals(Object)
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: GetHashCode()
  nameWithType: CngAlgorithm.GetHashCode()
  fullName: CngAlgorithm.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngAlgorithm.MD5
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: MD5
  nameWithType: CngAlgorithm.MD5
  fullName: CngAlgorithm.MD5
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Equality(CngAlgorithm, CngAlgorithm)
  nameWithType: CngAlgorithm.op_Equality(CngAlgorithm, CngAlgorithm)
  fullName: CngAlgorithm.op_Equality(CngAlgorithm, CngAlgorithm)
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Inequality(CngAlgorithm, CngAlgorithm)
  nameWithType: CngAlgorithm.op_Inequality(CngAlgorithm, CngAlgorithm)
  fullName: CngAlgorithm.op_Inequality(CngAlgorithm, CngAlgorithm)
- uid: System.Security.Cryptography.CngAlgorithm.Rsa
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
  fullName: CngAlgorithm.Rsa
- uid: System.Security.Cryptography.CngAlgorithm.Sha1
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
  fullName: CngAlgorithm.Sha1
- uid: System.Security.Cryptography.CngAlgorithm.Sha256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
  fullName: CngAlgorithm.Sha256
- uid: System.Security.Cryptography.CngAlgorithm.Sha384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
  fullName: CngAlgorithm.Sha384
- uid: System.Security.Cryptography.CngAlgorithm.Sha512
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
  fullName: CngAlgorithm.Sha512
- uid: System.Security.Cryptography.CngAlgorithm.ToString
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ToString()
  nameWithType: CngAlgorithm.ToString()
  fullName: CngAlgorithm.ToString()
- uid: System.Security.Cryptography.CngAlgorithm.#ctor*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm.CngAlgorithm
  fullName: CngAlgorithm.CngAlgorithm
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
  fullName: CngAlgorithm.Algorithm
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellman*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellman
  nameWithType: CngAlgorithm.ECDiffieHellman
  fullName: CngAlgorithm.ECDiffieHellman
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
  fullName: CngAlgorithm.ECDiffieHellmanP256
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
  fullName: CngAlgorithm.ECDiffieHellmanP384
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
  fullName: CngAlgorithm.ECDiffieHellmanP521
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.ECDsa*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsa
  nameWithType: CngAlgorithm.ECDsa
  fullName: CngAlgorithm.ECDsa
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
  fullName: CngAlgorithm.ECDsaP256
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
  fullName: CngAlgorithm.ECDsaP384
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
  fullName: CngAlgorithm.ECDsaP521
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.Equals*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals
  nameWithType: CngAlgorithm.Equals
  fullName: CngAlgorithm.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: GetHashCode
  nameWithType: CngAlgorithm.GetHashCode
  fullName: CngAlgorithm.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.MD5*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: MD5
  nameWithType: CngAlgorithm.MD5
  fullName: CngAlgorithm.MD5
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Equality
  nameWithType: CngAlgorithm.op_Equality
  fullName: CngAlgorithm.op_Equality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Inequality
  nameWithType: CngAlgorithm.op_Inequality
  fullName: CngAlgorithm.op_Inequality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.Rsa*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
  fullName: CngAlgorithm.Rsa
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.Sha1*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
  fullName: CngAlgorithm.Sha1
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.Sha256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
  fullName: CngAlgorithm.Sha256
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.Sha384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
  fullName: CngAlgorithm.Sha384
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.Sha512*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
  fullName: CngAlgorithm.Sha512
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Security.Cryptography.CngAlgorithm.ToString*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ToString
  nameWithType: CngAlgorithm.ToString
  fullName: CngAlgorithm.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.IEquatable`1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
- uid: System.IEquatable{System.Security.Cryptography.CngAlgorithm}
  parent: System
  isExternal: false
  name: IEquatable<CngAlgorithm>
  nameWithType: IEquatable<CngAlgorithm>
  fullName: System.IEquatable<System.Security.Cryptography.CngAlgorithm>
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.CngAlgorithm
    name: CngAlgorithm
    nameWithType: CngAlgorithm
    fullName: System.Security.Cryptography.CngAlgorithm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
