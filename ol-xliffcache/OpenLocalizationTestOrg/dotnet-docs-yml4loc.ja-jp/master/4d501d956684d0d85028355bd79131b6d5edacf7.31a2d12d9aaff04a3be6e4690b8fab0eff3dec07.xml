{"nodes":[{"content":"Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the <xref href=\"System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)\"></xref> notification is received.","nodes":[{"pos":[0,302],"content":"Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the <ph id=\"ph1\">&lt;xref href=\"System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)\"&gt;&lt;/xref&gt;</ph> notification is received.","source":"Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the <xref href=\"System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)\"></xref> notification is received."}],"pos":[774,1077],"yaml":true},{"content":"When a resource manager's implementation of <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A> is called, and an instance of this type is passsed in, the participant then notifies the transaction manager via the <xref:System.Transactions.SinglePhaseEnlistment.Committed%2A> method or the <xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A> method to indicate whether the transaction should be committed or rolled back.","nodes":[{"pos":[0,448],"content":"When a resource manager's implementation of <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A> is called, and an instance of this type is passsed in, the participant then notifies the transaction manager via the <xref:System.Transactions.SinglePhaseEnlistment.Committed%2A> method or the <xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A> method to indicate whether the transaction should be committed or rolled back.","nodes":[{"content":"When a resource manager's implementation of <ph id=\"ph1\">&lt;xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A&gt;</ph> is called, and an instance of this type is passsed in, the participant then notifies the transaction manager via the <ph id=\"ph2\">&lt;xref:System.Transactions.SinglePhaseEnlistment.Committed%2A&gt;</ph> method or the <ph id=\"ph3\">&lt;xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A&gt;</ph> method to indicate whether the transaction should be committed or rolled back.","pos":[0,448],"source":"When a resource manager's implementation of <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A> is called, and an instance of this type is passsed in, the participant then notifies the transaction manager via the <xref:System.Transactions.SinglePhaseEnlistment.Committed%2A> method or the <xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A> method to indicate whether the transaction should be committed or rolled back."}]}],"pos":[1088,1537],"yaml":true,"extradata":"MT"},{"content":"Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back.","nodes":[{"pos":[0,117],"content":"Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back.","nodes":[{"content":"Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back.","pos":[0,117]}]}],"pos":[3206,3324],"yaml":true},{"content":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that it cannot commit, and that the transaction should be rolled back.","nodes":[{"pos":[0,226],"content":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that it cannot commit, and that the transaction should be rolled back.","nodes":[{"content":"A transaction participant implementing the <ph id=\"ph1\">&lt;xref:System.Transactions.ISinglePhaseNotification&gt;</ph> interface uses this method to notify the transaction manager that it cannot commit, and that the transaction should be rolled back.","pos":[0,226],"source":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that it cannot commit, and that the transaction should be rolled back."}]}],"pos":[3335,3562],"yaml":true,"extradata":"MT"},{"content":"Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back, and provides an explanation.","nodes":[{"pos":[0,146],"content":"Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back, and provides an explanation.","nodes":[{"content":"Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back, and provides an explanation.","pos":[0,146]}]}],"pos":[4946,5093],"yaml":true},{"content":"An explanation of why a rollback is initiated.","nodes":[{"pos":[0,46],"content":"An explanation of why a rollback is initiated.","nodes":[{"content":"An explanation of why a rollback is initiated.","pos":[0,46]}]}],"pos":[5227,5274],"yaml":true},{"content":"Represents a callback that is used to indicate to the transaction manager that the SinglePhaseCommit was successful.","nodes":[{"pos":[0,116],"content":"Represents a callback that is used to indicate to the transaction manager that the SinglePhaseCommit was successful.","nodes":[{"content":"Represents a callback that is used to indicate to the transaction manager that the SinglePhaseCommit was successful.","pos":[0,116]}]}],"pos":[6523,6640],"yaml":true},{"content":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction should be committed.","nodes":[{"pos":[0,197],"content":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction should be committed.","nodes":[{"content":"A transaction participant implementing the <ph id=\"ph1\">&lt;xref:System.Transactions.ISinglePhaseNotification&gt;</ph> interface uses this method to notify the transaction manager that the transaction should be committed.","pos":[0,197],"source":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction should be committed."}]}],"pos":[6651,6849],"yaml":true,"extradata":"MT"},{"content":"Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt.","nodes":[{"pos":[0,121],"content":"Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt.","nodes":[{"content":"Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt.","pos":[0,121]}]}],"pos":[8156,8278],"yaml":true},{"content":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction is in doubt. A transaction is in doubt when one or more of the enlisted resource managers cannot be contacted.","nodes":[{"pos":[0,287],"content":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction is in doubt. A transaction is in doubt when one or more of the enlisted resource managers cannot be contacted.","nodes":[{"content":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction is in doubt. A transaction is in doubt when one or more of the enlisted resource managers cannot be contacted.","pos":[0,287],"nodes":[{"content":"A transaction participant implementing the <ph id=\"ph1\">&lt;xref:System.Transactions.ISinglePhaseNotification&gt;</ph> interface uses this method to notify the transaction manager that the transaction is in doubt.","pos":[0,189],"source":"A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction is in doubt."},{"content":"A transaction is in doubt when one or more of the enlisted resource managers cannot be contacted.","pos":[190,287]}]}]}],"pos":[8289,8577],"yaml":true,"extradata":"MT"},{"content":"Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt, and provides an explanation.","nodes":[{"pos":[0,150],"content":"Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt, and provides an explanation.","nodes":[{"content":"Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt, and provides an explanation.","pos":[0,150]}]}],"pos":[9961,10112],"yaml":true},{"content":"An explanation of why the transaction is in doubt.","nodes":[{"pos":[0,50],"content":"An explanation of why the transaction is in doubt.","nodes":[{"content":"An explanation of why the transaction is in doubt.","pos":[0,50]}]}],"pos":[10246,10297],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Transactions.SinglePhaseEnlistment\n  commentId: T:System.Transactions.SinglePhaseEnlistment\n  id: SinglePhaseEnlistment\n  children:\n  - System.Transactions.SinglePhaseEnlistment.Aborted\n  - System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)\n  - System.Transactions.SinglePhaseEnlistment.Committed\n  - System.Transactions.SinglePhaseEnlistment.InDoubt\n  - System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)\n  langs:\n  - csharp\n  name: SinglePhaseEnlistment\n  nameWithType: SinglePhaseEnlistment\n  fullName: System.Transactions.SinglePhaseEnlistment\n  type: Class\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Provides a set of callbacks that facilitate communication between a participant enlisted for Single Phase Commit and the transaction manager when the <xref href=\"System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)\"></xref> notification is received.\n  remarks: When a resource manager's implementation of <xref:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit%2A> is called, and an instance of this type is passsed in, the participant then notifies the transaction manager via the <xref:System.Transactions.SinglePhaseEnlistment.Committed%2A> method or the <xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A> method to indicate whether the transaction should be committed or rolled back.\n  syntax:\n    content: 'public class SinglePhaseEnlistment : System.Transactions.Enlistment'\n  inheritance:\n  - System.Object\n  - System.Transactions.Enlistment\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Transactions.Enlistment.Done\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SinglePhaseEnlistment.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Transactions.SinglePhaseEnlistment.Aborted\n  commentId: M:System.Transactions.SinglePhaseEnlistment.Aborted\n  id: Aborted\n  parent: System.Transactions.SinglePhaseEnlistment\n  langs:\n  - csharp\n  name: Aborted()\n  nameWithType: SinglePhaseEnlistment.Aborted()\n  fullName: SinglePhaseEnlistment.Aborted()\n  type: Method\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back.\n  remarks: A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that it cannot commit, and that the transaction should be rolled back.\n  syntax:\n    content: public void Aborted ();\n    parameters: []\n  overload: System.Transactions.SinglePhaseEnlistment.Aborted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SinglePhaseEnlistment.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)\n  commentId: M:System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)\n  id: Aborted(System.Exception)\n  parent: System.Transactions.SinglePhaseEnlistment\n  langs:\n  - csharp\n  name: Aborted(Exception)\n  nameWithType: SinglePhaseEnlistment.Aborted(Exception)\n  fullName: SinglePhaseEnlistment.Aborted(Exception)\n  type: Method\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Represents a callback that is used to indicate to the transaction manager that the transaction should be rolled back, and provides an explanation.\n  syntax:\n    content: public void Aborted (Exception e);\n    parameters:\n    - id: e\n      type: System.Exception\n      description: An explanation of why a rollback is initiated.\n  overload: System.Transactions.SinglePhaseEnlistment.Aborted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SinglePhaseEnlistment.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Transactions.SinglePhaseEnlistment.Committed\n  commentId: M:System.Transactions.SinglePhaseEnlistment.Committed\n  id: Committed\n  parent: System.Transactions.SinglePhaseEnlistment\n  langs:\n  - csharp\n  name: Committed()\n  nameWithType: SinglePhaseEnlistment.Committed()\n  fullName: SinglePhaseEnlistment.Committed()\n  type: Method\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Represents a callback that is used to indicate to the transaction manager that the SinglePhaseCommit was successful.\n  remarks: A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction should be committed.\n  syntax:\n    content: public void Committed ();\n    parameters: []\n  overload: System.Transactions.SinglePhaseEnlistment.Committed*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SinglePhaseEnlistment.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Transactions.SinglePhaseEnlistment.InDoubt\n  commentId: M:System.Transactions.SinglePhaseEnlistment.InDoubt\n  id: InDoubt\n  parent: System.Transactions.SinglePhaseEnlistment\n  langs:\n  - csharp\n  name: InDoubt()\n  nameWithType: SinglePhaseEnlistment.InDoubt()\n  fullName: SinglePhaseEnlistment.InDoubt()\n  type: Method\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt.\n  remarks: A transaction participant implementing the <xref:System.Transactions.ISinglePhaseNotification> interface uses this method to notify the transaction manager that the transaction is in doubt. A transaction is in doubt when one or more of the enlisted resource managers cannot be contacted.\n  syntax:\n    content: public void InDoubt ();\n    parameters: []\n  overload: System.Transactions.SinglePhaseEnlistment.InDoubt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SinglePhaseEnlistment.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)\n  commentId: M:System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)\n  id: InDoubt(System.Exception)\n  parent: System.Transactions.SinglePhaseEnlistment\n  langs:\n  - csharp\n  name: InDoubt(Exception)\n  nameWithType: SinglePhaseEnlistment.InDoubt(Exception)\n  fullName: SinglePhaseEnlistment.InDoubt(Exception)\n  type: Method\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Represents a callback that is used to indicate to the transaction manager that the status of the transaction is in doubt, and provides an explanation.\n  syntax:\n    content: public void InDoubt (Exception e);\n    parameters:\n    - id: e\n      type: System.Exception\n      description: An explanation of why the transaction is in doubt.\n  overload: System.Transactions.SinglePhaseEnlistment.InDoubt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SinglePhaseEnlistment.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Transactions.Enlistment\n  parent: System.Transactions\n  isExternal: false\n  name: Enlistment\n  nameWithType: Enlistment\n  fullName: System.Transactions.Enlistment\n- uid: System.Transactions.SinglePhaseEnlistment.Aborted\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: Aborted()\n  nameWithType: SinglePhaseEnlistment.Aborted()\n  fullName: SinglePhaseEnlistment.Aborted()\n- uid: System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: Aborted(Exception)\n  nameWithType: SinglePhaseEnlistment.Aborted(Exception)\n  fullName: SinglePhaseEnlistment.Aborted(Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Transactions.SinglePhaseEnlistment.Committed\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: Committed()\n  nameWithType: SinglePhaseEnlistment.Committed()\n  fullName: SinglePhaseEnlistment.Committed()\n- uid: System.Transactions.SinglePhaseEnlistment.InDoubt\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: InDoubt()\n  nameWithType: SinglePhaseEnlistment.InDoubt()\n  fullName: SinglePhaseEnlistment.InDoubt()\n- uid: System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: InDoubt(Exception)\n  nameWithType: SinglePhaseEnlistment.InDoubt(Exception)\n  fullName: SinglePhaseEnlistment.InDoubt(Exception)\n- uid: System.Transactions.SinglePhaseEnlistment.Aborted*\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: Aborted\n  nameWithType: SinglePhaseEnlistment.Aborted\n  fullName: SinglePhaseEnlistment.Aborted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SinglePhaseEnlistment.xml\n- uid: System.Transactions.SinglePhaseEnlistment.Committed*\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: Committed\n  nameWithType: SinglePhaseEnlistment.Committed\n  fullName: SinglePhaseEnlistment.Committed\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SinglePhaseEnlistment.xml\n- uid: System.Transactions.SinglePhaseEnlistment.InDoubt*\n  parent: System.Transactions.SinglePhaseEnlistment\n  isExternal: false\n  name: InDoubt\n  nameWithType: SinglePhaseEnlistment.InDoubt\n  fullName: SinglePhaseEnlistment.InDoubt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SinglePhaseEnlistment.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Transactions.Enlistment.Done\n  parent: System.Transactions.Enlistment\n  isExternal: false\n  name: Done()\n  nameWithType: Enlistment.Done()\n  fullName: Enlistment.Done()\n"}