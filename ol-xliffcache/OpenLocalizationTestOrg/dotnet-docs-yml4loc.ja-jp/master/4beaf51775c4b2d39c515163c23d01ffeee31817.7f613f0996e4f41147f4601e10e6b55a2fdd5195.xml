{"nodes":[{"content":"Defines an abstract class for a cache of session security tokens.","nodes":[{"pos":[0,65],"content":"Defines an abstract class for a cache of session security tokens.","nodes":[{"content":"Defines an abstract class for a cache of session security tokens.","pos":[0,65]}]}],"pos":[1369,1435],"yaml":true},{"content":"Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"></xref> class.","nodes":[{"pos":[0,143],"content":"Called from constructors in derived classes to initialize the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"&gt;&lt;/xref&gt;</ph> class.","source":"Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"></xref> class."}],"pos":[3079,3223],"yaml":true},{"content":"When overridden in a derived class, attempts to add an entry to the cache or update an existing one.","nodes":[{"pos":[0,100],"content":"When overridden in a derived class, attempts to add an entry to the cache or update an existing one.","nodes":[{"content":"When overridden in a derived class, attempts to add an entry to the cache or update an existing one.","pos":[0,100]}]}],"pos":[5009,5110],"yaml":true},{"content":"The key of the entry to be added or updated.","nodes":[{"pos":[0,44],"content":"The key of the entry to be added or updated.","nodes":[{"content":"The key of the entry to be added or updated.","pos":[0,44]}]}],"pos":[5425,5470],"yaml":true},{"content":"The token associated with the entry.","nodes":[{"pos":[0,36],"content":"The token associated with the entry.","nodes":[{"content":"The token associated with the entry.","pos":[0,36]}]}],"pos":[5566,5603],"yaml":true},{"content":"The expiration time of the entry.","nodes":[{"pos":[0,33],"content":"The expiration time of the entry.","nodes":[{"content":"The expiration time of the entry.","pos":[0,33]}]}],"pos":[5671,5705],"yaml":true},{"content":"When overridden in a derived class, attempts to retrieve an entry from the cache.","nodes":[{"pos":[0,81],"content":"When overridden in a derived class, attempts to retrieve an entry from the cache.","nodes":[{"content":"When overridden in a derived class, attempts to retrieve an entry from the cache.","pos":[0,81]}]}],"pos":[7076,7158],"yaml":true},{"content":"The key of the entry to retrieve.","nodes":[{"pos":[0,33],"content":"The key of the entry to retrieve.","nodes":[{"content":"The key of the entry to retrieve.","pos":[0,33]}]}],"pos":[7432,7466],"yaml":true},{"content":"The session token associated with the key or `null`, if no match is found.","nodes":[{"pos":[0,74],"content":"The session token associated with the key or <ph id=\"ph1\">`null`</ph>, if no match is found.","source":"The session token associated with the key or `null`, if no match is found."}],"pos":[7558,7633],"yaml":true},{"content":"When overridden in a derived class, retrieves all of the tokens associated with a key.","nodes":[{"pos":[0,86],"content":"When overridden in a derived class, retrieves all of the tokens associated with a key.","nodes":[{"content":"When overridden in a derived class, retrieves all of the tokens associated with a key.","pos":[0,86]}]}],"pos":[8909,8996],"yaml":true},{"content":"The endpoint ID to search for.","nodes":[{"pos":[0,30],"content":"The endpoint ID to search for.","nodes":[{"content":"The endpoint ID to search for.","pos":[0,30]}]}],"pos":[9265,9296],"yaml":true},{"content":"The context ID to search for.","nodes":[{"pos":[0,29],"content":"The context ID to search for.","nodes":[{"content":"The context ID to search for.","pos":[0,29]}]}],"pos":[9367,9397],"yaml":true},{"content":"The collection of session tokens associated with the key.","nodes":[{"pos":[0,57],"content":"The collection of session tokens associated with the key.","nodes":[{"content":"The collection of session tokens associated with the key.","pos":[0,57]}]}],"pos":[9529,9587],"yaml":true},{"content":"When overridden in a derived class, loads custom configuration from XML.","nodes":[{"pos":[0,72],"content":"When overridden in a derived class, loads custom configuration from XML.","nodes":[{"content":"When overridden in a derived class, loads custom configuration from XML.","pos":[0,72]}]}],"pos":[10920,10993],"yaml":true},{"content":"By default, this method throws a <xref:System.NotImplementedException>.","nodes":[{"pos":[0,71],"content":"By default, this method throws a <xref:System.NotImplementedException>.","nodes":[{"content":"By default, this method throws a <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph>.","pos":[0,71],"source":"By default, this method throws a <xref:System.NotImplementedException>."}]}],"pos":[11004,11076],"yaml":true,"extradata":"MT"},{"content":"The custom configuration elements.","nodes":[{"pos":[0,34],"content":"The custom configuration elements.","nodes":[{"content":"The custom configuration elements.","pos":[0,34]}]}],"pos":[11267,11302],"yaml":true},{"content":"When implemented in a derived class, attempts to remove an entry from the cache.","nodes":[{"pos":[0,80],"content":"When implemented in a derived class, attempts to remove an entry from the cache.","nodes":[{"content":"When implemented in a derived class, attempts to remove an entry from the cache.","pos":[0,80]}]}],"pos":[12703,12784],"yaml":true},{"content":"The key of the entry to remove.","nodes":[{"pos":[0,31],"content":"The key of the entry to remove.","nodes":[{"content":"The key of the entry to remove.","pos":[0,31]}]}],"pos":[13017,13049],"yaml":true},{"content":"When implemented in a derived class, attempts to remove all entries with a matching endpoint ID from the cache.","nodes":[{"pos":[0,111],"content":"When implemented in a derived class, attempts to remove all entries with a matching endpoint ID from the cache.","nodes":[{"content":"When implemented in a derived class, attempts to remove all entries with a matching endpoint ID from the cache.","pos":[0,111]}]}],"pos":[14256,14368],"yaml":true},{"content":"The endpoint ID for which to remove entries.","nodes":[{"pos":[0,44],"content":"The endpoint ID for which to remove entries.","nodes":[{"content":"The endpoint ID for which to remove entries.","pos":[0,44]}]}],"pos":[14525,14570],"yaml":true},{"content":"When implemented in a derived class, attempts to remove all matching entries from the cache.","nodes":[{"pos":[0,92],"content":"When implemented in a derived class, attempts to remove all matching entries from the cache.","nodes":[{"content":"When implemented in a derived class, attempts to remove all matching entries from the cache.","pos":[0,92]}]}],"pos":[15870,15963],"yaml":true},{"content":"The endpoint ID for which to remove entries.","nodes":[{"pos":[0,44],"content":"The endpoint ID for which to remove entries.","nodes":[{"content":"The endpoint ID for which to remove entries.","pos":[0,44]}]}],"pos":[16151,16196],"yaml":true},{"content":"The context ID for which to remove entries.","nodes":[{"pos":[0,43],"content":"The context ID for which to remove entries.","nodes":[{"content":"The context ID for which to remove entries.","pos":[0,43]}]}],"pos":[16267,16311],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  commentId: T:System.IdentityModel.Tokens.SessionSecurityTokenCache\n  id: SessionSecurityTokenCache\n  children:\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)\n  - System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)\n  langs:\n  - csharp\n  name: SessionSecurityTokenCache\n  nameWithType: SessionSecurityTokenCache\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Defines an abstract class for a cache of session security tokens.\n  syntax:\n    content: 'public abstract class SessionSecurityTokenCache : System.IdentityModel.Configuration.ICustomIdentityConfiguration'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IdentityModel.Configuration.ICustomIdentityConfiguration\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor\n  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: SessionSecurityTokenCache()\n  nameWithType: SessionSecurityTokenCache.SessionSecurityTokenCache()\n  fullName: SessionSecurityTokenCache.SessionSecurityTokenCache()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Called from constructors in derived classes to initialize the <xref href=\"System.IdentityModel.Tokens.SessionSecurityTokenCache\"></xref> class.\n  syntax:\n    content: protected SessionSecurityTokenCache ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)\n  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)\n  id: AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: AddOrUpdate(SessionSecurityTokenCacheKey, SessionSecurityToken, DateTime)\n  nameWithType: SessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey, SessionSecurityToken, DateTime)\n  fullName: SessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey, SessionSecurityToken, DateTime)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, attempts to add an entry to the cache or update an existing one.\n  syntax:\n    content: public abstract void AddOrUpdate (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key, System.IdentityModel.Tokens.SessionSecurityToken value, DateTime expiryTime);\n    parameters:\n    - id: key\n      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey\n      description: The key of the entry to be added or updated.\n    - id: value\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The token associated with the entry.\n    - id: expiryTime\n      type: System.DateTime\n      description: The expiration time of the entry.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  id: Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: Get(SessionSecurityTokenCacheKey)\n  nameWithType: SessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey)\n  fullName: SessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, attempts to retrieve an entry from the cache.\n  syntax:\n    content: public abstract System.IdentityModel.Tokens.SessionSecurityToken Get (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key);\n    parameters:\n    - id: key\n      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey\n      description: The key of the entry to retrieve.\n    return:\n      type: System.IdentityModel.Tokens.SessionSecurityToken\n      description: The session token associated with the key or `null`, if no match is found.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.Get*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)\n  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)\n  id: GetAll(System.String,System.Xml.UniqueId)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: GetAll(String, UniqueId)\n  nameWithType: SessionSecurityTokenCache.GetAll(String, UniqueId)\n  fullName: SessionSecurityTokenCache.GetAll(String, UniqueId)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, retrieves all of the tokens associated with a key.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SessionSecurityToken> GetAll (string endpointId, System.Xml.UniqueId contextId);\n    parameters:\n    - id: endpointId\n      type: System.String\n      description: The endpoint ID to search for.\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The context ID to search for.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SessionSecurityToken}\n      description: The collection of session tokens associated with the key.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  id: LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SessionSecurityTokenCache.LoadCustomConfiguration(XmlNodeList)\n  fullName: SessionSecurityTokenCache.LoadCustomConfiguration(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When overridden in a derived class, loads custom configuration from XML.\n  remarks: By default, this method throws a <xref:System.NotImplementedException>.\n  syntax:\n    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);\n    parameters:\n    - id: nodelist\n      type: System.Xml.XmlNodeList\n      description: The custom configuration elements.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  id: Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: Remove(SessionSecurityTokenCacheKey)\n  nameWithType: SessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey)\n  fullName: SessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When implemented in a derived class, attempts to remove an entry from the cache.\n  syntax:\n    content: public abstract void Remove (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey key);\n    parameters:\n    - id: key\n      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey\n      description: The key of the entry to remove.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)\n  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)\n  id: RemoveAll(System.String)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: RemoveAll(String)\n  nameWithType: SessionSecurityTokenCache.RemoveAll(String)\n  fullName: SessionSecurityTokenCache.RemoveAll(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When implemented in a derived class, attempts to remove all entries with a matching endpoint ID from the cache.\n  syntax:\n    content: public abstract void RemoveAll (string endpointId);\n    parameters:\n    - id: endpointId\n      type: System.String\n      description: The endpoint ID for which to remove entries.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)\n  commentId: M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)\n  id: RemoveAll(System.String,System.Xml.UniqueId)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  langs:\n  - csharp\n  name: RemoveAll(String, UniqueId)\n  nameWithType: SessionSecurityTokenCache.RemoveAll(String, UniqueId)\n  fullName: SessionSecurityTokenCache.RemoveAll(String, UniqueId)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: When implemented in a derived class, attempts to remove all matching entries from the cache.\n  syntax:\n    content: public abstract void RemoveAll (string endpointId, System.Xml.UniqueId contextId);\n    parameters:\n    - id: endpointId\n      type: System.String\n      description: The endpoint ID for which to remove entries.\n    - id: contextId\n      type: System.Xml.UniqueId\n      description: The context ID for which to remove entries.\n  overload: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: SessionSecurityTokenCache()\n  nameWithType: SessionSecurityTokenCache.SessionSecurityTokenCache()\n  fullName: SessionSecurityTokenCache.SessionSecurityTokenCache()\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: AddOrUpdate(SessionSecurityTokenCacheKey, SessionSecurityToken, DateTime)\n  nameWithType: SessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey, SessionSecurityToken, DateTime)\n  fullName: SessionSecurityTokenCache.AddOrUpdate(SessionSecurityTokenCacheKey, SessionSecurityToken, DateTime)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SessionSecurityTokenCacheKey\n  nameWithType: SessionSecurityTokenCacheKey\n  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey\n- uid: System.IdentityModel.Tokens.SessionSecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SessionSecurityToken\n  nameWithType: SessionSecurityToken\n  fullName: System.IdentityModel.Tokens.SessionSecurityToken\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: Get(SessionSecurityTokenCacheKey)\n  nameWithType: SessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey)\n  fullName: SessionSecurityTokenCache.Get(SessionSecurityTokenCacheKey)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: GetAll(String, UniqueId)\n  nameWithType: SessionSecurityTokenCache.GetAll(String, UniqueId)\n  fullName: SessionSecurityTokenCache.GetAll(String, UniqueId)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SessionSecurityToken}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<SessionSecurityToken>\n  nameWithType: IEnumerable<SessionSecurityToken>\n  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SessionSecurityToken>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Tokens.SessionSecurityToken\n    name: SessionSecurityToken\n    nameWithType: SessionSecurityToken\n    fullName: System.IdentityModel.Tokens.SessionSecurityToken\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.UniqueId\n  parent: System.Xml\n  isExternal: false\n  name: UniqueId\n  nameWithType: UniqueId\n  fullName: System.Xml.UniqueId\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SessionSecurityTokenCache.LoadCustomConfiguration(XmlNodeList)\n  fullName: SessionSecurityTokenCache.LoadCustomConfiguration(XmlNodeList)\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: Remove(SessionSecurityTokenCacheKey)\n  nameWithType: SessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey)\n  fullName: SessionSecurityTokenCache.Remove(SessionSecurityTokenCacheKey)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: RemoveAll(String)\n  nameWithType: SessionSecurityTokenCache.RemoveAll(String)\n  fullName: SessionSecurityTokenCache.RemoveAll(String)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: RemoveAll(String, UniqueId)\n  nameWithType: SessionSecurityTokenCache.RemoveAll(String, UniqueId)\n  fullName: SessionSecurityTokenCache.RemoveAll(String, UniqueId)\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: SessionSecurityTokenCache\n  nameWithType: SessionSecurityTokenCache.SessionSecurityTokenCache\n  fullName: SessionSecurityTokenCache.SessionSecurityTokenCache\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: AddOrUpdate\n  nameWithType: SessionSecurityTokenCache.AddOrUpdate\n  fullName: SessionSecurityTokenCache.AddOrUpdate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Get*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: Get\n  nameWithType: SessionSecurityTokenCache.Get\n  fullName: SessionSecurityTokenCache.Get\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: GetAll\n  nameWithType: SessionSecurityTokenCache.GetAll\n  fullName: SessionSecurityTokenCache.GetAll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: LoadCustomConfiguration\n  nameWithType: SessionSecurityTokenCache.LoadCustomConfiguration\n  fullName: SessionSecurityTokenCache.LoadCustomConfiguration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: Remove\n  nameWithType: SessionSecurityTokenCache.Remove\n  fullName: SessionSecurityTokenCache.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n- uid: System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll*\n  parent: System.IdentityModel.Tokens.SessionSecurityTokenCache\n  isExternal: false\n  name: RemoveAll\n  nameWithType: SessionSecurityTokenCache.RemoveAll\n  fullName: SessionSecurityTokenCache.RemoveAll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SessionSecurityTokenCache.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Configuration.ICustomIdentityConfiguration\n  parent: System.IdentityModel.Configuration\n  isExternal: false\n  name: ICustomIdentityConfiguration\n  nameWithType: ICustomIdentityConfiguration\n  fullName: System.IdentityModel.Configuration.ICustomIdentityConfiguration\n"}