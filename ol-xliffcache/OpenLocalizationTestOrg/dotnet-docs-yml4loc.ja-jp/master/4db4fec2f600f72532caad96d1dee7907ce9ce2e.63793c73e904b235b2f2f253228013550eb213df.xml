{"nodes":[{"content":"Provides the underlying stream of data for network access.","nodes":[{"pos":[0,58],"content":"Provides the underlying stream of data for network access.","nodes":[{"content":"Provides the underlying stream of data for network access.","pos":[0,58]}]}],"pos":[2530,2589],"yaml":true},{"content":"The <xref:System.Net.Sockets.NetworkStream> class provides methods for sending and receiving data over <xref:System.Net.Sockets.SocketType.Stream> sockets in blocking mode. For more information about blocking versus nonblocking <xref:System.Net.Sockets.Socket>s, see [Using an Asynchronous Client Socket](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md). You can use the <xref:System.Net.Sockets.NetworkStream> class for both synchronous and asynchronous data transfer. For more information about synchronous and asynchronous communication, see [Sockets](~/docs/framework/network-programming/sockets.md).  \n  \n To create a <xref:System.Net.Sockets.NetworkStream>, you must provide a connected <xref:System.Net.Sockets.Socket>. You can also specify what <xref:System.IO.FileAccess> permission the <xref:System.Net.Sockets.NetworkStream> has over the provided <xref:System.Net.Sockets.Socket>. By default, closing the <xref:System.Net.Sockets.NetworkStream> does not close the provided <xref:System.Net.Sockets.Socket>. If you want the <xref:System.Net.Sockets.NetworkStream> to have permission to close the provided <xref:System.Net.Sockets.Socket>, you must specify `true` for the value of the `ownsSocket` parameter.  \n  \n Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O. If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication.  \n  \n The <xref:System.Net.Sockets.NetworkStream> does not support random access to the network data stream. The value of the <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> property, which indicates whether the stream supports seeking, is always `false`; reading the <xref:System.Net.Sockets.NetworkStream.Position%2A> property, reading the <xref:System.Net.Sockets.NetworkStream.Length%2A> property, or calling the <xref:System.Net.Sockets.NetworkStream.Seek%2A> method will throw a <xref:System.NotSupportedException>.  \n  \n Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","nodes":[{"pos":[0,632],"content":"The <xref:System.Net.Sockets.NetworkStream> class provides methods for sending and receiving data over <xref:System.Net.Sockets.SocketType.Stream> sockets in blocking mode. For more information about blocking versus nonblocking <xref:System.Net.Sockets.Socket>s, see [Using an Asynchronous Client Socket](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md). You can use the <xref:System.Net.Sockets.NetworkStream> class for both synchronous and asynchronous data transfer. For more information about synchronous and asynchronous communication, see [Sockets](~/docs/framework/network-programming/sockets.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class provides methods for sending and receiving data over <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketType.Stream&gt;</ph> sockets in blocking mode.","pos":[0,172],"source":"The <xref:System.Net.Sockets.NetworkStream> class provides methods for sending and receiving data over <xref:System.Net.Sockets.SocketType.Stream> sockets in blocking mode."},{"content":"For more information about blocking versus nonblocking <ph id=\"ph1\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>s, see <bpt id=\"p1\">[</bpt>Using an Asynchronous Client Socket<ept id=\"p1\">](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md)</ept>.","pos":[173,382],"source":" For more information about blocking versus nonblocking <xref:System.Net.Sockets.Socket>s, see [Using an Asynchronous Client Socket](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md)."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class for both synchronous and asynchronous data transfer.","pos":[383,497],"source":" You can use the <xref:System.Net.Sockets.NetworkStream> class for both synchronous and asynchronous data transfer."},{"content":"For more information about synchronous and asynchronous communication, see <bpt id=\"p1\">[</bpt>Sockets<ept id=\"p1\">](~/docs/framework/network-programming/sockets.md)</ept>.","pos":[498,632],"source":" For more information about synchronous and asynchronous communication, see [Sockets](~/docs/framework/network-programming/sockets.md)."}]},{"pos":[639,1245],"content":"To create a <xref:System.Net.Sockets.NetworkStream>, you must provide a connected <xref:System.Net.Sockets.Socket>. You can also specify what <xref:System.IO.FileAccess> permission the <xref:System.Net.Sockets.NetworkStream> has over the provided <xref:System.Net.Sockets.Socket>. By default, closing the <xref:System.Net.Sockets.NetworkStream> does not close the provided <xref:System.Net.Sockets.Socket>. If you want the <xref:System.Net.Sockets.NetworkStream> to have permission to close the provided <xref:System.Net.Sockets.Socket>, you must specify `true` for the value of the `ownsSocket` parameter.","nodes":[{"content":"To create a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, you must provide a connected <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[0,115],"source":"To create a <xref:System.Net.Sockets.NetworkStream>, you must provide a connected <xref:System.Net.Sockets.Socket>."},{"content":"You can also specify what <ph id=\"ph1\">&lt;xref:System.IO.FileAccess&gt;</ph> permission the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> has over the provided <ph id=\"ph3\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[116,280],"source":" You can also specify what <xref:System.IO.FileAccess> permission the <xref:System.Net.Sockets.NetworkStream> has over the provided <xref:System.Net.Sockets.Socket>."},{"content":"By default, closing the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> does not close the provided <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[281,406],"source":" By default, closing the <xref:System.Net.Sockets.NetworkStream> does not close the provided <xref:System.Net.Sockets.Socket>."},{"content":"If you want the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to have permission to close the provided <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, you must specify <ph id=\"ph3\">`true`</ph> for the value of the <ph id=\"ph4\">`ownsSocket`</ph> parameter.","pos":[407,606],"source":" If you want the <xref:System.Net.Sockets.NetworkStream> to have permission to close the provided <xref:System.Net.Sockets.Socket>, you must specify `true` for the value of the `ownsSocket` parameter."}]},{"pos":[1252,1755],"content":"Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O. If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication.","nodes":[{"content":"Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O. If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication.","pos":[0,503],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> methods for simple single thread synchronous blocking I/O.","pos":[0,167],"source":"Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O."},{"content":"If you want to process your I/O using separate threads, consider using the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt;</ph> methods, or the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;</ph> methods for communication.","pos":[168,503],"source":" If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication."}]}]},{"pos":[1762,2280],"content":"The <xref:System.Net.Sockets.NetworkStream> does not support random access to the network data stream. The value of the <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> property, which indicates whether the stream supports seeking, is always `false`; reading the <xref:System.Net.Sockets.NetworkStream.Position%2A> property, reading the <xref:System.Net.Sockets.NetworkStream.Length%2A> property, or calling the <xref:System.Net.Sockets.NetworkStream.Seek%2A> method will throw a <xref:System.NotSupportedException>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> does not support random access to the network data stream.","pos":[0,102],"source":"The <xref:System.Net.Sockets.NetworkStream> does not support random access to the network data stream."},{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.CanSeek%2A&gt;</ph> property, which indicates whether the stream supports seeking, is always <ph id=\"ph2\">`false`</ph>; reading the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.Position%2A&gt;</ph> property, reading the <ph id=\"ph4\">&lt;xref:System.Net.Sockets.NetworkStream.Length%2A&gt;</ph> property, or calling the <ph id=\"ph5\">&lt;xref:System.Net.Sockets.NetworkStream.Seek%2A&gt;</ph> method will throw a <ph id=\"ph6\">&lt;xref:System.NotSupportedException&gt;</ph>.","pos":[103,518],"source":" The value of the <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> property, which indicates whether the stream supports seeking, is always `false`; reading the <xref:System.Net.Sockets.NetworkStream.Position%2A> property, reading the <xref:System.Net.Sockets.NetworkStream.Length%2A> property, or calling the <xref:System.Net.Sockets.NetworkStream.Seek%2A> method will throw a <xref:System.NotSupportedException>."}]},{"pos":[2287,2663],"content":"Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","nodes":[{"content":"Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","pos":[0,376],"nodes":[{"content":"Read and write operations can be performed simultaneously on an instance of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class without the need for synchronization.","pos":[0,163],"source":"Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization."},{"content":"As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","pos":[164,376]}]}]}],"pos":[2600,5274],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref>.","nodes":[{"pos":[0,155],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> class for the specified <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref>."}],"pos":[8569,8725],"yaml":true},{"content":"The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>. The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>.","nodes":[{"pos":[0,358],"content":"The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>. The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>.","nodes":[{"content":"The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>. The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>.","pos":[0,358],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is created with read/write access to the specified <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[0,128],"source":"The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> does not own the underlying <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, so calling the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt;</ph> method does not close the <ph id=\"ph4\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[129,358],"source":" The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>."}]}]}],"pos":[8736,9095],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> that the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> will use to send and receive data.","source":"The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data."}],"pos":[9880,10029],"yaml":true},{"content":"The <code>socket</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>socket</code> parameter is `null`."}],"pos":[10197,10242],"yaml":true},{"content":"The <code>socket</code> parameter is not connected.  \n  \n -or-  \n  \n The <xref href=\"System.Net.Sockets.Socket.SocketType\"></xref> property of the <code>socket</code> parameter is not <xref href=\"System.Net.Sockets.SocketType.Stream\"></xref>.  \n  \n -or-  \n  \n The <code>socket</code> parameter is in a nonblocking state.","nodes":[{"pos":[0,51],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not connected.","source":"The <code>socket</code> parameter is not connected."},{"pos":[58,62],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[69,242],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket.SocketType\"&gt;&lt;/xref&gt;</ph> property of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.SocketType.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Net.Sockets.Socket.SocketType\"></xref> property of the <code>socket</code> parameter is not <xref href=\"System.Net.Sockets.SocketType.Stream\"></xref>."},{"pos":[249,253],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[260,320],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is in a nonblocking state.","source":"The <code>socket</code> parameter is in a nonblocking state."}],"pos":[10330,10665],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref> with the specified <xref href=\"System.Net.Sockets.Socket\"></xref> ownership.","nodes":[{"pos":[0,235],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> class for the specified <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> with the specified <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> ownership.","source":"Initializes a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref> with the specified <xref href=\"System.Net.Sockets.Socket\"></xref> ownership."}],"pos":[12105,12341],"yaml":true},{"content":"The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>. If the value of `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.","nodes":[{"pos":[0,423],"content":"The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>. If the value of `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is created with read/write access to the specified <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[0,128],"source":"The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>."},{"content":"If the value of <ph id=\"ph1\">`ownsSocket`</ph> parameter is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> takes ownership of the underlying <ph id=\"ph4\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and calling the <ph id=\"ph5\">&lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt;</ph> method also closes the underlying <ph id=\"ph6\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[129,423],"source":" If the value of `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>."}]}],"pos":[12352,12776],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> that the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> will use to send and receive data.","source":"The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data."}],"pos":[13575,13724],"yaml":true},{"content":"Set to `true` to indicate that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will take ownership of the <xref href=\"System.Net.Sockets.Socket\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,183],"content":"Set to <ph id=\"ph1\">`true`</ph> to indicate that the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> will take ownership of the <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"Set to `true` to indicate that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will take ownership of the <xref href=\"System.Net.Sockets.Socket\"></xref>; otherwise, `false`."}],"pos":[13791,13975],"yaml":true},{"content":"The <code>socket</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>socket</code> parameter is `null`."}],"pos":[14143,14188],"yaml":true},{"content":"The <code>socket</code> parameter is not connected.  \n  \n -or-  \n  \n the value of the <xref href=\"System.Net.Sockets.Socket.SocketType\"></xref> property of the <code>socket</code> parameter is not <xref href=\"System.Net.Sockets.SocketType.Stream\"></xref>.  \n  \n -or-  \n  \n the <code>socket</code> parameter is in a nonblocking state.","nodes":[{"pos":[0,51],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not connected.","source":"The <code>socket</code> parameter is not connected."},{"pos":[58,62],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[69,255],"content":"the value of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket.SocketType\"&gt;&lt;/xref&gt;</ph> property of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.SocketType.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"the value of the <xref href=\"System.Net.Sockets.Socket.SocketType\"></xref> property of the <code>socket</code> parameter is not <xref href=\"System.Net.Sockets.SocketType.Stream\"></xref>."},{"pos":[262,266],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[273,333],"content":"the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is in a nonblocking state.","source":"the <code>socket</code> parameter is in a nonblocking state."}],"pos":[14276,14624],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref> with the specified access rights.","nodes":[{"pos":[0,188],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> class for the specified <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> with the specified access rights.","source":"Creates a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref> with the specified access rights."}],"pos":[16091,16280],"yaml":true},{"content":"The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>. With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>.  \n  \n The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>. If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.","nodes":[{"pos":[0,395],"content":"The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>. With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>.","nodes":[{"content":"The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>. With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>.","pos":[0,395],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is created with the specified access to the specified <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[0,131],"source":"The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>."},{"content":"With this constructor, the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> does not own the underlying <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, so calling the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt;</ph> method does not close the underlying <ph id=\"ph4\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[132,395],"source":" With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>."}]}]},{"pos":[402,1034],"content":"The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>. If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.","nodes":[{"content":"The <ph id=\"ph1\">`access`</ph> parameter sets the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;</ph> properties of the <ph id=\"ph4\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.","pos":[0,197],"source":"The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>."},{"content":"If you specify <ph id=\"ph1\">&lt;xref:System.IO.FileAccess.Write&gt;</ph>, then the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> allows calls to the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method.","pos":[198,373],"source":" If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method."},{"content":"If you specify <ph id=\"ph1\">&lt;xref:System.IO.FileAccess.Read&gt;</ph>, then the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> allows calls to the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method.","pos":[374,547],"source":" If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method."},{"content":"If you specify <ph id=\"ph1\">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph>, both method calls are allowed.","pos":[548,632],"source":" If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed."}]}],"pos":[16291,17330],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> that the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> will use to send and receive data.","source":"The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data."}],"pos":[18161,18310],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values that specify the type of access given to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> over the provided <xref href=\"System.Net.Sockets.Socket\"></xref>.","nodes":[{"pos":[0,242],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAccess\"&gt;&lt;/xref&gt;</ph> values that specify the type of access given to the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> over the provided <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph>.","source":"A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values that specify the type of access given to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> over the provided <xref href=\"System.Net.Sockets.Socket\"></xref>."}],"pos":[18379,18622],"yaml":true},{"content":"The <code>socket</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>socket</code> parameter is `null`."}],"pos":[18790,18835],"yaml":true},{"content":"The <code>socket</code> parameter is not connected.  \n  \n -or-  \n  \n the <xref href=\"System.Net.Sockets.Socket.SocketType\"></xref> property of the <code>socket</code> parameter is not <xref href=\"System.Net.Sockets.SocketType.Stream\"></xref>.  \n  \n -or-  \n  \n the <code>socket</code> parameter is in a nonblocking state.","nodes":[{"pos":[0,51],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not connected.","source":"The <code>socket</code> parameter is not connected."},{"pos":[58,62],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[69,242],"content":"the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket.SocketType\"&gt;&lt;/xref&gt;</ph> property of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.SocketType.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"the <xref href=\"System.Net.Sockets.Socket.SocketType\"></xref> property of the <code>socket</code> parameter is not <xref href=\"System.Net.Sockets.SocketType.Stream\"></xref>."},{"pos":[249,253],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[260,320],"content":"the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is in a nonblocking state.","source":"the <code>socket</code> parameter is in a nonblocking state."}],"pos":[18923,19258],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref> with the specified access rights and the specified <xref href=\"System.Net.Sockets.Socket\"></xref> ownership.","nodes":[{"pos":[0,263],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> class for the specified <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> with the specified access rights and the specified <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> ownership.","source":"Creates a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref> with the specified access rights and the specified <xref href=\"System.Net.Sockets.Socket\"></xref> ownership."}],"pos":[20613,20877],"yaml":true},{"content":"The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>. If the value of the `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.  \n  \n The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>. If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.","nodes":[{"pos":[0,427],"content":"The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>. If the value of the `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is created with read/write access to the specified <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[0,128],"source":"The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>."},{"content":"If the value of the <ph id=\"ph1\">`ownsSocket`</ph> parameter is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> takes ownership of the underlying <ph id=\"ph4\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and calling the <ph id=\"ph5\">&lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt;</ph> method also closes the underlying <ph id=\"ph6\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[129,427],"source":" If the value of the `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>."}]},{"pos":[434,1066],"content":"The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>. If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.","nodes":[{"content":"The <ph id=\"ph1\">`access`</ph> parameter sets the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;</ph> properties of the <ph id=\"ph4\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.","pos":[0,197],"source":"The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>."},{"content":"If you specify <ph id=\"ph1\">&lt;xref:System.IO.FileAccess.Write&gt;</ph>, then the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> allows calls to the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method.","pos":[198,373],"source":" If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method."},{"content":"If you specify <ph id=\"ph1\">&lt;xref:System.IO.FileAccess.Read&gt;</ph>, then the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> allows calls to the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method.","pos":[374,547],"source":" If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method."},{"content":"If you specify <ph id=\"ph1\">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph>, both method calls are allowed.","pos":[548,632],"source":" If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed."}]}],"pos":[20888,21959],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> that the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> will use to send and receive data.","source":"The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data."}],"pos":[22967,23116],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values that specifies the type of access given to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> over the provided <xref href=\"System.Net.Sockets.Socket\"></xref>.","nodes":[{"pos":[0,244],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAccess\"&gt;&lt;/xref&gt;</ph> values that specifies the type of access given to the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> over the provided <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph>.","source":"A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values that specifies the type of access given to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> over the provided <xref href=\"System.Net.Sockets.Socket\"></xref>."}],"pos":[23185,23430],"yaml":true},{"content":"Set to `true` to indicate that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will take ownership of the <xref href=\"System.Net.Sockets.Socket\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,183],"content":"Set to <ph id=\"ph1\">`true`</ph> to indicate that the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> will take ownership of the <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"Set to `true` to indicate that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will take ownership of the <xref href=\"System.Net.Sockets.Socket\"></xref>; otherwise, `false`."}],"pos":[23497,23681],"yaml":true},{"content":"The <code>socket</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>socket</code> parameter is `null`."}],"pos":[23849,23894],"yaml":true},{"content":"The <code>socket</code> parameter is not connected.  \n  \n -or-  \n  \n The <xref href=\"System.Net.Sockets.Socket.SocketType\"></xref> property of the <code>socket</code> parameter is not <xref href=\"System.Net.Sockets.SocketType.Stream\"></xref>.  \n  \n -or-  \n  \n The <code>socket</code> parameter is in a nonblocking state.","nodes":[{"pos":[0,51],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not connected.","source":"The <code>socket</code> parameter is not connected."},{"pos":[58,62],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[69,242],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket.SocketType\"&gt;&lt;/xref&gt;</ph> property of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph3\">&lt;xref href=\"System.Net.Sockets.SocketType.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Net.Sockets.Socket.SocketType\"></xref> property of the <code>socket</code> parameter is not <xref href=\"System.Net.Sockets.SocketType.Stream\"></xref>."},{"pos":[249,253],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[260,320],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">socket</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is in a nonblocking state.","source":"The <code>socket</code> parameter is in a nonblocking state."}],"pos":[23982,24317],"yaml":true},{"content":"Begins an asynchronous read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,91],"content":"Begins an asynchronous read from the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"Begins an asynchronous read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[25752,25844],"yaml":true},{"content":"The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers. Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread.  \n  \n You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method. At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>. Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information. Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method through the `state` parameter.  \n  \n Your callback method should call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method. When your application calls <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndRead%2A> until the provided <xref:System.Net.Sockets.NetworkStream> reads data or throws an exception. If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method. Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing. For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).  \n  \n The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method reads as much data as is available, up to the number of bytes specified by the `size` parameter.  \n  \n> [!NOTE]\n>  If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  \n  \n Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","nodes":[{"pos":[0,279],"content":"The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers. Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread.","nodes":[{"content":"The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers. Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread.","pos":[0,279],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> method starts asynchronously reading data from the incoming network buffers.","pos":[0,133],"source":"The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> method gives you the ability to receive data within a separate execution thread.","pos":[134,279],"source":" Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread."}]}]},{"pos":[286,879],"content":"You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method. At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>. Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information. Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method through the `state` parameter.","nodes":[{"content":"You must create a callback method that implements the <ph id=\"ph1\">&lt;xref:System.AsyncCallback&gt;</ph> delegate and pass its name to the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> method.","pos":[0,176],"source":"You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method."},{"content":"At the very minimum, your <ph id=\"ph1\">`state`</ph> parameter must contain the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.","pos":[177,278],"source":" At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>."},{"content":"Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information.","pos":[279,458]},{"content":"Pass the structure or class instance to the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> method through the <ph id=\"ph2\">`state`</ph> parameter.","pos":[459,593],"source":" Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method through the `state` parameter."}]},{"pos":[886,1871],"content":"Your callback method should call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method. When your application calls <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndRead%2A> until the provided <xref:System.Net.Sockets.NetworkStream> reads data or throws an exception. If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method. Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing. For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).","nodes":[{"content":"Your callback method should call the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;</ph> method.","pos":[0,95],"source":"Your callback method should call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method."},{"content":"When your application calls <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;</ph> until the provided <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> reads data or throws an exception.","pos":[96,489],"source":" When your application calls <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndRead%2A> until the provided <xref:System.Net.Sockets.NetworkStream> reads data or throws an exception."},{"content":"If you want the original thread to block after you call the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> method, use the <ph id=\"ph2\">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method.","pos":[490,672],"source":" If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method."},{"content":"Call <ph id=\"ph1\">&lt;xref:System.Threading.EventWaitHandle.Set%2A&gt;</ph> in the callback method when you want the original thread to continue executing.","pos":[673,804],"source":" Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing."},{"content":"For additional information about writing callback methods, see <bpt id=\"p1\">[</bpt>Marshaling a Delegate as a Callback Method<ept id=\"p1\">](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)</ept>.","pos":[805,985],"source":" For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)."}]},{"pos":[1878,2038],"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> method reads as much data as is available, up to the number of bytes specified by the <ph id=\"ph2\">`size`</ph> parameter.","source":"The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method reads as much data as is available, up to the number of bytes specified by the `size` parameter."},{"pos":[2046,2478],"content":"[!NOTE]\n If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","leadings":["","> "],"nodes":[{"content":" If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","pos":[8,430],"nodes":[{"content":"If you receive an <ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>, check the <ph id=\"ph2\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property to determine if it was caused by a <ph id=\"ph3\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.","pos":[1,187],"source":" If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>."},{"content":"If so, use the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;</ph> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","pos":[188,422],"source":" If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error."}]}]},{"pos":[2485,2861],"content":"Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","nodes":[{"content":"Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","pos":[0,376],"nodes":[{"content":"Read and write operations can be performed simultaneously on an instance of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class without the need for synchronization.","pos":[0,163],"source":"Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization."},{"content":"As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","pos":[164,376]}]}]}],"pos":[25855,28730],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Byte\"></xref> that is the location in memory to store data read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,163],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that is the location in memory to store data read from the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"An array of type <xref href=\"System.Byte\"></xref> that is the location in memory to store data read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[29739,29903],"yaml":true},{"content":"The location in <code>buffer</code> to begin storing the data.","nodes":[{"pos":[0,62],"content":"The location in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> to begin storing the data.","source":"The location in <code>buffer</code> to begin storing the data."}],"pos":[29964,30027],"yaml":true},{"content":"The number of bytes to read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,91],"content":"The number of bytes to read from the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"The number of bytes to read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[30086,30178],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that is executed when <xref href=\"System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> completes.","nodes":[{"pos":[0,227],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that is executed when <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> completes.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that is executed when <xref href=\"System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> completes."}],"pos":[30249,30477],"yaml":true},{"content":"An object that contains any additional user-defined data.","nodes":[{"pos":[0,57],"content":"An object that contains any additional user-defined data.","nodes":[{"content":"An object that contains any additional user-defined data.","pos":[0,57]}]}],"pos":[30538,30596],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous call.","nodes":[{"pos":[0,82],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that represents the asynchronous call.","source":"An <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous call."}],"pos":[30659,30742],"yaml":true},{"content":"The <code>buffer</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>buffer</code> parameter is `null`."}],"pos":[30914,30959],"yaml":true},{"content":"The <code>offset</code> parameter is less than 0.  \n  \n -or-  \n  \n The <code>offset</code> parameter is greater than the length of the <code>buffer</code> paramater.  \n  \n -or-  \n  \n The <code>size</code> is less than 0.  \n  \n -or-  \n  \n The <code>size</code> is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than 0.","source":"The <code>offset</code> parameter is less than 0."},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,165],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than the length of the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p2\">&lt;/code&gt;</ept> paramater.","source":"The <code>offset</code> parameter is greater than the length of the <code>buffer</code> paramater."},{"pos":[172,176],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[183,220],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">size</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than 0.","source":"The <code>size</code> is less than 0."},{"pos":[227,231],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[238,363],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">size</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than the length of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p2\">&lt;/code&gt;</ept> minus the value of the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">offset</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter.","source":"The <code>size</code> is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter."}],"pos":[31073,31451],"yaml":true},{"content":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed.  \n  \n -or-  \n  \n There was a failure while reading from the network.  \n  \n -or-  \n  \n An error occurred when accessing the socket.","nodes":[{"pos":[0,72],"content":"The underlying <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed."},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,141],"content":"There was a failure while reading from the network.","nodes":[{"content":"There was a failure while reading from the network.","pos":[0,51]}]},{"pos":[148,152],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[159,203],"content":"An error occurred when accessing the socket.","nodes":[{"content":"An error occurred when accessing the socket.","pos":[0,44]}]}],"pos":[31539,31755],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed."}],"pos":[31861,31930],"yaml":true},{"content":"Begins an asynchronous write to a stream.","nodes":[{"pos":[0,41],"content":"Begins an asynchronous write to a stream.","nodes":[{"content":"Begins an asynchronous write to a stream.","pos":[0,41]}]}],"pos":[33371,33413],"yaml":true},{"content":"The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host. Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread.  \n  \n You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method. At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>. If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.NetworkStream> and the other required information. Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method through the `state` parameter.  \n  \n Your callback method should implement the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method. When your application calls <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> until the <xref:System.Net.Sockets.NetworkStream> sends the number of bytes requested or throws an exception. If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method. Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing. For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).  \n  \n> [!NOTE]\n>  If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  \n  \n Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","nodes":[{"pos":[0,266],"content":"The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host. Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread.","nodes":[{"content":"The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host. Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread.","pos":[0,266],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph> method starts an asynchronous send operation to the remote host.","pos":[0,122],"source":"The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph> method gives you the ability to send data within a separate execution thread.","pos":[123,266],"source":" Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread."}]}]},{"pos":[273,859],"content":"You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method. At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>. If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.NetworkStream> and the other required information. Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method through the `state` parameter.","nodes":[{"content":"You must create a callback method that implements the <ph id=\"ph1\">&lt;xref:System.AsyncCallback&gt;</ph> delegate and pass its name to the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph> method.","pos":[0,177],"source":"You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method."},{"content":"At the very minimum, your <ph id=\"ph1\">`state`</ph> parameter must contain the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.","pos":[178,279],"source":" At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>."},{"content":"If your callback needs more information, you can create a small class or structure to hold the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> and the other required information.","pos":[280,450],"source":" If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.NetworkStream> and the other required information."},{"content":"Pass the structure or class instance to the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph> method through the <ph id=\"ph2\">`state`</ph> parameter.","pos":[451,586],"source":" Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method through the `state` parameter."}]},{"pos":[866,1799],"content":"Your callback method should implement the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method. When your application calls <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> until the <xref:System.Net.Sockets.NetworkStream> sends the number of bytes requested or throws an exception. If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method. Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing. For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).","nodes":[{"content":"Your callback method should implement the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt;</ph> method.","pos":[0,101],"source":"Your callback method should implement the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method."},{"content":"When your application calls <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph>, the system uses a separate thread to execute the specified callback method, and blocks on <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt;</ph> until the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> sends the number of bytes requested or throws an exception.","pos":[102,436],"source":" When your application calls <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> until the <xref:System.Net.Sockets.NetworkStream> sends the number of bytes requested or throws an exception."},{"content":"If you want the original thread to block after you call the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph> method, use the <ph id=\"ph2\">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> method.","pos":[437,620],"source":" If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method."},{"content":"Call <ph id=\"ph1\">&lt;xref:System.Threading.EventWaitHandle.Set%2A&gt;</ph> in the callback method when you want the original thread to continue executing.","pos":[621,752],"source":" Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing."},{"content":"For additional information about writing callback methods, see <bpt id=\"p1\">[</bpt>Marshaling a Delegate as a Callback Method<ept id=\"p1\">](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)</ept>.","pos":[753,933],"source":" For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)."}]},{"pos":[1807,2239],"content":"[!NOTE]\n If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","leadings":["","> "],"nodes":[{"content":" If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","pos":[8,430],"nodes":[{"content":"If you receive an <ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>, check the <ph id=\"ph2\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property to determine if it was caused by a <ph id=\"ph3\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.","pos":[1,187],"source":" If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>."},{"content":"If so, use the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;</ph> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","pos":[188,422],"source":" If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error."}]}]},{"pos":[2246,2622],"content":"Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","nodes":[{"content":"Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","pos":[0,376],"nodes":[{"content":"Read and write operations can be performed simultaneously on an instance of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class without the need for synchronization.","pos":[0,163],"source":"Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization."},{"content":"As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.","pos":[164,376]}]}]}],"pos":[33424,36058],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Byte\"></xref> that contains the data to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,143],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the data to write to the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"An array of type <xref href=\"System.Byte\"></xref> that contains the data to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[37068,37212],"yaml":true},{"content":"The location in <code>buffer</code> to begin sending the data.","nodes":[{"pos":[0,62],"content":"The location in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> to begin sending the data.","source":"The location in <code>buffer</code> to begin sending the data."}],"pos":[37273,37336],"yaml":true},{"content":"The number of bytes to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,90],"content":"The number of bytes to write to the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"The number of bytes to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[37395,37486],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that is executed when <xref href=\"System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> completes.","nodes":[{"pos":[0,228],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that is executed when <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> completes.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that is executed when <xref href=\"System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> completes."}],"pos":[37557,37786],"yaml":true},{"content":"An object that contains any additional user-defined data.","nodes":[{"pos":[0,57],"content":"An object that contains any additional user-defined data.","nodes":[{"content":"An object that contains any additional user-defined data.","pos":[0,57]}]}],"pos":[37847,37905],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous call.","nodes":[{"pos":[0,82],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that represents the asynchronous call.","source":"An <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous call."}],"pos":[37968,38051],"yaml":true},{"content":"The <code>buffer</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>buffer</code> parameter is `null`."}],"pos":[38224,38269],"yaml":true},{"content":"The <code>offset</code> parameter is less than 0.  \n  \n -or-  \n  \n The <code>offset</code> parameter is greater than the length of <code>buffer</code>.  \n  \n -or-  \n  \n The <code>size</code> parameter is less than 0.  \n  \n -or-  \n  \n The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than 0.","source":"The <code>offset</code> parameter is less than 0."},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,151],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The <code>offset</code> parameter is greater than the length of <code>buffer</code>."},{"pos":[158,162],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[169,216],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">size</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than 0.","source":"The <code>size</code> parameter is less than 0."},{"pos":[223,227],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[234,369],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">size</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p2\">&lt;/code&gt;</ept> minus the value of the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">offset</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter.","source":"The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter."}],"pos":[38383,38767],"yaml":true},{"content":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed.  \n  \n -or-  \n  \n There was a failure while writing to the network.  \n  \n -or-  \n  \n An error occurred when accessing the socket.","nodes":[{"pos":[0,72],"content":"The underlying <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed."},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,139],"content":"There was a failure while writing to the network.","nodes":[{"content":"There was a failure while writing to the network.","pos":[0,49]}]},{"pos":[146,150],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[157,201],"content":"An error occurred when accessing the socket.","nodes":[{"content":"An error occurred when accessing the socket.","pos":[0,44]}]}],"pos":[38855,39069],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed."}],"pos":[39175,39244],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> supports reading.","nodes":[{"pos":[0,111],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> supports reading.","source":"Gets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> supports reading."}],"pos":[40306,40418],"yaml":true},{"content":"If <xref:System.Net.Sockets.NetworkStream.CanRead%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>. The <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.","nodes":[{"pos":[0,491],"content":"If <xref:System.Net.Sockets.NetworkStream.CanRead%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>. The <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> allows calls to the <ph id=\"ph4\">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method.","pos":[0,180],"source":"If <xref:System.Net.Sockets.NetworkStream.CanRead%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method."},{"content":"Provide the appropriate <ph id=\"ph1\">&lt;xref:System.IO.FileAccess&gt;</ph> enumerated value in the constructor to set the readability and writability of the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.","pos":[181,355],"source":" Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;</ph> property is set when the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is initialized.","pos":[356,491],"source":" The <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized."}]}],"pos":[40429,40921],"yaml":true,"extradata":"MT"},{"content":"`true` if data can be read from the stream; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,92],"content":"`true` if data can be read from the stream; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if data can be read from the stream; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,63],"source":"`true` if data can be read from the stream; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[64,92],"source":" The default value is `true`."}]}],"pos":[41758,41853],"yaml":true},{"content":"Gets a value that indicates whether the stream supports seeking. This property is not currently supported.This property always returns `false`.","nodes":[{"pos":[0,143],"content":"Gets a value that indicates whether the stream supports seeking. This property is not currently supported.This property always returns `false`.","nodes":[{"content":"Gets a value that indicates whether the stream supports seeking.","pos":[0,64]},{"content":"This property is not currently supported.This property always returns <ph id=\"ph1\">`false`</ph>.","pos":[65,143],"source":" This property is not currently supported.This property always returns `false`."}]}],"pos":[43170,43314],"yaml":true},{"content":"`false` in all cases to indicate that <xref href=\"System.Net.Sockets.NetworkStream\"></xref> cannot seek a specific location in the stream.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`false`</ph> in all cases to indicate that <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> cannot seek a specific location in the stream.","source":"`false` in all cases to indicate that <xref href=\"System.Net.Sockets.NetworkStream\"></xref> cannot seek a specific location in the stream."}],"pos":[43433,43574],"yaml":true},{"content":"Indicates whether timeout properties are usable for <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,106],"content":"Indicates whether timeout properties are usable for <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"Indicates whether timeout properties are usable for <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[44909,45016],"yaml":true},{"content":"This property is present because it is inherited from <xref:System.IO.Stream>.","nodes":[{"pos":[0,78],"content":"This property is present because it is inherited from <xref:System.IO.Stream>.","nodes":[{"content":"This property is present because it is inherited from <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph>.","pos":[0,78],"source":"This property is present because it is inherited from <xref:System.IO.Stream>."}]}],"pos":[45027,45106],"yaml":true,"extradata":"MT"},{"content":"`true` in all cases.","nodes":[{"pos":[0,20],"content":"<ph id=\"ph1\">`true`</ph> in all cases.","source":"`true` in all cases."}],"pos":[45228,45251],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> supports writing.","nodes":[{"pos":[0,111],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> supports writing.","source":"Gets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> supports writing."}],"pos":[46577,46689],"yaml":true},{"content":"If <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>. The <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.","nodes":[{"pos":[0,494],"content":"If <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>. The <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> allows calls to the <ph id=\"ph4\">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method.","pos":[0,182],"source":"If <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method."},{"content":"Provide the appropriate <ph id=\"ph1\">&lt;xref:System.IO.FileAccess&gt;</ph> enumerated value in the constructor to set the readability and writability of the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.","pos":[183,357],"source":" Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;</ph> property is set when the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is initialized.","pos":[358,494],"source":" The <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized."}]}],"pos":[46700,47195],"yaml":true,"extradata":"MT"},{"content":"`true` if data can be written to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,140],"content":"`true` if data can be written to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if data can be written to the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,111],"source":"`true` if data can be written to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[112,140],"source":" The default value is `true`."}]}],"pos":[48035,48178],"yaml":true},{"content":"Closes the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> after waiting the specified time to allow data to be sent.","nodes":[{"pos":[0,123],"content":"Closes the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> after waiting the specified time to allow data to be sent.","source":"Closes the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> after waiting the specified time to allow data to be sent."}],"pos":[49545,49669],"yaml":true},{"content":"The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>. If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.  \n  \n If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the <xref:System.Net.Sockets.NetworkStream.Close%2A> method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.","nodes":[{"pos":[0,286],"content":"The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>. If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.","nodes":[{"content":"The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>. If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.","pos":[0,286],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt;</ph> method frees both unmanaged and managed resources associated with the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.","pos":[0,163],"source":"The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> owns the underlying <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, it is closed as well.","pos":[164,286],"source":" If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well."}]}]},{"pos":[293,558],"content":"If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the <xref:System.Net.Sockets.NetworkStream.Close%2A> method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.","nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> was associated with a <ph id=\"ph2\">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.Close%2A&gt;</ph> method will close the TCP connection, but not dispose of the associated <ph id=\"ph4\">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.","pos":[0,265],"source":"If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the <xref:System.Net.Sockets.NetworkStream.Close%2A> method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>."}]}],"pos":[49680,50243],"yaml":true,"extradata":"MT"},{"content":"A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.","nodes":[{"pos":[0,116],"content":"A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.","nodes":[{"content":"A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.","pos":[0,116]}]}],"pos":[50377,50494],"yaml":true},{"content":"The <code>timeout</code> parameter is less than -1.","nodes":[{"pos":[0,51],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">timeout</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than -1.","source":"The <code>timeout</code> parameter is less than -1."}],"pos":[50674,50726],"yaml":true},{"content":"Gets a value that indicates whether data is available on the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> to be read.","nodes":[{"pos":[0,126],"content":"Gets a value that indicates whether data is available on the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> to be read.","source":"Gets a value that indicates whether data is available on the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> to be read."}],"pos":[51824,51951],"yaml":true},{"content":"Use the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property to determine if data is ready to be read. If <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> is `true`, a call to <xref:System.Net.Sockets.NetworkStream.Read%2A> returns immediately. If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> may throw a <xref:System.Net.Sockets.SocketException>.","nodes":[{"pos":[0,433],"content":"Use the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property to determine if data is ready to be read. If <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> is `true`, a call to <xref:System.Net.Sockets.NetworkStream.Read%2A> returns immediately. If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> may throw a <xref:System.Net.Sockets.SocketException>.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> property to determine if data is ready to be read.","pos":[0,115],"source":"Use the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property to determine if data is ready to be read."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, a call to <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> returns immediately.","pos":[116,265],"source":" If <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> is `true`, a call to <xref:System.Net.Sockets.NetworkStream.Read%2A> returns immediately."},{"content":"If the remote host shuts down or closes the connection, <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> may throw a <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.","pos":[266,433],"source":" If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> may throw a <xref:System.Net.Sockets.SocketException>."}]}],"pos":[51962,52396],"yaml":true,"extradata":"MT"},{"content":"`true` if data is available on the stream to be read; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if data is available on the stream to be read; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if data is available on the stream to be read; otherwise, `false`."}],"pos":[53111,53187],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed."}],"pos":[53367,53436],"yaml":true},{"content":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed.","nodes":[{"pos":[0,72],"content":"The underlying <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed."}],"pos":[53524,53597],"yaml":true},{"content":"Use the <xref href=\"System.Net.Sockets.SocketException.ErrorCode\"></xref> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","nodes":[{"pos":[0,238],"content":"Use the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.SocketException.ErrorCode\"&gt;&lt;/xref&gt;</ph> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","source":"Use the <xref href=\"System.Net.Sockets.SocketException.ErrorCode\"></xref> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error."}],"pos":[53711,53950],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,145],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> and optionally releases the managed resources."}],"pos":[55269,55415],"yaml":true},{"content":"This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method. `Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.NetworkStream> references. This method invokes the `Dispose` method of each referenced object.","nodes":[{"pos":[0,289],"content":"This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method. `Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,101],"source":"This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[102,205],"source":"`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[206,289],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[296,530],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.NetworkStream> references. This method invokes the `Dispose` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> references.","pos":[0,166],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.NetworkStream> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose`</ph> method of each referenced object.","pos":[167,234],"source":" This method invokes the `Dispose` method of each referenced object."}]}],"pos":[55426,55961],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[56116,56219],"yaml":true},{"content":"Handles the end of an asynchronous read.","nodes":[{"pos":[0,40],"content":"Handles the end of an asynchronous read.","nodes":[{"content":"Handles the end of an asynchronous read.","pos":[0,40]}]}],"pos":[57639,57680],"yaml":true},{"content":"The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.  \n  \n Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate. This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns. The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter.  \n  \n Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method. Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object. After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read.  \n  \n The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method blocks until data is available. The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method reads as much data as is available up to the number of bytes specified in the `size` parameter of the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method. If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes immediately and returns zero bytes.  \n  \n To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.  \n  \n> [!NOTE]\n>  If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","nodes":[{"pos":[0,179],"content":"The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;</ph> method completes the asynchronous read operation started in the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> method.","pos":[0,179],"source":"The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method."}]},{"pos":[186,653],"content":"Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate. This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns. The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter.","nodes":[{"content":"Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate. This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns. The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter.","pos":[0,467],"nodes":[{"content":"Before calling <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph>, you need to create a callback method that implements the <ph id=\"ph2\">&lt;xref:System.AsyncCallback&gt;</ph> delegate.","pos":[0,163],"source":"Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate."},{"content":"This callback method executes in a separate thread and is called by the system after <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> returns.","pos":[164,310],"source":" This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns."},{"content":"The callback method must accept the <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> returned from the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> method as a parameter.","pos":[311,467],"source":" The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter."}]}]},{"pos":[660,1177],"content":"Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method. Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object. After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read.","nodes":[{"content":"Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method. Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object. After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read.","pos":[0,517],"nodes":[{"content":"Within the callback method, call the <ph id=\"ph1\">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.IAsyncResult&gt;</ph> to obtain the state object passed to the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> method.","pos":[0,222],"source":"Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method."},{"content":"Extract the receiving <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> from this state object.","pos":[223,308],"source":" Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object."},{"content":"After obtaining the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, call the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;</ph> method to successfully complete the read operation and return the number of bytes read.","pos":[309,517],"source":" After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read."}]}]},{"pos":[1184,1730],"content":"The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method blocks until data is available. The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method reads as much data as is available up to the number of bytes specified in the `size` parameter of the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method. If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes immediately and returns zero bytes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;</ph> method blocks until data is available.","pos":[0,93],"source":"The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method blocks until data is available."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;</ph> method reads as much data as is available up to the number of bytes specified in the <ph id=\"ph2\">`size`</ph> parameter of the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> method.","pos":[94,318],"source":" The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method reads as much data as is available up to the number of bytes specified in the `size` parameter of the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method."},{"content":"If the remote host shuts down the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.Socket&gt;</ph> connection and all available data has been received, the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.EndRead%2A&gt;</ph> method completes immediately and returns zero bytes.","pos":[319,546],"source":" If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes immediately and returns zero bytes."}]},{"pos":[1737,1923],"content":"To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.","nodes":[{"content":"To obtain the received data, call the <ph id=\"ph1\">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.IAsyncResult&gt;</ph>, and extract the buffer contained in the resulting state object.","pos":[0,186],"source":"To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object."}]},{"pos":[1931,2363],"content":"[!NOTE]\n If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","leadings":["","> "],"nodes":[{"content":" If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","pos":[8,430],"nodes":[{"content":"If you receive an <ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>, check the <ph id=\"ph2\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property to determine if it was caused by a <ph id=\"ph3\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.","pos":[1,187],"source":" If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>."},{"content":"If so, use the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;</ph> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","pos":[188,422],"source":" If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error."}]}]}],"pos":[57691,60068],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that represents an asynchronous call.","nodes":[{"pos":[0,81],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that represents an asynchronous call.","source":"An <xref href=\"System.IAsyncResult\"></xref> that represents an asynchronous call."}],"pos":[61045,61127],"yaml":true},{"content":"The number of bytes read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,88],"content":"The number of bytes read from the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"The number of bytes read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[61183,61272],"yaml":true},{"content":"The <code>asyncResult</code> parameter is `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>asyncResult</code> parameter is `null`."}],"pos":[61434,61484],"yaml":true},{"content":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed.  \n  \n -or-  \n  \n An error occurred when accessing the socket.","nodes":[{"pos":[0,72],"content":"The underlying <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed."},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,134],"content":"An error occurred when accessing the socket.","nodes":[{"content":"An error occurred when accessing the socket.","pos":[0,44]}]}],"pos":[61572,61715],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed."}],"pos":[61821,61890],"yaml":true},{"content":"Handles the end of an asynchronous write.","nodes":[{"pos":[0,41],"content":"Handles the end of an asynchronous write.","nodes":[{"content":"Handles the end of an asynchronous write.","pos":[0,41]}]}],"pos":[63061,63103],"yaml":true},{"content":"<xref:System.Net.Sockets.NetworkStream.EndWrite%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.  \n  \n Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate. This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns. The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter.  \n  \n Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the `IAsyncResult` parameter to obtain the <xref:System.Net.Sockets.NetworkStream>. After obtaining the <xref:System.Net.Sockets.NetworkStream>, you can call the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method to successfully complete the send operation and return the number of bytes sent.  \n  \n The <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method blocks until the requested number of bytes are sent.  \n  \n> [!NOTE]\n>  If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","nodes":[{"pos":[0,159],"content":"<xref:System.Net.Sockets.NetworkStream.EndWrite%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt;</ph> completes the asynchronous send operation started in <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph>.","pos":[0,159],"source":"<xref:System.Net.Sockets.NetworkStream.EndWrite%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>."}]},{"pos":[166,636],"content":"Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate. This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns. The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter.","nodes":[{"content":"Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate. This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns. The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter.","pos":[0,470],"nodes":[{"content":"Before calling <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph>, you need to create a callback method that implements the <ph id=\"ph2\">&lt;xref:System.AsyncCallback&gt;</ph> delegate.","pos":[0,164],"source":"Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate."},{"content":"This callback method executes in a separate thread and is called by the system after <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph> returns.","pos":[165,312],"source":" This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns."},{"content":"The callback method must accept the <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> returned from the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph> method as a parameter.","pos":[313,470],"source":" The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter."}]}]},{"pos":[643,1034],"content":"Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the `IAsyncResult` parameter to obtain the <xref:System.Net.Sockets.NetworkStream>. After obtaining the <xref:System.Net.Sockets.NetworkStream>, you can call the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method to successfully complete the send operation and return the number of bytes sent.","nodes":[{"content":"Within the callback method, call the <ph id=\"ph1\">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id=\"ph2\">`IAsyncResult`</ph> parameter to obtain the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.","pos":[0,173],"source":"Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the `IAsyncResult` parameter to obtain the <xref:System.Net.Sockets.NetworkStream>."},{"content":"After obtaining the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, you can call the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt;</ph> method to successfully complete the send operation and return the number of bytes sent.","pos":[174,391],"source":" After obtaining the <xref:System.Net.Sockets.NetworkStream>, you can call the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method to successfully complete the send operation and return the number of bytes sent."}]},{"pos":[1041,1156],"content":"The <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method blocks until the requested number of bytes are sent.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.EndWrite%2A&gt;</ph> method blocks until the requested number of bytes are sent.","pos":[0,115],"source":"The <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method blocks until the requested number of bytes are sent."}]},{"pos":[1164,1596],"content":"[!NOTE]\n If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","leadings":["","> "],"nodes":[{"content":" If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","pos":[8,430],"nodes":[{"content":"If you receive an <ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>, check the <ph id=\"ph2\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property to determine if it was caused by a <ph id=\"ph3\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.","pos":[1,187],"source":" If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>."},{"content":"If so, use the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;</ph> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","pos":[188,422],"source":" If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error."}]}]}],"pos":[63114,64722],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous call.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that represents the asynchronous call.","source":"The <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous call."}],"pos":[65707,65791],"yaml":true},{"content":"The <code>asyncResult</code> parameter is `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>asyncResult</code> parameter is `null`."}],"pos":[65962,66012],"yaml":true},{"content":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed.  \n  \n -or-  \n  \n An error occurred while writing to the network.  \n  \n -or-  \n  \n An error occurred when accessing the socket.","nodes":[{"pos":[0,72],"content":"The underlying <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed."},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,137],"content":"An error occurred while writing to the network.","nodes":[{"content":"An error occurred while writing to the network.","pos":[0,47]}]},{"pos":[144,148],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[155,199],"content":"An error occurred when accessing the socket.","nodes":[{"content":"An error occurred when accessing the socket.","pos":[0,44]}]}],"pos":[66100,66312],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed."}],"pos":[66418,66487],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,89],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[67559,67649],"yaml":true},{"content":"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>. Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> method.  \n  \n For more information about using the Finalize method, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).","nodes":[{"pos":[0,380],"content":"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>. Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> method.","nodes":[{"content":"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>. Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> method.","pos":[0,380],"nodes":[{"content":"This method overrides <ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;</ph>.","pos":[0,80],"source":"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>."},{"content":"Application code should not call this method; an object's <ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id=\"ph2\">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=fullName&gt;</ph> method.","pos":[81,380],"source":" Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> method."}]}]},{"pos":[387,742],"content":"For more information about using the Finalize method, see <bpt id=\"p1\">[</bpt>Finalize Methods and Destructors<ept id=\"p1\">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id=\"p2\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p2\">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id=\"p3\">[</bpt>Overriding the Finalize Method<ept id=\"p3\">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.","source":"For more information about using the Finalize method, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."}],"pos":[67660,68407],"yaml":true,"extradata":"MT"},{"content":"Flushes data from the stream. This method is reserved for future use.","nodes":[{"pos":[0,69],"content":"Flushes data from the stream. This method is reserved for future use.","nodes":[{"content":"Flushes data from the stream. This method is reserved for future use.","pos":[0,69],"nodes":[{"content":"Flushes data from the stream.","pos":[0,29]},{"content":"This method is reserved for future use.","pos":[30,69]}]}]}],"pos":[69778,69848],"yaml":true},{"content":"The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=fullName> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no affect on network streams. Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception.","nodes":[{"pos":[0,348],"content":"The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=fullName> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no affect on network streams. Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception.","nodes":[{"content":"The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=fullName> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no affect on network streams. Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception.","pos":[0,348],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Flush%2A&gt;</ph> method implements the <ph id=\"ph2\">&lt;xref:System.IO.Stream.Flush%2A?displayProperty=fullName&gt;</ph> method; however, because <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is not buffered, it has no affect on network streams.","pos":[0,251],"source":"The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=fullName> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no affect on network streams."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Flush%2A&gt;</ph> method does not throw an exception.","pos":[252,348],"source":" Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception."}]}]}],"pos":[69859,70208],"yaml":true,"extradata":"MT"},{"content":"Flushes data from the stream as an asynchronous operation.","nodes":[{"pos":[0,58],"content":"Flushes data from the stream as an asynchronous operation.","nodes":[{"content":"Flushes data from the stream as an asynchronous operation.","pos":[0,58]}]}],"pos":[71777,71836],"yaml":true},{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance.","nodes":[{"pos":[0,201],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance.","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance.","pos":[0,201],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after data has been flushed from the stream for the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> instance.","pos":[31,201],"source":" The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance."}]}]}],"pos":[71847,72049],"yaml":true,"extradata":"MT"},{"content":"A cancellation token used to propagate notification that this  operation should be canceled.","nodes":[{"pos":[0,92],"content":"A cancellation token used to propagate notification that this  operation should be canceled.","nodes":[{"content":"A cancellation token used to propagate notification that this  operation should be canceled.","pos":[0,92]}]}],"pos":[72293,72386],"yaml":true},{"content":"Returns <xref href=\"System.Threading.Tasks.Task\"></xref>.  \n  \n The task object representing the asynchronous operation.","nodes":[{"pos":[0,57],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Threading.Tasks.Task\"></xref>."},{"pos":[64,120],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[72457,72584],"yaml":true},{"content":"Gets the length of the data available on the stream. This property is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,164],"content":"Gets the length of the data available on the stream. This property is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Gets the length of the data available on the stream.","pos":[0,52]},{"content":"This property is not currently supported and always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[53,164],"source":" This property is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[73898,74063],"yaml":true},{"content":"The length of the data available on the stream.","nodes":[{"pos":[0,47],"content":"The length of the data available on the stream.","nodes":[{"content":"The length of the data available on the stream.","pos":[0,47]}]}],"pos":[74179,74227],"yaml":true},{"content":"Any use of this property.","nodes":[{"pos":[0,25],"content":"Any use of this property.","nodes":[{"content":"Any use of this property.","pos":[0,25]}]}],"pos":[74396,74422],"yaml":true},{"content":"Gets or sets the current position in the stream. This property is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,160],"content":"Gets or sets the current position in the stream. This property is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Gets or sets the current position in the stream.","pos":[0,48]},{"content":"This property is not currently supported and always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[49,160],"source":" This property is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[75674,75835],"yaml":true},{"content":"The current position in the stream.","nodes":[{"pos":[0,35],"content":"The current position in the stream.","nodes":[{"content":"The current position in the stream.","pos":[0,35]}]}],"pos":[75958,75994],"yaml":true},{"content":"Any use of this property.","nodes":[{"pos":[0,25],"content":"Any use of this property.","nodes":[{"content":"Any use of this property.","pos":[0,25]}]}],"pos":[76165,76191],"yaml":true},{"content":"Reads data from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,74],"content":"Reads data from the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"Reads data from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[77606,77681],"yaml":true},{"content":"This method reads data into the `buffer` parameter and returns the number of bytes successfully read. If the socket is closed, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method returns 0. The <xref:System.Net.Sockets.NetworkStream.Read%2A> operation reads as much data as is available, up to the number of bytes specified by the `size` parameter. If the remote host shuts down the connection, and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method completes immediately and return zero bytes.  \n  \n> [!NOTE]\n>  Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property. If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.IO.IOException>.  \n  \n> [!NOTE]\n>  If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","nodes":[{"pos":[0,547],"content":"This method reads data into the `buffer` parameter and returns the number of bytes successfully read. If the socket is closed, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method returns 0. The <xref:System.Net.Sockets.NetworkStream.Read%2A> operation reads as much data as is available, up to the number of bytes specified by the `size` parameter. If the remote host shuts down the connection, and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method completes immediately and return zero bytes.","nodes":[{"content":"This method reads data into the <ph id=\"ph1\">`buffer`</ph> parameter and returns the number of bytes successfully read.","pos":[0,101],"source":"This method reads data into the `buffer` parameter and returns the number of bytes successfully read."},{"content":"If the socket is closed, the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method returns 0.","pos":[102,196],"source":" If the socket is closed, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method returns 0."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> operation reads as much data as is available, up to the number of bytes specified by the <ph id=\"ph2\">`size`</ph> parameter.","pos":[197,355],"source":" The <xref:System.Net.Sockets.NetworkStream.Read%2A> operation reads as much data as is available, up to the number of bytes specified by the `size` parameter."},{"content":"If the remote host shuts down the connection, and all available data has been received, the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method completes immediately and return zero bytes.","pos":[356,547],"source":" If the remote host shuts down the connection, and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method completes immediately and return zero bytes."}]},{"pos":[555,851],"content":"[!NOTE]\n Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property. If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.IO.IOException>.","leadings":["","> "],"nodes":[{"content":" Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property. If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.IO.IOException>.","pos":[8,294],"nodes":[{"content":"Check to see if the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is readable by calling the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;</ph> property.","pos":[1,148],"source":" Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property."},{"content":"If you attempt to read from a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that is not readable, you will get an <ph id=\"ph2\">&lt;xref:System.IO.IOException&gt;</ph>.","pos":[149,286],"source":" If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.IO.IOException>."}]}]},{"pos":[859,1291],"content":"[!NOTE]\n If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","leadings":["","> "],"nodes":[{"content":" If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","pos":[8,430],"nodes":[{"content":"If you receive an <ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>, check the <ph id=\"ph2\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property to determine if it was caused by a <ph id=\"ph3\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.","pos":[1,187],"source":" If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>."},{"content":"If so, use the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A&gt;</ph> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","pos":[188,422],"source":" If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error."}]}]}],"pos":[77692,78992],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Byte\"></xref> that is the location in memory to store data read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,163],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that is the location in memory to store data read from the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"An array of type <xref href=\"System.Byte\"></xref> that is the location in memory to store data read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[79852,80016],"yaml":true},{"content":"The location in <code>buffer</code> to begin storing the data to.","nodes":[{"pos":[0,65],"content":"The location in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> to begin storing the data to.","source":"The location in <code>buffer</code> to begin storing the data to."}],"pos":[80077,80143],"yaml":true},{"content":"The number of bytes to read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,91],"content":"The number of bytes to read from the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"The number of bytes to read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[80202,80294],"yaml":true},{"content":"The number of bytes read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>, or 0 if the socket is closed.","nodes":[{"pos":[0,118],"content":"The number of bytes read from the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>, or 0 if the socket is closed.","source":"The number of bytes read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>, or 0 if the socket is closed."}],"pos":[80350,80469],"yaml":true},{"content":"The <code>buffer</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>buffer</code> parameter is `null`."}],"pos":[80636,80681],"yaml":true},{"content":"The <code>offset</code> parameter is less than 0.  \n  \n -or-  \n  \n The <code>offset</code> parameter is greater than the length of <code>buffer</code>.  \n  \n -or-  \n  \n The <code>size</code> parameter is less than 0.  \n  \n -or-  \n  \n The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.  \n  \n -or-  \n  \n An error occurred when accessing the socket.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than 0.","source":"The <code>offset</code> parameter is less than 0."},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,151],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The <code>offset</code> parameter is greater than the length of <code>buffer</code>."},{"pos":[158,162],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[169,216],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">size</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than 0.","source":"The <code>size</code> parameter is less than 0."},{"pos":[223,227],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[234,369],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">size</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p2\">&lt;/code&gt;</ept> minus the value of the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">offset</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter.","source":"The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter."},{"pos":[376,380],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[387,431],"content":"An error occurred when accessing the socket.","nodes":[{"content":"An error occurred when accessing the socket.","pos":[0,44]}]}],"pos":[80795,81245],"yaml":true},{"content":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed.","nodes":[{"pos":[0,72],"content":"The underlying <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed."}],"pos":[81333,81406],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.  \n  \n -or-  \n  \n There is a failure reading from the network.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed."},{"pos":[75,79],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[86,130],"content":"There is a failure reading from the network.","nodes":[{"content":"There is a failure reading from the network.","pos":[0,44]}]}],"pos":[81512,81651],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> can be read.","nodes":[{"pos":[0,114],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> can be read.","source":"Gets or sets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> can be read."}],"pos":[82903,83018],"yaml":true},{"content":"You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property. If <xref:System.Net.Sockets.NetworkStream.Readable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is readable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.  \n  \n The <xref:System.Net.Sockets.NetworkStream.Readable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.","nodes":[{"pos":[0,507],"content":"You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property. If <xref:System.Net.Sockets.NetworkStream.Readable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is readable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.","nodes":[{"content":"You must derive from the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class to use the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.Readable%2A&gt;</ph> property.","pos":[0,143],"source":"You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Readable%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> allows calls to the <ph id=\"ph4\">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method.","pos":[144,325],"source":" If <xref:System.Net.Sockets.NetworkStream.Readable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method."},{"content":"You can also determine whether a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is readable by checking the publicly accessible <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.CanRead%2A&gt;</ph> property.","pos":[326,507],"source":" You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is readable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property."}]},{"pos":[514,650],"content":"The <xref:System.Net.Sockets.NetworkStream.Readable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Readable%2A&gt;</ph> property is set when the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is initialized.","pos":[0,136],"source":"The <xref:System.Net.Sockets.NetworkStream.Readable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized."}]}],"pos":[83029,83684],"yaml":true,"extradata":"MT"},{"content":"`true` to indicate that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> can be read; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,143],"content":"`true` to indicate that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> can be read; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to indicate that the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> can be read; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,114],"source":"`true` to indicate that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> can be read; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[115,143],"source":" The default value is `true`."}]}],"pos":[84470,84616],"yaml":true},{"content":"Gets or sets the amount of time that a read operation blocks waiting for data.","nodes":[{"pos":[0,78],"content":"Gets or sets the amount of time that a read operation blocks waiting for data.","nodes":[{"content":"Gets or sets the amount of time that a read operation blocks waiting for data.","pos":[0,78]}]}],"pos":[87472,87551],"yaml":true},{"content":"If the read operation does not complete within the time specified by this property, the read operation throws an <xref:System.IO.IOException>.  \n  \n> [!NOTE]\n>  This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.","nodes":[{"pos":[0,142],"content":"If the read operation does not complete within the time specified by this property, the read operation throws an <xref:System.IO.IOException>.","nodes":[{"content":"If the read operation does not complete within the time specified by this property, the read operation throws an <ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>.","pos":[0,142],"source":"If the read operation does not complete within the time specified by this property, the read operation throws an <xref:System.IO.IOException>."}]},{"pos":[150,421],"content":"[!NOTE]\n This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.","leadings":["","> "],"nodes":[{"content":" This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.","pos":[8,269],"nodes":[{"content":"This property affects only synchronous reads performed by calling the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method.","pos":[1,126],"source":" This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method."},{"content":"This property does not affect asynchronous reads performed by calling the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginRead%2A&gt;</ph> method.","pos":[127,261],"source":" This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method."}]}]}],"pos":[87562,87989],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int32\"></xref> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails. The default value, <xref href=\"System.Threading.Timeout.Infinite\"></xref>, specifies that the read operation does not time out.","nodes":[{"pos":[0,263],"content":"A <xref href=\"System.Int32\"></xref> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails. The default value, <xref href=\"System.Threading.Timeout.Infinite\"></xref>, specifies that the read operation does not time out.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails.","pos":[0,135],"source":"A <xref href=\"System.Int32\"></xref> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails."},{"content":"The default value, <ph id=\"ph1\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph>, specifies that the read operation does not time out.","pos":[136,263],"source":" The default value, <xref href=\"System.Threading.Timeout.Infinite\"></xref>, specifies that the read operation does not time out."}]}],"pos":[88348,88612],"yaml":true},{"content":"The value specified is less than or equal to zero and is not <xref href=\"System.Threading.Timeout.Infinite\"></xref>.","nodes":[{"pos":[0,116],"content":"The value specified is less than or equal to zero and is not <ph id=\"ph1\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph>.","source":"The value specified is less than or equal to zero and is not <xref href=\"System.Threading.Timeout.Infinite\"></xref>."}],"pos":[88798,88915],"yaml":true},{"content":"Sets the current position of the stream to the given value. This method is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,169],"content":"Sets the current position of the stream to the given value. This method is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Sets the current position of the stream to the given value.","pos":[0,59]},{"content":"This method is not currently supported and always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[60,169],"source":" This method is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[90303,90473],"yaml":true},{"content":"This parameter is not used.","nodes":[{"pos":[0,27],"content":"This parameter is not used.","nodes":[{"content":"This parameter is not used.","pos":[0,27]}]}],"pos":[90643,90671],"yaml":true},{"content":"This parameter is not used.","nodes":[{"pos":[0,27],"content":"This parameter is not used.","nodes":[{"content":"This parameter is not used.","pos":[0,27]}]}],"pos":[90740,90768],"yaml":true},{"content":"The position in the stream.","nodes":[{"pos":[0,27],"content":"The position in the stream.","nodes":[{"content":"The position in the stream.","pos":[0,27]}]}],"pos":[90824,90852],"yaml":true},{"content":"Any use of this property.","nodes":[{"pos":[0,25],"content":"Any use of this property.","nodes":[{"content":"Any use of this property.","pos":[0,25]}]}],"pos":[91019,91045],"yaml":true},{"content":"Sets the length of the stream. This method always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,109],"content":"Sets the length of the stream. This method always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Sets the length of the stream.","pos":[0,30]},{"content":"This method always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[31,109],"source":" This method always throws a <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[92364,92474],"yaml":true},{"content":"This parameter is not used.","nodes":[{"pos":[0,27],"content":"This parameter is not used.","nodes":[{"content":"This parameter is not used.","pos":[0,27]}]}],"pos":[92618,92646],"yaml":true},{"content":"Any use of this property.","nodes":[{"pos":[0,25],"content":"Any use of this property.","nodes":[{"content":"Any use of this property.","pos":[0,25]}]}],"pos":[92818,92844],"yaml":true},{"content":"Gets the underlying <xref href=\"System.Net.Sockets.Socket\"></xref>.","nodes":[{"pos":[0,67],"content":"Gets the underlying <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the underlying <xref href=\"System.Net.Sockets.Socket\"></xref>."}],"pos":[94084,94152],"yaml":true},{"content":"Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>. Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides.  \n  \n> [!NOTE]\n>  This property is accessible only through this class or a derived class.","nodes":[{"pos":[0,358],"content":"Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>. Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides.","nodes":[{"content":"Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>. Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides.","pos":[0,358],"nodes":[{"content":"Classes deriving from <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> can use this property to get the underlying <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.","pos":[0,139],"source":"Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>."},{"content":"Use the underlying <ph id=\"ph1\">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned from the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.Socket%2A&gt;</ph> property if you require access beyond that which <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> provides.","pos":[140,358],"source":" Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides."}]}]},{"pos":[366,448],"content":"[!NOTE]\n This property is accessible only through this class or a derived class.","leadings":["","> "],"nodes":[{"content":"This property is accessible only through this class or a derived class.","pos":[9,80]}]}],"pos":[94163,94617],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.Sockets.Socket\"></xref> that represents the underlying network connection.","nodes":[{"pos":[0,99],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> that represents the underlying network connection.","source":"A <xref href=\"System.Net.Sockets.Socket\"></xref> that represents the underlying network connection."}],"pos":[95339,95439],"yaml":true},{"content":"Writes data to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,73],"content":"Writes data to the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"Writes data to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[96746,96820],"yaml":true},{"content":"The <xref:System.Net.Sockets.NetworkStream.Write%2A> method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network. The <xref:System.Net.Sockets.NetworkStream.Write%2A> method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown. If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=fullName> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  \n  \n> [!NOTE]\n>  Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by accessing the <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property. If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.IO.IOException>. If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.","nodes":[{"pos":[0,643],"content":"The <xref:System.Net.Sockets.NetworkStream.Write%2A> method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network. The <xref:System.Net.Sockets.NetworkStream.Write%2A> method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown. If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=fullName> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method starts at the specified <ph id=\"ph2\">`offset`</ph> and sends <ph id=\"ph3\">`size`</ph> bytes from the contents of <ph id=\"ph4\">`buffer`</ph> to the network.","pos":[0,161],"source":"The <xref:System.Net.Sockets.NetworkStream.Write%2A> method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method blocks until the requested number of bytes is sent or a <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[162,330],"source":" The <xref:System.Net.Sockets.NetworkStream.Write%2A> method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"If you receive a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=fullName&gt;</ph> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.","pos":[331,643],"source":" If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=fullName> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error."}]},{"pos":[651,1136],"content":"[!NOTE]\n Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by accessing the <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property. If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.IO.IOException>. If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.","leadings":["","> "],"nodes":[{"content":" Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by accessing the <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property. If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.IO.IOException>. If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.","pos":[8,483],"nodes":[{"content":"Check to see if the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is writable by accessing the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;</ph> property.","pos":[1,151],"source":" Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by accessing the <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property."},{"content":"If you attempt to write to a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that is not writable, you will get an <ph id=\"ph2\">&lt;xref:System.IO.IOException&gt;</ph>.","pos":[152,288],"source":" If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.IO.IOException>."},{"content":"If you receive an <ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>, check the <ph id=\"ph2\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property to determine if it was caused by a <ph id=\"ph3\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.","pos":[289,475],"source":" If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>."}]}]}],"pos":[96831,97973],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Byte\"></xref> that contains the data to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,143],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the data to write to the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"An array of type <xref href=\"System.Byte\"></xref> that contains the data to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[98823,98967],"yaml":true},{"content":"The location in <code>buffer</code> from which to start writing data.","nodes":[{"pos":[0,69],"content":"The location in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> from which to start writing data.","source":"The location in <code>buffer</code> from which to start writing data."}],"pos":[99028,99098],"yaml":true},{"content":"The number of bytes to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,90],"content":"The number of bytes to write to the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"The number of bytes to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[99157,99248],"yaml":true},{"content":"The <code>buffer</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>buffer</code> parameter is `null`."}],"pos":[99416,99461],"yaml":true},{"content":"The <code>offset</code> parameter is less than 0.  \n  \n -or-  \n  \n The <code>offset</code> parameter is greater than the length of <code>buffer</code>.  \n  \n -or-  \n  \n The <code>size</code> parameter is less than 0.  \n  \n -or-  \n  \n The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than 0.","source":"The <code>offset</code> parameter is less than 0."},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,151],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The <code>offset</code> parameter is greater than the length of <code>buffer</code>."},{"pos":[158,162],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[169,216],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">size</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than 0.","source":"The <code>size</code> parameter is less than 0."},{"pos":[223,227],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[234,369],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">size</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than the length of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p2\">&lt;/code&gt;</ept> minus the value of the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">offset</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter.","source":"The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter."}],"pos":[99575,99959],"yaml":true},{"content":"There was a failure while writing to the network.  \n  \n -or-  \n  \n An error occurred when accessing the socket.","nodes":[{"pos":[0,49],"content":"There was a failure while writing to the network.","nodes":[{"content":"There was a failure while writing to the network.","pos":[0,49]}]},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,111],"content":"An error occurred when accessing the socket.","nodes":[{"content":"An error occurred when accessing the socket.","pos":[0,44]}]}],"pos":[100047,100165],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.  \n  \n -or-  \n  \n There was a failure reading from the network.","nodes":[{"pos":[0,68],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed."},{"pos":[75,79],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[86,131],"content":"There was a failure reading from the network.","nodes":[{"content":"There was a failure reading from the network.","pos":[0,45]}]}],"pos":[100271,100411],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is writable.","nodes":[{"pos":[0,106],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph> is writable.","source":"Gets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is writable."}],"pos":[101669,101776],"yaml":true},{"content":"You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property. If <xref:System.Net.Sockets.NetworkStream.Writeable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is writable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.  \n  \n The <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.","nodes":[{"pos":[0,511],"content":"You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property. If <xref:System.Net.Sockets.NetworkStream.Writeable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is writable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.","nodes":[{"content":"You must derive from the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class to use the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.Writeable%2A&gt;</ph> property.","pos":[0,144],"source":"You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Writeable%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> allows calls to the <ph id=\"ph4\">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method.","pos":[145,328],"source":" If <xref:System.Net.Sockets.NetworkStream.Writeable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method."},{"content":"You can also determine whether a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is writable by checking the publicly accessible <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream.CanWrite%2A&gt;</ph> property.","pos":[329,511],"source":" You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is writable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property."}]},{"pos":[518,655],"content":"The <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Writeable%2A&gt;</ph> property is set when the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> is initialized.","pos":[0,137],"source":"The <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized."}]}],"pos":[101787,102447],"yaml":true,"extradata":"MT"},{"content":"`true` if data can be written to the stream; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,93],"content":"`true` if data can be written to the stream; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if data can be written to the stream; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,64],"source":"`true` if data can be written to the stream; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[65,93],"source":" The default value is `true`."}]}],"pos":[103235,103331],"yaml":true},{"content":"Gets or sets the amount of time that a write operation blocks waiting for data.","nodes":[{"pos":[0,79],"content":"Gets or sets the amount of time that a write operation blocks waiting for data.","nodes":[{"content":"Gets or sets the amount of time that a write operation blocks waiting for data.","pos":[0,79]}]}],"pos":[106183,106263],"yaml":true},{"content":"If the write operation does not complete within the time specified by this property, the write operation throws a <xref:System.IO.IOException>.  \n  \n> [!NOTE]\n>  This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.","nodes":[{"pos":[0,143],"content":"If the write operation does not complete within the time specified by this property, the write operation throws a <xref:System.IO.IOException>.","nodes":[{"content":"If the write operation does not complete within the time specified by this property, the write operation throws a <ph id=\"ph1\">&lt;xref:System.IO.IOException&gt;</ph>.","pos":[0,143],"source":"If the write operation does not complete within the time specified by this property, the write operation throws a <xref:System.IO.IOException>."}]},{"pos":[151,436],"content":"[!NOTE]\n This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.","leadings":["","> "],"nodes":[{"content":" This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.","pos":[8,283],"nodes":[{"content":"This property affects only synchronous write operations performed by calling the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method.","pos":[1,138],"source":" This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method."},{"content":"This property does not affect asynchronous writes performed by calling the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream.BeginWrite%2A&gt;</ph> method.","pos":[139,275],"source":" This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method."}]}]}],"pos":[106274,106716],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int32\"></xref> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails. The default value, <xref href=\"System.Threading.Timeout.Infinite\"></xref>, specifies that the write operation does not time out.","nodes":[{"pos":[0,265],"content":"A <xref href=\"System.Int32\"></xref> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails. The default value, <xref href=\"System.Threading.Timeout.Infinite\"></xref>, specifies that the write operation does not time out.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails.","pos":[0,136],"source":"A <xref href=\"System.Int32\"></xref> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails."},{"content":"The default value, <ph id=\"ph1\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph>, specifies that the write operation does not time out.","pos":[137,265],"source":" The default value, <xref href=\"System.Threading.Timeout.Infinite\"></xref>, specifies that the write operation does not time out."}]}],"pos":[107197,107463],"yaml":true},{"content":"The value specified is less than or equal to zero and is not <xref href=\"System.Threading.Timeout.Infinite\"></xref>.","nodes":[{"pos":[0,116],"content":"The value specified is less than or equal to zero and is not <ph id=\"ph1\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph>.","source":"The value specified is less than or equal to zero and is not <xref href=\"System.Threading.Timeout.Infinite\"></xref>."}],"pos":[107650,107767],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Sockets.NetworkStream\n  commentId: T:System.Net.Sockets.NetworkStream\n  id: NetworkStream\n  children:\n  - System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)\n  - System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)\n  - System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)\n  - System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)\n  - System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Net.Sockets.NetworkStream.CanRead\n  - System.Net.Sockets.NetworkStream.CanSeek\n  - System.Net.Sockets.NetworkStream.CanTimeout\n  - System.Net.Sockets.NetworkStream.CanWrite\n  - System.Net.Sockets.NetworkStream.Close(System.Int32)\n  - System.Net.Sockets.NetworkStream.DataAvailable\n  - System.Net.Sockets.NetworkStream.Dispose(System.Boolean)\n  - System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)\n  - System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)\n  - System.Net.Sockets.NetworkStream.Finalize\n  - System.Net.Sockets.NetworkStream.Flush\n  - System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)\n  - System.Net.Sockets.NetworkStream.Length\n  - System.Net.Sockets.NetworkStream.Position\n  - System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.Net.Sockets.NetworkStream.Readable\n  - System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.Net.Sockets.NetworkStream.ReadTimeout\n  - System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.Net.Sockets.NetworkStream.SetLength(System.Int64)\n  - System.Net.Sockets.NetworkStream.Socket\n  - System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.Net.Sockets.NetworkStream.Writeable\n  - System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.Net.Sockets.NetworkStream.WriteTimeout\n  langs:\n  - csharp\n  name: NetworkStream\n  nameWithType: NetworkStream\n  fullName: System.Net.Sockets.NetworkStream\n  type: Class\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Provides the underlying stream of data for network access.\n  remarks: \"The <xref:System.Net.Sockets.NetworkStream> class provides methods for sending and receiving data over <xref:System.Net.Sockets.SocketType.Stream> sockets in blocking mode. For more information about blocking versus nonblocking <xref:System.Net.Sockets.Socket>s, see [Using an Asynchronous Client Socket](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md). You can use the <xref:System.Net.Sockets.NetworkStream> class for both synchronous and asynchronous data transfer. For more information about synchronous and asynchronous communication, see [Sockets](~/docs/framework/network-programming/sockets.md).  \\n  \\n To create a <xref:System.Net.Sockets.NetworkStream>, you must provide a connected <xref:System.Net.Sockets.Socket>. You can also specify what <xref:System.IO.FileAccess> permission the <xref:System.Net.Sockets.NetworkStream> has over the provided <xref:System.Net.Sockets.Socket>. By default, closing the <xref:System.Net.Sockets.NetworkStream> does not close the provided <xref:System.Net.Sockets.Socket>. If you want the <xref:System.Net.Sockets.NetworkStream> to have permission to close the provided <xref:System.Net.Sockets.Socket>, you must specify `true` for the value of the `ownsSocket` parameter.  \\n  \\n Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O. If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication.  \\n  \\n The <xref:System.Net.Sockets.NetworkStream> does not support random access to the network data stream. The value of the <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> property, which indicates whether the stream supports seeking, is always `false`; reading the <xref:System.Net.Sockets.NetworkStream.Position%2A> property, reading the <xref:System.Net.Sockets.NetworkStream.Length%2A> property, or calling the <xref:System.Net.Sockets.NetworkStream.Seek%2A> method will throw a <xref:System.NotSupportedException>.  \\n  \\n Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.\"\n  example:\n  - \"The following code example demonstrates how to create a <xref:System.Net.Sockets.NetworkStream> from a connected <xref:System.Net.Sockets.SocketType.Stream><xref:System.Net.Sockets.Socket> and perform basic synchronous blocking I/O.  \\n  \\n [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]\\n [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]\\n [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]\"\n  syntax:\n    content: 'public class NetworkStream : System.IO.Stream'\n  inheritance:\n  - System.Object\n  - System.IO.Stream\n  implements: []\n  inheritedMembers:\n  - System.IO.Stream.Close\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.Null\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)\n  commentId: M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)\n  id: '#ctor(System.Net.Sockets.Socket)'\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: NetworkStream(Socket)\n  nameWithType: NetworkStream.NetworkStream(Socket)\n  fullName: NetworkStream.NetworkStream(Socket)\n  type: Constructor\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Creates a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref>.\n  remarks: The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>. The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>.\n  example:\n  - \"The following code example illustrates how to create a <xref:System.Net.Sockets.NetworkStream> with a <xref:System.Net.Sockets.Socket>.  \\n  \\n [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]\\n [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]\\n [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]\"\n  syntax:\n    content: public NetworkStream (System.Net.Sockets.Socket socket);\n    parameters:\n    - id: socket\n      type: System.Net.Sockets.Socket\n      description: The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data.\n  overload: System.Net.Sockets.NetworkStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>socket</code> parameter is `null`.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The <code>socket</code> parameter is not connected.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Net.Sockets.Socket.SocketType\\\"></xref> property of the <code>socket</code> parameter is not <xref href=\\\"System.Net.Sockets.SocketType.Stream\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>socket</code> parameter is in a nonblocking state.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)\n  commentId: M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)\n  id: '#ctor(System.Net.Sockets.Socket,System.Boolean)'\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: NetworkStream(Socket, Boolean)\n  nameWithType: NetworkStream.NetworkStream(Socket, Boolean)\n  fullName: NetworkStream.NetworkStream(Socket, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Initializes a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref> with the specified <xref href=\"System.Net.Sockets.Socket\"></xref> ownership.\n  remarks: The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>. If the value of `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.\n  example:\n  - \"The following code example creates a <xref:System.Net.Sockets.NetworkStream> with ownership of the <xref:System.Net.Sockets.Socket>.  \\n  \\n [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]\\n [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]\\n [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]\"\n  syntax:\n    content: public NetworkStream (System.Net.Sockets.Socket socket, bool ownsSocket);\n    parameters:\n    - id: socket\n      type: System.Net.Sockets.Socket\n      description: The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data.\n    - id: ownsSocket\n      type: System.Boolean\n      description: Set to `true` to indicate that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will take ownership of the <xref href=\"System.Net.Sockets.Socket\"></xref>; otherwise, `false`.\n  overload: System.Net.Sockets.NetworkStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>socket</code> parameter is `null`.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The <code>socket</code> parameter is not connected.  \\n  \\n -or-  \\n  \\n the value of the <xref href=\\\"System.Net.Sockets.Socket.SocketType\\\"></xref> property of the <code>socket</code> parameter is not <xref href=\\\"System.Net.Sockets.SocketType.Stream\\\"></xref>.  \\n  \\n -or-  \\n  \\n the <code>socket</code> parameter is in a nonblocking state.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)\n  commentId: M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)\n  id: '#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)'\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: NetworkStream(Socket, FileAccess)\n  nameWithType: NetworkStream.NetworkStream(Socket, FileAccess)\n  fullName: NetworkStream.NetworkStream(Socket, FileAccess)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Creates a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref> with the specified access rights.\n  remarks: \"The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>. With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>.  \\n  \\n The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>. If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.\"\n  example:\n  - \"The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.  \\n  \\n [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]\\n [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]\\n [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]\"\n  syntax:\n    content: public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access);\n    parameters:\n    - id: socket\n      type: System.Net.Sockets.Socket\n      description: The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data.\n    - id: access\n      type: System.IO.FileAccess\n      description: A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values that specify the type of access given to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> over the provided <xref href=\"System.Net.Sockets.Socket\"></xref>.\n  overload: System.Net.Sockets.NetworkStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>socket</code> parameter is `null`.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The <code>socket</code> parameter is not connected.  \\n  \\n -or-  \\n  \\n the <xref href=\\\"System.Net.Sockets.Socket.SocketType\\\"></xref> property of the <code>socket</code> parameter is not <xref href=\\\"System.Net.Sockets.SocketType.Stream\\\"></xref>.  \\n  \\n -or-  \\n  \\n the <code>socket</code> parameter is in a nonblocking state.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)\n  commentId: M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)\n  id: '#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)'\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: NetworkStream(Socket, FileAccess, Boolean)\n  nameWithType: NetworkStream.NetworkStream(Socket, FileAccess, Boolean)\n  fullName: NetworkStream.NetworkStream(Socket, FileAccess, Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Creates a new instance of the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> class for the specified <xref href=\"System.Net.Sockets.Socket\"></xref> with the specified access rights and the specified <xref href=\"System.Net.Sockets.Socket\"></xref> ownership.\n  remarks: \"The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>. If the value of the `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.  \\n  \\n The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>. If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.\"\n  example:\n  - \"The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>. Ownership of the <xref:System.Net.Sockets.Socket> is given to this <xref:System.Net.Sockets.NetworkStream> by specifying `true` for the `ownsSocket` parameter.  \\n  \\n [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]\\n [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]\\n [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]\"\n  syntax:\n    content: public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket);\n    parameters:\n    - id: socket\n      type: System.Net.Sockets.Socket\n      description: The <xref href=\"System.Net.Sockets.Socket\"></xref> that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will use to send and receive data.\n    - id: access\n      type: System.IO.FileAccess\n      description: A bitwise combination of the <xref href=\"System.IO.FileAccess\"></xref> values that specifies the type of access given to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> over the provided <xref href=\"System.Net.Sockets.Socket\"></xref>.\n    - id: ownsSocket\n      type: System.Boolean\n      description: Set to `true` to indicate that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> will take ownership of the <xref href=\"System.Net.Sockets.Socket\"></xref>; otherwise, `false`.\n  overload: System.Net.Sockets.NetworkStream.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>socket</code> parameter is `null`.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The <code>socket</code> parameter is not connected.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Net.Sockets.Socket.SocketType\\\"></xref> property of the <code>socket</code> parameter is not <xref href=\\\"System.Net.Sockets.SocketType.Stream\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <code>socket</code> parameter is in a nonblocking state.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: NetworkStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: NetworkStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Begins an asynchronous read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n  remarks: \"The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers. Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread.  \\n  \\n You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method. At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>. Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information. Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method through the `state` parameter.  \\n  \\n Your callback method should call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method. When your application calls <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndRead%2A> until the provided <xref:System.Net.Sockets.NetworkStream> reads data or throws an exception. If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method. Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing. For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).  \\n  \\n The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method reads as much data as is available, up to the number of bytes specified by the `size` parameter.  \\n  \\n> [!NOTE]\\n>  If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  \\n  \\n Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.\"\n  example:\n  - \"The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> to read data asynchronously from the network stream. The `myReadCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.  \\n  \\n [!code-cpp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#3)]\\n [!code-csharp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#3)]\\n [!code-vb[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#3)]\"\n  syntax:\n    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int size, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: An array of type <xref href=\"System.Byte\"></xref> that is the location in memory to store data read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n    - id: offset\n      type: System.Int32\n      description: The location in <code>buffer</code> to begin storing the data.\n    - id: size\n      type: System.Int32\n      description: The number of bytes to read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that is executed when <xref href=\"System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> completes.\n    - id: state\n      type: System.Object\n      description: An object that contains any additional user-defined data.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous call.\n  overload: System.Net.Sockets.NetworkStream.BeginRead*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>buffer</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The <code>offset</code> parameter is less than 0.  \\n  \\n -or-  \\n  \\n The <code>offset</code> parameter is greater than the length of the <code>buffer</code> paramater.  \\n  \\n -or-  \\n  \\n The <code>size</code> is less than 0.  \\n  \\n -or-  \\n  \\n The <code>size</code> is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The underlying <xref href=\\\"System.Net.Sockets.Socket\\\"></xref> is closed.  \\n  \\n -or-  \\n  \\n There was a failure while reading from the network.  \\n  \\n -or-  \\n  \\n An error occurred when accessing the socket.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: NetworkStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: NetworkStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Begins an asynchronous write to a stream.\n  remarks: \"The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host. Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread.  \\n  \\n You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method. At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>. If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.NetworkStream> and the other required information. Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method through the `state` parameter.  \\n  \\n Your callback method should implement the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method. When your application calls <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> until the <xref:System.Net.Sockets.NetworkStream> sends the number of bytes requested or throws an exception. If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method. Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing. For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).  \\n  \\n> [!NOTE]\\n>  If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  \\n  \\n Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization. As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.\"\n  example:\n  - \"The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> to write data asynchronously to a network stream. The `myWriteCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.  \\n  \\n [!code-cpp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#2)]\\n [!code-csharp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#2)]\\n [!code-vb[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#2)]\"\n  syntax:\n    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int size, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: An array of type <xref href=\"System.Byte\"></xref> that contains the data to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n    - id: offset\n      type: System.Int32\n      description: The location in <code>buffer</code> to begin sending the data.\n    - id: size\n      type: System.Int32\n      description: The number of bytes to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that is executed when <xref href=\"System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> completes.\n    - id: state\n      type: System.Object\n      description: An object that contains any additional user-defined data.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous call.\n  overload: System.Net.Sockets.NetworkStream.BeginWrite*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>buffer</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The <code>offset</code> parameter is less than 0.  \\n  \\n -or-  \\n  \\n The <code>offset</code> parameter is greater than the length of <code>buffer</code>.  \\n  \\n -or-  \\n  \\n The <code>size</code> parameter is less than 0.  \\n  \\n -or-  \\n  \\n The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The underlying <xref href=\\\"System.Net.Sockets.Socket\\\"></xref> is closed.  \\n  \\n -or-  \\n  \\n There was a failure while writing to the network.  \\n  \\n -or-  \\n  \\n An error occurred when accessing the socket.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.CanRead\n  commentId: P:System.Net.Sockets.NetworkStream.CanRead\n  id: CanRead\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: NetworkStream.CanRead\n  fullName: NetworkStream.CanRead\n  type: Property\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Gets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> supports reading.\n  remarks: If <xref:System.Net.Sockets.NetworkStream.CanRead%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>. The <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.\n  example:\n  - \"The following code example checks <xref:System.Net.Sockets.NetworkStream.CanRead%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is readable. It then performs a read operation on the <xref:System.Net.Sockets.NetworkStream>.  \\n  \\n [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]\\n [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]\\n [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]\"\n  syntax:\n    content: public override bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if data can be read from the stream; otherwise, `false`. The default value is `true`.'\n  overload: System.Net.Sockets.NetworkStream.CanRead*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.CanSeek\n  commentId: P:System.Net.Sockets.NetworkStream.CanSeek\n  id: CanSeek\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: NetworkStream.CanSeek\n  fullName: NetworkStream.CanSeek\n  type: Property\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Gets a value that indicates whether the stream supports seeking. This property is not currently supported.This property always returns `false`.\n  syntax:\n    content: public override bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: '`false` in all cases to indicate that <xref href=\"System.Net.Sockets.NetworkStream\"></xref> cannot seek a specific location in the stream.'\n  overload: System.Net.Sockets.NetworkStream.CanSeek*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.CanTimeout\n  commentId: P:System.Net.Sockets.NetworkStream.CanTimeout\n  id: CanTimeout\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: CanTimeout\n  nameWithType: NetworkStream.CanTimeout\n  fullName: NetworkStream.CanTimeout\n  type: Property\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Indicates whether timeout properties are usable for <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n  remarks: This property is present because it is inherited from <xref:System.IO.Stream>.\n  syntax:\n    content: public override bool CanTimeout { get; }\n    return:\n      type: System.Boolean\n      description: '`true` in all cases.'\n  overload: System.Net.Sockets.NetworkStream.CanTimeout*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.CanWrite\n  commentId: P:System.Net.Sockets.NetworkStream.CanWrite\n  id: CanWrite\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: NetworkStream.CanWrite\n  fullName: NetworkStream.CanWrite\n  type: Property\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Gets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> supports writing.\n  remarks: If <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>. The <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.\n  example:\n  - \"The following code example checks <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is writable. It then performs a write operation on the <xref:System.Net.Sockets.NetworkStream>.  \\n  \\n [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]\\n [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]\\n [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]\"\n  syntax:\n    content: public override bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if data can be written to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>; otherwise, `false`. The default value is `true`.'\n  overload: System.Net.Sockets.NetworkStream.CanWrite*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Close(System.Int32)\n  commentId: M:System.Net.Sockets.NetworkStream.Close(System.Int32)\n  id: Close(System.Int32)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Close(Int32)\n  nameWithType: NetworkStream.Close(Int32)\n  fullName: NetworkStream.Close(Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Closes the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> after waiting the specified time to allow data to be sent.\n  remarks: \"The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>. If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.  \\n  \\n If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the <xref:System.Net.Sockets.NetworkStream.Close%2A> method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.\"\n  syntax:\n    content: public void Close (int timeout);\n    parameters:\n    - id: timeout\n      type: System.Int32\n      description: A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.\n  overload: System.Net.Sockets.NetworkStream.Close*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>timeout</code> parameter is less than -1.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.DataAvailable\n  commentId: P:System.Net.Sockets.NetworkStream.DataAvailable\n  id: DataAvailable\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: DataAvailable\n  nameWithType: NetworkStream.DataAvailable\n  fullName: NetworkStream.DataAvailable\n  type: Property\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Gets a value that indicates whether data is available on the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> to be read.\n  remarks: Use the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property to determine if data is ready to be read. If <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> is `true`, a call to <xref:System.Net.Sockets.NetworkStream.Read%2A> returns immediately. If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> may throw a <xref:System.Net.Sockets.SocketException>.\n  example:\n  - \"The following code example reads from the <xref:System.Net.Sockets.NetworkStream> as long as data is available.  \\n  \\n [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]\\n [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]\\n [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]\"\n  syntax:\n    content: public virtual bool DataAvailable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if data is available on the stream to be read; otherwise, `false`.'\n  overload: System.Net.Sockets.NetworkStream.DataAvailable*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: Use the <xref href=\"System.Net.Sockets.SocketException.ErrorCode\"></xref> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Dispose(System.Boolean)\n  commentId: M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: NetworkStream.Dispose(Boolean)\n  fullName: NetworkStream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method. `Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.NetworkStream> references. This method invokes the `Dispose` method of each referenced object.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Net.Sockets.NetworkStream.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)\n  commentId: M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)\n  id: EndRead(System.IAsyncResult)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: EndRead(IAsyncResult)\n  nameWithType: NetworkStream.EndRead(IAsyncResult)\n  fullName: NetworkStream.EndRead(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Handles the end of an asynchronous read.\n  remarks: \"The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.  \\n  \\n Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate. This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns. The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter.  \\n  \\n Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method. Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object. After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read.  \\n  \\n The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method blocks until data is available. The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method reads as much data as is available up to the number of bytes specified in the `size` parameter of the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method. If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes immediately and returns zero bytes.  \\n  \\n To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.  \\n  \\n> [!NOTE]\\n>  If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.\"\n  example:\n  - \"In the following code example, `myReadCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> as the callback method. <xref:System.Net.Sockets.NetworkStream.EndRead%2A> is implemented in `myReadCallback` to complete the asynchronous read call started by <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>.  \\n  \\n [!code-cpp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#5)]\\n [!code-csharp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#5)]\\n [!code-vb[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#5)]\"\n  syntax:\n    content: public override int EndRead (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that represents an asynchronous call.\n    return:\n      type: System.Int32\n      description: The number of bytes read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n  overload: System.Net.Sockets.NetworkStream.EndRead*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>asyncResult</code> parameter is `null`.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The underlying <xref href=\\\"System.Net.Sockets.Socket\\\"></xref> is closed.  \\n  \\n -or-  \\n  \\n An error occurred when accessing the socket.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)\n  commentId: M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)\n  id: EndWrite(System.IAsyncResult)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: EndWrite(IAsyncResult)\n  nameWithType: NetworkStream.EndWrite(IAsyncResult)\n  fullName: NetworkStream.EndWrite(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Handles the end of an asynchronous write.\n  remarks: \"<xref:System.Net.Sockets.NetworkStream.EndWrite%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.  \\n  \\n Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate. This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns. The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter.  \\n  \\n Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the `IAsyncResult` parameter to obtain the <xref:System.Net.Sockets.NetworkStream>. After obtaining the <xref:System.Net.Sockets.NetworkStream>, you can call the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method to successfully complete the send operation and return the number of bytes sent.  \\n  \\n The <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method blocks until the requested number of bytes are sent.  \\n  \\n> [!NOTE]\\n>  If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.\"\n  example:\n  - \"In the following code example, `myWriteCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> as the callback method. <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> is implemented in `myWriteCallback` to complete the asynchronous write call started by <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.  \\n  \\n [!code-cpp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#4)]\\n [!code-csharp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#4)]\\n [!code-vb[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#4)]\"\n  syntax:\n    content: public override void EndWrite (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that represents the asynchronous call.\n  overload: System.Net.Sockets.NetworkStream.EndWrite*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>asyncResult</code> parameter is `null`.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The underlying <xref href=\\\"System.Net.Sockets.Socket\\\"></xref> is closed.  \\n  \\n -or-  \\n  \\n An error occurred while writing to the network.  \\n  \\n -or-  \\n  \\n An error occurred when accessing the socket.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Finalize\n  commentId: M:System.Net.Sockets.NetworkStream.Finalize\n  id: Finalize\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: NetworkStream.Finalize()\n  fullName: NetworkStream.Finalize()\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Releases all resources used by the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n  remarks: \"This method overrides <xref:System.Object.Finalize%2A?displayProperty=fullName>. Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName> method.  \\n  \\n For more information about using the Finalize method, see [Finalize Methods and Destructors](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).\"\n  syntax:\n    content: ~NetworkStream ();\n    parameters: []\n  overload: System.Net.Sockets.NetworkStream.Finalize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Flush\n  commentId: M:System.Net.Sockets.NetworkStream.Flush\n  id: Flush\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: NetworkStream.Flush()\n  fullName: NetworkStream.Flush()\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Flushes data from the stream. This method is reserved for future use.\n  remarks: The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=fullName> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no affect on network streams. Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception.\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.Net.Sockets.NetworkStream.Flush*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)\n  commentId: M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)\n  id: FlushAsync(System.Threading.CancellationToken)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: FlushAsync(CancellationToken)\n  nameWithType: NetworkStream.FlushAsync(CancellationToken)\n  fullName: NetworkStream.FlushAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Flushes data from the stream as an asynchronous operation.\n  remarks: This operation will not block. The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance.\n  syntax:\n    content: public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: A cancellation token used to propagate notification that this  operation should be canceled.\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"Returns <xref href=\\\"System.Threading.Tasks.Task\\\"></xref>.  \\n  \\n The task object representing the asynchronous operation.\"\n  overload: System.Net.Sockets.NetworkStream.FlushAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Length\n  commentId: P:System.Net.Sockets.NetworkStream.Length\n  id: Length\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Length\n  nameWithType: NetworkStream.Length\n  fullName: NetworkStream.Length\n  type: Property\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Gets the length of the data available on the stream. This property is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override long Length { get; }\n    return:\n      type: System.Int64\n      description: The length of the data available on the stream.\n  overload: System.Net.Sockets.NetworkStream.Length*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Any use of this property.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Position\n  commentId: P:System.Net.Sockets.NetworkStream.Position\n  id: Position\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Position\n  nameWithType: NetworkStream.Position\n  fullName: NetworkStream.Position\n  type: Property\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Gets or sets the current position in the stream. This property is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override long Position { get; set; }\n    return:\n      type: System.Int64\n      description: The current position in the stream.\n  overload: System.Net.Sockets.NetworkStream.Position*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Any use of this property.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: NetworkStream.Read(Byte[], Int32, Int32)\n  fullName: NetworkStream.Read(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Reads data from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n  remarks: \"This method reads data into the `buffer` parameter and returns the number of bytes successfully read. If the socket is closed, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method returns 0. The <xref:System.Net.Sockets.NetworkStream.Read%2A> operation reads as much data as is available, up to the number of bytes specified by the `size` parameter. If the remote host shuts down the connection, and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method completes immediately and return zero bytes.  \\n  \\n> [!NOTE]\\n>  Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property. If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.IO.IOException>.  \\n  \\n> [!NOTE]\\n>  If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>. If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.\"\n  example:\n  - \"The following code example uses <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> to determine if data is available to be read. If data is available, it reads from the <xref:System.Net.Sockets.NetworkStream>.  \\n  \\n [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]\\n [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]\\n [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]\"\n  syntax:\n    content: public override int Read (byte[] buffer, int offset, int size);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: An array of type <xref href=\"System.Byte\"></xref> that is the location in memory to store data read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n    - id: offset\n      type: System.Int32\n      description: The location in <code>buffer</code> to begin storing the data to.\n    - id: size\n      type: System.Int32\n      description: The number of bytes to read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n    return:\n      type: System.Int32\n      description: The number of bytes read from the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>, or 0 if the socket is closed.\n  overload: System.Net.Sockets.NetworkStream.Read*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>buffer</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The <code>offset</code> parameter is less than 0.  \\n  \\n -or-  \\n  \\n The <code>offset</code> parameter is greater than the length of <code>buffer</code>.  \\n  \\n -or-  \\n  \\n The <code>size</code> parameter is less than 0.  \\n  \\n -or-  \\n  \\n The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.  \\n  \\n -or-  \\n  \\n An error occurred when accessing the socket.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The underlying <xref href=\"System.Net.Sockets.Socket\"></xref> is closed.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"The <xref href=\\\"System.Net.Sockets.NetworkStream\\\"></xref> is closed.  \\n  \\n -or-  \\n  \\n There is a failure reading from the network.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Readable\n  commentId: P:System.Net.Sockets.NetworkStream.Readable\n  id: Readable\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Readable\n  nameWithType: NetworkStream.Readable\n  fullName: NetworkStream.Readable\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> can be read.\n  remarks: \"You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property. If <xref:System.Net.Sockets.NetworkStream.Readable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is readable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.  \\n  \\n The <xref:System.Net.Sockets.NetworkStream.Readable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.\"\n  example:\n  - \"In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is readable.  \\n  \\n [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]\\n [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]\\n [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]\"\n  syntax:\n    content: protected bool Readable { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to indicate that the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> can be read; otherwise, `false`. The default value is `true`.'\n  overload: System.Net.Sockets.NetworkStream.Readable*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: NetworkStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: NetworkStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  syntax:\n    content: public override System.Threading.Tasks.Task<int> ReadAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: ''\n    - id: size\n      type: System.Int32\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: ''\n  overload: System.Net.Sockets.NetworkStream.ReadAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.ReadTimeout\n  commentId: P:System.Net.Sockets.NetworkStream.ReadTimeout\n  id: ReadTimeout\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: ReadTimeout\n  nameWithType: NetworkStream.ReadTimeout\n  fullName: NetworkStream.ReadTimeout\n  type: Property\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Gets or sets the amount of time that a read operation blocks waiting for data.\n  remarks: \"If the read operation does not complete within the time specified by this property, the read operation throws an <xref:System.IO.IOException>.  \\n  \\n> [!NOTE]\\n>  This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method. This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.\"\n  example:\n  - \"The following code example sets the read time-out for a network stream to 10 milliseconds.  \\n  \\n [!code-csharp[NCLTcpClientSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#2)]\"\n  syntax:\n    content: public override int ReadTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails. The default value, <xref href=\"System.Threading.Timeout.Infinite\"></xref>, specifies that the read operation does not time out.\n  overload: System.Net.Sockets.NetworkStream.ReadTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value specified is less than or equal to zero and is not <xref href=\"System.Threading.Timeout.Infinite\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: NetworkStream.Seek(Int64, SeekOrigin)\n  fullName: NetworkStream.Seek(Int64, SeekOrigin)\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Sets the current position of the stream to the given value. This method is not currently supported and always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: This parameter is not used.\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: This parameter is not used.\n    return:\n      type: System.Int64\n      description: The position in the stream.\n  overload: System.Net.Sockets.NetworkStream.Seek*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Any use of this property.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.SetLength(System.Int64)\n  commentId: M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: NetworkStream.SetLength(Int64)\n  fullName: NetworkStream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Sets the length of the stream. This method always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: This parameter is not used.\n  overload: System.Net.Sockets.NetworkStream.SetLength*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Any use of this property.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Socket\n  commentId: P:System.Net.Sockets.NetworkStream.Socket\n  id: Socket\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Socket\n  nameWithType: NetworkStream.Socket\n  fullName: NetworkStream.Socket\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Gets the underlying <xref href=\"System.Net.Sockets.Socket\"></xref>.\n  remarks: \"Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>. Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides.  \\n  \\n> [!NOTE]\\n>  This property is accessible only through this class or a derived class.\"\n  example:\n  - \"The following code example retrieves the underlying <xref:System.Net.Sockets.Socket> to verify an active connection.  \\n  \\n [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]\\n [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]\\n [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]\"\n  syntax:\n    content: protected System.Net.Sockets.Socket Socket { get; }\n    return:\n      type: System.Net.Sockets.Socket\n      description: A <xref href=\"System.Net.Sockets.Socket\"></xref> that represents the underlying network connection.\n  overload: System.Net.Sockets.NetworkStream.Socket*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: NetworkStream.Write(Byte[], Int32, Int32)\n  fullName: NetworkStream.Write(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Writes data to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n  remarks: \"The <xref:System.Net.Sockets.NetworkStream.Write%2A> method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network. The <xref:System.Net.Sockets.NetworkStream.Write%2A> method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown. If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=fullName> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  \\n  \\n> [!NOTE]\\n>  Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by accessing the <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property. If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.IO.IOException>. If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.\"\n  example:\n  - \"The following code example checks to see whether the <xref:System.Net.Sockets.NetworkStream> is writable. If it is, then <xref:System.Net.Sockets.NetworkStream.Write%2A> is used to write a small message.  \\n  \\n [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]\\n [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]\\n [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]\"\n  syntax:\n    content: public override void Write (byte[] buffer, int offset, int size);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: An array of type <xref href=\"System.Byte\"></xref> that contains the data to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n    - id: offset\n      type: System.Int32\n      description: The location in <code>buffer</code> from which to start writing data.\n    - id: size\n      type: System.Int32\n      description: The number of bytes to write to the <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n  overload: System.Net.Sockets.NetworkStream.Write*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>buffer</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The <code>offset</code> parameter is less than 0.  \\n  \\n -or-  \\n  \\n The <code>offset</code> parameter is greater than the length of <code>buffer</code>.  \\n  \\n -or-  \\n  \\n The <code>size</code> parameter is less than 0.  \\n  \\n -or-  \\n  \\n The <code>size</code> parameter is greater than the length of <code>buffer</code> minus the value of the <code>offset</code> parameter.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"There was a failure while writing to the network.  \\n  \\n -or-  \\n  \\n An error occurred when accessing the socket.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: \"The <xref href=\\\"System.Net.Sockets.NetworkStream\\\"></xref> is closed.  \\n  \\n -or-  \\n  \\n There was a failure reading from the network.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.Writeable\n  commentId: P:System.Net.Sockets.NetworkStream.Writeable\n  id: Writeable\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: Writeable\n  nameWithType: NetworkStream.Writeable\n  fullName: NetworkStream.Writeable\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Gets a value that indicates whether the <xref href=\"System.Net.Sockets.NetworkStream\"></xref> is writable.\n  remarks: \"You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property. If <xref:System.Net.Sockets.NetworkStream.Writeable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is writable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.  \\n  \\n The <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.\"\n  example:\n  - \"In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is writable.  \\n  \\n [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]\\n [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]\\n [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]\"\n  syntax:\n    content: protected bool Writeable { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if data can be written to the stream; otherwise, `false`. The default value is `true`.'\n  overload: System.Net.Sockets.NetworkStream.Writeable*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  commentId: M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: NetworkStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: NetworkStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  syntax:\n    content: public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: ''\n    - id: offset\n      type: System.Int32\n      description: ''\n    - id: size\n      type: System.Int32\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.Net.Sockets.NetworkStream.WriteAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.WriteTimeout\n  commentId: P:System.Net.Sockets.NetworkStream.WriteTimeout\n  id: WriteTimeout\n  parent: System.Net.Sockets.NetworkStream\n  langs:\n  - csharp\n  name: WriteTimeout\n  nameWithType: NetworkStream.WriteTimeout\n  fullName: NetworkStream.WriteTimeout\n  type: Property\n  assemblies:\n  - System.Net.Sockets\n  - System\n  - netstandard\n  namespace: System.Net.Sockets\n  summary: Gets or sets the amount of time that a write operation blocks waiting for data.\n  remarks: \"If the write operation does not complete within the time specified by this property, the write operation throws a <xref:System.IO.IOException>.  \\n  \\n> [!NOTE]\\n>  This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method. This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.\"\n  example:\n  - \"The following code example sets the write time-out for a network stream to 10 milliseconds.  \\n  \\n [!code-cpp[NCLTcpServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclTcpServerSync/cpp/tcplistener.cpp#0)]\\n [!code-csharp[NCLTcpServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclTcpServerSync/CS/tcplistener.cs#0)]\"\n  syntax:\n    content: public override int WriteTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails. The default value, <xref href=\"System.Threading.Timeout.Infinite\"></xref>, specifies that the write operation does not time out.\n  overload: System.Net.Sockets.NetworkStream.WriteTimeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value specified is less than or equal to zero and is not <xref href=\"System.Threading.Timeout.Infinite\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.Net.Sockets.SocketException\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketException\n  nameWithType: SocketException\n  fullName: System.Net.Sockets.SocketException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: NetworkStream(Socket)\n  nameWithType: NetworkStream.NetworkStream(Socket)\n  fullName: NetworkStream.NetworkStream(Socket)\n- uid: System.Net.Sockets.Socket\n  parent: System.Net.Sockets\n  isExternal: false\n  name: Socket\n  nameWithType: Socket\n  fullName: System.Net.Sockets.Socket\n- uid: System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: NetworkStream(Socket, Boolean)\n  nameWithType: NetworkStream.NetworkStream(Socket, Boolean)\n  fullName: NetworkStream.NetworkStream(Socket, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: NetworkStream(Socket, FileAccess)\n  nameWithType: NetworkStream.NetworkStream(Socket, FileAccess)\n  fullName: NetworkStream.NetworkStream(Socket, FileAccess)\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  nameWithType: FileAccess\n  fullName: System.IO.FileAccess\n- uid: System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: NetworkStream(Socket, FileAccess, Boolean)\n  nameWithType: NetworkStream.NetworkStream(Socket, FileAccess, Boolean)\n  fullName: NetworkStream.NetworkStream(Socket, FileAccess, Boolean)\n- uid: System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: NetworkStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: NetworkStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: NetworkStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: NetworkStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.Net.Sockets.NetworkStream.CanRead\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: CanRead\n  nameWithType: NetworkStream.CanRead\n  fullName: NetworkStream.CanRead\n- uid: System.Net.Sockets.NetworkStream.CanSeek\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: NetworkStream.CanSeek\n  fullName: NetworkStream.CanSeek\n- uid: System.Net.Sockets.NetworkStream.CanTimeout\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: NetworkStream.CanTimeout\n  fullName: NetworkStream.CanTimeout\n- uid: System.Net.Sockets.NetworkStream.CanWrite\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: NetworkStream.CanWrite\n  fullName: NetworkStream.CanWrite\n- uid: System.Net.Sockets.NetworkStream.Close(System.Int32)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Close(Int32)\n  nameWithType: NetworkStream.Close(Int32)\n  fullName: NetworkStream.Close(Int32)\n- uid: System.Net.Sockets.NetworkStream.DataAvailable\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: DataAvailable\n  nameWithType: NetworkStream.DataAvailable\n  fullName: NetworkStream.DataAvailable\n- uid: System.Net.Sockets.NetworkStream.Dispose(System.Boolean)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: NetworkStream.Dispose(Boolean)\n  fullName: NetworkStream.Dispose(Boolean)\n- uid: System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: NetworkStream.EndRead(IAsyncResult)\n  fullName: NetworkStream.EndRead(IAsyncResult)\n- uid: System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: NetworkStream.EndWrite(IAsyncResult)\n  fullName: NetworkStream.EndWrite(IAsyncResult)\n- uid: System.Net.Sockets.NetworkStream.Finalize\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Finalize()\n  nameWithType: NetworkStream.Finalize()\n  fullName: NetworkStream.Finalize()\n- uid: System.Net.Sockets.NetworkStream.Flush\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Flush()\n  nameWithType: NetworkStream.Flush()\n  fullName: NetworkStream.Flush()\n- uid: System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: FlushAsync(CancellationToken)\n  nameWithType: NetworkStream.FlushAsync(CancellationToken)\n  fullName: NetworkStream.FlushAsync(CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Net.Sockets.NetworkStream.Length\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Length\n  nameWithType: NetworkStream.Length\n  fullName: NetworkStream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.Sockets.NetworkStream.Position\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Position\n  nameWithType: NetworkStream.Position\n  fullName: NetworkStream.Position\n- uid: System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: NetworkStream.Read(Byte[], Int32, Int32)\n  fullName: NetworkStream.Read(Byte[], Int32, Int32)\n- uid: System.Net.Sockets.NetworkStream.Readable\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Readable\n  nameWithType: NetworkStream.Readable\n  fullName: NetworkStream.Readable\n- uid: System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: NetworkStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: NetworkStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Sockets.NetworkStream.ReadTimeout\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: NetworkStream.ReadTimeout\n  fullName: NetworkStream.ReadTimeout\n- uid: System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: NetworkStream.Seek(Int64, SeekOrigin)\n  fullName: NetworkStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.Net.Sockets.NetworkStream.SetLength(System.Int64)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: NetworkStream.SetLength(Int64)\n  fullName: NetworkStream.SetLength(Int64)\n- uid: System.Net.Sockets.NetworkStream.Socket\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Socket\n  nameWithType: NetworkStream.Socket\n  fullName: NetworkStream.Socket\n- uid: System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: NetworkStream.Write(Byte[], Int32, Int32)\n  fullName: NetworkStream.Write(Byte[], Int32, Int32)\n- uid: System.Net.Sockets.NetworkStream.Writeable\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Writeable\n  nameWithType: NetworkStream.Writeable\n  fullName: NetworkStream.Writeable\n- uid: System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: NetworkStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: NetworkStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.Net.Sockets.NetworkStream.WriteTimeout\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: NetworkStream.WriteTimeout\n  fullName: NetworkStream.WriteTimeout\n- uid: System.Net.Sockets.NetworkStream.#ctor*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: NetworkStream\n  nameWithType: NetworkStream.NetworkStream\n  fullName: NetworkStream.NetworkStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.BeginRead*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: BeginRead\n  nameWithType: NetworkStream.BeginRead\n  fullName: NetworkStream.BeginRead\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.BeginWrite*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: BeginWrite\n  nameWithType: NetworkStream.BeginWrite\n  fullName: NetworkStream.BeginWrite\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.CanRead*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: CanRead\n  nameWithType: NetworkStream.CanRead\n  fullName: NetworkStream.CanRead\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.CanSeek*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: NetworkStream.CanSeek\n  fullName: NetworkStream.CanSeek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.CanTimeout*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: NetworkStream.CanTimeout\n  fullName: NetworkStream.CanTimeout\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.CanWrite*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: NetworkStream.CanWrite\n  fullName: NetworkStream.CanWrite\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Close*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Close\n  nameWithType: NetworkStream.Close\n  fullName: NetworkStream.Close\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.DataAvailable*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: DataAvailable\n  nameWithType: NetworkStream.DataAvailable\n  fullName: NetworkStream.DataAvailable\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Dispose*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Dispose\n  nameWithType: NetworkStream.Dispose\n  fullName: NetworkStream.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.EndRead*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: EndRead\n  nameWithType: NetworkStream.EndRead\n  fullName: NetworkStream.EndRead\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.EndWrite*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: EndWrite\n  nameWithType: NetworkStream.EndWrite\n  fullName: NetworkStream.EndWrite\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Finalize*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Finalize\n  nameWithType: NetworkStream.Finalize\n  fullName: NetworkStream.Finalize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Flush*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Flush\n  nameWithType: NetworkStream.Flush\n  fullName: NetworkStream.Flush\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.FlushAsync*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: FlushAsync\n  nameWithType: NetworkStream.FlushAsync\n  fullName: NetworkStream.FlushAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Length*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Length\n  nameWithType: NetworkStream.Length\n  fullName: NetworkStream.Length\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Position*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Position\n  nameWithType: NetworkStream.Position\n  fullName: NetworkStream.Position\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Read*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Read\n  nameWithType: NetworkStream.Read\n  fullName: NetworkStream.Read\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Readable*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Readable\n  nameWithType: NetworkStream.Readable\n  fullName: NetworkStream.Readable\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.ReadAsync*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: ReadAsync\n  nameWithType: NetworkStream.ReadAsync\n  fullName: NetworkStream.ReadAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.ReadTimeout*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: NetworkStream.ReadTimeout\n  fullName: NetworkStream.ReadTimeout\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Seek*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Seek\n  nameWithType: NetworkStream.Seek\n  fullName: NetworkStream.Seek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.SetLength*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: SetLength\n  nameWithType: NetworkStream.SetLength\n  fullName: NetworkStream.SetLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Socket*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Socket\n  nameWithType: NetworkStream.Socket\n  fullName: NetworkStream.Socket\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Write*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Write\n  nameWithType: NetworkStream.Write\n  fullName: NetworkStream.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.Writeable*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: Writeable\n  nameWithType: NetworkStream.Writeable\n  fullName: NetworkStream.Writeable\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.WriteAsync*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: WriteAsync\n  nameWithType: NetworkStream.WriteAsync\n  fullName: NetworkStream.WriteAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Net.Sockets.NetworkStream.WriteTimeout*\n  parent: System.Net.Sockets.NetworkStream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: NetworkStream.WriteTimeout\n  fullName: NetworkStream.WriteTimeout\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/NetworkStream.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: false\n  name: Close()\n  nameWithType: Stream.Close()\n  fullName: Stream.Close()\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream, Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n  fullName: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  nameWithType: Stream.CopyTo(Stream)\n  fullName: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n  fullName: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n  fullName: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: false\n  name: CreateWaitHandle()\n  nameWithType: Stream.CreateWaitHandle()\n  fullName: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  nameWithType: Stream.Dispose()\n  fullName: Stream.Dispose()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: Stream.FlushAsync()\n  fullName: Stream.FlushAsync()\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  name: \"Null\"\n  nameWithType: Stream.Null\n  fullName: Stream.Null\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: false\n  name: ObjectInvariant()\n  nameWithType: Stream.ObjectInvariant()\n  fullName: Stream.ObjectInvariant()\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  nameWithType: Stream.ReadByte()\n  fullName: Stream.ReadByte()\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Synchronized(Stream)\n  nameWithType: Stream.Synchronized(Stream)\n  fullName: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteByte(Byte)\n  nameWithType: Stream.WriteByte(Byte)\n  fullName: Stream.WriteByte(Byte)\n"}