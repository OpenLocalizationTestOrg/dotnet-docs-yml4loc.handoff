{"nodes":[{"content":"Represents an Access Control Entry (ACE) that is not defined by one of the members of the <xref href=\"System.Security.AccessControl.AceType\"></xref> enumeration.","nodes":[{"pos":[0,161],"content":"Represents an Access Control Entry (ACE) that is not defined by one of the members of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AceType\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"Represents an Access Control Entry (ACE) that is not defined by one of the members of the <xref href=\"System.Security.AccessControl.AceType\"></xref> enumeration."}],"pos":[936,1098],"yaml":true},{"content":"A <xref:System.Security.AccessControl.CustomAce> object contains an ACE header and an opaque blob of data.","nodes":[{"pos":[0,106],"content":"A <xref:System.Security.AccessControl.CustomAce> object contains an ACE header and an opaque blob of data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.CustomAce&gt;</ph> object contains an ACE header and an opaque blob of data.","pos":[0,106],"source":"A <xref:System.Security.AccessControl.CustomAce> object contains an ACE header and an opaque blob of data."}]}],"pos":[1109,1216],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CustomAce\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.CustomAce\"></xref> class."}],"pos":[4060,4162],"yaml":true},{"content":"The `opaque` data is not cloned. The data should be cloned before calling this constructor if the caller does not trust the source of the data to not modify the data.","nodes":[{"pos":[0,166],"content":"The `opaque` data is not cloned. The data should be cloned before calling this constructor if the caller does not trust the source of the data to not modify the data.","nodes":[{"content":"The <ph id=\"ph1\">`opaque`</ph> data is not cloned.","pos":[0,32],"source":"The `opaque` data is not cloned."},{"content":"The data should be cloned before calling this constructor if the caller does not trust the source of the data to not modify the data.","pos":[33,166]}]}],"pos":[4173,4340],"yaml":true,"extradata":"MT"},{"content":"Type of the new Access Control Entry (ACE). This value must be greater than <xref href=\"System.Security.AccessControl.AceType.MaxDefinedAceType\"></xref>.","nodes":[{"pos":[0,153],"content":"Type of the new Access Control Entry (ACE). This value must be greater than <xref href=\"System.Security.AccessControl.AceType.MaxDefinedAceType\"></xref>.","nodes":[{"content":"Type of the new Access Control Entry (ACE).","pos":[0,43]},{"content":"This value must be greater than <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AceType.MaxDefinedAceType\"&gt;&lt;/xref&gt;</ph>.","pos":[44,153],"source":" This value must be greater than <xref href=\"System.Security.AccessControl.AceType.MaxDefinedAceType\"></xref>."}]}],"pos":[4587,4741],"yaml":true},{"content":"Flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new ACE.","nodes":[{"pos":[0,119],"content":"Flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new ACE.","nodes":[{"content":"Flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new ACE.","pos":[0,119]}]}],"pos":[4827,4947],"yaml":true},{"content":"An array of byte values that contains the data for the new ACE. This value can be `null`. The length of this array must not be greater than the value of the <xref href=\"System.Security.AccessControl.CustomAce.MaxOpaqueLength\"></xref> field, and must be a multiple of four.","nodes":[{"pos":[0,272],"content":"An array of byte values that contains the data for the new ACE. This value can be `null`. The length of this array must not be greater than the value of the <xref href=\"System.Security.AccessControl.CustomAce.MaxOpaqueLength\"></xref> field, and must be a multiple of four.","nodes":[{"content":"An array of byte values that contains the data for the new ACE.","pos":[0,63]},{"content":"This value can be <ph id=\"ph1\">`null`</ph>.","pos":[64,89],"source":" This value can be `null`."},{"content":"The length of this array must not be greater than the value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce.MaxOpaqueLength\"&gt;&lt;/xref&gt;</ph> field, and must be a multiple of four.","pos":[90,272],"source":" The length of this array must not be greater than the value of the <xref href=\"System.Security.AccessControl.CustomAce.MaxOpaqueLength\"></xref> field, and must be a multiple of four."}]}],"pos":[5009,5282],"yaml":true},{"content":"The value of the <code>type</code> parameter is not greater than <xref href=\"System.Security.AccessControl.AceType.MaxDefinedAceType\"></xref> or the length of the <code>opaque</code> array is either greater than the value of the <xref href=\"System.Security.AccessControl.CustomAce.MaxOpaqueLength\"></xref> field or not a multiple of four.","nodes":[{"pos":[0,338],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not greater than <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.AceType.MaxDefinedAceType\"&gt;&lt;/xref&gt;</ph> or the length of the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">opaque</ph><ept id=\"p2\">&lt;/code&gt;</ept> array is either greater than the value of the <ph id=\"ph4\">&lt;xref href=\"System.Security.AccessControl.CustomAce.MaxOpaqueLength\"&gt;&lt;/xref&gt;</ph> field or not a multiple of four.","source":"The value of the <code>type</code> parameter is not greater than <xref href=\"System.Security.AccessControl.AceType.MaxDefinedAceType\"></xref> or the length of the <code>opaque</code> array is either greater than the value of the <xref href=\"System.Security.AccessControl.CustomAce.MaxOpaqueLength\"></xref> field or not a multiple of four."}],"pos":[5469,5808],"yaml":true},{"content":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.","nodes":[{"pos":[0,332],"content":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.","nodes":[{"content":"Gets the length, in bytes, of the binary representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,139],"source":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object."},{"content":"This length should be used before marshaling the ACL into a binary array with the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\"&gt;&lt;/xref&gt;</ph> method.","pos":[140,332],"source":" This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method."}]}],"pos":[7009,7342],"yaml":true},{"content":"The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.","nodes":[{"pos":[0,134],"content":"The length, in bytes, of the binary representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> object.","source":"The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object."}],"pos":[7463,7598],"yaml":true},{"content":"Marshals the contents of the <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object into the specified byte array beginning at the specified offset.","nodes":[{"pos":[0,161],"content":"Marshals the contents of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> object into the specified byte array beginning at the specified offset.","source":"Marshals the contents of the <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object into the specified byte array beginning at the specified offset."}],"pos":[9015,9177],"yaml":true},{"content":"The byte array into which the contents of the <xref href=\"System.Security.AccessControl.CustomAce\"></xref> is marshaled.","nodes":[{"pos":[0,120],"content":"The byte array into which the contents of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> is marshaled.","source":"The byte array into which the contents of the <xref href=\"System.Security.AccessControl.CustomAce\"></xref> is marshaled."}],"pos":[9350,9471],"yaml":true},{"content":"The offset at which to start marshaling.","nodes":[{"pos":[0,40],"content":"The offset at which to start marshaling.","nodes":[{"content":"The offset at which to start marshaling.","pos":[0,40]}]}],"pos":[9532,9573],"yaml":true},{"content":"<code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.CustomAce\"></xref> to be copied into <code>array</code>.","nodes":[{"pos":[0,162],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is negative or too high to allow the entire <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> to be copied into <ph id=\"ph3\">&lt;code&gt;array&lt;/code&gt;</ph>.","source":"<code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.CustomAce\"></xref> to be copied into <code>array</code>."}],"pos":[9768,9931],"yaml":true},{"content":"Returns the opaque data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.","nodes":[{"pos":[0,113],"content":"Returns the opaque data associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the opaque data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object."}],"pos":[11118,11232],"yaml":true},{"content":"An array of byte values that represents the opaque data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.","nodes":[{"pos":[0,145],"content":"An array of byte values that represents the opaque data associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> object.","source":"An array of byte values that represents the opaque data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object."}],"pos":[11359,11505],"yaml":true},{"content":"Returns the maximum allowed length of an opaque data blob for this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.","nodes":[{"pos":[0,135],"content":"Returns the maximum allowed length of an opaque data blob for this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the maximum allowed length of an opaque data blob for this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object."}],"pos":[12801,12937],"yaml":true},{"content":"Gets the length of the opaque data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.","nodes":[{"pos":[0,124],"content":"Gets the length of the opaque data associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the length of the opaque data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object."}],"pos":[14281,14406],"yaml":true},{"content":"The length of the opaque callback data.","nodes":[{"pos":[0,39],"content":"The length of the opaque callback data.","nodes":[{"content":"The length of the opaque callback data.","pos":[0,39]}]}],"pos":[14518,14558],"yaml":true},{"content":"Sets the opaque callback data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.","nodes":[{"pos":[0,119],"content":"Sets the opaque callback data associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> object.","source":"Sets the opaque callback data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object."}],"pos":[15891,16011],"yaml":true},{"content":"An array of byte values that represents the opaque callback data for this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.","nodes":[{"pos":[0,142],"content":"An array of byte values that represents the opaque callback data for this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CustomAce\"&gt;&lt;/xref&gt;</ph> object.","source":"An array of byte values that represents the opaque callback data for this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object."}],"pos":[16151,16294],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.CustomAce\n  commentId: T:System.Security.AccessControl.CustomAce\n  id: CustomAce\n  children:\n  - System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])\n  - System.Security.AccessControl.CustomAce.BinaryLength\n  - System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.CustomAce.GetOpaque\n  - System.Security.AccessControl.CustomAce.MaxOpaqueLength\n  - System.Security.AccessControl.CustomAce.OpaqueLength\n  - System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])\n  langs:\n  - csharp\n  name: CustomAce\n  nameWithType: CustomAce\n  fullName: System.Security.AccessControl.CustomAce\n  type: Class\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Represents an Access Control Entry (ACE) that is not defined by one of the members of the <xref href=\"System.Security.AccessControl.AceType\"></xref> enumeration.\n  remarks: A <xref:System.Security.AccessControl.CustomAce> object contains an ACE header and an opaque blob of data.\n  syntax:\n    content: 'public sealed class CustomAce : System.Security.AccessControl.GenericAce'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAce\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.GenericAce.AceFlags\n  - System.Security.AccessControl.GenericAce.AceType\n  - System.Security.AccessControl.GenericAce.AuditFlags\n  - System.Security.AccessControl.GenericAce.Copy\n  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.Equals(System.Object)\n  - System.Security.AccessControl.GenericAce.GetHashCode\n  - System.Security.AccessControl.GenericAce.InheritanceFlags\n  - System.Security.AccessControl.GenericAce.IsInherited\n  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.PropagationFlags\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])\n  commentId: M:System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])\n  id: '#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])'\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: CustomAce(AceType, AceFlags, Byte[])\n  nameWithType: CustomAce.CustomAce(AceType, AceFlags, Byte[])\n  fullName: CustomAce.CustomAce(AceType, AceFlags, Byte[])\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.CustomAce\"></xref> class.\n  remarks: The `opaque` data is not cloned. The data should be cloned before calling this constructor if the caller does not trust the source of the data to not modify the data.\n  syntax:\n    content: public CustomAce (System.Security.AccessControl.AceType type, System.Security.AccessControl.AceFlags flags, byte[] opaque);\n    parameters:\n    - id: type\n      type: System.Security.AccessControl.AceType\n      description: Type of the new Access Control Entry (ACE). This value must be greater than <xref href=\"System.Security.AccessControl.AceType.MaxDefinedAceType\"></xref>.\n    - id: flags\n      type: System.Security.AccessControl.AceFlags\n      description: Flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new ACE.\n    - id: opaque\n      type: System.Byte[]\n      description: An array of byte values that contains the data for the new ACE. This value can be `null`. The length of this array must not be greater than the value of the <xref href=\"System.Security.AccessControl.CustomAce.MaxOpaqueLength\"></xref> field, and must be a multiple of four.\n  overload: System.Security.AccessControl.CustomAce.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value of the <code>type</code> parameter is not greater than <xref href=\"System.Security.AccessControl.AceType.MaxDefinedAceType\"></xref> or the length of the <code>opaque</code> array is either greater than the value of the <xref href=\"System.Security.AccessControl.CustomAce.MaxOpaqueLength\"></xref> field or not a multiple of four.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CustomAce.BinaryLength\n  commentId: P:System.Security.AccessControl.CustomAce.BinaryLength\n  id: BinaryLength\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: BinaryLength\n  nameWithType: CustomAce.BinaryLength\n  fullName: CustomAce.BinaryLength\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.\n  syntax:\n    content: public override int BinaryLength { get; }\n    return:\n      type: System.Int32\n      description: The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.\n  overload: System.Security.AccessControl.CustomAce.BinaryLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\n  commentId: M:System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\n  id: GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: GetBinaryForm(Byte[], Int32)\n  nameWithType: CustomAce.GetBinaryForm(Byte[], Int32)\n  fullName: CustomAce.GetBinaryForm(Byte[], Int32)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Marshals the contents of the <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object into the specified byte array beginning at the specified offset.\n  syntax:\n    content: public override void GetBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The byte array into which the contents of the <xref href=\"System.Security.AccessControl.CustomAce\"></xref> is marshaled.\n    - id: offset\n      type: System.Int32\n      description: The offset at which to start marshaling.\n  overload: System.Security.AccessControl.CustomAce.GetBinaryForm*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.CustomAce\"></xref> to be copied into <code>array</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CustomAce.GetOpaque\n  commentId: M:System.Security.AccessControl.CustomAce.GetOpaque\n  id: GetOpaque\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: GetOpaque()\n  nameWithType: CustomAce.GetOpaque()\n  fullName: CustomAce.GetOpaque()\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Returns the opaque data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.\n  syntax:\n    content: public byte[] GetOpaque ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of byte values that represents the opaque data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.\n  overload: System.Security.AccessControl.CustomAce.GetOpaque*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength\n  commentId: F:System.Security.AccessControl.CustomAce.MaxOpaqueLength\n  id: MaxOpaqueLength\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: MaxOpaqueLength\n  nameWithType: CustomAce.MaxOpaqueLength\n  fullName: CustomAce.MaxOpaqueLength\n  type: Field\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Returns the maximum allowed length of an opaque data blob for this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.\n  syntax:\n    content: public static readonly int MaxOpaqueLength;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CustomAce.OpaqueLength\n  commentId: P:System.Security.AccessControl.CustomAce.OpaqueLength\n  id: OpaqueLength\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: OpaqueLength\n  nameWithType: CustomAce.OpaqueLength\n  fullName: CustomAce.OpaqueLength\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the length of the opaque data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.\n  syntax:\n    content: public int OpaqueLength { get; }\n    return:\n      type: System.Int32\n      description: The length of the opaque callback data.\n  overload: System.Security.AccessControl.CustomAce.OpaqueLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])\n  commentId: M:System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])\n  id: SetOpaque(System.Byte[])\n  parent: System.Security.AccessControl.CustomAce\n  langs:\n  - csharp\n  name: SetOpaque(Byte[])\n  nameWithType: CustomAce.SetOpaque(Byte[])\n  fullName: CustomAce.SetOpaque(Byte[])\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the opaque callback data associated with this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.\n  syntax:\n    content: public void SetOpaque (byte[] opaque);\n    parameters:\n    - id: opaque\n      type: System.Byte[]\n      description: An array of byte values that represents the opaque callback data for this <xref href=\"System.Security.AccessControl.CustomAce\"></xref> object.\n  overload: System.Security.AccessControl.CustomAce.SetOpaque*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.GenericAce\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: GenericAce\n  nameWithType: GenericAce\n  fullName: System.Security.AccessControl.GenericAce\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: CustomAce(AceType, AceFlags, Byte[])\n  nameWithType: CustomAce.CustomAce(AceType, AceFlags, Byte[])\n  fullName: CustomAce.CustomAce(AceType, AceFlags, Byte[])\n- uid: System.Security.AccessControl.AceType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceType\n  nameWithType: AceType\n  fullName: System.Security.AccessControl.AceType\n- uid: System.Security.AccessControl.AceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceFlags\n  nameWithType: AceFlags\n  fullName: System.Security.AccessControl.AceFlags\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.AccessControl.CustomAce.BinaryLength\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: CustomAce.BinaryLength\n  fullName: CustomAce.BinaryLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: GetBinaryForm(Byte[], Int32)\n  nameWithType: CustomAce.GetBinaryForm(Byte[], Int32)\n  fullName: CustomAce.GetBinaryForm(Byte[], Int32)\n- uid: System.Security.AccessControl.CustomAce.GetOpaque\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: GetOpaque()\n  nameWithType: CustomAce.GetOpaque()\n  fullName: CustomAce.GetOpaque()\n- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: MaxOpaqueLength\n  nameWithType: CustomAce.MaxOpaqueLength\n  fullName: CustomAce.MaxOpaqueLength\n- uid: System.Security.AccessControl.CustomAce.OpaqueLength\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: OpaqueLength\n  nameWithType: CustomAce.OpaqueLength\n  fullName: CustomAce.OpaqueLength\n- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: SetOpaque(Byte[])\n  nameWithType: CustomAce.SetOpaque(Byte[])\n  fullName: CustomAce.SetOpaque(Byte[])\n- uid: System.Security.AccessControl.CustomAce.#ctor*\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: CustomAce\n  nameWithType: CustomAce.CustomAce\n  fullName: CustomAce.CustomAce\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n- uid: System.Security.AccessControl.CustomAce.BinaryLength*\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: CustomAce.BinaryLength\n  fullName: CustomAce.BinaryLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n- uid: System.Security.AccessControl.CustomAce.GetBinaryForm*\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: GetBinaryForm\n  nameWithType: CustomAce.GetBinaryForm\n  fullName: CustomAce.GetBinaryForm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n- uid: System.Security.AccessControl.CustomAce.GetOpaque*\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: GetOpaque\n  nameWithType: CustomAce.GetOpaque\n  fullName: CustomAce.GetOpaque\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n- uid: System.Security.AccessControl.CustomAce.OpaqueLength*\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: OpaqueLength\n  nameWithType: CustomAce.OpaqueLength\n  fullName: CustomAce.OpaqueLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n- uid: System.Security.AccessControl.CustomAce.SetOpaque*\n  parent: System.Security.AccessControl.CustomAce\n  isExternal: false\n  name: SetOpaque\n  nameWithType: CustomAce.SetOpaque\n  fullName: CustomAce.SetOpaque\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/CustomAce.xml\n- uid: System.Security.AccessControl.GenericAce.Equals(System.Object)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: GenericAce.Equals(Object)\n  fullName: GenericAce.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.AccessControl.GenericAce.GetHashCode\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: GenericAce.GetHashCode()\n  fullName: GenericAce.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.GenericAce.AceFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AceFlags\n  nameWithType: GenericAce.AceFlags\n  fullName: GenericAce.AceFlags\n- uid: System.Security.AccessControl.GenericAce.AceType\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AceType\n  nameWithType: GenericAce.AceType\n  fullName: GenericAce.AceType\n- uid: System.Security.AccessControl.GenericAce.AuditFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AuditFlags\n  nameWithType: GenericAce.AuditFlags\n  fullName: GenericAce.AuditFlags\n- uid: System.Security.AccessControl.GenericAce.Copy\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: Copy()\n  nameWithType: GenericAce.Copy()\n  fullName: GenericAce.Copy()\n- uid: System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: CreateFromBinaryForm(Byte[], Int32)\n  nameWithType: GenericAce.CreateFromBinaryForm(Byte[], Int32)\n  fullName: GenericAce.CreateFromBinaryForm(Byte[], Int32)\n- uid: System.Security.AccessControl.GenericAce.InheritanceFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: GenericAce.InheritanceFlags\n  fullName: GenericAce.InheritanceFlags\n- uid: System.Security.AccessControl.GenericAce.IsInherited\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: IsInherited\n  nameWithType: GenericAce.IsInherited\n  fullName: GenericAce.IsInherited\n- uid: System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: op_Equality(GenericAce, GenericAce)\n  nameWithType: GenericAce.op_Equality(GenericAce, GenericAce)\n  fullName: GenericAce.op_Equality(GenericAce, GenericAce)\n- uid: System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: op_Inequality(GenericAce, GenericAce)\n  nameWithType: GenericAce.op_Inequality(GenericAce, GenericAce)\n  fullName: GenericAce.op_Inequality(GenericAce, GenericAce)\n- uid: System.Security.AccessControl.GenericAce.PropagationFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: GenericAce.PropagationFlags\n  fullName: GenericAce.PropagationFlags\n"}