{"nodes":[{"content":"Represents the method that will handle the <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Selecting\"></xref>, <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Updating\"></xref>, <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Inserting\"></xref>, or <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Deleting\"></xref> event of the <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> control.","nodes":[{"pos":[0,428],"content":"Represents the method that will handle the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.ObjectDataSource.Selecting\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.WebControls.ObjectDataSource.Updating\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Web.UI.WebControls.ObjectDataSource.Inserting\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph4\">&lt;xref href=\"System.Web.UI.WebControls.ObjectDataSource.Deleting\"&gt;&lt;/xref&gt;</ph> event of the <ph id=\"ph5\">&lt;xref href=\"System.Web.UI.WebControls.ObjectDataSource\"&gt;&lt;/xref&gt;</ph> control.","source":"Represents the method that will handle the <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Selecting\"></xref>, <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Updating\"></xref>, <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Inserting\"></xref>, or <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Deleting\"></xref> event of the <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> control."}],"pos":[504,933],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, or <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event of the <xref:System.Web.UI.WebControls.ObjectDataSource> control allows you to manipulate the parameters that are used to determine the method that is called by the <xref:System.Web.UI.WebControls.ObjectDataSource> control. For more information, see <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>.  \n  \n When you create an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,569],"content":"The <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, or <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event of the <xref:System.Web.UI.WebControls.ObjectDataSource> control allows you to manipulate the parameters that are used to determine the method that is called by the <xref:System.Web.UI.WebControls.ObjectDataSource> control. For more information, see <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, or <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event of the <xref:System.Web.UI.WebControls.ObjectDataSource> control allows you to manipulate the parameters that are used to determine the method that is called by the <xref:System.Web.UI.WebControls.ObjectDataSource> control. For more information, see <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>.","pos":[0,569],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Selecting&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Updating&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Inserting&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.ObjectDataSource.Deleting&gt;</ph> event of the <ph id=\"ph5\">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control allows you to manipulate the parameters that are used to determine the method that is called by the <ph id=\"ph6\">&lt;xref:System.Web.UI.WebControls.ObjectDataSource&gt;</ph> control.","pos":[0,477],"source":"The <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, or <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event of the <xref:System.Web.UI.WebControls.ObjectDataSource> control allows you to manipulate the parameters that are used to determine the method that is called by the <xref:System.Web.UI.WebControls.ObjectDataSource> control."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&gt;</ph>.","pos":[478,569],"source":" For more information, see <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>."}]}]},{"pos":[576,1056],"content":"When you create an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"content":"When you create an <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler&gt;</ph> delegate, you identify the method that will handle the event.","pos":[0,148],"source":"When you create an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> delegate, you identify the method that will handle the event."},{"content":"To associate the event with your event handler, add an instance of the delegate to the event.","pos":[149,242]},{"content":"The event handler is called whenever the event occurs, unless you remove the delegate.","pos":[243,329]},{"content":"For more information about event handler delegates, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","pos":[330,480],"source":" For more information about event handler delegates, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}]}],"pos":[944,2005],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler\n  commentId: T:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler\n  id: ObjectDataSourceMethodEventHandler\n  langs:\n  - csharp\n  name: ObjectDataSourceMethodEventHandler\n  nameWithType: ObjectDataSourceMethodEventHandler\n  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler\n  type: Delegate\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI.WebControls\n  summary: Represents the method that will handle the <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Selecting\"></xref>, <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Updating\"></xref>, <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Inserting\"></xref>, or <xref href=\"System.Web.UI.WebControls.ObjectDataSource.Deleting\"></xref> event of the <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> control.\n  remarks: \"The <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, or <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event of the <xref:System.Web.UI.WebControls.ObjectDataSource> control allows you to manipulate the parameters that are used to determine the method that is called by the <xref:System.Web.UI.WebControls.ObjectDataSource> control. For more information, see <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>.  \\n  \\n When you create an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  example:\n  - \"This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example middle-tier business object that is used by the first code example.  \\n  \\n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. Initially, the <xref:System.Web.UI.WebControls.DetailsView> displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button, and the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property will identify which method performs the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> action.  \\n  \\n In this example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  -->  \\n  \\n The following code example provides the example middle-tier business object that the preceding code example uses. The code example consists of the following two basic classes and one additional class:  \\n  \\n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \\n  \\n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \\n  \\n-   An additional `NorthwindDataException` class, which is provided as a convenience.  \\n  \\n This set of example classes works with the Northwind Traders database, which is an example database that is available with Microsoft SQL Server and Microsoft Access. For a complete working example, use these classes by placing them in the App_Code directory under the application root or by compiling them into a library and placing the resulting DLL in the Bin directory. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \\n  \\n [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]\\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]\"\n  syntax:\n    content: public delegate void ObjectDataSourceMethodEventHandler(object sender, ObjectDataSourceMethodEventArgs e);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/ObjectDataSourceMethodEventHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}