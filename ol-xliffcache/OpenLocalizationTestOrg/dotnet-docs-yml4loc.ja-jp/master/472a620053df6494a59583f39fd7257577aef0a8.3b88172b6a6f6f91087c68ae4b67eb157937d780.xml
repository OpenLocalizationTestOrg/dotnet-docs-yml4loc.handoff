{"nodes":[{"content":"Implements the <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> interface to create a request message that acts as a method call on a remote object.","nodes":[{"pos":[0,173],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"&gt;&lt;/xref&gt;</ph> interface to create a request message that acts as a method call on a remote object.","source":"Implements the <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> interface to create a request message that acts as a method call on a remote object."}],"pos":[1834,2008],"yaml":true},{"content":"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.  \n  \n <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> wraps remoting data for passing between message sinks. A remoting client sends a <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> message to a server.","nodes":[{"pos":[0,352],"content":"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.","nodes":[{"content":"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.","pos":[0,352],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper&gt;</ph> class is used by the remoting infrastructure of the .NET Framework.","pos":[0,137],"source":"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework."},{"content":"You do not need to create an instance of the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper&gt;</ph> class directly; instead, use the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage&gt;</ph> interface.","pos":[138,352],"source":" You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface."}]}]},{"pos":[359,592],"content":"<xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> wraps remoting data for passing between message sinks. A remoting client sends a <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> message to a server.","nodes":[{"content":"<xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> wraps remoting data for passing between message sinks. A remoting client sends a <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> message to a server.","pos":[0,233],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper&gt;</ph> wraps remoting data for passing between message sinks.","pos":[0,120],"source":"<xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> wraps remoting data for passing between message sinks."},{"content":"A remoting client sends a <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper&gt;</ph> message to a server.","pos":[121,233],"source":" A remoting client sends a <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> message to a server."}]}]}],"pos":[2019,2616],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\"></xref> class by wrapping an <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> interface.","nodes":[{"pos":[0,219],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\"&gt;&lt;/xref&gt;</ph> class by wrapping an <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"&gt;&lt;/xref&gt;</ph> interface.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\"></xref> class by wrapping an <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> interface."}],"pos":[4876,5096],"yaml":true},{"content":"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.","nodes":[{"pos":[0,352],"content":"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.","nodes":[{"content":"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.","pos":[0,352],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper&gt;</ph> class is used by the remoting infrastructure of the .NET Framework.","pos":[0,137],"source":"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework."},{"content":"You do not need to create an instance of the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper&gt;</ph> class directly; instead, use the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage&gt;</ph> interface.","pos":[138,352],"source":" You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface."}]}]}],"pos":[5107,5460],"yaml":true,"extradata":"MT"},{"content":"A message that acts as an outgoing method call on a remote object.","nodes":[{"pos":[0,66],"content":"A message that acts as an outgoing method call on a remote object.","nodes":[{"content":"A message that acts as an outgoing method call on a remote object.","pos":[0,66]}]}],"pos":[5689,5756],"yaml":true},{"content":"Gets the number of arguments passed to the method.","nodes":[{"pos":[0,50],"content":"Gets the number of arguments passed to the method.","nodes":[{"content":"Gets the number of arguments passed to the method.","pos":[0,50]}]}],"pos":[6995,7046],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[7057,7096],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int32\"></xref> that represents the number of arguments passed to a method.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that represents the number of arguments passed to a method.","source":"A <xref href=\"System.Int32\"></xref> that represents the number of arguments passed to a method."}],"pos":[7212,7308],"yaml":true},{"content":"Gets an array of arguments passed to the method.","nodes":[{"pos":[0,48],"content":"Gets an array of arguments passed to the method.","nodes":[{"content":"Gets an array of arguments passed to the method.","pos":[0,48]}]}],"pos":[8526,8575],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[8586,8625],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Object\"></xref> that represents the arguments passed to a method.","nodes":[{"pos":[0,101],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents the arguments passed to a method.","source":"An array of type <xref href=\"System.Object\"></xref> that represents the arguments passed to a method."}],"pos":[8750,8852],"yaml":true},{"content":"Gets a method argument, as an object, at a specified index.","nodes":[{"pos":[0,59],"content":"Gets a method argument, as an object, at a specified index.","nodes":[{"content":"Gets a method argument, as an object, at a specified index.","pos":[0,59]}]}],"pos":[10139,10199],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[10210,10249],"yaml":true,"extradata":"MT"},{"content":"The index of the requested argument.","nodes":[{"pos":[0,36],"content":"The index of the requested argument.","nodes":[{"content":"The index of the requested argument.","pos":[0,36]}]}],"pos":[10392,10429],"yaml":true},{"content":"The method argument as an object.","nodes":[{"pos":[0,33],"content":"The method argument as an object.","nodes":[{"content":"The method argument as an object.","pos":[0,33]}]}],"pos":[10486,10520],"yaml":true},{"content":"Gets the name of a method argument at a specified index.","nodes":[{"pos":[0,56],"content":"Gets the name of a method argument at a specified index.","nodes":[{"content":"Gets the name of a method argument at a specified index.","pos":[0,56]}]}],"pos":[11833,11890],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[11901,11940],"yaml":true,"extradata":"MT"},{"content":"The index of the requested argument.","nodes":[{"pos":[0,36],"content":"The index of the requested argument.","nodes":[{"content":"The index of the requested argument.","pos":[0,36]}]}],"pos":[12085,12122],"yaml":true},{"content":"The name of the method argument.","nodes":[{"pos":[0,32],"content":"The name of the method argument.","nodes":[{"content":"The name of the method argument.","pos":[0,32]}]}],"pos":[12179,12212],"yaml":true},{"content":"Gets a method argument at a specified index that is not marked as an `out` parameter.","nodes":[{"pos":[0,85],"content":"Gets a method argument at a specified index that is not marked as an <ph id=\"ph1\">`out`</ph> parameter.","source":"Gets a method argument at a specified index that is not marked as an `out` parameter."}],"pos":[13517,13603],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[13614,13653],"yaml":true,"extradata":"MT"},{"content":"The index of the requested argument.","nodes":[{"pos":[0,36],"content":"The index of the requested argument.","nodes":[{"content":"The index of the requested argument.","pos":[0,36]}]}],"pos":[13798,13835],"yaml":true},{"content":"The method argument that is not marked as an `out` parameter.","nodes":[{"pos":[0,61],"content":"The method argument that is not marked as an <ph id=\"ph1\">`out`</ph> parameter.","source":"The method argument that is not marked as an `out` parameter."}],"pos":[13892,13954],"yaml":true},{"content":"Gets the name of a method argument at a specified index that is not marked as an **out** parameter.","nodes":[{"pos":[0,99],"content":"Gets the name of a method argument at a specified index that is not marked as an <bpt id=\"p1\">**</bpt>out<ept id=\"p1\">**</ept> parameter.","source":"Gets the name of a method argument at a specified index that is not marked as an **out** parameter."}],"pos":[15281,15381],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[15392,15431],"yaml":true,"extradata":"MT"},{"content":"The index of the requested argument.","nodes":[{"pos":[0,36],"content":"The index of the requested argument.","nodes":[{"content":"The index of the requested argument.","pos":[0,36]}]}],"pos":[15578,15615],"yaml":true},{"content":"The name of the method argument that is not marked as an **out** parameter.","nodes":[{"pos":[0,75],"content":"The name of the method argument that is not marked as an <bpt id=\"p1\">**</bpt>out<ept id=\"p1\">**</ept> parameter.","source":"The name of the method argument that is not marked as an **out** parameter."}],"pos":[15672,15748],"yaml":true},{"content":"Gets a value indicating whether the method can accept a variable number of arguments.","nodes":[{"pos":[0,85],"content":"Gets a value indicating whether the method can accept a variable number of arguments.","nodes":[{"content":"Gets a value indicating whether the method can accept a variable number of arguments.","pos":[0,85]}]}],"pos":[17006,17092],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[17103,17142],"yaml":true,"extradata":"MT"},{"content":"`true` if the method can accept a variable number of arguments; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the method can accept a variable number of arguments; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the method can accept a variable number of arguments; otherwise, `false`."}],"pos":[17263,17349],"yaml":true},{"content":"Gets the number of arguments in the method call that are not marked as `out` parameters.","nodes":[{"pos":[0,88],"content":"Gets the number of arguments in the method call that are not marked as <ph id=\"ph1\">`out`</ph> parameters.","source":"Gets the number of arguments in the method call that are not marked as `out` parameters."}],"pos":[18605,18694],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[18705,18744],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int32\"></xref> that represents the number of arguments in the method call that are not marked as `out` parameters.","nodes":[{"pos":[0,135],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that represents the number of arguments in the method call that are not marked as <ph id=\"ph2\">`out`</ph> parameters.","source":"A <xref href=\"System.Int32\"></xref> that represents the number of arguments in the method call that are not marked as `out` parameters."}],"pos":[18862,18998],"yaml":true},{"content":"Gets an array of arguments in the method call that are not marked as `out` parameters.","nodes":[{"pos":[0,86],"content":"Gets an array of arguments in the method call that are not marked as <ph id=\"ph1\">`out`</ph> parameters.","source":"Gets an array of arguments in the method call that are not marked as `out` parameters."}],"pos":[20230,20317],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[20328,20367],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Object\"></xref> that represents arguments in the method call that are not marked as `out` parameters.","nodes":[{"pos":[0,137],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that represents arguments in the method call that are not marked as <ph id=\"ph2\">`out`</ph> parameters.","source":"An array of type <xref href=\"System.Object\"></xref> that represents arguments in the method call that are not marked as `out` parameters."}],"pos":[20489,20627],"yaml":true},{"content":"Gets the <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call.","nodes":[{"pos":[0,111],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"&gt;&lt;/xref&gt;</ph> for the current method call.","source":"Gets the <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call."}],"pos":[21927,22039],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[22050,22089],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call.","nodes":[{"pos":[0,106],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"&gt;&lt;/xref&gt;</ph> for the current method call.","source":"The <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call."}],"pos":[22304,22411],"yaml":true},{"content":"Gets the <xref href=\"System.Reflection.MethodBase\"></xref> of the called method.","nodes":[{"pos":[0,80],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase\"&gt;&lt;/xref&gt;</ph> of the called method.","source":"Gets the <xref href=\"System.Reflection.MethodBase\"></xref> of the called method."}],"pos":[23675,23756],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[23767,23806],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Reflection.MethodBase\"></xref> of the called method.","nodes":[{"pos":[0,75],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase\"&gt;&lt;/xref&gt;</ph> of the called method.","source":"The <xref href=\"System.Reflection.MethodBase\"></xref> of the called method."}],"pos":[23965,24041],"yaml":true},{"content":"Gets the name of the invoked method.","nodes":[{"pos":[0,36],"content":"Gets the name of the invoked method.","nodes":[{"content":"Gets the name of the invoked method.","pos":[0,36]}]}],"pos":[25297,25334],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[25345,25384],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that contains the name of the invoked method.","nodes":[{"pos":[0,82],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the name of the invoked method.","source":"A <xref href=\"System.String\"></xref> that contains the name of the invoked method."}],"pos":[25506,25589],"yaml":true},{"content":"Gets an object that contains the method signature.","nodes":[{"pos":[0,50],"content":"Gets an object that contains the method signature.","nodes":[{"content":"Gets an object that contains the method signature.","pos":[0,50]}]}],"pos":[26875,26926],"yaml":true},{"content":"The method belongs to a remote object.","nodes":[{"pos":[0,38],"content":"The method belongs to a remote object.","nodes":[{"content":"The method belongs to a remote object.","pos":[0,38]}]}],"pos":[26937,26976],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Object\"></xref> that contains the method signature.","nodes":[{"pos":[0,72],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that contains the method signature.","source":"A <xref href=\"System.Object\"></xref> that contains the method signature."}],"pos":[27103,27176],"yaml":true},{"content":"An <xref href=\"System.Collections.IDictionary\"></xref> that represents a collection of the remoting message's properties.","nodes":[{"pos":[0,121],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> that represents a collection of the remoting message's properties.","source":"An <xref href=\"System.Collections.IDictionary\"></xref> that represents a collection of the remoting message's properties."}],"pos":[28437,28559],"yaml":true},{"content":"The message acts as a request method call on a remote object.","nodes":[{"pos":[0,61],"content":"The message acts as a request method call on a remote object.","nodes":[{"content":"The message acts as a request method call on a remote object.","pos":[0,61]}]}],"pos":[28570,28632],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IDictionary\"></xref> interface that represents a collection of the remoting message's properties.","nodes":[{"pos":[0,131],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> interface that represents a collection of the remoting message's properties.","source":"An <xref href=\"System.Collections.IDictionary\"></xref> interface that represents a collection of the remoting message's properties."}],"pos":[28795,28927],"yaml":true},{"content":"Gets the full type name of the remote object on which the method call is being made.","nodes":[{"pos":[0,84],"content":"Gets the full type name of the remote object on which the method call is being made.","nodes":[{"content":"Gets the full type name of the remote object on which the method call is being made.","pos":[0,84]}]}],"pos":[30171,30256],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the full type name of the remote object on which the method call is being made.","nodes":[{"pos":[0,130],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the full type name of the remote object on which the method call is being made.","source":"A <xref href=\"System.String\"></xref> that contains the full type name of the remote object on which the method call is being made."}],"pos":[30376,30507],"yaml":true},{"content":"Gets the Uniform Resource Identifier (URI) of the remote object on which the method call is being made.","nodes":[{"pos":[0,103],"content":"Gets the Uniform Resource Identifier (URI) of the remote object on which the method call is being made.","nodes":[{"content":"Gets the Uniform Resource Identifier (URI) of the remote object on which the method call is being made.","pos":[0,103]}]}],"pos":[31719,31823],"yaml":true},{"content":"The URI of a remote object.","nodes":[{"pos":[0,27],"content":"The URI of a remote object.","nodes":[{"content":"The URI of a remote object.","pos":[0,27]}]}],"pos":[31943,31971],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  commentId: T:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  id: MethodCallMessageWrapper\n  children:\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage)\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg(System.Int32)\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName(System.Int32)\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg(System.Int32)\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName(System.Int32)\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri\n  langs:\n  - csharp\n  name: MethodCallMessageWrapper\n  nameWithType: MethodCallMessageWrapper\n  fullName: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Implements the <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> interface to create a request message that acts as a method call on a remote object.\n  remarks: \"The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.  \\n  \\n <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> wraps remoting data for passing between message sinks. A remoting client sends a <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> message to a server.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class MethodCallMessageWrapper : System.Runtime.Remoting.Messaging.InternalMessageWrapper, System.Runtime.Remoting.Messaging.IMethodCallMessage\n  inheritance:\n  - System.Object\n  - System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  implements:\n  - System.Runtime.Remoting.Messaging.IMethodCallMessage\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage)\n  commentId: M:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage)\n  id: '#ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage)'\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: MethodCallMessageWrapper(IMethodCallMessage)\n  nameWithType: MethodCallMessageWrapper.MethodCallMessageWrapper(IMethodCallMessage)\n  fullName: MethodCallMessageWrapper.MethodCallMessageWrapper(IMethodCallMessage)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\"></xref> class by wrapping an <xref href=\"System.Runtime.Remoting.Messaging.IMethodCallMessage\"></xref> interface.\n  remarks: The <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class is used by the remoting infrastructure of the .NET Framework. You do not need to create an instance of the <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper> class directly; instead, use the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> interface.\n  syntax:\n    content: public MethodCallMessageWrapper (System.Runtime.Remoting.Messaging.IMethodCallMessage msg);\n    parameters:\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMethodCallMessage\n      description: A message that acts as an outgoing method call on a remote object.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount\n  id: ArgCount\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: ArgCount\n  nameWithType: MethodCallMessageWrapper.ArgCount\n  fullName: MethodCallMessageWrapper.ArgCount\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the number of arguments passed to the method.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual int ArgCount { get; }\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that represents the number of arguments passed to a method.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args\n  id: Args\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: Args\n  nameWithType: MethodCallMessageWrapper.Args\n  fullName: MethodCallMessageWrapper.Args\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets an array of arguments passed to the method.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual object[] Args { get; set; }\n    return:\n      type: System.Object[]\n      description: An array of type <xref href=\"System.Object\"></xref> that represents the arguments passed to a method.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg(System.Int32)\n  commentId: M:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg(System.Int32)\n  id: GetArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: GetArg(Int32)\n  nameWithType: MethodCallMessageWrapper.GetArg(Int32)\n  fullName: MethodCallMessageWrapper.GetArg(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets a method argument, as an object, at a specified index.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual object GetArg (int argNum);\n    parameters:\n    - id: argNum\n      type: System.Int32\n      description: The index of the requested argument.\n    return:\n      type: System.Object\n      description: The method argument as an object.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName(System.Int32)\n  commentId: M:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName(System.Int32)\n  id: GetArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: GetArgName(Int32)\n  nameWithType: MethodCallMessageWrapper.GetArgName(Int32)\n  fullName: MethodCallMessageWrapper.GetArgName(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the name of a method argument at a specified index.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual string GetArgName (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the requested argument.\n    return:\n      type: System.String\n      description: The name of the method argument.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg(System.Int32)\n  commentId: M:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg(System.Int32)\n  id: GetInArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: GetInArg(Int32)\n  nameWithType: MethodCallMessageWrapper.GetInArg(Int32)\n  fullName: MethodCallMessageWrapper.GetInArg(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets a method argument at a specified index that is not marked as an `out` parameter.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual object GetInArg (int argNum);\n    parameters:\n    - id: argNum\n      type: System.Int32\n      description: The index of the requested argument.\n    return:\n      type: System.Object\n      description: The method argument that is not marked as an `out` parameter.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName(System.Int32)\n  commentId: M:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName(System.Int32)\n  id: GetInArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: GetInArgName(Int32)\n  nameWithType: MethodCallMessageWrapper.GetInArgName(Int32)\n  fullName: MethodCallMessageWrapper.GetInArgName(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the name of a method argument at a specified index that is not marked as an **out** parameter.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual string GetInArgName (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the requested argument.\n    return:\n      type: System.String\n      description: The name of the method argument that is not marked as an **out** parameter.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs\n  id: HasVarArgs\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: HasVarArgs\n  nameWithType: MethodCallMessageWrapper.HasVarArgs\n  fullName: MethodCallMessageWrapper.HasVarArgs\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets a value indicating whether the method can accept a variable number of arguments.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual bool HasVarArgs { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the method can accept a variable number of arguments; otherwise, `false`.'\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount\n  id: InArgCount\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: InArgCount\n  nameWithType: MethodCallMessageWrapper.InArgCount\n  fullName: MethodCallMessageWrapper.InArgCount\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the number of arguments in the method call that are not marked as `out` parameters.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual int InArgCount { get; }\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that represents the number of arguments in the method call that are not marked as `out` parameters.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs\n  id: InArgs\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: InArgs\n  nameWithType: MethodCallMessageWrapper.InArgs\n  fullName: MethodCallMessageWrapper.InArgs\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets an array of arguments in the method call that are not marked as `out` parameters.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual object[] InArgs { get; }\n    return:\n      type: System.Object[]\n      description: An array of type <xref href=\"System.Object\"></xref> that represents arguments in the method call that are not marked as `out` parameters.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext\n  id: LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: LogicalCallContext\n  nameWithType: MethodCallMessageWrapper.LogicalCallContext\n  fullName: MethodCallMessageWrapper.LogicalCallContext\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual System.Runtime.Remoting.Messaging.LogicalCallContext LogicalCallContext { get; }\n    return:\n      type: System.Runtime.Remoting.Messaging.LogicalCallContext\n      description: The <xref href=\"System.Runtime.Remoting.Messaging.LogicalCallContext\"></xref> for the current method call.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase\n  id: MethodBase\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: MethodBase\n  nameWithType: MethodCallMessageWrapper.MethodBase\n  fullName: MethodCallMessageWrapper.MethodBase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the <xref href=\"System.Reflection.MethodBase\"></xref> of the called method.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual System.Reflection.MethodBase MethodBase { get; }\n    return:\n      type: System.Reflection.MethodBase\n      description: The <xref href=\"System.Reflection.MethodBase\"></xref> of the called method.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName\n  id: MethodName\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: MethodCallMessageWrapper.MethodName\n  fullName: MethodCallMessageWrapper.MethodName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the name of the invoked method.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual string MethodName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the name of the invoked method.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature\n  id: MethodSignature\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: MethodSignature\n  nameWithType: MethodCallMessageWrapper.MethodSignature\n  fullName: MethodCallMessageWrapper.MethodSignature\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets an object that contains the method signature.\n  remarks: The method belongs to a remote object.\n  syntax:\n    content: public virtual object MethodSignature { get; }\n    return:\n      type: System.Object\n      description: A <xref href=\"System.Object\"></xref> that contains the method signature.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties\n  id: Properties\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: MethodCallMessageWrapper.Properties\n  fullName: MethodCallMessageWrapper.Properties\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: An <xref href=\"System.Collections.IDictionary\"></xref> that represents a collection of the remoting message's properties.\n  remarks: The message acts as a request method call on a remote object.\n  syntax:\n    content: public virtual System.Collections.IDictionary Properties { get; }\n    return:\n      type: System.Collections.IDictionary\n      description: An <xref href=\"System.Collections.IDictionary\"></xref> interface that represents a collection of the remoting message's properties.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName\n  id: TypeName\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: TypeName\n  nameWithType: MethodCallMessageWrapper.TypeName\n  fullName: MethodCallMessageWrapper.TypeName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the full type name of the remote object on which the method call is being made.\n  syntax:\n    content: public virtual string TypeName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the full type name of the remote object on which the method call is being made.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri\n  commentId: P:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri\n  id: Uri\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  langs:\n  - csharp\n  name: Uri\n  nameWithType: MethodCallMessageWrapper.Uri\n  fullName: MethodCallMessageWrapper.Uri\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the Uniform Resource Identifier (URI) of the remote object on which the method call is being made.\n  syntax:\n    content: public virtual string Uri { get; set; }\n    return:\n      type: System.String\n      description: The URI of a remote object.\n  overload: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: InternalMessageWrapper\n  nameWithType: InternalMessageWrapper\n  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodCallMessageWrapper(IMethodCallMessage)\n  nameWithType: MethodCallMessageWrapper.MethodCallMessageWrapper(IMethodCallMessage)\n  fullName: MethodCallMessageWrapper.MethodCallMessageWrapper(IMethodCallMessage)\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMethodCallMessage\n  nameWithType: IMethodCallMessage\n  fullName: System.Runtime.Remoting.Messaging.IMethodCallMessage\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: ArgCount\n  nameWithType: MethodCallMessageWrapper.ArgCount\n  fullName: MethodCallMessageWrapper.ArgCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Args\n  nameWithType: MethodCallMessageWrapper.Args\n  fullName: MethodCallMessageWrapper.Args\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetArg(Int32)\n  nameWithType: MethodCallMessageWrapper.GetArg(Int32)\n  fullName: MethodCallMessageWrapper.GetArg(Int32)\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetArgName(Int32)\n  nameWithType: MethodCallMessageWrapper.GetArgName(Int32)\n  fullName: MethodCallMessageWrapper.GetArgName(Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetInArg(Int32)\n  nameWithType: MethodCallMessageWrapper.GetInArg(Int32)\n  fullName: MethodCallMessageWrapper.GetInArg(Int32)\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetInArgName(Int32)\n  nameWithType: MethodCallMessageWrapper.GetInArgName(Int32)\n  fullName: MethodCallMessageWrapper.GetInArgName(Int32)\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: HasVarArgs\n  nameWithType: MethodCallMessageWrapper.HasVarArgs\n  fullName: MethodCallMessageWrapper.HasVarArgs\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: InArgCount\n  nameWithType: MethodCallMessageWrapper.InArgCount\n  fullName: MethodCallMessageWrapper.InArgCount\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: InArgs\n  nameWithType: MethodCallMessageWrapper.InArgs\n  fullName: MethodCallMessageWrapper.InArgs\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: LogicalCallContext\n  nameWithType: MethodCallMessageWrapper.LogicalCallContext\n  fullName: MethodCallMessageWrapper.LogicalCallContext\n- uid: System.Runtime.Remoting.Messaging.LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: LogicalCallContext\n  nameWithType: LogicalCallContext\n  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodCallMessageWrapper.MethodBase\n  fullName: MethodCallMessageWrapper.MethodBase\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodName\n  nameWithType: MethodCallMessageWrapper.MethodName\n  fullName: MethodCallMessageWrapper.MethodName\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodSignature\n  nameWithType: MethodCallMessageWrapper.MethodSignature\n  fullName: MethodCallMessageWrapper.MethodSignature\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Properties\n  nameWithType: MethodCallMessageWrapper.Properties\n  fullName: MethodCallMessageWrapper.Properties\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: TypeName\n  nameWithType: MethodCallMessageWrapper.TypeName\n  fullName: MethodCallMessageWrapper.TypeName\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Uri\n  nameWithType: MethodCallMessageWrapper.Uri\n  fullName: MethodCallMessageWrapper.Uri\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.#ctor*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodCallMessageWrapper\n  nameWithType: MethodCallMessageWrapper.MethodCallMessageWrapper\n  fullName: MethodCallMessageWrapper.MethodCallMessageWrapper\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.ArgCount*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: ArgCount\n  nameWithType: MethodCallMessageWrapper.ArgCount\n  fullName: MethodCallMessageWrapper.ArgCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Args*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Args\n  nameWithType: MethodCallMessageWrapper.Args\n  fullName: MethodCallMessageWrapper.Args\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArg*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetArg\n  nameWithType: MethodCallMessageWrapper.GetArg\n  fullName: MethodCallMessageWrapper.GetArg\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetArgName*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetArgName\n  nameWithType: MethodCallMessageWrapper.GetArgName\n  fullName: MethodCallMessageWrapper.GetArgName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArg*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetInArg\n  nameWithType: MethodCallMessageWrapper.GetInArg\n  fullName: MethodCallMessageWrapper.GetInArg\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.GetInArgName*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: GetInArgName\n  nameWithType: MethodCallMessageWrapper.GetInArgName\n  fullName: MethodCallMessageWrapper.GetInArgName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.HasVarArgs*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: HasVarArgs\n  nameWithType: MethodCallMessageWrapper.HasVarArgs\n  fullName: MethodCallMessageWrapper.HasVarArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgCount*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: InArgCount\n  nameWithType: MethodCallMessageWrapper.InArgCount\n  fullName: MethodCallMessageWrapper.InArgCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.InArgs*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: InArgs\n  nameWithType: MethodCallMessageWrapper.InArgs\n  fullName: MethodCallMessageWrapper.InArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.LogicalCallContext*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: LogicalCallContext\n  nameWithType: MethodCallMessageWrapper.LogicalCallContext\n  fullName: MethodCallMessageWrapper.LogicalCallContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodBase*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodCallMessageWrapper.MethodBase\n  fullName: MethodCallMessageWrapper.MethodBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodName*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodName\n  nameWithType: MethodCallMessageWrapper.MethodName\n  fullName: MethodCallMessageWrapper.MethodName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.MethodSignature*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: MethodSignature\n  nameWithType: MethodCallMessageWrapper.MethodSignature\n  fullName: MethodCallMessageWrapper.MethodSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Properties*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Properties\n  nameWithType: MethodCallMessageWrapper.Properties\n  fullName: MethodCallMessageWrapper.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.TypeName*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: TypeName\n  nameWithType: MethodCallMessageWrapper.TypeName\n  fullName: MethodCallMessageWrapper.TypeName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper.Uri*\n  parent: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  isExternal: false\n  name: Uri\n  nameWithType: MethodCallMessageWrapper.Uri\n  fullName: MethodCallMessageWrapper.Uri\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/MethodCallMessageWrapper.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage\n  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper\n  isExternal: false\n  name: WrappedMessage\n  nameWithType: InternalMessageWrapper.WrappedMessage\n  fullName: InternalMessageWrapper.WrappedMessage\n"}