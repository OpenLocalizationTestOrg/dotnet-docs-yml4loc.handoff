{"nodes":[{"content":"Represents the access control and audit security for a pipe.","nodes":[{"pos":[0,60],"content":"Represents the access control and audit security for a pipe.","nodes":[{"content":"Represents the access control and audit security for a pipe.","pos":[0,60]}]}],"pos":[2039,2100],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeSecurity> class specifies the access rights for a pipe and how access attempts are audited.  This class represents access and audit rights as a set of rules. Each access rule is represented by a <xref:System.IO.Pipes.PipeAccessRule> object, while each audit rule is represented by a <xref:System.IO.Pipes.PipeAuditRule> object.  \n  \n The <xref:System.IO.Pipes.PipeSecurity> class is an abstraction of the underlying Microsoft Windows file security system. In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.  The <xref:System.IO.Pipes.PipeAccessRule> and <xref:System.IO.Pipes.PipeAuditRule> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.  \n  \n The <xref:System.IO.Pipes.PipeSecurity> class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.  \n  \n Use the <xref:System.IO.Pipes.PipeSecurity> class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.  \n  \n To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.","nodes":[{"pos":[0,357],"content":"The <xref:System.IO.Pipes.PipeSecurity> class specifies the access rights for a pipe and how access attempts are audited.  This class represents access and audit rights as a set of rules. Each access rule is represented by a <xref:System.IO.Pipes.PipeAccessRule> object, while each audit rule is represented by a <xref:System.IO.Pipes.PipeAuditRule> object.","nodes":[{"content":"The <xref:System.IO.Pipes.PipeSecurity> class specifies the access rights for a pipe and how access attempts are audited.  This class represents access and audit rights as a set of rules. Each access rule is represented by a <xref:System.IO.Pipes.PipeAccessRule> object, while each audit rule is represented by a <xref:System.IO.Pipes.PipeAuditRule> object.","pos":[0,357],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class specifies the access rights for a pipe and how access attempts are audited.","pos":[0,121],"source":"The <xref:System.IO.Pipes.PipeSecurity> class specifies the access rights for a pipe and how access attempts are audited."},{"content":"This class represents access and audit rights as a set of rules.","pos":[123,187]},{"content":"Each access rule is represented by a <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object, while each audit rule is represented by a <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> object.","pos":[188,357],"source":" Each access rule is represented by a <xref:System.IO.Pipes.PipeAccessRule> object, while each audit rule is represented by a <xref:System.IO.Pipes.PipeAuditRule> object."}]}]},{"pos":[364,874],"content":"The <xref:System.IO.Pipes.PipeSecurity> class is an abstraction of the underlying Microsoft Windows file security system. In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.  The <xref:System.IO.Pipes.PipeAccessRule> and <xref:System.IO.Pipes.PipeAuditRule> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.","nodes":[{"content":"The <xref:System.IO.Pipes.PipeSecurity> class is an abstraction of the underlying Microsoft Windows file security system. In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.  The <xref:System.IO.Pipes.PipeAccessRule> and <xref:System.IO.Pipes.PipeAuditRule> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.","pos":[0,510],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class is an abstraction of the underlying Microsoft Windows file security system.","pos":[0,121],"source":"The <xref:System.IO.Pipes.PipeSecurity> class is an abstraction of the underlying Microsoft Windows file security system."},{"content":"In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.","pos":[122,333]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.","pos":[335,510],"source":"  The <xref:System.IO.Pipes.PipeAccessRule> and <xref:System.IO.Pipes.PipeAuditRule> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs."}]}]},{"pos":[881,1031],"content":"The <xref:System.IO.Pipes.PipeSecurity> class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.","pos":[0,150],"source":"The <xref:System.IO.Pipes.PipeSecurity> class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS."}]},{"pos":[1038,1176],"content":"Use the <xref:System.IO.Pipes.PipeSecurity> class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.","pos":[0,138],"source":"Use the <xref:System.IO.Pipes.PipeSecurity> class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe."}]},{"pos":[1183,1438],"content":"To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.","nodes":[{"content":"To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.","pos":[0,255],"nodes":[{"content":"To persist new or changed access or audit rules to a pipe, use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</ph> method.","pos":[0,128],"source":"To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method."},{"content":"To retrieve access or audit rules from an existing file, use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</ph> method.","pos":[129,255],"source":" To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method."}]}]}],"pos":[2111,3560],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> class.","nodes":[{"pos":[0,90],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> class."}],"pos":[10672,10763],"yaml":true},{"content":"This constructor creates an empty <xref:System.IO.Pipes.PipeSecurity> object that is not based on an existing pipe. You can then populate the object with access control information and apply it to a pipe.  \n  \n You can add access or audit rules to the <xref:System.IO.Pipes.PipeSecurity> object using the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method. You can remove access or audit rules using the <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method.  \n  \n To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.","nodes":[{"pos":[0,204],"content":"This constructor creates an empty <xref:System.IO.Pipes.PipeSecurity> object that is not based on an existing pipe. You can then populate the object with access control information and apply it to a pipe.","nodes":[{"content":"This constructor creates an empty <xref:System.IO.Pipes.PipeSecurity> object that is not based on an existing pipe. You can then populate the object with access control information and apply it to a pipe.","pos":[0,204],"nodes":[{"content":"This constructor creates an empty <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object that is not based on an existing pipe.","pos":[0,115],"source":"This constructor creates an empty <xref:System.IO.Pipes.PipeSecurity> object that is not based on an existing pipe."},{"content":"You can then populate the object with access control information and apply it to a pipe.","pos":[116,204]}]}]},{"pos":[211,476],"content":"You can add access or audit rules to the <xref:System.IO.Pipes.PipeSecurity> object using the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method. You can remove access or audit rules using the <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method.","nodes":[{"content":"You can add access or audit rules to the <xref:System.IO.Pipes.PipeSecurity> object using the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method. You can remove access or audit rules using the <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method.","pos":[0,265],"nodes":[{"content":"You can add access or audit rules to the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object using the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> method.","pos":[0,154],"source":"You can add access or audit rules to the <xref:System.IO.Pipes.PipeSecurity> object using the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method."},{"content":"You can remove access or audit rules using the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method.","pos":[155,265],"source":" You can remove access or audit rules using the <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method."}]}]},{"pos":[483,738],"content":"To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.","nodes":[{"content":"To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.","pos":[0,255],"nodes":[{"content":"To persist new or changed access or audit rules to a pipe, use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</ph> method.","pos":[0,128],"source":"To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method."},{"content":"To retrieve access or audit rules from an existing file, use the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</ph> method.","pos":[129,255],"source":" To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method."}]}]}],"pos":[10774,11519],"yaml":true,"extradata":"MT"},{"content":"Gets the <xref href=\"System.Type\"></xref> of the securable object that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,159],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the securable object that is associated with the current <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the <xref href=\"System.Type\"></xref> of the securable object that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[12788,12948],"yaml":true},{"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","nodes":[{"pos":[0,420],"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","nodes":[{"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[0,420],"nodes":[{"content":"Classes that derive from the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> property and return the type they use to represent access rights.","pos":[0,236],"source":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights."},{"content":"When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[237,420]}]}]}],"pos":[12959,13380],"yaml":true,"extradata":"MT"},{"content":"The type of the securable object that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,126],"content":"The type of the securable object that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The type of the securable object that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[13504,13631],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values.","nodes":[{"pos":[0,128],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> class with the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values."}],"pos":[15769,15898],"yaml":true},{"content":"The recommended way to create access control rules is to use the constructors of the <xref:System.IO.Pipes.PipeAccessRule> class.","nodes":[{"pos":[0,129],"content":"The recommended way to create access control rules is to use the constructors of the <xref:System.IO.Pipes.PipeAccessRule> class.","nodes":[{"content":"The recommended way to create access control rules is to use the constructors of the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> class.","pos":[0,129],"source":"The recommended way to create access control rules is to use the constructors of the <xref:System.IO.Pipes.PipeAccessRule> class."}]}],"pos":[15909,16039],"yaml":true,"extradata":"MT"},{"content":"The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,162],"content":"The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"content":"The identity that the access rule applies to.","pos":[0,45]},{"content":"It must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","pos":[46,162],"source":" It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]}],"pos":[16539,16702],"yaml":true},{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","nodes":[{"pos":[0,149],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","pos":[0,149],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","pos":[30,149]}]}]}],"pos":[16767,16917],"yaml":true},{"content":"`true` if this rule is inherited from a parent container; otherwise false.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if this rule is inherited from a parent container; otherwise false.","source":"`true` if this rule is inherited from a parent container; otherwise false."}],"pos":[16985,17062],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies the inheritance properties of the access rule.","nodes":[{"pos":[0,147],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;&lt;/xref&gt;</ph> values that specifies the inheritance properties of the access rule.","source":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies the inheritance properties of the access rule."}],"pos":[17167,17315],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"pos":[0,312],"content":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;&lt;/xref&gt;</ph> values that specifies whether inherited access rules are automatically propagated.","pos":[0,161],"source":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated."},{"content":"The propagation flags are ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inheritanceFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags.None\"&gt;&lt;/xref&gt;</ph>.","pos":[162,312],"source":" The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>."}]}],"pos":[17420,17733],"yaml":true},{"content":"Specifies the valid access control type.","nodes":[{"pos":[0,40],"content":"Specifies the valid access control type.","nodes":[{"content":"Specifies the valid access control type.","pos":[0,40]}]}],"pos":[17827,17868],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> object that this method creates.","source":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates."}],"pos":[17952,18051],"yaml":true},{"content":"<code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> specifies an invalid value.","nodes":[{"pos":[0,135],"content":"<ph id=\"ph1\">&lt;code&gt;accessMask&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph>, <ph id=\"ph3\">&lt;code&gt;propagationFlags&lt;/code&gt;</ph>, or <ph id=\"ph4\">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.","source":"<code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> specifies an invalid value."}],"pos":[18239,18375],"yaml":true},{"content":"<code>identityReference</code> is `null`.  \n  \n -or-  \n  \n <code>accessMask</code> is zero.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;identityReference&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>identityReference</code> is `null`."},{"pos":[48,52],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[59,91],"content":"<ph id=\"ph1\">&lt;code&gt;accessMask&lt;/code&gt;</ph> is zero.","source":"<code>accessMask</code> is zero."}],"pos":[18477,18575],"yaml":true},{"content":"<code>identityReference</code> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type, such as <xref href=\"System.Security.Principal.NTAccount\"></xref>, that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,293],"content":"<ph id=\"ph1\">&lt;code&gt;identityReference&lt;/code&gt;</ph> is neither of type <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> nor of a type, such as <ph id=\"ph3\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph>, that can be converted to type <ph id=\"ph4\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","source":"<code>identityReference</code> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type, such as <xref href=\"System.Security.Principal.NTAccount\"></xref>, that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}],"pos":[18669,18963],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> of the object that is associated with the access rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,169],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the object that is associated with the access rules of the current <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the <xref href=\"System.Type\"></xref> of the object that is associated with the access rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[20095,20265],"yaml":true},{"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","nodes":[{"pos":[0,419],"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","nodes":[{"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[0,419],"nodes":[{"content":"Classes that derive from the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> property and return the type they use to represent access rights.","pos":[0,235],"source":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rights."},{"content":"When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[236,419]}]}]}],"pos":[20276,20696],"yaml":true,"extradata":"MT"},{"content":"The type of the object that is associated with the access rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,136],"content":"The type of the object that is associated with the access rules of the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The type of the object that is associated with the access rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[20819,20956],"yaml":true},{"content":"Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,161],"content":"Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[22298,22460],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method adds a new rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.If an access control list (ACL) already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method will still add the rule, with one exception: a <xref:System.IO.Pipes.PipeAccessRule> object that is created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value supersedes an object that is created using the <xref:System.Security.AccessControl.AccessControlType.Allow> value.","nodes":[{"pos":[0,593],"content":"The <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method adds a new rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.If an access control list (ACL) already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method will still add the rule, with one exception: a <xref:System.IO.Pipes.PipeAccessRule> object that is created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value supersedes an object that is created using the <xref:System.Security.AccessControl.AccessControlType.Allow> value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> method adds a new rule to the list of rules that a <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object contains.If an access control list (ACL) already exists for the specified rule, the <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> method will still add the rule, with one exception: a <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object that is created using the <ph id=\"ph5\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value supersedes an object that is created using the <ph id=\"ph6\">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> value.","pos":[0,593],"source":"The <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method adds a new rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.If an access control list (ACL) already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method will still add the rule, with one exception: a <xref:System.IO.Pipes.PipeAccessRule> object that is created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value supersedes an object that is created using the <xref:System.Security.AccessControl.AccessControlType.Allow> value."}]}],"pos":[22471,23067],"yaml":true,"extradata":"MT"},{"content":"The access rule to add.","nodes":[{"pos":[0,23],"content":"The access rule to add.","nodes":[{"content":"The access rule to add.","pos":[0,23]}]}],"pos":[23248,23272],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[23444,23487],"yaml":true},{"content":"Adds an audit rule to the System Access Control List (SACL)that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,152],"content":"Adds an audit rule to the System Access Control List (SACL)that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Adds an audit rule to the System Access Control List (SACL)that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[24743,24896],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method adds a new audit rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.  \n  \n If an audit rule already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method will still add the rule.","nodes":[{"pos":[0,165],"content":"The <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method adds a new audit rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A&gt;</ph> method adds a new audit rule to the list of rules that a <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object contains.","pos":[0,165],"source":"The <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method adds a new audit rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains."}]},{"pos":[172,315],"content":"If an audit rule already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method will still add the rule.","nodes":[{"content":"If an audit rule already exists for the specified rule, the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A&gt;</ph> method will still add the rule.","pos":[0,143],"source":"If an audit rule already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method will still add the rule."}]}],"pos":[24907,25227],"yaml":true,"extradata":"MT"},{"content":"The audit rule to add.","nodes":[{"pos":[0,22],"content":"The audit rule to add.","nodes":[{"content":"The audit rule to add.","pos":[0,22]}]}],"pos":[25405,25428],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[25599,25642],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> class with the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values."}],"pos":[27657,27785],"yaml":true},{"content":"The recommended way to create audit rules is to use the constructors of the <xref:System.IO.Pipes.PipeAuditRule> class.","nodes":[{"pos":[0,119],"content":"The recommended way to create audit rules is to use the constructors of the <xref:System.IO.Pipes.PipeAuditRule> class.","nodes":[{"content":"The recommended way to create audit rules is to use the constructors of the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> class.","pos":[0,119],"source":"The recommended way to create audit rules is to use the constructors of the <xref:System.IO.Pipes.PipeAuditRule> class."}]}],"pos":[27796,27916],"yaml":true,"extradata":"MT"},{"content":"The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,162],"content":"The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"content":"The identity that the access rule applies to.","pos":[0,45]},{"content":"It must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","pos":[46,162],"source":" It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]}],"pos":[28415,28578],"yaml":true},{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","nodes":[{"pos":[0,149],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","pos":[0,149],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators","pos":[30,149]}]}]}],"pos":[28643,28793],"yaml":true},{"content":"`true` if this rule is inherited from a parent container; otherwise, false..","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if this rule is inherited from a parent container; otherwise, false..","source":"`true` if this rule is inherited from a parent container; otherwise, false.."}],"pos":[28861,28940],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies the inheritance properties of the access rule.","nodes":[{"pos":[0,147],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags\"&gt;&lt;/xref&gt;</ph> values that specifies the inheritance properties of the access rule.","source":"One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies the inheritance properties of the access rule."}],"pos":[29045,29193],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"pos":[0,312],"content":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.PropagationFlags\"&gt;&lt;/xref&gt;</ph> values that specifies whether inherited access rules are automatically propagated.","pos":[0,161],"source":"One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated."},{"content":"The propagation flags are ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inheritanceFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags.None\"&gt;&lt;/xref&gt;</ph>.","pos":[162,312],"source":" The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>."}]}],"pos":[29298,29611],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies the valid access control type.","nodes":[{"pos":[0,125],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditFlags\"&gt;&lt;/xref&gt;</ph> values that specifies the valid access control type.","source":"One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies the valid access control type."}],"pos":[29699,29825],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> object that this method creates.","source":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates."}],"pos":[29908,30006],"yaml":true},{"content":"The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value.","nodes":[{"pos":[0,149],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">accessMask</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">inheritanceFlags</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">propagationFlags</ph><ept id=\"p3\">&lt;/code&gt;</ept>, or <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">flags</ph><ept id=\"p4\">&lt;/code&gt;</ept> properties specify an invalid value.","source":"The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."}],"pos":[30193,30343],"yaml":true},{"content":"The <code>identityReference</code> property is `null`.  \n  \n -or-  \n  \n The <code>accessMask</code> property is zero.","nodes":[{"pos":[0,54],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identityReference</ph><ept id=\"p1\">&lt;/code&gt;</ept> property is <ph id=\"ph2\">`null`</ph>.","source":"The <code>identityReference</code> property is `null`."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,117],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">accessMask</ph><ept id=\"p1\">&lt;/code&gt;</ept> property is zero.","source":"The <code>accessMask</code> property is zero."}],"pos":[30445,30569],"yaml":true},{"content":"The <code>identityReference</code> property is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type, such as <xref href=\"System.Security.Principal.NTAccount\"></xref>, that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,306],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">identityReference</ph><ept id=\"p1\">&lt;/code&gt;</ept> property is neither of type <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> nor of a type, such as <ph id=\"ph3\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph>, that can be converted to type <ph id=\"ph4\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>identityReference</code> property is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type, such as <xref href=\"System.Security.Principal.NTAccount\"></xref>, that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}],"pos":[30663,30970],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> object associated with the audit rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,153],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object associated with the audit rules of the current <ph id=\"ph2\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the <xref href=\"System.Type\"></xref> object associated with the audit rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[32096,32250],"yaml":true},{"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","nodes":[{"pos":[0,418],"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","nodes":[{"content":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[0,418],"nodes":[{"content":"Classes that derive from the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> property and return the type they use to represent access rights.","pos":[0,234],"source":"Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent access rights."},{"content":"When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.","pos":[235,418]}]}]}],"pos":[32261,32680],"yaml":true,"extradata":"MT"},{"content":"The type of the object that is associated with the audit rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,135],"content":"The type of the object that is associated with the audit rules of the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The type of the object that is associated with the audit rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[32802,32938],"yaml":true},{"content":"Saves the specified sections of the security descriptor that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to permanent storage.","nodes":[{"pos":[0,170],"content":"Saves the specified sections of the security descriptor that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object to permanent storage.","source":"Saves the specified sections of the security descriptor that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to permanent storage."}],"pos":[34168,34339],"yaml":true},{"content":"The name of the securable object that the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object is associated with.","nodes":[{"pos":[0,126],"content":"The name of the securable object that the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object is associated with.","source":"The name of the securable object that the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object is associated with."}],"pos":[34476,34603],"yaml":true},{"content":"Saves the specified sections of the security descriptor that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to permanent storage.","nodes":[{"pos":[0,170],"content":"Saves the specified sections of the security descriptor that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object to permanent storage.","source":"Saves the specified sections of the security descriptor that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to permanent storage."}],"pos":[35923,36094],"yaml":true},{"content":"The handle of the securable object that the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object is associated with.","nodes":[{"pos":[0,128],"content":"The handle of the securable object that the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object is associated with.","source":"The handle of the securable object that the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object is associated with."}],"pos":[36298,36427],"yaml":true},{"content":"Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,166],"content":"Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[37780,37947],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account. The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.","nodes":[{"pos":[0,890],"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account. The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.","nodes":[{"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account. The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.","pos":[0,890],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes either all matching <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules or all matching <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rules from the current <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.","pos":[0,318],"source":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object."},{"content":"For example, you can use this method to remove all <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules for a user by passing a <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object created using the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, and a user account.","pos":[319,672],"source":" For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes any deny rules that specify the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value or the <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value.","pos":[673,890],"source":" The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value."}]}]}],"pos":[37958,38849],"yaml":true,"extradata":"MT"},{"content":"The access rule to remove.","nodes":[{"pos":[0,26],"content":"The access rule to remove.","nodes":[{"content":"The access rule to remove.","pos":[0,26]}]}],"pos":[39033,39060],"yaml":true},{"content":"`true` if the operation is successful; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the operation is successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the operation is successful; otherwise, `false`."}],"pos":[39118,39179],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[39354,39397],"yaml":true},{"content":"Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,177],"content":"Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[40731,40909],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account. The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.","nodes":[{"pos":[0,890],"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account. The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.","nodes":[{"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account. The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.","pos":[0,890],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes either all matching <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules or all matching <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rules from the current <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.","pos":[0,318],"source":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object."},{"content":"For example, you can use this method to remove all <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules for a user by passing a <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object created using the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, and a user account.","pos":[319,672],"source":" For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes any deny rules that specify the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value or the <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value.","pos":[673,890],"source":" The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value."}]}]}],"pos":[40920,41811],"yaml":true,"extradata":"MT"},{"content":"The access rule to remove.","nodes":[{"pos":[0,26],"content":"The access rule to remove.","nodes":[{"content":"The access rule to remove.","pos":[0,26]}]}],"pos":[42003,42030],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[42213,42256],"yaml":true},{"content":"Removes an audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,158],"content":"Removes an audit rule from the System Access Control List (SACL) that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes an audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[43530,43689],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value.","nodes":[{"pos":[0,956],"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value.","nodes":[{"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value.","pos":[0,956],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A&gt;</ph> method removes either all matching <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rules or all matching <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> audit rules from the current <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.","pos":[0,315],"source":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.IO.Pipes.PipeSecurity> object."},{"content":"For example, you can use this method to remove all <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rules for a user by passing a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> object created using the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value, and a user account.","pos":[317,699],"source":"  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account."},{"content":"When you do this, the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A&gt;</ph> method removes any deny rules that specify the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value or the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> value.","pos":[701,956],"source":"  When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value."}]}]}],"pos":[43700,44657],"yaml":true,"extradata":"MT"},{"content":"The audit rule to remove.","nodes":[{"pos":[0,25],"content":"The audit rule to remove.","nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]}],"pos":[44838,44864],"yaml":true},{"content":"`true` if the audit rule was removed; otherwise, `false`","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the audit rule was removed; otherwise, <ph id=\"ph2\">`false`</ph>","source":"`true` if the audit rule was removed; otherwise, `false`"}],"pos":[44922,44981],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[45155,45198],"yaml":true},{"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,227],"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[46490,46718],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user.  It ignores all values in the <xref:System.IO.Pipes.PipeAuditRule> object except the user account.","nodes":[{"pos":[0,215],"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user.  It ignores all values in the <xref:System.IO.Pipes.PipeAuditRule> object except the user account.","nodes":[{"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user.  It ignores all values in the <xref:System.IO.Pipes.PipeAuditRule> object except the user account.","pos":[0,215],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A&gt;</ph> method removes all audit rules for the specified user.","pos":[0,116],"source":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user."},{"content":"It ignores all values in the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> object except the user account.","pos":[118,215],"source":"  It ignores all values in the <xref:System.IO.Pipes.PipeAuditRule> object except the user account."}]}]}],"pos":[46729,46945],"yaml":true,"extradata":"MT"},{"content":"The audit rule to remove.","nodes":[{"pos":[0,25],"content":"The audit rule to remove.","nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]}],"pos":[47129,47155],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[47332,47375],"yaml":true},{"content":"Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,169],"content":"Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[48697,48867],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value.","nodes":[{"pos":[0,1040],"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value.","nodes":[{"content":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value.","pos":[0,1040],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method removes the specified matching <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rule or the specified matching <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> audit rule from the current <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.","pos":[0,334],"source":"The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.IO.Pipes.PipeSecurity> object."},{"content":"For example, you can use this method to remove a specified <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rule for a user by passing a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> object created using the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value, and a user account.","pos":[336,725],"source":"  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account."},{"content":"When you do this, the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method removes only a deny rule that specifies the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value.","pos":[727,925],"source":"  When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value."},{"content":"It does not remove any deny rules that specify the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> value.","pos":[927,1040],"source":"  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value."}]}]}],"pos":[48878,49919],"yaml":true,"extradata":"MT"},{"content":"The audit rule to remove.","nodes":[{"pos":[0,25],"content":"The audit rule to remove.","nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]}],"pos":[50108,50134],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[50316,50359],"yaml":true},{"content":"Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object and then adds the specified access rule.","nodes":[{"pos":[0,206],"content":"Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object and then adds the specified access rule.","source":"Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object and then adds the specified access rule."}],"pos":[51639,51846],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.  If the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will also be overwritten.","nodes":[{"pos":[0,711],"content":"The <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.  If the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will also be overwritten.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <ph id=\"ph2\">`rule`</ph> parameter.","pos":[0,186],"source":"The <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter."},{"content":"For example, if the <ph id=\"ph1\">`rule`</ph> parameter specifies a <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value and the <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, the identical rule will be overwritten.","pos":[188,496],"source":"  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value, the identical rule will also be overwritten.","pos":[498,711],"source":"  If the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will also be overwritten."}]}],"pos":[51857,52569],"yaml":true,"extradata":"MT"},{"content":"The access rule to add.","nodes":[{"pos":[0,23],"content":"The access rule to add.","nodes":[{"content":"The access rule to add.","pos":[0,23]}]}],"pos":[52752,52776],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[52950,52993],"yaml":true},{"content":"Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,161],"content":"Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[54261,54423],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.  If the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten.","nodes":[{"pos":[0,757],"content":"The <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.  If the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights&gt;</ph> value of the <ph id=\"ph3\">`rule`</ph> parameter.","pos":[0,237],"source":"The <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter."},{"content":"For example, if the <ph id=\"ph1\">`rule`</ph> parameter specifies a <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value and the <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, the identical rule will be overwritten.","pos":[239,545],"source":"  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value, the identical rule will not be overwritten.","pos":[547,757],"source":"  If the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten."}]}],"pos":[54434,55192],"yaml":true,"extradata":"MT"},{"content":"The rule to set.","nodes":[{"pos":[0,16],"content":"The rule to set.","nodes":[{"content":"The rule to set.","pos":[0,16]}]}],"pos":[55373,55390],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[55562,55605],"yaml":true},{"content":"Sets an audit rule in the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.","nodes":[{"pos":[0,153],"content":"Sets an audit rule in the System Access Control List (SACL) that is associated with the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Pipes.PipeSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Sets an audit rule in the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object."}],"pos":[56861,57015],"yaml":true},{"content":"The <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.  If the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten.","nodes":[{"pos":[0,740],"content":"The <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.  If the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> method adds the specified audit rule or overwrites any identical audit rules that match the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights&gt;</ph> value of the <ph id=\"ph3\">`rule`</ph> parameter.","pos":[0,218],"source":"The <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter."},{"content":"For example, if the <ph id=\"ph1\">`rule`</ph> parameter specifies a <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value and the <ph id=\"ph3\">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> method finds an identical audit rule that specifies the <ph id=\"ph4\">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, the identical rule will be overwritten.","pos":[220,527],"source":"  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> method finds an identical audit rule that specifies the <ph id=\"ph2\">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value, the identical rule will not be overwritten.","pos":[529,740],"source":"  If the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten."}]}],"pos":[57026,57767],"yaml":true,"extradata":"MT"},{"content":"The rule to set.","nodes":[{"pos":[0,16],"content":"The rule to set.","nodes":[{"content":"The rule to set.","pos":[0,16]}]}],"pos":[57945,57962],"yaml":true},{"content":"The <code>rule</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rule</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rule</code> parameter is `null`."}],"pos":[58133,58176],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Pipes.PipeSecurity\n  commentId: T:System.IO.Pipes.PipeSecurity\n  id: PipeSecurity\n  children:\n  - System.IO.Pipes.PipeSecurity.#ctor\n  - System.IO.Pipes.PipeSecurity.AccessRightType\n  - System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.IO.Pipes.PipeSecurity.AccessRuleType\n  - System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.IO.Pipes.PipeSecurity.AuditRuleType\n  - System.IO.Pipes.PipeSecurity.Persist(System.String)\n  - System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)\n  - System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  - System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  - System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  langs:\n  - csharp\n  name: PipeSecurity\n  nameWithType: PipeSecurity\n  fullName: System.IO.Pipes.PipeSecurity\n  type: Class\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Represents the access control and audit security for a pipe.\n  remarks: \"The <xref:System.IO.Pipes.PipeSecurity> class specifies the access rights for a pipe and how access attempts are audited.  This class represents access and audit rights as a set of rules. Each access rule is represented by a <xref:System.IO.Pipes.PipeAccessRule> object, while each audit rule is represented by a <xref:System.IO.Pipes.PipeAuditRule> object.  \\n  \\n The <xref:System.IO.Pipes.PipeSecurity> class is an abstraction of the underlying Microsoft Windows file security system. In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.  The <xref:System.IO.Pipes.PipeAccessRule> and <xref:System.IO.Pipes.PipeAuditRule> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.  \\n  \\n The <xref:System.IO.Pipes.PipeSecurity> class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.  \\n  \\n Use the <xref:System.IO.Pipes.PipeSecurity> class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.  \\n  \\n To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.\"\n  syntax:\n    content: 'public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.CommonObjectSecurity\n  - System.Security.AccessControl.NativeObjectSecurity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.#ctor\n  commentId: M:System.IO.Pipes.PipeSecurity.#ctor\n  id: '#ctor'\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: PipeSecurity()\n  nameWithType: PipeSecurity.PipeSecurity()\n  fullName: PipeSecurity.PipeSecurity()\n  type: Constructor\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> class.\n  remarks: \"This constructor creates an empty <xref:System.IO.Pipes.PipeSecurity> object that is not based on an existing pipe. You can then populate the object with access control information and apply it to a pipe.  \\n  \\n You can add access or audit rules to the <xref:System.IO.Pipes.PipeSecurity> object using the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method. You can remove access or audit rules using the <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method.  \\n  \\n To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method. To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.\"\n  syntax:\n    content: public PipeSecurity ();\n    parameters: []\n  overload: System.IO.Pipes.PipeSecurity.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.AccessRightType\n  commentId: P:System.IO.Pipes.PipeSecurity.AccessRightType\n  id: AccessRightType\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AccessRightType\n  nameWithType: PipeSecurity.AccessRightType\n  fullName: PipeSecurity.AccessRightType\n  type: Property\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Gets the <xref href=\"System.Type\"></xref> of the securable object that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.\n  syntax:\n    content: public override Type AccessRightType { get; }\n    return:\n      type: System.Type\n      description: The type of the securable object that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  overload: System.IO.Pipes.PipeSecurity.AccessRightType*\n  exceptions: []\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: PipeSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values.\n  remarks: The recommended way to create access control rules is to use the constructors of the <xref:System.IO.Pipes.PipeAccessRule> class.\n  syntax:\n    content: public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators\n    - id: isInherited\n      type: System.Boolean\n      description: '`true` if this rule is inherited from a parent container; otherwise false.'\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies the inheritance properties of the access rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Specifies the valid access control type.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates.\n  overload: System.IO.Pipes.PipeSecurity.AccessRuleFactory*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> specifies an invalid value.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>identityReference</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>accessMask</code> is zero.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>identityReference</code> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type, such as <xref href=\"System.Security.Principal.NTAccount\"></xref>, that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleType\n  commentId: P:System.IO.Pipes.PipeSecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AccessRuleType\n  nameWithType: PipeSecurity.AccessRuleType\n  fullName: PipeSecurity.AccessRuleType\n  type: Property\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Gets the <xref href=\"System.Type\"></xref> of the object that is associated with the access rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    return:\n      type: System.Type\n      description: The type of the object that is associated with the access rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  overload: System.IO.Pipes.PipeSecurity.AccessRuleType*\n  exceptions: []\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AddAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)\n  fullName: PipeSecurity.AddAccessRule(PipeAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: 'The <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method adds a new rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.If an access control list (ACL) already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method will still add the rule, with one exception: a <xref:System.IO.Pipes.PipeAccessRule> object that is created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value supersedes an object that is created using the <xref:System.Security.AccessControl.AccessControlType.Allow> value.'\n  syntax:\n    content: public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: The access rule to add.\n  overload: System.IO.Pipes.PipeSecurity.AddAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  id: AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AddAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)\n  fullName: PipeSecurity.AddAuditRule(PipeAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Adds an audit rule to the System Access Control List (SACL)that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: \"The <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method adds a new audit rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.  \\n  \\n If an audit rule already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method will still add the rule.\"\n  syntax:\n    content: public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: The audit rule to add.\n  overload: System.IO.Pipes.PipeSecurity.AddAuditRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: PipeSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values.\n  remarks: The recommended way to create audit rules is to use the constructors of the <xref:System.IO.Pipes.PipeAuditRule> class.\n  syntax:\n    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity that the access rule applies to. It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators\n    - id: isInherited\n      type: System.Boolean\n      description: '`true` if this rule is inherited from a parent container; otherwise, false..'\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: One of the <xref href=\"System.Security.AccessControl.InheritanceFlags\"></xref> values that specifies the inheritance properties of the access rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: One of the <xref href=\"System.Security.AccessControl.PropagationFlags\"></xref> values that specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: One of the <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values that specifies the valid access control type.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates.\n  overload: System.IO.Pipes.PipeSecurity.AuditRuleFactory*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>identityReference</code> property is `null`.  \\n  \\n -or-  \\n  \\n The <code>accessMask</code> property is zero.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>identityReference</code> property is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type, such as <xref href=\"System.Security.Principal.NTAccount\"></xref>, that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleType\n  commentId: P:System.IO.Pipes.PipeSecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: AuditRuleType\n  nameWithType: PipeSecurity.AuditRuleType\n  fullName: PipeSecurity.AuditRuleType\n  type: Property\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Gets the <xref href=\"System.Type\"></xref> object associated with the audit rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent access rights. When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    return:\n      type: System.Type\n      description: The type of the object that is associated with the audit rules of the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  overload: System.IO.Pipes.PipeSecurity.AuditRuleType*\n  exceptions: []\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)\n  commentId: M:System.IO.Pipes.PipeSecurity.Persist(System.String)\n  id: Persist(System.String)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: Persist(String)\n  nameWithType: PipeSecurity.Persist(String)\n  fullName: PipeSecurity.Persist(String)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Saves the specified sections of the security descriptor that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to permanent storage.\n  syntax:\n    content: protected void Persist (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the securable object that the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object is associated with.\n  overload: System.IO.Pipes.PipeSecurity.Persist*\n  exceptions: []\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)\n  commentId: M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)\n  id: Persist(System.Runtime.InteropServices.SafeHandle)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: Persist(SafeHandle)\n  nameWithType: PipeSecurity.Persist(SafeHandle)\n  fullName: PipeSecurity.Persist(SafeHandle)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Saves the specified sections of the security descriptor that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object to permanent storage.\n  syntax:\n    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle);\n    parameters:\n    - id: handle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: The handle of the securable object that the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object is associated with.\n  overload: System.IO.Pipes.PipeSecurity.Persist*\n  exceptions: []\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)\n  fullName: PipeSecurity.RemoveAccessRule(PipeAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account. The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.\n  syntax:\n    content: public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: The access rule to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the operation is successful; otherwise, `false`.'\n  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  id: RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleSpecific(PipeAccessRule)\n  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)\n  fullName: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object. For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account. The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.\n  syntax:\n    content: public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: The access rule to remove.\n  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  id: RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)\n  fullName: PipeSecurity.RemoveAuditRule(PipeAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes an audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value.\n  syntax:\n    content: public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: The audit rule to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the audit rule was removed; otherwise, `false`'\n  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  id: RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleAll(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)\n  fullName: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user.  It ignores all values in the <xref:System.IO.Pipes.PipeAuditRule> object except the user account.\n  syntax:\n    content: public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: The audit rule to remove.\n  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  id: RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleSpecific(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)\n  fullName: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.IO.Pipes.PipeSecurity> object.  For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.  When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value.  It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value.\n  syntax:\n    content: public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: The audit rule to remove.\n  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: ResetAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)\n  fullName: PipeSecurity.ResetAccessRule(PipeAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object and then adds the specified access rule.\n  remarks: The <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.  If the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will also be overwritten.\n  syntax:\n    content: public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: The access rule to add.\n  overload: System.IO.Pipes.PipeSecurity.ResetAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  id: SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: SetAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)\n  fullName: PipeSecurity.SetAccessRule(PipeAccessRule)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.  If the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten.\n  syntax:\n    content: public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAccessRule\n      description: The rule to set.\n  overload: System.IO.Pipes.PipeSecurity.SetAccessRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  commentId: M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  id: SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  langs:\n  - csharp\n  name: SetAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)\n  fullName: PipeSecurity.SetAuditRule(PipeAuditRule)\n  type: Method\n  assemblies:\n  - System.IO.Pipes.AccessControl\n  - System.Core\n  namespace: System.IO.Pipes\n  summary: Sets an audit rule in the System Access Control List (SACL) that is associated with the current <xref href=\"System.IO.Pipes.PipeSecurity\"></xref> object.\n  remarks: The <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.  For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.  If the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten.\n  syntax:\n    content: public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.IO.Pipes.PipeAuditRule\n      description: The rule to set.\n  overload: System.IO.Pipes.PipeSecurity.SetAuditRule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>rule</code> parameter is `null`.\n  version:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.NativeObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: NativeObjectSecurity\n  nameWithType: NativeObjectSecurity\n  fullName: System.Security.AccessControl.NativeObjectSecurity\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.IO.Pipes.PipeSecurity.#ctor\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: PipeSecurity()\n  nameWithType: PipeSecurity.PipeSecurity()\n  fullName: PipeSecurity.PipeSecurity()\n- uid: System.IO.Pipes.PipeSecurity.AccessRightType\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: PipeSecurity.AccessRightType\n  fullName: PipeSecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: PipeSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleType\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: PipeSecurity.AccessRuleType\n  fullName: PipeSecurity.AccessRuleType\n- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AddAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)\n  fullName: PipeSecurity.AddAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeAccessRule\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRule\n  nameWithType: PipeAccessRule\n  fullName: System.IO.Pipes.PipeAccessRule\n- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AddAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)\n  fullName: PipeSecurity.AddAuditRule(PipeAuditRule)\n- uid: System.IO.Pipes.PipeAuditRule\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAuditRule\n  nameWithType: PipeAuditRule\n  fullName: System.IO.Pipes.PipeAuditRule\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: PipeSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleType\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: PipeSecurity.AuditRuleType\n  fullName: PipeSecurity.AuditRuleType\n- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: Persist(String)\n  nameWithType: PipeSecurity.Persist(String)\n  fullName: PipeSecurity.Persist(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: Persist(SafeHandle)\n  nameWithType: PipeSecurity.Persist(SafeHandle)\n  fullName: PipeSecurity.Persist(SafeHandle)\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)\n  fullName: PipeSecurity.RemoveAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(PipeAccessRule)\n  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)\n  fullName: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)\n  fullName: PipeSecurity.RemoveAuditRule(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)\n  fullName: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(PipeAuditRule)\n  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)\n  fullName: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: ResetAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)\n  fullName: PipeSecurity.ResetAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: SetAccessRule(PipeAccessRule)\n  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)\n  fullName: PipeSecurity.SetAccessRule(PipeAccessRule)\n- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: SetAuditRule(PipeAuditRule)\n  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)\n  fullName: PipeSecurity.SetAuditRule(PipeAuditRule)\n- uid: System.IO.Pipes.PipeSecurity.#ctor*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: PipeSecurity\n  nameWithType: PipeSecurity.PipeSecurity\n  fullName: PipeSecurity.PipeSecurity\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.AccessRightType*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: PipeSecurity.AccessRightType\n  fullName: PipeSecurity.AccessRightType\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRuleFactory\n  nameWithType: PipeSecurity.AccessRuleFactory\n  fullName: PipeSecurity.AccessRuleFactory\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.AccessRuleType*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: PipeSecurity.AccessRuleType\n  fullName: PipeSecurity.AccessRuleType\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.AddAccessRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AddAccessRule\n  nameWithType: PipeSecurity.AddAccessRule\n  fullName: PipeSecurity.AddAccessRule\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.AddAuditRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AddAuditRule\n  nameWithType: PipeSecurity.AddAuditRule\n  fullName: PipeSecurity.AddAuditRule\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AuditRuleFactory\n  nameWithType: PipeSecurity.AuditRuleFactory\n  fullName: PipeSecurity.AuditRuleFactory\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.AuditRuleType*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: PipeSecurity.AuditRuleType\n  fullName: PipeSecurity.AuditRuleType\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.Persist*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: Persist\n  nameWithType: PipeSecurity.Persist\n  fullName: PipeSecurity.Persist\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAccessRule\n  nameWithType: PipeSecurity.RemoveAccessRule\n  fullName: PipeSecurity.RemoveAccessRule\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific\n  nameWithType: PipeSecurity.RemoveAccessRuleSpecific\n  fullName: PipeSecurity.RemoveAccessRuleSpecific\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRule\n  nameWithType: PipeSecurity.RemoveAuditRule\n  fullName: PipeSecurity.RemoveAuditRule\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll\n  nameWithType: PipeSecurity.RemoveAuditRuleAll\n  fullName: PipeSecurity.RemoveAuditRuleAll\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific\n  nameWithType: PipeSecurity.RemoveAuditRuleSpecific\n  fullName: PipeSecurity.RemoveAuditRuleSpecific\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: ResetAccessRule\n  nameWithType: PipeSecurity.ResetAccessRule\n  fullName: PipeSecurity.ResetAccessRule\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.SetAccessRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: SetAccessRule\n  nameWithType: PipeSecurity.SetAccessRule\n  fullName: PipeSecurity.SetAccessRule\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.IO.Pipes.PipeSecurity.SetAuditRule*\n  parent: System.IO.Pipes.PipeSecurity\n  isExternal: false\n  name: SetAuditRule\n  nameWithType: PipeSecurity.SetAuditRule\n  fullName: PipeSecurity.SetAuditRule\n  monikers:\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Pipes/PipeSecurity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n  fullName: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n  fullName: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n  fullName: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n  fullName: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n  fullName: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n  fullName: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetGroup(Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n  fullName: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetOwner(Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n  fullName: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n  fullName: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n  fullName: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n  fullName: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n  fullName: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n  fullName: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle, AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n  fullName: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(String, AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections)\n  fullName: NativeObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(Boolean, String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  nameWithType: ObjectSecurity.ReadLock()\n  fullName: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  nameWithType: ObjectSecurity.ReadUnlock()\n  fullName: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetGroup(IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n  fullName: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetOwner(IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n  fullName: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  nameWithType: ObjectSecurity.WriteLock()\n  fullName: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  nameWithType: ObjectSecurity.WriteUnlock()\n  fullName: ObjectSecurity.WriteUnlock()\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.AddAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.AddAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAccessRules(Boolean, Boolean, Type)\n  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n  fullName: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAuditRules(Boolean, Boolean, Type)\n  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n  fullName: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.ResetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.SetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.SetAuditRule(AuditRule)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle, AccessControlSections, Object)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n  fullName: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(String, AccessControlSections, Object)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n  fullName: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n"}