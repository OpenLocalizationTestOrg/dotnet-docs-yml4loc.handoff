{"nodes":[{"content":"The exception that is thrown when an attempt to access a class member fails.","nodes":[{"pos":[0,76],"content":"The exception that is thrown when an attempt to access a class member fails.","nodes":[{"content":"The exception that is thrown when an attempt to access a class member fails.","pos":[0,76]}]}],"pos":[689,766],"yaml":true},{"content":"<xref:System.MemberAccessException> is the base class for <xref:System.FieldAccessException>, <xref:System.MethodAccessException>, <xref:System.MissingMemberException>, <xref:System.MissingMethodException>, and <xref:System.MissingFieldException>, and  ([!INCLUDE[net_native](~/includes/net-native-md.md)] only). These exceptions are thrown when a class member is not found or access to the member is not permitted.  \n  \n <xref:System.MemberAccessException> is thrown by the following methods:  \n  \n <xref:System.Reflection.MethodBase.Invoke%2A> of the <xref:System.Reflection> classes, <xref:System.Reflection.FieldInfo.GetValue%2A> of the <xref:System.Reflection.FieldInfo> class, and <xref:System.Delegate.DynamicInvoke%2A> of the <xref:System.Delegate> class.  \n  \n Apps compiled by using the [!INCLUDE[net_native](~/includes/net-native-md.md)] tool chain may throw a  exception at runtime.  is an internal-only exception type derived from <xref:System.MemberAccessException>. The exception indicates that metadata needed for the successful execution of an app is not present at runtime. You should not use a `try`/`catch` block to handle the exception. Instead, you should determine what metadata is missing and modify your app's  to ensure that it is present at runtime.  \n  \n <xref:System.MemberAccessException> uses the HRESULT COR_E_MEMBERACCESS, that has the value 0x8013151A.  \n  \n For a list of initial property values for an instance of <xref:System.MemberAccessException>, see the <xref:System.MemberAccessException> constructors.","nodes":[{"pos":[0,415],"content":"<xref:System.MemberAccessException> is the base class for <xref:System.FieldAccessException>, <xref:System.MethodAccessException>, <xref:System.MissingMemberException>, <xref:System.MissingMethodException>, and <xref:System.MissingFieldException>, and  ([!INCLUDE[net_native](~/includes/net-native-md.md)] only). These exceptions are thrown when a class member is not found or access to the member is not permitted.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.MemberAccessException&gt;</ph> is the base class for <ph id=\"ph2\">&lt;xref:System.FieldAccessException&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.MethodAccessException&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.MissingMemberException&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.MissingMethodException&gt;</ph>, and <ph id=\"ph6\">&lt;xref:System.MissingFieldException&gt;</ph>, and  (<ph id=\"ph7\">[!INCLUDE[net_native](~/includes/net-native-md.md)]</ph> only).","pos":[0,312],"source":"<xref:System.MemberAccessException> is the base class for <xref:System.FieldAccessException>, <xref:System.MethodAccessException>, <xref:System.MissingMemberException>, <xref:System.MissingMethodException>, and <xref:System.MissingFieldException>, and  ([!INCLUDE[net_native](~/includes/net-native-md.md)] only)."},{"content":"These exceptions are thrown when a class member is not found or access to the member is not permitted.","pos":[313,415]}]},{"pos":[422,493],"content":"<xref:System.MemberAccessException> is thrown by the following methods:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.MemberAccessException&gt;</ph> is thrown by the following methods:","pos":[0,71],"source":"<xref:System.MemberAccessException> is thrown by the following methods:"}]},{"pos":[500,763],"content":"<xref:System.Reflection.MethodBase.Invoke%2A> of the <xref:System.Reflection> classes, <xref:System.Reflection.FieldInfo.GetValue%2A> of the <xref:System.Reflection.FieldInfo> class, and <xref:System.Delegate.DynamicInvoke%2A> of the <xref:System.Delegate> class.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.Invoke%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Reflection&gt;</ph> classes, <ph id=\"ph3\">&lt;xref:System.Reflection.FieldInfo.GetValue%2A&gt;</ph> of the <ph id=\"ph4\">&lt;xref:System.Reflection.FieldInfo&gt;</ph> class, and <ph id=\"ph5\">&lt;xref:System.Delegate.DynamicInvoke%2A&gt;</ph> of the <ph id=\"ph6\">&lt;xref:System.Delegate&gt;</ph> class.","pos":[0,263],"source":"<xref:System.Reflection.MethodBase.Invoke%2A> of the <xref:System.Reflection> classes, <xref:System.Reflection.FieldInfo.GetValue%2A> of the <xref:System.Reflection.FieldInfo> class, and <xref:System.Delegate.DynamicInvoke%2A> of the <xref:System.Delegate> class."}]},{"pos":[770,1276],"content":"Apps compiled by using the [!INCLUDE[net_native](~/includes/net-native-md.md)] tool chain may throw a  exception at runtime.  is an internal-only exception type derived from <xref:System.MemberAccessException>. The exception indicates that metadata needed for the successful execution of an app is not present at runtime. You should not use a `try`/`catch` block to handle the exception. Instead, you should determine what metadata is missing and modify your app's  to ensure that it is present at runtime.","nodes":[{"content":"Apps compiled by using the <ph id=\"ph1\">[!INCLUDE[net_native](~/includes/net-native-md.md)]</ph> tool chain may throw a  exception at runtime.","pos":[0,124],"source":"Apps compiled by using the [!INCLUDE[net_native](~/includes/net-native-md.md)] tool chain may throw a  exception at runtime."},{"content":"is an internal-only exception type derived from <ph id=\"ph1\">&lt;xref:System.MemberAccessException&gt;</ph>.","pos":[126,210],"source":"  is an internal-only exception type derived from <xref:System.MemberAccessException>."},{"content":"The exception indicates that metadata needed for the successful execution of an app is not present at runtime.","pos":[211,321]},{"content":"You should not use a <ph id=\"ph1\">`try`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`catch`</ph> block to handle the exception.","pos":[322,387],"source":" You should not use a `try`/`catch` block to handle the exception."},{"content":"Instead, you should determine what metadata is missing and modify your app's  to ensure that it is present at runtime.","pos":[388,506]}]},{"pos":[1283,1386],"content":"<xref:System.MemberAccessException> uses the HRESULT COR_E_MEMBERACCESS, that has the value 0x8013151A.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.MemberAccessException&gt;</ph> uses the HRESULT COR_E_MEMBERACCESS, that has the value 0x8013151A.","pos":[0,103],"source":"<xref:System.MemberAccessException> uses the HRESULT COR_E_MEMBERACCESS, that has the value 0x8013151A."}]},{"pos":[1393,1544],"content":"For a list of initial property values for an instance of <xref:System.MemberAccessException>, see the <xref:System.MemberAccessException> constructors.","nodes":[{"content":"For a list of initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.MemberAccessException&gt;</ph>, see the <ph id=\"ph2\">&lt;xref:System.MemberAccessException&gt;</ph> constructors.","pos":[0,151],"source":"For a list of initial property values for an instance of <xref:System.MemberAccessException>, see the <xref:System.MemberAccessException> constructors."}]}],"pos":[777,2334],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class.","nodes":[{"pos":[0,90],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.MemberAccessException\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class."}],"pos":[4989,5080],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Cannot access member.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.MemberAccessException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|","nodes":[{"pos":[0,243],"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Cannot access member.\" This message takes into account the current system culture.","nodes":[{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Cannot access member.\" This message takes into account the current system culture.","pos":[0,243],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as \"Cannot access member.\"","pos":[0,183],"source":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Cannot access member.\""},{"content":"This message takes into account the current system culture.","pos":[184,243]}]}]},{"pos":[250,359],"content":"The following table shows the initial property values for an instance of <xref:System.MemberAccessException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.MemberAccessException&gt;</ph>.","pos":[0,109],"source":"The following table shows the initial property values for an instance of <xref:System.MemberAccessException>."}]},{"pos":[366,374],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[375,380],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[416,457],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[458,503],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"A null reference (`Nothing` in Visual Basic)."},{"pos":[508,542],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[543,578],"content":"The localized error message string.","nodes":[{"content":"The localized error message string.","pos":[0,35]}]}],"pos":[5091,5682],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class with a specified error message.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.MemberAccessException\"&gt;&lt;/xref&gt;</ph> class with a specified error message.","source":"Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class with a specified error message."}],"pos":[7384,7506],"yaml":true},{"content":"The content of `message` should be understood by the user. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.MemberAccessException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,179],"content":"The content of `message` should be understood by the user. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The content of <ph id=\"ph1\">`message`</ph> should be understood by the user.","pos":[0,58],"source":"The content of `message` should be understood by the user."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[59,179]}]},{"pos":[186,295],"content":"The following table shows the initial property values for an instance of <xref:System.MemberAccessException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.MemberAccessException&gt;</ph>.","pos":[0,109],"source":"The following table shows the initial property values for an instance of <xref:System.MemberAccessException>."}]},{"pos":[302,310],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[311,316],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[352,393],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[394,439],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"A null reference (`Nothing` in Visual Basic)."},{"pos":[444,478],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[479,504],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[7517,8032],"yaml":true,"extradata":"MT"},{"content":"The message that describes the error.","nodes":[{"pos":[0,37],"content":"The message that describes the error.","nodes":[{"content":"The message that describes the error.","pos":[0,37]}]}],"pos":[8181,8219],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class with serialized data.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.MemberAccessException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class with serialized data."}],"pos":[10170,10282],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"pos":[0,231],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML and SOAP Serialization<ept id=\"p1\">](~/docs/framework/serialization/xml-and-soap-serialization.md)</ept>.","pos":[114,231],"source":" For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md)."}]}],"pos":[10293,10525],"yaml":true,"extradata":"MT"},{"content":"The object that holds the serialized object data.","nodes":[{"pos":[0,49],"content":"The object that holds the serialized object data.","nodes":[{"content":"The object that holds the serialized object data.","pos":[0,49]}]}],"pos":[10799,10849],"yaml":true},{"content":"The contextual information about the source or destination.","nodes":[{"pos":[0,59],"content":"The contextual information about the source or destination.","nodes":[{"content":"The contextual information about the source or destination.","pos":[0,59]}]}],"pos":[10944,11004],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,196],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.MemberAccessException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[12371,12568],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.MemberAccessException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,462],"content":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,179],"source":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic) if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[180,462],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[469,578],"content":"The following table shows the initial property values for an instance of <xref:System.MemberAccessException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.MemberAccessException&gt;</ph>.","pos":[0,109],"source":"The following table shows the initial property values for an instance of <xref:System.MemberAccessException>."}]},{"pos":[585,593],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[594,599],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[635,676],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[677,707],"content":"The inner exception reference.","nodes":[{"content":"The inner exception reference.","pos":[0,30]}]},{"pos":[712,746],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[747,772],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[12579,13362],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[13528,13590],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,231],"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic), the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,231],"source":" If the <code>inner</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[13654,13886],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.MemberAccessException\n  commentId: T:System.MemberAccessException\n  id: MemberAccessException\n  children:\n  - System.MemberAccessException.#ctor\n  - System.MemberAccessException.#ctor(System.String)\n  - System.MemberAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.MemberAccessException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: MemberAccessException\n  nameWithType: MemberAccessException\n  fullName: System.MemberAccessException\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: The exception that is thrown when an attempt to access a class member fails.\n  remarks: \"<xref:System.MemberAccessException> is the base class for <xref:System.FieldAccessException>, <xref:System.MethodAccessException>, <xref:System.MissingMemberException>, <xref:System.MissingMethodException>, and <xref:System.MissingFieldException>, and  ([!INCLUDE[net_native](~/includes/net-native-md.md)] only). These exceptions are thrown when a class member is not found or access to the member is not permitted.  \\n  \\n <xref:System.MemberAccessException> is thrown by the following methods:  \\n  \\n <xref:System.Reflection.MethodBase.Invoke%2A> of the <xref:System.Reflection> classes, <xref:System.Reflection.FieldInfo.GetValue%2A> of the <xref:System.Reflection.FieldInfo> class, and <xref:System.Delegate.DynamicInvoke%2A> of the <xref:System.Delegate> class.  \\n  \\n Apps compiled by using the [!INCLUDE[net_native](~/includes/net-native-md.md)] tool chain may throw a  exception at runtime.  is an internal-only exception type derived from <xref:System.MemberAccessException>. The exception indicates that metadata needed for the successful execution of an app is not present at runtime. You should not use a `try`/`catch` block to handle the exception. Instead, you should determine what metadata is missing and modify your app's  to ensure that it is present at runtime.  \\n  \\n <xref:System.MemberAccessException> uses the HRESULT COR_E_MEMBERACCESS, that has the value 0x8013151A.  \\n  \\n For a list of initial property values for an instance of <xref:System.MemberAccessException>, see the <xref:System.MemberAccessException> constructors.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class MemberAccessException : SystemException\n  inheritance:\n  - System.Object\n  - System.Exception\n  derivedClasses:\n  - System.FieldAccessException\n  - System.MethodAccessException\n  - System.MissingMemberException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MemberAccessException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MemberAccessException.#ctor\n  commentId: M:System.MemberAccessException.#ctor\n  id: '#ctor'\n  parent: System.MemberAccessException\n  langs:\n  - csharp\n  name: MemberAccessException()\n  nameWithType: MemberAccessException.MemberAccessException()\n  fullName: MemberAccessException.MemberAccessException()\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \\\"Cannot access member.\\\" This message takes into account the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.MemberAccessException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \\n|<xref:System.Exception.Message%2A>|The localized error message string.|\"\n  syntax:\n    content: public MemberAccessException ();\n    parameters: []\n  overload: System.MemberAccessException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MemberAccessException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MemberAccessException.#ctor(System.String)\n  commentId: M:System.MemberAccessException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.MemberAccessException\n  langs:\n  - csharp\n  name: MemberAccessException(String)\n  nameWithType: MemberAccessException.MemberAccessException(String)\n  fullName: MemberAccessException.MemberAccessException(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class with a specified error message.\n  remarks: \"The content of `message` should be understood by the user. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.MemberAccessException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public MemberAccessException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the error.\n  overload: System.MemberAccessException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MemberAccessException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MemberAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.MemberAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.MemberAccessException\n  langs:\n  - csharp\n  name: MemberAccessException(SerializationInfo, StreamingContext)\n  nameWithType: MemberAccessException.MemberAccessException(SerializationInfo, StreamingContext)\n  fullName: MemberAccessException.MemberAccessException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).\n  syntax:\n    content: protected MemberAccessException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The contextual information about the source or destination.\n  overload: System.MemberAccessException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MemberAccessException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.MemberAccessException.#ctor(System.String,System.Exception)\n  commentId: M:System.MemberAccessException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.MemberAccessException\n  langs:\n  - csharp\n  name: MemberAccessException(String, Exception)\n  nameWithType: MemberAccessException.MemberAccessException(String, Exception)\n  fullName: MemberAccessException.MemberAccessException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.MemberAccessException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.MemberAccessException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public MemberAccessException (string message, Exception inner);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: inner\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.MemberAccessException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MemberAccessException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.MemberAccessException.#ctor\n  parent: System.MemberAccessException\n  isExternal: false\n  name: MemberAccessException()\n  nameWithType: MemberAccessException.MemberAccessException()\n  fullName: MemberAccessException.MemberAccessException()\n- uid: System.MemberAccessException.#ctor(System.String)\n  parent: System.MemberAccessException\n  isExternal: false\n  name: MemberAccessException(String)\n  nameWithType: MemberAccessException.MemberAccessException(String)\n  fullName: MemberAccessException.MemberAccessException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.MemberAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.MemberAccessException\n  isExternal: false\n  name: MemberAccessException(SerializationInfo, StreamingContext)\n  nameWithType: MemberAccessException.MemberAccessException(SerializationInfo, StreamingContext)\n  fullName: MemberAccessException.MemberAccessException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.MemberAccessException.#ctor(System.String,System.Exception)\n  parent: System.MemberAccessException\n  isExternal: false\n  name: MemberAccessException(String, Exception)\n  nameWithType: MemberAccessException.MemberAccessException(String, Exception)\n  fullName: MemberAccessException.MemberAccessException(String, Exception)\n- uid: System.MemberAccessException.#ctor*\n  parent: System.MemberAccessException\n  isExternal: false\n  name: MemberAccessException\n  nameWithType: MemberAccessException.MemberAccessException\n  fullName: MemberAccessException.MemberAccessException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/MemberAccessException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}