{"nodes":[{"content":"Represents the mapping between a context method and a database function.","nodes":[{"pos":[0,72],"content":"Represents the mapping between a context method and a database function.","nodes":[{"content":"Represents the mapping between a context method and a database function.","pos":[0,72]}]}],"pos":[912,985],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaFunction\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaFunction\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaFunction\"></xref> class."}],"pos":[2367,2467],"yaml":true},{"content":"Gets whether or not the stored procedure has multiple result types.","nodes":[{"pos":[0,67],"content":"Gets whether or not the stored procedure has multiple result types.","nodes":[{"content":"Gets whether or not the stored procedure has multiple result types.","pos":[0,67]}]}],"pos":[3636,3704],"yaml":true},{"content":"`true` if the stored procedure has multiple result types.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the stored procedure has multiple result types.","source":"`true` if the stored procedure has multiple result types."}],"pos":[3834,3894],"yaml":true},{"content":"Gets whether the function can be composed within a query.","nodes":[{"pos":[0,57],"content":"Gets whether the function can be composed within a query.","nodes":[{"content":"Gets whether the function can be composed within a query.","pos":[0,57]}]}],"pos":[4971,5029],"yaml":true},{"content":"A stored procedure cannot be composed within a query. Methods that represent stored procedures return `false`.","nodes":[{"pos":[0,110],"content":"A stored procedure cannot be composed within a query. Methods that represent stored procedures return `false`.","nodes":[{"content":"A stored procedure cannot be composed within a query.","pos":[0,53]},{"content":"Methods that represent stored procedures return <ph id=\"ph1\">`false`</ph>.","pos":[54,110],"source":" Methods that represent stored procedures return `false`."}]}],"pos":[5040,5151],"yaml":true,"extradata":"MT"},{"content":"`true` if the function can be composed within a query.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the function can be composed within a query.","source":"`true` if the function can be composed within a query."}],"pos":[5275,5332],"yaml":true},{"content":"Gets the name of the database function or procedure.","nodes":[{"pos":[0,52],"content":"Gets the name of the database function or procedure.","nodes":[{"content":"Gets the name of the database function or procedure.","pos":[0,52]}]}],"pos":[6391,6444],"yaml":true},{"content":"A string representing the name of the database function or procedure.","nodes":[{"pos":[0,69],"content":"A string representing the name of the database function or procedure.","nodes":[{"content":"A string representing the name of the database function or procedure.","pos":[0,69]}]}],"pos":[6567,6637],"yaml":true},{"content":"Gets the underlying context method.","nodes":[{"pos":[0,35],"content":"Gets the underlying context method.","nodes":[{"content":"Gets the underlying context method.","pos":[0,35]}]}],"pos":[7670,7706],"yaml":true},{"content":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object that corresponds with the underlying context method.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> object that corresponds with the underlying context method.","source":"A <xref href=\"System.Reflection.MethodInfo\"></xref> object that corresponds with the underlying context method."}],"pos":[7862,7974],"yaml":true},{"content":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> that contains this function.","nodes":[{"pos":[0,93],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaModel\"&gt;&lt;/xref&gt;</ph> that contains this function.","source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> that contains this function."}],"pos":[8997,9091],"yaml":true},{"content":"The <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> object that contains this function.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaModel\"&gt;&lt;/xref&gt;</ph> object that contains this function.","source":"The <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> object that contains this function."}],"pos":[9258,9354],"yaml":true},{"content":"Gets the name of the method.","nodes":[{"pos":[0,28],"content":"Gets the name of the method.","nodes":[{"content":"Gets the name of the method.","pos":[0,28]}]}],"pos":[10370,10399],"yaml":true},{"content":"This is the same name as the <xref:System.Reflection.MethodInfo> name.","nodes":[{"pos":[0,70],"content":"This is the same name as the <xref:System.Reflection.MethodInfo> name.","nodes":[{"content":"This is the same name as the <ph id=\"ph1\">&lt;xref:System.Reflection.MethodInfo&gt;</ph> name.","pos":[0,70],"source":"This is the same name as the <xref:System.Reflection.MethodInfo> name."}]}],"pos":[10410,10481],"yaml":true,"extradata":"MT"},{"content":"A `string` that represents the name of the method.","nodes":[{"pos":[0,50],"content":"A <ph id=\"ph1\">`string`</ph> that represents the name of the method.","source":"A `string` that represents the name of the method."}],"pos":[10598,10649],"yaml":true},{"content":"Gets an enumeration of the function parameters.","nodes":[{"pos":[0,47],"content":"Gets an enumeration of the function parameters.","nodes":[{"content":"Gets an enumeration of the function parameters.","pos":[0,47]}]}],"pos":[11700,11748],"yaml":true},{"content":"A collection of the parameters.","nodes":[{"pos":[0,31],"content":"A collection of the parameters.","nodes":[{"content":"A collection of the parameters.","pos":[0,31]}]}],"pos":[12030,12062],"yaml":true},{"content":"Gets the enumeration of possible result row types.","nodes":[{"pos":[0,50],"content":"Gets the enumeration of possible result row types.","nodes":[{"content":"Gets the enumeration of possible result row types.","pos":[0,50]}]}],"pos":[13143,13194],"yaml":true},{"content":"A collection of possible types.","nodes":[{"pos":[0,31],"content":"A collection of possible types.","nodes":[{"content":"A collection of possible types.","pos":[0,31]}]}],"pos":[13470,13502],"yaml":true},{"content":"Gets the return parameter.","nodes":[{"pos":[0,26],"content":"Gets the return parameter.","nodes":[{"content":"Gets the return parameter.","pos":[0,26]}]}],"pos":[14593,14620],"yaml":true},{"content":"The <xref href=\"System.Data.Linq.Mapping.MetaParameter\"></xref> that corresponds to the return parameter.","nodes":[{"pos":[0,105],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaParameter\"&gt;&lt;/xref&gt;</ph> that corresponds to the return parameter.","source":"The <xref href=\"System.Data.Linq.Mapping.MetaParameter\"></xref> that corresponds to the return parameter."}],"pos":[14805,14911],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Mapping.MetaFunction\n  commentId: T:System.Data.Linq.Mapping.MetaFunction\n  id: MetaFunction\n  children:\n  - System.Data.Linq.Mapping.MetaFunction.#ctor\n  - System.Data.Linq.Mapping.MetaFunction.HasMultipleResults\n  - System.Data.Linq.Mapping.MetaFunction.IsComposable\n  - System.Data.Linq.Mapping.MetaFunction.MappedName\n  - System.Data.Linq.Mapping.MetaFunction.Method\n  - System.Data.Linq.Mapping.MetaFunction.Model\n  - System.Data.Linq.Mapping.MetaFunction.Name\n  - System.Data.Linq.Mapping.MetaFunction.Parameters\n  - System.Data.Linq.Mapping.MetaFunction.ResultRowTypes\n  - System.Data.Linq.Mapping.MetaFunction.ReturnParameter\n  langs:\n  - csharp\n  name: MetaFunction\n  nameWithType: MetaFunction\n  fullName: System.Data.Linq.Mapping.MetaFunction\n  type: Class\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Represents the mapping between a context method and a database function.\n  syntax:\n    content: public abstract class MetaFunction\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaFunction.#ctor\n  commentId: M:System.Data.Linq.Mapping.MetaFunction.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.Mapping.MetaFunction\n  langs:\n  - csharp\n  name: MetaFunction()\n  nameWithType: MetaFunction.MetaFunction()\n  fullName: MetaFunction.MetaFunction()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaFunction\"></xref> class.\n  syntax:\n    content: protected MetaFunction ();\n    parameters: []\n  overload: System.Data.Linq.Mapping.MetaFunction.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaFunction.HasMultipleResults\n  commentId: P:System.Data.Linq.Mapping.MetaFunction.HasMultipleResults\n  id: HasMultipleResults\n  parent: System.Data.Linq.Mapping.MetaFunction\n  langs:\n  - csharp\n  name: HasMultipleResults\n  nameWithType: MetaFunction.HasMultipleResults\n  fullName: MetaFunction.HasMultipleResults\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether or not the stored procedure has multiple result types.\n  syntax:\n    content: public abstract bool HasMultipleResults { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the stored procedure has multiple result types.'\n  overload: System.Data.Linq.Mapping.MetaFunction.HasMultipleResults*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaFunction.IsComposable\n  commentId: P:System.Data.Linq.Mapping.MetaFunction.IsComposable\n  id: IsComposable\n  parent: System.Data.Linq.Mapping.MetaFunction\n  langs:\n  - csharp\n  name: IsComposable\n  nameWithType: MetaFunction.IsComposable\n  fullName: MetaFunction.IsComposable\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets whether the function can be composed within a query.\n  remarks: A stored procedure cannot be composed within a query. Methods that represent stored procedures return `false`.\n  syntax:\n    content: public abstract bool IsComposable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the function can be composed within a query.'\n  overload: System.Data.Linq.Mapping.MetaFunction.IsComposable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaFunction.MappedName\n  commentId: P:System.Data.Linq.Mapping.MetaFunction.MappedName\n  id: MappedName\n  parent: System.Data.Linq.Mapping.MetaFunction\n  langs:\n  - csharp\n  name: MappedName\n  nameWithType: MetaFunction.MappedName\n  fullName: MetaFunction.MappedName\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the name of the database function or procedure.\n  syntax:\n    content: public abstract string MappedName { get; }\n    return:\n      type: System.String\n      description: A string representing the name of the database function or procedure.\n  overload: System.Data.Linq.Mapping.MetaFunction.MappedName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaFunction.Method\n  commentId: P:System.Data.Linq.Mapping.MetaFunction.Method\n  id: Method\n  parent: System.Data.Linq.Mapping.MetaFunction\n  langs:\n  - csharp\n  name: Method\n  nameWithType: MetaFunction.Method\n  fullName: MetaFunction.Method\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the underlying context method.\n  syntax:\n    content: public abstract System.Reflection.MethodInfo Method { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: A <xref href=\"System.Reflection.MethodInfo\"></xref> object that corresponds with the underlying context method.\n  overload: System.Data.Linq.Mapping.MetaFunction.Method*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaFunction.Model\n  commentId: P:System.Data.Linq.Mapping.MetaFunction.Model\n  id: Model\n  parent: System.Data.Linq.Mapping.MetaFunction\n  langs:\n  - csharp\n  name: Model\n  nameWithType: MetaFunction.Model\n  fullName: MetaFunction.Model\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> that contains this function.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaModel Model { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaModel\n      description: The <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> object that contains this function.\n  overload: System.Data.Linq.Mapping.MetaFunction.Model*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaFunction.Name\n  commentId: P:System.Data.Linq.Mapping.MetaFunction.Name\n  id: Name\n  parent: System.Data.Linq.Mapping.MetaFunction\n  langs:\n  - csharp\n  name: Name\n  nameWithType: MetaFunction.Name\n  fullName: MetaFunction.Name\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the name of the method.\n  remarks: This is the same name as the <xref:System.Reflection.MethodInfo> name.\n  syntax:\n    content: public abstract string Name { get; }\n    return:\n      type: System.String\n      description: A `string` that represents the name of the method.\n  overload: System.Data.Linq.Mapping.MetaFunction.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaFunction.Parameters\n  commentId: P:System.Data.Linq.Mapping.MetaFunction.Parameters\n  id: Parameters\n  parent: System.Data.Linq.Mapping.MetaFunction\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: MetaFunction.Parameters\n  fullName: MetaFunction.Parameters\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets an enumeration of the function parameters.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaParameter> Parameters { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaParameter}\n      description: A collection of the parameters.\n  overload: System.Data.Linq.Mapping.MetaFunction.Parameters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaFunction.ResultRowTypes\n  commentId: P:System.Data.Linq.Mapping.MetaFunction.ResultRowTypes\n  id: ResultRowTypes\n  parent: System.Data.Linq.Mapping.MetaFunction\n  langs:\n  - csharp\n  name: ResultRowTypes\n  nameWithType: MetaFunction.ResultRowTypes\n  fullName: MetaFunction.ResultRowTypes\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the enumeration of possible result row types.\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaType> ResultRowTypes { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaType}\n      description: A collection of possible types.\n  overload: System.Data.Linq.Mapping.MetaFunction.ResultRowTypes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaFunction.ReturnParameter\n  commentId: P:System.Data.Linq.Mapping.MetaFunction.ReturnParameter\n  id: ReturnParameter\n  parent: System.Data.Linq.Mapping.MetaFunction\n  langs:\n  - csharp\n  name: ReturnParameter\n  nameWithType: MetaFunction.ReturnParameter\n  fullName: MetaFunction.ReturnParameter\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the return parameter.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaParameter ReturnParameter { get; }\n    return:\n      type: System.Data.Linq.Mapping.MetaParameter\n      description: The <xref href=\"System.Data.Linq.Mapping.MetaParameter\"></xref> that corresponds to the return parameter.\n  overload: System.Data.Linq.Mapping.MetaFunction.ReturnParameter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.Mapping.MetaFunction.#ctor\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: MetaFunction()\n  nameWithType: MetaFunction.MetaFunction()\n  fullName: MetaFunction.MetaFunction()\n- uid: System.Data.Linq.Mapping.MetaFunction.HasMultipleResults\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: HasMultipleResults\n  nameWithType: MetaFunction.HasMultipleResults\n  fullName: MetaFunction.HasMultipleResults\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Mapping.MetaFunction.IsComposable\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: IsComposable\n  nameWithType: MetaFunction.IsComposable\n  fullName: MetaFunction.IsComposable\n- uid: System.Data.Linq.Mapping.MetaFunction.MappedName\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: MappedName\n  nameWithType: MetaFunction.MappedName\n  fullName: MetaFunction.MappedName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Mapping.MetaFunction.Method\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: Method\n  nameWithType: MetaFunction.Method\n  fullName: MetaFunction.Method\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Data.Linq.Mapping.MetaFunction.Model\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: Model\n  nameWithType: MetaFunction.Model\n  fullName: MetaFunction.Model\n- uid: System.Data.Linq.Mapping.MetaModel\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Data.Linq.Mapping.MetaModel\n- uid: System.Data.Linq.Mapping.MetaFunction.Name\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: Name\n  nameWithType: MetaFunction.Name\n  fullName: MetaFunction.Name\n- uid: System.Data.Linq.Mapping.MetaFunction.Parameters\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: Parameters\n  nameWithType: MetaFunction.Parameters\n  fullName: MetaFunction.Parameters\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Data.Linq.Mapping.MetaParameter\n  name: MetaParameter\n  nameWithType: MetaParameter\n  fullName: System.Data.Linq.Mapping.MetaParameter\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaParameter}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<MetaParameter>\n  nameWithType: ReadOnlyCollection<MetaParameter>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaParameter>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Linq.Mapping.MetaParameter\n    name: MetaParameter\n    nameWithType: MetaParameter\n    fullName: System.Data.Linq.Mapping.MetaParameter\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Mapping.MetaFunction.ResultRowTypes\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: ResultRowTypes\n  nameWithType: MetaFunction.ResultRowTypes\n  fullName: MetaFunction.ResultRowTypes\n- uid: System.Data.Linq.Mapping.MetaType\n  name: MetaType\n  nameWithType: MetaType\n  fullName: System.Data.Linq.Mapping.MetaType\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaType}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<MetaType>\n  nameWithType: ReadOnlyCollection<MetaType>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaType>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Linq.Mapping.MetaType\n    name: MetaType\n    nameWithType: MetaType\n    fullName: System.Data.Linq.Mapping.MetaType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Mapping.MetaFunction.ReturnParameter\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: ReturnParameter\n  nameWithType: MetaFunction.ReturnParameter\n  fullName: MetaFunction.ReturnParameter\n- uid: System.Data.Linq.Mapping.MetaFunction.#ctor*\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: MetaFunction\n  nameWithType: MetaFunction.MetaFunction\n  fullName: MetaFunction.MetaFunction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n- uid: System.Data.Linq.Mapping.MetaFunction.HasMultipleResults*\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: HasMultipleResults\n  nameWithType: MetaFunction.HasMultipleResults\n  fullName: MetaFunction.HasMultipleResults\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n- uid: System.Data.Linq.Mapping.MetaFunction.IsComposable*\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: IsComposable\n  nameWithType: MetaFunction.IsComposable\n  fullName: MetaFunction.IsComposable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n- uid: System.Data.Linq.Mapping.MetaFunction.MappedName*\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: MappedName\n  nameWithType: MetaFunction.MappedName\n  fullName: MetaFunction.MappedName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n- uid: System.Data.Linq.Mapping.MetaFunction.Method*\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: Method\n  nameWithType: MetaFunction.Method\n  fullName: MetaFunction.Method\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n- uid: System.Data.Linq.Mapping.MetaFunction.Model*\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: Model\n  nameWithType: MetaFunction.Model\n  fullName: MetaFunction.Model\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n- uid: System.Data.Linq.Mapping.MetaFunction.Name*\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: Name\n  nameWithType: MetaFunction.Name\n  fullName: MetaFunction.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n- uid: System.Data.Linq.Mapping.MetaFunction.Parameters*\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: Parameters\n  nameWithType: MetaFunction.Parameters\n  fullName: MetaFunction.Parameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n- uid: System.Data.Linq.Mapping.MetaFunction.ResultRowTypes*\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: ResultRowTypes\n  nameWithType: MetaFunction.ResultRowTypes\n  fullName: MetaFunction.ResultRowTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n- uid: System.Data.Linq.Mapping.MetaFunction.ReturnParameter*\n  parent: System.Data.Linq.Mapping.MetaFunction\n  isExternal: false\n  name: ReturnParameter\n  nameWithType: MetaFunction.ReturnParameter\n  fullName: MetaFunction.ReturnParameter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaFunction.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}