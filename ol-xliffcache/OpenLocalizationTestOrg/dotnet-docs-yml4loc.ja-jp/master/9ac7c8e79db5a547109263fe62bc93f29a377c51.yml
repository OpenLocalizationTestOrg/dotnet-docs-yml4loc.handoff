### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedEventArgs
  commentId: T:System.Windows.RoutedEventArgs
  id: RoutedEventArgs
  children:
  - System.Windows.RoutedEventArgs.#ctor
  - System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  - System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  langs:
  - csharp
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs
  fullName: System.Windows.RoutedEventArgs
  type: Class
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: Contains state information and event data associated with a routed event.
  remarks: Different <xref:System.Windows.RoutedEventArgs> can be used with a single <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>. This class is responsible for packaging the event data for a <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A>, providing extra event state information, and is used by the event system for invoking the handler associated with the routed event.
  syntax:
    content: 'public class RoutedEventArgs : EventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  derivedClasses:
  - System.Activities.Presentation.Toolbox.ToolCreatedEventArgs
  - System.Windows.DataObjectEventArgs
  - System.Windows.DpiChangedEventArgs
  - System.Windows.DragEventArgs
  - System.Windows.ExceptionRoutedEventArgs
  - System.Windows.GiveFeedbackEventArgs
  - System.Windows.MediaScriptCommandRoutedEventArgs
  - System.Windows.QueryContinueDragEventArgs
  - System.Windows.RequestBringIntoViewEventArgs
  - System.Windows.RoutedPropertyChangedEventArgs`1
  - System.Windows.SizeChangedEventArgs
  - System.Windows.SourceChangedEventArgs
  - System.Windows.Controls.ActivatingKeyTipEventArgs
  - System.Windows.Controls.CalendarDateChangedEventArgs
  - System.Windows.Controls.CalendarModeChangedEventArgs
  - System.Windows.Controls.CleanUpVirtualizedItemEventArgs
  - System.Windows.Controls.ContextMenuEventArgs
  - System.Windows.Controls.InkCanvasGestureEventArgs
  - System.Windows.Controls.InkCanvasStrokeCollectedEventArgs
  - System.Windows.Controls.KeyTipAccessedEventArgs
  - System.Windows.Controls.ScrollChangedEventArgs
  - System.Windows.Controls.SelectionChangedEventArgs
  - System.Windows.Controls.TextChangedEventArgs
  - System.Windows.Controls.ToolTipEventArgs
  - System.Windows.Controls.ValidationErrorEventArgs
  - System.Windows.Controls.Primitives.DragCompletedEventArgs
  - System.Windows.Controls.Primitives.DragDeltaEventArgs
  - System.Windows.Controls.Primitives.DragStartedEventArgs
  - System.Windows.Controls.Primitives.ScrollEventArgs
  - System.Windows.Controls.Ribbon.RibbonDismissPopupEventArgs
  - System.Windows.Controls.Ribbon.RibbonQuickAccessToolBarCloneEventArgs
  - System.Windows.Data.DataTransferEventArgs
  - System.Windows.Input.AccessKeyPressedEventArgs
  - System.Windows.Input.CanExecuteRoutedEventArgs
  - System.Windows.Input.ExecutedRoutedEventArgs
  - System.Windows.Input.InputEventArgs
  - System.Windows.Navigation.RequestNavigateEventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.RoutedEventArgs.#ctor
  commentId: M:System.Windows.RoutedEventArgs.#ctor
  id: '#ctor'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs()
  nameWithType: RoutedEventArgs.RoutedEventArgs()
  fullName: RoutedEventArgs.RoutedEventArgs()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: Initializes a new instance of the <xref href="System.Windows.RoutedEventArgs"></xref> class.
  remarks: "When using this parameterless constructor, all public properties of the new <xref:System.Windows.RoutedEventArgs> instance assume the following default values:  \n  \n-   <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> defaults to `null`.  \n  \n-   <xref:System.Windows.RoutedEventArgs.Handled%2A> defaults to `false`  \n  \n-   <xref:System.Windows.RoutedEventArgs.Source%2A> defaults to `null`.  \n  \n-   <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> defaults to `null`.  \n  \n Null values for <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> only mean that the <xref:System.Windows.RoutedEventArgs> data makes no attempt to specify the source. When this instance is used in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>, the  <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> values are populated based on the element that raised the event and are passed on to listeners through the routing."
  syntax:
    content: public RoutedEventArgs ();
    parameters: []
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  commentId: M:System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  id: '#ctor(System.Windows.RoutedEvent)'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs(RoutedEvent)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  fullName: RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: Initializes a new instance of the <xref href="System.Windows.RoutedEventArgs"></xref> class, using the supplied routed event identifier.
  remarks: "When using this overloaded constructor, unspecified properties of the new <xref:System.Windows.RoutedEventArgs> instance assume the following default values:  \n  \n-   <xref:System.Windows.RoutedEventArgs.Handled%2A> defaults to `false`  \n  \n-   <xref:System.Windows.RoutedEventArgs.Source%2A> defaults to `null`.  \n  \n-   <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> defaults to `null`.  \n  \n Null values for <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> only mean that this <xref:System.Windows.RoutedEventArgs> makes no attempt to specify the source. When this instance is used in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>, the  <xref:System.Windows.RoutedEventArgs.Source%2A> and <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> values are populated based on the element that raised the event and are passed on to listeners through the routing."
  example:
  - "The following example constructs a new <xref:System.Windows.RoutedEventArgs> for use in a call to <xref:System.Windows.UIElement.RaiseEvent%2A>.  \n  \n [!code-csharp[RoutedEventCustom#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#raiseevent)]\n [!code-vb[RoutedEventCustom#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#raiseevent)]"
  syntax:
    content: public RoutedEventArgs (System.Windows.RoutedEvent routedEvent);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: The routed event identifier for this instance of the <xref href="System.Windows.RoutedEventArgs"></xref> class.
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  commentId: M:System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  id: '#ctor(System.Windows.RoutedEvent,System.Object)'
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEventArgs(RoutedEvent, Object)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent, Object)
  fullName: RoutedEventArgs.RoutedEventArgs(RoutedEvent, Object)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: Initializes a new instance of the <xref href="System.Windows.RoutedEventArgs"></xref> class, using the supplied routed event identifier, and providing the opportunity to declare a different source for the event.
  remarks: "When using this overloaded constructor, unspecified properties of the new <xref:System.Windows.RoutedEventArgs> instance assume the following default values:  \n  \n-   <xref:System.Windows.RoutedEventArgs.Handled%2A> defaults to `false`  \n  \n-   <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> defaults to `null`.  \n  \n Null values for <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> are populated based on the element that raised the event and passed on through the routing, but will read `null` prior to invocation.  \n  \n Use this signature when passing <xref:System.Windows.RoutedEventArgs> to virtuals such as <xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A>, where the arguments are used to call <xref:System.Windows.UIElement.RaiseEvent%2A> internally."
  syntax:
    content: public RoutedEventArgs (System.Windows.RoutedEvent routedEvent, object source);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: The routed event identifier for this instance of the <xref href="System.Windows.RoutedEventArgs"></xref> class.
    - id: source
      type: System.Object
      description: An alternate source that will be reported when the event is handled. This pre-populates the <xref href="System.Windows.RoutedEventArgs.Source"></xref> property.
  overload: System.Windows.RoutedEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.RoutedEventArgs.Handled
  commentId: P:System.Windows.RoutedEventArgs.Handled
  id: Handled
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: RoutedEventArgs.Handled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: Gets or sets a value that indicates the present state of the event handling for a routed event as it travels the route.
  remarks: "Marking the event handled will limit the visibility of the routed event to listeners along the event route. The event does still travel the remainder of the route, but only handlers specifically added with `HandledEventsToo` `true` in the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> method call will be invoked in response. Default handlers on instance listeners (such as those expressed in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]) will not be invoked. Handling events that are marked handled is not a common scenario.  \n  \n If you are a control author defining your own events, the decisions you make regarding event handling at the class level will impact users of your control as well as any users of derived controls, and potentially other elements that are either contained by your control or that contain your control. For more information, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).  \n  \n In very rare circumstances it is appropriate to handle events where  <xref:System.Windows.RoutedEventArgs.Handled%2A> is marked `true`, and modify the event arguments by changing <xref:System.Windows.RoutedEventArgs.Handled%2A> to `false`. This can be necessary in certain areas of input events of controls, such as key handling of <xref:System.Windows.UIElement.KeyDown> versus <xref:System.Windows.UIElement.TextInput> where low level and high level input events compete for the handling, and each is attempting to work with a different routing strategy."
  example:
  - "The following example implements an event handler that marks the event handled.  \n  \n [!code-csharp[ClassHandling#OnStarClassHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#onstarclasshandler)]\n [!code-vb[ClassHandling#OnStarClassHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#onstarclasshandler)]"
  syntax:
    content: >-
      [get: System.Security.SecurityCritical]

      [set: System.Security.SecurityCritical]

      public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "If setting, set to `true` if the event is to be marked handled; otherwise `false`. If reading this value, `true` indicates that either a class handler, or some instance handler along the route, has already marked this event handled. `false`.indicates that no such handler has marked the event handled.  \n  \n The default value is `false`."
  overload: System.Windows.RoutedEventArgs.Handled*
  exceptions: []
  attributes:
  - type: 'get: System.Security.SecurityCritical'
  - type: 'set: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  commentId: M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate, Object)
  nameWithType: RoutedEventArgs.InvokeEventHandler(Delegate, Object)
  fullName: RoutedEventArgs.InvokeEventHandler(Delegate, Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.
  remarks: The base implementation incorporates reflection to determine the right handler for any case where the handler is not literally <xref:System.Windows.RoutedEventHandler>, and this reflection step does have some performance consequences. Invocations can be made more efficient by not relying on reflection. This is the scenario that motivates this method being available for any routed event arguments class that choose to override it. Implementations should not call the base for this method, because your implementation should already be responsible for invoking the type safe handlers.
  example:
  - "The following is pseudocode that illustrates a basic pattern that can be used for implementation. Here, `MyRoutedEventHandler` is a subclass of <xref:System.Windows.RoutedEventHandler>.  \n  \n [!code-csharp[CorePseudocode#RoutedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#routedeventargs)]\n [!code-vb[CorePseudocode#RoutedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#routedeventargs)]"
  syntax:
    content: protected virtual void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: The generic handler / delegate implementation to be invoked.
    - id: genericTarget
      type: System.Object
      description: The target on which the provided handler should be invoked.
  overload: System.Windows.RoutedEventArgs.InvokeEventHandler*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  commentId: M:System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  id: OnSetSource(System.Object)
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: OnSetSource(Object)
  nameWithType: RoutedEventArgs.OnSetSource(Object)
  fullName: RoutedEventArgs.OnSetSource(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: When overridden in a derived class, provides a notification callback entry point whenever the value of the <xref href="System.Windows.RoutedEventArgs.Source"></xref> property of an instance changes.
  syntax:
    content: protected virtual void OnSetSource (object source);
    parameters:
    - id: source
      type: System.Object
      description: The new value that <xref href="System.Windows.RoutedEventArgs.Source"></xref> is being set to.
  overload: System.Windows.RoutedEventArgs.OnSetSource*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.RoutedEventArgs.OriginalSource
  commentId: P:System.Windows.RoutedEventArgs.OriginalSource
  id: OriginalSource
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: RoutedEventArgs.OriginalSource
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: Gets the original reporting source as determined by pure hit testing, before any possible <xref href="System.Windows.RoutedEventArgs.Source"></xref> adjustment by a parent class.
  remarks: "This property acquires its value once, before the class event handlers or any instance handlers are invoked, and is never adjusted past this point. The original source information is read-only to class handlers or class implementations, just as it is reported in the event data.  \n  \n Common cases where the source may be adjusted include content elements inside a content model for a control (the contents of a list item, for instance, will report the list item element as the <xref:System.Windows.RoutedEventArgs.Source%2A> and the actual element within the list item will be the <xref:System.Windows.RoutedEventArgs.OriginalSource%2A>.  \n  \n Source adjustment by various elements and content models varies from class to class. Each class that adjusts event sources attempts to anticipate which source is the most useful to report for most input scenarios and the scenarios for which the class is intended, and then sets that source as the <xref:System.Windows.RoutedEventArgs.Source%2A>. If this source is not the one that has relevance to your handling of the event, try checking <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> instead to see if it reports a different source that is more suitable. For more details on input events, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."
  syntax:
    content: public object OriginalSource { get; }
    return:
      type: System.Object
      description: The original reporting source, before any possible <xref href="System.Windows.RoutedEventArgs.Source"></xref> adjustment made by class handling, which may have been done to flatten composited element trees.
  overload: System.Windows.RoutedEventArgs.OriginalSource*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.RoutedEventArgs.RoutedEvent
  commentId: P:System.Windows.RoutedEventArgs.RoutedEvent
  id: RoutedEvent
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: RoutedEventArgs.RoutedEvent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: Gets or sets the <xref href="System.Windows.RoutedEventArgs.RoutedEvent"></xref> associated with this <xref href="System.Windows.RoutedEventArgs"></xref> instance.
  remarks: "You cannot set this value on a <xref:System.Windows.RoutedEventArgs> that has already been routed (for instance, if you obtained the arguments through a handler). Attempting to do so will generate an exception. You can only set it on an instance that has not yet been used to generate an invocation of the event.  \n  \n The value of <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> cannot be `null` at any time."
  example:
  - "The following example creates new routed event data with an initial constructor and then sets the <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> property as a subsequent operation. You must have <xref:System.Windows.RoutedEventArgs.RoutedEvent%2A> set prior to raising the routed event.  \n  \n [!code-csharp[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_v2/CSharp/ColorPicker.cs#routedeventargsroutedevent)]\n [!code-vb[ColorPicker_v2#RoutedEventArgsRoutedEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ColorPicker_v2/visualbasic/colorpicker.vb#routedeventargsroutedevent)]"
  syntax:
    content: public System.Windows.RoutedEvent RoutedEvent { get; set; }
    return:
      type: System.Windows.RoutedEvent
      description: The identifier for the event that has been invoked.
  overload: System.Windows.RoutedEventArgs.RoutedEvent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Attempted to change the <xref href="System.Windows.RoutedEventArgs.RoutedEvent"></xref> value while the event is being routed.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.RoutedEventArgs.Source
  commentId: P:System.Windows.RoutedEventArgs.Source
  id: Source
  parent: System.Windows.RoutedEventArgs
  langs:
  - csharp
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: RoutedEventArgs.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: Gets or sets a reference to the object that raised the event.
  remarks: "For any bubbling routed event that has actually traveled the route beyond the element that raised it, and for any tunneling routed event that has not yet tunneled down to the element that raised it, the value of <xref:System.Windows.RoutedEventArgs.Source%2A> will be different than the value of the `sender` parameter of the event arguments class. Which of the two elements involved in the event is of the most importance in any given handler (<xref:System.Windows.RoutedEventArgs.Source%2A>, the element that raised it, or `sender`, the element that is currently handling it) is dependent on the application logic that your handler is addressing.  \n  \n Setting this property is typically only done when overriding or implementing other [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that adjust event sources, such as when class handling an event. Resetting apparent event sources from instance handlers is not recommended, particularly when the handler does not mark the event as handled.  \n  \n If you do reset <xref:System.Windows.RoutedEventArgs.Source%2A> to report a different event source, <xref:System.Windows.RoutedEventArgs.OriginalSource%2A> will continue to report the source as first raised by the originating <xref:System.Windows.UIElement.RaiseEvent%2A> call."
  syntax:
    content: public object Source { get; set; }
    return:
      type: System.Object
      description: The object that raised the event.
  overload: System.Windows.RoutedEventArgs.Source*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Windows.RoutedEventArgs.#ctor
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs()
  nameWithType: RoutedEventArgs.RoutedEventArgs()
  fullName: RoutedEventArgs.RoutedEventArgs()
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs(RoutedEvent)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent)
  fullName: RoutedEventArgs.RoutedEventArgs(RoutedEvent)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.RoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs(RoutedEvent, Object)
  nameWithType: RoutedEventArgs.RoutedEventArgs(RoutedEvent, Object)
  fullName: RoutedEventArgs.RoutedEventArgs(RoutedEvent, Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.RoutedEventArgs.Handled
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: RoutedEventArgs.Handled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate, Object)
  nameWithType: RoutedEventArgs.InvokeEventHandler(Delegate, Object)
  fullName: RoutedEventArgs.InvokeEventHandler(Delegate, Object)
- uid: System.Delegate
  parent: System
  isExternal: false
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OnSetSource(Object)
  nameWithType: RoutedEventArgs.OnSetSource(Object)
  fullName: RoutedEventArgs.OnSetSource(Object)
- uid: System.Windows.RoutedEventArgs.OriginalSource
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: RoutedEventArgs.OriginalSource
- uid: System.Windows.RoutedEventArgs.RoutedEvent
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: RoutedEventArgs.RoutedEvent
- uid: System.Windows.RoutedEventArgs.Source
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: RoutedEventArgs.Source
- uid: System.Windows.RoutedEventArgs.#ctor*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEventArgs
  nameWithType: RoutedEventArgs.RoutedEventArgs
  fullName: RoutedEventArgs.RoutedEventArgs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
- uid: System.Windows.RoutedEventArgs.Handled*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: RoutedEventArgs.Handled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
- uid: System.Windows.RoutedEventArgs.InvokeEventHandler*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: RoutedEventArgs.InvokeEventHandler
  fullName: RoutedEventArgs.InvokeEventHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
- uid: System.Windows.RoutedEventArgs.OnSetSource*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OnSetSource
  nameWithType: RoutedEventArgs.OnSetSource
  fullName: RoutedEventArgs.OnSetSource
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
- uid: System.Windows.RoutedEventArgs.OriginalSource*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: RoutedEventArgs.OriginalSource
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
- uid: System.Windows.RoutedEventArgs.RoutedEvent*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: RoutedEventArgs.RoutedEvent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
- uid: System.Windows.RoutedEventArgs.Source*
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: RoutedEventArgs.Source
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RoutedEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
