### YamlMime:ManagedReference
items:
- uid: System.Configuration.IntegerValidator
  commentId: T:System.Configuration.IntegerValidator
  id: IntegerValidator
  children:
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  - System.Configuration.IntegerValidator.CanValidate(System.Type)
  - System.Configuration.IntegerValidator.Validate(System.Object)
  langs:
  - csharp
  name: IntegerValidator
  nameWithType: IntegerValidator
  fullName: System.Configuration.IntegerValidator
  type: Class
  assemblies:
  - System.Configuration
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Provides validation of an <xref href="System.Int32"></xref> value.
  remarks: "The <xref:System.Configuration.IntegerValidator> class is used to ensure that an integer meets specific criteria. The criteria for validation are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.  \n  \n The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method."
  example:
  - "The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator> type.  \n  \n [!code-csharp[System.Configuration.IntegerValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#1)]\n [!code-vb[System.Configuration.IntegerValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#1)]"
  syntax:
    content: 'public class IntegerValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  commentId: M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32, Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32)
  fullName: IntegerValidator.IntegerValidator(Int32, Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Initializes a new instance of the <xref href="System.Configuration.IntegerValidator"></xref> class.
  remarks: This <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor ensures that the integer being verified adheres to both a minimum and a maximum length.
  syntax:
    content: public IntegerValidator (int minValue, int maxValue);
    parameters:
    - id: minValue
      type: System.Int32
      description: An <xref href="System.Int32"></xref> object that specifies the minimum value.
    - id: maxValue
      type: System.Int32
      description: An <xref href="System.Int32"></xref> object that specifies the maximum value.
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  commentId: M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Int32,System.Boolean)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32, Int32, Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32, Boolean)
  fullName: IntegerValidator.IntegerValidator(Int32, Int32, Boolean)
  type: Constructor
  assemblies:
  - System.Configuration
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Initializes a new instance of the <xref href="System.Configuration.IntegerValidator"></xref> class.
  remarks: When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive. When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values.
  example:
  - "The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-csharp[System.Configuration.IntegerValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#2)]\n [!code-vb[System.Configuration.IntegerValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#2)]"
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);
    parameters:
    - id: minValue
      type: System.Int32
      description: An <xref href="System.Int32"></xref> object that specifies the minimum value.
    - id: maxValue
      type: System.Int32
      description: An <xref href="System.Int32"></xref> object that specifies the maximum value.
    - id: rangeIsExclusive
      type: System.Boolean
      description: '`true` to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.'
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  commentId: M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32, Int32, Boolean, Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32, Boolean, Int32)
  fullName: IntegerValidator.IntegerValidator(Int32, Int32, Boolean, Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Initializes a new instance of the <xref href="System.Configuration.IntegerValidator"></xref> class.
  remarks: The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation.
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);
    parameters:
    - id: minValue
      type: System.Int32
      description: An <xref href="System.Int32"></xref> object that specifies the minimum length of the integer value.
    - id: maxValue
      type: System.Int32
      description: An <xref href="System.Int32"></xref> object that specifies the maximum length of the integer value.
    - id: rangeIsExclusive
      type: System.Boolean
      description: A <xref href="System.Boolean"></xref> value that specifies whether the validation range is exclusive.
    - id: resolution
      type: System.Int32
      description: An <xref href="System.Int32"></xref> object that specifies a value that must be matched.
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>resolution</code> is less than `0`.  \n  \n \\- or -  \n  \n <code>minValue</code> is greater than <code>maxValue</code>."
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  commentId: M:System.Configuration.IntegerValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: IntegerValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Determines whether the type of the object can be validated.
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.CanValidate%2A> method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-csharp[System.Configuration.IntegerValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#3)]\n [!code-vb[System.Configuration.IntegerValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#3)]"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: The type of the object.
    return:
      type: System.Boolean
      description: '`true` if the <code>type</code> parameter matches an <xref href="System.Int32"></xref> value; otherwise, `false`.'
  overload: System.Configuration.IntegerValidator.CanValidate*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  commentId: M:System.Configuration.IntegerValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: IntegerValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  - System.Configuration.ConfigurationManager
  namespace: System.Configuration
  summary: Determines whether the value of an object is valid.
  remarks: An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object. The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The integer object to validate is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method.
  example:
  - "The following code example demonstrates how to use the <xref:System.Configuration.IntegerValidator.Validate%2A> method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-csharp[System.Configuration.IntegerValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.IntegerValidator/CS/IntegerValidator.cs#4)]\n [!code-vb[System.Configuration.IntegerValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.IntegerValidator/VB/IntegerValidator.vb#4)]"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: The value to be validated.
  overload: System.Configuration.IntegerValidator.Validate*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.Configuration.ConfigurationValidatorBase
  parent: System.Configuration
  isExternal: false
  name: ConfigurationValidatorBase
  nameWithType: ConfigurationValidatorBase
  fullName: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32, Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32)
  fullName: IntegerValidator.IntegerValidator(Int32, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32, Int32, Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32, Boolean)
  fullName: IntegerValidator.IntegerValidator(Int32, Int32, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32, Int32, Boolean, Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32, Int32, Boolean, Int32)
  fullName: IntegerValidator.IntegerValidator(Int32, Int32, Boolean, Int32)
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: IntegerValidator.CanValidate(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: IntegerValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.IntegerValidator.#ctor*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator
  nameWithType: IntegerValidator.IntegerValidator
  fullName: IntegerValidator.IntegerValidator
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml
- uid: System.Configuration.IntegerValidator.CanValidate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate
  nameWithType: IntegerValidator.CanValidate
  fullName: IntegerValidator.CanValidate
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml
- uid: System.Configuration.IntegerValidator.Validate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate
  nameWithType: IntegerValidator.Validate
  fullName: IntegerValidator.Validate
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/IntegerValidator.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
