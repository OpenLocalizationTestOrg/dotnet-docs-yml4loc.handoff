{"nodes":[{"content":"Represents an object that is associated with a <xref href=\"System.Windows.Threading.Dispatcher\"></xref>.","nodes":[{"pos":[0,104],"content":"Represents an object that is associated with a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;&lt;/xref&gt;</ph>.","source":"Represents an object that is associated with a <xref href=\"System.Windows.Threading.Dispatcher\"></xref>."}],"pos":[628,733],"yaml":true},{"content":"Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.  To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.  \n  \n Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods.  This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on.  \n  \n A <xref:System.Windows.Threading.DispatcherObject> cannot be independently instantiated; that is, all constructors are protected.  \n  \n Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.  \n  \n Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.  For more information, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).","nodes":[{"pos":[0,585],"content":"Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.  To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.","nodes":[{"content":"Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.  To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.","pos":[0,585],"nodes":[{"content":"Only the thread that the <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> directly.","pos":[0,176],"source":"Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly."},{"content":"To access a <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> from a thread other than the thread the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> was created on, call <ph id=\"ph3\">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph> on the <ph id=\"ph5\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> the <ph id=\"ph6\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> is associated with.","pos":[178,585],"source":"  To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with."}]}]},{"pos":[592,922],"content":"Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods.  This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on.","nodes":[{"content":"Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods.  This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on.","pos":[0,330],"nodes":[{"content":"Subclasses of <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> that need to enforce thread safety can do so by calling <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> on all public methods.","pos":[0,206],"source":"Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods."},{"content":"This guarantees the calling thread is the thread that the <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> was created on.","pos":[208,330],"source":"  This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on."}]}]},{"pos":[929,1058],"content":"A <xref:System.Windows.Threading.DispatcherObject> cannot be independently instantiated; that is, all constructors are protected.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> cannot be independently instantiated; that is, all constructors are protected.","pos":[0,129],"source":"A <xref:System.Windows.Threading.DispatcherObject> cannot be independently instantiated; that is, all constructors are protected."}]},{"pos":[1065,1160],"content":"Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.","nodes":[{"content":"Objects that derive from <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> have thread affinity.","pos":[0,95],"source":"Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity."}]},{"pos":[1167,1385],"content":"Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.  For more information, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).","nodes":[{"content":"Objects that derive from <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> are free-threaded when they are frozen.","pos":[0,96],"source":"Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen."},{"content":"For more information, see the <bpt id=\"p1\">[</bpt>Freezable Objects Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/freezable-objects-overview.md)</ept>.","pos":[98,218],"source":"  For more information, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md)."}]}],"pos":[744,2140],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherObject\"></xref> class.","nodes":[{"pos":[0,103],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherObject\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherObject\"></xref> class."}],"pos":[4505,4609],"yaml":true},{"content":"Determines whether the calling thread has access to this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref>.","nodes":[{"pos":[0,120],"content":"Determines whether the calling thread has access to this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherObject\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the calling thread has access to this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref>."}],"pos":[5700,5821],"yaml":true},{"content":"Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.  \n  \n Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.  \n  \n The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.  \n  \n Calling this method is identical to calling <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> on the associated <xref:System.Windows.Threading.Dispatcher> object.","nodes":[{"pos":[0,162],"content":"Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.","nodes":[{"content":"Only the thread the <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.","pos":[0,162],"source":"Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>."}]},{"pos":[169,276],"content":"Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.","nodes":[{"content":"Any thread can check to see whether it has access to this <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.","pos":[0,107],"source":"Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>."}]},{"pos":[283,832],"content":"The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.","nodes":[{"content":"The difference between <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> is that <ph id=\"ph3\">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> returns a Boolean that specifies whether the calling thread has access to this <ph id=\"ph4\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> throws an exception if the calling thread does not have access to the this <ph id=\"ph6\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.","pos":[0,549],"source":"The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>."}]},{"pos":[839,1009],"content":"Calling this method is identical to calling <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> on the associated <xref:System.Windows.Threading.Dispatcher> object.","nodes":[{"content":"Calling this method is identical to calling <ph id=\"ph1\">&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt;</ph> on the associated <ph id=\"ph2\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> object.","pos":[0,170],"source":"Calling this method is identical to calling <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> on the associated <xref:System.Windows.Threading.Dispatcher> object."}]}],"pos":[5832,6850],"yaml":true,"extradata":"MT"},{"content":"`true` if the calling thread has access to this object; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if the calling thread has access to this object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the calling thread has access to this object; otherwise, `false`."}],"pos":[8162,8240],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref> is associated with.","nodes":[{"pos":[0,153],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;&lt;/xref&gt;</ph> this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Threading.DispatcherObject\"&gt;&lt;/xref&gt;</ph> is associated with.","source":"Gets the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref> is associated with."}],"pos":[9293,9447],"yaml":true},{"content":"Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.  To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.","nodes":[{"pos":[0,586],"content":"Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.  To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.","nodes":[{"content":"Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.  To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.","pos":[0,586],"nodes":[{"content":"Only the thread that the <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> directly.","pos":[0,176],"source":"Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly."},{"content":"To access a <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> from a thread other than the thread the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> was created on, call <ph id=\"ph3\">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph> on the <ph id=\"ph5\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> the <ph id=\"ph6\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> is associated with.","pos":[178,586],"source":"  To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with."}]}]}],"pos":[9458,10045],"yaml":true,"extradata":"MT"},{"content":"The dispatcher.","nodes":[{"pos":[0,15],"content":"The dispatcher.","nodes":[{"content":"The dispatcher.","pos":[0,15]}]}],"pos":[10210,10226],"yaml":true},{"content":"Enforces that the calling thread has access to this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref>.","nodes":[{"pos":[0,115],"content":"Enforces that the calling thread has access to this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherObject\"&gt;&lt;/xref&gt;</ph>.","source":"Enforces that the calling thread has access to this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref>."}],"pos":[11294,11410],"yaml":true},{"content":"Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.  \n  \n Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.  \n  \n The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.","nodes":[{"pos":[0,162],"content":"Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.","nodes":[{"content":"Only the thread the <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.","pos":[0,162],"source":"Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>."}]},{"pos":[169,276],"content":"Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.","nodes":[{"content":"Any thread can check to see whether it has access to this <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.","pos":[0,107],"source":"Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>."}]},{"pos":[283,832],"content":"The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.","nodes":[{"content":"The difference between <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> is that <ph id=\"ph3\">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> returns a Boolean that specifies whether the calling thread has access to this <ph id=\"ph4\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> throws an exception if the calling thread does not have access to the this <ph id=\"ph6\">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.","pos":[0,549],"source":"The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>."}]}],"pos":[11421,12260],"yaml":true,"extradata":"MT"},{"content":"the calling thread does not have access to this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref>.","nodes":[{"pos":[0,111],"content":"the calling thread does not have access to this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherObject\"&gt;&lt;/xref&gt;</ph>.","source":"the calling thread does not have access to this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref>."}],"pos":[13283,13395],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Threading.DispatcherObject\n  commentId: T:System.Windows.Threading.DispatcherObject\n  id: DispatcherObject\n  children:\n  - System.Windows.Threading.DispatcherObject.#ctor\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  langs:\n  - csharp\n  name: DispatcherObject\n  nameWithType: DispatcherObject\n  fullName: System.Windows.Threading.DispatcherObject\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Represents an object that is associated with a <xref href=\"System.Windows.Threading.Dispatcher\"></xref>.\n  remarks: \"Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.  To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.  \\n  \\n Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods.  This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on.  \\n  \\n A <xref:System.Windows.Threading.DispatcherObject> cannot be independently instantiated; that is, all constructors are protected.  \\n  \\n Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.  \\n  \\n Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.  For more information, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).\"\n  syntax:\n    content: public abstract class DispatcherObject\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Windows.Application\n  - System.Windows.DependencyObject\n  - System.Windows.FrameworkTemplate\n  - System.Windows.PresentationSource\n  - System.Windows.Style\n  - System.Windows.WeakEventManager\n  - System.Windows.Annotations.AnnotationService\n  - System.Windows.Automation.Peers.AutomationPeer\n  - System.Windows.Data.CollectionView\n  - System.Windows.Input.InputDevice\n  - System.Windows.Input.InputLanguageManager\n  - System.Windows.Input.InputManager\n  - System.Windows.Input.InputMethod\n  - System.Windows.Input.TextComposition\n  - System.Windows.Input.TextCompositionManager\n  - System.Windows.Media.CompositionTarget\n  - System.Windows.Media.DrawingContext\n  - System.Windows.Media.StreamGeometryContext\n  - System.Windows.Media.Animation.Clock\n  - System.Windows.Media.Animation.ClockController\n  - System.Windows.Media.Imaging.BitmapDecoder\n  - System.Windows.Media.Imaging.BitmapEncoder\n  - System.Windows.Media.Imaging.BitmapPalette\n  - System.Windows.Threading.DispatcherFrame\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherObject.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Threading.DispatcherObject.#ctor\n  commentId: M:System.Windows.Threading.DispatcherObject.#ctor\n  id: '#ctor'\n  parent: System.Windows.Threading.DispatcherObject\n  langs:\n  - csharp\n  name: DispatcherObject()\n  nameWithType: DispatcherObject.DispatcherObject()\n  fullName: DispatcherObject.DispatcherObject()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherObject\"></xref> class.\n  syntax:\n    content: protected DispatcherObject ();\n    parameters: []\n  overload: System.Windows.Threading.DispatcherObject.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherObject.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  commentId: M:System.Windows.Threading.DispatcherObject.CheckAccess\n  id: CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  langs:\n  - csharp\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Determines whether the calling thread has access to this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref>.\n  remarks: \"Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.  \\n  \\n Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.  \\n  \\n The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.  \\n  \\n Calling this method is identical to calling <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> on the associated <xref:System.Windows.Threading.Dispatcher> object.\"\n  example:\n  - \"The following example uses <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.  The <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> method on the <xref:System.Windows.Controls.Button> is called to verify access to the thread.  If the calling thread has access, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is posted onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccesscheckaccess)]\\n [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccesscheckaccess)]\"\n  syntax:\n    content: public bool CheckAccess ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the calling thread has access to this object; otherwise, `false`.'\n  overload: System.Windows.Threading.DispatcherObject.CheckAccess*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherObject.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  commentId: P:System.Windows.Threading.DispatcherObject.Dispatcher\n  id: Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  langs:\n  - csharp\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Gets the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref> is associated with.\n  remarks: Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.  To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.\n  syntax:\n    content: public System.Windows.Threading.Dispatcher Dispatcher { get; }\n    return:\n      type: System.Windows.Threading.Dispatcher\n      description: The dispatcher.\n  overload: System.Windows.Threading.DispatcherObject.Dispatcher*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherObject.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  commentId: M:System.Windows.Threading.DispatcherObject.VerifyAccess\n  id: VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  langs:\n  - csharp\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Enforces that the calling thread has access to this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref>.\n  remarks: \"Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.  \\n  \\n Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.  \\n  \\n The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.\"\n  example:\n  - \"The following example uses <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.  If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.  \\n  \\n [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccessverifyaccess)]\\n [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccessverifyaccess)]\"\n  syntax:\n    content: public void VerifyAccess ();\n    parameters: []\n  overload: System.Windows.Threading.DispatcherObject.VerifyAccess*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: the calling thread does not have access to this <xref href=\"System.Windows.Threading.DispatcherObject\"></xref>.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherObject.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Windows.Threading.DispatcherObject.#ctor\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: DispatcherObject()\n  nameWithType: DispatcherObject.DispatcherObject()\n  fullName: DispatcherObject.DispatcherObject()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.Dispatcher\n  parent: System.Windows.Threading\n  isExternal: false\n  name: Dispatcher\n  nameWithType: Dispatcher\n  fullName: System.Windows.Threading.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.Threading.DispatcherObject.#ctor*\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: DispatcherObject\n  nameWithType: DispatcherObject.DispatcherObject\n  fullName: DispatcherObject.DispatcherObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherObject.xml\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess*\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess\n  nameWithType: DispatcherObject.CheckAccess\n  fullName: DispatcherObject.CheckAccess\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherObject.xml\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher*\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherObject.xml\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess*\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess\n  nameWithType: DispatcherObject.VerifyAccess\n  fullName: DispatcherObject.VerifyAccess\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherObject.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}