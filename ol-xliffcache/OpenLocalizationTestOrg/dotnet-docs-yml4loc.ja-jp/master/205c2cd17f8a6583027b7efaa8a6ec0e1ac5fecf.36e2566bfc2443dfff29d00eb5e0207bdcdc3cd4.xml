{"nodes":[{"content":"Defines the interface for an STL/CLR [priority_queue](http://msdn.microsoft.com/library/4d0000d3-68ff-4c4b-8157-7060540136f5) object.","nodes":[{"pos":[0,133],"content":"Defines the interface for an STL/CLR <bpt id=\"p1\">[</bpt>priority_queue<ept id=\"p1\">](http://msdn.microsoft.com/library/4d0000d3-68ff-4c4b-8157-7060540136f5)</ept> object.","source":"Defines the interface for an STL/CLR [priority_queue](http://msdn.microsoft.com/library/4d0000d3-68ff-4c4b-8157-7060540136f5) object."}],"pos":[926,1060],"yaml":true},{"content":"The type of an element in the controlled sequence.","nodes":[{"pos":[0,50],"content":"The type of an element in the controlled sequence.","nodes":[{"content":"The type of an element in the controlled sequence.","pos":[0,50]}]}],"pos":[1200,1251],"yaml":true},{"content":"The type of the underlying container.","nodes":[{"pos":[0,37],"content":"The type of the underlying container.","nodes":[{"content":"The type of the underlying container.","pos":[0,37]}]}],"pos":[1286,1324],"yaml":true},{"content":"Replaces all elements of the container.","nodes":[{"pos":[0,39],"content":"Replaces all elements of the container.","nodes":[{"content":"Replaces all elements of the container.","pos":[0,39]}]}],"pos":[2504,2544],"yaml":true},{"content":"For more information, see [priority_queue::assign (STL/CLR)](http://msdn.microsoft.com/library/00cd3623-ecd0-4dde-ba5c-777c1c0bc0b5).","nodes":[{"pos":[0,133],"content":"For more information, see <bpt id=\"p1\">[</bpt>priority_queue::assign (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/00cd3623-ecd0-4dde-ba5c-777c1c0bc0b5)</ept>.","source":"For more information, see [priority_queue::assign (STL/CLR)](http://msdn.microsoft.com/library/00cd3623-ecd0-4dde-ba5c-777c1c0bc0b5)."}],"pos":[2555,2689],"yaml":true,"extradata":"MT"},{"content":"The container adapter to insert into the container.","nodes":[{"pos":[0,51],"content":"The container adapter to insert into the container.","nodes":[{"content":"The container adapter to insert into the container.","pos":[0,51]}]}],"pos":[2901,2953],"yaml":true},{"content":"Determines whether the container contains no elements.","nodes":[{"pos":[0,54],"content":"Determines whether the container contains no elements.","nodes":[{"content":"Determines whether the container contains no elements.","pos":[0,54]}]}],"pos":[3942,3997],"yaml":true},{"content":"For more information, see [priority_queue::empty (STL/CLR)](http://msdn.microsoft.com/library/bb2bc4cf-395f-4c4f-b432-550b85e1865d).","nodes":[{"pos":[0,132],"content":"For more information, see <bpt id=\"p1\">[</bpt>priority_queue::empty (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/bb2bc4cf-395f-4c4f-b432-550b85e1865d)</ept>.","source":"For more information, see [priority_queue::empty (STL/CLR)](http://msdn.microsoft.com/library/bb2bc4cf-395f-4c4f-b432-550b85e1865d)."}],"pos":[4008,4141],"yaml":true,"extradata":"MT"},{"content":"`true` if the container contains no elements; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the container contains no elements; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the container contains no elements; otherwise, `false`."}],"pos":[4263,4331],"yaml":true},{"content":"Removes the highest-priority element of the container.","nodes":[{"pos":[0,54],"content":"Removes the highest-priority element of the container.","nodes":[{"content":"Removes the highest-priority element of the container.","pos":[0,54]}]}],"pos":[5307,5362],"yaml":true},{"content":"For more information, see [priority_queue::pop (STL/CLR)](http://msdn.microsoft.com/library/d363b3f1-247b-466a-a300-c5918b0dfd4e).","nodes":[{"pos":[0,130],"content":"For more information, see <bpt id=\"p1\">[</bpt>priority_queue::pop (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/d363b3f1-247b-466a-a300-c5918b0dfd4e)</ept>.","source":"For more information, see [priority_queue::pop (STL/CLR)](http://msdn.microsoft.com/library/d363b3f1-247b-466a-a300-c5918b0dfd4e)."}],"pos":[5373,5504],"yaml":true,"extradata":"MT"},{"content":"Adds a new element to the container.","nodes":[{"pos":[0,36],"content":"Adds a new element to the container.","nodes":[{"content":"Adds a new element to the container.","pos":[0,36]}]}],"pos":[6576,6613],"yaml":true},{"content":"For more information, see [priority_queue::push (STL/CLR)](http://msdn.microsoft.com/library/317d3feb-0688-4658-866b-a26cae060354).","nodes":[{"pos":[0,131],"content":"For more information, see <bpt id=\"p1\">[</bpt>priority_queue::push (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/317d3feb-0688-4658-866b-a26cae060354)</ept>.","source":"For more information, see [priority_queue::push (STL/CLR)](http://msdn.microsoft.com/library/317d3feb-0688-4658-866b-a26cae060354)."}],"pos":[6624,6756],"yaml":true,"extradata":"MT"},{"content":"An element to insert into the controlled sequence. The controlled sequence is then reordered to maintain the heap discipline.","nodes":[{"pos":[0,125],"content":"An element to insert into the controlled sequence. The controlled sequence is then reordered to maintain the heap discipline.","nodes":[{"content":"An element to insert into the controlled sequence. The controlled sequence is then reordered to maintain the heap discipline.","pos":[0,125],"nodes":[{"content":"An element to insert into the controlled sequence.","pos":[0,50]},{"content":"The controlled sequence is then reordered to maintain the heap discipline.","pos":[51,125]}]}]}],"pos":[6880,7006],"yaml":true},{"content":"Counts the number of elements in the container.","nodes":[{"pos":[0,47],"content":"Counts the number of elements in the container.","nodes":[{"content":"Counts the number of elements in the container.","pos":[0,47]}]}],"pos":[7987,8035],"yaml":true},{"content":"For more information, see [priority_queue::size (STL/CLR)](http://msdn.microsoft.com/library/37ef4be3-daac-4b5a-9a00-085863f694e0).","nodes":[{"pos":[0,131],"content":"For more information, see <bpt id=\"p1\">[</bpt>priority_queue::size (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/37ef4be3-daac-4b5a-9a00-085863f694e0)</ept>.","source":"For more information, see [priority_queue::size (STL/CLR)](http://msdn.microsoft.com/library/37ef4be3-daac-4b5a-9a00-085863f694e0)."}],"pos":[8046,8178],"yaml":true,"extradata":"MT"},{"content":"The length of the controlled sequence.","nodes":[{"pos":[0,38],"content":"The length of the controlled sequence.","nodes":[{"content":"The length of the controlled sequence.","pos":[0,38]}]}],"pos":[8296,8335],"yaml":true},{"content":"Accesses the highest-priority element of the container.","nodes":[{"pos":[0,55],"content":"Accesses the highest-priority element of the container.","nodes":[{"content":"Accesses the highest-priority element of the container.","pos":[0,55]}]}],"pos":[9310,9366],"yaml":true},{"content":"For more information, see [priority_queue::top (STL/CLR)](http://msdn.microsoft.com/library/e45211d5-e6df-4c03-97fd-57afb87af58c).","nodes":[{"pos":[0,130],"content":"For more information, see <bpt id=\"p1\">[</bpt>priority_queue::top (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/e45211d5-e6df-4c03-97fd-57afb87af58c)</ept>.","source":"For more information, see [priority_queue::top (STL/CLR)](http://msdn.microsoft.com/library/e45211d5-e6df-4c03-97fd-57afb87af58c)."}],"pos":[9377,9508],"yaml":true,"extradata":"MT"},{"content":"The top (highest-priority) element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,87],"content":"The top (highest-priority) element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The top (highest-priority) element of the controlled sequence, which must be non-empty.","pos":[0,87]}]}],"pos":[9623,9711],"yaml":true},{"content":"Accesses the highest-priority element of the container.","nodes":[{"pos":[0,55],"content":"Accesses the highest-priority element of the container.","nodes":[{"content":"Accesses the highest-priority element of the container.","pos":[0,55]}]}],"pos":[10711,10767],"yaml":true},{"content":"For more information, see [priority_queue::top_item (STL/CLR)](http://msdn.microsoft.com/library/d497403b-6b1d-4c6e-a0f4-c744cc5fad75).","nodes":[{"pos":[0,135],"content":"For more information, see <bpt id=\"p1\">[</bpt>priority_queue::top_item (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/d497403b-6b1d-4c6e-a0f4-c744cc5fad75)</ept>.","source":"For more information, see [priority_queue::top_item (STL/CLR)](http://msdn.microsoft.com/library/d497403b-6b1d-4c6e-a0f4-c744cc5fad75)."}],"pos":[10778,10914],"yaml":true,"extradata":"MT"},{"content":"The top (highest-priority) element of the controlled sequence, which must be non-empty.","nodes":[{"pos":[0,87],"content":"The top (highest-priority) element of the controlled sequence, which must be non-empty.","nodes":[{"content":"The top (highest-priority) element of the controlled sequence, which must be non-empty.","pos":[0,87]}]}],"pos":[11024,11112],"yaml":true},{"content":"Copies the ordering delegate for two elements.","nodes":[{"pos":[0,46],"content":"Copies the ordering delegate for two elements.","nodes":[{"content":"Copies the ordering delegate for two elements.","pos":[0,46]}]}],"pos":[12133,12180],"yaml":true},{"content":"For more information, see [priority_queue::value_comp (STL/CLR)](http://msdn.microsoft.com/library/af28e541-087d-4837-9ff0-cd36d4cfc57a).","nodes":[{"pos":[0,137],"content":"For more information, see <bpt id=\"p1\">[</bpt>priority_queue::value_comp (STL/CLR)<ept id=\"p1\">](http://msdn.microsoft.com/library/af28e541-087d-4837-9ff0-cd36d4cfc57a)</ept>.","source":"For more information, see [priority_queue::value_comp (STL/CLR)](http://msdn.microsoft.com/library/af28e541-087d-4837-9ff0-cd36d4cfc57a)."}],"pos":[12191,12329],"yaml":true,"extradata":"MT"},{"content":"The ordering delegate used to order the controlled sequence. You use it to compare two values.","nodes":[{"pos":[0,94],"content":"The ordering delegate used to order the controlled sequence. You use it to compare two values.","nodes":[{"content":"The ordering delegate used to order the controlled sequence. You use it to compare two values.","pos":[0,94],"nodes":[{"content":"The ordering delegate used to order the controlled sequence.","pos":[0,60]},{"content":"You use it to compare two values.","pos":[61,94]}]}]}],"pos":[12566,12661],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  commentId: T:Microsoft.VisualC.StlClr.IPriorityQueue`2\n  id: IPriorityQueue`2\n  children:\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.empty\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.pop\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.size\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.top\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp\n  langs:\n  - csharp\n  name: IPriorityQueue<TValue,TCont>\n  nameWithType: IPriorityQueue<TValue,TCont>\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>\n  type: Interface\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Defines the interface for an STL/CLR [priority_queue](http://msdn.microsoft.com/library/4d0000d3-68ff-4c4b-8157-7060540136f5) object.\n  syntax:\n    content: 'public interface IPriorityQueue<TValue,TCont> : ICloneable'\n    typeParameters:\n    - id: TValue\n      description: The type of an element in the controlled sequence.\n    - id: TCont\n      description: The type of the underlying container.\n  implements:\n  - System.ICloneable\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})\n  commentId: M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})\n  id: assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: assign(IPriorityQueue<TValue,TCont>)\n  nameWithType: IPriorityQueue<TValue,TCont>.assign(IPriorityQueue<TValue,TCont>)\n  fullName: IPriorityQueue<TValue,TCont>.assign(IPriorityQueue<TValue,TCont>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Replaces all elements of the container.\n  remarks: For more information, see [priority_queue::assign (STL/CLR)](http://msdn.microsoft.com/library/00cd3623-ecd0-4dde-ba5c-777c1c0bc0b5).\n  syntax:\n    content: public void assign (Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.IPriorityQueue`2\n      description: The container adapter to insert into the container.\n  overload: Microsoft.VisualC.StlClr.IPriorityQueue`2.assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.empty\n  commentId: M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty\n  id: empty\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: empty()\n  nameWithType: IPriorityQueue<TValue,TCont>.empty()\n  fullName: IPriorityQueue<TValue,TCont>.empty()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Determines whether the container contains no elements.\n  remarks: For more information, see [priority_queue::empty (STL/CLR)](http://msdn.microsoft.com/library/bb2bc4cf-395f-4c4f-b432-550b85e1865d).\n  syntax:\n    content: public bool empty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the container contains no elements; otherwise, `false`.'\n  overload: Microsoft.VisualC.StlClr.IPriorityQueue`2.empty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.pop\n  commentId: M:Microsoft.VisualC.StlClr.IPriorityQueue`2.pop\n  id: pop\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: pop()\n  nameWithType: IPriorityQueue<TValue,TCont>.pop()\n  fullName: IPriorityQueue<TValue,TCont>.pop()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Removes the highest-priority element of the container.\n  remarks: For more information, see [priority_queue::pop (STL/CLR)](http://msdn.microsoft.com/library/d363b3f1-247b-466a-a300-c5918b0dfd4e).\n  syntax:\n    content: public void pop ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.IPriorityQueue`2.pop*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)\n  commentId: M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)\n  id: push(`0)\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: push(TValue)\n  nameWithType: IPriorityQueue<TValue,TCont>.push(TValue)\n  fullName: IPriorityQueue<TValue,TCont>.push(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Adds a new element to the container.\n  remarks: For more information, see [priority_queue::push (STL/CLR)](http://msdn.microsoft.com/library/317d3feb-0688-4658-866b-a26cae060354).\n  syntax:\n    content: public void push (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: An element to insert into the controlled sequence. The controlled sequence is then reordered to maintain the heap discipline.\n  overload: Microsoft.VisualC.StlClr.IPriorityQueue`2.push*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.size\n  commentId: M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size\n  id: size\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: size()\n  nameWithType: IPriorityQueue<TValue,TCont>.size()\n  fullName: IPriorityQueue<TValue,TCont>.size()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Counts the number of elements in the container.\n  remarks: For more information, see [priority_queue::size (STL/CLR)](http://msdn.microsoft.com/library/37ef4be3-daac-4b5a-9a00-085863f694e0).\n  syntax:\n    content: public int size ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The length of the controlled sequence.\n  overload: Microsoft.VisualC.StlClr.IPriorityQueue`2.size*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.top\n  commentId: M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top\n  id: top\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: top()\n  nameWithType: IPriorityQueue<TValue,TCont>.top()\n  fullName: IPriorityQueue<TValue,TCont>.top()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the highest-priority element of the container.\n  remarks: For more information, see [priority_queue::top (STL/CLR)](http://msdn.microsoft.com/library/e45211d5-e6df-4c03-97fd-57afb87af58c).\n  syntax:\n    content: public TValue top ();\n    parameters: []\n    return:\n      type: TValue@\n      description: The top (highest-priority) element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IPriorityQueue`2.top*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item\n  commentId: P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item\n  id: top_item\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: top_item\n  nameWithType: IPriorityQueue<TValue,TCont>.top_item\n  fullName: IPriorityQueue<TValue,TCont>.top_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Accesses the highest-priority element of the container.\n  remarks: For more information, see [priority_queue::top_item (STL/CLR)](http://msdn.microsoft.com/library/d497403b-6b1d-4c6e-a0f4-c744cc5fad75).\n  syntax:\n    content: public TValue top_item { get; set; }\n    return:\n      type: TValue\n      description: The top (highest-priority) element of the controlled sequence, which must be non-empty.\n  overload: Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp\n  commentId: M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp\n  id: value_comp\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: value_comp()\n  nameWithType: IPriorityQueue<TValue,TCont>.value_comp()\n  fullName: IPriorityQueue<TValue,TCont>.value_comp()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Copies the ordering delegate for two elements.\n  remarks: For more information, see [priority_queue::value_comp (STL/CLR)](http://msdn.microsoft.com/library/af28e541-087d-4837-9ff0-cd36d4cfc57a).\n  syntax:\n    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> value_comp ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n      description: The ordering delegate used to order the controlled sequence. You use it to compare two values.\n  overload: Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n  ms.author: mblome\n  manager: ghogen\nreferences:\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: assign(IPriorityQueue<TValue,TCont>)\n  nameWithType: IPriorityQueue<TValue,TCont>.assign(IPriorityQueue<TValue,TCont>)\n  fullName: IPriorityQueue<TValue,TCont>.assign(IPriorityQueue<TValue,TCont>)\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: IPriorityQueue<TValue,TCont>\n  nameWithType: IPriorityQueue<TValue,TCont>\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.empty\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: empty()\n  nameWithType: IPriorityQueue<TValue,TCont>.empty()\n  fullName: IPriorityQueue<TValue,TCont>.empty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.pop\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: pop()\n  nameWithType: IPriorityQueue<TValue,TCont>.pop()\n  fullName: IPriorityQueue<TValue,TCont>.pop()\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: push(TValue)\n  nameWithType: IPriorityQueue<TValue,TCont>.push(TValue)\n  fullName: IPriorityQueue<TValue,TCont>.push(TValue)\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.size\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: size()\n  nameWithType: IPriorityQueue<TValue,TCont>.size()\n  fullName: IPriorityQueue<TValue,TCont>.size()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.top\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: top()\n  nameWithType: IPriorityQueue<TValue,TCont>.top()\n  fullName: IPriorityQueue<TValue,TCont>.top()\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: top_item\n  nameWithType: IPriorityQueue<TValue,TCont>.top_item\n  fullName: IPriorityQueue<TValue,TCont>.top_item\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: value_comp()\n  nameWithType: IPriorityQueue<TValue,TCont>.value_comp()\n  fullName: IPriorityQueue<TValue,TCont>.value_comp()\n- uid: Microsoft.VisualC.StlClr.BinaryDelegate`3\n  name: BinaryDelegate<TArg1,TArg2,TResult>\n  nameWithType: BinaryDelegate<TArg1,TArg2,TResult>\n  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TArg1,TArg2,TResult>\n- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: BinaryDelegate<TValue,TValue,Boolean>\n  nameWithType: BinaryDelegate<TValue,TValue,Boolean>\n  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,System.Boolean>\n  spec.csharp:\n  - uid: Microsoft.VisualC.StlClr.BinaryDelegate`3\n    name: BinaryDelegate\n    nameWithType: BinaryDelegate\n    fullName: Microsoft.VisualC.StlClr.BinaryDelegate\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.assign*\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: assign\n  nameWithType: IPriorityQueue<TValue,TCont>.assign\n  fullName: IPriorityQueue<TValue,TCont>.assign\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.empty*\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: empty\n  nameWithType: IPriorityQueue<TValue,TCont>.empty\n  fullName: IPriorityQueue<TValue,TCont>.empty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.pop*\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: pop\n  nameWithType: IPriorityQueue<TValue,TCont>.pop\n  fullName: IPriorityQueue<TValue,TCont>.pop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.push*\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: push\n  nameWithType: IPriorityQueue<TValue,TCont>.push\n  fullName: IPriorityQueue<TValue,TCont>.push\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.size*\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: size\n  nameWithType: IPriorityQueue<TValue,TCont>.size\n  fullName: IPriorityQueue<TValue,TCont>.size\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.top*\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: top\n  nameWithType: IPriorityQueue<TValue,TCont>.top\n  fullName: IPriorityQueue<TValue,TCont>.top\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item*\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: top_item\n  nameWithType: IPriorityQueue<TValue,TCont>.top_item\n  fullName: IPriorityQueue<TValue,TCont>.top_item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp*\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: value_comp\n  nameWithType: IPriorityQueue<TValue,TCont>.value_comp\n  fullName: IPriorityQueue<TValue,TCont>.value_comp\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/IPriorityQueue`2.xml\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n"}