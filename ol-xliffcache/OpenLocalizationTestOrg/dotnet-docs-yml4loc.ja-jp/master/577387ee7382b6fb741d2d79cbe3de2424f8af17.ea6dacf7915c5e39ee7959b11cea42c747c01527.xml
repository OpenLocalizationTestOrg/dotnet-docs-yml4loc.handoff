{"nodes":[{"content":"Represents a security token handler that processes tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>. By default, the handler will perform chain-trust validation of the X.509 certificate.","nodes":[{"pos":[0,219],"content":"Represents a security token handler that processes tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>. By default, the handler will perform chain-trust validation of the X.509 certificate.","nodes":[{"content":"Represents a security token handler that processes tokens of type <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>.","pos":[0,133],"source":"Represents a security token handler that processes tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."},{"content":"By default, the handler will perform chain-trust validation of the X.509 certificate.","pos":[134,219]}]}],"pos":[2527,2747],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class with default values.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> class with default values.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class with default values."}],"pos":[5488,5623],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false` and the <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.","nodes":[{"pos":[0,253],"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph> and the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt;</ph> validator is used as the default certificate validator.","source":"The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false` and the <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator."}],"pos":[5634,5888],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account.","nodes":[{"pos":[0,208],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> class by using a value that indicates whether the certificate should be mapped to a Windows account.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account."}],"pos":[7173,7382],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.","nodes":[{"pos":[0,142],"content":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt;</ph> validator is used as the default certificate validator.","pos":[0,142],"source":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator."}]}],"pos":[7393,7536],"yaml":true,"extradata":"MT"},{"content":"`true` if the certificate should be mapped to a Windows account; otherwise, `false`. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\"></xref> property.","nodes":[{"pos":[0,190],"content":"`true` if the certificate should be mapped to a Windows account; otherwise, `false`. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\"></xref> property.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the certificate should be mapped to a Windows account; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,84],"source":"`true` if the certificate should be mapped to a Windows account; otherwise, `false`."},{"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\"&gt;&lt;/xref&gt;</ph> property.","pos":[85,190],"source":" Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\"></xref> property."}]}],"pos":[7697,7890],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using the specified certificate validator.","nodes":[{"pos":[0,159],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> class by using the specified certificate validator.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using the specified certificate validator."}],"pos":[9271,9431],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false`.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>.","source":"The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false`."}],"pos":[9442,9550],"yaml":true,"extradata":"MT"},{"content":"The certificate validator to use. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\"></xref> property.","nodes":[{"pos":[0,147],"content":"The certificate validator to use. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\"></xref> property.","nodes":[{"content":"The certificate validator to use.","pos":[0,33]},{"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\"&gt;&lt;/xref&gt;</ph> property.","pos":[34,147],"source":" Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\"></xref> property."}]}],"pos":[9819,9967],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator.","nodes":[{"pos":[0,248],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"&gt;&lt;/xref&gt;</ph> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator."}],"pos":[11420,11669],"yaml":true},{"content":"`true` if the certificate should be mapped to a Windows account; otherwise, `false`. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\"></xref> property.","nodes":[{"pos":[0,190],"content":"`true` if the certificate should be mapped to a Windows account; otherwise, `false`. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\"></xref> property.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the certificate should be mapped to a Windows account; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,84],"source":"`true` if the certificate should be mapped to a Windows account; otherwise, `false`."},{"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\"&gt;&lt;/xref&gt;</ph> property.","pos":[85,190],"source":" Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\"></xref> property."}]}],"pos":[11908,12101],"yaml":true},{"content":"The certificate validator to use. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\"></xref> property.","nodes":[{"pos":[0,147],"content":"The certificate validator to use. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\"></xref> property.","nodes":[{"content":"The certificate validator to use.","pos":[0,33]},{"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\"&gt;&lt;/xref&gt;</ph> property.","pos":[34,147],"source":" Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\"></xref> property."}]}],"pos":[12219,12367],"yaml":true},{"content":"Returns a value that indicates whether the specified reader is referring to an `<ds:X509Data>` element.","nodes":[{"pos":[0,103],"content":"Returns a value that indicates whether the specified reader is referring to an <ph id=\"ph1\">`&lt;ds:X509Data&gt;`</ph> element.","source":"Returns a value that indicates whether the specified reader is referring to an `<ds:X509Data>` element."}],"pos":[13660,13764],"yaml":true},{"content":"An XML reader positioned at the start element of the key identifier clause.","nodes":[{"pos":[0,75],"content":"An XML reader positioned at the start element of the key identifier clause.","nodes":[{"content":"An XML reader positioned at the start element of the key identifier clause.","pos":[0,75]}]}],"pos":[13951,14027],"yaml":true},{"content":"`true` if the reader is referring to an `<ds:X509Data>` element; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the reader is referring to an <ph id=\"ph2\">`&lt;ds:X509Data&gt;`</ph> element; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the reader is referring to an `<ds:X509Data>` element; otherwise, `false`."}],"pos":[14085,14172],"yaml":true},{"content":"<code>reader</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>reader</code> is `null`."}],"pos":[14381,14412],"yaml":true},{"content":"Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.","nodes":[{"pos":[0,128],"content":"Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.","nodes":[{"content":"Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.","pos":[0,128]}]}],"pos":[15532,15661],"yaml":true},{"content":"A reader pointing to the token XML.","nodes":[{"pos":[0,35],"content":"A reader pointing to the token XML.","nodes":[{"content":"A reader pointing to the token XML.","pos":[0,35]}]}],"pos":[15834,15870],"yaml":true},{"content":"`true` if the reader is pointing to an X.509 security token; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if the reader is pointing to an X.509 security token; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the reader is pointing to an X.509 security token; otherwise, `false`."}],"pos":[15928,16011],"yaml":true},{"content":"<code>reader</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>reader</code> is `null`."}],"pos":[16206,16237],"yaml":true},{"content":"Gets a value that indicates whether this handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","nodes":[{"pos":[0,154],"content":"Gets a value that indicates whether this handler supports validation of tokens of type <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that indicates whether this handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."}],"pos":[17284,17439],"yaml":true},{"content":"`true` if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, `false`. Always `true`.","nodes":[{"pos":[0,162],"content":"`true` if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, `false`. Always `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the handler supports validation of tokens of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,147],"source":"`true` if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, `false`."},{"content":"Always <ph id=\"ph1\">`true`</ph>.","pos":[148,162],"source":" Always `true`."}]}],"pos":[17567,17732],"yaml":true},{"content":"Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.","nodes":[{"pos":[0,109],"content":"Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.","nodes":[{"content":"Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.","pos":[0,109]}]}],"pos":[19201,19311],"yaml":true},{"content":"The supported key identifier clause types are:  \n  \n1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  \n  \n2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  \n  \n3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>","nodes":[{"pos":[0,46],"content":"The supported key identifier clause types are:","nodes":[{"content":"The supported key identifier clause types are:","pos":[0,46]}]},{"pos":[56,126],"content":"<xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>","nodes":[]},{"pos":[136,201],"content":"<xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>","nodes":[]},{"pos":[211,276],"content":"<xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>","nodes":[]}],"pos":[19322,19607],"yaml":true,"extradata":"MT"},{"content":"The key identifier clause to be serialized.","nodes":[{"pos":[0,43],"content":"The key identifier clause to be serialized.","nodes":[{"content":"The key identifier clause to be serialized.","pos":[0,43]}]}],"pos":[19907,19951],"yaml":true},{"content":"`true` if the <code>securityKeyIdentifierClause</code> is supported and if the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\"></xref> property is set to `true`; otherwise, `false`.","nodes":[{"pos":[0,230],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">securityKeyIdentifierClause</ph><ept id=\"p1\">&lt;/code&gt;</ept> is supported and if the <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\"&gt;&lt;/xref&gt;</ph> property is set to <ph id=\"ph4\">`true`</ph>; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if the <code>securityKeyIdentifierClause</code> is supported and if the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\"></xref> property is set to `true`; otherwise, `false`."}],"pos":[20009,20242],"yaml":true},{"content":"<code>securityKeyIdentifierClause</code> is `null`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>securityKeyIdentifierClause</code> is `null`."}],"pos":[20452,20504],"yaml":true},{"content":"Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","nodes":[{"pos":[0,141],"content":"Gets a value that indicates whether this handler can write tokens of type <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."}],"pos":[21533,21675],"yaml":true},{"content":"`true` if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, `false`. Always `true`.","nodes":[{"pos":[0,149],"content":"`true` if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, `false`. Always `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the handler can write tokens of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,134],"source":"`true` if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, `false`."},{"content":"Always <ph id=\"ph1\">`true`</ph>.","pos":[135,149],"source":" Always `true`."}]}],"pos":[21800,21952],"yaml":true},{"content":"Gets or sets the <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that is used by the current instance.","nodes":[{"pos":[0,131],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"&gt;&lt;/xref&gt;</ph> that is used by the current instance.","source":"Gets or sets the <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that is used by the current instance."}],"pos":[23120,23252],"yaml":true},{"content":"The X.509 certificate validator that is used by the current instance.","nodes":[{"pos":[0,69],"content":"The X.509 certificate validator that is used by the current instance.","nodes":[{"content":"The X.509 certificate validator that is used by the current instance.","pos":[0,69]}]}],"pos":[23472,23542],"yaml":true},{"content":"Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.","nodes":[{"pos":[0,82],"content":"Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.","nodes":[{"content":"Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.","pos":[0,82]}]}],"pos":[24739,24822],"yaml":true},{"content":"The X.509 token type URI. By default, the value of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate\"></xref> property.","nodes":[{"pos":[0,148],"content":"The X.509 token type URI. By default, the value of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate\"></xref> property.","nodes":[{"content":"The X.509 token type URI.","pos":[0,25]},{"content":"By default, the value of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate\"&gt;&lt;/xref&gt;</ph> property.","pos":[26,148],"source":" By default, the value of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate\"></xref> property."}]}],"pos":[24976,25125],"yaml":true},{"content":"Loads custom configuration from XML.","nodes":[{"pos":[0,36],"content":"Loads custom configuration from XML.","nodes":[{"content":"Loads custom configuration from XML.","pos":[0,36]}]}],"pos":[26430,26467],"yaml":true},{"content":"The XML elements that contain the custom configuration.","nodes":[{"pos":[0,55],"content":"The XML elements that contain the custom configuration.","nodes":[{"content":"The XML elements that contain the custom configuration.","pos":[0,55]}]}],"pos":[26683,26739],"yaml":true},{"content":"<code>customConfigElements</code> is `null`.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;customConfigElements&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>customConfigElements</code> is `null`."}],"pos":[26945,26990],"yaml":true},{"content":"The custom configuration specified is not valid.","nodes":[{"pos":[0,48],"content":"The custom configuration specified is not valid.","nodes":[{"content":"The custom configuration specified is not valid.","pos":[0,48]}]}],"pos":[27100,27149],"yaml":true},{"content":"Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.","nodes":[{"pos":[0,103],"content":"Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.","nodes":[{"content":"Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.","pos":[0,103]}]}],"pos":[28172,28276],"yaml":true},{"content":"`true` if the validating token should be mapped to a Windows account; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if the validating token should be mapped to a Windows account; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the validating token should be mapped to a Windows account; otherwise, `false`."}],"pos":[28396,28488],"yaml":true},{"content":"Deserializes a key identifier clause referenced by the specified XML reader.","nodes":[{"pos":[0,76],"content":"Deserializes a key identifier clause referenced by the specified XML reader.","nodes":[{"content":"Deserializes a key identifier clause referenced by the specified XML reader.","pos":[0,76]}]}],"pos":[29770,29847],"yaml":true},{"content":"The XML reader referencing the key identifier clause.","nodes":[{"pos":[0,53],"content":"The XML reader referencing the key identifier clause.","nodes":[{"content":"The XML reader referencing the key identifier clause.","pos":[0,53]}]}],"pos":[30082,30136],"yaml":true},{"content":"The key identifier clause that was deserialized from the XML.","nodes":[{"pos":[0,61],"content":"The key identifier clause that was deserialized from the XML.","nodes":[{"content":"The key identifier clause that was deserialized from the XML.","pos":[0,61]}]}],"pos":[30235,30297],"yaml":true},{"content":"<code>reader</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>reader</code> is `null`."}],"pos":[30503,30534],"yaml":true},{"content":"Deserializes the X.509 security token referenced by the specified XML reader.","nodes":[{"pos":[0,77],"content":"Deserializes the X.509 security token referenced by the specified XML reader.","nodes":[{"content":"Deserializes the X.509 security token referenced by the specified XML reader.","pos":[0,77]}]}],"pos":[31636,31714],"yaml":true},{"content":"An XML reader that is pointing to an X.509 security token.","nodes":[{"pos":[0,58],"content":"An XML reader that is pointing to an X.509 security token.","nodes":[{"content":"An XML reader that is pointing to an X.509 security token.","pos":[0,58]}]}],"pos":[31921,31980],"yaml":true},{"content":"The security token deserialized from the XML. An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","nodes":[{"pos":[0,128],"content":"The security token deserialized from the XML. An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","nodes":[{"content":"The security token deserialized from the XML.","pos":[0,45]},{"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>.","pos":[46,128],"source":" An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."}]}],"pos":[32065,32194],"yaml":true},{"content":"<code>reader</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>reader</code> is `null`."}],"pos":[32386,32417],"yaml":true},{"content":"<code>reader</code> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile. Or the encodingType specified is other than Base64 or HexBinary.","nodes":[{"pos":[0,183],"content":"<code>reader</code> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile. Or the encodingType specified is other than Base64 or HexBinary.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;reader&lt;/code&gt;</ph> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile.","pos":[0,118],"source":"<code>reader</code> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile."},{"content":"Or the encodingType specified is other than Base64 or HexBinary.","pos":[119,183]}]}],"pos":[32509,32693],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> of the tokens that this handler processes.","nodes":[{"pos":[0,84],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the tokens that this handler processes.","source":"Gets the <xref href=\"System.Type\"></xref> of the tokens that this handler processes."}],"pos":[33698,33783],"yaml":true},{"content":"By default, the type of the <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> class.","nodes":[{"pos":[0,101],"content":"By default, the type of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph> class.","source":"By default, the type of the <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> class."}],"pos":[33901,34003],"yaml":true},{"content":"Validates the specified X.509 security token.","nodes":[{"pos":[0,45],"content":"Validates the specified X.509 security token.","nodes":[{"content":"Validates the specified X.509 security token.","pos":[0,45]}]}],"pos":[35297,35343],"yaml":true},{"content":"The token to be validated.","nodes":[{"pos":[0,26],"content":"The token to be validated.","nodes":[{"content":"The token to be validated.","pos":[0,26]}]}],"pos":[35641,35668],"yaml":true},{"content":"The identities contained in the token.","nodes":[{"pos":[0,38],"content":"The identities contained in the token.","nodes":[{"content":"The identities contained in the token.","pos":[0,38]}]}],"pos":[35800,35839],"yaml":true},{"content":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable from <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."}],"pos":[36027,36137],"yaml":true},{"content":"<code>token</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>token</code> is `null`."}],"pos":[36239,36269],"yaml":true},{"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"></xref> property is `null`.  \n  \n -or-  \n  \n There is no issuer name registry (<xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref>) configured. (The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry\"></xref> property of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> referenced by the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"></xref> property is `null`.)","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"></xref> property is `null`."},{"pos":[114,118],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[125,568],"content":"There is no issuer name registry (<xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref>) configured. (The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry\"></xref> property of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> referenced by the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"></xref> property is `null`.)","nodes":[{"content":"There is no issuer name registry (<ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"&gt;&lt;/xref&gt;</ph>) configured.","pos":[0,114],"source":"There is no issuer name registry (<xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref>) configured."},{"content":"(The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry\"&gt;&lt;/xref&gt;</ph> property of the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"&gt;&lt;/xref&gt;</ph> referenced by the <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph4\">`null`</ph>.)","pos":[115,443],"source":" (The <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry\"></xref> property of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\"></xref> referenced by the <xref href=\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\"></xref> property is `null`.)"}]}],"pos":[36379,36964],"yaml":true},{"content":"The current <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> was unable to validate the certificate in the token.","nodes":[{"pos":[0,141],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"&gt;&lt;/xref&gt;</ph> was unable to validate the certificate in the token.","source":"The current <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> was unable to validate the certificate in the token."}],"pos":[37130,37272],"yaml":true},{"content":"The current <xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref> returned `null` when trying to resolve the issuer of the certificate in the token.","nodes":[{"pos":[0,162],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"&gt;&lt;/xref&gt;</ph> returned <ph id=\"ph2\">`null`</ph> when trying to resolve the issuer of the certificate in the token.","source":"The current <xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref> returned `null` when trying to resolve the issuer of the certificate in the token."}],"pos":[37418,37581],"yaml":true},{"content":"Serializes the specified key identifier clause to the XML writer.","nodes":[{"pos":[0,65],"content":"Serializes the specified key identifier clause to the XML writer.","nodes":[{"content":"Serializes the specified key identifier clause to the XML writer.","pos":[0,65]}]}],"pos":[39028,39094],"yaml":true},{"content":"The XML writer to which the key identifier clause should be serialized.","nodes":[{"pos":[0,71],"content":"The XML writer to which the key identifier clause should be serialized.","nodes":[{"content":"The XML writer to which the key identifier clause should be serialized.","pos":[0,71]}]}],"pos":[39364,39436],"yaml":true},{"content":"The key identifier clause to serialize.","nodes":[{"pos":[0,39],"content":"The key identifier clause to serialize.","nodes":[{"content":"The key identifier clause to serialize.","pos":[0,39]}]}],"pos":[39561,39601],"yaml":true},{"content":"<code>securityKeyIdentifierClause</code> is `null`.  \n  \n -or-  \n  \n <code>writer</code> is `null`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>securityKeyIdentifierClause</code> is `null`."},{"pos":[58,62],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[69,99],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>writer</code> is `null`."}],"pos":[39808,39914],"yaml":true},{"content":"The <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\"></xref> property is `false`.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`false`</ph>.","source":"The <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\"></xref> property is `false`."}],"pos":[40024,40154],"yaml":true},{"content":"Serializes the specified X.509 security token to the specified XML writer.","nodes":[{"pos":[0,74],"content":"Serializes the specified X.509 security token to the specified XML writer.","nodes":[{"content":"Serializes the specified X.509 security token to the specified XML writer.","pos":[0,74]}]}],"pos":[41433,41508],"yaml":true},{"content":"The XML writer to which the token should be serialized.","nodes":[{"pos":[0,55],"content":"The XML writer to which the token should be serialized.","nodes":[{"content":"The XML writer to which the token should be serialized.","pos":[0,55]}]}],"pos":[41728,41784],"yaml":true},{"content":"The X.509 security token to serialize. An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","nodes":[{"pos":[0,121],"content":"The X.509 security token to serialize. An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","nodes":[{"content":"The X.509 security token to serialize.","pos":[0,38]},{"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>.","pos":[39,121],"source":" An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."}]}],"pos":[41873,41995],"yaml":true},{"content":"<code>token</code> is `null`.  \n  \n -or-  \n  \n <code>writer</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>token</code> is `null`."},{"pos":[36,40],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[47,77],"content":"<ph id=\"ph1\">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>writer</code> is `null`."}],"pos":[42188,42272],"yaml":true},{"content":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">&lt;code&gt;token&lt;/code&gt;</ph> is not assignable from <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."}],"pos":[42366,42476],"yaml":true},{"content":"Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.","nodes":[{"pos":[0,89],"content":"Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.","nodes":[{"content":"Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.","pos":[0,89]}]}],"pos":[43607,43697],"yaml":true},{"content":"Supported XmlDSig-defined <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> types are:  \n  \n-   X509IssuerSerial  \n  \n-   X509SKI  \n  \n-   X509Certificate","nodes":[{"pos":[0,99],"content":"Supported XmlDSig-defined <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> types are:","nodes":[{"content":"Supported XmlDSig-defined <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph> types are:","pos":[0,99],"source":"Supported XmlDSig-defined <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> types are:"}]},{"pos":[109,125],"content":"X509IssuerSerial","nodes":[{"content":"X509IssuerSerial","pos":[0,16]}]},{"pos":[135,142],"content":"X509SKI","nodes":[{"content":"X509SKI","pos":[0,7]}]},{"pos":[152,167],"content":"X509Certificate","nodes":[{"content":"X509Certificate","pos":[0,15]}]}],"pos":[43708,43884],"yaml":true,"extradata":"MT"},{"content":"`true` if XmlDsig-defined clause types are preferred; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if XmlDsig-defined clause types are preferred; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if XmlDsig-defined clause types are preferred; otherwise, `false`."}],"pos":[44022,44098],"yaml":true},{"content":"Gets or sets the <xref href=\"System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\"></xref> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account.","nodes":[{"pos":[0,230],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\"&gt;&lt;/xref&gt;</ph> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account.","source":"Gets or sets the <xref href=\"System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\"></xref> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account."}],"pos":[45337,45568],"yaml":true},{"content":"An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.","nodes":[{"pos":[0,195],"content":"An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.","nodes":[{"content":"An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.","pos":[0,195]}]}],"pos":[45801,45997],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  commentId: T:System.IdentityModel.Tokens.X509SecurityTokenHandler\n  id: X509SecurityTokenHandler\n  children:\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  - System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  langs:\n  - csharp\n  name: X509SecurityTokenHandler\n  nameWithType: X509SecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents a security token handler that processes tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>. By default, the handler will perform chain-trust validation of the X.509 certificate.\n  syntax:\n    content: 'public class X509SecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityTokenHandler\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: X509SecurityTokenHandler()\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler()\n  fullName: X509SecurityTokenHandler.X509SecurityTokenHandler()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class with default values.\n  remarks: The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false` and the <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.\n  syntax:\n    content: public X509SecurityTokenHandler ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: X509SecurityTokenHandler(Boolean)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)\n  fullName: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account.\n  remarks: The <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> validator is used as the default certificate validator.\n  syntax:\n    content: public X509SecurityTokenHandler (bool mapToWindows);\n    parameters:\n    - id: mapToWindows\n      type: System.Boolean\n      description: '`true` if the certificate should be mapped to a Windows account; otherwise, `false`. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\"></xref> property.'\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)\n  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator)'\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: X509SecurityTokenHandler(X509CertificateValidator)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)\n  fullName: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using the specified certificate validator.\n  remarks: The <xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A> property is set to `false`.\n  syntax:\n    content: public X509SecurityTokenHandler (System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);\n    parameters:\n    - id: certificateValidator\n      type: System.IdentityModel.Selectors.X509CertificateValidator\n      description: The certificate validator to use. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\"></xref> property.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)\n  id: '#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)'\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: X509SecurityTokenHandler(Boolean, X509CertificateValidator)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean, X509CertificateValidator)\n  fullName: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean, X509CertificateValidator)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler\"></xref> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator.\n  syntax:\n    content: public X509SecurityTokenHandler (bool mapToWindows, System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);\n    parameters:\n    - id: mapToWindows\n      type: System.Boolean\n      description: '`true` if the certificate should be mapped to a Windows account; otherwise, `false`. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\"></xref> property.'\n    - id: certificateValidator\n      type: System.IdentityModel.Selectors.X509CertificateValidator\n      description: The certificate validator to use. Sets the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\"></xref> property.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  fullName: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified reader is referring to an `<ds:X509Data>` element.\n  syntax:\n    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader positioned at the start element of the key identifier clause.\n    return:\n      type: System.Boolean\n      description: '`true` if the reader is referring to an `<ds:X509Data>` element; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  id: CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CanReadToken(XmlReader)\n  nameWithType: X509SecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: X509SecurityTokenHandler.CanReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.\n  syntax:\n    content: public override bool CanReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: A reader pointing to the token XML.\n    return:\n      type: System.Boolean\n      description: '`true` if the reader is pointing to an X.509 security token; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken\n  commentId: P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken\n  id: CanValidateToken\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CanValidateToken\n  nameWithType: X509SecurityTokenHandler.CanValidateToken\n  fullName: X509SecurityTokenHandler.CanValidateToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanValidateToken { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the handler supports validation of tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, `false`. Always `true`.'\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.\n  remarks: \"The supported key identifier clause types are:  \\n  \\n1.  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  \\n  \\n2.  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  \\n  \\n3.  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>\"\n  syntax:\n    content: public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);\n    parameters:\n    - id: securityKeyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to be serialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>securityKeyIdentifierClause</code> is supported and if the <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\"></xref> property is set to `true`; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityKeyIdentifierClause</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken\n  commentId: P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken\n  id: CanWriteToken\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CanWriteToken\n  nameWithType: X509SecurityTokenHandler.CanWriteToken\n  fullName: X509SecurityTokenHandler.CanWriteToken\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether this handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  syntax:\n    content: public override bool CanWriteToken { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the handler can write tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, `false`. Always `true`.'\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\n  commentId: P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\n  id: CertificateValidator\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: CertificateValidator\n  nameWithType: X509SecurityTokenHandler.CertificateValidator\n  fullName: X509SecurityTokenHandler.CertificateValidator\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that is used by the current instance.\n  syntax:\n    content: public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }\n    return:\n      type: System.IdentityModel.Selectors.X509CertificateValidator\n      description: The X.509 certificate validator that is used by the current instance.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers\n  id: GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: GetTokenTypeIdentifiers()\n  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: X509SecurityTokenHandler.GetTokenTypeIdentifiers()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.\n  syntax:\n    content: public override string[] GetTokenTypeIdentifiers ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: The X.509 token type URI. By default, the value of the <xref href=\"System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate\"></xref> property.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  id: LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  fullName: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Loads custom configuration from XML.\n  syntax:\n    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);\n    parameters:\n    - id: customConfigElements\n      type: System.Xml.XmlNodeList\n      description: The XML elements that contain the custom configuration.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>customConfigElements</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The custom configuration specified is not valid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\n  commentId: P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\n  id: MapToWindows\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: MapToWindows\n  nameWithType: X509SecurityTokenHandler.MapToWindows\n  fullName: X509SecurityTokenHandler.MapToWindows\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.\n  syntax:\n    content: public bool MapToWindows { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the validating token should be mapped to a Windows account; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  id: ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  fullName: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Deserializes a key identifier clause referenced by the specified XML reader.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: The XML reader referencing the key identifier clause.\n    return:\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause that was deserialized from the XML.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  id: ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: ReadToken(XmlReader)\n  nameWithType: X509SecurityTokenHandler.ReadToken(XmlReader)\n  fullName: X509SecurityTokenHandler.ReadToken(XmlReader)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Deserializes the X.509 security token referenced by the specified XML reader.\n  syntax:\n    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);\n    parameters:\n    - id: reader\n      type: System.Xml.XmlReader\n      description: An XML reader that is pointing to an X.509 security token.\n    return:\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token deserialized from the XML. An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>reader</code> is `null`.\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: <code>reader</code> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile. Or the encodingType specified is other than Base64 or HexBinary.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType\n  commentId: P:System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType\n  id: TokenType\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: TokenType\n  nameWithType: X509SecurityTokenHandler.TokenType\n  fullName: X509SecurityTokenHandler.TokenType\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the <xref href=\"System.Type\"></xref> of the tokens that this handler processes.\n  syntax:\n    content: public override Type TokenType { get; }\n    return:\n      type: System.Type\n      description: By default, the type of the <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> class.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: ValidateToken(SecurityToken)\n  nameWithType: X509SecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: X509SecurityTokenHandler.ValidateToken(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Validates the specified X.509 security token.\n  syntax:\n    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The token to be validated.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n      description: The identities contained in the token.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>token</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\\\"></xref> property is `null`.  \\n  \\n -or-  \\n  \\n There is no issuer name registry (<xref href=\\\"System.IdentityModel.Tokens.IssuerNameRegistry\\\"></xref>) configured. (The <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry\\\"></xref> property of the <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration\\\"></xref> referenced by the <xref href=\\\"System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\\\"></xref> property is `null`.)\"\n  - type: System.IdentityModel.Tokens.SecurityTokenValidationException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException\n    description: The current <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> was unable to validate the certificate in the token.\n  - type: System.IdentityModel.Tokens.SecurityTokenException\n    commentId: T:System.IdentityModel.Tokens.SecurityTokenException\n    description: The current <xref href=\"System.IdentityModel.Tokens.IssuerNameRegistry\"></xref> returned `null` when trying to resolve the issuer of the certificate in the token.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n  fullName: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified key identifier clause to the XML writer.\n  syntax:\n    content: public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer to which the key identifier clause should be serialized.\n    - id: securityKeyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to serialize.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>securityKeyIdentifierClause</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>writer</code> is `null`.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\"></xref> property is `false`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteToken(XmlWriter, SecurityToken)\n  nameWithType: X509SecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n  fullName: X509SecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Serializes the specified X.509 security token to the specified XML writer.\n  syntax:\n    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: writer\n      type: System.Xml.XmlWriter\n      description: The XML writer to which the token should be serialized.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The X.509 security token to serialize. An instance of <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>token</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>writer</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  commentId: P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  id: WriteXmlDSigDefinedClauseTypes\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: WriteXmlDSigDefinedClauseTypes\n  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  fullName: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.\n  remarks: \"Supported XmlDSig-defined <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> types are:  \\n  \\n-   X509IssuerSerial  \\n  \\n-   X509SKI  \\n  \\n-   X509Certificate\"\n  syntax:\n    content: public bool WriteXmlDSigDefinedClauseTypes { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if XmlDsig-defined clause types are preferred; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  commentId: P:System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  id: X509NTAuthChainTrustValidator\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  langs:\n  - csharp\n  name: X509NTAuthChainTrustValidator\n  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  fullName: X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets or sets the <xref href=\"System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\"></xref> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account.\n  syntax:\n    content: public System.IdentityModel.Tokens.X509NTAuthChainTrustValidator X509NTAuthChainTrustValidator { get; set; }\n    return:\n      type: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\n      description: An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.\n  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenHandler\n  nameWithType: SecurityTokenHandler\n  fullName: System.IdentityModel.Tokens.SecurityTokenHandler\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Xml.XmlException\n  parent: System.Xml\n  isExternal: false\n  name: XmlException\n  nameWithType: XmlException\n  fullName: System.Xml.XmlException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.IdentityModel.Tokens.SecurityTokenValidationException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenValidationException\n  nameWithType: SecurityTokenValidationException\n  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException\n- uid: System.IdentityModel.Tokens.SecurityTokenException\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityTokenException\n  nameWithType: SecurityTokenException\n  fullName: System.IdentityModel.Tokens.SecurityTokenException\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509SecurityTokenHandler()\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler()\n  fullName: X509SecurityTokenHandler.X509SecurityTokenHandler()\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509SecurityTokenHandler(Boolean)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)\n  fullName: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509SecurityTokenHandler(X509CertificateValidator)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)\n  fullName: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)\n- uid: System.IdentityModel.Selectors.X509CertificateValidator\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: X509CertificateValidator\n  nameWithType: X509CertificateValidator\n  fullName: System.IdentityModel.Selectors.X509CertificateValidator\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509SecurityTokenHandler(Boolean, X509CertificateValidator)\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean, X509CertificateValidator)\n  fullName: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean, X509CertificateValidator)\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n  fullName: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(XmlReader)\n  nameWithType: X509SecurityTokenHandler.CanReadToken(XmlReader)\n  fullName: X509SecurityTokenHandler.CanReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: X509SecurityTokenHandler.CanValidateToken\n  fullName: X509SecurityTokenHandler.CanValidateToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n  fullName: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: X509SecurityTokenHandler.CanWriteToken\n  fullName: X509SecurityTokenHandler.CanWriteToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CertificateValidator\n  nameWithType: X509SecurityTokenHandler.CertificateValidator\n  fullName: X509SecurityTokenHandler.CertificateValidator\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers()\n  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers()\n  fullName: X509SecurityTokenHandler.GetTokenTypeIdentifiers()\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n  fullName: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: MapToWindows\n  nameWithType: X509SecurityTokenHandler.MapToWindows\n  fullName: X509SecurityTokenHandler.MapToWindows\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ReadKeyIdentifierClause(XmlReader)\n  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n  fullName: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader)\n  nameWithType: X509SecurityTokenHandler.ReadToken(XmlReader)\n  fullName: X509SecurityTokenHandler.ReadToken(XmlReader)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: X509SecurityTokenHandler.TokenType\n  fullName: X509SecurityTokenHandler.TokenType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: X509SecurityTokenHandler.ValidateToken(SecurityToken)\n  fullName: X509SecurityTokenHandler.ValidateToken(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Security.Claims.ClaimsIdentity\n  name: ClaimsIdentity\n  nameWithType: ClaimsIdentity\n  fullName: System.Security.Claims.ClaimsIdentity\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<ClaimsIdentity>\n  nameWithType: ReadOnlyCollection<ClaimsIdentity>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Claims.ClaimsIdentity\n    name: ClaimsIdentity\n    nameWithType: ClaimsIdentity\n    fullName: System.Security.Claims.ClaimsIdentity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n  fullName: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter, SecurityKeyIdentifierClause)\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteToken(XmlWriter, SecurityToken)\n  nameWithType: X509SecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n  fullName: X509SecurityTokenHandler.WriteToken(XmlWriter, SecurityToken)\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteXmlDSigDefinedClauseTypes\n  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  fullName: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509NTAuthChainTrustValidator\n  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  fullName: X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n- uid: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: X509NTAuthChainTrustValidator\n  nameWithType: X509NTAuthChainTrustValidator\n  fullName: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509SecurityTokenHandler\n  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler\n  fullName: X509SecurityTokenHandler.X509SecurityTokenHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanReadKeyIdentifierClause\n  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause\n  fullName: X509SecurityTokenHandler.CanReadKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanReadToken\n  nameWithType: X509SecurityTokenHandler.CanReadToken\n  fullName: X509SecurityTokenHandler.CanReadToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanValidateToken\n  nameWithType: X509SecurityTokenHandler.CanValidateToken\n  fullName: X509SecurityTokenHandler.CanValidateToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanWriteKeyIdentifierClause\n  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause\n  fullName: X509SecurityTokenHandler.CanWriteKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CanWriteToken\n  nameWithType: X509SecurityTokenHandler.CanWriteToken\n  fullName: X509SecurityTokenHandler.CanWriteToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: CertificateValidator\n  nameWithType: X509SecurityTokenHandler.CertificateValidator\n  fullName: X509SecurityTokenHandler.CertificateValidator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: GetTokenTypeIdentifiers\n  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers\n  fullName: X509SecurityTokenHandler.GetTokenTypeIdentifiers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: LoadCustomConfiguration\n  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration\n  fullName: X509SecurityTokenHandler.LoadCustomConfiguration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: MapToWindows\n  nameWithType: X509SecurityTokenHandler.MapToWindows\n  fullName: X509SecurityTokenHandler.MapToWindows\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ReadKeyIdentifierClause\n  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause\n  fullName: X509SecurityTokenHandler.ReadKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ReadToken\n  nameWithType: X509SecurityTokenHandler.ReadToken\n  fullName: X509SecurityTokenHandler.ReadToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: TokenType\n  nameWithType: X509SecurityTokenHandler.TokenType\n  fullName: X509SecurityTokenHandler.TokenType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: ValidateToken\n  nameWithType: X509SecurityTokenHandler.ValidateToken\n  fullName: X509SecurityTokenHandler.ValidateToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteKeyIdentifierClause\n  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause\n  fullName: X509SecurityTokenHandler.WriteKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteToken\n  nameWithType: X509SecurityTokenHandler.WriteToken\n  fullName: X509SecurityTokenHandler.WriteToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: WriteXmlDSigDefinedClauseTypes\n  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  fullName: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator*\n  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler\n  isExternal: false\n  name: X509NTAuthChainTrustValidator\n  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  fullName: X509SecurityTokenHandler.X509NTAuthChainTrustValidator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509SecurityTokenHandler.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CanReadToken(String)\n  nameWithType: SecurityTokenHandler.CanReadToken(String)\n  fullName: SecurityTokenHandler.CanReadToken(String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.Configuration\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: Configuration\n  nameWithType: SecurityTokenHandler.Configuration\n  fullName: SecurityTokenHandler.Configuration\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ContainingCollection\n  nameWithType: SecurityTokenHandler.ContainingCollection\n  fullName: SecurityTokenHandler.ContainingCollection\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CreateSecurityTokenReference(SecurityToken, Boolean)\n  nameWithType: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)\n  fullName: SecurityTokenHandler.CreateSecurityTokenReference(SecurityToken, Boolean)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: CreateToken(SecurityTokenDescriptor)\n  nameWithType: SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n  fullName: SecurityTokenHandler.CreateToken(SecurityTokenDescriptor)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: DetectReplayedToken(SecurityToken)\n  nameWithType: SecurityTokenHandler.DetectReplayedToken(SecurityToken)\n  fullName: SecurityTokenHandler.DetectReplayedToken(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ReadToken(String)\n  nameWithType: SecurityTokenHandler.ReadToken(String)\n  fullName: SecurityTokenHandler.ReadToken(String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: ReadToken(XmlReader, SecurityTokenResolver)\n  nameWithType: SecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)\n  fullName: SecurityTokenHandler.ReadToken(XmlReader, SecurityTokenResolver)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: TraceTokenValidationFailure(SecurityToken, String)\n  nameWithType: SecurityTokenHandler.TraceTokenValidationFailure(SecurityToken, String)\n  fullName: SecurityTokenHandler.TraceTokenValidationFailure(SecurityToken, String)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: TraceTokenValidationSuccess(SecurityToken)\n  nameWithType: SecurityTokenHandler.TraceTokenValidationSuccess(SecurityToken)\n  fullName: SecurityTokenHandler.TraceTokenValidationSuccess(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.SecurityTokenHandler\n  isExternal: false\n  name: WriteToken(SecurityToken)\n  nameWithType: SecurityTokenHandler.WriteToken(SecurityToken)\n  fullName: SecurityTokenHandler.WriteToken(SecurityToken)\n"}