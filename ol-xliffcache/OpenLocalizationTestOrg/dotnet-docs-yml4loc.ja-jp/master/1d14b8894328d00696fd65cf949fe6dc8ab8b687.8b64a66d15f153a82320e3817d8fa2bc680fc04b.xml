{"nodes":[{"content":"References a method to be called when a corresponding asynchronous operation completes.","nodes":[{"pos":[0,87],"content":"References a method to be called when a corresponding asynchronous operation completes.","nodes":[{"content":"References a method to be called when a corresponding asynchronous operation completes.","pos":[0,87]}]}],"pos":[335,423],"yaml":true},{"content":"Use an <xref:System.AsyncCallback> delegate to process the results of an asynchronous operation in a separate thread. The <xref:System.AsyncCallback> delegate represents a callback method that is called when the asynchronous operation completes. The callback method takes an <xref:System.IAsyncResult> parameter, which is subsequently used to obtain the results of the asynchronous operation.  \n  \n For more information about asynchronous programming, see [Using an AsyncCallback Delegate to End an Asynchronous Operation](~/docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-to-end-an-asynchronous-operation.md) and [Using an AsyncCallback Delegate and State Object](~/docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-and-state-object.md) in [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).","nodes":[{"pos":[0,392],"content":"Use an <xref:System.AsyncCallback> delegate to process the results of an asynchronous operation in a separate thread. The <xref:System.AsyncCallback> delegate represents a callback method that is called when the asynchronous operation completes. The callback method takes an <xref:System.IAsyncResult> parameter, which is subsequently used to obtain the results of the asynchronous operation.","nodes":[{"content":"Use an <xref:System.AsyncCallback> delegate to process the results of an asynchronous operation in a separate thread. The <xref:System.AsyncCallback> delegate represents a callback method that is called when the asynchronous operation completes. The callback method takes an <xref:System.IAsyncResult> parameter, which is subsequently used to obtain the results of the asynchronous operation.","pos":[0,392],"nodes":[{"content":"Use an <ph id=\"ph1\">&lt;xref:System.AsyncCallback&gt;</ph> delegate to process the results of an asynchronous operation in a separate thread.","pos":[0,117],"source":"Use an <xref:System.AsyncCallback> delegate to process the results of an asynchronous operation in a separate thread."},{"content":"The <ph id=\"ph1\">&lt;xref:System.AsyncCallback&gt;</ph> delegate represents a callback method that is called when the asynchronous operation completes.","pos":[118,245],"source":" The <xref:System.AsyncCallback> delegate represents a callback method that is called when the asynchronous operation completes."},{"content":"The callback method takes an <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> parameter, which is subsequently used to obtain the results of the asynchronous operation.","pos":[246,392],"source":" The callback method takes an <xref:System.IAsyncResult> parameter, which is subsequently used to obtain the results of the asynchronous operation."}]}]},{"pos":[399,935],"content":"For more information about asynchronous programming, see <bpt id=\"p1\">[</bpt>Using an AsyncCallback Delegate to End an Asynchronous Operation<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-to-end-an-asynchronous-operation.md)</ept> and <bpt id=\"p2\">[</bpt>Using an AsyncCallback Delegate and State Object<ept id=\"p2\">](~/docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-and-state-object.md)</ept> in <bpt id=\"p3\">[</bpt>Event-based Asynchronous Pattern (EAP)<ept id=\"p3\">](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)</ept>.","source":"For more information about asynchronous programming, see [Using an AsyncCallback Delegate to End an Asynchronous Operation](~/docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-to-end-an-asynchronous-operation.md) and [Using an AsyncCallback Delegate and State Object](~/docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-and-state-object.md) in [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)."}],"pos":[434,1374],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AsyncCallback\n  commentId: T:System.AsyncCallback\n  id: AsyncCallback\n  langs:\n  - csharp\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n  type: Delegate\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: References a method to be called when a corresponding asynchronous operation completes.\n  remarks: \"Use an <xref:System.AsyncCallback> delegate to process the results of an asynchronous operation in a separate thread. The <xref:System.AsyncCallback> delegate represents a callback method that is called when the asynchronous operation completes. The callback method takes an <xref:System.IAsyncResult> parameter, which is subsequently used to obtain the results of the asynchronous operation.  \\n  \\n For more information about asynchronous programming, see [Using an AsyncCallback Delegate to End an Asynchronous Operation](~/docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-to-end-an-asynchronous-operation.md) and [Using an AsyncCallback Delegate and State Object](~/docs/standard/asynchronous-programming-patterns/using-an-asynccallback-delegate-and-state-object.md) in [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).\"\n  example:\n  - \"The following code example demonstrates using asynchronous methods in the <xref:System.Net.Dns> class to retrieve Domain Name System (DNS) information for user-specified computers. This example creates an <xref:System.AsyncCallback> delegate that references the `ProcessDnsInformation` method. This method is called once for each asynchronous request for DNS information.  \\n  \\n [!code-csharp[AsyncDesignPattern#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDesignPattern/CS/AsyncDelegateNoStateObject.cs#4)]\\n [!code-vb[AsyncDesignPattern#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDesignPattern/VB/AsyncDelegateNoState.vb#4)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public delegate void AsyncCallback(IAsyncResult ar);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AsyncCallback.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}