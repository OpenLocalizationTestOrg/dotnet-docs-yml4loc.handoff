{"nodes":[{"content":"Defines the instance of of a peer node used by an application participating in a specific peer mesh.","nodes":[{"pos":[0,100],"content":"Defines the instance of of a peer node used by an application participating in a specific peer mesh.","nodes":[{"content":"Defines the instance of of a peer node used by an application participating in a specific peer mesh.","pos":[0,100]}]}],"pos":[654,755],"yaml":true},{"content":"A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel.  \n  \n If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings.  \n  \n If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding.","nodes":[{"pos":[0,200],"content":"A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel.","nodes":[{"content":"A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <ph id=\"ph1\">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> supplied to the binding for each channel.","pos":[0,200],"source":"A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel."}]},{"pos":[207,530],"content":"If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings.","nodes":[{"content":"If two or more peer channels defined for a peer node are created with separate bindings, then the <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetPeerTcpBinding.Port%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A&gt;</ph> properties must be identical on all bindings.","pos":[0,323],"source":"If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings."}]},{"pos":[537,913],"content":"If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding.","nodes":[{"content":"If a subsequent channel binding is created after the first one for the same peer node instance, then the <ph id=\"ph1\">&lt;xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A&gt;</ph> property on this and subsequent bindings must be less than or equal to the value of <ph id=\"ph2\">&lt;xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A&gt;</ph> property as set on the first channel binding.","pos":[0,376],"source":"If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding."}]}],"pos":[766,1686],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.","nodes":[{"pos":[0,120],"content":"Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.","nodes":[{"content":"Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.","pos":[0,120]}]}],"pos":[2967,3088],"yaml":true},{"content":"\"Online\" indicates that a peer node has available neighbor nodes. \"Offline\" indicates that a peer node has no available neighbors.","nodes":[{"pos":[0,130],"content":"\"Online\" indicates that a peer node has available neighbor nodes. \"Offline\" indicates that a peer node has no available neighbors.","nodes":[{"content":"\"Online\" indicates that a peer node has available neighbor nodes. \"Offline\" indicates that a peer node has no available neighbors.","pos":[0,130],"nodes":[{"content":"\"Online\" indicates that a peer node has available neighbor nodes.","pos":[0,65]},{"content":"\"Offline\" indicates that a peer node has no available neighbors.","pos":[66,130]}]}]}],"pos":[3099,3236],"yaml":true,"extradata":"MT"},{"content":"`true` if the peer node is online; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the peer node is online; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the peer node is online; otherwise, `false`."}],"pos":[3347,3404],"yaml":true},{"content":"Gets and sets a custom filter for messages received over the peer channel.","nodes":[{"pos":[0,74],"content":"Gets and sets a custom filter for messages received over the peer channel.","nodes":[{"content":"Gets and sets a custom filter for messages received over the peer channel.","pos":[0,74]}]}],"pos":[4407,4482],"yaml":true},{"content":"The message filter must be a derived type and should be recast to that type to use any custom features defined on it.","nodes":[{"pos":[0,117],"content":"The message filter must be a derived type and should be recast to that type to use any custom features defined on it.","nodes":[{"content":"The message filter must be a derived type and should be recast to that type to use any custom features defined on it.","pos":[0,117]}]}],"pos":[4493,4611],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.ServiceModel.PeerMessagePropagationFilter\"></xref> that contains a custom message filter.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.PeerMessagePropagationFilter\"&gt;&lt;/xref&gt;</ph> that contains a custom message filter.","source":"<xref href=\"System.ServiceModel.PeerMessagePropagationFilter\"></xref> that contains a custom message filter."}],"pos":[4821,4930],"yaml":true},{"content":"No channel is open for listening.","nodes":[{"pos":[0,33],"content":"No channel is open for listening.","nodes":[{"content":"No channel is open for listening.","pos":[0,33]}]}],"pos":[5121,5155],"yaml":true},{"content":"Signals when the peer node goes offline from the peer mesh.","nodes":[{"pos":[0,59],"content":"Signals when the peer node goes offline from the peer mesh.","nodes":[{"content":"Signals when the peer node goes offline from the peer mesh.","pos":[0,59]}]}],"pos":[5985,6045],"yaml":true},{"content":"An offline peer node has no neighbor nodes within the peer mesh to which it can connect.","nodes":[{"pos":[0,88],"content":"An offline peer node has no neighbor nodes within the peer mesh to which it can connect.","nodes":[{"content":"An offline peer node has no neighbor nodes within the peer mesh to which it can connect.","pos":[0,88]}]}],"pos":[6056,6145],"yaml":true,"extradata":"MT"},{"content":"Signals when a peer node comes online within the peer mesh.","nodes":[{"pos":[0,59],"content":"Signals when a peer node comes online within the peer mesh.","nodes":[{"content":"Signals when a peer node comes online within the peer mesh.","pos":[0,59]}]}],"pos":[7110,7170],"yaml":true},{"content":"An online peer node has at least one neighbor node within the peer mesh to which it is connected.","nodes":[{"pos":[0,97],"content":"An online peer node has at least one neighbor node within the peer mesh to which it is connected.","nodes":[{"content":"An online peer node has at least one neighbor node within the peer mesh to which it is connected.","pos":[0,97]}]}],"pos":[7181,7279],"yaml":true,"extradata":"MT"},{"content":"Gets the network port on which the peer node is listening.","nodes":[{"pos":[0,58],"content":"Gets the network port on which the peer node is listening.","nodes":[{"content":"Gets the network port on which the peer node is listening.","pos":[0,58]}]}],"pos":[8234,8293],"yaml":true},{"content":"<xref href=\"System.Int32\"></xref> that specifies the network port on which the peer node is listening.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that specifies the network port on which the peer node is listening.","source":"<xref href=\"System.Int32\"></xref> that specifies the network port on which the peer node is listening."}],"pos":[8397,8500],"yaml":true},{"content":"No channel is open for listening.","nodes":[{"pos":[0,33],"content":"No channel is open for listening.","nodes":[{"content":"No channel is open for listening.","pos":[0,33]}]}],"pos":[8671,8705],"yaml":true},{"content":"Refreshes the connection with the peer mesh.","nodes":[{"pos":[0,44],"content":"Refreshes the connection with the peer mesh.","nodes":[{"content":"Refreshes the connection with the peer mesh.","pos":[0,44]}]}],"pos":[9602,9647],"yaml":true},{"content":"No channel is open for listening.","nodes":[{"pos":[0,33],"content":"No channel is open for listening.","nodes":[{"content":"No channel is open for listening.","pos":[0,33]}]}],"pos":[9907,9941],"yaml":true},{"content":"The refresh operation timed out.","nodes":[{"pos":[0,32],"content":"The refresh operation timed out.","nodes":[{"content":"The refresh operation timed out.","pos":[0,32]}]}],"pos":[10033,10066],"yaml":true},{"content":"A network error occurred during the refresh attempt.","nodes":[{"pos":[0,52],"content":"A network error occurred during the refresh attempt.","nodes":[{"content":"A network error occurred during the refresh attempt.","pos":[0,52]}]}],"pos":[10196,10249],"yaml":true},{"content":"The connection aborted during the refresh attempt.","nodes":[{"pos":[0,50],"content":"The connection aborted during the refresh attempt.","nodes":[{"content":"The connection aborted during the refresh attempt.","pos":[0,50]}]}],"pos":[10405,10456],"yaml":true},{"content":"The connection faulted during the refresh attempt.","nodes":[{"pos":[0,50],"content":"The connection faulted during the refresh attempt.","nodes":[{"content":"The connection faulted during the refresh attempt.","pos":[0,50]}]}],"pos":[10612,10663],"yaml":true},{"content":"Provides a string representation of a peer node.","nodes":[{"pos":[0,48],"content":"Provides a string representation of a peer node.","nodes":[{"content":"Provides a string representation of a peer node.","pos":[0,48]}]}],"pos":[11506,11555],"yaml":true},{"content":"<xref href=\"System.String\"></xref> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type.","source":"<xref href=\"System.String\"></xref> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type."}],"pos":[11690,11829],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.PeerNode\n  commentId: T:System.ServiceModel.PeerNode\n  id: PeerNode\n  children:\n  - System.ServiceModel.PeerNode.IsOnline\n  - System.ServiceModel.PeerNode.MessagePropagationFilter\n  - System.ServiceModel.PeerNode.Offline\n  - System.ServiceModel.PeerNode.Online\n  - System.ServiceModel.PeerNode.Port\n  - System.ServiceModel.PeerNode.RefreshConnection\n  - System.ServiceModel.PeerNode.ToString\n  langs:\n  - csharp\n  name: PeerNode\n  nameWithType: PeerNode\n  fullName: System.ServiceModel.PeerNode\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Defines the instance of of a peer node used by an application participating in a specific peer mesh.\n  remarks: \"A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel.  \\n  \\n If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings.  \\n  \\n If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding.\"\n  syntax:\n    content: 'public sealed class PeerNode : System.ServiceModel.IOnlineStatus'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ServiceModel.IOnlineStatus\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.PeerNode.IsOnline\n  commentId: P:System.ServiceModel.PeerNode.IsOnline\n  id: IsOnline\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: IsOnline\n  nameWithType: PeerNode.IsOnline\n  fullName: PeerNode.IsOnline\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.\n  remarks: \"\\\"Online\\\" indicates that a peer node has available neighbor nodes. \\\"Offline\\\" indicates that a peer node has no available neighbors.\"\n  syntax:\n    content: public bool IsOnline { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the peer node is online; otherwise, `false`.'\n  overload: System.ServiceModel.PeerNode.IsOnline*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.PeerNode.MessagePropagationFilter\n  commentId: P:System.ServiceModel.PeerNode.MessagePropagationFilter\n  id: MessagePropagationFilter\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: MessagePropagationFilter\n  nameWithType: PeerNode.MessagePropagationFilter\n  fullName: PeerNode.MessagePropagationFilter\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets and sets a custom filter for messages received over the peer channel.\n  remarks: The message filter must be a derived type and should be recast to that type to use any custom features defined on it.\n  syntax:\n    content: public System.ServiceModel.PeerMessagePropagationFilter MessagePropagationFilter { get; set; }\n    return:\n      type: System.ServiceModel.PeerMessagePropagationFilter\n      description: <xref href=\"System.ServiceModel.PeerMessagePropagationFilter\"></xref> that contains a custom message filter.\n  overload: System.ServiceModel.PeerNode.MessagePropagationFilter*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No channel is open for listening.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.PeerNode.Offline\n  commentId: E:System.ServiceModel.PeerNode.Offline\n  id: Offline\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: Offline\n  nameWithType: PeerNode.Offline\n  fullName: PeerNode.Offline\n  type: Event\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Signals when the peer node goes offline from the peer mesh.\n  remarks: An offline peer node has no neighbor nodes within the peer mesh to which it can connect.\n  syntax:\n    content: public event EventHandler Offline;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.PeerNode.Online\n  commentId: E:System.ServiceModel.PeerNode.Online\n  id: Online\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: Online\n  nameWithType: PeerNode.Online\n  fullName: PeerNode.Online\n  type: Event\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Signals when a peer node comes online within the peer mesh.\n  remarks: An online peer node has at least one neighbor node within the peer mesh to which it is connected.\n  syntax:\n    content: public event EventHandler Online;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.PeerNode.Port\n  commentId: P:System.ServiceModel.PeerNode.Port\n  id: Port\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: Port\n  nameWithType: PeerNode.Port\n  fullName: PeerNode.Port\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the network port on which the peer node is listening.\n  syntax:\n    content: public int Port { get; }\n    return:\n      type: System.Int32\n      description: <xref href=\"System.Int32\"></xref> that specifies the network port on which the peer node is listening.\n  overload: System.ServiceModel.PeerNode.Port*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No channel is open for listening.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.PeerNode.RefreshConnection\n  commentId: M:System.ServiceModel.PeerNode.RefreshConnection\n  id: RefreshConnection\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: RefreshConnection()\n  nameWithType: PeerNode.RefreshConnection()\n  fullName: PeerNode.RefreshConnection()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Refreshes the connection with the peer mesh.\n  syntax:\n    content: public void RefreshConnection ();\n    parameters: []\n  overload: System.ServiceModel.PeerNode.RefreshConnection*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No channel is open for listening.\n  - type: System.TimeoutException\n    commentId: T:System.TimeoutException\n    description: The refresh operation timed out.\n  - type: System.ServiceModel.CommunicationException\n    commentId: T:System.ServiceModel.CommunicationException\n    description: A network error occurred during the refresh attempt.\n  - type: System.ServiceModel.CommunicationObjectAbortedException\n    commentId: T:System.ServiceModel.CommunicationObjectAbortedException\n    description: The connection aborted during the refresh attempt.\n  - type: System.ServiceModel.CommunicationObjectFaultedException\n    commentId: T:System.ServiceModel.CommunicationObjectFaultedException\n    description: The connection faulted during the refresh attempt.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.ServiceModel.PeerNode.ToString\n  commentId: M:System.ServiceModel.PeerNode.ToString\n  id: ToString\n  parent: System.ServiceModel.PeerNode\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: PeerNode.ToString()\n  fullName: PeerNode.ToString()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Provides a string representation of a peer node.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: <xref href=\"System.String\"></xref> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type.\n  overload: System.ServiceModel.PeerNode.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.TimeoutException\n  parent: System\n  isExternal: false\n  name: TimeoutException\n  nameWithType: TimeoutException\n  fullName: System.TimeoutException\n- uid: System.ServiceModel.CommunicationException\n  parent: System.ServiceModel\n  isExternal: false\n  name: CommunicationException\n  nameWithType: CommunicationException\n  fullName: System.ServiceModel.CommunicationException\n- uid: System.ServiceModel.CommunicationObjectAbortedException\n  parent: System.ServiceModel\n  isExternal: false\n  name: CommunicationObjectAbortedException\n  nameWithType: CommunicationObjectAbortedException\n  fullName: System.ServiceModel.CommunicationObjectAbortedException\n- uid: System.ServiceModel.CommunicationObjectFaultedException\n  parent: System.ServiceModel\n  isExternal: false\n  name: CommunicationObjectFaultedException\n  nameWithType: CommunicationObjectFaultedException\n  fullName: System.ServiceModel.CommunicationObjectFaultedException\n- uid: System.ServiceModel.PeerNode.IsOnline\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: IsOnline\n  nameWithType: PeerNode.IsOnline\n  fullName: PeerNode.IsOnline\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.PeerNode.MessagePropagationFilter\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: MessagePropagationFilter\n  nameWithType: PeerNode.MessagePropagationFilter\n  fullName: PeerNode.MessagePropagationFilter\n- uid: System.ServiceModel.PeerMessagePropagationFilter\n  parent: System.ServiceModel\n  isExternal: false\n  name: PeerMessagePropagationFilter\n  nameWithType: PeerMessagePropagationFilter\n  fullName: System.ServiceModel.PeerMessagePropagationFilter\n- uid: System.ServiceModel.PeerNode.Offline\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: Offline\n  nameWithType: PeerNode.Offline\n  fullName: PeerNode.Offline\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ServiceModel.PeerNode.Online\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: Online\n  nameWithType: PeerNode.Online\n  fullName: PeerNode.Online\n- uid: System.ServiceModel.PeerNode.Port\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: Port\n  nameWithType: PeerNode.Port\n  fullName: PeerNode.Port\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.PeerNode.RefreshConnection\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: RefreshConnection()\n  nameWithType: PeerNode.RefreshConnection()\n  fullName: PeerNode.RefreshConnection()\n- uid: System.ServiceModel.PeerNode.ToString\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: ToString()\n  nameWithType: PeerNode.ToString()\n  fullName: PeerNode.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.PeerNode.IsOnline*\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: IsOnline\n  nameWithType: PeerNode.IsOnline\n  fullName: PeerNode.IsOnline\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n- uid: System.ServiceModel.PeerNode.MessagePropagationFilter*\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: MessagePropagationFilter\n  nameWithType: PeerNode.MessagePropagationFilter\n  fullName: PeerNode.MessagePropagationFilter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n- uid: System.ServiceModel.PeerNode.Port*\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: Port\n  nameWithType: PeerNode.Port\n  fullName: PeerNode.Port\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n- uid: System.ServiceModel.PeerNode.RefreshConnection*\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: RefreshConnection\n  nameWithType: PeerNode.RefreshConnection\n  fullName: PeerNode.RefreshConnection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n- uid: System.ServiceModel.PeerNode.ToString*\n  parent: System.ServiceModel.PeerNode\n  isExternal: false\n  name: ToString\n  nameWithType: PeerNode.ToString\n  fullName: PeerNode.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/PeerNode.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ServiceModel.IOnlineStatus\n  parent: System.ServiceModel\n  isExternal: false\n  name: IOnlineStatus\n  nameWithType: IOnlineStatus\n  fullName: System.ServiceModel.IOnlineStatus\n"}