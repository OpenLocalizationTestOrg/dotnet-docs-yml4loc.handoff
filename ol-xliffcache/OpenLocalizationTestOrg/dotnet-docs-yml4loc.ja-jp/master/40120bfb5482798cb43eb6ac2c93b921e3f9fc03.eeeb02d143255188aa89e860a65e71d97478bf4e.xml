{"nodes":[{"content":"Represents the mouse device to a specific thread.","nodes":[{"pos":[0,49],"content":"Represents the mouse device to a specific thread.","nodes":[{"content":"Represents the mouse device to a specific thread.","pos":[0,49]}]}],"pos":[6099,6149],"yaml":true},{"content":"The <xref:System.Windows.Input.Mouse> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.  \n  \n Each event that <xref:System.Windows.Input.Mouse> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event. Generally, it is more convenient to handle mouse events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Mouse> events. For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  \n  \n The static members of the <xref:System.Windows.Input.Mouse> class delegate to the primary <xref:System.Windows.Input.MouseDevice> of the calling thread's input manager.","nodes":[{"pos":[0,158],"content":"The <xref:System.Windows.Input.Mouse> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.","pos":[0,158],"source":"The <xref:System.Windows.Input.Mouse> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse."}]},{"pos":[165,686],"content":"Each event that <xref:System.Windows.Input.Mouse> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event. Generally, it is more convenient to handle mouse events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Mouse> events. For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).","nodes":[{"content":"Each event that <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse&gt;</ph> defines as an attached event is also re-exposed by the base element classes <ph id=\"ph2\">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.ContentElement&gt;</ph> as a new routed event.","pos":[0,221],"source":"Each event that <xref:System.Windows.Input.Mouse> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event."},{"content":"Generally, it is more convenient to handle mouse events for an application on <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.ContentElement&gt;</ph>, rather than using the <ph id=\"ph3\">&lt;xref:System.Windows.Input.Mouse&gt;</ph> events.","pos":[222,437],"source":" Generally, it is more convenient to handle mouse events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Mouse> events."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.","pos":[438,521],"source":" For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."}]},{"pos":[693,861],"content":"The static members of the <xref:System.Windows.Input.Mouse> class delegate to the primary <xref:System.Windows.Input.MouseDevice> of the calling thread's input manager.","nodes":[{"content":"The static members of the <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class delegate to the primary <ph id=\"ph2\">&lt;xref:System.Windows.Input.MouseDevice&gt;</ph> of the calling thread's input manager.","pos":[0,168],"source":"The static members of the <xref:System.Windows.Input.Mouse> class delegate to the primary <xref:System.Windows.Input.MouseDevice> of the calling thread's input manager."}]}],"pos":[6160,7028],"yaml":true,"extradata":"MT"},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"></xref> attached event.","nodes":[{"pos":[0,102],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"></xref> attached event."}],"pos":[8707,8810],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[9066,9198],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[9286,9305],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"></xref> attached event.","nodes":[{"pos":[0,103],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"></xref> attached event."}],"pos":[10680,10784],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[11041,11173],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[11261,11280],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseDown\"></xref> attached event.","nodes":[{"pos":[0,96],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseDown\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseDown\"></xref> attached event."}],"pos":[12650,12747],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[13003,13135],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[13229,13248],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseEnter\"></xref> attached event.","nodes":[{"pos":[0,97],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseEnter\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseEnter\"></xref> attached event."}],"pos":[14581,14679],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[14930,15062],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[15150,15169],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseLeave\"></xref> attached event.","nodes":[{"pos":[0,97],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseLeave\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseLeave\"></xref> attached event."}],"pos":[16503,16601],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[16852,16984],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[17072,17091],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseMove\"></xref> attached event.","nodes":[{"pos":[0,96],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseMove\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseMove\"></xref> attached event."}],"pos":[18419,18516],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[18766,18898],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[18986,19005],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseUp\"></xref> attached event.","nodes":[{"pos":[0,94],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseUp\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseUp\"></xref> attached event."}],"pos":[20356,20451],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[20705,20837],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[20931,20950],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseWheel\"></xref> attached event.","nodes":[{"pos":[0,97],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseWheel\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseWheel\"></xref> attached event."}],"pos":[22311,22409],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[22665,22797],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[22890,22909],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"></xref> attached event.","nodes":[{"pos":[0,103],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"></xref> attached event."}],"pos":[24315,24419],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[24682,24814],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[24908,24927],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"></xref> attached event.","nodes":[{"pos":[0,125],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"></xref> attached event."}],"pos":[26449,26575],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[26860,26992],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[27086,27105],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"></xref> attached event.","nodes":[{"pos":[0,103],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"></xref> attached event."}],"pos":[28503,28607],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[28864,28996],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[29084,29103],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"></xref> attached event.","nodes":[{"pos":[0,101],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"></xref> attached event."}],"pos":[30503,30605],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[30866,30998],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[31092,31111],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"></xref> attached event.","nodes":[{"pos":[0,123],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"></xref> attached event."}],"pos":[32641,32765],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[33048,33180],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[33274,33293],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"></xref> attached event.","nodes":[{"pos":[0,104],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"></xref> attached event."}],"pos":[34703,34808],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[35071,35203],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[35296,35315],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.QueryCursor\"></xref> attached event.","nodes":[{"pos":[0,98],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.QueryCursor\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.Mouse.QueryCursor\"></xref> attached event."}],"pos":[36698,36797],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[37055,37187],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[37281,37300],"yaml":true},{"content":"Captures mouse input to the specified element.","nodes":[{"pos":[0,46],"content":"Captures mouse input to the specified element.","nodes":[{"content":"Captures mouse input to the specified element.","pos":[0,46]}]}],"pos":[38365,38412],"yaml":true},{"content":"When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.  \n  \n If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.  \n  \n To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.  \n  \n If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.","nodes":[{"pos":[0,108],"content":"When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.","nodes":[{"content":"When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.","pos":[0,108]}]},{"pos":[115,281],"content":"If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.","nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is not specified, the default <ph id=\"ph2\">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.Windows.Input.CaptureMode.Element&gt;</ph>.","pos":[0,166],"source":"If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>."}]},{"pos":[288,405],"content":"To release mouse capture, call <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> passing <ph id=\"ph2\">`null`</ph> as the element to capture.","source":"To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture."},{"pos":[412,961],"content":"If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.","nodes":[{"content":"If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.","pos":[0,549],"nodes":[{"content":"If the mouse is captured when a <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id=\"ph3\">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.","pos":[0,366],"source":"If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first."},{"content":"This enables the captured element a chance to release capture before the <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.","pos":[368,549],"source":"  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed."}]}]}],"pos":[38423,39393],"yaml":true,"extradata":"MT"},{"content":"The element to capture the mouse.","nodes":[{"pos":[0,33],"content":"The element to capture the mouse.","nodes":[{"content":"The element to capture the mouse.","pos":[0,33]}]}],"pos":[40119,40153],"yaml":true},{"content":"`true` if the element was able to capture the mouse; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if the element was able to capture the mouse; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the element was able to capture the mouse; otherwise, `false`."}],"pos":[40211,40286],"yaml":true},{"content":"Captures mouse input to the specified element using the specified <xref href=\"System.Windows.Input.CaptureMode\"></xref>.","nodes":[{"pos":[0,120],"content":"Captures mouse input to the specified element using the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CaptureMode\"&gt;&lt;/xref&gt;</ph>.","source":"Captures mouse input to the specified element using the specified <xref href=\"System.Windows.Input.CaptureMode\"></xref>."}],"pos":[41475,41596],"yaml":true},{"content":"When an element captures the mouse, it receives mouse input whether the cursor is within its borders.  \n  \n To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.  \n  \n If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.","nodes":[{"pos":[0,101],"content":"When an element captures the mouse, it receives mouse input whether the cursor is within its borders.","nodes":[{"content":"When an element captures the mouse, it receives mouse input whether the cursor is within its borders.","pos":[0,101]}]},{"pos":[108,225],"content":"To release mouse capture, call <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> passing <ph id=\"ph2\">`null`</ph> as the element to capture.","source":"To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture."},{"pos":[232,781],"content":"If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.","nodes":[{"content":"If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.","pos":[0,549],"nodes":[{"content":"If the mouse is captured when a <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id=\"ph3\">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.","pos":[0,366],"source":"If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first."},{"content":"This enables the captured element a chance to release capture before the <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.","pos":[368,549],"source":"  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed."}]}]}],"pos":[41607,42395],"yaml":true,"extradata":"MT"},{"content":"The element to capture the mouse.","nodes":[{"pos":[0,33],"content":"The element to capture the mouse.","nodes":[{"content":"The element to capture the mouse.","pos":[0,33]}]}],"pos":[43167,43201],"yaml":true},{"content":"The capture policy to use.","nodes":[{"pos":[0,26],"content":"The capture policy to use.","nodes":[{"content":"The capture policy to use.","pos":[0,26]}]}],"pos":[43287,43314],"yaml":true},{"content":"`true` if the element was able to capture the mouse; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if the element was able to capture the mouse; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the element was able to capture the mouse; otherwise, `false`."}],"pos":[43372,43447],"yaml":true},{"content":"Gets the element that has captured the mouse.","nodes":[{"pos":[0,45],"content":"Gets the element that has captured the mouse.","nodes":[{"content":"Gets the element that has captured the mouse.","pos":[0,45]}]}],"pos":[44371,44417],"yaml":true},{"content":"When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders. The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.","nodes":[{"pos":[0,274],"content":"When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders. The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.","nodes":[{"content":"When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders. The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.","pos":[0,274],"nodes":[{"content":"When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.","pos":[0,108]},{"content":"The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.","pos":[109,274]}]}]}],"pos":[44428,44703],"yaml":true,"extradata":"MT"},{"content":"The element captured by the mouse.","nodes":[{"pos":[0,34],"content":"The element captured by the mouse.","nodes":[{"content":"The element captured by the mouse.","pos":[0,34]}]}],"pos":[45311,45346],"yaml":true},{"content":"Gets the element the mouse pointer is directly over.","nodes":[{"pos":[0,52],"content":"Gets the element the mouse pointer is directly over.","nodes":[{"content":"Gets the element the mouse pointer is directly over.","pos":[0,52]}]}],"pos":[46295,46348],"yaml":true},{"content":"Controls can be composed of multiple elements. <xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself. For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.  \n  \n Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.  \n  \n If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.","nodes":[{"pos":[0,550],"content":"Controls can be composed of multiple elements. <xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself. For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.","nodes":[{"content":"Controls can be composed of multiple elements. <xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself. For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.","pos":[0,550],"nodes":[{"content":"Controls can be composed of multiple elements.","pos":[0,46]},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph> reports the specific element in the composite control the mouse pointer is over and not the control itself.","pos":[47,204],"source":" <xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself."},{"content":"For example, depending on which part of a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> the pointer is over, the <ph id=\"ph2\">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph> property could report the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> of the <ph id=\"ph4\">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> property or the <ph id=\"ph5\">&lt;xref:Microsoft.Windows.Themes.ButtonChrome&gt;</ph>.","pos":[205,550],"source":" For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>."}]}]},{"pos":[557,825],"content":"Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.IInputElement.IsMouseOver%2A&gt;</ph> property on <ph id=\"ph2\">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.ContentElement&gt;</ph> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.","pos":[0,268],"source":"Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements."}]},{"pos":[832,968],"content":"If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.","nodes":[{"content":"If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.","pos":[0,136]}]}],"pos":[46359,47334],"yaml":true,"extradata":"MT"},{"content":"The element the mouse pointer is over.","nodes":[{"pos":[0,38],"content":"The element the mouse pointer is over.","nodes":[{"content":"The element the mouse pointer is over.","pos":[0,38]}]}],"pos":[47494,47533],"yaml":true},{"content":"Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.","nodes":[{"pos":[0,93],"content":"Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.","nodes":[{"content":"Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.","pos":[0,93]}]}],"pos":[48769,48863],"yaml":true},{"content":"The elements <code>points</code> are in relation to.","nodes":[{"pos":[0,52],"content":"The elements <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">points</ph><ept id=\"p1\">&lt;/code&gt;</ept> are in relation to.","source":"The elements <code>points</code> are in relation to."}],"pos":[49148,49201],"yaml":true},{"content":"An array of objects.","nodes":[{"pos":[0,20],"content":"An array of objects.","nodes":[{"content":"An array of objects.","pos":[0,20]}]}],"pos":[49272,49293],"yaml":true},{"content":"The number of points returned.","nodes":[{"pos":[0,30],"content":"The number of points returned.","nodes":[{"content":"The number of points returned.","pos":[0,30]}]}],"pos":[49349,49380],"yaml":true},{"content":"Gets the position of the mouse relative to a specified element.","nodes":[{"pos":[0,63],"content":"Gets the position of the mouse relative to a specified element.","nodes":[{"content":"Gets the position of the mouse relative to a specified element.","pos":[0,63]}]}],"pos":[50535,50599],"yaml":true},{"content":"The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.  \n  \n During drag-and-drop operations, the position of the mouse cannot be reliably determined through <xref:System.Windows.Input.Mouse.GetPosition%2A>. This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] calls. Try the following approaches instead:  \n  \n-   Call the <xref:System.Windows.DragEventArgs.GetPosition%2A> method of the <xref:System.Windows.DragEventArgs> that is passed to the drag events (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).  \n  \n-   Call [GetCursorPos](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), using P/Invoke.","nodes":[{"pos":[0,151],"content":"The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.","nodes":[{"content":"The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.","pos":[0,151]}]},{"pos":[158,604],"content":"During drag-and-drop operations, the position of the mouse cannot be reliably determined through <xref:System.Windows.Input.Mouse.GetPosition%2A>. This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] calls. Try the following approaches instead:","nodes":[{"content":"During drag-and-drop operations, the position of the mouse cannot be reliably determined through <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse.GetPosition%2A&gt;</ph>.","pos":[0,146],"source":"During drag-and-drop operations, the position of the mouse cannot be reliably determined through <xref:System.Windows.Input.Mouse.GetPosition%2A>."},{"content":"This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> calls.","pos":[147,408],"source":" This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] calls."},{"content":"Try the following approaches instead:","pos":[409,446]}]},{"pos":[614,902],"content":"Call the <xref:System.Windows.DragEventArgs.GetPosition%2A> method of the <xref:System.Windows.DragEventArgs> that is passed to the drag events (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Windows.DragEventArgs.GetPosition%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Windows.DragEventArgs&gt;</ph> that is passed to the drag events (<ph id=\"ph3\">&lt;xref:System.Windows.ContentElement.DragEnter&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Windows.ContentElement.DragOver&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Windows.ContentElement.DragLeave&gt;</ph>).","pos":[0,288],"source":"Call the <xref:System.Windows.DragEventArgs.GetPosition%2A> method of the <xref:System.Windows.DragEventArgs> that is passed to the drag events (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>)."}]},{"pos":[912,1108],"content":"Call <bpt id=\"p1\">[</bpt>GetCursorPos<ept id=\"p1\">](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp)</ept>, using P/Invoke.","source":"Call [GetCursorPos](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), using P/Invoke."}],"pos":[50610,51727],"yaml":true,"extradata":"MT"},{"content":"The coordinate space in which to calculate the position of the mouse.","nodes":[{"pos":[0,69],"content":"The coordinate space in which to calculate the position of the mouse.","nodes":[{"content":"The coordinate space in which to calculate the position of the mouse.","pos":[0,69]}]}],"pos":[52762,52832],"yaml":true},{"content":"The position of the mouse relative to the parameter <code>relativeTo</code>.","nodes":[{"pos":[0,76],"content":"The position of the mouse relative to the parameter <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">relativeTo</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The position of the mouse relative to the parameter <code>relativeTo</code>."}],"pos":[52896,52973],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"></xref> attached event.","nodes":[{"pos":[0,94],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"></xref> attached event."}],"pos":[53948,54043],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[54054,54463],"yaml":true,"extradata":"MT"},{"content":"Gets the state of the left button of the mouse.","nodes":[{"pos":[0,47],"content":"Gets the state of the left button of the mouse.","nodes":[{"content":"Gets the state of the left button of the mouse.","pos":[0,47]}]}],"pos":[55497,55545],"yaml":true},{"content":"The state of the left mouse button.","nodes":[{"pos":[0,35],"content":"The state of the left mouse button.","nodes":[{"content":"The state of the left mouse button.","pos":[0,35]}]}],"pos":[56563,56599],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"></xref> attached event.","nodes":[{"pos":[0,95],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"></xref> attached event."}],"pos":[57579,57675],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[57686,58095],"yaml":true,"extradata":"MT"},{"content":"Gets the state of the middle button of the mouse.","nodes":[{"pos":[0,49],"content":"Gets the state of the middle button of the mouse.","nodes":[{"content":"Gets the state of the middle button of the mouse.","pos":[0,49]}]}],"pos":[59164,59214],"yaml":true},{"content":"The state of the middle mouse button.","nodes":[{"pos":[0,37],"content":"The state of the middle mouse button.","nodes":[{"content":"The state of the middle mouse button.","pos":[0,37]}]}],"pos":[60246,60284],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseDown\"></xref> attached event.","nodes":[{"pos":[0,88],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseDown\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseDown\"></xref> attached event."}],"pos":[61246,61335],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[61346,61755],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseEnter\"></xref> attached event.","nodes":[{"pos":[0,89],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseEnter\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseEnter\"></xref> attached event."}],"pos":[62832,62922],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[62933,63342],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseLeave\"></xref> attached event.","nodes":[{"pos":[0,89],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseLeave\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseLeave\"></xref> attached event."}],"pos":[64420,64510],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[64521,64930],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseMove\"></xref> attached event.","nodes":[{"pos":[0,88],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseMove\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseMove\"></xref> attached event."}],"pos":[66002,66091],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[66102,66511],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseUp\"></xref> attached event.","nodes":[{"pos":[0,86],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseUp\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseUp\"></xref> attached event."}],"pos":[67570,67657],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[67668,68077],"yaml":true,"extradata":"MT"},{"content":"Represents the number of units the mouse wheel is rotated to scroll one line.","nodes":[{"pos":[0,77],"content":"Represents the number of units the mouse wheel is rotated to scroll one line.","nodes":[{"content":"Represents the number of units the mouse wheel is rotated to scroll one line.","pos":[0,77]}]}],"pos":[69212,69290],"yaml":true},{"content":"In the current [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], the value of this field is 120. The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches. The expectation is that such a device would send more messages per rotation, but with a smaller value in each message. To support this possibility, you should either add the incoming delta values until the <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages. You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.","nodes":[{"pos":[0,959],"content":"In the current [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], the value of this field is 120. The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches. The expectation is that such a device would send more messages per rotation, but with a smaller value in each message. To support this possibility, you should either add the incoming delta values until the <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages. You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.","nodes":[{"content":"In the current <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, the value of this field is 120.","pos":[0,117],"source":"In the current [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], the value of this field is 120."},{"content":"The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches.","pos":[118,299]},{"content":"The expectation is that such a device would send more messages per rotation, but with a smaller value in each message.","pos":[300,418]},{"content":"To support this possibility, you should either add the incoming delta values until the <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine&gt;</ph> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages.","pos":[419,703],"source":" To support this possibility, you should either add the incoming delta values until the <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages."},{"content":"You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.","pos":[704,959]}]}],"pos":[69301,70261],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseWheel\"></xref> attached event.","nodes":[{"pos":[0,89],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseWheel\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.MouseWheel\"></xref> attached event."}],"pos":[71308,71398],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[71409,71818],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the cursor for the entire application.","nodes":[{"pos":[0,51],"content":"Gets or sets the cursor for the entire application.","nodes":[{"content":"Gets or sets the cursor for the entire application.","pos":[0,51]}]}],"pos":[72893,72945],"yaml":true},{"content":"The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to will be applied to the whole application.  \n  \n To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to `null`.  \n  \n Setting <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.","nodes":[{"pos":[0,147],"content":"The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to will be applied to the whole application.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.Cursor&gt;</ph> that <ph id=\"ph2\">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> is set to will be applied to the whole application.","pos":[0,147],"source":"The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to will be applied to the whole application."}]},{"pos":[154,278],"content":"To clear the override <ph id=\"ph1\">&lt;xref:System.Windows.Input.Cursor&gt;</ph>, set <ph id=\"ph2\">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> to <ph id=\"ph3\">`null`</ph>.","source":"To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to `null`."},{"pos":[285,478],"content":"Setting <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.","nodes":[{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Windows.Input.Cursors.None%2A&gt;</ph> will force the mouse cursor not to be displayed, but mouse events are still processed.","pos":[0,193],"source":"Setting <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed."}]}],"pos":[72956,73441],"yaml":true,"extradata":"MT"},{"content":"The override cursor or `null` if the <xref href=\"System.Windows.Input.Mouse.OverrideCursor\"></xref> is not set.","nodes":[{"pos":[0,111],"content":"The override cursor or <ph id=\"ph1\">`null`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.Mouse.OverrideCursor\"&gt;&lt;/xref&gt;</ph> is not set.","source":"The override cursor or `null` if the <xref href=\"System.Windows.Input.Mouse.OverrideCursor\"></xref> is not set."}],"pos":[74752,74864],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"></xref> attached event.","nodes":[{"pos":[0,95],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"></xref> attached event."}],"pos":[75870,75966],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[75977,76386],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"></xref> attached event.","nodes":[{"pos":[0,117],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"></xref> attached event."}],"pos":[77638,77756],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[77767,78176],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"></xref> attached event.","nodes":[{"pos":[0,95],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"></xref> attached event."}],"pos":[79318,79414],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[79425,79834],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"></xref> attached event.","nodes":[{"pos":[0,93],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"></xref> attached event."}],"pos":[80942,81036],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[81047,81456],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"></xref> attached event.","nodes":[{"pos":[0,115],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"></xref> attached event."}],"pos":[82694,82810],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[82821,83230],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"></xref> attached event.","nodes":[{"pos":[0,96],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"></xref> attached event."}],"pos":[84376,84473],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[84484,84893],"yaml":true,"extradata":"MT"},{"content":"Gets the primary mouse device.","nodes":[{"pos":[0,30],"content":"Gets the primary mouse device.","nodes":[{"content":"Gets the primary mouse device.","pos":[0,30]}]}],"pos":[85969,86000],"yaml":true},{"content":"This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.","nodes":[{"pos":[0,129],"content":"This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.","nodes":[{"content":"This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.","pos":[0,129]}]}],"pos":[86011,86141],"yaml":true,"extradata":"MT"},{"content":"The device.","nodes":[{"pos":[0,11],"content":"The device.","nodes":[{"content":"The device.","pos":[0,11]}]}],"pos":[86366,86378],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Input.Mouse.QueryCursor\"></xref> attached event.","nodes":[{"pos":[0,90],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.QueryCursor\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.Mouse.QueryCursor\"></xref> attached event."}],"pos":[87417,87508],"yaml":true},{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"pos":[0,408],"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[0,408],"nodes":[{"content":"Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.","pos":[0,153]},{"content":"These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.","pos":[154,298]},{"content":"You often use these identifiers as parameters to event system methods, to identify a particular routed event.","pos":[299,408]}]}]}],"pos":[87519,87928],"yaml":true,"extradata":"MT"},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"></xref> attached event.","nodes":[{"pos":[0,105],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"></xref> attached event."}],"pos":[89413,89519],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[89778,89910],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[89998,90017],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"></xref> attached event.","nodes":[{"pos":[0,106],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"></xref> attached event."}],"pos":[91413,91520],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[91780,91912],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[92000,92019],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseDown\"></xref> attached event.","nodes":[{"pos":[0,99],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseDown\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseDown\"></xref> attached event."}],"pos":[93410,93510],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[93769,93901],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[93995,94014],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseEnter\"></xref> attached event.","nodes":[{"pos":[0,100],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseEnter\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseEnter\"></xref> attached event."}],"pos":[95368,95469],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[95723,95855],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[95943,95962],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseLeave\"></xref> attached event.","nodes":[{"pos":[0,100],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseLeave\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseLeave\"></xref> attached event."}],"pos":[97317,97418],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[97672,97804],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[97892,97911],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseMove\"></xref> attached event.","nodes":[{"pos":[0,99],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseMove\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseMove\"></xref> attached event."}],"pos":[99260,99360],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[99613,99745],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[99833,99852],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseUp\"></xref> attached event.","nodes":[{"pos":[0,97],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseUp\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseUp\"></xref> attached event."}],"pos":[101224,101322],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[101579,101711],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[101805,101824],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseWheel\"></xref> attached event.","nodes":[{"pos":[0,100],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.MouseWheel\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseWheel\"></xref> attached event."}],"pos":[103206,103307],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[103566,103698],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[103791,103810],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"></xref> attached event.","nodes":[{"pos":[0,106],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"></xref> attached event."}],"pos":[105237,105344],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[105610,105742],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[105836,105855],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"></xref> attached event.","nodes":[{"pos":[0,128],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"></xref> attached event."}],"pos":[107420,107549],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[107837,107969],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[108063,108082],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"></xref> attached event.","nodes":[{"pos":[0,106],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"></xref> attached event."}],"pos":[109501,109608],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[109868,110000],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[110088,110107],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"></xref> attached event.","nodes":[{"pos":[0,104],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"></xref> attached event."}],"pos":[111528,111633],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[111897,112029],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[112123,112142],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"></xref> attached event.","nodes":[{"pos":[0,126],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"></xref> attached event."}],"pos":[113693,113820],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[114106,114238],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[114332,114351],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"></xref> attached event.","nodes":[{"pos":[0,107],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"></xref> attached event."}],"pos":[115804,115912],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[116178,116310],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[116403,116422],"yaml":true},{"content":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.QueryCursor\"></xref> attached event.","nodes":[{"pos":[0,101],"content":"Removes a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Mouse.QueryCursor\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Removes a handler for the <xref href=\"System.Windows.Input.Mouse.QueryCursor\"></xref> attached event."}],"pos":[117804,117906],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[118167,118299],"yaml":true},{"content":"The event handler.","nodes":[{"pos":[0,18],"content":"The event handler.","nodes":[{"content":"The event handler.","pos":[0,18]}]}],"pos":[118393,118412],"yaml":true},{"content":"Gets the state of the right button.","nodes":[{"pos":[0,35],"content":"Gets the state of the right button.","nodes":[{"content":"Gets the state of the right button.","pos":[0,35]}]}],"pos":[119371,119407],"yaml":true},{"content":"The state of the right mouse button.","nodes":[{"pos":[0,36],"content":"The state of the right mouse button.","nodes":[{"content":"The state of the right mouse button.","pos":[0,36]}]}],"pos":[120432,120469],"yaml":true},{"content":"Sets the mouse pointer to the specified <xref href=\"System.Windows.Input.Cursor\"></xref>.","nodes":[{"pos":[0,89],"content":"Sets the mouse pointer to the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.Cursor\"&gt;&lt;/xref&gt;</ph>.","source":"Sets the mouse pointer to the specified <xref href=\"System.Windows.Input.Cursor\"></xref>."}],"pos":[121512,121602],"yaml":true},{"content":"The cursor being set does not apply to any particular element, but rather it applies to the whole application.  So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.  \n  \n To force the mouse pointer to a specific <xref:System.Windows.Input.Cursor> and to force this <xref:System.Windows.Input.Cursor> on all elements, set the <xref:System.Windows.Input.Mouse.OverrideCursor%2A> property.  \n  \n To set the cursor on a specific element, use the <xref:System.Windows.FrameworkElement.Cursor%2A> property on either <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.  For more information on the base elements, see the [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).","nodes":[{"pos":[0,239],"content":"The cursor being set does not apply to any particular element, but rather it applies to the whole application.  So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.","nodes":[{"content":"The cursor being set does not apply to any particular element, but rather it applies to the whole application.  So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.","pos":[0,239],"nodes":[{"content":"The cursor being set does not apply to any particular element, but rather it applies to the whole application.","pos":[0,110]},{"content":"So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.","pos":[112,239]}]}]},{"pos":[246,461],"content":"To force the mouse pointer to a specific <xref:System.Windows.Input.Cursor> and to force this <xref:System.Windows.Input.Cursor> on all elements, set the <xref:System.Windows.Input.Mouse.OverrideCursor%2A> property.","nodes":[{"content":"To force the mouse pointer to a specific <ph id=\"ph1\">&lt;xref:System.Windows.Input.Cursor&gt;</ph> and to force this <ph id=\"ph2\">&lt;xref:System.Windows.Input.Cursor&gt;</ph> on all elements, set the <ph id=\"ph3\">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> property.","pos":[0,215],"source":"To force the mouse pointer to a specific <xref:System.Windows.Input.Cursor> and to force this <xref:System.Windows.Input.Cursor> on all elements, set the <xref:System.Windows.Input.Mouse.OverrideCursor%2A> property."}]},{"pos":[468,808],"content":"To set the cursor on a specific element, use the <xref:System.Windows.FrameworkElement.Cursor%2A> property on either <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.  For more information on the base elements, see the [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).","nodes":[{"content":"To set the cursor on a specific element, use the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> property on either <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.","pos":[0,205],"source":"To set the cursor on a specific element, use the <xref:System.Windows.FrameworkElement.Cursor%2A> property on either <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>."},{"content":"For more information on the base elements, see the <bpt id=\"p1\">[</bpt>Base Elements Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>.","pos":[207,340],"source":"  For more information on the base elements, see the [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md)."}]}],"pos":[121613,122428],"yaml":true,"extradata":"MT"},{"content":"The cursor to set the mouse pointer to.","nodes":[{"pos":[0,39],"content":"The cursor to set the mouse pointer to.","nodes":[{"content":"The cursor to set the mouse pointer to.","pos":[0,39]}]}],"pos":[122610,122650],"yaml":true},{"content":"`true`, if the cursor was set; otherwise, `false`.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">`true`</ph>, if the cursor was set; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true`, if the cursor was set; otherwise, `false`."}],"pos":[122708,122761],"yaml":true},{"content":"Forces the mouse to resynchronize.","nodes":[{"pos":[0,34],"content":"Forces the mouse to resynchronize.","nodes":[{"content":"Forces the mouse to resynchronize.","pos":[0,34]}]}],"pos":[123709,123744],"yaml":true},{"content":"Forces the mouse cursor to be updated.","nodes":[{"pos":[0,38],"content":"Forces the mouse cursor to be updated.","nodes":[{"content":"Forces the mouse cursor to be updated.","pos":[0,38]}]}],"pos":[124755,124794],"yaml":true},{"content":"Gets the state of the first extended button.","nodes":[{"pos":[0,44],"content":"Gets the state of the first extended button.","nodes":[{"content":"Gets the state of the first extended button.","pos":[0,44]}]}],"pos":[125801,125846],"yaml":true},{"content":"The state of the first extended mouse button.","nodes":[{"pos":[0,45],"content":"The state of the first extended mouse button.","nodes":[{"content":"The state of the first extended mouse button.","pos":[0,45]}]}],"pos":[126858,126904],"yaml":true},{"content":"Gets the state of the second extended button.","nodes":[{"pos":[0,45],"content":"Gets the state of the second extended button.","nodes":[{"content":"Gets the state of the second extended button.","pos":[0,45]}]}],"pos":[127807,127853],"yaml":true},{"content":"The state of the second extended mouse button.","nodes":[{"pos":[0,46],"content":"The state of the second extended mouse button.","nodes":[{"content":"The state of the second extended mouse button.","pos":[0,46]}]}],"pos":[128866,128913],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.Mouse\n  commentId: T:System.Windows.Input.Mouse\n  id: Mouse\n  children:\n  - System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  - System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  - System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)\n  - System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)\n  - System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  - System.Windows.Input.Mouse.Captured\n  - System.Windows.Input.Mouse.DirectlyOver\n  - System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])\n  - System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)\n  - System.Windows.Input.Mouse.GotMouseCaptureEvent\n  - System.Windows.Input.Mouse.LeftButton\n  - System.Windows.Input.Mouse.LostMouseCaptureEvent\n  - System.Windows.Input.Mouse.MiddleButton\n  - System.Windows.Input.Mouse.MouseDownEvent\n  - System.Windows.Input.Mouse.MouseEnterEvent\n  - System.Windows.Input.Mouse.MouseLeaveEvent\n  - System.Windows.Input.Mouse.MouseMoveEvent\n  - System.Windows.Input.Mouse.MouseUpEvent\n  - System.Windows.Input.Mouse.MouseWheelDeltaForOneLine\n  - System.Windows.Input.Mouse.MouseWheelEvent\n  - System.Windows.Input.Mouse.OverrideCursor\n  - System.Windows.Input.Mouse.PreviewMouseDownEvent\n  - System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent\n  - System.Windows.Input.Mouse.PreviewMouseMoveEvent\n  - System.Windows.Input.Mouse.PreviewMouseUpEvent\n  - System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent\n  - System.Windows.Input.Mouse.PreviewMouseWheelEvent\n  - System.Windows.Input.Mouse.PrimaryDevice\n  - System.Windows.Input.Mouse.QueryCursorEvent\n  - System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  - System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  - System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  - System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  - System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)\n  - System.Windows.Input.Mouse.RightButton\n  - System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)\n  - System.Windows.Input.Mouse.Synchronize\n  - System.Windows.Input.Mouse.UpdateCursor\n  - System.Windows.Input.Mouse.XButton1\n  - System.Windows.Input.Mouse.XButton2\n  langs:\n  - csharp\n  name: Mouse\n  nameWithType: Mouse\n  fullName: System.Windows.Input.Mouse\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Represents the mouse device to a specific thread.\n  remarks: \"The <xref:System.Windows.Input.Mouse> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.  \\n  \\n Each event that <xref:System.Windows.Input.Mouse> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event. Generally, it is more convenient to handle mouse events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Mouse> events. For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).  \\n  \\n The static members of the <xref:System.Windows.Input.Mouse> class delegate to the primary <xref:System.Windows.Input.MouseDevice> of the calling thread's input manager.\"\n  syntax:\n    content: public static class Mouse\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"></xref> attached event.\n  syntax:\n    content: public static void AddGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddGotMouseCaptureHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"></xref> attached event.\n  syntax:\n    content: public static void AddLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddLostMouseCaptureHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseDown\"></xref> attached event.\n  syntax:\n    content: public static void AddMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddMouseDownHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddMouseEnterHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddMouseEnterHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddMouseEnterHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseEnter\"></xref> attached event.\n  syntax:\n    content: public static void AddMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddMouseEnterHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddMouseLeaveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddMouseLeaveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddMouseLeaveHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseLeave\"></xref> attached event.\n  syntax:\n    content: public static void AddMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddMouseLeaveHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddMouseMoveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddMouseMoveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddMouseMoveHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseMove\"></xref> attached event.\n  syntax:\n    content: public static void AddMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddMouseMoveHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseUp\"></xref> attached event.\n  syntax:\n    content: public static void AddMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddMouseUpHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  id: AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  nameWithType: Mouse.AddMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  fullName: Mouse.AddMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.MouseWheel\"></xref> attached event.\n  syntax:\n    content: public static void AddMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseWheelEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddMouseWheelHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddPreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddPreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddPreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"></xref> attached event.\n  syntax:\n    content: public static void AddPreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddPreviewMouseDownHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"></xref> attached event.\n  syntax:\n    content: public static void AddPreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddPreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddPreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddPreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"></xref> attached event.\n  syntax:\n    content: public static void AddPreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddPreviewMouseMoveHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddPreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddPreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddPreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"></xref> attached event.\n  syntax:\n    content: public static void AddPreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddPreviewMouseUpHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"></xref> attached event.\n  syntax:\n    content: public static void AddPreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  id: AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddPreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  nameWithType: Mouse.AddPreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  fullName: Mouse.AddPreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"></xref> attached event.\n  syntax:\n    content: public static void AddPreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseWheelEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddPreviewMouseWheelHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)\n  commentId: M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)\n  id: AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: AddQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n  nameWithType: Mouse.AddQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n  fullName: Mouse.AddQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.Mouse.QueryCursor\"></xref> attached event.\n  syntax:\n    content: public static void AddQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.QueryCursorEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.AddQueryCursorHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)\n  commentId: M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)\n  id: Capture(System.Windows.IInputElement)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: Capture(IInputElement)\n  nameWithType: Mouse.Capture(IInputElement)\n  fullName: Mouse.Capture(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Captures mouse input to the specified element.\n  remarks: \"When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.  \\n  \\n If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.  \\n  \\n To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.  \\n  \\n If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.\"\n  example:\n  - \"The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.  \\n  \\n [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]\\n [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]\"\n  syntax:\n    content: public static bool Capture (System.Windows.IInputElement element);\n    parameters:\n    - id: element\n      type: System.Windows.IInputElement\n      description: The element to capture the mouse.\n    return:\n      type: System.Boolean\n      description: '`true` if the element was able to capture the mouse; otherwise, `false`.'\n  overload: System.Windows.Input.Mouse.Capture*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  commentId: M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  id: Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: Capture(IInputElement, CaptureMode)\n  nameWithType: Mouse.Capture(IInputElement, CaptureMode)\n  fullName: Mouse.Capture(IInputElement, CaptureMode)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Captures mouse input to the specified element using the specified <xref href=\"System.Windows.Input.CaptureMode\"></xref>.\n  remarks: \"When an element captures the mouse, it receives mouse input whether the cursor is within its borders.  \\n  \\n To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.  \\n  \\n If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.\"\n  example:\n  - \"The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.  \\n  \\n [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]\\n [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]\"\n  syntax:\n    content: public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);\n    parameters:\n    - id: element\n      type: System.Windows.IInputElement\n      description: The element to capture the mouse.\n    - id: captureMode\n      type: System.Windows.Input.CaptureMode\n      description: The capture policy to use.\n    return:\n      type: System.Boolean\n      description: '`true` if the element was able to capture the mouse; otherwise, `false`.'\n  overload: System.Windows.Input.Mouse.Capture*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.Captured\n  commentId: P:System.Windows.Input.Mouse.Captured\n  id: Captured\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: Captured\n  nameWithType: Mouse.Captured\n  fullName: Mouse.Captured\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the element that has captured the mouse.\n  remarks: When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders. The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.\n  example:\n  - \"The follow example shows how to obtain the element that has mouse capture.  \\n  \\n [!code-csharp[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecapturemousecaptured)]\\n [!code-vb[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecapturemousecaptured)]\"\n  syntax:\n    content: public static System.Windows.IInputElement Captured { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: The element captured by the mouse.\n  overload: System.Windows.Input.Mouse.Captured*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.DirectlyOver\n  commentId: P:System.Windows.Input.Mouse.DirectlyOver\n  id: DirectlyOver\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: DirectlyOver\n  nameWithType: Mouse.DirectlyOver\n  fullName: Mouse.DirectlyOver\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the element the mouse pointer is directly over.\n  remarks: \"Controls can be composed of multiple elements. <xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself. For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.  \\n  \\n Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.  \\n  \\n If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.\"\n  syntax:\n    content: public static System.Windows.IInputElement DirectlyOver { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: The element the mouse pointer is over.\n  overload: System.Windows.Input.Mouse.DirectlyOver*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])\n  commentId: M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])\n  id: GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: GetIntermediatePoints(IInputElement, Point[])\n  nameWithType: Mouse.GetIntermediatePoints(IInputElement, Point[])\n  fullName: Mouse.GetIntermediatePoints(IInputElement, Point[])\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public static int GetIntermediatePoints (System.Windows.IInputElement relativeTo, System.Windows.Point[] points);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: The elements <code>points</code> are in relation to.\n    - id: points\n      type: System.Windows.Point[]\n      description: An array of objects.\n    return:\n      type: System.Int32\n      description: The number of points returned.\n  overload: System.Windows.Input.Mouse.GetIntermediatePoints*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)\n  commentId: M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)\n  id: GetPosition(System.Windows.IInputElement)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: GetPosition(IInputElement)\n  nameWithType: Mouse.GetPosition(IInputElement)\n  fullName: Mouse.GetPosition(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the position of the mouse relative to a specified element.\n  remarks: \"The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.  \\n  \\n During drag-and-drop operations, the position of the mouse cannot be reliably determined through <xref:System.Windows.Input.Mouse.GetPosition%2A>. This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] calls. Try the following approaches instead:  \\n  \\n-   Call the <xref:System.Windows.DragEventArgs.GetPosition%2A> method of the <xref:System.Windows.DragEventArgs> that is passed to the drag events (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).  \\n  \\n-   Call [GetCursorPos](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), using P/Invoke.\"\n  example:\n  - \"The following example shows how to use <xref:System.Windows.Input.Mouse.GetPosition%2A> to determine the position of the mouse pointer.  The position of the mouse pointer is stored in a <xref:System.Windows.Point> structure.  The <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of the <xref:System.Windows.Point> object are displayed in a <xref:System.Windows.Controls.TextBox>.  \\n  \\n [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetspositionmouse)]\\n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetspositionmouse)]\"\n  syntax:\n    content: public static System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: The coordinate space in which to calculate the position of the mouse.\n    return:\n      type: System.Windows.Point\n      description: The position of the mouse relative to the parameter <code>relativeTo</code>.\n  overload: System.Windows.Input.Mouse.GetPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.Mouse.GotMouseCaptureEvent\n  commentId: F:System.Windows.Input.Mouse.GotMouseCaptureEvent\n  id: GotMouseCaptureEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: GotMouseCaptureEvent\n  nameWithType: Mouse.GotMouseCaptureEvent\n  fullName: Mouse.GotMouseCaptureEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.Mouse.LeftButton\n  commentId: P:System.Windows.Input.Mouse.LeftButton\n  id: LeftButton\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: LeftButton\n  nameWithType: Mouse.LeftButton\n  fullName: Mouse.LeftButton\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the state of the left button of the mouse.\n  remarks: ''\n  example:\n  - \"The following example shows how to determine whether the left mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.LeftButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.  If the button is pressed, a method is called which updates display elements in the sample.  \\n  \\n [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetleftbuttonmouse)]\\n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetleftbuttonmouse)]\"\n  syntax:\n    content: public static System.Windows.Input.MouseButtonState LeftButton { get; }\n    return:\n      type: System.Windows.Input.MouseButtonState\n      description: The state of the left mouse button.\n  overload: System.Windows.Input.Mouse.LeftButton*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.Mouse.LostMouseCaptureEvent\n  commentId: F:System.Windows.Input.Mouse.LostMouseCaptureEvent\n  id: LostMouseCaptureEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: LostMouseCaptureEvent\n  nameWithType: Mouse.LostMouseCaptureEvent\n  fullName: Mouse.LostMouseCaptureEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.MiddleButton\n  commentId: P:System.Windows.Input.Mouse.MiddleButton\n  id: MiddleButton\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: MiddleButton\n  nameWithType: Mouse.MiddleButton\n  fullName: Mouse.MiddleButton\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the state of the middle button of the mouse.\n  remarks: ''\n  example:\n  - \"The following example shows how to determine whether the middle mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.MiddleButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.  If the button is pressed, a method is called which updates display elements in the sample.  \\n  \\n [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetmiddlebuttonmouse)]\\n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetmiddlebuttonmouse)]\"\n  syntax:\n    content: public static System.Windows.Input.MouseButtonState MiddleButton { get; }\n    return:\n      type: System.Windows.Input.MouseButtonState\n      description: The state of the middle mouse button.\n  overload: System.Windows.Input.Mouse.MiddleButton*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.MouseDownEvent\n  commentId: F:System.Windows.Input.Mouse.MouseDownEvent\n  id: MouseDownEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: MouseDownEvent\n  nameWithType: Mouse.MouseDownEvent\n  fullName: Mouse.MouseDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.MouseDown\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.MouseEnterEvent\n  commentId: F:System.Windows.Input.Mouse.MouseEnterEvent\n  id: MouseEnterEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: MouseEnterEvent\n  nameWithType: Mouse.MouseEnterEvent\n  fullName: Mouse.MouseEnterEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.MouseEnter\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseEnterEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.MouseLeaveEvent\n  commentId: F:System.Windows.Input.Mouse.MouseLeaveEvent\n  id: MouseLeaveEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: MouseLeaveEvent\n  nameWithType: Mouse.MouseLeaveEvent\n  fullName: Mouse.MouseLeaveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.MouseLeave\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseLeaveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.MouseMoveEvent\n  commentId: F:System.Windows.Input.Mouse.MouseMoveEvent\n  id: MouseMoveEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: MouseMoveEvent\n  nameWithType: Mouse.MouseMoveEvent\n  fullName: Mouse.MouseMoveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.MouseMove\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseMoveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.MouseUpEvent\n  commentId: F:System.Windows.Input.Mouse.MouseUpEvent\n  id: MouseUpEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: MouseUpEvent\n  nameWithType: Mouse.MouseUpEvent\n  fullName: Mouse.MouseUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.MouseUp\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.MouseWheelDeltaForOneLine\n  commentId: F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine\n  id: MouseWheelDeltaForOneLine\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: MouseWheelDeltaForOneLine\n  nameWithType: Mouse.MouseWheelDeltaForOneLine\n  fullName: Mouse.MouseWheelDeltaForOneLine\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Represents the number of units the mouse wheel is rotated to scroll one line.\n  remarks: In the current [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], the value of this field is 120. The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches. The expectation is that such a device would send more messages per rotation, but with a smaller value in each message. To support this possibility, you should either add the incoming delta values until the <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages. You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.\n  syntax:\n    content: public const int MouseWheelDeltaForOneLine = 120;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.MouseWheelEvent\n  commentId: F:System.Windows.Input.Mouse.MouseWheelEvent\n  id: MouseWheelEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: MouseWheelEvent\n  nameWithType: Mouse.MouseWheelEvent\n  fullName: Mouse.MouseWheelEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.MouseWheel\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent MouseWheelEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.OverrideCursor\n  commentId: P:System.Windows.Input.Mouse.OverrideCursor\n  id: OverrideCursor\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: OverrideCursor\n  nameWithType: Mouse.OverrideCursor\n  fullName: Mouse.OverrideCursor\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets or sets the cursor for the entire application.\n  remarks: \"The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to will be applied to the whole application.  \\n  \\n To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to `null`.  \\n  \\n Setting <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.\"\n  example:\n  - \"The following example shows an event handler for a <xref:System.Windows.Controls.RadioButton> that is used to toggle the scope of a cursor change between a single element and the entire application.  If the control that raised the event is the `rbScopeElement`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to `null`.  If the control that raised the event is the `rbScopeApplication`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to the <xref:System.Windows.FrameworkElement.Cursor%2A> property of the <xref:System.Windows.Controls.Border> control named `DisplayArea`.  \\n  \\n [!code-csharp[cursors#CursorsSampleOverrideCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#cursorssampleoverridecursor)]\\n [!code-vb[cursors#CursorsSampleOverrideCursor](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#cursorssampleoverridecursor)]\"\n  syntax:\n    content: public static System.Windows.Input.Cursor OverrideCursor { get; set; }\n    return:\n      type: System.Windows.Input.Cursor\n      description: The override cursor or `null` if the <xref href=\"System.Windows.Input.Mouse.OverrideCursor\"></xref> is not set.\n  overload: System.Windows.Input.Mouse.OverrideCursor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.PreviewMouseDownEvent\n  commentId: F:System.Windows.Input.Mouse.PreviewMouseDownEvent\n  id: PreviewMouseDownEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: PreviewMouseDownEvent\n  nameWithType: Mouse.PreviewMouseDownEvent\n  fullName: Mouse.PreviewMouseDownEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent\n  commentId: F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent\n  id: PreviewMouseDownOutsideCapturedElementEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: PreviewMouseDownOutsideCapturedElementEvent\n  nameWithType: Mouse.PreviewMouseDownOutsideCapturedElementEvent\n  fullName: Mouse.PreviewMouseDownOutsideCapturedElementEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.PreviewMouseMoveEvent\n  commentId: F:System.Windows.Input.Mouse.PreviewMouseMoveEvent\n  id: PreviewMouseMoveEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: PreviewMouseMoveEvent\n  nameWithType: Mouse.PreviewMouseMoveEvent\n  fullName: Mouse.PreviewMouseMoveEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.PreviewMouseUpEvent\n  commentId: F:System.Windows.Input.Mouse.PreviewMouseUpEvent\n  id: PreviewMouseUpEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: PreviewMouseUpEvent\n  nameWithType: Mouse.PreviewMouseUpEvent\n  fullName: Mouse.PreviewMouseUpEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent\n  commentId: F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent\n  id: PreviewMouseUpOutsideCapturedElementEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: PreviewMouseUpOutsideCapturedElementEvent\n  nameWithType: Mouse.PreviewMouseUpOutsideCapturedElementEvent\n  fullName: Mouse.PreviewMouseUpOutsideCapturedElementEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.PreviewMouseWheelEvent\n  commentId: F:System.Windows.Input.Mouse.PreviewMouseWheelEvent\n  id: PreviewMouseWheelEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: PreviewMouseWheelEvent\n  nameWithType: Mouse.PreviewMouseWheelEvent\n  fullName: Mouse.PreviewMouseWheelEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.PrimaryDevice\n  commentId: P:System.Windows.Input.Mouse.PrimaryDevice\n  id: PrimaryDevice\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: PrimaryDevice\n  nameWithType: Mouse.PrimaryDevice\n  fullName: Mouse.PrimaryDevice\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the primary mouse device.\n  remarks: This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public static System.Windows.Input.MouseDevice PrimaryDevice { get; }\n    return:\n      type: System.Windows.Input.MouseDevice\n      description: The device.\n  overload: System.Windows.Input.Mouse.PrimaryDevice*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.QueryCursorEvent\n  commentId: F:System.Windows.Input.Mouse.QueryCursorEvent\n  id: QueryCursorEvent\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: QueryCursorEvent\n  nameWithType: Mouse.QueryCursorEvent\n  fullName: Mouse.QueryCursorEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.Mouse.QueryCursor\"></xref> attached event.\n  remarks: Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event. These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event. You often use these identifiers as parameters to event system methods, to identify a particular routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent QueryCursorEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemoveGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemoveGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemoveGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.GotMouseCapture\"></xref> attached event.\n  syntax:\n    content: public static void RemoveGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemoveLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemoveLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemoveLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.LostMouseCapture\"></xref> attached event.\n  syntax:\n    content: public static void RemoveLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemoveMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemoveMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemoveMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseDown\"></xref> attached event.\n  syntax:\n    content: public static void RemoveMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemoveMouseDownHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemoveMouseEnterHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemoveMouseEnterHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemoveMouseEnterHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseEnter\"></xref> attached event.\n  syntax:\n    content: public static void RemoveMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemoveMouseEnterHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemoveMouseLeaveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemoveMouseLeaveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemoveMouseLeaveHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseLeave\"></xref> attached event.\n  syntax:\n    content: public static void RemoveMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemoveMouseLeaveHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemoveMouseMoveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemoveMouseMoveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemoveMouseMoveHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseMove\"></xref> attached event.\n  syntax:\n    content: public static void RemoveMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemoveMouseMoveHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemoveMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemoveMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemoveMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseUp\"></xref> attached event.\n  syntax:\n    content: public static void RemoveMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemoveMouseUpHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  id: RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemoveMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  nameWithType: Mouse.RemoveMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  fullName: Mouse.RemoveMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.MouseWheel\"></xref> attached event.\n  syntax:\n    content: public static void RemoveMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseWheelEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemoveMouseWheelHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemovePreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemovePreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDown\"></xref> attached event.\n  syntax:\n    content: public static void RemovePreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemovePreviewMouseDownHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement\"></xref> attached event.\n  syntax:\n    content: public static void RemovePreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  id: RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemovePreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemovePreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseMove\"></xref> attached event.\n  syntax:\n    content: public static void RemovePreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemovePreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemovePreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUp\"></xref> attached event.\n  syntax:\n    content: public static void RemovePreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemovePreviewMouseUpHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  id: RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement\"></xref> attached event.\n  syntax:\n    content: public static void RemovePreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseButtonEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  id: RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemovePreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  fullName: Mouse.RemovePreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.PreviewMouseWheel\"></xref> attached event.\n  syntax:\n    content: public static void RemovePreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.MouseWheelEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)\n  commentId: M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)\n  id: RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RemoveQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n  nameWithType: Mouse.RemoveQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n  fullName: Mouse.RemoveQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes a handler for the <xref href=\"System.Windows.Input.Mouse.QueryCursor\"></xref> attached event.\n  syntax:\n    content: public static void RemoveQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.QueryCursorEventHandler\n      description: The event handler.\n  overload: System.Windows.Input.Mouse.RemoveQueryCursorHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.RightButton\n  commentId: P:System.Windows.Input.Mouse.RightButton\n  id: RightButton\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: RightButton\n  nameWithType: Mouse.RightButton\n  fullName: Mouse.RightButton\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the state of the right button.\n  remarks: ''\n  example:\n  - \"The following example shows how to determine whether the right mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.RightButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.  If the button is pressed, a method is called which updates display elements in the sample.  \\n  \\n [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetrightbuttonmouse)]\\n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetrightbuttonmouse)]\"\n  syntax:\n    content: public static System.Windows.Input.MouseButtonState RightButton { get; }\n    return:\n      type: System.Windows.Input.MouseButtonState\n      description: The state of the right mouse button.\n  overload: System.Windows.Input.Mouse.RightButton*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)\n  commentId: M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)\n  id: SetCursor(System.Windows.Input.Cursor)\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: SetCursor(Cursor)\n  nameWithType: Mouse.SetCursor(Cursor)\n  fullName: Mouse.SetCursor(Cursor)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Sets the mouse pointer to the specified <xref href=\"System.Windows.Input.Cursor\"></xref>.\n  remarks: \"The cursor being set does not apply to any particular element, but rather it applies to the whole application.  So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.  \\n  \\n To force the mouse pointer to a specific <xref:System.Windows.Input.Cursor> and to force this <xref:System.Windows.Input.Cursor> on all elements, set the <xref:System.Windows.Input.Mouse.OverrideCursor%2A> property.  \\n  \\n To set the cursor on a specific element, use the <xref:System.Windows.FrameworkElement.Cursor%2A> property on either <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.  For more information on the base elements, see the [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).\"\n  syntax:\n    content: public static bool SetCursor (System.Windows.Input.Cursor cursor);\n    parameters:\n    - id: cursor\n      type: System.Windows.Input.Cursor\n      description: The cursor to set the mouse pointer to.\n    return:\n      type: System.Boolean\n      description: '`true`, if the cursor was set; otherwise, `false`.'\n  overload: System.Windows.Input.Mouse.SetCursor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.Synchronize\n  commentId: M:System.Windows.Input.Mouse.Synchronize\n  id: Synchronize\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: Synchronize()\n  nameWithType: Mouse.Synchronize()\n  fullName: Mouse.Synchronize()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Forces the mouse to resynchronize.\n  syntax:\n    content: public static void Synchronize ();\n    parameters: []\n  overload: System.Windows.Input.Mouse.Synchronize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.Mouse.UpdateCursor\n  commentId: M:System.Windows.Input.Mouse.UpdateCursor\n  id: UpdateCursor\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: UpdateCursor()\n  nameWithType: Mouse.UpdateCursor()\n  fullName: Mouse.UpdateCursor()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Forces the mouse cursor to be updated.\n  syntax:\n    content: public static void UpdateCursor ();\n    parameters: []\n  overload: System.Windows.Input.Mouse.UpdateCursor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Mouse.XButton1\n  commentId: P:System.Windows.Input.Mouse.XButton1\n  id: XButton1\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: XButton1\n  nameWithType: Mouse.XButton1\n  fullName: Mouse.XButton1\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the state of the first extended button.\n  remarks: ''\n  example:\n  - \"The following example shows how to determine whether the first extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton1%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.  If the button is pressed, a method is called which updates display elements in the sample.  \\n  \\n [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx1buttonmouse)]\\n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx1buttonmouse)]\"\n  syntax:\n    content: public static System.Windows.Input.MouseButtonState XButton1 { get; }\n    return:\n      type: System.Windows.Input.MouseButtonState\n      description: The state of the first extended mouse button.\n  overload: System.Windows.Input.Mouse.XButton1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.Mouse.XButton2\n  commentId: P:System.Windows.Input.Mouse.XButton2\n  id: XButton2\n  parent: System.Windows.Input.Mouse\n  langs:\n  - csharp\n  name: XButton2\n  nameWithType: Mouse.XButton2\n  fullName: Mouse.XButton2\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the state of the second extended button.\n  remarks: ''\n  example:\n  - \"The following example shows how to determine whether the second extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton2%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.  If the button is pressed, a method is called which updates display elements in the sample.  \\n  \\n [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx2buttonmouse)]\\n [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx2buttonmouse)]\"\n  syntax:\n    content: public static System.Windows.Input.MouseButtonState XButton2 { get; }\n    return:\n      type: System.Windows.Input.MouseButtonState\n      description: The state of the second extended mouse button.\n  overload: System.Windows.Input.Mouse.XButton2*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Input.MouseEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseEventHandler\n  nameWithType: MouseEventHandler\n  fullName: System.Windows.Input.MouseEventHandler\n- uid: System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.MouseButtonEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseButtonEventHandler\n  nameWithType: MouseButtonEventHandler\n  fullName: System.Windows.Input.MouseButtonEventHandler\n- uid: System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseEnterHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddMouseEnterHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddMouseEnterHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseLeaveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddMouseLeaveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddMouseLeaveHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseMoveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddMouseMoveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddMouseMoveHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  nameWithType: Mouse.AddMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  fullName: Mouse.AddMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n- uid: System.Windows.Input.MouseWheelEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseWheelEventHandler\n  nameWithType: MouseWheelEventHandler\n  fullName: System.Windows.Input.MouseWheelEventHandler\n- uid: System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddPreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddPreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.AddPreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.AddPreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddPreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddPreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  nameWithType: Mouse.AddPreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  fullName: Mouse.AddPreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n- uid: System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n  nameWithType: Mouse.AddQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n  fullName: Mouse.AddQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n- uid: System.Windows.Input.QueryCursorEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: QueryCursorEventHandler\n  nameWithType: QueryCursorEventHandler\n  fullName: System.Windows.Input.QueryCursorEventHandler\n- uid: System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: Capture(IInputElement)\n  nameWithType: Mouse.Capture(IInputElement)\n  fullName: Mouse.Capture(IInputElement)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: Capture(IInputElement, CaptureMode)\n  nameWithType: Mouse.Capture(IInputElement, CaptureMode)\n  fullName: Mouse.Capture(IInputElement, CaptureMode)\n- uid: System.Windows.Input.CaptureMode\n  parent: System.Windows.Input\n  isExternal: false\n  name: CaptureMode\n  nameWithType: CaptureMode\n  fullName: System.Windows.Input.CaptureMode\n- uid: System.Windows.Input.Mouse.Captured\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: Captured\n  nameWithType: Mouse.Captured\n  fullName: Mouse.Captured\n- uid: System.Windows.Input.Mouse.DirectlyOver\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: DirectlyOver\n  nameWithType: Mouse.DirectlyOver\n  fullName: Mouse.DirectlyOver\n- uid: System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: GetIntermediatePoints(IInputElement, Point[])\n  nameWithType: Mouse.GetIntermediatePoints(IInputElement, Point[])\n  fullName: Mouse.GetIntermediatePoints(IInputElement, Point[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Point\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Point[]\n  parent: System.Windows\n  isExternal: false\n  name: Point[]\n  nameWithType: Point[]\n  fullName: System.Windows.Point[]\n  spec.csharp:\n  - uid: System.Windows.Point\n    name: Point\n    nameWithType: Point\n    fullName: System.Windows.Point\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: GetPosition(IInputElement)\n  nameWithType: Mouse.GetPosition(IInputElement)\n  fullName: Mouse.GetPosition(IInputElement)\n- uid: System.Windows.Input.Mouse.GotMouseCaptureEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: GotMouseCaptureEvent\n  nameWithType: Mouse.GotMouseCaptureEvent\n  fullName: Mouse.GotMouseCaptureEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Input.Mouse.LeftButton\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: LeftButton\n  nameWithType: Mouse.LeftButton\n  fullName: Mouse.LeftButton\n- uid: System.Windows.Input.MouseButtonState\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseButtonState\n  nameWithType: MouseButtonState\n  fullName: System.Windows.Input.MouseButtonState\n- uid: System.Windows.Input.Mouse.LostMouseCaptureEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: LostMouseCaptureEvent\n  nameWithType: Mouse.LostMouseCaptureEvent\n  fullName: Mouse.LostMouseCaptureEvent\n- uid: System.Windows.Input.Mouse.MiddleButton\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: MiddleButton\n  nameWithType: Mouse.MiddleButton\n  fullName: Mouse.MiddleButton\n- uid: System.Windows.Input.Mouse.MouseDownEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: MouseDownEvent\n  nameWithType: Mouse.MouseDownEvent\n  fullName: Mouse.MouseDownEvent\n- uid: System.Windows.Input.Mouse.MouseEnterEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: MouseEnterEvent\n  nameWithType: Mouse.MouseEnterEvent\n  fullName: Mouse.MouseEnterEvent\n- uid: System.Windows.Input.Mouse.MouseLeaveEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: MouseLeaveEvent\n  nameWithType: Mouse.MouseLeaveEvent\n  fullName: Mouse.MouseLeaveEvent\n- uid: System.Windows.Input.Mouse.MouseMoveEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: MouseMoveEvent\n  nameWithType: Mouse.MouseMoveEvent\n  fullName: Mouse.MouseMoveEvent\n- uid: System.Windows.Input.Mouse.MouseUpEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: MouseUpEvent\n  nameWithType: Mouse.MouseUpEvent\n  fullName: Mouse.MouseUpEvent\n- uid: System.Windows.Input.Mouse.MouseWheelDeltaForOneLine\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: MouseWheelDeltaForOneLine\n  nameWithType: Mouse.MouseWheelDeltaForOneLine\n  fullName: Mouse.MouseWheelDeltaForOneLine\n- uid: System.Windows.Input.Mouse.MouseWheelEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: MouseWheelEvent\n  nameWithType: Mouse.MouseWheelEvent\n  fullName: Mouse.MouseWheelEvent\n- uid: System.Windows.Input.Mouse.OverrideCursor\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: OverrideCursor\n  nameWithType: Mouse.OverrideCursor\n  fullName: Mouse.OverrideCursor\n- uid: System.Windows.Input.Cursor\n  parent: System.Windows.Input\n  isExternal: false\n  name: Cursor\n  nameWithType: Cursor\n  fullName: System.Windows.Input.Cursor\n- uid: System.Windows.Input.Mouse.PreviewMouseDownEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: PreviewMouseDownEvent\n  nameWithType: Mouse.PreviewMouseDownEvent\n  fullName: Mouse.PreviewMouseDownEvent\n- uid: System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: PreviewMouseDownOutsideCapturedElementEvent\n  nameWithType: Mouse.PreviewMouseDownOutsideCapturedElementEvent\n  fullName: Mouse.PreviewMouseDownOutsideCapturedElementEvent\n- uid: System.Windows.Input.Mouse.PreviewMouseMoveEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: PreviewMouseMoveEvent\n  nameWithType: Mouse.PreviewMouseMoveEvent\n  fullName: Mouse.PreviewMouseMoveEvent\n- uid: System.Windows.Input.Mouse.PreviewMouseUpEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: PreviewMouseUpEvent\n  nameWithType: Mouse.PreviewMouseUpEvent\n  fullName: Mouse.PreviewMouseUpEvent\n- uid: System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: PreviewMouseUpOutsideCapturedElementEvent\n  nameWithType: Mouse.PreviewMouseUpOutsideCapturedElementEvent\n  fullName: Mouse.PreviewMouseUpOutsideCapturedElementEvent\n- uid: System.Windows.Input.Mouse.PreviewMouseWheelEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: PreviewMouseWheelEvent\n  nameWithType: Mouse.PreviewMouseWheelEvent\n  fullName: Mouse.PreviewMouseWheelEvent\n- uid: System.Windows.Input.Mouse.PrimaryDevice\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: PrimaryDevice\n  nameWithType: Mouse.PrimaryDevice\n  fullName: Mouse.PrimaryDevice\n- uid: System.Windows.Input.MouseDevice\n  parent: System.Windows.Input\n  isExternal: false\n  name: MouseDevice\n  nameWithType: MouseDevice\n  fullName: System.Windows.Input.MouseDevice\n- uid: System.Windows.Input.Mouse.QueryCursorEvent\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: QueryCursorEvent\n  nameWithType: Mouse.QueryCursorEvent\n  fullName: Mouse.QueryCursorEvent\n- uid: System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemoveGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemoveGotMouseCaptureHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemoveLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemoveLostMouseCaptureHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemoveMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemoveMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseEnterHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemoveMouseEnterHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemoveMouseEnterHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseLeaveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemoveMouseLeaveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemoveMouseLeaveHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseMoveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemoveMouseMoveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemoveMouseMoveHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemoveMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemoveMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  nameWithType: Mouse.RemoveMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  fullName: Mouse.RemoveMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemovePreviewMouseDownHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n  fullName: Mouse.RemovePreviewMouseMoveHandler(DependencyObject, MouseEventHandler)\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemovePreviewMouseUpHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n  fullName: Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(DependencyObject, MouseButtonEventHandler)\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  nameWithType: Mouse.RemovePreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n  fullName: Mouse.RemovePreviewMouseWheelHandler(DependencyObject, MouseWheelEventHandler)\n- uid: System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n  nameWithType: Mouse.RemoveQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n  fullName: Mouse.RemoveQueryCursorHandler(DependencyObject, QueryCursorEventHandler)\n- uid: System.Windows.Input.Mouse.RightButton\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RightButton\n  nameWithType: Mouse.RightButton\n  fullName: Mouse.RightButton\n- uid: System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: SetCursor(Cursor)\n  nameWithType: Mouse.SetCursor(Cursor)\n  fullName: Mouse.SetCursor(Cursor)\n- uid: System.Windows.Input.Mouse.Synchronize\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: Synchronize()\n  nameWithType: Mouse.Synchronize()\n  fullName: Mouse.Synchronize()\n- uid: System.Windows.Input.Mouse.UpdateCursor\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: UpdateCursor()\n  nameWithType: Mouse.UpdateCursor()\n  fullName: Mouse.UpdateCursor()\n- uid: System.Windows.Input.Mouse.XButton1\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: XButton1\n  nameWithType: Mouse.XButton1\n  fullName: Mouse.XButton1\n- uid: System.Windows.Input.Mouse.XButton2\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: XButton2\n  nameWithType: Mouse.XButton2\n  fullName: Mouse.XButton2\n- uid: System.Windows.Input.Mouse.Capture*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: Capture\n  nameWithType: Mouse.Capture\n  fullName: Mouse.Capture\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddGotMouseCaptureHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddGotMouseCaptureHandler\n  nameWithType: Mouse.AddGotMouseCaptureHandler\n  fullName: Mouse.AddGotMouseCaptureHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddLostMouseCaptureHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddLostMouseCaptureHandler\n  nameWithType: Mouse.AddLostMouseCaptureHandler\n  fullName: Mouse.AddLostMouseCaptureHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddMouseDownHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseDownHandler\n  nameWithType: Mouse.AddMouseDownHandler\n  fullName: Mouse.AddMouseDownHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddMouseEnterHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseEnterHandler\n  nameWithType: Mouse.AddMouseEnterHandler\n  fullName: Mouse.AddMouseEnterHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddMouseLeaveHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseLeaveHandler\n  nameWithType: Mouse.AddMouseLeaveHandler\n  fullName: Mouse.AddMouseLeaveHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddMouseMoveHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseMoveHandler\n  nameWithType: Mouse.AddMouseMoveHandler\n  fullName: Mouse.AddMouseMoveHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddMouseUpHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseUpHandler\n  nameWithType: Mouse.AddMouseUpHandler\n  fullName: Mouse.AddMouseUpHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddMouseWheelHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddMouseWheelHandler\n  nameWithType: Mouse.AddMouseWheelHandler\n  fullName: Mouse.AddMouseWheelHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddPreviewMouseDownHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseDownHandler\n  nameWithType: Mouse.AddPreviewMouseDownHandler\n  fullName: Mouse.AddPreviewMouseDownHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseDownOutsideCapturedElementHandler\n  nameWithType: Mouse.AddPreviewMouseDownOutsideCapturedElementHandler\n  fullName: Mouse.AddPreviewMouseDownOutsideCapturedElementHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddPreviewMouseMoveHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseMoveHandler\n  nameWithType: Mouse.AddPreviewMouseMoveHandler\n  fullName: Mouse.AddPreviewMouseMoveHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddPreviewMouseUpHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseUpHandler\n  nameWithType: Mouse.AddPreviewMouseUpHandler\n  fullName: Mouse.AddPreviewMouseUpHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseUpOutsideCapturedElementHandler\n  nameWithType: Mouse.AddPreviewMouseUpOutsideCapturedElementHandler\n  fullName: Mouse.AddPreviewMouseUpOutsideCapturedElementHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddPreviewMouseWheelHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddPreviewMouseWheelHandler\n  nameWithType: Mouse.AddPreviewMouseWheelHandler\n  fullName: Mouse.AddPreviewMouseWheelHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.AddQueryCursorHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: AddQueryCursorHandler\n  nameWithType: Mouse.AddQueryCursorHandler\n  fullName: Mouse.AddQueryCursorHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.Captured*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: Captured\n  nameWithType: Mouse.Captured\n  fullName: Mouse.Captured\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.DirectlyOver*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: DirectlyOver\n  nameWithType: Mouse.DirectlyOver\n  fullName: Mouse.DirectlyOver\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.GetIntermediatePoints*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: GetIntermediatePoints\n  nameWithType: Mouse.GetIntermediatePoints\n  fullName: Mouse.GetIntermediatePoints\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.GetPosition*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: GetPosition\n  nameWithType: Mouse.GetPosition\n  fullName: Mouse.GetPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.LeftButton*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: LeftButton\n  nameWithType: Mouse.LeftButton\n  fullName: Mouse.LeftButton\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.MiddleButton*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: MiddleButton\n  nameWithType: Mouse.MiddleButton\n  fullName: Mouse.MiddleButton\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.OverrideCursor*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: OverrideCursor\n  nameWithType: Mouse.OverrideCursor\n  fullName: Mouse.OverrideCursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.PrimaryDevice*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: PrimaryDevice\n  nameWithType: Mouse.PrimaryDevice\n  fullName: Mouse.PrimaryDevice\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveGotMouseCaptureHandler\n  nameWithType: Mouse.RemoveGotMouseCaptureHandler\n  fullName: Mouse.RemoveGotMouseCaptureHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveLostMouseCaptureHandler\n  nameWithType: Mouse.RemoveLostMouseCaptureHandler\n  fullName: Mouse.RemoveLostMouseCaptureHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemoveMouseDownHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseDownHandler\n  nameWithType: Mouse.RemoveMouseDownHandler\n  fullName: Mouse.RemoveMouseDownHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemoveMouseEnterHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseEnterHandler\n  nameWithType: Mouse.RemoveMouseEnterHandler\n  fullName: Mouse.RemoveMouseEnterHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemoveMouseLeaveHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseLeaveHandler\n  nameWithType: Mouse.RemoveMouseLeaveHandler\n  fullName: Mouse.RemoveMouseLeaveHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemoveMouseMoveHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseMoveHandler\n  nameWithType: Mouse.RemoveMouseMoveHandler\n  fullName: Mouse.RemoveMouseMoveHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemoveMouseUpHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseUpHandler\n  nameWithType: Mouse.RemoveMouseUpHandler\n  fullName: Mouse.RemoveMouseUpHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemoveMouseWheelHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveMouseWheelHandler\n  nameWithType: Mouse.RemoveMouseWheelHandler\n  fullName: Mouse.RemoveMouseWheelHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseDownHandler\n  nameWithType: Mouse.RemovePreviewMouseDownHandler\n  fullName: Mouse.RemovePreviewMouseDownHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseDownOutsideCapturedElementHandler\n  nameWithType: Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler\n  fullName: Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseMoveHandler\n  nameWithType: Mouse.RemovePreviewMouseMoveHandler\n  fullName: Mouse.RemovePreviewMouseMoveHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseUpHandler\n  nameWithType: Mouse.RemovePreviewMouseUpHandler\n  fullName: Mouse.RemovePreviewMouseUpHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseUpOutsideCapturedElementHandler\n  nameWithType: Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler\n  fullName: Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemovePreviewMouseWheelHandler\n  nameWithType: Mouse.RemovePreviewMouseWheelHandler\n  fullName: Mouse.RemovePreviewMouseWheelHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RemoveQueryCursorHandler*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RemoveQueryCursorHandler\n  nameWithType: Mouse.RemoveQueryCursorHandler\n  fullName: Mouse.RemoveQueryCursorHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.RightButton*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: RightButton\n  nameWithType: Mouse.RightButton\n  fullName: Mouse.RightButton\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.SetCursor*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: SetCursor\n  nameWithType: Mouse.SetCursor\n  fullName: Mouse.SetCursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.Synchronize*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: Synchronize\n  nameWithType: Mouse.Synchronize\n  fullName: Mouse.Synchronize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.UpdateCursor*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: UpdateCursor\n  nameWithType: Mouse.UpdateCursor\n  fullName: Mouse.UpdateCursor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.XButton1*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: XButton1\n  nameWithType: Mouse.XButton1\n  fullName: Mouse.XButton1\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Windows.Input.Mouse.XButton2*\n  parent: System.Windows.Input.Mouse\n  isExternal: false\n  name: XButton2\n  nameWithType: Mouse.XButton2\n  fullName: Mouse.XButton2\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Mouse.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}