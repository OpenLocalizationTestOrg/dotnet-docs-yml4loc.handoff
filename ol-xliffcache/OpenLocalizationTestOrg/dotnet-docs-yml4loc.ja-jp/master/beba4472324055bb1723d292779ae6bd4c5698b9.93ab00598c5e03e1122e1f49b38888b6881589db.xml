{"nodes":[{"content":"Converts a <xref href=\"System.Windows.Input.KeyGesture\"></xref> object to and from other types.","nodes":[{"pos":[0,95],"content":"Converts a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.KeyGesture\"&gt;&lt;/xref&gt;</ph> object to and from other types.","source":"Converts a <xref href=\"System.Windows.Input.KeyGesture\"></xref> object to and from other types."}],"pos":[1004,1100],"yaml":true},{"content":"The <xref:System.Windows.Input.KeyGestureConverter> class only converts an instance <xref:System.Windows.Input.KeyGesture> to and from a <xref:System.String>.  \n  \n The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \"+\" character as the delimiter between the modifier keys and the key.  For example, the string `Control+A` would be converted into a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A>.  \n  \n<a name=\"xamlTextUsage_KeyGestureConverter\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,158],"content":"The <xref:System.Windows.Input.KeyGestureConverter> class only converts an instance <xref:System.Windows.Input.KeyGesture> to and from a <xref:System.String>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.KeyGestureConverter&gt;</ph> class only converts an instance <ph id=\"ph2\">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to and from a <ph id=\"ph3\">&lt;xref:System.String&gt;</ph>.","pos":[0,158],"source":"The <xref:System.Windows.Input.KeyGestureConverter> class only converts an instance <xref:System.Windows.Input.KeyGesture> to and from a <xref:System.String>."}]},{"pos":[165,671],"content":"The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \"+\" character as the delimiter between the modifier keys and the key.  For example, the string `Control+A` would be converted into a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.KeyGestureConverter&gt;</ph> converts to and from a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> using the \"+\" character as the delimiter between the modifier keys and the key.","pos":[0,175],"source":"The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \"+\" character as the delimiter between the modifier keys and the key."},{"content":"For example, the string <ph id=\"ph1\">`Control+A`</ph> would be converted into a <ph id=\"ph2\">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> with a <ph id=\"ph3\">&lt;xref:System.Windows.Input.KeyGesture.Modifiers%2A&gt;</ph> property equal to <ph id=\"ph4\">&lt;xref:System.Windows.Input.ModifierKeys.Control&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Input.KeyGesture.Key%2A&gt;</ph> property equal to <ph id=\"ph6\">&lt;xref:System.Windows.Input.Key.A&gt;</ph>.","pos":[177,506],"source":"  For example, the string `Control+A` would be converted into a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A>."}]},{"pos":[732,747],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[1111,1870],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Input.KeyGesture\"></xref> class.","nodes":[{"pos":[0,93],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.KeyGesture\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Input.KeyGesture\"></xref> class."}],"pos":[6569,6663],"yaml":true},{"content":"Determines whether an object of the specified type can be converted to an instance of <xref href=\"System.Windows.Input.KeyGesture\"></xref>, using the specified context.","nodes":[{"pos":[0,168],"content":"Determines whether an object of the specified type can be converted to an instance of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.KeyGesture\"&gt;&lt;/xref&gt;</ph>, using the specified context.","source":"Determines whether an object of the specified type can be converted to an instance of <xref href=\"System.Windows.Input.KeyGesture\"></xref>, using the specified context."}],"pos":[8054,8223],"yaml":true},{"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"pos":[0,108],"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]}],"pos":[8465,8574],"yaml":true},{"content":"The type being evaluated for conversion.","nodes":[{"pos":[0,40],"content":"The type being evaluated for conversion.","nodes":[{"content":"The type being evaluated for conversion.","pos":[0,40]}]}],"pos":[8638,8679],"yaml":true},{"content":"`true` if <code>sourceType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">sourceType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is type <ph id=\"ph3\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>sourceType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`."}],"pos":[8737,8837],"yaml":true},{"content":"Determines whether an instance of <xref href=\"System.Windows.Input.KeyGesture\"></xref> can be converted to the specified type, using the specified context.","nodes":[{"pos":[0,155],"content":"Determines whether an instance of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.KeyGesture\"&gt;&lt;/xref&gt;</ph> can be converted to the specified type, using the specified context.","source":"Determines whether an instance of <xref href=\"System.Windows.Input.KeyGesture\"></xref> can be converted to the specified type, using the specified context."}],"pos":[10152,10308],"yaml":true},{"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"pos":[0,108],"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]}],"pos":[10553,10662],"yaml":true},{"content":"The type being evaluated for conversion.","nodes":[{"pos":[0,40],"content":"The type being evaluated for conversion.","nodes":[{"content":"The type being evaluated for conversion.","pos":[0,40]}]}],"pos":[10731,10772],"yaml":true},{"content":"`true` if <code>destinationType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">destinationType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is type <ph id=\"ph3\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>destinationType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`."}],"pos":[10830,10935],"yaml":true},{"content":"Attempts to convert the specified object to a <xref href=\"System.Windows.Input.KeyGesture\"></xref>, using the specified context.","nodes":[{"pos":[0,128],"content":"Attempts to convert the specified object to a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.KeyGesture\"&gt;&lt;/xref&gt;</ph>, using the specified context.","source":"Attempts to convert the specified object to a <xref href=\"System.Windows.Input.KeyGesture\"></xref>, using the specified context."}],"pos":[12370,12499],"yaml":true},{"content":"The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter between the modifier keys and the key.  For example, the string `Control+A` would be converted into a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A>.","nodes":[{"pos":[0,500],"content":"The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter between the modifier keys and the key.  For example, the string `Control+A` would be converted into a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.KeyGestureConverter&gt;</ph> converts to and from a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> using the \"+\" key as the delimiter between the modifier keys and the key.","pos":[0,169],"source":"The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter between the modifier keys and the key."},{"content":"For example, the string <ph id=\"ph1\">`Control+A`</ph> would be converted into a <ph id=\"ph2\">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> with a <ph id=\"ph3\">&lt;xref:System.Windows.Input.KeyGesture.Modifiers%2A&gt;</ph> property equal to <ph id=\"ph4\">&lt;xref:System.Windows.Input.ModifierKeys.Control&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Input.KeyGesture.Key%2A&gt;</ph> property equal to <ph id=\"ph6\">&lt;xref:System.Windows.Input.Key.A&gt;</ph>.","pos":[171,500],"source":"  For example, the string `Control+A` would be converted into a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A>."}]}],"pos":[12510,13011],"yaml":true,"extradata":"MT"},{"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"pos":[0,108],"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]}],"pos":[13292,13401],"yaml":true},{"content":"Culture specific information.","nodes":[{"pos":[0,29],"content":"Culture specific information.","nodes":[{"content":"Culture specific information.","pos":[0,29]}]}],"pos":[13483,13513],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[13575,13598],"yaml":true},{"content":"The converted object.","nodes":[{"pos":[0,21],"content":"The converted object.","nodes":[{"content":"The converted object.","pos":[0,21]}]}],"pos":[13655,13677],"yaml":true},{"content":"<code>source</code> cannot be converted.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;source&lt;/code&gt;</ph> cannot be converted.","source":"<code>source</code> cannot be converted."}],"pos":[13859,13900],"yaml":true},{"content":"Attempts to convert a <xref href=\"System.Windows.Input.KeyGesture\"></xref> to the specified type, using the specified context.","nodes":[{"pos":[0,126],"content":"Attempts to convert a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.KeyGesture\"&gt;&lt;/xref&gt;</ph> to the specified type, using the specified context.","source":"Attempts to convert a <xref href=\"System.Windows.Input.KeyGesture\"></xref> to the specified type, using the specified context."}],"pos":[15315,15442],"yaml":true},{"content":"`destinationType` must be <xref:System.String>.  \n  \n The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter between the modifier keys and the key. For example, a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A> would be converted into the string `Control+A`.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">`destinationType`</ph> must be <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>.","source":"`destinationType` must be <xref:System.String>."},{"pos":[54,553],"content":"The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter between the modifier keys and the key. For example, a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A> would be converted into the string `Control+A`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.KeyGestureConverter&gt;</ph> converts to and from a <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> using the \"+\" key as the delimiter between the modifier keys and the key.","pos":[0,169],"source":"The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter between the modifier keys and the key."},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> with a <ph id=\"ph2\">&lt;xref:System.Windows.Input.KeyGesture.Modifiers%2A&gt;</ph> property equal to <ph id=\"ph3\">&lt;xref:System.Windows.Input.ModifierKeys.Control&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Input.KeyGesture.Key%2A&gt;</ph> property equal to <ph id=\"ph5\">&lt;xref:System.Windows.Input.Key.A&gt;</ph> would be converted into the string <ph id=\"ph6\">`Control+A`</ph>.","pos":[170,499],"source":" For example, a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A> would be converted into the string `Control+A`."}]}],"pos":[15453,16013],"yaml":true,"extradata":"MT"},{"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"pos":[0,108],"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]}],"pos":[16313,16422],"yaml":true},{"content":"Culture specific information.","nodes":[{"pos":[0,29],"content":"Culture specific information.","nodes":[{"content":"Culture specific information.","pos":[0,29]}]}],"pos":[16504,16534],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[16595,16618],"yaml":true},{"content":"The type to convert the object to.","nodes":[{"pos":[0,34],"content":"The type to convert the object to.","nodes":[{"content":"The type to convert the object to.","pos":[0,34]}]}],"pos":[16687,16722],"yaml":true},{"content":"The converted object, or an empty string if <code>value</code> is `null`.","nodes":[{"pos":[0,73],"content":"The converted object, or an empty string if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The converted object, or an empty string if <code>value</code> is `null`."}],"pos":[16779,16853],"yaml":true},{"content":"<code>destinationType</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;destinationType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>destinationType</code> is `null`."}],"pos":[17033,17073],"yaml":true},{"content":"<code>value</code> cannot be converted.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> cannot be converted.","source":"<code>value</code> cannot be converted."}],"pos":[17175,17215],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.KeyGestureConverter\n  commentId: T:System.Windows.Input.KeyGestureConverter\n  id: KeyGestureConverter\n  children:\n  - System.Windows.Input.KeyGestureConverter.#ctor\n  - System.Windows.Input.KeyGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Input.KeyGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Input.KeyGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.Input.KeyGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: KeyGestureConverter\n  nameWithType: KeyGestureConverter\n  fullName: System.Windows.Input.KeyGestureConverter\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Converts a <xref href=\"System.Windows.Input.KeyGesture\"></xref> object to and from other types.\n  remarks: \"The <xref:System.Windows.Input.KeyGestureConverter> class only converts an instance <xref:System.Windows.Input.KeyGesture> to and from a <xref:System.String>.  \\n  \\n The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \\\"+\\\" character as the delimiter between the modifier keys and the key.  For example, the string `Control+A` would be converted into a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A>.  \\n  \\n<a name=\\\"xamlTextUsage_KeyGestureConverter\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: 'public class KeyGestureConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyGestureConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyGestureConverter.#ctor\n  commentId: M:System.Windows.Input.KeyGestureConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.Input.KeyGestureConverter\n  langs:\n  - csharp\n  name: KeyGestureConverter()\n  nameWithType: KeyGestureConverter.KeyGestureConverter()\n  fullName: KeyGestureConverter.KeyGestureConverter()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.KeyGesture\"></xref> class.\n  syntax:\n    content: public KeyGestureConverter ();\n    parameters: []\n  overload: System.Windows.Input.KeyGestureConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyGestureConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.Input.KeyGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.KeyGestureConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: KeyGestureConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: KeyGestureConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Determines whether an object of the specified type can be converted to an instance of <xref href=\"System.Windows.Input.KeyGesture\"></xref>, using the specified context.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: sourceType\n      type: System.Type\n      description: The type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>sourceType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`.'\n  overload: System.Windows.Input.KeyGestureConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyGestureConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.Input.KeyGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.KeyGestureConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: KeyGestureConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: KeyGestureConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Determines whether an instance of <xref href=\"System.Windows.Input.KeyGesture\"></xref> can be converted to the specified type, using the specified context.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: destinationType\n      type: System.Type\n      description: The type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>destinationType</code> is type <xref href=\"System.String\"></xref>; otherwise, `false`.'\n  overload: System.Windows.Input.KeyGestureConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyGestureConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.KeyGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Windows.Input.KeyGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Input.KeyGestureConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: KeyGestureConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: KeyGestureConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Attempts to convert the specified object to a <xref href=\"System.Windows.Input.KeyGesture\"></xref>, using the specified context.\n  remarks: The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \"+\" key as the delimiter between the modifier keys and the key.  For example, the string `Control+A` would be converted into a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A>.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Culture specific information.\n    - id: source\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: The converted object.\n  overload: System.Windows.Input.KeyGestureConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>source</code> cannot be converted.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyGestureConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.KeyGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Windows.Input.KeyGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Input.KeyGestureConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: KeyGestureConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: KeyGestureConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Attempts to convert a <xref href=\"System.Windows.Input.KeyGesture\"></xref> to the specified type, using the specified context.\n  remarks: \"`destinationType` must be <xref:System.String>.  \\n  \\n The <xref:System.Windows.Input.KeyGestureConverter> converts to and from a <xref:System.String> using the \\\"+\\\" key as the delimiter between the modifier keys and the key. For example, a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.KeyGesture.Modifiers%2A> property equal to <xref:System.Windows.Input.ModifierKeys.Control> and <xref:System.Windows.Input.KeyGesture.Key%2A> property equal to <xref:System.Windows.Input.Key.A> would be converted into the string `Control+A`.\"\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Culture specific information.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert the object to.\n    return:\n      type: System.Object\n      description: The converted object, or an empty string if <code>value</code> is `null`.\n  overload: System.Windows.Input.KeyGestureConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>destinationType</code> is `null`.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>value</code> cannot be converted.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyGestureConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Windows.Input.KeyGestureConverter.#ctor\n  parent: System.Windows.Input.KeyGestureConverter\n  isExternal: false\n  name: KeyGestureConverter()\n  nameWithType: KeyGestureConverter.KeyGestureConverter()\n  fullName: KeyGestureConverter.KeyGestureConverter()\n- uid: System.Windows.Input.KeyGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.KeyGestureConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: KeyGestureConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: KeyGestureConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Input.KeyGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Input.KeyGestureConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: KeyGestureConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: KeyGestureConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.Windows.Input.KeyGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Input.KeyGestureConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: KeyGestureConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: KeyGestureConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Input.KeyGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Input.KeyGestureConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: KeyGestureConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: KeyGestureConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Windows.Input.KeyGestureConverter.#ctor*\n  parent: System.Windows.Input.KeyGestureConverter\n  isExternal: false\n  name: KeyGestureConverter\n  nameWithType: KeyGestureConverter.KeyGestureConverter\n  fullName: KeyGestureConverter.KeyGestureConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyGestureConverter.xml\n- uid: System.Windows.Input.KeyGestureConverter.CanConvertFrom*\n  parent: System.Windows.Input.KeyGestureConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: KeyGestureConverter.CanConvertFrom\n  fullName: KeyGestureConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyGestureConverter.xml\n- uid: System.Windows.Input.KeyGestureConverter.CanConvertTo*\n  parent: System.Windows.Input.KeyGestureConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: KeyGestureConverter.CanConvertTo\n  fullName: KeyGestureConverter.CanConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyGestureConverter.xml\n- uid: System.Windows.Input.KeyGestureConverter.ConvertFrom*\n  parent: System.Windows.Input.KeyGestureConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: KeyGestureConverter.ConvertFrom\n  fullName: KeyGestureConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyGestureConverter.xml\n- uid: System.Windows.Input.KeyGestureConverter.ConvertTo*\n  parent: System.Windows.Input.KeyGestureConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: KeyGestureConverter.ConvertTo\n  fullName: KeyGestureConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/KeyGestureConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}