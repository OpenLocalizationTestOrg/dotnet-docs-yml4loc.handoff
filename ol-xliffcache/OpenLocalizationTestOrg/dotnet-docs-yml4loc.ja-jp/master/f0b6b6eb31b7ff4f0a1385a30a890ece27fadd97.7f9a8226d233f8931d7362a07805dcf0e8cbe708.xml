{"nodes":[{"content":"A timer that is integrated into the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> queue which is processed at a specified interval of time and at a specified priority.","nodes":[{"pos":[0,178],"content":"A timer that is integrated into the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;&lt;/xref&gt;</ph> queue which is processed at a specified interval of time and at a specified priority.","source":"A timer that is integrated into the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> queue which is processed at a specified interval of time and at a specified priority."}],"pos":[1208,1387],"yaml":true},{"content":"The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.  \n  \n Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.  \n  \n If a <xref:System.Timers.Timer?displayProperty=fullName> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=fullName> runs on a different thread then the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.  In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>. Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> opposed to a <xref:System.Timers.Timer?displayProperty=fullName> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>.  \n  \n A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer.  \n  \n<a name=\"xamlTextUsage_DispatcherTimer\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,135],"content":"The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> is reevaluated at the top of every <ph id=\"ph2\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> loop.","pos":[0,135],"source":"The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop."}]},{"pos":[142,598],"content":"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.","nodes":[{"content":"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.","pos":[0,456],"nodes":[{"content":"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.","pos":[0,147]},{"content":"This is because <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operations are placed on the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> queue like other operations.","pos":[149,313],"source":"  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operation executes is dependent on the other jobs in the queue and their priorities.","pos":[315,456],"source":"  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities."}]}]},{"pos":[605,1699],"content":"If a <xref:System.Timers.Timer?displayProperty=fullName> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=fullName> runs on a different thread then the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.  In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>. Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> opposed to a <xref:System.Timers.Timer?displayProperty=fullName> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>.","nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Timers.Timer?displayProperty=fullName&gt;</ph> is used in a <ph id=\"ph2\">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> application, it is worth noting that the <ph id=\"ph3\">&lt;xref:System.Timers.Timer?displayProperty=fullName&gt;</ph> runs on a different thread then the <ph id=\"ph4\">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread.","pos":[0,322],"source":"If a <xref:System.Timers.Timer?displayProperty=fullName> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=fullName> runs on a different thread then the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread."},{"content":"In order to access objects on the <ph id=\"ph1\">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread, it is necessary to post the operation onto the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the <ph id=\"ph3\">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> thread using <ph id=\"ph4\">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph>.","pos":[324,702],"source":"  In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>."},{"content":"Reasons for using a <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> opposed to a <ph id=\"ph2\">&lt;xref:System.Timers.Timer?displayProperty=fullName&gt;</ph> are that the <ph id=\"ph3\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the same thread as the <ph id=\"ph4\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> and a <ph id=\"ph5\">&lt;xref:System.Windows.Threading.DispatcherPriority&gt;</ph> can be set on the <ph id=\"ph6\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph>.","pos":[703,1094],"source":" Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> opposed to a <xref:System.Timers.Timer?displayProperty=fullName> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>."}]},{"pos":[1706,1835],"content":"A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> will keep an object alive whenever the object's methods are bound to the timer.","pos":[0,129],"source":"A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer."}]},{"pos":[1892,1907],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[1398,3319],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class."}],"pos":[6616,6719],"yaml":true},{"content":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName>.","nodes":[{"pos":[0,467],"content":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName>.","nodes":[{"content":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName>.","pos":[0,467],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the current thread at <ph id=\"ph3\">&lt;xref:System.Windows.Threading.DispatcherPriority.Background&gt;</ph> priority.","pos":[0,199],"source":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority."},{"content":"To specify a different <ph id=\"ph1\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, use the following constructor: <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName&gt;</ph>.","pos":[201,467],"source":"  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName>."}]}]}],"pos":[6730,7200],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which processes timer events at the specified priority.","nodes":[{"pos":[0,157],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;&lt;/xref&gt;</ph> class which processes timer events at the specified priority.","source":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which processes timer events at the specified priority."}],"pos":[8492,8650],"yaml":true},{"content":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.","nodes":[{"pos":[0,368],"content":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.","nodes":[{"content":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.","pos":[0,368],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> runs on the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the current thread.","pos":[0,125],"source":"<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread."},{"content":"To specify a different <ph id=\"ph1\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>, use the following constructor: <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29&gt;</ph>.","pos":[127,368],"source":"  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>."}]}]}],"pos":[8661,9032],"yaml":true,"extradata":"MT"},{"content":"The priority at which to invoke the timer.","nodes":[{"pos":[0,42],"content":"The priority at which to invoke the timer.","nodes":[{"content":"The priority at which to invoke the timer.","pos":[0,42]}]}],"pos":[9244,9287],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which runs on the specified <xref href=\"System.Windows.Threading.Dispatcher\"></xref> at the specified priority.","nodes":[{"pos":[0,213],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;&lt;/xref&gt;</ph> class which runs on the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;&lt;/xref&gt;</ph> at the specified priority.","source":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which runs on the specified <xref href=\"System.Windows.Threading.Dispatcher\"></xref> at the specified priority."}],"pos":[10632,10846],"yaml":true},{"content":"The priority at which to invoke the timer.","nodes":[{"pos":[0,42],"content":"The priority at which to invoke the timer.","nodes":[{"content":"The priority at which to invoke the timer.","pos":[0,42]}]}],"pos":[11106,11149],"yaml":true},{"content":"The dispatcher the timer is associated with.","nodes":[{"pos":[0,44],"content":"The dispatcher the timer is associated with.","nodes":[{"content":"The dispatcher the timer is associated with.","pos":[0,44]}]}],"pos":[11237,11282],"yaml":true},{"content":"<code>dispatcher</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;dispatcher&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>dispatcher</code> is `null`."}],"pos":[11458,11493],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which uses the specified time interval, priority, event handler, and <xref href=\"System.Windows.Threading.Dispatcher\"></xref>.","nodes":[{"pos":[0,228],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;&lt;/xref&gt;</ph> class which uses the specified time interval, priority, event handler, and <ph id=\"ph2\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which uses the specified time interval, priority, event handler, and <xref href=\"System.Windows.Threading.Dispatcher\"></xref>."}],"pos":[12963,13192],"yaml":true},{"content":"The period of time between ticks.","nodes":[{"pos":[0,33],"content":"The period of time between ticks.","nodes":[{"content":"The period of time between ticks.","pos":[0,33]}]}],"pos":[13466,13500],"yaml":true},{"content":"The priority at which to invoke the timer.","nodes":[{"pos":[0,42],"content":"The priority at which to invoke the timer.","nodes":[{"content":"The priority at which to invoke the timer.","pos":[0,42]}]}],"pos":[13594,13637],"yaml":true},{"content":"The event handler to call when the <xref href=\"System.Windows.Threading.DispatcherTimer.Tick\"></xref> event occurs.","nodes":[{"pos":[0,115],"content":"The event handler to call when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer.Tick\"&gt;&lt;/xref&gt;</ph> event occurs.","source":"The event handler to call when the <xref href=\"System.Windows.Threading.DispatcherTimer.Tick\"></xref> event occurs."}],"pos":[13707,13823],"yaml":true},{"content":"The dispatcher the timer is associated with.","nodes":[{"pos":[0,44],"content":"The dispatcher the timer is associated with.","nodes":[{"content":"The dispatcher the timer is associated with.","pos":[0,44]}]}],"pos":[13911,13956],"yaml":true},{"content":"<code>callback</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;callback&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>callback</code> is `null`."}],"pos":[14132,14165],"yaml":true},{"content":"<code>interval</code> is less than 0 or greater than <xref href=\"System.Int32.MaxValue\"></xref>.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">&lt;code&gt;interval&lt;/code&gt;</ph> is less than 0 or greater than <ph id=\"ph2\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>interval</code> is less than 0 or greater than <xref href=\"System.Int32.MaxValue\"></xref>."}],"pos":[14279,14376],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> associated with this <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>.","nodes":[{"pos":[0,149],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.Dispatcher\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> associated with this <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>."}],"pos":[15322,15472],"yaml":true},{"content":"The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.  The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.","nodes":[{"pos":[0,389],"content":"The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.  The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.","nodes":[{"content":"The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.  The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.","pos":[0,389],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A&gt;</ph> property is determined at the creation of the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> object.","pos":[0,167],"source":"The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> property is set to the current <ph id=\"ph2\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> at the time of creation unless a different <ph id=\"ph3\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> is specified.","pos":[169,389],"source":"  The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified."}]}]}],"pos":[15483,15873],"yaml":true,"extradata":"MT"},{"content":"The dispatcher.","nodes":[{"pos":[0,15],"content":"The dispatcher.","nodes":[{"content":"The dispatcher.","pos":[0,15]}]}],"pos":[16038,16054],"yaml":true},{"content":"Gets or sets the period of time between timer ticks.","nodes":[{"pos":[0,52],"content":"Gets or sets the period of time between timer ticks.","nodes":[{"content":"Gets or sets the period of time between timer ticks.","pos":[0,52]}]}],"pos":[17048,17101],"yaml":true},{"content":"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.  \n  \n<a name=\"XAMLTextUsage_Interval\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,456],"content":"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.","nodes":[{"content":"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.","pos":[0,456],"nodes":[{"content":"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.","pos":[0,147]},{"content":"This is because <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operations are placed on the <ph id=\"ph2\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> queue like other operations.","pos":[149,313],"source":"  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer&gt;</ph> operation executes is dependent on the other jobs in the queue and their priorities.","pos":[315,456],"source":"  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities."}]}]},{"pos":[506,521],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[17112,17641],"yaml":true,"extradata":"MT"},{"content":"The period of time between ticks. The default is 00:00:00.","nodes":[{"pos":[0,58],"content":"The period of time between ticks. The default is 00:00:00.","nodes":[{"content":"The period of time between ticks. The default is 00:00:00.","pos":[0,58],"nodes":[{"content":"The period of time between ticks.","pos":[0,33]},{"content":"The default is 00:00:00.","pos":[34,58]}]}]}],"pos":[18671,18730],"yaml":true},{"content":"<code>interval</code> is less than 0 or greater than <xref href=\"System.Int32.MaxValue\"></xref> milliseconds.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">&lt;code&gt;interval&lt;/code&gt;</ph> is less than 0 or greater than <ph id=\"ph2\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph> milliseconds.","source":"<code>interval</code> is less than 0 or greater than <xref href=\"System.Int32.MaxValue\"></xref> milliseconds."}],"pos":[18921,19031],"yaml":true},{"content":"Gets or sets a value that indicates whether the timer is running.","nodes":[{"pos":[0,65],"content":"Gets or sets a value that indicates whether the timer is running.","nodes":[{"content":"Gets or sets a value that indicates whether the timer is running.","pos":[0,65]}]}],"pos":[19971,20037],"yaml":true},{"content":"<xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.  \n  \n Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.  \n  \n Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.  \n  \n<a name=\"XAMLTextUsage_IsEnabled\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,163],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> must be set to <ph id=\"ph2\">`true`</ph> for the <ph id=\"ph3\">&lt;xref:System.Windows.Threading.DispatcherTimer.Tick&gt;</ph> event to be raised.","source":"<xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised."},{"pos":[170,311],"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id=\"ph3\">`true`</ph>.","source":"Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`."},{"pos":[318,459],"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id=\"ph3\">`false`</ph>.","source":"Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`."},{"pos":[510,525],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[20048,20585],"yaml":true,"extradata":"MT"},{"content":"`true` if the timer is enabled; otherwise, `false`.  The default is `false`.","nodes":[{"pos":[0,76],"content":"`true` if the timer is enabled; otherwise, `false`.  The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the timer is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,51],"source":"`true` if the timer is enabled; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[53,76],"source":"  The default is `false`."}]}],"pos":[21611,21690],"yaml":true},{"content":"Starts the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>.","nodes":[{"pos":[0,73],"content":"Starts the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;&lt;/xref&gt;</ph>.","source":"Starts the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>."}],"pos":[22691,22765],"yaml":true},{"content":"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.  \n  \n Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.  \n  \n <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.  \n  \n <xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.","nodes":[{"pos":[0,122],"content":"Setting <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id=\"ph2\">`false`</ph> when the timer is started stops the timer.","source":"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer."},{"pos":[129,251],"content":"Setting <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> when the timer is stopped starts the timer.","source":"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer."},{"pos":[258,391],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id=\"ph3\">`true`</ph>.","source":"<xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`."},{"pos":[398,532],"content":"<xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer.Start%2A&gt;</ph> resets the timer <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherTimer.Interval%2A&gt;</ph>.","pos":[0,134],"source":"<xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>."}]}],"pos":[22776,23317],"yaml":true,"extradata":"MT"},{"content":"Stops the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>.","nodes":[{"pos":[0,72],"content":"Stops the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Threading.DispatcherTimer\"&gt;&lt;/xref&gt;</ph>.","source":"Stops the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>."}],"pos":[25279,25352],"yaml":true},{"content":"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.  \n  \n Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.  \n  \n Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.","nodes":[{"pos":[0,122],"content":"Setting <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id=\"ph2\">`false`</ph> when the timer is started stops the timer.","source":"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer."},{"pos":[129,251],"content":"Setting <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> when the timer is stopped starts the timer.","source":"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer."},{"pos":[258,399],"content":"Calling <ph id=\"ph1\">&lt;xref:System.Windows.Threading.DispatcherTimer.Stop%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A&gt;</ph> to <ph id=\"ph3\">`false`</ph>.","source":"Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`."}],"pos":[25363,25769],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a user-defined data object.","nodes":[{"pos":[0,40],"content":"Gets or sets a user-defined data object.","nodes":[{"content":"Gets or sets a user-defined data object.","pos":[0,40]}]}],"pos":[26812,26853],"yaml":true},{"content":"<a name=\"XAMLTextUsage_Tag\"></a>   \n## XAML Text Usage","nodes":[{"pos":[39,54],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[26864,26924],"yaml":true,"extradata":"MT"},{"content":"The user-defined data.  The default is `null`.","nodes":[{"pos":[0,46],"content":"The user-defined data.  The default is `null`.","nodes":[{"content":"The user-defined data.","pos":[0,22]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[24,46],"source":"  The default is `null`."}]}],"pos":[27036,27083],"yaml":true},{"content":"Occurs when the timer interval has elapsed.","nodes":[{"pos":[0,43],"content":"Occurs when the timer interval has elapsed.","nodes":[{"content":"Occurs when the timer interval has elapsed.","pos":[0,43]}]}],"pos":[28065,28109],"yaml":true},{"content":"<a name=\"xamlTextUsage_Tick\"></a>   \n## XAML Text Usage","nodes":[{"pos":[40,55],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[28120,28181],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Threading.DispatcherTimer\n  commentId: T:System.Windows.Threading.DispatcherTimer\n  id: DispatcherTimer\n  children:\n  - System.Windows.Threading.DispatcherTimer.#ctor\n  - System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)\n  - System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)\n  - System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)\n  - System.Windows.Threading.DispatcherTimer.Dispatcher\n  - System.Windows.Threading.DispatcherTimer.Interval\n  - System.Windows.Threading.DispatcherTimer.IsEnabled\n  - System.Windows.Threading.DispatcherTimer.Start\n  - System.Windows.Threading.DispatcherTimer.Stop\n  - System.Windows.Threading.DispatcherTimer.Tag\n  - System.Windows.Threading.DispatcherTimer.Tick\n  langs:\n  - csharp\n  name: DispatcherTimer\n  nameWithType: DispatcherTimer\n  fullName: System.Windows.Threading.DispatcherTimer\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: A timer that is integrated into the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> queue which is processed at a specified interval of time and at a specified priority.\n  remarks: \"The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.  \\n  \\n Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.  \\n  \\n If a <xref:System.Timers.Timer?displayProperty=fullName> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=fullName> runs on a different thread then the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.  In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>. Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> opposed to a <xref:System.Timers.Timer?displayProperty=fullName> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>.  \\n  \\n A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer.  \\n  \\n<a name=\\\"xamlTextUsage_DispatcherTimer\\\"></a>   \\n## XAML Text Usage\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Threading.DispatcherTimer> that updates the contents of a <xref:System.Windows.Controls.Label> and calls the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method on the <xref:System.Windows.Input.CommandManager>.  \\n  \\n A <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event of `dispatcherTimer`.  The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object, and the timer is started.  \\n  \\n [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]\\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  \\n  \\n The <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.  \\n  \\n [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]\\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]\"\n  syntax:\n    content: public class DispatcherTimer\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherTimer.#ctor\n  commentId: M:System.Windows.Threading.DispatcherTimer.#ctor\n  id: '#ctor'\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: DispatcherTimer()\n  nameWithType: DispatcherTimer.DispatcherTimer()\n  fullName: DispatcherTimer.DispatcherTimer()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class.\n  remarks: '<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=fullName>.'\n  syntax:\n    content: public DispatcherTimer ();\n    parameters: []\n  overload: System.Windows.Threading.DispatcherTimer.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)\n  commentId: M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)\n  id: '#ctor(System.Windows.Threading.DispatcherPriority)'\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: DispatcherTimer(DispatcherPriority)\n  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority)\n  fullName: DispatcherTimer.DispatcherTimer(DispatcherPriority)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which processes timer events at the specified priority.\n  remarks: '<xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.  To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.'\n  syntax:\n    content: public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority);\n    parameters:\n    - id: priority\n      type: System.Windows.Threading.DispatcherPriority\n      description: The priority at which to invoke the timer.\n  overload: System.Windows.Threading.DispatcherTimer.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)\n  commentId: M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)\n  id: '#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)'\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: DispatcherTimer(DispatcherPriority, Dispatcher)\n  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority, Dispatcher)\n  fullName: DispatcherTimer.DispatcherTimer(DispatcherPriority, Dispatcher)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which runs on the specified <xref href=\"System.Windows.Threading.Dispatcher\"></xref> at the specified priority.\n  syntax:\n    content: public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority, System.Windows.Threading.Dispatcher dispatcher);\n    parameters:\n    - id: priority\n      type: System.Windows.Threading.DispatcherPriority\n      description: The priority at which to invoke the timer.\n    - id: dispatcher\n      type: System.Windows.Threading.Dispatcher\n      description: The dispatcher the timer is associated with.\n  overload: System.Windows.Threading.DispatcherTimer.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>dispatcher</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)\n  commentId: M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)\n  id: '#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)'\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: DispatcherTimer(TimeSpan, DispatcherPriority, EventHandler, Dispatcher)\n  nameWithType: DispatcherTimer.DispatcherTimer(TimeSpan, DispatcherPriority, EventHandler, Dispatcher)\n  fullName: DispatcherTimer.DispatcherTimer(TimeSpan, DispatcherPriority, EventHandler, Dispatcher)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref> class which uses the specified time interval, priority, event handler, and <xref href=\"System.Windows.Threading.Dispatcher\"></xref>.\n  syntax:\n    content: public DispatcherTimer (TimeSpan interval, System.Windows.Threading.DispatcherPriority priority, EventHandler callback, System.Windows.Threading.Dispatcher dispatcher);\n    parameters:\n    - id: interval\n      type: System.TimeSpan\n      description: The period of time between ticks.\n    - id: priority\n      type: System.Windows.Threading.DispatcherPriority\n      description: The priority at which to invoke the timer.\n    - id: callback\n      type: System.EventHandler\n      description: The event handler to call when the <xref href=\"System.Windows.Threading.DispatcherTimer.Tick\"></xref> event occurs.\n    - id: dispatcher\n      type: System.Windows.Threading.Dispatcher\n      description: The dispatcher the timer is associated with.\n  overload: System.Windows.Threading.DispatcherTimer.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callback</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>interval</code> is less than 0 or greater than <xref href=\"System.Int32.MaxValue\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherTimer.Dispatcher\n  commentId: P:System.Windows.Threading.DispatcherTimer.Dispatcher\n  id: Dispatcher\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Dispatcher\n  nameWithType: DispatcherTimer.Dispatcher\n  fullName: DispatcherTimer.Dispatcher\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Gets the <xref href=\"System.Windows.Threading.Dispatcher\"></xref> associated with this <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>.\n  remarks: The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.  The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.\n  syntax:\n    content: public System.Windows.Threading.Dispatcher Dispatcher { get; }\n    return:\n      type: System.Windows.Threading.Dispatcher\n      description: The dispatcher.\n  overload: System.Windows.Threading.DispatcherTimer.Dispatcher*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Threading.DispatcherTimer.Interval\n  commentId: P:System.Windows.Threading.DispatcherTimer.Interval\n  id: Interval\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Interval\n  nameWithType: DispatcherTimer.Interval\n  fullName: DispatcherTimer.Interval\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Gets or sets the period of time between timer ticks.\n  remarks: \"Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.  This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.  When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.  \\n  \\n<a name=\\\"XAMLTextUsage_Interval\\\"></a>   \\n## XAML Text Usage\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.  A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.  The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.  \\n  \\n [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]\\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]\"\n  syntax:\n    content: public TimeSpan Interval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The period of time between ticks. The default is 00:00:00.\n  overload: System.Windows.Threading.DispatcherTimer.Interval*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>interval</code> is less than 0 or greater than <xref href=\"System.Int32.MaxValue\"></xref> milliseconds.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherTimer.IsEnabled\n  commentId: P:System.Windows.Threading.DispatcherTimer.IsEnabled\n  id: IsEnabled\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: IsEnabled\n  nameWithType: DispatcherTimer.IsEnabled\n  fullName: DispatcherTimer.IsEnabled\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Gets or sets a value that indicates whether the timer is running.\n  remarks: \"<xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.  \\n  \\n Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.  \\n  \\n Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.  \\n  \\n<a name=\\\"XAMLTextUsage_IsEnabled\\\"></a>   \\n## XAML Text Usage\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.  A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.  The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.  \\n  \\n [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]\\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]\"\n  syntax:\n    content: public bool IsEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the timer is enabled; otherwise, `false`.  The default is `false`.'\n  overload: System.Windows.Threading.DispatcherTimer.IsEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherTimer.Start\n  commentId: M:System.Windows.Threading.DispatcherTimer.Start\n  id: Start\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Start()\n  nameWithType: DispatcherTimer.Start()\n  fullName: DispatcherTimer.Start()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Starts the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>.\n  remarks: \"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.  \\n  \\n Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.  \\n  \\n <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.  \\n  \\n <xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.  A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.  The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.  The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object.  \\n  \\n [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]\\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]\"\n  syntax:\n    content: public void Start ();\n    parameters: []\n  overload: System.Windows.Threading.DispatcherTimer.Start*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Threading.DispatcherTimer.Stop\n  commentId: M:System.Windows.Threading.DispatcherTimer.Stop\n  id: Stop\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Stop()\n  nameWithType: DispatcherTimer.Stop()\n  fullName: DispatcherTimer.Stop()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Stops the <xref href=\"System.Windows.Threading.DispatcherTimer\"></xref>.\n  remarks: \"Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.  \\n  \\n Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.  \\n  \\n Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.\"\n  syntax:\n    content: public void Stop ();\n    parameters: []\n  overload: System.Windows.Threading.DispatcherTimer.Stop*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherTimer.Tag\n  commentId: P:System.Windows.Threading.DispatcherTimer.Tag\n  id: Tag\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Tag\n  nameWithType: DispatcherTimer.Tag\n  fullName: DispatcherTimer.Tag\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Gets or sets a user-defined data object.\n  remarks: \"<a name=\\\"XAMLTextUsage_Tag\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: public object Tag { get; set; }\n    return:\n      type: System.Object\n      description: The user-defined data.  The default is `null`.\n  overload: System.Windows.Threading.DispatcherTimer.Tag*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Threading.DispatcherTimer.Tick\n  commentId: E:System.Windows.Threading.DispatcherTimer.Tick\n  id: Tick\n  parent: System.Windows.Threading.DispatcherTimer\n  langs:\n  - csharp\n  name: Tick\n  nameWithType: DispatcherTimer.Tick\n  fullName: DispatcherTimer.Tick\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Threading\n  summary: Occurs when the timer interval has elapsed.\n  remarks: \"<a name=\\\"xamlTextUsage_Tick\\\"></a>   \\n## XAML Text Usage\"\n  example:\n  - \"The following example creates a <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler.  The event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.  \\n  \\n [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]\\n [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]\"\n  syntax:\n    content: public event EventHandler Tick;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Windows.Threading.DispatcherTimer.#ctor\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: DispatcherTimer()\n  nameWithType: DispatcherTimer.DispatcherTimer()\n  fullName: DispatcherTimer.DispatcherTimer()\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: DispatcherTimer(DispatcherPriority)\n  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority)\n  fullName: DispatcherTimer.DispatcherTimer(DispatcherPriority)\n- uid: System.Windows.Threading.DispatcherPriority\n  parent: System.Windows.Threading\n  isExternal: false\n  name: DispatcherPriority\n  nameWithType: DispatcherPriority\n  fullName: System.Windows.Threading.DispatcherPriority\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: DispatcherTimer(DispatcherPriority, Dispatcher)\n  nameWithType: DispatcherTimer.DispatcherTimer(DispatcherPriority, Dispatcher)\n  fullName: DispatcherTimer.DispatcherTimer(DispatcherPriority, Dispatcher)\n- uid: System.Windows.Threading.Dispatcher\n  parent: System.Windows.Threading\n  isExternal: false\n  name: Dispatcher\n  nameWithType: Dispatcher\n  fullName: System.Windows.Threading.Dispatcher\n- uid: System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: DispatcherTimer(TimeSpan, DispatcherPriority, EventHandler, Dispatcher)\n  nameWithType: DispatcherTimer.DispatcherTimer(TimeSpan, DispatcherPriority, EventHandler, Dispatcher)\n  fullName: DispatcherTimer.DispatcherTimer(TimeSpan, DispatcherPriority, EventHandler, Dispatcher)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Threading.DispatcherTimer.Dispatcher\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherTimer.Dispatcher\n  fullName: DispatcherTimer.Dispatcher\n- uid: System.Windows.Threading.DispatcherTimer.Interval\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Interval\n  nameWithType: DispatcherTimer.Interval\n  fullName: DispatcherTimer.Interval\n- uid: System.Windows.Threading.DispatcherTimer.IsEnabled\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: IsEnabled\n  nameWithType: DispatcherTimer.IsEnabled\n  fullName: DispatcherTimer.IsEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Threading.DispatcherTimer.Start\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Start()\n  nameWithType: DispatcherTimer.Start()\n  fullName: DispatcherTimer.Start()\n- uid: System.Windows.Threading.DispatcherTimer.Stop\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Stop()\n  nameWithType: DispatcherTimer.Stop()\n  fullName: DispatcherTimer.Stop()\n- uid: System.Windows.Threading.DispatcherTimer.Tag\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Tag\n  nameWithType: DispatcherTimer.Tag\n  fullName: DispatcherTimer.Tag\n- uid: System.Windows.Threading.DispatcherTimer.Tick\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Tick\n  nameWithType: DispatcherTimer.Tick\n  fullName: DispatcherTimer.Tick\n- uid: System.Windows.Threading.DispatcherTimer.#ctor*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: DispatcherTimer\n  nameWithType: DispatcherTimer.DispatcherTimer\n  fullName: DispatcherTimer.DispatcherTimer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n- uid: System.Windows.Threading.DispatcherTimer.Dispatcher*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherTimer.Dispatcher\n  fullName: DispatcherTimer.Dispatcher\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n- uid: System.Windows.Threading.DispatcherTimer.Interval*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Interval\n  nameWithType: DispatcherTimer.Interval\n  fullName: DispatcherTimer.Interval\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n- uid: System.Windows.Threading.DispatcherTimer.IsEnabled*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: IsEnabled\n  nameWithType: DispatcherTimer.IsEnabled\n  fullName: DispatcherTimer.IsEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n- uid: System.Windows.Threading.DispatcherTimer.Start*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Start\n  nameWithType: DispatcherTimer.Start\n  fullName: DispatcherTimer.Start\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n- uid: System.Windows.Threading.DispatcherTimer.Stop*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Stop\n  nameWithType: DispatcherTimer.Stop\n  fullName: DispatcherTimer.Stop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n- uid: System.Windows.Threading.DispatcherTimer.Tag*\n  parent: System.Windows.Threading.DispatcherTimer\n  isExternal: false\n  name: Tag\n  nameWithType: DispatcherTimer.Tag\n  fullName: DispatcherTimer.Tag\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Threading/DispatcherTimer.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}