### YamlMime:ManagedReference
items:
- uid: System.NotFiniteNumberException
  commentId: T:System.NotFiniteNumberException
  id: NotFiniteNumberException
  children:
  - System.NotFiniteNumberException.#ctor
  - System.NotFiniteNumberException.#ctor(System.Double)
  - System.NotFiniteNumberException.#ctor(System.String)
  - System.NotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.NotFiniteNumberException.#ctor(System.String,System.Double)
  - System.NotFiniteNumberException.#ctor(System.String,System.Exception)
  - System.NotFiniteNumberException.#ctor(System.String,System.Double,System.Exception)
  - System.NotFiniteNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.NotFiniteNumberException.OffendingNumber
  langs:
  - csharp
  name: NotFiniteNumberException
  nameWithType: NotFiniteNumberException
  fullName: System.NotFiniteNumberException
  type: Class
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: The exception that is thrown when a floating-point value is positive infinity, negative infinity, or Not-a-Number (NaN).
  remarks: "<xref:System.NotFiniteNumberException> is available for programming languages that do not support the concepts of infinity and Not-a-Number in floating-point operations.  \n  \n <xref:System.NotFiniteNumberException> uses the HRESULT COR_E_NOTFINITENUMBER, which has the value 0x80131528.  \n  \n For a list of initial property values for an instance of <xref:System.NotFiniteNumberException>, see the <xref:System.NotFiniteNumberException.%23ctor%2A> constructors."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class NotFiniteNumberException : ArithmeticException
  inheritance:
  - System.Object
  - System.Exception
  - System.ArithmeticException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.NotFiniteNumberException.#ctor
  commentId: M:System.NotFiniteNumberException.#ctor
  id: '#ctor'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException()
  nameWithType: NotFiniteNumberException.NotFiniteNumberException()
  fullName: NotFiniteNumberException.NotFiniteNumberException()
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.NotFiniteNumberException"></xref> class.
  remarks: "This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"The number encountered was not a finite quantity.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.NotFiniteNumberException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  syntax:
    content: public NotFiniteNumberException ();
    parameters: []
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.NotFiniteNumberException.#ctor(System.Double)
  commentId: M:System.NotFiniteNumberException.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(Double)
  fullName: NotFiniteNumberException.NotFiniteNumberException(Double)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.NotFiniteNumberException"></xref> class with the invalid number.
  remarks: "The `offendingNumber` parameter must be both a <xref:System.Double> and an invalid number.  \n  \n The following table shows the initial property values for an instance of <xref:System.NotFiniteNumberException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.NotFiniteNumberException.OffendingNumber%2A>|The invalid number.|"
  syntax:
    content: public NotFiniteNumberException (double offendingNumber);
    parameters:
    - id: offendingNumber
      type: System.Double
      description: The value of the argument that caused the exception.
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.NotFiniteNumberException.#ctor(System.String)
  commentId: M:System.NotFiniteNumberException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String)
  fullName: NotFiniteNumberException.NotFiniteNumberException(String)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.NotFiniteNumberException"></xref> class with a specified error message.
  remarks: "Ensure that the `message` string is understandable to the user and that it is localized for the current culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.NotFiniteNumberException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public NotFiniteNumberException (string message);
    parameters:
    - id: message
      type: System.String
      description: The message that describes the error.
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.NotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.NotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(SerializationInfo, StreamingContext)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(SerializationInfo, StreamingContext)
  fullName: NotFiniteNumberException.NotFiniteNumberException(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.NotFiniteNumberException"></xref> class with serialized data.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
  syntax:
    content: protected NotFiniteNumberException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double)
  commentId: M:System.NotFiniteNumberException.#ctor(System.String,System.Double)
  id: '#ctor(System.String,System.Double)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String, Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String, Double)
  fullName: NotFiniteNumberException.NotFiniteNumberException(String, Double)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.NotFiniteNumberException"></xref> class with a specified error message and the invalid number.
  remarks: "Ensure that the `message` string is understandable to the user and that it is localized for the current culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.NotFiniteNumberException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The error message string.|  \n|<xref:System.NotFiniteNumberException.OffendingNumber%2A>|The invalid number.|"
  syntax:
    content: public NotFiniteNumberException (string message, double offendingNumber);
    parameters:
    - id: message
      type: System.String
      description: The message that describes the error.
    - id: offendingNumber
      type: System.Double
      description: The value of the argument that caused the exception.
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Exception)
  commentId: M:System.NotFiniteNumberException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String, Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String, Exception)
  fullName: NotFiniteNumberException.NotFiniteNumberException(String, Exception)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.NotFiniteNumberException"></xref> class with a specified error message and a reference to the inner exception that is root cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.NotFiniteNumberException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public NotFiniteNumberException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double,System.Exception)
  commentId: M:System.NotFiniteNumberException.#ctor(System.String,System.Double,System.Exception)
  id: '#ctor(System.String,System.Double,System.Exception)'
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: NotFiniteNumberException(String, Double, Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String, Double, Exception)
  fullName: NotFiniteNumberException.NotFiniteNumberException(String, Double, Exception)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.NotFiniteNumberException"></xref> class with a specified error message, the invalid number, and a reference to the inner exception that is root cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.NotFiniteNumberException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|  \n|<xref:System.NotFiniteNumberException.OffendingNumber%2A>|The invalid number.|"
  syntax:
    content: public NotFiniteNumberException (string message, double offendingNumber, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: offendingNumber
      type: System.Double
      description: The value of the argument that caused the exception.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.NotFiniteNumberException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.NotFiniteNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.NotFiniteNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: NotFiniteNumberException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: NotFiniteNumberException.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Sets the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object with the invalid number and additional exception information.
  remarks: "<xref:System.TypeLoadException.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization. During deserialization, the exception object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.  \n  \n For more information, see <xref:System.Runtime.Serialization.SerializationInfo>."
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  overload: System.NotFiniteNumberException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>info</code> object is `null`.
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.NotFiniteNumberException.OffendingNumber
  commentId: P:System.NotFiniteNumberException.OffendingNumber
  id: OffendingNumber
  parent: System.NotFiniteNumberException
  langs:
  - csharp
  name: OffendingNumber
  nameWithType: NotFiniteNumberException.OffendingNumber
  fullName: NotFiniteNumberException.OffendingNumber
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Gets the invalid number that is a positive infinity, a negative infinity, or Not-a-Number (NaN).
  remarks: "The <xref:System.NotFiniteNumberException.OffendingNumber%2A> property returns the same value as was passed into the constructor, or zero if no value was supplied. Override the <xref:System.NotFiniteNumberException.OffendingNumber%2A> property to customize the content or format of the invalid value.  \n  \n This property is read-only."
  syntax:
    content: public double OffendingNumber { get; }
    return:
      type: System.Double
      description: The invalid number.
  overload: System.NotFiniteNumberException.OffendingNumber*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.ArithmeticException
  parent: System
  isExternal: false
  name: ArithmeticException
  nameWithType: ArithmeticException
  fullName: System.ArithmeticException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NotFiniteNumberException.#ctor
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException()
  nameWithType: NotFiniteNumberException.NotFiniteNumberException()
  fullName: NotFiniteNumberException.NotFiniteNumberException()
- uid: System.NotFiniteNumberException.#ctor(System.Double)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(Double)
  fullName: NotFiniteNumberException.NotFiniteNumberException(Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.NotFiniteNumberException.#ctor(System.String)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String)
  fullName: NotFiniteNumberException.NotFiniteNumberException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.NotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(SerializationInfo, StreamingContext)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(SerializationInfo, StreamingContext)
  fullName: NotFiniteNumberException.NotFiniteNumberException(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String, Double)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String, Double)
  fullName: NotFiniteNumberException.NotFiniteNumberException(String, Double)
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Exception)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String, Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String, Exception)
  fullName: NotFiniteNumberException.NotFiniteNumberException(String, Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.NotFiniteNumberException.#ctor(System.String,System.Double,System.Exception)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException(String, Double, Exception)
  nameWithType: NotFiniteNumberException.NotFiniteNumberException(String, Double, Exception)
  fullName: NotFiniteNumberException.NotFiniteNumberException(String, Double, Exception)
- uid: System.NotFiniteNumberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.NotFiniteNumberException
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: NotFiniteNumberException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: NotFiniteNumberException.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.NotFiniteNumberException.OffendingNumber
  parent: System.NotFiniteNumberException
  isExternal: false
  name: OffendingNumber
  nameWithType: NotFiniteNumberException.OffendingNumber
  fullName: NotFiniteNumberException.OffendingNumber
- uid: System.NotFiniteNumberException.#ctor*
  parent: System.NotFiniteNumberException
  isExternal: false
  name: NotFiniteNumberException
  nameWithType: NotFiniteNumberException.NotFiniteNumberException
  fullName: NotFiniteNumberException.NotFiniteNumberException
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
- uid: System.NotFiniteNumberException.GetObjectData*
  parent: System.NotFiniteNumberException
  isExternal: false
  name: GetObjectData
  nameWithType: NotFiniteNumberException.GetObjectData
  fullName: NotFiniteNumberException.GetObjectData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
- uid: System.NotFiniteNumberException.OffendingNumber*
  parent: System.NotFiniteNumberException
  isExternal: false
  name: OffendingNumber
  nameWithType: NotFiniteNumberException.OffendingNumber
  fullName: NotFiniteNumberException.OffendingNumber
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/NotFiniteNumberException.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: false
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: Exception.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: Exception.ToString()
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  nameWithType: Exception.Data
  fullName: Exception.Data
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: Exception.GetBaseException()
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  nameWithType: Exception.HResult
  fullName: Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: Exception.InnerException
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  nameWithType: Exception.Message
  fullName: Exception.Message
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: false
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: Exception.SerializeObjectState
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  nameWithType: Exception.Source
  fullName: Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: Exception.StackTrace
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: false
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: Exception.TargetSite
