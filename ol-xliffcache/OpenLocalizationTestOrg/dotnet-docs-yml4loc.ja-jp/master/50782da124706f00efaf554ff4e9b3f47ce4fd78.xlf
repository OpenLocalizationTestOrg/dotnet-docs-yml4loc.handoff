<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50782da124706f00efaf554ff4e9b3f47ce4fd78</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.Linq.XObjectChange.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c81489d268c4bdb13bf2abf23d7caba04ea37f3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e534af87e5e6ff0156153c781e92047d4e4c324d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the event type when an event is raised for an <ph id="ph1">&lt;xref href="System.Xml.Linq.XObject"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`enum`</ph> specifies the event type when an event is raised for an <ph id="ph2">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>All operations that modify the XML tree break down to a series of primitives.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are four types of primitives.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two of the primitives (Add and Remove) act on collections.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two of them (Name and Value) act on instances.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a corresponding event for each of these primitives.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should be careful when modifying an XML tree within one of these events, because doing this might lead to unexpected results.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you receive a <ph id="ph1">&lt;xref:System.Xml.Linq.XObject.Changing&gt;</ph> event, and while the event is being processed you remove the node from the tree, you might not receive the <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.Changed&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an event is being processed, it is valid to modify an XML tree other than the one that contains the node that is receiving the event; it is even valid to modify the same tree provided the modifications do not affect the specific nodes on which the event was raised.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you modify the area of the tree that contains the node receiving the event, the events that you receive and the impact to the tree are undefined.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Linq.XObject"&gt;&lt;/xref&gt;</ph> has been or will be added to an <ph id="ph2">&lt;xref href="System.Xml.Linq.XContainer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Linq.XObject"&gt;&lt;/xref&gt;</ph> has been or will be renamed.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Linq.XObject"&gt;&lt;/xref&gt;</ph> has been or will be removed from an <ph id="ph2">&lt;xref href="System.Xml.Linq.XContainer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The value of an <ph id="ph1">&lt;xref href="System.Xml.Linq.XObject"&gt;&lt;/xref&gt;</ph> has been or will be changed.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In addition, a change in the serialization of an empty element (either from an empty tag to start/end tag pair or vice versa) raises this event.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>