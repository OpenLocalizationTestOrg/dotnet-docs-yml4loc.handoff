{"nodes":[{"content":"Enables attribute redirection. This class cannot be inherited.","nodes":[{"pos":[0,62],"content":"Enables attribute redirection. This class cannot be inherited.","nodes":[{"content":"Enables attribute redirection. This class cannot be inherited.","pos":[0,62],"nodes":[{"content":"Enables attribute redirection.","pos":[0,30]},{"content":"This class cannot be inherited.","pos":[31,62]}]}]}],"pos":[863,926],"yaml":true},{"content":"There are a few cases in the .NET Framework object model where a property is purposely typed to be vague. For example, the <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> property is typed as `object`. The reason for this is that this property can accept several types of input. Unfortunately, this provides no common place to add metadata to describe the characteristics of the property. Each `DataSource` property throughout the .NET Framework needs to have identical metadata for type converters, UI type editors, and other services that require metadata. The <xref:System.ComponentModel.AttributeProviderAttribute> remedies this situation.  \n  \n Once this attribute is placed on a property, the rules for obtaining attributes for the property descriptor's <xref:System.ComponentModel.MemberDescriptor.Attributes%2A?displayProperty=fullName> collection differ. Typically, the property descriptor gathers local attributes, and then merges these with attributes from the property type. In this case, the attributes are taken from the type returned from the <xref:System.ComponentModel.AttributeProviderAttribute>, not from the actual property type. This attribute is used on <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> to point the <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> object's specific type to <xref:System.ComponentModel.IListSource>, and the appropriate metadata is placed on <xref:System.ComponentModel.IListSource> to enable data binding. In so doing, external parties can easily add metadata to all data sources.  \n  \n Attributes obtained from a type declared in the <xref:System.ComponentModel.AttributeProviderAttribute> have a priority in between the attributes of the property’s type and the attributes on the property. The following list, in priority order, shows the full set of available merged attributes:  \n  \n-   Property Attributes  \n  \n-   Attribute Provider Attributes  \n  \n-   Property Type Attributes","nodes":[{"pos":[0,675],"content":"There are a few cases in the .NET Framework object model where a property is purposely typed to be vague. For example, the <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> property is typed as `object`. The reason for this is that this property can accept several types of input. Unfortunately, this provides no common place to add metadata to describe the characteristics of the property. Each `DataSource` property throughout the .NET Framework needs to have identical metadata for type converters, UI type editors, and other services that require metadata. The <xref:System.ComponentModel.AttributeProviderAttribute> remedies this situation.","nodes":[{"content":"There are a few cases in the .NET Framework object model where a property is purposely typed to be vague.","pos":[0,105]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName&gt;</ph> property is typed as <ph id=\"ph2\">`object`</ph>.","pos":[106,233],"source":" For example, the <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> property is typed as `object`."},{"content":"The reason for this is that this property can accept several types of input.","pos":[234,310]},{"content":"Unfortunately, this provides no common place to add metadata to describe the characteristics of the property.","pos":[311,420]},{"content":"Each <ph id=\"ph1\">`DataSource`</ph> property throughout the .NET Framework needs to have identical metadata for type converters, UI type editors, and other services that require metadata.","pos":[421,590],"source":" Each `DataSource` property throughout the .NET Framework needs to have identical metadata for type converters, UI type editors, and other services that require metadata."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph> remedies this situation.","pos":[591,675],"source":" The <xref:System.ComponentModel.AttributeProviderAttribute> remedies this situation."}]},{"pos":[682,1630],"content":"Once this attribute is placed on a property, the rules for obtaining attributes for the property descriptor's <xref:System.ComponentModel.MemberDescriptor.Attributes%2A?displayProperty=fullName> collection differ. Typically, the property descriptor gathers local attributes, and then merges these with attributes from the property type. In this case, the attributes are taken from the type returned from the <xref:System.ComponentModel.AttributeProviderAttribute>, not from the actual property type. This attribute is used on <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> to point the <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> object's specific type to <xref:System.ComponentModel.IListSource>, and the appropriate metadata is placed on <xref:System.ComponentModel.IListSource> to enable data binding. In so doing, external parties can easily add metadata to all data sources.","nodes":[{"content":"Once this attribute is placed on a property, the rules for obtaining attributes for the property descriptor's <xref:System.ComponentModel.MemberDescriptor.Attributes%2A?displayProperty=fullName> collection differ. Typically, the property descriptor gathers local attributes, and then merges these with attributes from the property type. In this case, the attributes are taken from the type returned from the <xref:System.ComponentModel.AttributeProviderAttribute>, not from the actual property type. This attribute is used on <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> to point the <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> object's specific type to <xref:System.ComponentModel.IListSource>, and the appropriate metadata is placed on <xref:System.ComponentModel.IListSource> to enable data binding. In so doing, external parties can easily add metadata to all data sources.","pos":[0,948],"nodes":[{"content":"Once this attribute is placed on a property, the rules for obtaining attributes for the property descriptor's <ph id=\"ph1\">&lt;xref:System.ComponentModel.MemberDescriptor.Attributes%2A?displayProperty=fullName&gt;</ph> collection differ.","pos":[0,213],"source":"Once this attribute is placed on a property, the rules for obtaining attributes for the property descriptor's <xref:System.ComponentModel.MemberDescriptor.Attributes%2A?displayProperty=fullName> collection differ."},{"content":"Typically, the property descriptor gathers local attributes, and then merges these with attributes from the property type.","pos":[214,336]},{"content":"In this case, the attributes are taken from the type returned from the <ph id=\"ph1\">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph>, not from the actual property type.","pos":[337,499],"source":" In this case, the attributes are taken from the type returned from the <xref:System.ComponentModel.AttributeProviderAttribute>, not from the actual property type."},{"content":"This attribute is used on <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName&gt;</ph> to point the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName&gt;</ph> object's specific type to <ph id=\"ph3\">&lt;xref:System.ComponentModel.IListSource&gt;</ph>, and the appropriate metadata is placed on <ph id=\"ph4\">&lt;xref:System.ComponentModel.IListSource&gt;</ph> to enable data binding.","pos":[500,873],"source":" This attribute is used on <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> to point the <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> object's specific type to <xref:System.ComponentModel.IListSource>, and the appropriate metadata is placed on <xref:System.ComponentModel.IListSource> to enable data binding."},{"content":"In so doing, external parties can easily add metadata to all data sources.","pos":[874,948]}]}]},{"pos":[1637,1931],"content":"Attributes obtained from a type declared in the <xref:System.ComponentModel.AttributeProviderAttribute> have a priority in between the attributes of the property’s type and the attributes on the property. The following list, in priority order, shows the full set of available merged attributes:","nodes":[{"content":"Attributes obtained from a type declared in the <xref:System.ComponentModel.AttributeProviderAttribute> have a priority in between the attributes of the property’s type and the attributes on the property. The following list, in priority order, shows the full set of available merged attributes:","pos":[0,294],"nodes":[{"content":"Attributes obtained from a type declared in the <ph id=\"ph1\">&lt;xref:System.ComponentModel.AttributeProviderAttribute&gt;</ph> have a priority in between the attributes of the property’s type and the attributes on the property.","pos":[0,204],"source":"Attributes obtained from a type declared in the <xref:System.ComponentModel.AttributeProviderAttribute> have a priority in between the attributes of the property’s type and the attributes on the property."},{"content":"The following list, in priority order, shows the full set of available merged attributes:","pos":[205,294]}]}]},{"pos":[1941,1960],"content":"Property Attributes","nodes":[{"content":"Property Attributes","pos":[0,19]}]},{"pos":[1970,1999],"content":"Attribute Provider Attributes","nodes":[{"content":"Attribute Provider Attributes","pos":[0,29]}]},{"pos":[2009,2033],"content":"Property Type Attributes","nodes":[{"content":"Property Type Attributes","pos":[0,24]}]}],"pos":[937,2983],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.AttributeProviderAttribute\"></xref> class with the given type name.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.AttributeProviderAttribute\"&gt;&lt;/xref&gt;</ph> class with the given type name.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.AttributeProviderAttribute\"></xref> class with the given type name."}],"pos":[9090,9226],"yaml":true},{"content":"The name of the type to specify.","nodes":[{"pos":[0,32],"content":"The name of the type to specify.","nodes":[{"content":"The name of the type to specify.","pos":[0,32]}]}],"pos":[9382,9415],"yaml":true},{"content":"<code>typeName</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;typeName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>typeName</code> is `null`."}],"pos":[9599,9632],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.AttributeProviderAttribute\"></xref> class with the given type.","nodes":[{"pos":[0,130],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.AttributeProviderAttribute\"&gt;&lt;/xref&gt;</ph> class with the given type.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.AttributeProviderAttribute\"></xref> class with the given type."}],"pos":[11040,11171],"yaml":true},{"content":"The type to specify.","nodes":[{"pos":[0,20],"content":"The type to specify.","nodes":[{"content":"The type to specify.","pos":[0,20]}]}],"pos":[12101,12122],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[12306,12335],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.AttributeProviderAttribute\"></xref> class with the given type name and property name.","nodes":[{"pos":[0,153],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.AttributeProviderAttribute\"&gt;&lt;/xref&gt;</ph> class with the given type name and property name.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.AttributeProviderAttribute\"></xref> class with the given type name and property name."}],"pos":[13821,13975],"yaml":true},{"content":"The name of the type to specify.","nodes":[{"pos":[0,32],"content":"The name of the type to specify.","nodes":[{"content":"The name of the type to specify.","pos":[0,32]}]}],"pos":[14152,14185],"yaml":true},{"content":"The name of the property for which attributes will be retrieved.","nodes":[{"pos":[0,64],"content":"The name of the property for which attributes will be retrieved.","nodes":[{"content":"The name of the property for which attributes will be retrieved.","pos":[0,64]}]}],"pos":[14253,14318],"yaml":true},{"content":"<code>propertyName</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;propertyName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>propertyName</code> is `null`."}],"pos":[14502,14539],"yaml":true},{"content":"Gets the name of the property for which attributes will be retrieved.","nodes":[{"pos":[0,69],"content":"Gets the name of the property for which attributes will be retrieved.","nodes":[{"content":"Gets the name of the property for which attributes will be retrieved.","pos":[0,69]}]}],"pos":[15864,15934],"yaml":true},{"content":"The name of the property for which attributes will be retrieved.","nodes":[{"pos":[0,64],"content":"The name of the property for which attributes will be retrieved.","nodes":[{"content":"The name of the property for which attributes will be retrieved.","pos":[0,64]}]}],"pos":[16050,16115],"yaml":true},{"content":"Gets the assembly qualified type name passed into the constructor.","nodes":[{"pos":[0,66],"content":"Gets the assembly qualified type name passed into the constructor.","nodes":[{"content":"Gets the assembly qualified type name passed into the constructor.","pos":[0,66]}]}],"pos":[17508,17575],"yaml":true},{"content":"The assembly qualified name of the type specified in the constructor.","nodes":[{"pos":[0,69],"content":"The assembly qualified name of the type specified in the constructor.","nodes":[{"content":"The assembly qualified name of the type specified in the constructor.","pos":[0,69]}]}],"pos":[17687,17757],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.AttributeProviderAttribute\n  commentId: T:System.ComponentModel.AttributeProviderAttribute\n  id: AttributeProviderAttribute\n  children:\n  - System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)\n  - System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)\n  - System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)\n  - System.ComponentModel.AttributeProviderAttribute.PropertyName\n  - System.ComponentModel.AttributeProviderAttribute.TypeName\n  langs:\n  - csharp\n  name: AttributeProviderAttribute\n  nameWithType: AttributeProviderAttribute\n  fullName: System.ComponentModel.AttributeProviderAttribute\n  type: Class\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Enables attribute redirection. This class cannot be inherited.\n  remarks: \"There are a few cases in the .NET Framework object model where a property is purposely typed to be vague. For example, the <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> property is typed as `object`. The reason for this is that this property can accept several types of input. Unfortunately, this provides no common place to add metadata to describe the characteristics of the property. Each `DataSource` property throughout the .NET Framework needs to have identical metadata for type converters, UI type editors, and other services that require metadata. The <xref:System.ComponentModel.AttributeProviderAttribute> remedies this situation.  \\n  \\n Once this attribute is placed on a property, the rules for obtaining attributes for the property descriptor's <xref:System.ComponentModel.MemberDescriptor.Attributes%2A?displayProperty=fullName> collection differ. Typically, the property descriptor gathers local attributes, and then merges these with attributes from the property type. In this case, the attributes are taken from the type returned from the <xref:System.ComponentModel.AttributeProviderAttribute>, not from the actual property type. This attribute is used on <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> to point the <xref:System.Windows.Forms.DataGridView.DataSource%2A?displayProperty=fullName> object's specific type to <xref:System.ComponentModel.IListSource>, and the appropriate metadata is placed on <xref:System.ComponentModel.IListSource> to enable data binding. In so doing, external parties can easily add metadata to all data sources.  \\n  \\n Attributes obtained from a type declared in the <xref:System.ComponentModel.AttributeProviderAttribute> have a priority in between the attributes of the property’s type and the attributes on the property. The following list, in priority order, shows the full set of available merged attributes:  \\n  \\n-   Property Attributes  \\n  \\n-   Attribute Provider Attributes  \\n  \\n-   Property Type Attributes\"\n  example:\n  - \"The following code example demonstrates using <xref:System.ComponentModel.AttributeProviderAttribute> to mark a `DataSource` property with a specific type of <xref:System.ComponentModel.IListSource>. For a full code listing, see [How to: Apply Attributes in Windows Forms Controls](~/docs/framework/winforms/controls/how-to-apply-attributes-in-windows-forms-controls.md).  \\n  \\n [!code-csharp[System.ComponentModel.AttributesDemoControl#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/attributesdemocontrol.cs#25)]\\n [!code-vb[System.ComponentModel.AttributesDemoControl#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/attributesdemocontrol.vb#25)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property)]\n\n      public class AttributeProviderAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)\n  commentId: M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.AttributeProviderAttribute\n  langs:\n  - csharp\n  name: AttributeProviderAttribute(String)\n  nameWithType: AttributeProviderAttribute.AttributeProviderAttribute(String)\n  fullName: AttributeProviderAttribute.AttributeProviderAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.AttributeProviderAttribute\"></xref> class with the given type name.\n  syntax:\n    content: public AttributeProviderAttribute (string typeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The name of the type to specify.\n  overload: System.ComponentModel.AttributeProviderAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>typeName</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)\n  commentId: M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.AttributeProviderAttribute\n  langs:\n  - csharp\n  name: AttributeProviderAttribute(Type)\n  nameWithType: AttributeProviderAttribute.AttributeProviderAttribute(Type)\n  fullName: AttributeProviderAttribute.AttributeProviderAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.AttributeProviderAttribute\"></xref> class with the given type.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates using <xref:System.ComponentModel.AttributeProviderAttribute> to mark a `DataSource` property with a specific type of <xref:System.ComponentModel.IListSource>. For a full code listing, see [How to: Apply Attributes in Windows Forms Controls](~/docs/framework/winforms/controls/how-to-apply-attributes-in-windows-forms-controls.md).  \\n  \\n [!code-csharp[System.ComponentModel.AttributesDemoControl#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/CS/attributesdemocontrol.cs#25)]\\n [!code-vb[System.ComponentModel.AttributesDemoControl#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AttributesDemoControl/VB/attributesdemocontrol.vb#25)]\"\n  syntax:\n    content: public AttributeProviderAttribute (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to specify.\n  overload: System.ComponentModel.AttributeProviderAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)\n  commentId: M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ComponentModel.AttributeProviderAttribute\n  langs:\n  - csharp\n  name: AttributeProviderAttribute(String, String)\n  nameWithType: AttributeProviderAttribute.AttributeProviderAttribute(String, String)\n  fullName: AttributeProviderAttribute.AttributeProviderAttribute(String, String)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.AttributeProviderAttribute\"></xref> class with the given type name and property name.\n  syntax:\n    content: public AttributeProviderAttribute (string typeName, string propertyName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The name of the type to specify.\n    - id: propertyName\n      type: System.String\n      description: The name of the property for which attributes will be retrieved.\n  overload: System.ComponentModel.AttributeProviderAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>propertyName</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.AttributeProviderAttribute.PropertyName\n  commentId: P:System.ComponentModel.AttributeProviderAttribute.PropertyName\n  id: PropertyName\n  parent: System.ComponentModel.AttributeProviderAttribute\n  langs:\n  - csharp\n  name: PropertyName\n  nameWithType: AttributeProviderAttribute.PropertyName\n  fullName: AttributeProviderAttribute.PropertyName\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets the name of the property for which attributes will be retrieved.\n  syntax:\n    content: public string PropertyName { get; }\n    return:\n      type: System.String\n      description: The name of the property for which attributes will be retrieved.\n  overload: System.ComponentModel.AttributeProviderAttribute.PropertyName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.AttributeProviderAttribute.TypeName\n  commentId: P:System.ComponentModel.AttributeProviderAttribute.TypeName\n  id: TypeName\n  parent: System.ComponentModel.AttributeProviderAttribute\n  langs:\n  - csharp\n  name: TypeName\n  nameWithType: AttributeProviderAttribute.TypeName\n  fullName: AttributeProviderAttribute.TypeName\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets the assembly qualified type name passed into the constructor.\n  syntax:\n    content: public string TypeName { get; }\n    return:\n      type: System.String\n      description: The assembly qualified name of the type specified in the constructor.\n  overload: System.ComponentModel.AttributeProviderAttribute.TypeName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeProviderAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)\n  parent: System.ComponentModel.AttributeProviderAttribute\n  isExternal: false\n  name: AttributeProviderAttribute(String)\n  nameWithType: AttributeProviderAttribute.AttributeProviderAttribute(String)\n  fullName: AttributeProviderAttribute.AttributeProviderAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)\n  parent: System.ComponentModel.AttributeProviderAttribute\n  isExternal: false\n  name: AttributeProviderAttribute(Type)\n  nameWithType: AttributeProviderAttribute.AttributeProviderAttribute(Type)\n  fullName: AttributeProviderAttribute.AttributeProviderAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)\n  parent: System.ComponentModel.AttributeProviderAttribute\n  isExternal: false\n  name: AttributeProviderAttribute(String, String)\n  nameWithType: AttributeProviderAttribute.AttributeProviderAttribute(String, String)\n  fullName: AttributeProviderAttribute.AttributeProviderAttribute(String, String)\n- uid: System.ComponentModel.AttributeProviderAttribute.PropertyName\n  parent: System.ComponentModel.AttributeProviderAttribute\n  isExternal: false\n  name: PropertyName\n  nameWithType: AttributeProviderAttribute.PropertyName\n  fullName: AttributeProviderAttribute.PropertyName\n- uid: System.ComponentModel.AttributeProviderAttribute.TypeName\n  parent: System.ComponentModel.AttributeProviderAttribute\n  isExternal: false\n  name: TypeName\n  nameWithType: AttributeProviderAttribute.TypeName\n  fullName: AttributeProviderAttribute.TypeName\n- uid: System.ComponentModel.AttributeProviderAttribute.#ctor*\n  parent: System.ComponentModel.AttributeProviderAttribute\n  isExternal: false\n  name: AttributeProviderAttribute\n  nameWithType: AttributeProviderAttribute.AttributeProviderAttribute\n  fullName: AttributeProviderAttribute.AttributeProviderAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeProviderAttribute.xml\n- uid: System.ComponentModel.AttributeProviderAttribute.PropertyName*\n  parent: System.ComponentModel.AttributeProviderAttribute\n  isExternal: false\n  name: PropertyName\n  nameWithType: AttributeProviderAttribute.PropertyName\n  fullName: AttributeProviderAttribute.PropertyName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeProviderAttribute.xml\n- uid: System.ComponentModel.AttributeProviderAttribute.TypeName*\n  parent: System.ComponentModel.AttributeProviderAttribute\n  isExternal: false\n  name: TypeName\n  nameWithType: AttributeProviderAttribute.TypeName\n  fullName: AttributeProviderAttribute.TypeName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AttributeProviderAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}