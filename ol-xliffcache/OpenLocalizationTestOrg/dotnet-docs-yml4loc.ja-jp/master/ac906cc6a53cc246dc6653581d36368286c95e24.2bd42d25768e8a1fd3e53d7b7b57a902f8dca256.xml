{"nodes":[{"content":"Specifies the apartment state of a <xref href=\"System.Threading.Thread\"></xref>.","nodes":[{"pos":[0,80],"content":"Specifies the apartment state of a <ph id=\"ph1\">&lt;xref href=\"System.Threading.Thread\"&gt;&lt;/xref&gt;</ph>.","source":"Specifies the apartment state of a <xref href=\"System.Threading.Thread\"></xref>."}],"pos":[522,603],"yaml":true},{"content":"An apartment is a logical container within a process for objects sharing the same thread access requirements. All objects in the same apartment can receive calls from any thread in the apartment. The .NET Framework does not use apartments, and managed objects are responsible for using all shared resources in a thread-safe manner themselves.  \n  \n Because COM classes use apartments, the common language runtime needs to create and initialize an apartment when calling a COM object in a COM interop situation. A managed thread can create and enter a single-threaded apartment (STA) that allows only one thread, or a multithreaded apartment (MTA) that contains one or more threads. You can control the type of apartment created by setting the <xref:System.Threading.Thread.ApartmentState%2A> property of the thread to one of the values of the <xref:System.Threading.ApartmentState> enumeration. Because a given thread can only initialize a COM apartment once, you cannot change the apartment type after the first call to the unmanaged code.  \n  \n For more information, see <xref:System.Threading.Thread>, [Managed and Unmanaged Threading](http://msdn.microsoft.com/en-us/db425c20-4b2f-4433-bf96-76071c7881e5), and [Advanced COM Interoperability](http://msdn.microsoft.com/en-us/3ada36e5-2390-4d70-b490-6ad8de92f2fb).","nodes":[{"pos":[0,342],"content":"An apartment is a logical container within a process for objects sharing the same thread access requirements. All objects in the same apartment can receive calls from any thread in the apartment. The .NET Framework does not use apartments, and managed objects are responsible for using all shared resources in a thread-safe manner themselves.","nodes":[{"content":"An apartment is a logical container within a process for objects sharing the same thread access requirements. All objects in the same apartment can receive calls from any thread in the apartment. The .NET Framework does not use apartments, and managed objects are responsible for using all shared resources in a thread-safe manner themselves.","pos":[0,342],"nodes":[{"content":"An apartment is a logical container within a process for objects sharing the same thread access requirements.","pos":[0,109]},{"content":"All objects in the same apartment can receive calls from any thread in the apartment.","pos":[110,195]},{"content":"The .NET Framework does not use apartments, and managed objects are responsible for using all shared resources in a thread-safe manner themselves.","pos":[196,342]}]}]},{"pos":[349,1040],"content":"Because COM classes use apartments, the common language runtime needs to create and initialize an apartment when calling a COM object in a COM interop situation. A managed thread can create and enter a single-threaded apartment (STA) that allows only one thread, or a multithreaded apartment (MTA) that contains one or more threads. You can control the type of apartment created by setting the <xref:System.Threading.Thread.ApartmentState%2A> property of the thread to one of the values of the <xref:System.Threading.ApartmentState> enumeration. Because a given thread can only initialize a COM apartment once, you cannot change the apartment type after the first call to the unmanaged code.","nodes":[{"content":"Because COM classes use apartments, the common language runtime needs to create and initialize an apartment when calling a COM object in a COM interop situation. A managed thread can create and enter a single-threaded apartment (STA) that allows only one thread, or a multithreaded apartment (MTA) that contains one or more threads. You can control the type of apartment created by setting the <xref:System.Threading.Thread.ApartmentState%2A> property of the thread to one of the values of the <xref:System.Threading.ApartmentState> enumeration. Because a given thread can only initialize a COM apartment once, you cannot change the apartment type after the first call to the unmanaged code.","pos":[0,691],"nodes":[{"content":"Because COM classes use apartments, the common language runtime needs to create and initialize an apartment when calling a COM object in a COM interop situation.","pos":[0,161]},{"content":"A managed thread can create and enter a single-threaded apartment (STA) that allows only one thread, or a multithreaded apartment (MTA) that contains one or more threads.","pos":[162,332]},{"content":"You can control the type of apartment created by setting the <ph id=\"ph1\">&lt;xref:System.Threading.Thread.ApartmentState%2A&gt;</ph> property of the thread to one of the values of the <ph id=\"ph2\">&lt;xref:System.Threading.ApartmentState&gt;</ph> enumeration.","pos":[333,545],"source":" You can control the type of apartment created by setting the <xref:System.Threading.Thread.ApartmentState%2A> property of the thread to one of the values of the <xref:System.Threading.ApartmentState> enumeration."},{"content":"Because a given thread can only initialize a COM apartment once, you cannot change the apartment type after the first call to the unmanaged code.","pos":[546,691]}]}]},{"pos":[1047,1316],"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Threading.Thread&gt;</ph>, <bpt id=\"p1\">[</bpt>Managed and Unmanaged Threading<ept id=\"p1\">](http://msdn.microsoft.com/en-us/db425c20-4b2f-4433-bf96-76071c7881e5)</ept>, and <bpt id=\"p2\">[</bpt>Advanced COM Interoperability<ept id=\"p2\">](http://msdn.microsoft.com/en-us/3ada36e5-2390-4d70-b490-6ad8de92f2fb)</ept>.","source":"For more information, see <xref:System.Threading.Thread>, [Managed and Unmanaged Threading](http://msdn.microsoft.com/en-us/db425c20-4b2f-4433-bf96-76071c7881e5), and [Advanced COM Interoperability](http://msdn.microsoft.com/en-us/3ada36e5-2390-4d70-b490-6ad8de92f2fb)."}],"pos":[614,1937],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Threading.Thread\"></xref> will create and enter a multithreaded apartment.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Thread\"&gt;&lt;/xref&gt;</ph> will create and enter a multithreaded apartment.","source":"The <xref href=\"System.Threading.Thread\"></xref> will create and enter a multithreaded apartment."}],"pos":[3889,3987],"yaml":true},{"content":"The <xref href=\"System.Threading.Thread\"></xref> will create and enter a single-threaded apartment.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Thread\"&gt;&lt;/xref&gt;</ph> will create and enter a single-threaded apartment.","source":"The <xref href=\"System.Threading.Thread\"></xref> will create and enter a single-threaded apartment."}],"pos":[5110,5210],"yaml":true},{"content":"The <xref href=\"System.Threading.Thread.ApartmentState\"></xref> property has not been set.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Thread.ApartmentState\"&gt;&lt;/xref&gt;</ph> property has not been set.","source":"The <xref href=\"System.Threading.Thread.ApartmentState\"></xref> property has not been set."}],"pos":[6357,6448],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.ApartmentState\n  commentId: T:System.Threading.ApartmentState\n  id: ApartmentState\n  children:\n  - System.Threading.ApartmentState.MTA\n  - System.Threading.ApartmentState.STA\n  - System.Threading.ApartmentState.Unknown\n  langs:\n  - csharp\n  name: ApartmentState\n  nameWithType: ApartmentState\n  fullName: System.Threading.ApartmentState\n  type: Enum\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading.Thread\n  namespace: System.Threading\n  summary: Specifies the apartment state of a <xref href=\"System.Threading.Thread\"></xref>.\n  remarks: \"An apartment is a logical container within a process for objects sharing the same thread access requirements. All objects in the same apartment can receive calls from any thread in the apartment. The .NET Framework does not use apartments, and managed objects are responsible for using all shared resources in a thread-safe manner themselves.  \\n  \\n Because COM classes use apartments, the common language runtime needs to create and initialize an apartment when calling a COM object in a COM interop situation. A managed thread can create and enter a single-threaded apartment (STA) that allows only one thread, or a multithreaded apartment (MTA) that contains one or more threads. You can control the type of apartment created by setting the <xref:System.Threading.Thread.ApartmentState%2A> property of the thread to one of the values of the <xref:System.Threading.ApartmentState> enumeration. Because a given thread can only initialize a COM apartment once, you cannot change the apartment type after the first call to the unmanaged code.  \\n  \\n For more information, see <xref:System.Threading.Thread>, [Managed and Unmanaged Threading](http://msdn.microsoft.com/en-us/db425c20-4b2f-4433-bf96-76071c7881e5), and [Advanced COM Interoperability](http://msdn.microsoft.com/en-us/3ada36e5-2390-4d70-b490-6ad8de92f2fb).\"\n  example:\n  - \"The following code example demonstrates how to set the apartment state of a thread.  \\n  \\n [!code-cpp[System.Threading.Thread.ApartmentState#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.ApartmentState/CPP/source.cpp#1)]\\n [!code-csharp[System.Threading.Thread.ApartmentState#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.ApartmentState/CS/source.cs#1)]\\n [!code-vb[System.Threading.Thread.ApartmentState#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.ApartmentState/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum ApartmentState\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ApartmentState.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.ApartmentState.MTA\n  commentId: F:System.Threading.ApartmentState.MTA\n  id: MTA\n  parent: System.Threading.ApartmentState\n  langs:\n  - csharp\n  name: MTA\n  nameWithType: ApartmentState.MTA\n  fullName: ApartmentState.MTA\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading.Thread\n  namespace: System.Threading\n  summary: The <xref href=\"System.Threading.Thread\"></xref> will create and enter a multithreaded apartment.\n  syntax:\n    content: MTA\n    return:\n      type: System.Threading.ApartmentState\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ApartmentState.xml\n- uid: System.Threading.ApartmentState.STA\n  commentId: F:System.Threading.ApartmentState.STA\n  id: STA\n  parent: System.Threading.ApartmentState\n  langs:\n  - csharp\n  name: STA\n  nameWithType: ApartmentState.STA\n  fullName: ApartmentState.STA\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading.Thread\n  namespace: System.Threading\n  summary: The <xref href=\"System.Threading.Thread\"></xref> will create and enter a single-threaded apartment.\n  syntax:\n    content: STA\n    return:\n      type: System.Threading.ApartmentState\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ApartmentState.xml\n- uid: System.Threading.ApartmentState.Unknown\n  commentId: F:System.Threading.ApartmentState.Unknown\n  id: Unknown\n  parent: System.Threading.ApartmentState\n  langs:\n  - csharp\n  name: Unknown\n  nameWithType: ApartmentState.Unknown\n  fullName: ApartmentState.Unknown\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading.Thread\n  namespace: System.Threading\n  summary: The <xref href=\"System.Threading.Thread.ApartmentState\"></xref> property has not been set.\n  syntax:\n    content: Unknown\n    return:\n      type: System.Threading.ApartmentState\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/ApartmentState.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Threading.ApartmentState.MTA\n  parent: System.Threading.ApartmentState\n  isExternal: false\n  name: MTA\n  nameWithType: ApartmentState.MTA\n  fullName: ApartmentState.MTA\n- uid: System.Threading.ApartmentState\n  parent: System.Threading\n  isExternal: false\n  name: ApartmentState\n  nameWithType: ApartmentState\n  fullName: System.Threading.ApartmentState\n- uid: System.Threading.ApartmentState.STA\n  parent: System.Threading.ApartmentState\n  isExternal: false\n  name: STA\n  nameWithType: ApartmentState.STA\n  fullName: ApartmentState.STA\n- uid: System.Threading.ApartmentState.Unknown\n  parent: System.Threading.ApartmentState\n  isExternal: false\n  name: Unknown\n  nameWithType: ApartmentState.Unknown\n  fullName: ApartmentState.Unknown\n"}