### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.DocumentStructures.StoryBreak
  commentId: T:System.Windows.Documents.DocumentStructures.StoryBreak
  id: StoryBreak
  children:
  - System.Windows.Documents.DocumentStructures.StoryBreak.#ctor
  langs:
  - csharp
  name: StoryBreak
  nameWithType: StoryBreak
  fullName: System.Windows.Documents.DocumentStructures.StoryBreak
  type: Class
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.DocumentStructures
  summary: Identifies the start or end of story composed of one or more <xref href="System.Windows.Documents.DocumentStructures.StoryFragment"></xref> elements.
  remarks: "A <xref:System.Windows.Documents.DocumentStructures.StoryBreak> can only be a child element of a <xref:System.Windows.Documents.DocumentStructures.StoryFragment>.  Additionally, a <xref:System.Windows.Documents.DocumentStructures.StoryBreak> can only be the first child, last child, or both the first and last child elements in a <xref:System.Windows.Documents.DocumentStructures.StoryFragment>.  The location of the <xref:System.Windows.Documents.DocumentStructures.StoryBreak> element in a <xref:System.Windows.Documents.DocumentStructures.StoryFragment> indicates if the story is contained in additional fragments, and if the additional fragments either precede or follow the current fragment.  \n  \n A <xref:System.Windows.Documents.DocumentStructures.StoryBreak> as the first element in a <xref:System.Windows.Documents.DocumentStructures.StoryFragment> indicates the start of a story.  \n  \n```  \n<!-- Fragment 1 -->  \n<StoryFragment>  \n  <StoryBreak />   <!-- Identifies the start of a story when          -->  \n                   <!-- immediately after an opening <StoryFragment>. -->  \n  <ParagraphStructure>  \n    <NamedElement NameReference=\"a\" />  \n    <NamedElement NameReference=\"b\" />  \n  </ParagraphStructure>  \n</StoryFragment>   <!-- Story continues in the next <StoryFragment>.  -->  \n```  \n  \n A <xref:System.Windows.Documents.DocumentStructures.StoryBreak> as the last element in a <xref:System.Windows.Documents.DocumentStructures.StoryFragment> indicates the end of a story.  \n  \n```  \n<!-- Fragment 2 -->  \n<StoryFragment>    <!-- Story continued from prior <StoryFragment>.    -->  \n  <ParagraphStructure>    \n    <NamedElement NameReference=\"c\" />  \n  </ParagraphStructure>  \n  <StoryBreak />   <!-- Identifies the end of a story when             -->  \n                   <!-- immediately before a closing </StoryFragment>. -->  \n</StoryFragment>  \n```  \n  \n A story that is contained in a single <xref:System.Windows.Documents.DocumentStructures.StoryFragment> will have two <xref:System.Windows.Documents.DocumentStructures.StoryBreak> elements as the first and last child elements of the fragment.  \n  \n```  \n<!-- Fragments 1 and 2 Merged -->  \n<ParagraphStructure>  \n  <NamedElement NameReference=\"a\" />  \n  <NamedElement NameReference=\"b\" />  \n  <NamedElement NameReference=\"c\" />  \n</ParagraphStructure>  \n```  \n  \n <xref:System.Windows.Documents.DocumentStructures.StoryFragment> elements that are entirely contained on one page will start and end with <xref:System.Windows.Documents.DocumentStructures.StoryBreak> elements since the content is completely contained in a single fragment.  \n  \n The position of <xref:System.Windows.Documents.DocumentStructures.StoryBreak> elements in a <xref:System.Windows.Documents.DocumentStructures.StoryFragment> is useful when you want to access content in either forward or reverse direction in the document. For example when merging fragments in forward order, a <xref:System.Windows.Documents.DocumentStructures.StoryFragment> that ends with a <xref:System.Windows.Documents.DocumentStructures.StoryBreak> indicates the end of the story and that there are no more fragments to merge.  Similarly when merging story fragments in reverse order, a <xref:System.Windows.Documents.DocumentStructures.StoryFragment> that starts with a <xref:System.Windows.Documents.DocumentStructures.StoryBreak> indicates the start of the story and that there are no prior fragments to merge.  \n  \n The ability to process story fragments in either forward or reverse directions is important for many application uses.  For example, a paragraph that spans page breaks is divided into multiple story fragments, one fragment for each page.  A user interface that provides a triple-click feature to select and copy a whole paragraph to the clipboard must be able to merge multiple story fragments when a paragraph spans multiple pages.  Additionally if the user triple-clicks on part of a paragraph that starts on the first page, the application must identify that the <xref:System.Windows.Documents.DocumentStructures.StoryFragment> starts with a <xref:System.Windows.Documents.DocumentStructures.StoryBreak> but does not end with a <xref:System.Windows.Documents.DocumentStructures.StoryBreak>.  This would indicate that the <xref:System.Windows.Documents.DocumentStructures.StoryFragment> that is contained on the next page must be loaded and added to the end of the current fragment.  Similarly if the user triple-clicks on part of the paragraph located on the last page, the application must identify that the <xref:System.Windows.Documents.DocumentStructures.StoryFragment> ends with a <xref:System.Windows.Documents.DocumentStructures.StoryBreak> but does not begin with a <xref:System.Windows.Documents.DocumentStructures.StoryBreak>.  This would indicate that the <xref:System.Windows.Documents.DocumentStructures.StoryFragment> that is contained on previous page must be loaded and added to the start of the current fragment.  The application should also be able to process both forward and reverse directions for the case of large paragraphs that span three or more pages and where the user's selection point is on an inner page.  \n  \n Since a <xref:System.Windows.Documents.DocumentStructures.StoryFragment> is limited to a single page, the use of <xref:System.Windows.Documents.DocumentStructures.StoryBreak> elements allow each <xref:System.Windows.Documents.DocumentStructures.StoryFragment> to contain well-formed XML but still have a hierarchical structure across an entire document."
  syntax:
    content: 'public class StoryBreak : System.Windows.Documents.DocumentStructures.BlockElement'
  inheritance:
  - System.Object
  - System.Windows.Documents.DocumentStructures.BlockElement
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Documents.DocumentStructures/StoryBreak.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Documents.DocumentStructures.StoryBreak.#ctor
  commentId: M:System.Windows.Documents.DocumentStructures.StoryBreak.#ctor
  id: '#ctor'
  parent: System.Windows.Documents.DocumentStructures.StoryBreak
  langs:
  - csharp
  name: StoryBreak()
  nameWithType: StoryBreak.StoryBreak()
  fullName: StoryBreak.StoryBreak()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.DocumentStructures
  summary: Initializes a new instance of the <xref href="System.Windows.Documents.DocumentStructures.StoryBreak"></xref> class.
  syntax:
    content: public StoryBreak ();
    parameters: []
  overload: System.Windows.Documents.DocumentStructures.StoryBreak.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Documents.DocumentStructures/StoryBreak.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Windows.Documents.DocumentStructures.BlockElement
  parent: System.Windows.Documents.DocumentStructures
  isExternal: false
  name: BlockElement
  nameWithType: BlockElement
  fullName: System.Windows.Documents.DocumentStructures.BlockElement
- uid: System.Windows.Documents.DocumentStructures.StoryBreak.#ctor
  parent: System.Windows.Documents.DocumentStructures.StoryBreak
  isExternal: false
  name: StoryBreak()
  nameWithType: StoryBreak.StoryBreak()
  fullName: StoryBreak.StoryBreak()
- uid: System.Windows.Documents.DocumentStructures.StoryBreak.#ctor*
  parent: System.Windows.Documents.DocumentStructures.StoryBreak
  isExternal: false
  name: StoryBreak
  nameWithType: StoryBreak.StoryBreak
  fullName: StoryBreak.StoryBreak
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Documents.DocumentStructures/StoryBreak.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
