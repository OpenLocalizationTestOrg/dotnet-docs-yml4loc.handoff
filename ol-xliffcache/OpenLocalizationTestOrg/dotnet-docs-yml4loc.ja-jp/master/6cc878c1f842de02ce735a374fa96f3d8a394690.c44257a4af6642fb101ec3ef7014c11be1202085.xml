{"nodes":[{"content":"Represents the Uri section within a configuration file.","nodes":[{"pos":[0,55],"content":"Represents the Uri section within a configuration file.","nodes":[{"content":"Represents the Uri section within a configuration file.","pos":[0,55]}]}],"pos":[618,674],"yaml":true},{"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.  \n  \n The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class.","nodes":[{"pos":[0,381],"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.","nodes":[{"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.","pos":[0,381],"nodes":[{"content":"The existing <ph id=\"ph1\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names.","pos":[0,179],"source":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names."},{"content":"Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN.","pos":[180,299]},{"content":"This ensures application compatibility with prior versions of the .NET Framework.","pos":[300,381]}]}]},{"pos":[388,503],"content":"The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class.","nodes":[{"content":"The configuration settings for IRI and IDN can be retrieved using the <ph id=\"ph1\">&lt;xref:System.Configuration.UriSection&gt;</ph> class.","pos":[0,115],"source":"The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class."}]}],"pos":[685,1193],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.UriSection\"></xref> class.","nodes":[{"pos":[0,93],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.UriSection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.UriSection\"></xref> class."}],"pos":[6233,6327],"yaml":true},{"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.  \n  \n The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.","nodes":[{"pos":[0,381],"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.","nodes":[{"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.","pos":[0,381],"nodes":[{"content":"The existing <ph id=\"ph1\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names.","pos":[0,179],"source":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names."},{"content":"Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN.","pos":[180,299]},{"content":"This ensures application compatibility with prior versions of the .NET Framework.","pos":[300,381]}]}]},{"pos":[388,503],"content":"The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class.","nodes":[{"content":"The configuration settings for IRI and IDN can be retrieved using the <ph id=\"ph1\">&lt;xref:System.Configuration.UriSection&gt;</ph> class.","pos":[0,115],"source":"The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class."}]},{"pos":[510,628],"content":"For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.","nodes":[{"content":"For more information on IRI support, see the Remarks section for the <ph id=\"ph1\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class.","pos":[0,118],"source":"For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class."}]}],"pos":[6338,6973],"yaml":true,"extradata":"MT"},{"content":"Gets an <xref href=\"System.Configuration.IdnElement\"></xref> object that contains the configuration setting for International Domain Name (IDN) processing in the <xref href=\"System.Uri\"></xref> class.","nodes":[{"pos":[0,200],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Configuration.IdnElement\"&gt;&lt;/xref&gt;</ph> object that contains the configuration setting for International Domain Name (IDN) processing in the <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets an <xref href=\"System.Configuration.IdnElement\"></xref> object that contains the configuration setting for International Domain Name (IDN) processing in the <xref href=\"System.Uri\"></xref> class."}],"pos":[8036,8237],"yaml":true},{"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.  \n  \n The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class. The <xref:System.Configuration.UriSection.Idn%2A> property returns the configuration setting for IDN processing in the <xref:System.Uri?displayProperty=fullName> class.  \n  \n IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.  \n  \n The Internationalized Domain Name (IDN) attribute only controls IDN processing. All other IRI processing (character normalization, for example) is performed by default.  \n  \n The configuration setting for the <xref:System.Configuration.IdnElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.","nodes":[{"pos":[0,381],"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.","nodes":[{"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.","pos":[0,381],"nodes":[{"content":"The existing <ph id=\"ph1\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names.","pos":[0,179],"source":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names."},{"content":"Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN.","pos":[180,299]},{"content":"This ensures application compatibility with prior versions of the .NET Framework.","pos":[300,381]}]}]},{"pos":[388,672],"content":"The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class. The <xref:System.Configuration.UriSection.Idn%2A> property returns the configuration setting for IDN processing in the <xref:System.Uri?displayProperty=fullName> class.","nodes":[{"content":"The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class. The <xref:System.Configuration.UriSection.Idn%2A> property returns the configuration setting for IDN processing in the <xref:System.Uri?displayProperty=fullName> class.","pos":[0,284],"nodes":[{"content":"The configuration settings for IRI and IDN can be retrieved using the <ph id=\"ph1\">&lt;xref:System.Configuration.UriSection&gt;</ph> class.","pos":[0,115],"source":"The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.UriSection.Idn%2A&gt;</ph> property returns the configuration setting for IDN processing in the <ph id=\"ph2\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class.","pos":[116,284],"source":" The <xref:System.Configuration.UriSection.Idn%2A> property returns the configuration setting for IDN processing in the <xref:System.Uri?displayProperty=fullName> class."}]}]},{"pos":[679,922],"content":"IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.","nodes":[{"content":"IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.","pos":[0,243],"nodes":[{"content":"IRI processing must be enabled for IDN processing to be possible.","pos":[0,65]},{"content":"If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.","pos":[66,243]}]}]},{"pos":[929,1097],"content":"The Internationalized Domain Name (IDN) attribute only controls IDN processing. All other IRI processing (character normalization, for example) is performed by default.","nodes":[{"content":"The Internationalized Domain Name (IDN) attribute only controls IDN processing. All other IRI processing (character normalization, for example) is performed by default.","pos":[0,168],"nodes":[{"content":"The Internationalized Domain Name (IDN) attribute only controls IDN processing.","pos":[0,79]},{"content":"All other IRI processing (character normalization, for example) is performed by default.","pos":[80,168]}]}]},{"pos":[1104,1337],"content":"The configuration setting for the <xref:System.Configuration.IdnElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.","nodes":[{"content":"The configuration setting for the <xref:System.Configuration.IdnElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.","pos":[0,233],"nodes":[{"content":"The configuration setting for the <ph id=\"ph1\">&lt;xref:System.Configuration.IdnElement&gt;</ph> will be read once when the first <ph id=\"ph2\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class is constructed.","pos":[0,170],"source":"The configuration setting for the <xref:System.Configuration.IdnElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed."},{"content":"Changes to configuration settings after that time are ignored.","pos":[171,233]}]}]},{"pos":[1344,1462],"content":"For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.","nodes":[{"content":"For more information on IRI support, see the Remarks section for the <ph id=\"ph1\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class.","pos":[0,118],"source":"For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class."}]}],"pos":[8248,9723],"yaml":true,"extradata":"MT"},{"content":"The configuration setting for International Domain Name (IDN) processing in the <xref href=\"System.Uri\"></xref> class.","nodes":[{"pos":[0,118],"content":"The configuration setting for International Domain Name (IDN) processing in the <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> class.","source":"The configuration setting for International Domain Name (IDN) processing in the <xref href=\"System.Uri\"></xref> class."}],"pos":[9941,10060],"yaml":true},{"content":"Gets an <xref href=\"System.Configuration.IriParsingElement\"></xref> object that contains the configuration setting for International Resource Identifiers (IRI) parsing in the <xref href=\"System.Uri\"></xref> class.","nodes":[{"pos":[0,213],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Configuration.IriParsingElement\"&gt;&lt;/xref&gt;</ph> object that contains the configuration setting for International Resource Identifiers (IRI) parsing in the <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets an <xref href=\"System.Configuration.IriParsingElement\"></xref> object that contains the configuration setting for International Resource Identifiers (IRI) parsing in the <xref href=\"System.Uri\"></xref> class."}],"pos":[11175,11389],"yaml":true},{"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.  \n  \n The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class. The <xref:System.Configuration.UriSection.IriParsing%2A> property returns the configuration setting for IRI parsing in the <xref:System.Uri?displayProperty=fullName> class.  \n  \n IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.  \n  \n The Internationalized Domain Name (IDN) attribute only controls IDN processing. All other IRI processing (character normalization, for example) is performed by default.  \n  \n The configuration setting for the <xref:System.Configuration.IriParsingElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.  \n  \n For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.","nodes":[{"pos":[0,381],"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.","nodes":[{"content":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.","pos":[0,381],"nodes":[{"content":"The existing <ph id=\"ph1\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names.","pos":[0,179],"source":"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names."},{"content":"Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN.","pos":[180,299]},{"content":"This ensures application compatibility with prior versions of the .NET Framework.","pos":[300,381]}]}]},{"pos":[388,676],"content":"The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class. The <xref:System.Configuration.UriSection.IriParsing%2A> property returns the configuration setting for IRI parsing in the <xref:System.Uri?displayProperty=fullName> class.","nodes":[{"content":"The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class. The <xref:System.Configuration.UriSection.IriParsing%2A> property returns the configuration setting for IRI parsing in the <xref:System.Uri?displayProperty=fullName> class.","pos":[0,288],"nodes":[{"content":"The configuration settings for IRI and IDN can be retrieved using the <ph id=\"ph1\">&lt;xref:System.Configuration.UriSection&gt;</ph> class.","pos":[0,115],"source":"The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.UriSection.IriParsing%2A&gt;</ph> property returns the configuration setting for IRI parsing in the <ph id=\"ph2\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class.","pos":[116,288],"source":" The <xref:System.Configuration.UriSection.IriParsing%2A> property returns the configuration setting for IRI parsing in the <xref:System.Uri?displayProperty=fullName> class."}]}]},{"pos":[683,926],"content":"IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.","nodes":[{"content":"IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.","pos":[0,243],"nodes":[{"content":"IRI processing must be enabled for IDN processing to be possible.","pos":[0,65]},{"content":"If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.","pos":[66,243]}]}]},{"pos":[933,1101],"content":"The Internationalized Domain Name (IDN) attribute only controls IDN processing. All other IRI processing (character normalization, for example) is performed by default.","nodes":[{"content":"The Internationalized Domain Name (IDN) attribute only controls IDN processing. All other IRI processing (character normalization, for example) is performed by default.","pos":[0,168],"nodes":[{"content":"The Internationalized Domain Name (IDN) attribute only controls IDN processing.","pos":[0,79]},{"content":"All other IRI processing (character normalization, for example) is performed by default.","pos":[80,168]}]}]},{"pos":[1108,1348],"content":"The configuration setting for the <xref:System.Configuration.IriParsingElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.","nodes":[{"content":"The configuration setting for the <xref:System.Configuration.IriParsingElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.","pos":[0,240],"nodes":[{"content":"The configuration setting for the <ph id=\"ph1\">&lt;xref:System.Configuration.IriParsingElement&gt;</ph> will be read once when the first <ph id=\"ph2\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class is constructed.","pos":[0,177],"source":"The configuration setting for the <xref:System.Configuration.IriParsingElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed."},{"content":"Changes to configuration settings after that time are ignored.","pos":[178,240]}]}]},{"pos":[1355,1473],"content":"For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.","nodes":[{"content":"For more information on IRI support, see the Remarks section for the <ph id=\"ph1\">&lt;xref:System.Uri?displayProperty=fullName&gt;</ph> class.","pos":[0,118],"source":"For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class."}]}],"pos":[11400,12886],"yaml":true,"extradata":"MT"},{"content":"The configuration setting for International Resource Identifiers (IRI) parsing in the <xref href=\"System.Uri\"></xref> class.","nodes":[{"pos":[0,124],"content":"The configuration setting for International Resource Identifiers (IRI) parsing in the <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> class.","source":"The configuration setting for International Resource Identifiers (IRI) parsing in the <xref href=\"System.Uri\"></xref> class."}],"pos":[13132,13257],"yaml":true},{"content":"Gets a <xref href=\"System.Configuration.SchemeSettingElementCollection\"></xref> object that contains the configuration settings for scheme parsing in the <xref href=\"System.Uri\"></xref> class.","nodes":[{"pos":[0,192],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SchemeSettingElementCollection\"&gt;&lt;/xref&gt;</ph> object that contains the configuration settings for scheme parsing in the <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets a <xref href=\"System.Configuration.SchemeSettingElementCollection\"></xref> object that contains the configuration settings for scheme parsing in the <xref href=\"System.Uri\"></xref> class."}],"pos":[15595,15788],"yaml":true},{"content":"The <xref:System.Configuration.UriSection.SchemeSettings%2A> property is not generic. Only the genericUriParserOptions=\"DontUnescapePathDotsAndSlashes\" configuration setting for HTTP and HTTPS schemes are supported. All other settings are ignored.","nodes":[{"pos":[0,247],"content":"The <xref:System.Configuration.UriSection.SchemeSettings%2A> property is not generic. Only the genericUriParserOptions=\"DontUnescapePathDotsAndSlashes\" configuration setting for HTTP and HTTPS schemes are supported. All other settings are ignored.","nodes":[{"content":"The <xref:System.Configuration.UriSection.SchemeSettings%2A> property is not generic. Only the genericUriParserOptions=\"DontUnescapePathDotsAndSlashes\" configuration setting for HTTP and HTTPS schemes are supported. All other settings are ignored.","pos":[0,247],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.UriSection.SchemeSettings%2A&gt;</ph> property is not generic.","pos":[0,85],"source":"The <xref:System.Configuration.UriSection.SchemeSettings%2A> property is not generic."},{"content":"Only the genericUriParserOptions=\"DontUnescapePathDotsAndSlashes\" configuration setting for HTTP and HTTPS schemes are supported.","pos":[86,215]},{"content":"All other settings are ignored.","pos":[216,247]}]}]}],"pos":[15799,16047],"yaml":true,"extradata":"MT"},{"content":"The configuration settings for scheme parsing in the <xref href=\"System.Uri\"></xref> class","nodes":[{"pos":[0,90],"content":"The configuration settings for scheme parsing in the <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> class","source":"The configuration settings for scheme parsing in the <xref href=\"System.Uri\"></xref> class"}],"pos":[16327,16418],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.UriSection\n  commentId: T:System.Configuration.UriSection\n  id: UriSection\n  children:\n  - System.Configuration.UriSection.#ctor\n  - System.Configuration.UriSection.Idn\n  - System.Configuration.UriSection.IriParsing\n  - System.Configuration.UriSection.Properties\n  - System.Configuration.UriSection.SchemeSettings\n  langs:\n  - csharp\n  name: UriSection\n  nameWithType: UriSection\n  fullName: System.Configuration.UriSection\n  type: Class\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Represents the Uri section within a configuration file.\n  remarks: \"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.  \\n  \\n The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class.\"\n  syntax:\n    content: 'public sealed class UriSection : System.Configuration.ConfigurationSection'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.Configuration.ConfigurationSection\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  - System.Configuration.ConfigurationSection.GetRuntimeObject\n  - System.Configuration.ConfigurationSection.IsModified\n  - System.Configuration.ConfigurationSection.ResetModified\n  - System.Configuration.ConfigurationSection.SectionInformation\n  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/UriSection.xml\n  ms.technology:\n  - dotnet-standard\n  manager: wpickett\n- uid: System.Configuration.UriSection.#ctor\n  commentId: M:System.Configuration.UriSection.#ctor\n  id: '#ctor'\n  parent: System.Configuration.UriSection\n  langs:\n  - csharp\n  name: UriSection()\n  nameWithType: UriSection.UriSection()\n  fullName: UriSection.UriSection()\n  type: Constructor\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.UriSection\"></xref> class.\n  remarks: \"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.  \\n  \\n The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class.  \\n  \\n For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.\"\n  syntax:\n    content: public UriSection ();\n    parameters: []\n  overload: System.Configuration.UriSection.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/UriSection.xml\n  ms.technology:\n  - dotnet-webforms\n  manager: wpickett\n- uid: System.Configuration.UriSection.Idn\n  commentId: P:System.Configuration.UriSection.Idn\n  id: Idn\n  parent: System.Configuration.UriSection\n  langs:\n  - csharp\n  name: Idn\n  nameWithType: UriSection.Idn\n  fullName: UriSection.Idn\n  type: Property\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets an <xref href=\"System.Configuration.IdnElement\"></xref> object that contains the configuration setting for International Domain Name (IDN) processing in the <xref href=\"System.Uri\"></xref> class.\n  remarks: \"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.  \\n  \\n The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class. The <xref:System.Configuration.UriSection.Idn%2A> property returns the configuration setting for IDN processing in the <xref:System.Uri?displayProperty=fullName> class.  \\n  \\n IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.  \\n  \\n The Internationalized Domain Name (IDN) attribute only controls IDN processing. All other IRI processing (character normalization, for example) is performed by default.  \\n  \\n The configuration setting for the <xref:System.Configuration.IdnElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.  \\n  \\n For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"idn\")]\n\n      public System.Configuration.IdnElement Idn { get; }\n    return:\n      type: System.Configuration.IdnElement\n      description: The configuration setting for International Domain Name (IDN) processing in the <xref href=\"System.Uri\"></xref> class.\n  overload: System.Configuration.UriSection.Idn*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/UriSection.xml\n  ms.technology:\n  - dotnet-webforms\n  manager: wpickett\n- uid: System.Configuration.UriSection.IriParsing\n  commentId: P:System.Configuration.UriSection.IriParsing\n  id: IriParsing\n  parent: System.Configuration.UriSection\n  langs:\n  - csharp\n  name: IriParsing\n  nameWithType: UriSection.IriParsing\n  fullName: UriSection.IriParsing\n  type: Property\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets an <xref href=\"System.Configuration.IriParsingElement\"></xref> object that contains the configuration setting for International Resource Identifiers (IRI) parsing in the <xref href=\"System.Uri\"></xref> class.\n  remarks: \"The existing <xref:System.Uri?displayProperty=fullName> class has been extended to provide support for International Resource Identifiers (IRI) and Internationalized Domain Names. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI and IDN. This ensures application compatibility with prior versions of the .NET Framework.  \\n  \\n The configuration settings for IRI and IDN can be retrieved using the <xref:System.Configuration.UriSection> class. The <xref:System.Configuration.UriSection.IriParsing%2A> property returns the configuration setting for IRI parsing in the <xref:System.Uri?displayProperty=fullName> class.  \\n  \\n IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.  \\n  \\n The Internationalized Domain Name (IDN) attribute only controls IDN processing. All other IRI processing (character normalization, for example) is performed by default.  \\n  \\n The configuration setting for the <xref:System.Configuration.IriParsingElement> will be read once when the first <xref:System.Uri?displayProperty=fullName> class is constructed. Changes to configuration settings after that time are ignored.  \\n  \\n For more information on IRI support, see the Remarks section for the <xref:System.Uri?displayProperty=fullName> class.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"iriParsing\")]\n\n      public System.Configuration.IriParsingElement IriParsing { get; }\n    return:\n      type: System.Configuration.IriParsingElement\n      description: The configuration setting for International Resource Identifiers (IRI) parsing in the <xref href=\"System.Uri\"></xref> class.\n  overload: System.Configuration.UriSection.IriParsing*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/UriSection.xml\n  ms.technology:\n  - dotnet-webforms\n  manager: wpickett\n- uid: System.Configuration.UriSection.Properties\n  commentId: P:System.Configuration.UriSection.Properties\n  id: Properties\n  parent: System.Configuration.UriSection\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: UriSection.Properties\n  fullName: UriSection.Properties\n  type: Property\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.Configuration.UriSection.Properties*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/UriSection.xml\n- uid: System.Configuration.UriSection.SchemeSettings\n  commentId: P:System.Configuration.UriSection.SchemeSettings\n  id: SchemeSettings\n  parent: System.Configuration.UriSection\n  langs:\n  - csharp\n  name: SchemeSettings\n  nameWithType: UriSection.SchemeSettings\n  fullName: UriSection.SchemeSettings\n  type: Property\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets a <xref href=\"System.Configuration.SchemeSettingElementCollection\"></xref> object that contains the configuration settings for scheme parsing in the <xref href=\"System.Uri\"></xref> class.\n  remarks: The <xref:System.Configuration.UriSection.SchemeSettings%2A> property is not generic. Only the genericUriParserOptions=\"DontUnescapePathDotsAndSlashes\" configuration setting for HTTP and HTTPS schemes are supported. All other settings are ignored.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"schemeSettings\")]\n\n      public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }\n    return:\n      type: System.Configuration.SchemeSettingElementCollection\n      description: The configuration settings for scheme parsing in the <xref href=\"System.Uri\"></xref> class\n  overload: System.Configuration.UriSection.SchemeSettings*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/UriSection.xml\n  ms.technology:\n  - dotnet-webforms\n  manager: wpickett\nreferences:\n- uid: System.Configuration.ConfigurationSection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationSection\n  nameWithType: ConfigurationSection\n  fullName: System.Configuration.ConfigurationSection\n- uid: System.Configuration.UriSection.#ctor\n  parent: System.Configuration.UriSection\n  isExternal: false\n  name: UriSection()\n  nameWithType: UriSection.UriSection()\n  fullName: UriSection.UriSection()\n- uid: System.Configuration.UriSection.Idn\n  parent: System.Configuration.UriSection\n  isExternal: false\n  name: Idn\n  nameWithType: UriSection.Idn\n  fullName: UriSection.Idn\n- uid: System.Configuration.IdnElement\n  parent: System.Configuration\n  isExternal: false\n  name: IdnElement\n  nameWithType: IdnElement\n  fullName: System.Configuration.IdnElement\n- uid: System.Configuration.UriSection.IriParsing\n  parent: System.Configuration.UriSection\n  isExternal: false\n  name: IriParsing\n  nameWithType: UriSection.IriParsing\n  fullName: UriSection.IriParsing\n- uid: System.Configuration.IriParsingElement\n  parent: System.Configuration\n  isExternal: false\n  name: IriParsingElement\n  nameWithType: IriParsingElement\n  fullName: System.Configuration.IriParsingElement\n- uid: System.Configuration.UriSection.Properties\n  parent: System.Configuration.UriSection\n  isExternal: false\n  name: Properties\n  nameWithType: UriSection.Properties\n  fullName: UriSection.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Configuration.UriSection.SchemeSettings\n  parent: System.Configuration.UriSection\n  isExternal: false\n  name: SchemeSettings\n  nameWithType: UriSection.SchemeSettings\n  fullName: UriSection.SchemeSettings\n- uid: System.Configuration.SchemeSettingElementCollection\n  parent: System.Configuration\n  isExternal: false\n  name: SchemeSettingElementCollection\n  nameWithType: SchemeSettingElementCollection\n  fullName: System.Configuration.SchemeSettingElementCollection\n- uid: System.Configuration.UriSection.#ctor*\n  parent: System.Configuration.UriSection\n  isExternal: false\n  name: UriSection\n  nameWithType: UriSection.UriSection\n  fullName: UriSection.UriSection\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/UriSection.xml\n- uid: System.Configuration.UriSection.Idn*\n  parent: System.Configuration.UriSection\n  isExternal: false\n  name: Idn\n  nameWithType: UriSection.Idn\n  fullName: UriSection.Idn\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/UriSection.xml\n- uid: System.Configuration.UriSection.IriParsing*\n  parent: System.Configuration.UriSection\n  isExternal: false\n  name: IriParsing\n  nameWithType: UriSection.IriParsing\n  fullName: UriSection.IriParsing\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/UriSection.xml\n- uid: System.Configuration.UriSection.Properties*\n  parent: System.Configuration.UriSection\n  isExternal: false\n  name: Properties\n  nameWithType: UriSection.Properties\n  fullName: UriSection.Properties\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/UriSection.xml\n- uid: System.Configuration.UriSection.SchemeSettings*\n  parent: System.Configuration.UriSection\n  isExternal: false\n  name: SchemeSettings\n  nameWithType: UriSection.SchemeSettings\n  fullName: UriSection.SchemeSettings\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/UriSection.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationSection.IsModified\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationSection.IsModified()\n  fullName: ConfigurationSection.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationSection.ResetModified\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationSection.ResetModified()\n  fullName: ConfigurationSection.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: DeserializeSection(XmlReader)\n  nameWithType: ConfigurationSection.DeserializeSection(XmlReader)\n  fullName: ConfigurationSection.DeserializeSection(XmlReader)\n- uid: System.Configuration.ConfigurationSection.GetRuntimeObject\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: GetRuntimeObject()\n  nameWithType: ConfigurationSection.GetRuntimeObject()\n  fullName: ConfigurationSection.GetRuntimeObject()\n- uid: System.Configuration.ConfigurationSection.SectionInformation\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: SectionInformation\n  nameWithType: ConfigurationSection.SectionInformation\n  fullName: ConfigurationSection.SectionInformation\n- uid: System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n  nameWithType: ConfigurationSection.SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n  fullName: ConfigurationSection.SerializeSection(ConfigurationElement, String, ConfigurationSaveMode)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n  nameWithType: ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n  fullName: ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement, String, FrameworkName)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n  nameWithType: ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n  fullName: ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty, String, FrameworkName, ConfigurationElement)\n- uid: System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)\n  parent: System.Configuration.ConfigurationSection\n  isExternal: false\n  name: ShouldSerializeSectionInTargetVersion(FrameworkName)\n  nameWithType: ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)\n  fullName: ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)\n"}