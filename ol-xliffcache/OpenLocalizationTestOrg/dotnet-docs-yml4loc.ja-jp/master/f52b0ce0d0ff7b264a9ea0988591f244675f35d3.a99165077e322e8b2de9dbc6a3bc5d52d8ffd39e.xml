{"nodes":[{"content":"Represents the method that will handle the <xref href=\"System.Timers.Timer.Elapsed\"></xref> event of a <xref href=\"System.Timers.Timer\"></xref>.","nodes":[{"pos":[0,144],"content":"Represents the method that will handle the <ph id=\"ph1\">&lt;xref href=\"System.Timers.Timer.Elapsed\"&gt;&lt;/xref&gt;</ph> event of a <ph id=\"ph2\">&lt;xref href=\"System.Timers.Timer\"&gt;&lt;/xref&gt;</ph>.","source":"Represents the method that will handle the <xref href=\"System.Timers.Timer.Elapsed\"></xref> event of a <xref href=\"System.Timers.Timer\"></xref>."}],"pos":[418,563],"yaml":true},{"content":"When you create an <xref:System.Timers.ElapsedEventHandler> delegate, you identify the method that will handle the <xref:System.Timers.Timer.Elapsed?displayProperty=fullName> event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,500],"content":"When you create an <xref:System.Timers.ElapsedEventHandler> delegate, you identify the method that will handle the <xref:System.Timers.Timer.Elapsed?displayProperty=fullName> event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"When you create an <ph id=\"ph1\">&lt;xref:System.Timers.ElapsedEventHandler&gt;</ph> delegate, you identify the method that will handle the <ph id=\"ph2\">&lt;xref:System.Timers.Timer.Elapsed?displayProperty=fullName&gt;</ph> event.","pos":[0,181],"source":"When you create an <xref:System.Timers.ElapsedEventHandler> delegate, you identify the method that will handle the <xref:System.Timers.Timer.Elapsed?displayProperty=fullName> event."},{"content":"To associate the event with your event handler, add an instance of the delegate to the event.","pos":[182,275]},{"content":"The event handler is called whenever the event occurs, unless you remove the delegate.","pos":[276,362]},{"content":"For more information about event handler delegates, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[363,500],"source":" For more information about event handler delegates, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]}],"pos":[574,1075],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Timers.ElapsedEventHandler\n  commentId: T:System.Timers.ElapsedEventHandler\n  id: ElapsedEventHandler\n  langs:\n  - csharp\n  name: ElapsedEventHandler\n  nameWithType: ElapsedEventHandler\n  fullName: System.Timers.ElapsedEventHandler\n  type: Delegate\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.Timers\n  summary: Represents the method that will handle the <xref href=\"System.Timers.Timer.Elapsed\"></xref> event of a <xref href=\"System.Timers.Timer\"></xref>.\n  remarks: When you create an <xref:System.Timers.ElapsedEventHandler> delegate, you identify the method that will handle the <xref:System.Timers.Timer.Elapsed?displayProperty=fullName> event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example sets up an event handler for the <xref:System.Timers.Timer.Elapsed?displayProperty=fullName> event, creates a timer, and starts the timer. The event handler has the same signature as the <xref:System.Timers.ElapsedEventHandler> delegate. The event handler displays the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> property each time it is raised.  \\n  \\n [!code-cpp[Classic Timer Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Timer Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Timer Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Timer Example/CS/source.cs#1)]\\n [!code-vb[Classic Timer Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Timer Example/VB/source.vb#1)]\"\n  syntax:\n    content: public delegate void ElapsedEventHandler(object sender, ElapsedEventArgs e);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Timers/ElapsedEventHandler.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}