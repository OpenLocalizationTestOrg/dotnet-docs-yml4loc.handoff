{"nodes":[{"content":"An activity that supports compensation of its child activities.","nodes":[{"pos":[0,63],"content":"An activity that supports compensation of its child activities.","nodes":[{"content":"An activity that supports compensation of its child activities.","pos":[0,63]}]}],"pos":[1390,1454],"yaml":true},{"content":"<xref:System.Activities.Statements.CompensableActivity> allows a developer to specify a <xref:System.Activities.Statements.CompensableActivity.Body%2A> activity that defines a long-running task that performs their core business logic. It also allows the developer to optionally specify a compensation and confirmation activity to schedule appropriate business logic in the event of errors or successful completion of the <xref:System.Activities.Statements.CompensableActivity.Body%2A>. Compensation and confirmation of a <xref:System.Activities.Statements.CompensableActivity> is invoked by using the <xref:System.Activities.Statements.CompensationToken> returned by the <xref:System.Activities.Statements.CompensableActivity>. <xref:System.Activities.Statements.CompensationToken> is an opaque, typed object returned as the <xref:System.Activities.WorkflowElement%601.Result%2A> argument after successful completion of a <xref:System.Activities.Statements.CompensableActivity> activity’s <xref:System.Activities.Statements.CompensableActivity.Body%2A>. This <xref:System.Activities.Statements.CompensationToken> is used by the <xref:System.Activities.Statements.Confirm> and <xref:System.Activities.Statements.Compensate> activities to explicitly invoke confirmation and compensation of a <xref:System.Activities.Statements.CompensableActivity>. <xref:System.Activities.Statements.CompensableActivity> can be composed in a nested hierarchical fashion in the workflow. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Compensation Programming Model](http://msdn.microsoft.com/en-us/29e5442c-1df7-401d-a6ca-746e617cbf9f).","nodes":[{"pos":[0,1621],"content":"<xref:System.Activities.Statements.CompensableActivity> allows a developer to specify a <xref:System.Activities.Statements.CompensableActivity.Body%2A> activity that defines a long-running task that performs their core business logic. It also allows the developer to optionally specify a compensation and confirmation activity to schedule appropriate business logic in the event of errors or successful completion of the <xref:System.Activities.Statements.CompensableActivity.Body%2A>. Compensation and confirmation of a <xref:System.Activities.Statements.CompensableActivity> is invoked by using the <xref:System.Activities.Statements.CompensationToken> returned by the <xref:System.Activities.Statements.CompensableActivity>. <xref:System.Activities.Statements.CompensationToken> is an opaque, typed object returned as the <xref:System.Activities.WorkflowElement%601.Result%2A> argument after successful completion of a <xref:System.Activities.Statements.CompensableActivity> activity’s <xref:System.Activities.Statements.CompensableActivity.Body%2A>. This <xref:System.Activities.Statements.CompensationToken> is used by the <xref:System.Activities.Statements.Confirm> and <xref:System.Activities.Statements.Compensate> activities to explicitly invoke confirmation and compensation of a <xref:System.Activities.Statements.CompensableActivity>. <xref:System.Activities.Statements.CompensableActivity> can be composed in a nested hierarchical fashion in the workflow. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Compensation Programming Model](http://msdn.microsoft.com/en-us/29e5442c-1df7-401d-a6ca-746e617cbf9f).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph> allows a developer to specify a <ph id=\"ph2\">&lt;xref:System.Activities.Statements.CompensableActivity.Body%2A&gt;</ph> activity that defines a long-running task that performs their core business logic.","pos":[0,234],"source":"<xref:System.Activities.Statements.CompensableActivity> allows a developer to specify a <xref:System.Activities.Statements.CompensableActivity.Body%2A> activity that defines a long-running task that performs their core business logic."},{"content":"It also allows the developer to optionally specify a compensation and confirmation activity to schedule appropriate business logic in the event of errors or successful completion of the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.CompensableActivity.Body%2A&gt;</ph>.","pos":[235,485],"source":" It also allows the developer to optionally specify a compensation and confirmation activity to schedule appropriate business logic in the event of errors or successful completion of the <xref:System.Activities.Statements.CompensableActivity.Body%2A>."},{"content":"Compensation and confirmation of a <ph id=\"ph1\">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph> is invoked by using the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.CompensationToken&gt;</ph> returned by the <ph id=\"ph3\">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph>.","pos":[486,727],"source":" Compensation and confirmation of a <xref:System.Activities.Statements.CompensableActivity> is invoked by using the <xref:System.Activities.Statements.CompensationToken> returned by the <xref:System.Activities.Statements.CompensableActivity>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.CompensationToken&gt;</ph> is an opaque, typed object returned as the <ph id=\"ph2\">&lt;xref:System.Activities.WorkflowElement%601.Result%2A&gt;</ph> argument after successful completion of a <ph id=\"ph3\">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph> activity’s <ph id=\"ph4\">&lt;xref:System.Activities.Statements.CompensableActivity.Body%2A&gt;</ph>.","pos":[728,1053],"source":" <xref:System.Activities.Statements.CompensationToken> is an opaque, typed object returned as the <xref:System.Activities.WorkflowElement%601.Result%2A> argument after successful completion of a <xref:System.Activities.Statements.CompensableActivity> activity’s <xref:System.Activities.Statements.CompensableActivity.Body%2A>."},{"content":"This <ph id=\"ph1\">&lt;xref:System.Activities.Statements.CompensationToken&gt;</ph> is used by the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Confirm&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Activities.Statements.Compensate&gt;</ph> activities to explicitly invoke confirmation and compensation of a <ph id=\"ph4\">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph>.","pos":[1054,1346],"source":" This <xref:System.Activities.Statements.CompensationToken> is used by the <xref:System.Activities.Statements.Confirm> and <xref:System.Activities.Statements.Compensate> activities to explicitly invoke confirmation and compensation of a <xref:System.Activities.Statements.CompensableActivity>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph> can be composed in a nested hierarchical fashion in the workflow.","pos":[1347,1468],"source":" <xref:System.Activities.Statements.CompensableActivity> can be composed in a nested hierarchical fashion in the workflow."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><bpt id=\"p1\">[</bpt>Compensation Programming Model<ept id=\"p1\">](http://msdn.microsoft.com/en-us/29e5442c-1df7-401d-a6ca-746e617cbf9f)</ept>.","pos":[1469,1621],"source":"[!INCLUDE[crdefault](~/includes/crdefault-md.md)][Compensation Programming Model](http://msdn.microsoft.com/en-us/29e5442c-1df7-401d-a6ca-746e617cbf9f)."}]}],"pos":[1465,3087],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref> class.","nodes":[{"pos":[0,110],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.CompensableActivity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref> class."}],"pos":[6275,6386],"yaml":true},{"content":"Gets or sets the activity that is scheduled when the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref> executes.","nodes":[{"pos":[0,132],"content":"Gets or sets the activity that is scheduled when the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.CompensableActivity\"&gt;&lt;/xref&gt;</ph> executes.","source":"Gets or sets the activity that is scheduled when the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref> executes."}],"pos":[7505,7638],"yaml":true},{"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,124],"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","pos":[0,124],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime, an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","pos":[39,124],"source":" If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown."}]}]}],"pos":[7649,7774],"yaml":true,"extradata":"MT"},{"content":"The activity that is scheduled when the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref> executes.","nodes":[{"pos":[0,119],"content":"The activity that is scheduled when the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.CompensableActivity\"&gt;&lt;/xref&gt;</ph> executes.","source":"The activity that is scheduled when the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref> executes."}],"pos":[7983,8103],"yaml":true},{"content":"Gets or sets the activity that is scheduled when the activity is canceled.","nodes":[{"pos":[0,74],"content":"Gets or sets the activity that is scheduled when the activity is canceled.","nodes":[{"content":"Gets or sets the activity that is scheduled when the activity is canceled.","pos":[0,74]}]}],"pos":[12087,12162],"yaml":true},{"content":"<xref:System.Activities.Statements.CompensableActivity.CancellationHandler%2A> can be used to specify custom cancelation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.  \n  \n This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,262],"content":"<xref:System.Activities.Statements.CompensableActivity.CancellationHandler%2A> can be used to specify custom cancelation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.CompensableActivity.CancellationHandler%2A&gt;</ph> can be used to specify custom cancelation logic for the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.CompensableActivity.Body%2A&gt;</ph> of the <ph id=\"ph3\">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph>.","pos":[0,262],"source":"<xref:System.Activities.Statements.CompensableActivity.CancellationHandler%2A> can be used to specify custom cancelation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>."}]},{"pos":[269,393],"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","pos":[0,124],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime, an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","pos":[39,124],"source":" If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown."}]}]}],"pos":[12173,12571],"yaml":true,"extradata":"MT"},{"content":"The activity that is scheduled when the activity is canceled.","nodes":[{"pos":[0,61],"content":"The activity that is scheduled when the activity is canceled.","nodes":[{"content":"The activity that is scheduled when the activity is canceled.","pos":[0,61]}]}],"pos":[12790,12852],"yaml":true},{"content":"Gets or sets the activity that is scheduled when compensation is performed on the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.","nodes":[{"pos":[0,152],"content":"Gets or sets the activity that is scheduled when compensation is performed on the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.CompensableActivity\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the activity that is scheduled when compensation is performed on the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>."}],"pos":[15203,15356],"yaml":true},{"content":"<xref:System.Activities.Statements.CompensableActivity.CompensationHandler%2A> can be used to specify custom compensation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.  \n  \n This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,263],"content":"<xref:System.Activities.Statements.CompensableActivity.CompensationHandler%2A> can be used to specify custom compensation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.CompensableActivity.CompensationHandler%2A&gt;</ph> can be used to specify custom compensation logic for the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.CompensableActivity.Body%2A&gt;</ph> of the <ph id=\"ph3\">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph>.","pos":[0,263],"source":"<xref:System.Activities.Statements.CompensableActivity.CompensationHandler%2A> can be used to specify custom compensation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>."}]},{"pos":[270,394],"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","pos":[0,124],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime, an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","pos":[39,124],"source":" If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown."}]}]}],"pos":[15367,15766],"yaml":true,"extradata":"MT"},{"content":"The activity that is scheduled when compensation is performed on the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.","nodes":[{"pos":[0,139],"content":"The activity that is scheduled when compensation is performed on the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.CompensableActivity\"&gt;&lt;/xref&gt;</ph>.","source":"The activity that is scheduled when compensation is performed on the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>."}],"pos":[16000,16140],"yaml":true},{"content":"Gets or sets the activity that is scheduled when confirmation is performed for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.","nodes":[{"pos":[0,154],"content":"Gets or sets the activity that is scheduled when confirmation is performed for this <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.CompensableActivity\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the activity that is scheduled when confirmation is performed for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>."}],"pos":[17355,17510],"yaml":true},{"content":"<xref:System.Activities.Statements.CompensableActivity.ConfirmationHandler%2A> can be used to specify custom confirmation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.  \n  \n This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,263],"content":"<xref:System.Activities.Statements.CompensableActivity.ConfirmationHandler%2A> can be used to specify custom confirmation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.CompensableActivity.ConfirmationHandler%2A&gt;</ph> can be used to specify custom confirmation logic for the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.CompensableActivity.Body%2A&gt;</ph> of the <ph id=\"ph3\">&lt;xref:System.Activities.Statements.CompensableActivity&gt;</ph>.","pos":[0,263],"source":"<xref:System.Activities.Statements.CompensableActivity.ConfirmationHandler%2A> can be used to specify custom confirmation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>."}]},{"pos":[270,394],"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"content":"This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.","pos":[0,124],"nodes":[{"content":"This property is read-only at runtime.","pos":[0,38]},{"content":"If the value is set at runtime, an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","pos":[39,124],"source":" If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown."}]}]}],"pos":[17521,17920],"yaml":true,"extradata":"MT"},{"content":"The activity that is scheduled when confirmation is performed for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.","nodes":[{"pos":[0,141],"content":"The activity that is scheduled when confirmation is performed for this <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.CompensableActivity\"&gt;&lt;/xref&gt;</ph>.","source":"The activity that is scheduled when confirmation is performed for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>."}],"pos":[18154,18296],"yaml":true},{"content":"Gets the collection of <xref href=\"System.WorkflowModel.Variable\"></xref> objects for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.","nodes":[{"pos":[0,161],"content":"Gets the collection of <ph id=\"ph1\">&lt;xref href=\"System.WorkflowModel.Variable\"&gt;&lt;/xref&gt;</ph> objects for this <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.CompensableActivity\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the collection of <xref href=\"System.WorkflowModel.Variable\"></xref> objects for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>."}],"pos":[22717,22879],"yaml":true},{"content":"The collection of <xref href=\"System.WorkflowModel.Variable\"></xref> objects for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.","nodes":[{"pos":[0,156],"content":"The collection of <ph id=\"ph1\">&lt;xref href=\"System.WorkflowModel.Variable\"&gt;&lt;/xref&gt;</ph> objects for this <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.CompensableActivity\"&gt;&lt;/xref&gt;</ph>.","source":"The collection of <xref href=\"System.WorkflowModel.Variable\"></xref> objects for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>."}],"pos":[23111,23268],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.CompensableActivity\n  commentId: T:System.Activities.Statements.CompensableActivity\n  id: CompensableActivity\n  children:\n  - System.Activities.Statements.CompensableActivity.#ctor\n  - System.Activities.Statements.CompensableActivity.Body\n  - System.Activities.Statements.CompensableActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.CompensableActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.CompensableActivity.CancellationHandler\n  - System.Activities.Statements.CompensableActivity.CanInduceIdle\n  - System.Activities.Statements.CompensableActivity.CompensationHandler\n  - System.Activities.Statements.CompensableActivity.ConfirmationHandler\n  - System.Activities.Statements.CompensableActivity.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.CompensableActivity.Variables\n  langs:\n  - csharp\n  name: CompensableActivity\n  nameWithType: CompensableActivity\n  fullName: System.Activities.Statements.CompensableActivity\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: An activity that supports compensation of its child activities.\n  remarks: <xref:System.Activities.Statements.CompensableActivity> allows a developer to specify a <xref:System.Activities.Statements.CompensableActivity.Body%2A> activity that defines a long-running task that performs their core business logic. It also allows the developer to optionally specify a compensation and confirmation activity to schedule appropriate business logic in the event of errors or successful completion of the <xref:System.Activities.Statements.CompensableActivity.Body%2A>. Compensation and confirmation of a <xref:System.Activities.Statements.CompensableActivity> is invoked by using the <xref:System.Activities.Statements.CompensationToken> returned by the <xref:System.Activities.Statements.CompensableActivity>. <xref:System.Activities.Statements.CompensationToken> is an opaque, typed object returned as the <xref:System.Activities.WorkflowElement%601.Result%2A> argument after successful completion of a <xref:System.Activities.Statements.CompensableActivity> activity’s <xref:System.Activities.Statements.CompensableActivity.Body%2A>. This <xref:System.Activities.Statements.CompensationToken> is used by the <xref:System.Activities.Statements.Confirm> and <xref:System.Activities.Statements.Compensate> activities to explicitly invoke confirmation and compensation of a <xref:System.Activities.Statements.CompensableActivity>. <xref:System.Activities.Statements.CompensableActivity> can be composed in a nested hierarchical fashion in the workflow. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Compensation Programming Model](http://msdn.microsoft.com/en-us/29e5442c-1df7-401d-a6ca-746e617cbf9f).\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Body\")]\n\n      public sealed class CompensableActivity : System.Activities.NativeActivity<System.Activities.Statements.CompensationToken>\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.NativeActivity`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity`1.Implementation\n  - System.Activities.NativeActivity`1.ImplementationVersion\n  - System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity`1.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.CompensableActivity.#ctor\n  commentId: M:System.Activities.Statements.CompensableActivity.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: CompensableActivity()\n  nameWithType: CompensableActivity.CompensableActivity()\n  fullName: CompensableActivity.CompensableActivity()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref> class.\n  syntax:\n    content: public CompensableActivity ();\n    parameters: []\n  overload: System.Activities.Statements.CompensableActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.CompensableActivity.Body\n  commentId: P:System.Activities.Statements.CompensableActivity.Body\n  id: Body\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: Body\n  nameWithType: CompensableActivity.Body\n  fullName: CompensableActivity.Body\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the activity that is scheduled when the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref> executes.\n  remarks: This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"Variables\")]\n\n      public System.Activities.Activity Body { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The activity that is scheduled when the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref> executes.\n  overload: System.Activities.Statements.CompensableActivity.Body*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.CompensableActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.Activities.Statements.CompensableActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: CompensableActivity.CacheMetadata(NativeActivityMetadata)\n  fullName: CompensableActivity.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: ''\n  overload: System.Activities.Statements.CompensableActivity.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.Cancel(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.CompensableActivity.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: CompensableActivity.Cancel(NativeActivityContext)\n  fullName: CompensableActivity.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.CompensableActivity.Cancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.CancellationHandler\n  commentId: P:System.Activities.Statements.CompensableActivity.CancellationHandler\n  id: CancellationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: CancellationHandler\n  nameWithType: CompensableActivity.CancellationHandler\n  fullName: CompensableActivity.CancellationHandler\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the activity that is scheduled when the activity is canceled.\n  remarks: \"<xref:System.Activities.Statements.CompensableActivity.CancellationHandler%2A> can be used to specify custom cancelation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.  \\n  \\n This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"Body\")]\n\n      public System.Activities.Activity CancellationHandler { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The activity that is scheduled when the activity is canceled.\n  overload: System.Activities.Statements.CompensableActivity.CancellationHandler*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.CompensableActivity.CanInduceIdle\n  commentId: P:System.Activities.Statements.CompensableActivity.CanInduceIdle\n  id: CanInduceIdle\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: CanInduceIdle\n  nameWithType: CompensableActivity.CanInduceIdle\n  fullName: CompensableActivity.CanInduceIdle\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override bool CanInduceIdle { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Activities.Statements.CompensableActivity.CanInduceIdle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.CompensationHandler\n  commentId: P:System.Activities.Statements.CompensableActivity.CompensationHandler\n  id: CompensationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: CompensationHandler\n  nameWithType: CompensableActivity.CompensationHandler\n  fullName: CompensableActivity.CompensationHandler\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the activity that is scheduled when compensation is performed on the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.\n  remarks: \"<xref:System.Activities.Statements.CompensableActivity.CompensationHandler%2A> can be used to specify custom compensation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.  \\n  \\n This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"CancellationHandler\")]\n\n      public System.Activities.Activity CompensationHandler { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The activity that is scheduled when compensation is performed on the <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.\n  overload: System.Activities.Statements.CompensableActivity.CompensationHandler*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.CompensableActivity.ConfirmationHandler\n  commentId: P:System.Activities.Statements.CompensableActivity.ConfirmationHandler\n  id: ConfirmationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: ConfirmationHandler\n  nameWithType: CompensableActivity.ConfirmationHandler\n  fullName: CompensableActivity.ConfirmationHandler\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the activity that is scheduled when confirmation is performed for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.\n  remarks: \"<xref:System.Activities.Statements.CompensableActivity.ConfirmationHandler%2A> can be used to specify custom confirmation logic for the <xref:System.Activities.Statements.CompensableActivity.Body%2A> of the <xref:System.Activities.Statements.CompensableActivity>.  \\n  \\n This property is read-only at runtime. If the value is set at runtime, an <xref:System.InvalidOperationException> is thrown.\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"CompensationHandler\")]\n\n      public System.Activities.Activity ConfirmationHandler { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: The activity that is scheduled when confirmation is performed for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.\n  overload: System.Activities.Statements.CompensableActivity.ConfirmationHandler*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.CompensableActivity.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.CompensableActivity.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: CompensableActivity.Execute(NativeActivityContext)\n  fullName: CompensableActivity.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.CompensableActivity.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  commentId: M:System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: CompensableActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: CompensableActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: ''\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: ''\n  overload: System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.Variables\n  commentId: P:System.Activities.Statements.CompensableActivity.Variables\n  id: Variables\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: Variables\n  nameWithType: CompensableActivity.Variables\n  fullName: CompensableActivity.Variables\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets the collection of <xref href=\"System.WorkflowModel.Variable\"></xref> objects for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: The collection of <xref href=\"System.WorkflowModel.Variable\"></xref> objects for this <xref href=\"System.Activities.Statements.CompensableActivity\"></xref>.\n  overload: System.Activities.Statements.CompensableActivity.Variables*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.NativeActivity`1\n  name: NativeActivity<TResult>\n  nameWithType: NativeActivity<TResult>\n  fullName: System.Activities.NativeActivity<TResult>\n- uid: System.Activities.Statements.CompensationToken\n  name: CompensationToken\n  nameWithType: CompensationToken\n  fullName: System.Activities.Statements.CompensationToken\n- uid: System.Activities.NativeActivity{System.Activities.Statements.CompensationToken}\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivity<CompensationToken>\n  nameWithType: NativeActivity<CompensationToken>\n  fullName: System.Activities.NativeActivity<System.Activities.Statements.CompensationToken>\n  spec.csharp:\n  - uid: System.Activities.NativeActivity`1\n    name: NativeActivity\n    nameWithType: NativeActivity\n    fullName: System.Activities.NativeActivity\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Statements.CompensationToken\n    name: CompensationToken\n    nameWithType: CompensationToken\n    fullName: System.Activities.Statements.CompensationToken\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.CompensableActivity.#ctor\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CompensableActivity()\n  nameWithType: CompensableActivity.CompensableActivity()\n  fullName: CompensableActivity.CompensableActivity()\n- uid: System.Activities.Statements.CompensableActivity.Body\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Body\n  nameWithType: CompensableActivity.Body\n  fullName: CompensableActivity.Body\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.CompensableActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: CompensableActivity.CacheMetadata(NativeActivityMetadata)\n  fullName: CompensableActivity.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.CompensableActivity.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: CompensableActivity.Cancel(NativeActivityContext)\n  fullName: CompensableActivity.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.CompensableActivity.CancellationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CancellationHandler\n  nameWithType: CompensableActivity.CancellationHandler\n  fullName: CompensableActivity.CancellationHandler\n- uid: System.Activities.Statements.CompensableActivity.CanInduceIdle\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: CompensableActivity.CanInduceIdle\n  fullName: CompensableActivity.CanInduceIdle\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Statements.CompensableActivity.CompensationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CompensationHandler\n  nameWithType: CompensableActivity.CompensationHandler\n  fullName: CompensableActivity.CompensationHandler\n- uid: System.Activities.Statements.CompensableActivity.ConfirmationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: ConfirmationHandler\n  nameWithType: CompensableActivity.ConfirmationHandler\n  fullName: CompensableActivity.ConfirmationHandler\n- uid: System.Activities.Statements.CompensableActivity.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: CompensableActivity.Execute(NativeActivityContext)\n  fullName: CompensableActivity.Execute(NativeActivityContext)\n- uid: System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: CompensableActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: CompensableActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Statements.CompensableActivity.Variables\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Variables\n  nameWithType: CompensableActivity.Variables\n  fullName: CompensableActivity.Variables\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Activities.Variable\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: System.Activities.Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.CompensableActivity.#ctor*\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CompensableActivity\n  nameWithType: CompensableActivity.CompensableActivity\n  fullName: CompensableActivity.CompensableActivity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.Body*\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Body\n  nameWithType: CompensableActivity.Body\n  fullName: CompensableActivity.Body\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.CacheMetadata*\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: CompensableActivity.CacheMetadata\n  fullName: CompensableActivity.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.Cancel*\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Cancel\n  nameWithType: CompensableActivity.Cancel\n  fullName: CompensableActivity.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.CancellationHandler*\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CancellationHandler\n  nameWithType: CompensableActivity.CancellationHandler\n  fullName: CompensableActivity.CancellationHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.CanInduceIdle*\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: CompensableActivity.CanInduceIdle\n  fullName: CompensableActivity.CanInduceIdle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.CompensationHandler*\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CompensationHandler\n  nameWithType: CompensableActivity.CompensationHandler\n  fullName: CompensableActivity.CompensationHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.ConfirmationHandler*\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: ConfirmationHandler\n  nameWithType: CompensableActivity.ConfirmationHandler\n  fullName: CompensableActivity.ConfirmationHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.Execute*\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Execute\n  nameWithType: CompensableActivity.Execute\n  fullName: CompensableActivity.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap*\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap\n  nameWithType: CompensableActivity.OnCreateDynamicUpdateMap\n  fullName: CompensableActivity.OnCreateDynamicUpdateMap\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Activities.Statements.CompensableActivity.Variables*\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Variables\n  nameWithType: CompensableActivity.Variables\n  fullName: CompensableActivity.Variables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensableActivity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity`1\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity<TResult>.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity<TResult>.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.NativeActivity`1.Implementation\n  parent: System.Activities.NativeActivity`1\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity<TResult>.Implementation\n  fullName: NativeActivity<TResult>.Implementation\n- uid: System.Activities.NativeActivity`1.ImplementationVersion\n  parent: System.Activities.NativeActivity`1\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity<TResult>.ImplementationVersion\n  fullName: NativeActivity<TResult>.ImplementationVersion\n- uid: System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity`1\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.Activity`1.Result\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: Result\n  nameWithType: Activity<TResult>.Result\n  fullName: Activity<TResult>.Result\n- uid: System.Activities.ActivityWithResult.ResultType\n  parent: System.Activities.ActivityWithResult\n  isExternal: false\n  name: ResultType\n  nameWithType: ActivityWithResult.ResultType\n  fullName: ActivityWithResult.ResultType\n- uid: System.Activities.Activity`1.FromValue(`0)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromValue(TResult)\n  nameWithType: Activity<TResult>.FromValue(TResult)\n  fullName: Activity<TResult>.FromValue(TResult)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable)\n  nameWithType: Activity<TResult>.FromVariable(Variable)\n  fullName: Activity<TResult>.FromVariable(Variable)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable<TResult>)\n  nameWithType: Activity<TResult>.FromVariable(Variable<TResult>)\n  fullName: Activity<TResult>.FromVariable(Variable<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable<TResult> to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(TResult to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n- uid: System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity`1\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity<TResult>.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity<TResult>.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivity`1.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity`1\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity<TResult>.UpdateInstance(NativeActivityUpdateContext)\n  fullName: NativeActivity<TResult>.UpdateInstance(NativeActivityUpdateContext)\n"}