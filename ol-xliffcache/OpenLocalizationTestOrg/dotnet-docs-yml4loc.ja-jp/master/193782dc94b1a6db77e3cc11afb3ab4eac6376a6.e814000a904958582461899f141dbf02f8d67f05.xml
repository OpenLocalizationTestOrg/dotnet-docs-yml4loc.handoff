{"nodes":[{"content":"Represents the base class for the Data Encryption Standard (DES) algorithm from which all <xref href=\"System.Security.Cryptography.DES\"></xref> implementations must derive.","nodes":[{"pos":[0,172],"content":"Represents the base class for the Data Encryption Standard (DES) algorithm from which all <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph> implementations must derive.","source":"Represents the base class for the Data Encryption Standard (DES) algorithm from which all <xref href=\"System.Security.Cryptography.DES\"></xref> implementations must derive."}],"pos":[712,885],"yaml":true},{"content":"This algorithm supports a key length of 64 bits.  \n  \n> [!NOTE]\n>  A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> class instead of the <xref:System.Security.Cryptography.DES> class. Use <xref:System.Security.Cryptography.DES> only for compatibility with legacy applications and data.","nodes":[{"pos":[0,48],"content":"This algorithm supports a key length of 64 bits.","nodes":[{"content":"This algorithm supports a key length of 64 bits.","pos":[0,48]}]},{"pos":[56,386],"content":"[!NOTE]\n A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> class instead of the <xref:System.Security.Cryptography.DES> class. Use <xref:System.Security.Cryptography.DES> only for compatibility with legacy applications and data.","leadings":["","> "],"nodes":[{"content":" A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> class instead of the <xref:System.Security.Cryptography.DES> class. Use <xref:System.Security.Cryptography.DES> only for compatibility with legacy applications and data.","pos":[8,328],"nodes":[{"content":"A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available.","pos":[1,91]},{"content":"Consider using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Aes&gt;</ph> class instead of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.DES&gt;</ph> class.","pos":[92,218],"source":" Consider using the <xref:System.Security.Cryptography.Aes> class instead of the <xref:System.Security.Cryptography.DES> class."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DES&gt;</ph> only for compatibility with legacy applications and data.","pos":[219,320],"source":" Use <xref:System.Security.Cryptography.DES> only for compatibility with legacy applications and data."}]}]}],"pos":[896,1288],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DES\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DES\"></xref> class."}],"pos":[5950,6045],"yaml":true},{"content":"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.  \n  \n This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table.  \n  \n|Field|Default Value|  \n|-----------|-------------------|  \n|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|64|  \n|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|64|  \n|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|","nodes":[{"pos":[0,115],"content":"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.","nodes":[{"content":"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.","pos":[0,115],"nodes":[{"content":"You cannot create an instance of an abstract class.","pos":[0,51]},{"content":"Application code will create a new instance of a derived class.","pos":[52,115]}]}]},{"pos":[122,286],"content":"This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table.","nodes":[{"content":"This method initializes the protected fields of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;</ph> class to the default values shown in the following table.","pos":[0,164],"source":"This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table."}]},{"pos":[293,298],"content":"Field","nodes":[{"content":"Field","pos":[0,5]}]},{"pos":[299,312],"content":"Default Value","nodes":[{"content":"Default Value","pos":[0,13]}]},{"pos":[353,420],"content":"<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>","nodes":[]},{"pos":[421,423],"content":"64","nodes":[{"content":"64","pos":[0,2]}]},{"pos":[428,497],"content":"<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>","nodes":[]},{"pos":[498,500],"content":"64","nodes":[{"content":"64","pos":[0,2]}]},{"pos":[505,577],"content":"<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>","nodes":[]},{"pos":[578,580],"content":"64","nodes":[{"content":"64","pos":[0,2]}]}],"pos":[6056,6648],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of a cryptographic object to perform the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm.","nodes":[{"pos":[0,152],"content":"Creates an instance of a cryptographic object to perform the Data Encryption Standard (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph>) algorithm.","source":"Creates an instance of a cryptographic object to perform the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm."}],"pos":[7907,8060],"yaml":true},{"content":"Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data.","nodes":[{"pos":[0,126],"content":"Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data.","nodes":[{"content":"Creates an instance of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DES&gt;</ph> object that can be used for encrypting and decrypting data.","pos":[0,126],"source":"Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data."}]}],"pos":[8071,8198],"yaml":true,"extradata":"MT"},{"content":"A cryptographic object.","nodes":[{"pos":[0,23],"content":"A cryptographic object.","nodes":[{"content":"A cryptographic object.","pos":[0,23]}]}],"pos":[9555,9579],"yaml":true},{"content":"Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm.","nodes":[{"pos":[0,184],"content":"Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph>) algorithm.","source":"Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm."}],"pos":[10842,11027],"yaml":true},{"content":"The name of the specific implementation of <xref href=\"System.Security.Cryptography.DES\"></xref> to use.","nodes":[{"pos":[0,104],"content":"The name of the specific implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph> to use.","source":"The name of the specific implementation of <xref href=\"System.Security.Cryptography.DES\"></xref> to use."}],"pos":[12468,12573],"yaml":true},{"content":"A cryptographic object.","nodes":[{"pos":[0,23],"content":"A cryptographic object.","nodes":[{"content":"A cryptographic object.","pos":[0,23]}]}],"pos":[12649,12673],"yaml":true},{"content":"Determines whether the specified key is semi-weak.","nodes":[{"pos":[0,50],"content":"Determines whether the specified key is semi-weak.","nodes":[{"content":"Determines whether the specified key is semi-weak.","pos":[0,50]}]}],"pos":[13978,14029],"yaml":true},{"content":"Semi-weak keys are pairs of keys that result in ciphers that are easy to break. If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text. There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.  \n  \n Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.","nodes":[{"pos":[0,391],"content":"Semi-weak keys are pairs of keys that result in ciphers that are easy to break. If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text. There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.","nodes":[{"content":"Semi-weak keys are pairs of keys that result in ciphers that are easy to break. If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text. There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.","pos":[0,391],"nodes":[{"content":"Semi-weak keys are pairs of keys that result in ciphers that are easy to break.","pos":[0,79]},{"content":"If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text.","pos":[80,220]},{"content":"There are six known semi-weak key pairs for the Data Encryption Standard (<ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DES&gt;</ph>) algorithm; this method checks for those semi-weak keys.","pos":[221,391],"source":" There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys."}]}]},{"pos":[398,659],"content":"Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.","nodes":[{"content":"Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.","pos":[0,261],"nodes":[{"content":"Attempting to set a semi-weak key results in a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>.","pos":[0,106],"source":"Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A&gt;</ph> is called to create a random key, a semi-weak key will never be returned.","pos":[107,261],"source":" When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned."}]}]}],"pos":[14040,14704],"yaml":true,"extradata":"MT"},{"content":"The secret key to test for semi-weakness.","nodes":[{"pos":[0,41],"content":"The secret key to test for semi-weakness.","nodes":[{"content":"The secret key to test for semi-weakness.","pos":[0,41]}]}],"pos":[14855,14897],"yaml":true},{"content":"`true` if the key is semi-weak; otherwise, `false`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">`true`</ph> if the key is semi-weak; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key is semi-weak; otherwise, `false`."}],"pos":[14955,15009],"yaml":true},{"content":"The size of the <code>rgbKey</code> parameter is not valid.","nodes":[{"pos":[0,59],"content":"The size of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","source":"The size of the <code>rgbKey</code> parameter is not valid."}],"pos":[15231,15291],"yaml":true},{"content":"Determines whether the specified key is weak.","nodes":[{"pos":[0,45],"content":"Determines whether the specified key is weak.","nodes":[{"content":"Determines whether the specified key is weak.","pos":[0,45]}]}],"pos":[16502,16548],"yaml":true},{"content":"Weak keys are keys that result in ciphers that are easy to break. If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text. There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.  \n  \n Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.","nodes":[{"pos":[0,348],"content":"Weak keys are keys that result in ciphers that are easy to break. If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text. There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.","nodes":[{"content":"Weak keys are keys that result in ciphers that are easy to break. If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text. There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.","pos":[0,348],"nodes":[{"content":"Weak keys are keys that result in ciphers that are easy to break.","pos":[0,65]},{"content":"If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.","pos":[66,191]},{"content":"There are four known weak keys for the Data Encryption Standard (<ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DES&gt;</ph>) algorithm; this method checks for those weak keys.","pos":[192,348],"source":" There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys."}]}]},{"pos":[355,606],"content":"Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.","nodes":[{"content":"Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.","pos":[0,251],"nodes":[{"content":"Attempting to set a weak key results in a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>.","pos":[0,101],"source":"Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A&gt;</ph> is called to create a random key, a weak key will never be returned.","pos":[102,251],"source":" When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned."}]}]}],"pos":[16559,17170],"yaml":true,"extradata":"MT"},{"content":"The secret key to test for weakness.","nodes":[{"pos":[0,36],"content":"The secret key to test for weakness.","nodes":[{"content":"The secret key to test for weakness.","pos":[0,36]}]}],"pos":[17317,17354],"yaml":true},{"content":"`true` if the key is weak; otherwise, `false`.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">`true`</ph> if the key is weak; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key is weak; otherwise, `false`."}],"pos":[17412,17461],"yaml":true},{"content":"The size of the <code>rgbKey</code> parameter is not valid.","nodes":[{"pos":[0,59],"content":"The size of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rgbKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not valid.","source":"The size of the <code>rgbKey</code> parameter is not valid."}],"pos":[17679,17739],"yaml":true},{"content":"Gets or sets the secret key for the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm.","nodes":[{"pos":[0,127],"content":"Gets or sets the secret key for the Data Encryption Standard (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph>) algorithm.","source":"Gets or sets the secret key for the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm."}],"pos":[18847,18975],"yaml":true},{"content":"If this property is `null` when it is used, <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> is called to create a new random value.  \n  \n The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>.  \n  \n This algorithm supports a key length of 64 bits.","nodes":[{"pos":[0,153],"content":"If this property is <ph id=\"ph1\">`null`</ph> when it is used, <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A&gt;</ph> is called to create a new random value.","source":"If this property is `null` when it is used, <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> is called to create a new random value."},{"pos":[160,269],"content":"The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>.","nodes":[{"content":"The length of the key must be equal to <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue&gt;</ph>.","pos":[0,109],"source":"The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>."}]},{"pos":[276,324],"content":"This algorithm supports a key length of 64 bits.","nodes":[{"content":"This algorithm supports a key length of 64 bits.","pos":[0,48]}]}],"pos":[18986,19317],"yaml":true,"extradata":"MT"},{"content":"The secret key for the <xref href=\"System.Security.Cryptography.DES\"></xref> algorithm.","nodes":[{"pos":[0,87],"content":"The secret key for the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph> algorithm.","source":"The secret key for the <xref href=\"System.Security.Cryptography.DES\"></xref> algorithm."}],"pos":[19438,19526],"yaml":true},{"content":"An attempt was made to set the key to `null`.","nodes":[{"pos":[0,45],"content":"An attempt was made to set the key to <ph id=\"ph1\">`null`</ph>.","source":"An attempt was made to set the key to `null`."}],"pos":[19692,19738],"yaml":true},{"content":"An attempt was made to set a key whose length is not equal to <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\"></xref>.","nodes":[{"pos":[0,146],"content":"An attempt was made to set a key whose length is not equal to <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\"&gt;&lt;/xref&gt;</ph>.","source":"An attempt was made to set a key whose length is not equal to <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\"></xref>."}],"pos":[19832,19979],"yaml":true},{"content":"An attempt was made to set a weak key (see <xref href=\"System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\"></xref>) or a semi-weak key (see <xref href=\"System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\"></xref>).","nodes":[{"pos":[0,231],"content":"An attempt was made to set a weak key (see <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\"&gt;&lt;/xref&gt;</ph>) or a semi-weak key (see <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\"&gt;&lt;/xref&gt;</ph>).","source":"An attempt was made to set a weak key (see <xref href=\"System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\"></xref>) or a semi-weak key (see <xref href=\"System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\"></xref>)."}],"pos":[20127,20359],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DES\n  commentId: T:System.Security.Cryptography.DES\n  id: DES\n  children:\n  - System.Security.Cryptography.DES.#ctor\n  - System.Security.Cryptography.DES.Create\n  - System.Security.Cryptography.DES.Create(System.String)\n  - System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\n  - System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\n  - System.Security.Cryptography.DES.Key\n  langs:\n  - csharp\n  name: DES\n  nameWithType: DES\n  fullName: System.Security.Cryptography.DES\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Represents the base class for the Data Encryption Standard (DES) algorithm from which all <xref href=\"System.Security.Cryptography.DES\"></xref> implementations must derive.\n  remarks: \"This algorithm supports a key length of 64 bits.  \\n  \\n> [!NOTE]\\n>  A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> class instead of the <xref:System.Security.Cryptography.DES> class. Use <xref:System.Security.Cryptography.DES> only for compatibility with legacy applications and data.\"\n  example:\n  - \"The following code example uses <xref:System.Security.Cryptography.DESCryptoServiceProvider> (an implementation of <xref:System.Security.Cryptography.DES>) to encrypt a string to an in-memory buffer. It then decrypts and displays the round-tripped string.  \\n  \\n [!code-csharp[TripleDESCryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR/tripledescryptoserviceprovider/cs/program.cs#1)]\\n [!code-vb[TripleDESCryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/tripledescryptoserviceprovider/vb/program.vb#1)]  \\n  \\n Decryption can be handled in the same way; use <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>. The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class DES : System.Security.Cryptography.SymmetricAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  derivedClasses:\n  - System.Security.Cryptography.DESCryptoServiceProvider\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DES.#ctor\n  commentId: M:System.Security.Cryptography.DES.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: DES()\n  nameWithType: DES.DES()\n  fullName: DES.DES()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DES\"></xref> class.\n  remarks: \"You cannot create an instance of an abstract class. Application code will create a new instance of a derived class.  \\n  \\n This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table.  \\n  \\n|Field|Default Value|  \\n|-----------|-------------------|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|64|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|64|  \\n|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|\"\n  syntax:\n    content: protected DES ();\n    parameters: []\n  overload: System.Security.Cryptography.DES.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DES.Create\n  commentId: M:System.Security.Cryptography.DES.Create\n  id: Create\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: DES.Create()\n  fullName: DES.Create()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of a cryptographic object to perform the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm.\n  remarks: Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data.\n  example:\n  - \"The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.  \\n  \\n [!code-cpp[Cryptography.DES.Create.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.File/CPP/fileexample.cpp#1)]\\n [!code-csharp[Cryptography.DES.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.File/CS/fileexample.cs#1)]\\n [!code-vb[Cryptography.DES.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.File/VB/fileexample.vb#1)]  \\n  \\n The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.  \\n  \\n [!code-cpp[Cryptography.DES.Create.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CPP/memoryexample.cpp#1)]\\n [!code-csharp[Cryptography.DES.Create.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CS/memoryexample.cs#1)]\\n [!code-vb[Cryptography.DES.Create.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.Memory/VB/memoryexample.vb#1)]\"\n  syntax:\n    content: public static System.Security.Cryptography.DES Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.DES\n      description: A cryptographic object.\n  overload: System.Security.Cryptography.DES.Create*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DES.Create(System.String)\n  commentId: M:System.Security.Cryptography.DES.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: DES.Create(String)\n  fullName: DES.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.  \\n  \\n [!code-cpp[Cryptography.DES.Createstring.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CPP/fileexample.cpp#1)]\\n [!code-csharp[Cryptography.DES.Createstring.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CS/fileexample.cs#1)]\\n [!code-vb[Cryptography.DES.Createstring.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.File/VB/fileexample.vb#1)]  \\n  \\n The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.  \\n  \\n [!code-cpp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CPP/memoryexample.cpp#1)]\\n [!code-csharp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CS/memoryexample.cs#1)]\\n [!code-vb[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/VB/memoryexample.vb#1)]\"\n  syntax:\n    content: public static System.Security.Cryptography.DES Create (string algName);\n    parameters:\n    - id: algName\n      type: System.String\n      description: The name of the specific implementation of <xref href=\"System.Security.Cryptography.DES\"></xref> to use.\n    return:\n      type: System.Security.Cryptography.DES\n      description: A cryptographic object.\n  overload: System.Security.Cryptography.DES.Create*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\n  commentId: M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\n  id: IsSemiWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: IsSemiWeakKey(Byte[])\n  nameWithType: DES.IsSemiWeakKey(Byte[])\n  fullName: DES.IsSemiWeakKey(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Determines whether the specified key is semi-weak.\n  remarks: \"Semi-weak keys are pairs of keys that result in ciphers that are easy to break. If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text. There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.  \\n  \\n Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.\"\n  syntax:\n    content: public static bool IsSemiWeakKey (byte[] rgbKey);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to test for semi-weakness.\n    return:\n      type: System.Boolean\n      description: '`true` if the key is semi-weak; otherwise, `false`.'\n  overload: System.Security.Cryptography.DES.IsSemiWeakKey*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The size of the <code>rgbKey</code> parameter is not valid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\n  commentId: M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\n  id: IsWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: IsWeakKey(Byte[])\n  nameWithType: DES.IsWeakKey(Byte[])\n  fullName: DES.IsWeakKey(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Determines whether the specified key is weak.\n  remarks: \"Weak keys are keys that result in ciphers that are easy to break. If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text. There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.  \\n  \\n Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>. When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.\"\n  syntax:\n    content: public static bool IsWeakKey (byte[] rgbKey);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to test for weakness.\n    return:\n      type: System.Boolean\n      description: '`true` if the key is weak; otherwise, `false`.'\n  overload: System.Security.Cryptography.DES.IsWeakKey*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The size of the <code>rgbKey</code> parameter is not valid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DES.Key\n  commentId: P:System.Security.Cryptography.DES.Key\n  id: Key\n  parent: System.Security.Cryptography.DES\n  langs:\n  - csharp\n  name: Key\n  nameWithType: DES.Key\n  fullName: DES.Key\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the secret key for the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm.\n  remarks: \"If this property is `null` when it is used, <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> is called to create a new random value.  \\n  \\n The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>.  \\n  \\n This algorithm supports a key length of 64 bits.\"\n  syntax:\n    content: public override byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: The secret key for the <xref href=\"System.Security.Cryptography.DES\"></xref> algorithm.\n  overload: System.Security.Cryptography.DES.Key*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: An attempt was made to set the key to `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt was made to set a key whose length is not equal to <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\"></xref>.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: An attempt was made to set a weak key (see <xref href=\"System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\"></xref>) or a semi-weak key (see <xref href=\"System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\"></xref>).\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.SymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: SymmetricAlgorithm\n  nameWithType: SymmetricAlgorithm\n  fullName: System.Security.Cryptography.SymmetricAlgorithm\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Cryptography.DES.#ctor\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: DES()\n  nameWithType: DES.DES()\n  fullName: DES.DES()\n- uid: System.Security.Cryptography.DES.Create\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Create()\n  nameWithType: DES.Create()\n  fullName: DES.Create()\n- uid: System.Security.Cryptography.DES\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: DES\n  nameWithType: DES\n  fullName: System.Security.Cryptography.DES\n- uid: System.Security.Cryptography.DES.Create(System.String)\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Create(String)\n  nameWithType: DES.Create(String)\n  fullName: DES.Create(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: IsSemiWeakKey(Byte[])\n  nameWithType: DES.IsSemiWeakKey(Byte[])\n  fullName: DES.IsSemiWeakKey(Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: IsWeakKey(Byte[])\n  nameWithType: DES.IsWeakKey(Byte[])\n  fullName: DES.IsWeakKey(Byte[])\n- uid: System.Security.Cryptography.DES.Key\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Key\n  nameWithType: DES.Key\n  fullName: DES.Key\n- uid: System.Security.Cryptography.DES.#ctor*\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: DES\n  nameWithType: DES.DES\n  fullName: DES.DES\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n- uid: System.Security.Cryptography.DES.Create*\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Create\n  nameWithType: DES.Create\n  fullName: DES.Create\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n- uid: System.Security.Cryptography.DES.IsSemiWeakKey*\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: IsSemiWeakKey\n  nameWithType: DES.IsSemiWeakKey\n  fullName: DES.IsSemiWeakKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n- uid: System.Security.Cryptography.DES.IsWeakKey*\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: IsWeakKey\n  nameWithType: DES.IsWeakKey\n  fullName: DES.IsWeakKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n- uid: System.Security.Cryptography.DES.Key*\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Key\n  nameWithType: DES.Key\n  fullName: DES.Key\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DES.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSize\n  nameWithType: SymmetricAlgorithm.BlockSize\n  fullName: SymmetricAlgorithm.BlockSize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: SymmetricAlgorithm.BlockSizeValue\n  fullName: SymmetricAlgorithm.BlockSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: SymmetricAlgorithm.Clear()\n  fullName: SymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: SymmetricAlgorithm.CreateDecryptor()\n  fullName: SymmetricAlgorithm.CreateDecryptor()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: SymmetricAlgorithm.CreateDecryptor(Byte[], Byte[])\n  fullName: SymmetricAlgorithm.CreateDecryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: SymmetricAlgorithm.CreateEncryptor()\n  fullName: SymmetricAlgorithm.CreateEncryptor()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: SymmetricAlgorithm.CreateEncryptor(Byte[], Byte[])\n  fullName: SymmetricAlgorithm.CreateEncryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymmetricAlgorithm.Dispose()\n  fullName: SymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymmetricAlgorithm.Dispose(Boolean)\n  fullName: SymmetricAlgorithm.Dispose(Boolean)\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: SymmetricAlgorithm.FeedbackSize\n  fullName: SymmetricAlgorithm.FeedbackSize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSizeValue\n  nameWithType: SymmetricAlgorithm.FeedbackSizeValue\n  fullName: SymmetricAlgorithm.FeedbackSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: SymmetricAlgorithm.GenerateIV()\n  fullName: SymmetricAlgorithm.GenerateIV()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: SymmetricAlgorithm.GenerateKey()\n  fullName: SymmetricAlgorithm.GenerateKey()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IV\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IV\n  nameWithType: SymmetricAlgorithm.IV\n  fullName: SymmetricAlgorithm.IV\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IVValue\n  nameWithType: SymmetricAlgorithm.IVValue\n  fullName: SymmetricAlgorithm.IVValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySize\n  nameWithType: SymmetricAlgorithm.KeySize\n  fullName: SymmetricAlgorithm.KeySize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: SymmetricAlgorithm.KeySizeValue\n  fullName: SymmetricAlgorithm.KeySizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeyValue\n  nameWithType: SymmetricAlgorithm.KeyValue\n  fullName: SymmetricAlgorithm.KeyValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: SymmetricAlgorithm.LegalBlockSizes\n  fullName: SymmetricAlgorithm.LegalBlockSizes\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizesValue\n  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue\n  fullName: SymmetricAlgorithm.LegalBlockSizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: SymmetricAlgorithm.LegalKeySizes\n  fullName: SymmetricAlgorithm.LegalKeySizes\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: SymmetricAlgorithm.LegalKeySizesValue\n  fullName: SymmetricAlgorithm.LegalKeySizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Mode\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Mode\n  nameWithType: SymmetricAlgorithm.Mode\n  fullName: SymmetricAlgorithm.Mode\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ModeValue\n  nameWithType: SymmetricAlgorithm.ModeValue\n  fullName: SymmetricAlgorithm.ModeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Padding\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Padding\n  nameWithType: SymmetricAlgorithm.Padding\n  fullName: SymmetricAlgorithm.Padding\n- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: PaddingValue\n  nameWithType: SymmetricAlgorithm.PaddingValue\n  fullName: SymmetricAlgorithm.PaddingValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ValidKeySize(Int32)\n  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)\n  fullName: SymmetricAlgorithm.ValidKeySize(Int32)\n"}