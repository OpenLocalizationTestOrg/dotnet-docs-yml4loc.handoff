{"nodes":[{"content":"Specifies common roles to be used with <xref href=\"System.Security.Principal.WindowsPrincipal.IsInRole(System.String)\"></xref>.","nodes":[{"pos":[0,127],"content":"Specifies common roles to be used with <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.WindowsPrincipal.IsInRole(System.String)\"&gt;&lt;/xref&gt;</ph>.","source":"Specifies common roles to be used with <xref href=\"System.Security.Principal.WindowsPrincipal.IsInRole(System.String)\"></xref>."}],"pos":[999,1127],"yaml":true},{"content":"These roles represent the local Windows groups common to most installations of Windows NT, Windows 2000 and Windows XP.  \n  \n> [!NOTE]\n>  In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.","nodes":[{"pos":[0,119],"content":"These roles represent the local Windows groups common to most installations of Windows NT, Windows 2000 and Windows XP.","nodes":[{"content":"These roles represent the local Windows groups common to most installations of Windows NT, Windows 2000 and Windows XP.","pos":[0,119]}]},{"pos":[127,988],"content":"[!NOTE]\n In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.","leadings":["","> "],"nodes":[{"content":" In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[8,859],"nodes":[{"content":"In Windows Vista, User Account Control (UAC) determines the privileges of a user.","pos":[1,82]},{"content":"If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.","pos":[83,249]},{"content":"By default, you are in the standard user role.","pos":[250,296]},{"content":"When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box.","pos":[297,443]},{"content":"The code that executes the <ph id=\"ph1\">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method does not display the Consent dialog box.","pos":[444,580],"source":" The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box."},{"content":"The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group.","pos":[581,695]},{"content":"You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.","pos":[696,851]}]}]}],"pos":[1138,2132],"yaml":true,"extradata":"MT"},{"content":"Account operators manage the user accounts on a computer or domain.","nodes":[{"pos":[0,67],"content":"Account operators manage the user accounts on a computer or domain.","nodes":[{"content":"Account operators manage the user accounts on a computer or domain.","pos":[0,67]}]}],"pos":[4352,4420],"yaml":true},{"content":"Administrators have complete and unrestricted access to the computer or domain.","nodes":[{"pos":[0,79],"content":"Administrators have complete and unrestricted access to the computer or domain.","nodes":[{"content":"Administrators have complete and unrestricted access to the computer or domain.","pos":[0,79]}]}],"pos":[5715,5795],"yaml":true},{"content":"Backup operators can override security restrictions for the sole purpose of backing up or restoring files.","nodes":[{"pos":[0,106],"content":"Backup operators can override security restrictions for the sole purpose of backing up or restoring files.","nodes":[{"content":"Backup operators can override security restrictions for the sole purpose of backing up or restoring files.","pos":[0,106]}]}],"pos":[7094,7201],"yaml":true},{"content":"Guests are more restricted than users.","nodes":[{"pos":[0,38],"content":"Guests are more restricted than users.","nodes":[{"content":"Guests are more restricted than users.","pos":[0,38]}]}],"pos":[8447,8486],"yaml":true},{"content":"Power users possess most administrative permissions with some restrictions. Thus, power users can run legacy applications, in addition to certified applications.","nodes":[{"pos":[0,161],"content":"Power users possess most administrative permissions with some restrictions. Thus, power users can run legacy applications, in addition to certified applications.","nodes":[{"content":"Power users possess most administrative permissions with some restrictions. Thus, power users can run legacy applications, in addition to certified applications.","pos":[0,161],"nodes":[{"content":"Power users possess most administrative permissions with some restrictions.","pos":[0,75]},{"content":"Thus, power users can run legacy applications, in addition to certified applications.","pos":[76,161]}]}]}],"pos":[9747,9909],"yaml":true},{"content":"Print operators can take control of a printer.","nodes":[{"pos":[0,46],"content":"Print operators can take control of a printer.","nodes":[{"content":"Print operators can take control of a printer.","pos":[0,46]}]}],"pos":[11198,11245],"yaml":true},{"content":"Replicators support file replication in a domain.","nodes":[{"pos":[0,49],"content":"Replicators support file replication in a domain.","nodes":[{"content":"Replicators support file replication in a domain.","pos":[0,49]}]}],"pos":[12520,12570],"yaml":true},{"content":"System operators manage a particular computer.","nodes":[{"pos":[0,46],"content":"System operators manage a particular computer.","nodes":[{"content":"System operators manage a particular computer.","pos":[0,46]}]}],"pos":[13866,13913],"yaml":true},{"content":"Users are prevented from making accidental or intentional system-wide changes. Thus, users can run certified applications, but not most legacy applications.","nodes":[{"pos":[0,156],"content":"Users are prevented from making accidental or intentional system-wide changes. Thus, users can run certified applications, but not most legacy applications.","nodes":[{"content":"Users are prevented from making accidental or intentional system-wide changes. Thus, users can run certified applications, but not most legacy applications.","pos":[0,156],"nodes":[{"content":"Users are prevented from making accidental or intentional system-wide changes.","pos":[0,78]},{"content":"Thus, users can run certified applications, but not most legacy applications.","pos":[79,156]}]}]}],"pos":[15153,15310],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Principal.WindowsBuiltInRole\n  commentId: T:System.Security.Principal.WindowsBuiltInRole\n  id: WindowsBuiltInRole\n  children:\n  - System.Security.Principal.WindowsBuiltInRole.AccountOperator\n  - System.Security.Principal.WindowsBuiltInRole.Administrator\n  - System.Security.Principal.WindowsBuiltInRole.BackupOperator\n  - System.Security.Principal.WindowsBuiltInRole.Guest\n  - System.Security.Principal.WindowsBuiltInRole.PowerUser\n  - System.Security.Principal.WindowsBuiltInRole.PrintOperator\n  - System.Security.Principal.WindowsBuiltInRole.Replicator\n  - System.Security.Principal.WindowsBuiltInRole.SystemOperator\n  - System.Security.Principal.WindowsBuiltInRole.User\n  langs:\n  - csharp\n  name: WindowsBuiltInRole\n  nameWithType: WindowsBuiltInRole\n  fullName: System.Security.Principal.WindowsBuiltInRole\n  type: Enum\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Specifies common roles to be used with <xref href=\"System.Security.Principal.WindowsPrincipal.IsInRole(System.String)\"></xref>.\n  remarks: \"These roles represent the local Windows groups common to most installations of Windows NT, Windows 2000 and Windows XP.  \\n  \\n> [!NOTE]\\n>  In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.\"\n  example:\n  - \"The following example shows the use of the <xref:System.Security.Principal.WindowsBuiltInRole> enumeration.  \\n  \\n [!code-cpp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CPP/source.cpp#1)]\\n [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#1)]\\n [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum WindowsBuiltInRole\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsBuiltInRole.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Principal.WindowsBuiltInRole.AccountOperator\n  commentId: F:System.Security.Principal.WindowsBuiltInRole.AccountOperator\n  id: AccountOperator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  langs:\n  - csharp\n  name: AccountOperator\n  nameWithType: WindowsBuiltInRole.AccountOperator\n  fullName: WindowsBuiltInRole.AccountOperator\n  type: Field\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Account operators manage the user accounts on a computer or domain.\n  syntax:\n    content: AccountOperator\n    return:\n      type: System.Security.Principal.WindowsBuiltInRole\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsBuiltInRole.xml\n- uid: System.Security.Principal.WindowsBuiltInRole.Administrator\n  commentId: F:System.Security.Principal.WindowsBuiltInRole.Administrator\n  id: Administrator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  langs:\n  - csharp\n  name: Administrator\n  nameWithType: WindowsBuiltInRole.Administrator\n  fullName: WindowsBuiltInRole.Administrator\n  type: Field\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Administrators have complete and unrestricted access to the computer or domain.\n  syntax:\n    content: Administrator\n    return:\n      type: System.Security.Principal.WindowsBuiltInRole\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsBuiltInRole.xml\n- uid: System.Security.Principal.WindowsBuiltInRole.BackupOperator\n  commentId: F:System.Security.Principal.WindowsBuiltInRole.BackupOperator\n  id: BackupOperator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  langs:\n  - csharp\n  name: BackupOperator\n  nameWithType: WindowsBuiltInRole.BackupOperator\n  fullName: WindowsBuiltInRole.BackupOperator\n  type: Field\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Backup operators can override security restrictions for the sole purpose of backing up or restoring files.\n  syntax:\n    content: BackupOperator\n    return:\n      type: System.Security.Principal.WindowsBuiltInRole\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsBuiltInRole.xml\n- uid: System.Security.Principal.WindowsBuiltInRole.Guest\n  commentId: F:System.Security.Principal.WindowsBuiltInRole.Guest\n  id: Guest\n  parent: System.Security.Principal.WindowsBuiltInRole\n  langs:\n  - csharp\n  name: Guest\n  nameWithType: WindowsBuiltInRole.Guest\n  fullName: WindowsBuiltInRole.Guest\n  type: Field\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Guests are more restricted than users.\n  syntax:\n    content: Guest\n    return:\n      type: System.Security.Principal.WindowsBuiltInRole\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsBuiltInRole.xml\n- uid: System.Security.Principal.WindowsBuiltInRole.PowerUser\n  commentId: F:System.Security.Principal.WindowsBuiltInRole.PowerUser\n  id: PowerUser\n  parent: System.Security.Principal.WindowsBuiltInRole\n  langs:\n  - csharp\n  name: PowerUser\n  nameWithType: WindowsBuiltInRole.PowerUser\n  fullName: WindowsBuiltInRole.PowerUser\n  type: Field\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Power users possess most administrative permissions with some restrictions. Thus, power users can run legacy applications, in addition to certified applications.\n  syntax:\n    content: PowerUser\n    return:\n      type: System.Security.Principal.WindowsBuiltInRole\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsBuiltInRole.xml\n- uid: System.Security.Principal.WindowsBuiltInRole.PrintOperator\n  commentId: F:System.Security.Principal.WindowsBuiltInRole.PrintOperator\n  id: PrintOperator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  langs:\n  - csharp\n  name: PrintOperator\n  nameWithType: WindowsBuiltInRole.PrintOperator\n  fullName: WindowsBuiltInRole.PrintOperator\n  type: Field\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Print operators can take control of a printer.\n  syntax:\n    content: PrintOperator\n    return:\n      type: System.Security.Principal.WindowsBuiltInRole\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsBuiltInRole.xml\n- uid: System.Security.Principal.WindowsBuiltInRole.Replicator\n  commentId: F:System.Security.Principal.WindowsBuiltInRole.Replicator\n  id: Replicator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  langs:\n  - csharp\n  name: Replicator\n  nameWithType: WindowsBuiltInRole.Replicator\n  fullName: WindowsBuiltInRole.Replicator\n  type: Field\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Replicators support file replication in a domain.\n  syntax:\n    content: Replicator\n    return:\n      type: System.Security.Principal.WindowsBuiltInRole\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsBuiltInRole.xml\n- uid: System.Security.Principal.WindowsBuiltInRole.SystemOperator\n  commentId: F:System.Security.Principal.WindowsBuiltInRole.SystemOperator\n  id: SystemOperator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  langs:\n  - csharp\n  name: SystemOperator\n  nameWithType: WindowsBuiltInRole.SystemOperator\n  fullName: WindowsBuiltInRole.SystemOperator\n  type: Field\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: System operators manage a particular computer.\n  syntax:\n    content: SystemOperator\n    return:\n      type: System.Security.Principal.WindowsBuiltInRole\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsBuiltInRole.xml\n- uid: System.Security.Principal.WindowsBuiltInRole.User\n  commentId: F:System.Security.Principal.WindowsBuiltInRole.User\n  id: User\n  parent: System.Security.Principal.WindowsBuiltInRole\n  langs:\n  - csharp\n  name: User\n  nameWithType: WindowsBuiltInRole.User\n  fullName: WindowsBuiltInRole.User\n  type: Field\n  assemblies:\n  - System.Security.Principal.Windows\n  - mscorlib\n  namespace: System.Security.Principal\n  summary: Users are prevented from making accidental or intentional system-wide changes. Thus, users can run certified applications, but not most legacy applications.\n  syntax:\n    content: User\n    return:\n      type: System.Security.Principal.WindowsBuiltInRole\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/WindowsBuiltInRole.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Security.Principal.WindowsBuiltInRole.AccountOperator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  isExternal: false\n  name: AccountOperator\n  nameWithType: WindowsBuiltInRole.AccountOperator\n  fullName: WindowsBuiltInRole.AccountOperator\n- uid: System.Security.Principal.WindowsBuiltInRole\n  parent: System.Security.Principal\n  isExternal: false\n  name: WindowsBuiltInRole\n  nameWithType: WindowsBuiltInRole\n  fullName: System.Security.Principal.WindowsBuiltInRole\n- uid: System.Security.Principal.WindowsBuiltInRole.Administrator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  isExternal: false\n  name: Administrator\n  nameWithType: WindowsBuiltInRole.Administrator\n  fullName: WindowsBuiltInRole.Administrator\n- uid: System.Security.Principal.WindowsBuiltInRole.BackupOperator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  isExternal: false\n  name: BackupOperator\n  nameWithType: WindowsBuiltInRole.BackupOperator\n  fullName: WindowsBuiltInRole.BackupOperator\n- uid: System.Security.Principal.WindowsBuiltInRole.Guest\n  parent: System.Security.Principal.WindowsBuiltInRole\n  isExternal: false\n  name: Guest\n  nameWithType: WindowsBuiltInRole.Guest\n  fullName: WindowsBuiltInRole.Guest\n- uid: System.Security.Principal.WindowsBuiltInRole.PowerUser\n  parent: System.Security.Principal.WindowsBuiltInRole\n  isExternal: false\n  name: PowerUser\n  nameWithType: WindowsBuiltInRole.PowerUser\n  fullName: WindowsBuiltInRole.PowerUser\n- uid: System.Security.Principal.WindowsBuiltInRole.PrintOperator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  isExternal: false\n  name: PrintOperator\n  nameWithType: WindowsBuiltInRole.PrintOperator\n  fullName: WindowsBuiltInRole.PrintOperator\n- uid: System.Security.Principal.WindowsBuiltInRole.Replicator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  isExternal: false\n  name: Replicator\n  nameWithType: WindowsBuiltInRole.Replicator\n  fullName: WindowsBuiltInRole.Replicator\n- uid: System.Security.Principal.WindowsBuiltInRole.SystemOperator\n  parent: System.Security.Principal.WindowsBuiltInRole\n  isExternal: false\n  name: SystemOperator\n  nameWithType: WindowsBuiltInRole.SystemOperator\n  fullName: WindowsBuiltInRole.SystemOperator\n- uid: System.Security.Principal.WindowsBuiltInRole.User\n  parent: System.Security.Principal.WindowsBuiltInRole\n  isExternal: false\n  name: User\n  nameWithType: WindowsBuiltInRole.User\n  fullName: WindowsBuiltInRole.User\n"}