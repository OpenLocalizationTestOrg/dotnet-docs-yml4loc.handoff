{"nodes":[{"content":"Defines the method call message interface.","nodes":[{"pos":[0,42],"content":"Defines the method call message interface.","nodes":[{"content":"Defines the method call message interface.","pos":[0,42]}]}],"pos":[747,790],"yaml":true},{"content":"An <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is generated as a result of a method called on a remote object, and is used to transport details about the remote method call to the server side.","nodes":[{"pos":[0,208],"content":"An <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is generated as a result of a method called on a remote object, and is used to transport details about the remote method call to the server side.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage&gt;</ph> is generated as a result of a method called on a remote object, and is used to transport details about the remote method call to the server side.","pos":[0,208],"source":"An <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is generated as a result of a method called on a remote object, and is used to transport details about the remote method call to the server side."}]}],"pos":[801,1010],"yaml":true,"extradata":"MT"},{"content":"Returns the specified argument that is not marked as an `out` parameter.","nodes":[{"pos":[0,72],"content":"Returns the specified argument that is not marked as an <ph id=\"ph1\">`out`</ph> parameter.","source":"Returns the specified argument that is not marked as an `out` parameter."}],"pos":[3141,3214],"yaml":true},{"content":"The number of the requested `in` argument.","nodes":[{"pos":[0,42],"content":"The number of the requested <ph id=\"ph1\">`in`</ph> argument.","source":"The number of the requested `in` argument."}],"pos":[3351,3394],"yaml":true},{"content":"The requested argument that is not marked as an `out` parameter.","nodes":[{"pos":[0,64],"content":"The requested argument that is not marked as an <ph id=\"ph1\">`out`</ph> parameter.","source":"The requested argument that is not marked as an `out` parameter."}],"pos":[3451,3516],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[3717,3835],"yaml":true},{"content":"Returns the name of the specified argument that is not marked as an `out` parameter.","nodes":[{"pos":[0,84],"content":"Returns the name of the specified argument that is not marked as an <ph id=\"ph1\">`out`</ph> parameter.","source":"Returns the name of the specified argument that is not marked as an `out` parameter."}],"pos":[5002,5087],"yaml":true},{"content":"The number of the requested `in` argument.","nodes":[{"pos":[0,42],"content":"The number of the requested <ph id=\"ph1\">`in`</ph> argument.","source":"The number of the requested `in` argument."}],"pos":[5226,5269],"yaml":true},{"content":"The name of a specific argument that is not marked as an `out` parameter.","nodes":[{"pos":[0,73],"content":"The name of a specific argument that is not marked as an <ph id=\"ph1\">`out`</ph> parameter.","source":"The name of a specific argument that is not marked as an `out` parameter."}],"pos":[5326,5400],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[5605,5723],"yaml":true},{"content":"Gets the number of arguments in the call that are not marked as `out` parameters.","nodes":[{"pos":[0,81],"content":"Gets the number of arguments in the call that are not marked as <ph id=\"ph1\">`out`</ph> parameters.","source":"Gets the number of arguments in the call that are not marked as `out` parameters."}],"pos":[6817,6899],"yaml":true},{"content":"The number of arguments in the call that are not marked as `out` parameters.","nodes":[{"pos":[0,76],"content":"The number of arguments in the call that are not marked as <ph id=\"ph1\">`out`</ph> parameters.","source":"The number of arguments in the call that are not marked as `out` parameters."}],"pos":[7639,7716],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[7919,8037],"yaml":true},{"content":"Gets an array of arguments that are not marked as `out` parameters.","nodes":[{"pos":[0,67],"content":"Gets an array of arguments that are not marked as <ph id=\"ph1\">`out`</ph> parameters.","source":"Gets an array of arguments that are not marked as `out` parameters."}],"pos":[9107,9175],"yaml":true},{"content":"Although the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs%2A> property is redundant since the same functionality can be achieved with the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount%2A> and <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg%2A> methods, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.","nodes":[{"pos":[0,440],"content":"Although the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs%2A> property is redundant since the same functionality can be achieved with the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount%2A> and <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg%2A> methods, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.","nodes":[{"content":"Although the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs%2A&gt;</ph> property is redundant since the same functionality can be achieved with the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg%2A&gt;</ph> methods, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.","pos":[0,440],"source":"Although the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs%2A> property is redundant since the same functionality can be achieved with the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount%2A> and <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg%2A> methods, there might be performance optimization available if the implementer understands when all the arguments will be retrieved."}]}],"pos":[9186,9627],"yaml":true,"extradata":"MT"},{"content":"An array of arguments that are not marked as `out` parameters.","nodes":[{"pos":[0,62],"content":"An array of arguments that are not marked as <ph id=\"ph1\">`out`</ph> parameters.","source":"An array of arguments that are not marked as `out` parameters."}],"pos":[10217,10280],"yaml":true},{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"pos":[0,117],"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","nodes":[{"content":"The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.","pos":[0,117]}]}],"pos":[10479,10597],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  commentId: T:System.Runtime.Remoting.Messaging.IMethodCallMessage\n  id: IMethodCallMessage\n  children:\n  - System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg(System.Int32)\n  - System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArgName(System.Int32)\n  - System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount\n  - System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs\n  langs:\n  - csharp\n  name: IMethodCallMessage\n  nameWithType: IMethodCallMessage\n  fullName: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Defines the method call message interface.\n  remarks: An <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> is generated as a result of a method called on a remote object, and is used to transport details about the remote method call to the server side.\n  example:\n  - >-\n    [!code-cpp[IMethodCallMessage_GetInArg#1](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CPP/imethodcallmessage.cpp#1)]\n     [!code-csharp[IMethodCallMessage_GetInArg#1](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CS/imethodcallmessage.cs#1)]\n     [!code-vb[IMethodCallMessage_GetInArg#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/VB/imethodcallmessage.vb#1)]\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IMethodCallMessage : System.Runtime.Remoting.Messaging.IMethodMessage\n  derivedClasses:\n  - System.Runtime.Remoting.Activation.IConstructionCallMessage\n  - System.Runtime.Remoting.Messaging.MethodCall\n  - System.Runtime.Remoting.Messaging.MethodCallMessageWrapper\n  implements:\n  - System.Runtime.Remoting.Messaging.IMethodMessage\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodCallMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg(System.Int32)\n  commentId: M:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg(System.Int32)\n  id: GetInArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  langs:\n  - csharp\n  name: GetInArg(Int32)\n  nameWithType: IMethodCallMessage.GetInArg(Int32)\n  fullName: IMethodCallMessage.GetInArg(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Returns the specified argument that is not marked as an `out` parameter.\n  syntax:\n    content: public object GetInArg (int argNum);\n    parameters:\n    - id: argNum\n      type: System.Int32\n      description: The number of the requested `in` argument.\n    return:\n      type: System.Object\n      description: The requested argument that is not marked as an `out` parameter.\n  overload: System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodCallMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArgName(System.Int32)\n  commentId: M:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArgName(System.Int32)\n  id: GetInArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  langs:\n  - csharp\n  name: GetInArgName(Int32)\n  nameWithType: IMethodCallMessage.GetInArgName(Int32)\n  fullName: IMethodCallMessage.GetInArgName(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Returns the name of the specified argument that is not marked as an `out` parameter.\n  syntax:\n    content: public string GetInArgName (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The number of the requested `in` argument.\n    return:\n      type: System.String\n      description: The name of a specific argument that is not marked as an `out` parameter.\n  overload: System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArgName*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodCallMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount\n  commentId: P:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount\n  id: InArgCount\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  langs:\n  - csharp\n  name: InArgCount\n  nameWithType: IMethodCallMessage.InArgCount\n  fullName: IMethodCallMessage.InArgCount\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets the number of arguments in the call that are not marked as `out` parameters.\n  remarks: ''\n  example:\n  - \"The following example code shows a custom proxy that overrides RealProxy.Invoke in order to write the call message information to the console.  \\n  \\n [!code-cpp[IMethodCallMessage_GetInArg#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CPP/imethodcallmessage.cpp#2)]\\n [!code-csharp[IMethodCallMessage_GetInArg#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CS/imethodcallmessage.cs#2)]\\n [!code-vb[IMethodCallMessage_GetInArg#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/VB/imethodcallmessage.vb#2)]\"\n  syntax:\n    content: public int InArgCount { get; }\n    return:\n      type: System.Int32\n      description: The number of arguments in the call that are not marked as `out` parameters.\n  overload: System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodCallMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs\n  commentId: P:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs\n  id: InArgs\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  langs:\n  - csharp\n  name: InArgs\n  nameWithType: IMethodCallMessage.InArgs\n  fullName: IMethodCallMessage.InArgs\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  summary: Gets an array of arguments that are not marked as `out` parameters.\n  remarks: Although the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs%2A> property is redundant since the same functionality can be achieved with the <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount%2A> and <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg%2A> methods, there might be performance optimization available if the implementer understands when all the arguments will be retrieved.\n  example:\n  - >-\n    [!code-cpp[IMethodCallMessage_GetInArg#2](~/samples/snippets/cpp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CPP/imethodcallmessage.cpp#2)]\n     [!code-csharp[IMethodCallMessage_GetInArg#2](~/samples/snippets/csharp/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/CS/imethodcallmessage.cs#2)]\n     [!code-vb[IMethodCallMessage_GetInArg#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IMethodCallMessage_GetInArg/VB/imethodcallmessage.vb#2)]\n  syntax:\n    content: public object[] InArgs { get; }\n    return:\n      type: System.Object[]\n      description: An array of arguments that are not marked as `out` parameters.\n  overload: System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodCallMessage.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  isExternal: false\n  name: GetInArg(Int32)\n  nameWithType: IMethodCallMessage.GetInArg(Int32)\n  fullName: IMethodCallMessage.GetInArg(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  isExternal: false\n  name: GetInArgName(Int32)\n  nameWithType: IMethodCallMessage.GetInArgName(Int32)\n  fullName: IMethodCallMessage.GetInArgName(Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  isExternal: false\n  name: InArgCount\n  nameWithType: IMethodCallMessage.InArgCount\n  fullName: IMethodCallMessage.InArgCount\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  isExternal: false\n  name: InArgs\n  nameWithType: IMethodCallMessage.InArgs\n  fullName: IMethodCallMessage.InArgs\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArg*\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  isExternal: false\n  name: GetInArg\n  nameWithType: IMethodCallMessage.GetInArg\n  fullName: IMethodCallMessage.GetInArg\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodCallMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.GetInArgName*\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  isExternal: false\n  name: GetInArgName\n  nameWithType: IMethodCallMessage.GetInArgName\n  fullName: IMethodCallMessage.GetInArgName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodCallMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgCount*\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  isExternal: false\n  name: InArgCount\n  nameWithType: IMethodCallMessage.InArgCount\n  fullName: IMethodCallMessage.InArgCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodCallMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodCallMessage.InArgs*\n  parent: System.Runtime.Remoting.Messaging.IMethodCallMessage\n  isExternal: false\n  name: InArgs\n  nameWithType: IMethodCallMessage.InArgs\n  fullName: IMethodCallMessage.InArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Messaging/IMethodCallMessage.xml\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMethodMessage\n  nameWithType: IMethodMessage\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage\n"}