{"nodes":[{"content":"Defines the identity permission for the Web site from which the code originates. This class cannot be inherited.","nodes":[{"pos":[0,112],"content":"Defines the identity permission for the Web site from which the code originates. This class cannot be inherited.","nodes":[{"content":"Defines the identity permission for the Web site from which the code originates. This class cannot be inherited.","pos":[0,112],"nodes":[{"content":"Defines the identity permission for the Web site from which the code originates.","pos":[0,80]},{"content":"This class cannot be inherited.","pos":[81,112]}]}]}],"pos":[1217,1330],"yaml":true},{"content":"Using this class, it is possible to ensure that callers are from a specific Web site. Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string * will match any site, but will not match code that has no site evidence.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.","nodes":[{"pos":[0,517],"content":"Using this class, it is possible to ensure that callers are from a specific Web site. Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.","nodes":[{"content":"Using this class, it is possible to ensure that callers are from a specific Web site. Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.","pos":[0,517],"nodes":[{"content":"Using this class, it is possible to ensure that callers are from a specific Web site.","pos":[0,85]},{"content":"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP.","pos":[86,178]},{"content":"A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm.","pos":[179,371]},{"content":"This excludes port numbers.","pos":[372,399]},{"content":"If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.","pos":[400,517]}]}]},{"pos":[524,870],"content":"Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string * will match any site, but will not match code that has no site evidence.","nodes":[{"content":"Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string * will match any site, but will not match code that has no site evidence.","pos":[0,346],"nodes":[{"content":"Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter.","pos":[0,81]},{"content":"For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com.","pos":[82,192]},{"content":"Without a wildcard, the site name must be a precise match.","pos":[193,251]},{"content":"The site name string * will match any site, but will not match code that has no site evidence.","pos":[252,346]}]}]},{"pos":[878,1003],"content":"[!IMPORTANT]\n Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], identity permissions are not used.","leadings":["","> "],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, identity permissions are not used.","pos":[14,123],"source":" Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], identity permissions are not used."}]},{"pos":[1014,1557],"content":"In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","nodes":[{"content":"In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","pos":[0,543],"nodes":[{"content":"In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted.","pos":[0,143]},{"content":"That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.","pos":[144,293]},{"content":"Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust.","pos":[294,428]},{"content":"This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","pos":[429,543]}]}]},{"pos":[1565,2353],"content":"[!NOTE]\n In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).","leadings":["","> "],"nodes":[{"content":" In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).","pos":[8,786],"nodes":[{"content":"In versions of the .NET Framework before the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, you could use the <ph id=\"ph2\">&lt;xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName&gt;</ph> method to prevent inadvertent access to system resources by trusted code.","pos":[1,271],"source":" In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code."},{"content":"<ph id=\"ph1\">&lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt;</ph> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly.","pos":[272,436],"source":" <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly."},{"content":"To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access.","pos":[437,591]},{"content":"For information about running an application in a sandbox, see <bpt id=\"p1\">[</bpt>How to: Run Partially Trusted Code in a Sandbox<ept id=\"p1\">](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)</ept>.","pos":[592,778],"source":" For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)."}]}]},{"pos":[2361,2834],"content":"[!NOTE]\n In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.","leadings":["","> "],"nodes":[{"content":" In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.","pos":[8,471],"nodes":[{"content":"In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <ph id=\"ph1\">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> permission state value.","pos":[1,168],"source":" In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value."},{"content":"Starting with the .NET Framework version 2.0, identity permissions can have any permission state value.","pos":[169,272]},{"content":"This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface.","pos":[273,463],"source":" This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."}]}]}],"pos":[1341,4197],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref>.","nodes":[{"pos":[0,196],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SiteIdentityPermission\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref>."}],"pos":[7087,7284],"yaml":true},{"content":"The fully restricted state of <xref:System.Security.Permissions.SiteIdentityPermission> matches no sites. This constructor is included for consistency with the design of other permissions, but is not useful in practice.  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.  \n  \n In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","nodes":[{"pos":[0,219],"content":"The fully restricted state of <xref:System.Security.Permissions.SiteIdentityPermission> matches no sites. This constructor is included for consistency with the design of other permissions, but is not useful in practice.","nodes":[{"content":"The fully restricted state of <xref:System.Security.Permissions.SiteIdentityPermission> matches no sites. This constructor is included for consistency with the design of other permissions, but is not useful in practice.","pos":[0,219],"nodes":[{"content":"The fully restricted state of <ph id=\"ph1\">&lt;xref:System.Security.Permissions.SiteIdentityPermission&gt;</ph> matches no sites.","pos":[0,105],"source":"The fully restricted state of <xref:System.Security.Permissions.SiteIdentityPermission> matches no sites."},{"content":"This constructor is included for consistency with the design of other permissions, but is not useful in practice.","pos":[106,219]}]}]},{"pos":[227,840],"content":"[!NOTE]\n In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.","leadings":["","> "],"nodes":[{"content":" In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.","pos":[8,611],"nodes":[{"content":"In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <ph id=\"ph1\">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> permission state value.","pos":[1,168],"source":" In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value."},{"content":"Starting with the .NET Framework version 2.0, identity permissions can have any permission state value.","pos":[169,272]},{"content":"This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.IUnrestrictedPermission&gt;</ph> interface.","pos":[273,463],"source":" This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."},{"content":"That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.","pos":[464,603]}]}]},{"pos":[847,1390],"content":"In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","nodes":[{"content":"In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","pos":[0,543],"nodes":[{"content":"In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted.","pos":[0,143]},{"content":"That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria.","pos":[144,293]},{"content":"Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust.","pos":[294,428]},{"content":"This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.","pos":[429,543]}]}]}],"pos":[7295,8693],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[8906,8990],"yaml":true},{"content":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.","nodes":[{"pos":[0,122],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">state</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."}],"pos":[9168,9291],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref> class to represent the specified site identity.","nodes":[{"pos":[0,153],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.SiteIdentityPermission\"&gt;&lt;/xref&gt;</ph> class to represent the specified site identity.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref> class to represent the specified site identity."}],"pos":[10577,10731],"yaml":true},{"content":"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match.","nodes":[{"pos":[0,432],"content":"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.","nodes":[{"content":"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.","pos":[0,432],"nodes":[{"content":"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP.","pos":[0,92]},{"content":"A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/.","pos":[93,286]},{"content":"This excludes port numbers.","pos":[287,314]},{"content":"If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.","pos":[315,432]}]}]},{"pos":[439,690],"content":"Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match.","nodes":[{"content":"Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match.","pos":[0,251],"nodes":[{"content":"Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter.","pos":[0,81]},{"content":"For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com.","pos":[82,192]},{"content":"Without a wildcard, the site name must be a precise match.","pos":[193,251]}]}]}],"pos":[10742,11443],"yaml":true,"extradata":"MT"},{"content":"The site name or wildcard expression.","nodes":[{"pos":[0,37],"content":"The site name or wildcard expression.","nodes":[{"content":"The site name or wildcard expression.","pos":[0,37]}]}],"pos":[11587,11625],"yaml":true},{"content":"The <code>site</code> parameter is not a valid string, or does not match a valid wildcard site name.","nodes":[{"pos":[0,100],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">site</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid string, or does not match a valid wildcard site name.","source":"The <code>site</code> parameter is not a valid string, or does not match a valid wildcard site name."}],"pos":[11803,11904],"yaml":true},{"content":"Creates and returns an identical copy of the current permission.","nodes":[{"pos":[0,64],"content":"Creates and returns an identical copy of the current permission.","nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]}],"pos":[13063,13128],"yaml":true},{"content":"A copy of the permission represents the same access to resources or the same site identity as the original permission.","nodes":[{"pos":[0,118],"content":"A copy of the permission represents the same access to resources or the same site identity as the original permission.","nodes":[{"content":"A copy of the permission represents the same access to resources or the same site identity as the original permission.","pos":[0,118]}]}],"pos":[13139,13258],"yaml":true,"extradata":"MT"},{"content":"A copy of the current permission.","nodes":[{"pos":[0,33],"content":"A copy of the current permission.","nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]}],"pos":[13424,13458],"yaml":true},{"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"pos":[0,70],"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]}],"pos":[14865,14936],"yaml":true},{"content":"The XML encoding to use to reconstruct the permission.","nodes":[{"pos":[0,54],"content":"The XML encoding to use to reconstruct the permission.","nodes":[{"content":"The XML encoding to use to reconstruct the permission.","pos":[0,54]}]}],"pos":[15120,15175],"yaml":true},{"content":"The <code>esd</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>esd</code> parameter is `null`."}],"pos":[15363,15405],"yaml":true},{"content":"The <code>esd</code> parameter is not a valid permission element.  \n  \n -or-  \n  \n The <code>esd</code> parameter's version number is not valid.","nodes":[{"pos":[0,65],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid permission element.","source":"The <code>esd</code> parameter is not a valid permission element."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,144],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter's version number is not valid.","source":"The <code>esd</code> parameter's version number is not valid."}],"pos":[15499,15650],"yaml":true},{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"pos":[0,113],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]}],"pos":[16959,17073],"yaml":true},{"content":"The intersection of two permissions is a permission that describes the sites they both describe in common. Only a demand that passes both original permissions will pass the intersection. For example, the intersection of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to www.fourthcoffee.com.  \n  \n The intersection of two identical site identity permissions is the same permission. The intersection of two different (not wildcard) expressions is an empty permission. The intersection of a wildcard expression and a matching site is the site. The intersection of two wildcard expressions that match is the longer, more specific of the two expressions.","nodes":[{"pos":[0,396],"content":"The intersection of two permissions is a permission that describes the sites they both describe in common. Only a demand that passes both original permissions will pass the intersection. For example, the intersection of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to www.fourthcoffee.com.","nodes":[{"content":"The intersection of two permissions is a permission that describes the sites they both describe in common. Only a demand that passes both original permissions will pass the intersection. For example, the intersection of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to www.fourthcoffee.com.","pos":[0,396],"nodes":[{"content":"The intersection of two permissions is a permission that describes the sites they both describe in common.","pos":[0,106]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[107,186]},{"content":"For example, the intersection of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to www.fourthcoffee.com.","pos":[187,396]}]}]},{"pos":[403,755],"content":"The intersection of two identical site identity permissions is the same permission. The intersection of two different (not wildcard) expressions is an empty permission. The intersection of a wildcard expression and a matching site is the site. The intersection of two wildcard expressions that match is the longer, more specific of the two expressions.","nodes":[{"content":"The intersection of two identical site identity permissions is the same permission. The intersection of two different (not wildcard) expressions is an empty permission. The intersection of a wildcard expression and a matching site is the site. The intersection of two wildcard expressions that match is the longer, more specific of the two expressions.","pos":[0,352],"nodes":[{"content":"The intersection of two identical site identity permissions is the same permission.","pos":[0,83]},{"content":"The intersection of two different (not wildcard) expressions is an empty permission.","pos":[84,168]},{"content":"The intersection of a wildcard expression and a matching site is the site.","pos":[169,243]},{"content":"The intersection of two wildcard expressions that match is the longer, more specific of the two expressions.","pos":[244,352]}]}]}],"pos":[17084,17844],"yaml":true,"extradata":"MT"},{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,109],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]}],"pos":[18051,18161],"yaml":true},{"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"pos":[0,165],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <ph id=\"ph1\">`null`</ph> if the intersection is empty.","pos":[106,165],"source":" This new permission is `null` if the intersection is empty."}]}],"pos":[18232,18398],"yaml":true},{"content":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission.","nodes":[{"pos":[0,102],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission."}],"pos":[18580,18683],"yaml":true},{"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"pos":[0,82],"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]}],"pos":[19998,20081],"yaml":true},{"content":"The current permission is a subset of the specified permission if the current permission specifies a site that is wholly contained by the specified permission.  \n  \n The following table shows the value of <xref:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf%2A> for a range of values of the current permission and the specified permission.  \n  \n|Current Permission|Specified Permission|IsSubsetOf|  \n|------------------------|--------------------------|----------------|  \n|www.fourthcoffee.com|www.fourthcoffee.com|`true`|  \n|www.fourthcoffee.com|www.tailspintoys.com|`false`|  \n|www.fourthcoffee.com|*.fourthcoffee.com|`true`|  \n|www.fourthcoffee.com|*.com|`true`|  \n|*.fourthcoffee.com|www.fourthcoffee.com|`false`|  \n|*.fourthcoffee.com|*.fourthcoffee.com|`true`|  \n|*.fourthcoffee.com|*.com|`true`|  \n|Anything except `None`|*|`true`|  \n|`None`|Anything|`true`|","nodes":[{"pos":[0,159],"content":"The current permission is a subset of the specified permission if the current permission specifies a site that is wholly contained by the specified permission.","nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a site that is wholly contained by the specified permission.","pos":[0,159]}]},{"pos":[166,354],"content":"The following table shows the value of <xref:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf%2A> for a range of values of the current permission and the specified permission.","nodes":[{"content":"The following table shows the value of <ph id=\"ph1\">&lt;xref:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf%2A&gt;</ph> for a range of values of the current permission and the specified permission.","pos":[0,188],"source":"The following table shows the value of <xref:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf%2A> for a range of values of the current permission and the specified permission."}]},{"pos":[361,379],"content":"Current Permission","nodes":[{"content":"Current Permission","pos":[0,18]}]},{"pos":[380,400],"content":"Specified Permission","nodes":[{"content":"Specified Permission","pos":[0,20]}]},{"pos":[401,411],"content":"IsSubsetOf","nodes":[{"content":"IsSubsetOf","pos":[0,10]}]},{"pos":[489,509],"content":"www.fourthcoffee.com","nodes":[{"content":"www.fourthcoffee.com","pos":[0,20]}]},{"pos":[510,530],"content":"www.fourthcoffee.com","nodes":[{"content":"www.fourthcoffee.com","pos":[0,20]}]},{"pos":[542,562],"content":"www.fourthcoffee.com","nodes":[{"content":"www.fourthcoffee.com","pos":[0,20]}]},{"pos":[563,583],"content":"www.tailspintoys.com","nodes":[{"content":"www.tailspintoys.com","pos":[0,20]}]},{"pos":[596,616],"content":"www.fourthcoffee.com","nodes":[{"content":"www.fourthcoffee.com","pos":[0,20]}]},{"pos":[617,635],"content":"*.fourthcoffee.com","nodes":[{"content":"*.fourthcoffee.com","pos":[0,18]}]},{"pos":[647,667],"content":"www.fourthcoffee.com","nodes":[{"content":"www.fourthcoffee.com","pos":[0,20]}]},{"pos":[668,673],"content":"*.com","nodes":[{"content":"*.com","pos":[0,5]}]},{"pos":[685,703],"content":"*.fourthcoffee.com","nodes":[{"content":"*.fourthcoffee.com","pos":[0,18]}]},{"pos":[704,724],"content":"www.fourthcoffee.com","nodes":[{"content":"www.fourthcoffee.com","pos":[0,20]}]},{"pos":[737,755],"content":"*.fourthcoffee.com","nodes":[{"content":"*.fourthcoffee.com","pos":[0,18]}]},{"pos":[756,774],"content":"*.fourthcoffee.com","nodes":[{"content":"*.fourthcoffee.com","pos":[0,18]}]},{"pos":[786,804],"content":"*.fourthcoffee.com","nodes":[{"content":"*.fourthcoffee.com","pos":[0,18]}]},{"pos":[805,810],"content":"*.com","nodes":[{"content":"*.com","pos":[0,5]}]},{"pos":[822,844],"content":"Anything except <ph id=\"ph1\">`None`</ph>","source":"Anything except `None`"},{"pos":[845,846],"content":"*","nodes":[]},{"pos":[865,873],"content":"Anything","nodes":[{"content":"Anything","pos":[0,8]}]}],"pos":[20092,20990],"yaml":true,"extradata":"MT"},{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"pos":[0,130],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]}],"pos":[21175,21306],"yaml":true},{"content":"`true` if the current permission is a subset of the specified permission; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is a subset of the specified permission; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is a subset of the specified permission; otherwise, `false`."}],"pos":[21364,21460],"yaml":true},{"content":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission.","nodes":[{"pos":[0,102],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission."}],"pos":[21643,21746],"yaml":true},{"content":"Gets or sets the current site.","nodes":[{"pos":[0,30],"content":"Gets or sets the current site.","nodes":[{"content":"Gets or sets the current site.","pos":[0,30]}]}],"pos":[22901,22932],"yaml":true},{"content":"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string * will match any site, but will not match code that has no site evidence.","nodes":[{"pos":[0,432],"content":"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.","nodes":[{"content":"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.","pos":[0,432],"nodes":[{"content":"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP.","pos":[0,92]},{"content":"A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/.","pos":[93,286]},{"content":"This excludes port numbers.","pos":[287,314]},{"content":"If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.","pos":[315,432]}]}]},{"pos":[439,785],"content":"Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string * will match any site, but will not match code that has no site evidence.","nodes":[{"content":"Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string * will match any site, but will not match code that has no site evidence.","pos":[0,346],"nodes":[{"content":"Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter.","pos":[0,81]},{"content":"For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com.","pos":[82,192]},{"content":"Without a wildcard, the site name must be a precise match.","pos":[193,251]},{"content":"The site name string * will match any site, but will not match code that has no site evidence.","pos":[252,346]}]}]}],"pos":[22943,23739],"yaml":true,"extradata":"MT"},{"content":"The current site.","nodes":[{"pos":[0,17],"content":"The current site.","nodes":[{"content":"The current site.","pos":[0,17]}]}],"pos":[23852,23870],"yaml":true},{"content":"The site identity cannot be retrieved because it has an ambiguous identity.","nodes":[{"pos":[0,75],"content":"The site identity cannot be retrieved because it has an ambiguous identity.","nodes":[{"content":"The site identity cannot be retrieved because it has an ambiguous identity.","pos":[0,75]}]}],"pos":[24055,24131],"yaml":true},{"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"pos":[0,64],"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]}],"pos":[25296,25361],"yaml":true},{"content":"An XML encoding of the permission, including any state information.","nodes":[{"pos":[0,67],"content":"An XML encoding of the permission, including any state information.","nodes":[{"content":"An XML encoding of the permission, including any state information.","pos":[0,67]}]}],"pos":[25536,25604],"yaml":true},{"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"pos":[0,94],"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]}],"pos":[26976,27071],"yaml":true},{"content":"The result of a call to <xref:System.Security.Permissions.SiteIdentityPermission.Union%2A> is a permission that represents all the sites represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. For example, the union of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to *.fourthcoffee.com.  \n  \n The union of a permission and `null` is the permission that is not `null`. The union of a permission and a subset of that permission is the permission that contains the subset. Any other combination results in an <xref:System.ArgumentException> being thrown. For example, the union of the site identity www.fourthcoffee.com and the site identity www.tailspintoys.com results in an exception because neither is a subset of the other.","nodes":[{"pos":[0,471],"content":"The result of a call to <xref:System.Security.Permissions.SiteIdentityPermission.Union%2A> is a permission that represents all the sites represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. For example, the union of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to *.fourthcoffee.com.","nodes":[{"content":"The result of a call to <xref:System.Security.Permissions.SiteIdentityPermission.Union%2A> is a permission that represents all the sites represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. For example, the union of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to *.fourthcoffee.com.","pos":[0,471],"nodes":[{"content":"The result of a call to <ph id=\"ph1\">&lt;xref:System.Security.Permissions.SiteIdentityPermission.Union%2A&gt;</ph> is a permission that represents all the sites represented by both the current permission and the specified permission.","pos":[0,209],"source":"The result of a call to <xref:System.Security.Permissions.SiteIdentityPermission.Union%2A> is a permission that represents all the sites represented by both the current permission and the specified permission."},{"content":"Any demand that passes either permission passes their union.","pos":[210,270]},{"content":"For example, the union of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to *.fourthcoffee.com.","pos":[271,471]}]}]},{"pos":[478,910],"content":"The union of a permission and `null` is the permission that is not `null`. The union of a permission and a subset of that permission is the permission that contains the subset. Any other combination results in an <xref:System.ArgumentException> being thrown. For example, the union of the site identity www.fourthcoffee.com and the site identity www.tailspintoys.com results in an exception because neither is a subset of the other.","nodes":[{"content":"The union of a permission and <ph id=\"ph1\">`null`</ph> is the permission that is not <ph id=\"ph2\">`null`</ph>.","pos":[0,74],"source":"The union of a permission and `null` is the permission that is not `null`."},{"content":"The union of a permission and a subset of that permission is the permission that contains the subset.","pos":[75,176]},{"content":"Any other combination results in an <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph> being thrown.","pos":[177,258],"source":" Any other combination results in an <xref:System.ArgumentException> being thrown."},{"content":"For example, the union of the site identity www.fourthcoffee.com and the site identity www.tailspintoys.com results in an exception because neither is a subset of the other.","pos":[259,432]}]}],"pos":[27082,27997],"yaml":true,"extradata":"MT"},{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,107],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]}],"pos":[28200,28308],"yaml":true},{"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"pos":[0,98],"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"pos":[28379,28478],"yaml":true},{"content":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission.  \n  \n -or-  \n  \n The permissions are not equal and one is not a subset of the other.","nodes":[{"pos":[0,102],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission."},{"pos":[109,113],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[120,187],"content":"The permissions are not equal and one is not a subset of the other.","nodes":[{"content":"The permissions are not equal and one is not a subset of the other.","pos":[0,67]}]}],"pos":[28656,28850],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.SiteIdentityPermission\n  commentId: T:System.Security.Permissions.SiteIdentityPermission\n  id: SiteIdentityPermission\n  children:\n  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)\n  - System.Security.Permissions.SiteIdentityPermission.Copy\n  - System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.SiteIdentityPermission.Site\n  - System.Security.Permissions.SiteIdentityPermission.ToXml\n  - System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: SiteIdentityPermission\n  nameWithType: SiteIdentityPermission\n  fullName: System.Security.Permissions.SiteIdentityPermission\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Defines the identity permission for the Web site from which the code originates. This class cannot be inherited.\n  remarks: \"Using this class, it is possible to ensure that callers are from a specific Web site. Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \\\"//\\\" after the protocol of a URL and the following \\\"/\\\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \\n  \\n Sites can be matched exactly, or by a wildcard (\\\"*\\\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string * will match any site, but will not match code that has no site evidence.  \\n  \\n> [!IMPORTANT]\\n>  Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], identity permissions are not used.  \\n>   \\n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \\n  \\n> [!NOTE]\\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).  \\n  \\n> [!NOTE]\\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class SiteIdentityPermission : System.Security.CodeAccessPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.SiteIdentityPermission\n  langs:\n  - csharp\n  name: SiteIdentityPermission(PermissionState)\n  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)\n  fullName: SiteIdentityPermission.SiteIdentityPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref> class with the specified <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  remarks: \"The fully restricted state of <xref:System.Security.Permissions.SiteIdentityPermission> matches no sites. This constructor is included for consistency with the design of other permissions, but is not useful in practice.  \\n  \\n> [!NOTE]\\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust.  \\n  \\n In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.\"\n  syntax:\n    content: public SiteIdentityPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)\n  commentId: M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Permissions.SiteIdentityPermission\n  langs:\n  - csharp\n  name: SiteIdentityPermission(String)\n  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)\n  fullName: SiteIdentityPermission.SiteIdentityPermission(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.SiteIdentityPermission\"></xref> class to represent the specified site identity.\n  remarks: \"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \\\"//\\\" after the protocol of a URL and the following \\\"/\\\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \\n  \\n Sites can be matched exactly, or by a wildcard (\\\"*\\\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match.\"\n  syntax:\n    content: public SiteIdentityPermission (string site);\n    parameters:\n    - id: site\n      type: System.String\n      description: The site name or wildcard expression.\n  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>site</code> parameter is not a valid string, or does not match a valid wildcard site name.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.SiteIdentityPermission.Copy\n  commentId: M:System.Security.Permissions.SiteIdentityPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.SiteIdentityPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: SiteIdentityPermission.Copy()\n  fullName: SiteIdentityPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of the permission represents the same access to resources or the same site identity as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.SiteIdentityPermission.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.SiteIdentityPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)\n  fullName: SiteIdentityPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement esd);\n    parameters:\n    - id: esd\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the permission.\n  overload: System.Security.Permissions.SiteIdentityPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>esd</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>esd</code> parameter is not a valid permission element.  \\n  \\n -or-  \\n  \\n The <code>esd</code> parameter's version number is not valid.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.SiteIdentityPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: SiteIdentityPermission.Intersect(IPermission)\n  fullName: SiteIdentityPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: \"The intersection of two permissions is a permission that describes the sites they both describe in common. Only a demand that passes both original permissions will pass the intersection. For example, the intersection of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to www.fourthcoffee.com.  \\n  \\n The intersection of two identical site identity permissions is the same permission. The intersection of two different (not wildcard) expressions is an empty permission. The intersection of a wildcard expression and a matching site is the site. The intersection of two wildcard expressions that match is the longer, more specific of the two expressions.\"\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.\n  overload: System.Security.Permissions.SiteIdentityPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not `null` and is not of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.SiteIdentityPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)\n  fullName: SiteIdentityPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: \"The current permission is a subset of the specified permission if the current permission specifies a site that is wholly contained by the specified permission.  \\n  \\n The following table shows the value of <xref:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf%2A> for a range of values of the current permission and the specified permission.  \\n  \\n|Current Permission|Specified Permission|IsSubsetOf|  \\n|------------------------|--------------------------|----------------|  \\n|www.fourthcoffee.com|www.fourthcoffee.com|`true`|  \\n|www.fourthcoffee.com|www.tailspintoys.com|`false`|  \\n|www.fourthcoffee.com|*.fourthcoffee.com|`true`|  \\n|www.fourthcoffee.com|*.com|`true`|  \\n|*.fourthcoffee.com|www.fourthcoffee.com|`false`|  \\n|*.fourthcoffee.com|*.fourthcoffee.com|`true`|  \\n|*.fourthcoffee.com|*.com|`true`|  \\n|Anything except `None`|*|`true`|  \\n|`None`|Anything|`true`|\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is a subset of the specified permission; otherwise, `false`.'\n  overload: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not `null` and is not of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.SiteIdentityPermission.Site\n  commentId: P:System.Security.Permissions.SiteIdentityPermission.Site\n  id: Site\n  parent: System.Security.Permissions.SiteIdentityPermission\n  langs:\n  - csharp\n  name: Site\n  nameWithType: SiteIdentityPermission.Site\n  fullName: SiteIdentityPermission.Site\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the current site.\n  remarks: \"Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \\\"//\\\" after the protocol of a URL and the following \\\"/\\\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \\n  \\n Sites can be matched exactly, or by a wildcard (\\\"*\\\") prefix at the dot delimiter. For example, the site name string *.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string * will match any site, but will not match code that has no site evidence.\"\n  syntax:\n    content: public string Site { get; set; }\n    return:\n      type: System.String\n      description: The current site.\n  overload: System.Security.Permissions.SiteIdentityPermission.Site*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The site identity cannot be retrieved because it has an ambiguous identity.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.SiteIdentityPermission.ToXml\n  commentId: M:System.Security.Permissions.SiteIdentityPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.SiteIdentityPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: SiteIdentityPermission.ToXml()\n  fullName: SiteIdentityPermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.SiteIdentityPermission.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.SiteIdentityPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: SiteIdentityPermission.Union(IPermission)\n  fullName: SiteIdentityPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: \"The result of a call to <xref:System.Security.Permissions.SiteIdentityPermission.Union%2A> is a permission that represents all the sites represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. For example, the union of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to *.fourthcoffee.com.  \\n  \\n The union of a permission and `null` is the permission that is not `null`. The union of a permission and a subset of that permission is the permission that contains the subset. Any other combination results in an <xref:System.ArgumentException> being thrown. For example, the union of the site identity www.fourthcoffee.com and the site identity www.tailspintoys.com results in an exception because neither is a subset of the other.\"\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.SiteIdentityPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>target</code> parameter is not `null` and is not of the same type as the current permission.  \\n  \\n -or-  \\n  \\n The permissions are not equal and one is not a subset of the other.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: SiteIdentityPermission(PermissionState)\n  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)\n  fullName: SiteIdentityPermission.SiteIdentityPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: SiteIdentityPermission(String)\n  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)\n  fullName: SiteIdentityPermission.SiteIdentityPermission(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.SiteIdentityPermission.Copy\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: SiteIdentityPermission.Copy()\n  fullName: SiteIdentityPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)\n  fullName: SiteIdentityPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: SiteIdentityPermission.Intersect(IPermission)\n  fullName: SiteIdentityPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)\n  fullName: SiteIdentityPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.SiteIdentityPermission.Site\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: Site\n  nameWithType: SiteIdentityPermission.Site\n  fullName: SiteIdentityPermission.Site\n- uid: System.Security.Permissions.SiteIdentityPermission.ToXml\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: SiteIdentityPermission.ToXml()\n  fullName: SiteIdentityPermission.ToXml()\n- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: SiteIdentityPermission.Union(IPermission)\n  fullName: SiteIdentityPermission.Union(IPermission)\n- uid: System.Security.Permissions.SiteIdentityPermission.#ctor*\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: SiteIdentityPermission\n  nameWithType: SiteIdentityPermission.SiteIdentityPermission\n  fullName: SiteIdentityPermission.SiteIdentityPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n- uid: System.Security.Permissions.SiteIdentityPermission.Copy*\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: Copy\n  nameWithType: SiteIdentityPermission.Copy\n  fullName: SiteIdentityPermission.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n- uid: System.Security.Permissions.SiteIdentityPermission.FromXml*\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: SiteIdentityPermission.FromXml\n  fullName: SiteIdentityPermission.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n- uid: System.Security.Permissions.SiteIdentityPermission.Intersect*\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: SiteIdentityPermission.Intersect\n  fullName: SiteIdentityPermission.Intersect\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: SiteIdentityPermission.IsSubsetOf\n  fullName: SiteIdentityPermission.IsSubsetOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n- uid: System.Security.Permissions.SiteIdentityPermission.Site*\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: Site\n  nameWithType: SiteIdentityPermission.Site\n  fullName: SiteIdentityPermission.Site\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n- uid: System.Security.Permissions.SiteIdentityPermission.ToXml*\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: SiteIdentityPermission.ToXml\n  fullName: SiteIdentityPermission.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n- uid: System.Security.Permissions.SiteIdentityPermission.Union*\n  parent: System.Security.Permissions.SiteIdentityPermission\n  isExternal: false\n  name: Union\n  nameWithType: SiteIdentityPermission.Union\n  fullName: SiteIdentityPermission.Union\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/SiteIdentityPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n"}