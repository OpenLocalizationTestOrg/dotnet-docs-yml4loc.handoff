{"nodes":[{"content":"Represents a reflection context that has associated conventions that describe rules for decorating entities with Managed Extensibility Framework (MEF) attributes.","nodes":[{"pos":[0,162],"content":"Represents a reflection context that has associated conventions that describe rules for decorating entities with Managed Extensibility Framework (MEF) attributes.","nodes":[{"content":"Represents a reflection context that has associated conventions that describe rules for decorating entities with Managed Extensibility Framework (MEF) attributes.","pos":[0,162]}]}],"pos":[1586,1749],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Registration.RegistrationBuilder\"></xref> class.","nodes":[{"pos":[0,128],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Registration.RegistrationBuilder\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Registration.RegistrationBuilder\"></xref> class."}],"pos":[4309,4438],"yaml":true},{"content":"Gets an object that represents a rule that applies to the specified type.","nodes":[{"pos":[0,73],"content":"Gets an object that represents a rule that applies to the specified type.","nodes":[{"content":"Gets an object that represents a rule that applies to the specified type.","pos":[0,73]}]}],"pos":[5772,5846],"yaml":true},{"content":"The type.","nodes":[{"pos":[0,9],"content":"The type.","nodes":[{"content":"The type.","pos":[0,9]}]}],"pos":[6030,6040],"yaml":true},{"content":"An object that represents the rule.","nodes":[{"pos":[0,35],"content":"An object that represents the rule.","nodes":[{"content":"An object that represents the rule.","pos":[0,35]}]}],"pos":[6142,6178],"yaml":true},{"content":"Gets a strongly typed object that represents a rule that applies to the specified type.","nodes":[{"pos":[0,87],"content":"Gets a strongly typed object that represents a rule that applies to the specified type.","nodes":[{"content":"Gets a strongly typed object that represents a rule that applies to the specified type.","pos":[0,87]}]}],"pos":[7408,7496],"yaml":true},{"content":"The type.","nodes":[{"pos":[0,9],"content":"The type.","nodes":[{"content":"The type.","pos":[0,9]}]}],"pos":[7673,7683],"yaml":true},{"content":"A strongly typed object that represents the rule.","nodes":[{"pos":[0,49],"content":"A strongly typed object that represents the rule.","nodes":[{"content":"A strongly typed object that represents the rule.","pos":[0,49]}]}],"pos":[7787,7837],"yaml":true},{"content":"Gets an object that represents a rule applicable to all types that implement the specified type, but not applicable to the specified type.","nodes":[{"pos":[0,138],"content":"Gets an object that represents a rule applicable to all types that implement the specified type, but not applicable to the specified type.","nodes":[{"content":"Gets an object that represents a rule applicable to all types that implement the specified type, but not applicable to the specified type.","pos":[0,138]}]}],"pos":[9175,9314],"yaml":true},{"content":"The type.","nodes":[{"pos":[0,9],"content":"The type.","nodes":[{"content":"The type.","pos":[0,9]}]}],"pos":[9510,9520],"yaml":true},{"content":"An object that represents the rule.","nodes":[{"pos":[0,35],"content":"An object that represents the rule.","nodes":[{"content":"An object that represents the rule.","pos":[0,35]}]}],"pos":[9622,9658],"yaml":true},{"content":"Gets a strongly typed object that represents a rule applicable to all types that implement the specified type, but not applicable to the specified type.","nodes":[{"pos":[0,152],"content":"Gets a strongly typed object that represents a rule applicable to all types that implement the specified type, but not applicable to the specified type.","nodes":[{"content":"Gets a strongly typed object that represents a rule applicable to all types that implement the specified type, but not applicable to the specified type.","pos":[0,152]}]}],"pos":[10972,11125],"yaml":true},{"content":"The type.","nodes":[{"pos":[0,9],"content":"The type.","nodes":[{"content":"The type.","pos":[0,9]}]}],"pos":[11314,11324],"yaml":true},{"content":"A strongly typed object that represents the rule.","nodes":[{"pos":[0,49],"content":"A strongly typed object that represents the rule.","nodes":[{"content":"A strongly typed object that represents the rule.","pos":[0,49]}]}],"pos":[11428,11478],"yaml":true},{"content":"Gets an object that represents a rule applicable to all types that match the specified predicate.","nodes":[{"pos":[0,97],"content":"Gets an object that represents a rule applicable to all types that match the specified predicate.","nodes":[{"content":"Gets an object that represents a rule applicable to all types that match the specified predicate.","pos":[0,97]}]}],"pos":[12897,12995],"yaml":true},{"content":"The predicate to match.","nodes":[{"pos":[0,23],"content":"The predicate to match.","nodes":[{"content":"The predicate to match.","pos":[0,23]}]}],"pos":[13229,13253],"yaml":true},{"content":"An object that represents the rule.","nodes":[{"pos":[0,35],"content":"An object that represents the rule.","nodes":[{"content":"An object that represents the rule.","pos":[0,35]}]}],"pos":[13355,13391],"yaml":true},{"content":"Gets a strongly typed object that represents a rule applicable to all types that match the specified predicate.","nodes":[{"pos":[0,111],"content":"Gets a strongly typed object that represents a rule applicable to all types that match the specified predicate.","nodes":[{"content":"Gets a strongly typed object that represents a rule applicable to all types that match the specified predicate.","pos":[0,111]}]}],"pos":[14822,14934],"yaml":true},{"content":"The predicate to match.","nodes":[{"pos":[0,23],"content":"The predicate to match.","nodes":[{"content":"The predicate to match.","pos":[0,23]}]}],"pos":[15174,15198],"yaml":true},{"content":"The type of <xref href=\"System.ComponentModel.Composition.Registration.PartBuilder`1\"></xref> object to return.","nodes":[{"pos":[0,111],"content":"The type of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Registration.PartBuilder`1\"&gt;&lt;/xref&gt;</ph> object to return.","source":"The type of <xref href=\"System.ComponentModel.Composition.Registration.PartBuilder`1\"></xref> object to return."}],"pos":[15249,15361],"yaml":true},{"content":"A strongly typed object that represents the rule.","nodes":[{"pos":[0,49],"content":"A strongly typed object that represents the rule.","nodes":[{"content":"A strongly typed object that represents the rule.","pos":[0,49]}]}],"pos":[15465,15515],"yaml":true},{"content":"Provides a list of custom attributes for the specified member, as represented in this reflection context.","nodes":[{"pos":[0,105],"content":"Provides a list of custom attributes for the specified member, as represented in this reflection context.","nodes":[{"content":"Provides a list of custom attributes for the specified member, as represented in this reflection context.","pos":[0,105]}]}],"pos":[17156,17262],"yaml":true},{"content":"The member whose custom attributes will be returned.","nodes":[{"pos":[0,52],"content":"The member whose custom attributes will be returned.","nodes":[{"content":"The member whose custom attributes will be returned.","pos":[0,52]}]}],"pos":[17570,17623],"yaml":true},{"content":"A collection of the member's attributes in its current context.","nodes":[{"pos":[0,63],"content":"A collection of the member's attributes in its current context.","nodes":[{"content":"A collection of the member's attributes in its current context.","pos":[0,63]}]}],"pos":[17737,17801],"yaml":true},{"content":"A collection that represents the custom attributes of the specified member in this reflection context.","nodes":[{"pos":[0,102],"content":"A collection that represents the custom attributes of the specified member in this reflection context.","nodes":[{"content":"A collection that represents the custom attributes of the specified member in this reflection context.","pos":[0,102]}]}],"pos":[17898,18001],"yaml":true},{"content":"Provides a list of custom attributes for the specified parameter, as represented in this reflection context.","nodes":[{"pos":[0,108],"content":"Provides a list of custom attributes for the specified parameter, as represented in this reflection context.","nodes":[{"content":"Provides a list of custom attributes for the specified parameter, as represented in this reflection context.","pos":[0,108]}]}],"pos":[19660,19769],"yaml":true},{"content":"The parameter whose custom attributes will be returned.","nodes":[{"pos":[0,55],"content":"The parameter whose custom attributes will be returned.","nodes":[{"content":"The parameter whose custom attributes will be returned.","pos":[0,55]}]}],"pos":[20089,20145],"yaml":true},{"content":"A collection of the parameter's attributes in its current context.","nodes":[{"pos":[0,66],"content":"A collection of the parameter's attributes in its current context.","nodes":[{"content":"A collection of the parameter's attributes in its current context.","pos":[0,66]}]}],"pos":[20259,20326],"yaml":true},{"content":"A collection that represents the custom attributes of the specified parameter in this reflection context.","nodes":[{"pos":[0,105],"content":"A collection that represents the custom attributes of the specified parameter in this reflection context.","nodes":[{"content":"A collection that represents the custom attributes of the specified parameter in this reflection context.","pos":[0,105]}]}],"pos":[20423,20529],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  commentId: T:System.ComponentModel.Composition.Registration.RegistrationBuilder\n  id: RegistrationBuilder\n  children:\n  - System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor\n  - System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType(System.Type)\n  - System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1\n  - System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom(System.Type)\n  - System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1\n  - System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching(System.Predicate{System.Type})\n  - System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1(System.Predicate{System.Type})\n  - System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  - System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  langs:\n  - csharp\n  name: RegistrationBuilder\n  nameWithType: RegistrationBuilder\n  fullName: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Represents a reflection context that has associated conventions that describe rules for decorating entities with Managed Extensibility Framework (MEF) attributes.\n  syntax:\n    content: 'public class RegistrationBuilder : System.Reflection.Context.CustomReflectionContext'\n  inheritance:\n  - System.Object\n  - System.Reflection.ReflectionContext\n  - System.Reflection.Context.CustomReflectionContext\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)\n  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})\n  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})\n  - System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)\n  - System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)\n  - System.Reflection.ReflectionContext.GetTypeForObject(System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor\n  commentId: M:System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  langs:\n  - csharp\n  name: RegistrationBuilder()\n  nameWithType: RegistrationBuilder.RegistrationBuilder()\n  fullName: RegistrationBuilder.RegistrationBuilder()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Registration.RegistrationBuilder\"></xref> class.\n  syntax:\n    content: public RegistrationBuilder ();\n    parameters: []\n  overload: System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType(System.Type)\n  commentId: M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType(System.Type)\n  id: ForType(System.Type)\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  langs:\n  - csharp\n  name: ForType(Type)\n  nameWithType: RegistrationBuilder.ForType(Type)\n  fullName: RegistrationBuilder.ForType(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Gets an object that represents a rule that applies to the specified type.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ForType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: An object that represents the rule.\n  overload: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1\n  commentId: M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1\n  id: ForType``1\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  langs:\n  - csharp\n  name: ForType<T>()\n  nameWithType: RegistrationBuilder.ForType<T>()\n  fullName: RegistrationBuilder.ForType<T>()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Gets a strongly typed object that represents a rule that applies to the specified type.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ForType<T> ();\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The type.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: A strongly typed object that represents the rule.\n  overload: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom(System.Type)\n  commentId: M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom(System.Type)\n  id: ForTypesDerivedFrom(System.Type)\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  langs:\n  - csharp\n  name: ForTypesDerivedFrom(Type)\n  nameWithType: RegistrationBuilder.ForTypesDerivedFrom(Type)\n  fullName: RegistrationBuilder.ForTypesDerivedFrom(Type)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Gets an object that represents a rule applicable to all types that implement the specified type, but not applicable to the specified type.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ForTypesDerivedFrom (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: An object that represents the rule.\n  overload: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1\n  commentId: M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1\n  id: ForTypesDerivedFrom``1\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  langs:\n  - csharp\n  name: ForTypesDerivedFrom<T>()\n  nameWithType: RegistrationBuilder.ForTypesDerivedFrom<T>()\n  fullName: RegistrationBuilder.ForTypesDerivedFrom<T>()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Gets a strongly typed object that represents a rule applicable to all types that implement the specified type, but not applicable to the specified type.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ForTypesDerivedFrom<T> ();\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The type.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: A strongly typed object that represents the rule.\n  overload: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching(System.Predicate{System.Type})\n  commentId: M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching(System.Predicate{System.Type})\n  id: ForTypesMatching(System.Predicate{System.Type})\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  langs:\n  - csharp\n  name: ForTypesMatching(Predicate<Type>)\n  nameWithType: RegistrationBuilder.ForTypesMatching(Predicate<Type>)\n  fullName: RegistrationBuilder.ForTypesMatching(Predicate<Type>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Gets an object that represents a rule applicable to all types that match the specified predicate.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder ForTypesMatching (Predicate<Type> typeFilter);\n    parameters:\n    - id: typeFilter\n      type: System.Predicate{System.Type}\n      description: The predicate to match.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder\n      description: An object that represents the rule.\n  overload: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1(System.Predicate{System.Type})\n  commentId: M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1(System.Predicate{System.Type})\n  id: ForTypesMatching``1(System.Predicate{System.Type})\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  langs:\n  - csharp\n  name: ForTypesMatching<T>(Predicate<Type>)\n  nameWithType: RegistrationBuilder.ForTypesMatching<T>(Predicate<Type>)\n  fullName: RegistrationBuilder.ForTypesMatching<T>(Predicate<Type>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Gets a strongly typed object that represents a rule applicable to all types that match the specified predicate.\n  syntax:\n    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ForTypesMatching<T> (Predicate<Type> typeFilter);\n    parameters:\n    - id: typeFilter\n      type: System.Predicate{System.Type}\n      description: The predicate to match.\n    typeParameters:\n    - id: T\n      description: The type of <xref href=\"System.ComponentModel.Composition.Registration.PartBuilder`1\"></xref> object to return.\n    return:\n      type: System.ComponentModel.Composition.Registration.PartBuilder`1\n      description: A strongly typed object that represents the rule.\n  overload: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  commentId: M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  langs:\n  - csharp\n  name: GetCustomAttributes(MemberInfo, IEnumerable<Object>)\n  nameWithType: RegistrationBuilder.GetCustomAttributes(MemberInfo, IEnumerable<Object>)\n  fullName: RegistrationBuilder.GetCustomAttributes(MemberInfo, IEnumerable<Object>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Provides a list of custom attributes for the specified member, as represented in this reflection context.\n  syntax:\n    content: protected override System.Collections.Generic.IEnumerable<object> GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable<object> declaredAttributes);\n    parameters:\n    - id: member\n      type: System.Reflection.MemberInfo\n      description: The member whose custom attributes will be returned.\n    - id: declaredAttributes\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: A collection of the member's attributes in its current context.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: A collection that represents the custom attributes of the specified member in this reflection context.\n  overload: System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  commentId: M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  langs:\n  - csharp\n  name: GetCustomAttributes(ParameterInfo, IEnumerable<Object>)\n  nameWithType: RegistrationBuilder.GetCustomAttributes(ParameterInfo, IEnumerable<Object>)\n  fullName: RegistrationBuilder.GetCustomAttributes(ParameterInfo, IEnumerable<Object>)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition.Registration\n  namespace: System.ComponentModel.Composition.Registration\n  summary: Provides a list of custom attributes for the specified parameter, as represented in this reflection context.\n  syntax:\n    content: protected override System.Collections.Generic.IEnumerable<object> GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable<object> declaredAttributes);\n    parameters:\n    - id: parameter\n      type: System.Reflection.ParameterInfo\n      description: The parameter whose custom attributes will be returned.\n    - id: declaredAttributes\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: A collection of the parameter's attributes in its current context.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: A collection that represents the custom attributes of the specified parameter in this reflection context.\n  overload: System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Reflection.Context.CustomReflectionContext\n  parent: System.Reflection.Context\n  isExternal: false\n  name: CustomReflectionContext\n  nameWithType: CustomReflectionContext\n  fullName: System.Reflection.Context.CustomReflectionContext\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: RegistrationBuilder()\n  nameWithType: RegistrationBuilder.RegistrationBuilder()\n  fullName: RegistrationBuilder.RegistrationBuilder()\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType(System.Type)\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForType(Type)\n  nameWithType: RegistrationBuilder.ForType(Type)\n  fullName: RegistrationBuilder.ForType(Type)\n- uid: System.ComponentModel.Composition.Registration.PartBuilder\n  parent: System.ComponentModel.Composition.Registration\n  isExternal: false\n  name: PartBuilder\n  nameWithType: PartBuilder\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForType<T>()\n  nameWithType: RegistrationBuilder.ForType<T>()\n  fullName: RegistrationBuilder.ForType<T>()\n- uid: System.ComponentModel.Composition.Registration.PartBuilder`1\n  parent: System.ComponentModel.Composition.Registration\n  isExternal: false\n  name: PartBuilder<T>\n  nameWithType: PartBuilder<T>\n  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom(System.Type)\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForTypesDerivedFrom(Type)\n  nameWithType: RegistrationBuilder.ForTypesDerivedFrom(Type)\n  fullName: RegistrationBuilder.ForTypesDerivedFrom(Type)\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForTypesDerivedFrom<T>()\n  nameWithType: RegistrationBuilder.ForTypesDerivedFrom<T>()\n  fullName: RegistrationBuilder.ForTypesDerivedFrom<T>()\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching(System.Predicate{System.Type})\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForTypesMatching(Predicate<Type>)\n  nameWithType: RegistrationBuilder.ForTypesMatching(Predicate<Type>)\n  fullName: RegistrationBuilder.ForTypesMatching(Predicate<Type>)\n- uid: System.Predicate`1\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Predicate{System.Type}\n  parent: System\n  isExternal: false\n  name: Predicate<Type>\n  nameWithType: Predicate<Type>\n  fullName: System.Predicate<System.Type>\n  spec.csharp:\n  - uid: System.Predicate`1\n    name: Predicate\n    nameWithType: Predicate\n    fullName: System.Predicate\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1(System.Predicate{System.Type})\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForTypesMatching<T>(Predicate<Type>)\n  nameWithType: RegistrationBuilder.ForTypesMatching<T>(Predicate<Type>)\n  fullName: RegistrationBuilder.ForTypesMatching<T>(Predicate<Type>)\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, IEnumerable<Object>)\n  nameWithType: RegistrationBuilder.GetCustomAttributes(MemberInfo, IEnumerable<Object>)\n  fullName: RegistrationBuilder.GetCustomAttributes(MemberInfo, IEnumerable<Object>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.IEnumerable{System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Object>\n  nameWithType: IEnumerable<Object>\n  fullName: System.Collections.Generic.IEnumerable<System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, IEnumerable<Object>)\n  nameWithType: RegistrationBuilder.GetCustomAttributes(ParameterInfo, IEnumerable<Object>)\n  fullName: RegistrationBuilder.GetCustomAttributes(ParameterInfo, IEnumerable<Object>)\n- uid: System.Reflection.ParameterInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor*\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: RegistrationBuilder\n  nameWithType: RegistrationBuilder.RegistrationBuilder\n  fullName: RegistrationBuilder.RegistrationBuilder\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType*\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForType\n  nameWithType: RegistrationBuilder.ForType\n  fullName: RegistrationBuilder.ForType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1*\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForType<T>\n  nameWithType: RegistrationBuilder.ForType<T>\n  fullName: RegistrationBuilder.ForType<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom*\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForTypesDerivedFrom\n  nameWithType: RegistrationBuilder.ForTypesDerivedFrom\n  fullName: RegistrationBuilder.ForTypesDerivedFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1*\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForTypesDerivedFrom<T>\n  nameWithType: RegistrationBuilder.ForTypesDerivedFrom<T>\n  fullName: RegistrationBuilder.ForTypesDerivedFrom<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching*\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForTypesMatching\n  nameWithType: RegistrationBuilder.ForTypesMatching\n  fullName: RegistrationBuilder.ForTypesMatching\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1*\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: ForTypesMatching<T>\n  nameWithType: RegistrationBuilder.ForTypesMatching<T>\n  fullName: RegistrationBuilder.ForTypesMatching<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n- uid: System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes*\n  parent: System.ComponentModel.Composition.Registration.RegistrationBuilder\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: RegistrationBuilder.GetCustomAttributes\n  fullName: RegistrationBuilder.GetCustomAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Registration/RegistrationBuilder.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)\n  parent: System.Reflection.ReflectionContext\n  isExternal: false\n  name: GetTypeForObject(Object)\n  nameWithType: ReflectionContext.GetTypeForObject(Object)\n  fullName: ReflectionContext.GetTypeForObject(Object)\n- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: MapAssembly(Assembly)\n  nameWithType: CustomReflectionContext.MapAssembly(Assembly)\n  fullName: CustomReflectionContext.MapAssembly(Assembly)\n- uid: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: MapType(TypeInfo)\n  nameWithType: CustomReflectionContext.MapType(TypeInfo)\n  fullName: CustomReflectionContext.MapType(TypeInfo)\n- uid: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: AddProperties(Type)\n  nameWithType: CustomReflectionContext.AddProperties(Type)\n  fullName: CustomReflectionContext.AddProperties(Type)\n- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: CreateProperty(Type, String, Func<Object,Object>, Action<Object,Object>)\n  nameWithType: CustomReflectionContext.CreateProperty(Type, String, Func<Object,Object>, Action<Object,Object>)\n  fullName: CustomReflectionContext.CreateProperty(Type, String, Func<Object,Object>, Action<Object,Object>)\n- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})\n  parent: System.Reflection.Context.CustomReflectionContext\n  isExternal: false\n  name: CreateProperty(Type, String, Func<Object,Object>, Action<Object,Object>, IEnumerable<Attribute>, IEnumerable<Attribute>, IEnumerable<Attribute>)\n  nameWithType: CustomReflectionContext.CreateProperty(Type, String, Func<Object,Object>, Action<Object,Object>, IEnumerable<Attribute>, IEnumerable<Attribute>, IEnumerable<Attribute>)\n  fullName: CustomReflectionContext.CreateProperty(Type, String, Func<Object,Object>, Action<Object,Object>, IEnumerable<Attribute>, IEnumerable<Attribute>, IEnumerable<Attribute>)\n"}