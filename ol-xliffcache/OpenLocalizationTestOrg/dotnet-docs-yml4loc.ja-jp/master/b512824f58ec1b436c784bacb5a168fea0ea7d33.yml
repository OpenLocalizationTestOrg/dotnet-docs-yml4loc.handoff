### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  commentId: T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  id: SortedDictionary`2.ValueCollection.Enumerator
  children:
  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current
  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose
  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext
  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current
  - System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset
  langs:
  - csharp
  name: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator
  fullName: System.Collections.Generic.SortedDictionary<TKey,TValue>.ValueCollection.Enumerator
  type: Struct
  assemblies:
  - System.Collections
  - System
  - netstandard
  namespace: System.Collections.Generic
  summary: Enumerates the elements of a <xref href="System.Collections.Generic.SortedDictionary`2.ValueCollection"></xref>.
  remarks: "The `foreach` statement of the C# (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator. This type implements the  \n  \n> [!IMPORTANT]\n>  <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n  \n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. At this position, the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.Current%2A> property is undefined. Therefore, you must call the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.Current%2A>.  \n  \n The <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> is called. <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.Current%2A> to the next element.  \n  \n If <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.Current%2A> is undefined. You cannot set <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \n  \n Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=fullName> namespace are not synchronized."
  syntax:
    content: 'public struct SortedDictionary<TKey,TValue>.ValueCollection.Enumerator : System.Collections.Generic.IEnumerator<TValue>'
    typeParameters:
    - id: TKey
      description: ''
    - id: TValue
      description: ''
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.Collections.Generic.IEnumerator{TValue}
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedDictionary`2+ValueCollection+Enumerator.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current
  commentId: P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current
  id: Current
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  langs:
  - csharp
  name: Current
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Current
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Current
  type: Property
  assemblies:
  - System.Collections
  - System
  - netstandard
  namespace: System.Collections.Generic
  summary: Gets the element at the current position of the enumerator.
  remarks: "The <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.Current%2A> property is undefined under any of the following conditions:  \n  \n-   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.  The <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.Current%2A>.  \n  \n-   The last call to <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.  \n  \n The <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> is called. <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.Current%2A> to the next element. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.  \n  \n> [!NOTE]\n>  For better performance, this property does not throw an exception if the enumerator is positioned before the first element or after the last element; the value of the property is undefined."
  syntax:
    content: public TValue Current { get; }
    return:
      type: TValue
      description: The element in the <xref href="System.Collections.Generic.SortedDictionary`2.ValueCollection"></xref> at the current position of the enumerator.
  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedDictionary`2+ValueCollection+Enumerator.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose
  commentId: M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose
  id: Dispose
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  langs:
  - csharp
  name: Dispose()
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Dispose()
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Dispose()
  type: Method
  assemblies:
  - System.Collections
  - System
  - netstandard
  namespace: System.Collections.Generic
  summary: Releases all resources used by the <xref href="System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator"></xref>.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedDictionary`2+ValueCollection+Enumerator.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext
  commentId: M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.MoveNext()
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.MoveNext()
  type: Method
  assemblies:
  - System.Collections
  - System
  - netstandard
  namespace: System.Collections.Generic
  summary: Advances the enumerator to the next element of the <xref href="System.Collections.Generic.SortedDictionary`2.ValueCollection"></xref>.
  remarks: "After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> method advances the enumerator to the first element of the collection.  \n  \n If <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> also return `false`.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated."
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.'
  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The collection was modified after the enumerator was created.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedDictionary`2+ValueCollection+Enumerator.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current
  commentId: P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  langs:
  - csharp
  name: IEnumerator.Current
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.IEnumerator.Current
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.IEnumerator.Current
  type: Property
  assemblies:
  - System.Collections
  - System
  - netstandard
  namespace: System.Collections.Generic
  summary: Gets the element at the current position of the enumerator.
  remarks: "The <xref:System.Collections.IEnumerator.Current%2A> property is undefined under any of the following conditions:  \n  \n-   The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or immediately after the <xref:System.Collections.IEnumerator.Reset%2A> method is called.  The <xref:System.Collections.IEnumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \n  \n-   The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.  \n  \n The <xref:System.Collections.IEnumerator.Current%2A> property returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element. If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated."
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: The element in the collection at the current position of the enumerator.
  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The enumerator is positioned before the first element of the collection or after the last element.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedDictionary`2+ValueCollection+Enumerator.xml
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset
  commentId: M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset
  id: System#Collections#IEnumerator#Reset
  isEii: true
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  langs:
  - csharp
  name: IEnumerator.Reset()
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.IEnumerator.Reset()
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.IEnumerator.Reset()
  type: Method
  assemblies:
  - System.Collections
  - System
  - netstandard
  namespace: System.Collections.Generic
  summary: Sets the enumerator to its initial position, which is before the first element in the collection.
  remarks: "After calling the <xref:System.Collections.IEnumerator.Reset%2A> method, you must call the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection.Enumerator.Current%2A> property.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated."
  syntax:
    content: void IEnumerator.Reset ();
    parameters: []
  overload: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The collection was modified after the enumerator was created.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedDictionary`2+ValueCollection+Enumerator.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  isExternal: false
  name: Current
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Current
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Current
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  isExternal: false
  name: Dispose()
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Dispose()
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Dispose()
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  isExternal: false
  name: MoveNext()
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.MoveNext()
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  isExternal: false
  name: IEnumerator.Current
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.IEnumerator.Current
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.IEnumerator.Current
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  isExternal: false
  name: IEnumerator.Reset()
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.IEnumerator.Reset()
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.IEnumerator.Reset()
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current*
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  isExternal: false
  name: Current
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Current
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Current
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedDictionary`2+ValueCollection+Enumerator.xml
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose*
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  isExternal: false
  name: Dispose
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Dispose
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedDictionary`2+ValueCollection+Enumerator.xml
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext*
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  isExternal: false
  name: MoveNext
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.MoveNext
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.MoveNext
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedDictionary`2+ValueCollection+Enumerator.xml
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current*
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.System.Collections.IEnumerator.Current
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.System.Collections.IEnumerator.Current
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedDictionary`2+ValueCollection+Enumerator.xml
- uid: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset*
  parent: System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator
  isExternal: false
  name: System.Collections.IEnumerator.Reset
  nameWithType: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.System.Collections.IEnumerator.Reset
  fullName: SortedDictionary<TKey,TValue>.ValueCollection.Enumerator.System.Collections.IEnumerator.Reset
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/SortedDictionary`2+ValueCollection+Enumerator.xml
- uid: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
- uid: System.Collections.Generic.IEnumerator{TValue}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<TValue>
  nameWithType: IEnumerator<TValue>
  fullName: System.Collections.Generic.IEnumerator<TValue>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
