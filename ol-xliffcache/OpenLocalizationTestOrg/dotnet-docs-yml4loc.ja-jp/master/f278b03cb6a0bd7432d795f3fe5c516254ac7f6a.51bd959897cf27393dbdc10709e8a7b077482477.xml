{"nodes":[{"content":"Models the throwing of an exception. This class cannot be inherited.","nodes":[{"pos":[0,68],"content":"Models the throwing of an exception. This class cannot be inherited.","nodes":[{"content":"Models the throwing of an exception. This class cannot be inherited.","pos":[0,68],"nodes":[{"content":"Models the throwing of an exception.","pos":[0,36]},{"content":"This class cannot be inherited.","pos":[37,68]}]}]}],"pos":[1595,1664],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n The purpose of the <xref:System.Workflow.ComponentModel.ThrowActivity> is to allow declarative modeling of the throwing of an exception. The <xref:System.Workflow.ComponentModel.ThrowActivity> is functionally equivalent to a <xref:System.Workflow.Activities.CodeActivity> activity whose code-beside handler throws the indicated exception.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,423],"content":"The purpose of the <xref:System.Workflow.ComponentModel.ThrowActivity> is to allow declarative modeling of the throwing of an exception. The <xref:System.Workflow.ComponentModel.ThrowActivity> is functionally equivalent to a <xref:System.Workflow.Activities.CodeActivity> activity whose code-beside handler throws the indicated exception.","nodes":[{"content":"The purpose of the <xref:System.Workflow.ComponentModel.ThrowActivity> is to allow declarative modeling of the throwing of an exception. The <xref:System.Workflow.ComponentModel.ThrowActivity> is functionally equivalent to a <xref:System.Workflow.Activities.CodeActivity> activity whose code-beside handler throws the indicated exception.","pos":[0,338],"nodes":[{"content":"The purpose of the <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.ThrowActivity&gt;</ph> is to allow declarative modeling of the throwing of an exception.","pos":[0,136],"source":"The purpose of the <xref:System.Workflow.ComponentModel.ThrowActivity> is to allow declarative modeling of the throwing of an exception."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.ThrowActivity&gt;</ph> is functionally equivalent to a <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.CodeActivity&gt;</ph> activity whose code-beside handler throws the indicated exception.","pos":[137,338],"source":" The <xref:System.Workflow.ComponentModel.ThrowActivity> is functionally equivalent to a <xref:System.Workflow.Activities.CodeActivity> activity whose code-beside handler throws the indicated exception."}]}]}],"pos":[1675,2104],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ThrowActivity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref> class."}],"pos":[10735,10842],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref> class, and initializes its name.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ThrowActivity\"&gt;&lt;/xref&gt;</ph> class, and initializes its name.","source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref> class, and initializes its name."}],"pos":[12614,12747],"yaml":true},{"content":"The user-defined name of the activity.","nodes":[{"pos":[0,38],"content":"The user-defined name of the activity.","nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]}],"pos":[12882,12921],"yaml":true},{"content":"<code>identifier</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">&lt;code&gt;identifier&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>identifier</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[13101,13174],"yaml":true},{"content":"Gets or sets the exception object that should be thrown by the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref>.","nodes":[{"pos":[0,129],"content":"Gets or sets the exception object that should be thrown by the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ThrowActivity\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the exception object that should be thrown by the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref>."}],"pos":[15706,15836],"yaml":true},{"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.","nodes":[{"pos":[0,245],"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.","nodes":[{"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.","pos":[0,123]},{"content":"This dependency property is the public static field named <ph id=\"ph1\">`XProperty`</ph> or <ph id=\"ph2\">`XEvent`</ph>, where X is the corresponding property.","pos":[124,245],"source":" This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property."}]}],"pos":[15847,16093],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Exception\"></xref> associated with this instance.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> associated with this instance.","source":"The <xref href=\"System.Exception\"></xref> associated with this instance."}],"pos":[16336,16409],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> representing the <xref href=\"System.Workflow.ComponentModel.ThrowActivity.Fault\"></xref> property for this instance.","nodes":[{"pos":[0,191],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> representing the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.ThrowActivity.Fault\"&gt;&lt;/xref&gt;</ph> property for this instance.","source":"The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> representing the <xref href=\"System.Workflow.ComponentModel.ThrowActivity.Fault\"></xref> property for this instance."}],"pos":[17521,17713],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[17724,17806],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the type of exception that should be thrown by the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref>.","nodes":[{"pos":[0,130],"content":"Gets or sets the type of exception that should be thrown by the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ThrowActivity\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the type of exception that should be thrown by the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref>."}],"pos":[19093,19224],"yaml":true},{"content":"The type representing the fault associated with this instance.","nodes":[{"pos":[0,62],"content":"The type representing the fault associated with this instance.","nodes":[{"content":"The type representing the fault associated with this instance.","pos":[0,62]}]}],"pos":[20139,20202],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> representing the <xref href=\"System.Workflow.ComponentModel.ThrowActivity.FaultType\"></xref> property for this instance.","nodes":[{"pos":[0,195],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> representing the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.ThrowActivity.FaultType\"&gt;&lt;/xref&gt;</ph> property for this instance.","source":"The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> representing the <xref href=\"System.Workflow.ComponentModel.ThrowActivity.FaultType\"></xref> property for this instance."}],"pos":[21342,21538],"yaml":true},{"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.  \n  \n [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[{"pos":[0,245],"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.","nodes":[{"content":"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.","pos":[0,123]},{"content":"This dependency property is the public static field named <ph id=\"ph1\">`XProperty`</ph> or <ph id=\"ph2\">`XEvent`</ph>, where X is the corresponding property.","pos":[124,245],"source":" This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property."}]}],"pos":[21549,21885],"yaml":true,"extradata":"MT"},{"content":"Returns a value that indicates whether the specified <xref href=\"System.Type\"></xref> can be filtered.","nodes":[{"pos":[0,102],"content":"Returns a value that indicates whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> can be filtered.","source":"Returns a value that indicates whether the specified <xref href=\"System.Type\"></xref> can be filtered."}],"pos":[24849,24952],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> to check for filtering","nodes":[{"pos":[0,59],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to check for filtering","source":"The <xref href=\"System.Type\"></xref> to check for filtering"}],"pos":[25120,25180],"yaml":true},{"content":"`true` to throw an exception when the <xref href=\"System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)\"></xref> is processed; otherwise, `false`.","nodes":[{"pos":[0,192],"content":"<ph id=\"ph1\">`true`</ph> to throw an exception when the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)\"&gt;&lt;/xref&gt;</ph> is processed; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to throw an exception when the <xref href=\"System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)\"></xref> is processed; otherwise, `false`."}],"pos":[25249,25444],"yaml":true},{"content":"`true` if the specified type can be filtered; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the specified type can be filtered; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified type can be filtered; otherwise, `false`."}],"pos":[25502,25570],"yaml":true},{"content":"Gets the description for the filter to be displayed on the class browser dialog box.","nodes":[{"pos":[0,84],"content":"Gets the description for the filter to be displayed on the class browser dialog box.","nodes":[{"content":"Gets the description for the filter to be displayed on the class browser dialog box.","pos":[0,84]}]}],"pos":[26954,27039],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the description of the filter.","nodes":[{"pos":[0,81],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the description of the filter.","source":"A <xref href=\"System.String\"></xref> that contains the description of the filter."}],"pos":[27211,27293],"yaml":true},{"content":"Returns the access type for the specified property.","nodes":[{"pos":[0,51],"content":"Returns the access type for the specified property.","nodes":[{"content":"Returns the access type for the specified property.","pos":[0,51]}]}],"pos":[28883,28935],"yaml":true},{"content":"Used at compile time to validate if the properties are correctly bound to one other. Without this interface this information is inferred directly from property getter/setters.","nodes":[{"pos":[0,175],"content":"Used at compile time to validate if the properties are correctly bound to one other. Without this interface this information is inferred directly from property getter/setters.","nodes":[{"content":"Used at compile time to validate if the properties are correctly bound to one other. Without this interface this information is inferred directly from property getter/setters.","pos":[0,175],"nodes":[{"content":"Used at compile time to validate if the properties are correctly bound to one other.","pos":[0,84]},{"content":"Without this interface this information is inferred directly from property getter/setters.","pos":[85,175]}]}]}],"pos":[28946,29122],"yaml":true,"extradata":"MT"},{"content":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are needed.","nodes":[{"pos":[0,132],"content":"An object that implements <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph> to provide access to design time services if they are needed.","source":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are needed."}],"pos":[29394,29527],"yaml":true},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[29595,29621],"yaml":true},{"content":"An <xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"></xref> enumeration value denoting the access level of the property.","nodes":[{"pos":[0,136],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"&gt;&lt;/xref&gt;</ph> enumeration value denoting the access level of the property.","source":"An <xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"></xref> enumeration value denoting the access level of the property."}],"pos":[29716,29853],"yaml":true},{"content":"Returns the <xref href=\"System.Type\"></xref> of the specified property.","nodes":[{"pos":[0,71],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the specified property.","source":"Returns the <xref href=\"System.Type\"></xref> of the specified property."}],"pos":[31453,31525],"yaml":true},{"content":"Used at compile time to validate if the properties are correctly bound to one other.","nodes":[{"pos":[0,84],"content":"Used at compile time to validate if the properties are correctly bound to one other.","nodes":[{"content":"Used at compile time to validate if the properties are correctly bound to one other.","pos":[0,84]}]}],"pos":[31536,31621],"yaml":true,"extradata":"MT"},{"content":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are needed.","nodes":[{"pos":[0,132],"content":"An object that implements <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph> to provide access to design time services if they are needed.","source":"An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are needed."}],"pos":[31848,31981],"yaml":true},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[32049,32075],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> for the property whose name is passed as the <code>propertyName</code> parameter.","nodes":[{"pos":[0,118],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> for the property whose name is passed as the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">propertyName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The <xref href=\"System.Type\"></xref> for the property whose name is passed as the <code>propertyName</code> parameter."}],"pos":[32130,32249],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.ComponentModel.ThrowActivity\n  commentId: T:System.Workflow.ComponentModel.ThrowActivity\n  id: ThrowActivity\n  children:\n  - System.Workflow.ComponentModel.ThrowActivity.#ctor\n  - System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)\n  - System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.ThrowActivity.Fault\n  - System.Workflow.ComponentModel.ThrowActivity.FaultProperty\n  - System.Workflow.ComponentModel.ThrowActivity.FaultType\n  - System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty\n  - System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)\n  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription\n  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  - System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  langs:\n  - csharp\n  name: ThrowActivity\n  nameWithType: ThrowActivity\n  fullName: System.Workflow.ComponentModel.ThrowActivity\n  type: Class\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Models the throwing of an exception. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n The purpose of the <xref:System.Workflow.ComponentModel.ThrowActivity> is to allow declarative modeling of the throwing of an exception. The <xref:System.Workflow.ComponentModel.ThrowActivity> is functionally equivalent to a <xref:System.Workflow.Activities.CodeActivity> activity whose code-beside handler throws the indicated exception.\"\n  example:\n  - \"The following code shows the use of a single throw activity in a workflow to implement exception handling. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \\n  \\n [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]\\n [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]\"\n  syntax:\n    content: >-\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.ThrowActivity), \"Resources.Throw.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public sealed class ThrowActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.Design.ITypeFilterProvider, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  implements:\n  - System.Workflow.ComponentModel.Design.ITypeFilterProvider\n  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  attributes:\n  - type: System.Drawing.ToolboxBitmapAttribute\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor\n  commentId: M:System.Workflow.ComponentModel.ThrowActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: ThrowActivity()\n  nameWithType: ThrowActivity.ThrowActivity()\n  fullName: ThrowActivity.ThrowActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code shows the use of a single throw activity in a workflow to implement exception handling. This example includes invoking the constructor. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \\n  \\n [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]\\n [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]\"\n  syntax:\n    content: public ThrowActivity ();\n    parameters: []\n  overload: System.Workflow.ComponentModel.ThrowActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)\n  commentId: M:System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: ThrowActivity(String)\n  nameWithType: ThrowActivity.ThrowActivity(String)\n  fullName: ThrowActivity.ThrowActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref> class, and initializes its name.\n  syntax:\n    content: public ThrowActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.ComponentModel.ThrowActivity.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>identifier</code> is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  commentId: M:System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ThrowActivity.Execute(ActivityExecutionContext)\n  fullName: ThrowActivity.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: ''\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: ''\n  overload: System.Workflow.ComponentModel.ThrowActivity.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n- uid: System.Workflow.ComponentModel.ThrowActivity.Fault\n  commentId: P:System.Workflow.ComponentModel.ThrowActivity.Fault\n  id: Fault\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: Fault\n  nameWithType: ThrowActivity.Fault\n  fullName: ThrowActivity.Fault\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets or sets the exception object that should be thrown by the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref>.\n  remarks: You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.ThrowActivity/FaultConverter))]\n\n      public Exception Fault { get; set; }\n    return:\n      type: System.Exception\n      description: The <xref href=\"System.Exception\"></xref> associated with this instance.\n  overload: System.Workflow.ComponentModel.ThrowActivity.Fault*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ThrowActivity.FaultProperty\n  commentId: F:System.Workflow.ComponentModel.ThrowActivity.FaultProperty\n  id: FaultProperty\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: FaultProperty\n  nameWithType: ThrowActivity.FaultProperty\n  fullName: ThrowActivity.FaultProperty\n  type: Field\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> representing the <xref href=\"System.Workflow.ComponentModel.ThrowActivity.Fault\"></xref> property for this instance.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public static readonly System.Workflow.ComponentModel.DependencyProperty FaultProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ThrowActivity.FaultType\n  commentId: P:System.Workflow.ComponentModel.ThrowActivity.FaultType\n  id: FaultType\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: FaultType\n  nameWithType: ThrowActivity.FaultType\n  fullName: ThrowActivity.FaultType\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets or sets the type of exception that should be thrown by the <xref href=\"System.Workflow.ComponentModel.ThrowActivity\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code shows the usage of a single throw activity within a workflow to implement exception handling. This example shows setting the <xref:System.Workflow.ComponentModel.ThrowActivity.FaultType%2A> to `null`. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using Throw](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \\n  \\n [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]\\n [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.ThrowActivity/FaultTypeConverter))]\n\n      public Type FaultType { get; set; }\n    return:\n      type: System.Type\n      description: The type representing the fault associated with this instance.\n  overload: System.Workflow.ComponentModel.ThrowActivity.FaultType*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty\n  commentId: F:System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty\n  id: FaultTypeProperty\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: FaultTypeProperty\n  nameWithType: ThrowActivity.FaultTypeProperty\n  fullName: ThrowActivity.FaultTypeProperty\n  type: Field\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: The <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> representing the <xref href=\"System.Workflow.ComponentModel.ThrowActivity.FaultType\"></xref> property for this instance.\n  remarks: \"You indirectly access each public property and event of this type by the resolution of a corresponding dependency property. This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.  \\n  \\n [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public static readonly System.Workflow.ComponentModel.DependencyProperty FaultTypeProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)\n  commentId: M:System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)\n  id: Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: Initialize(IServiceProvider)\n  nameWithType: ThrowActivity.Initialize(IServiceProvider)\n  fullName: ThrowActivity.Initialize(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  syntax:\n    content: protected override void Initialize (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: ''\n  overload: System.Workflow.ComponentModel.ThrowActivity.Initialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)\n  commentId: M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)\n  id: System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: ITypeFilterProvider.CanFilterType(Type, Boolean)\n  nameWithType: ThrowActivity.ITypeFilterProvider.CanFilterType(Type, Boolean)\n  fullName: ThrowActivity.ITypeFilterProvider.CanFilterType(Type, Boolean)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Returns a value that indicates whether the specified <xref href=\"System.Type\"></xref> can be filtered.\n  syntax:\n    content: bool ITypeFilterProvider.CanFilterType (Type type, bool throwOnError);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to check for filtering\n    - id: throwOnError\n      type: System.Boolean\n      description: '`true` to throw an exception when the <xref href=\"System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)\"></xref> is processed; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if the specified type can be filtered; otherwise, `false`.'\n  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription\n  commentId: P:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription\n  id: System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription\n  isEii: true\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: ITypeFilterProvider.FilterDescription\n  nameWithType: ThrowActivity.ITypeFilterProvider.FilterDescription\n  fullName: ThrowActivity.ITypeFilterProvider.FilterDescription\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the description for the filter to be displayed on the class browser dialog box.\n  syntax:\n    content: string System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the description of the filter.\n  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  commentId: M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  nameWithType: ThrowActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  fullName: ThrowActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Returns the access type for the specified property.\n  remarks: Used at compile time to validate if the properties are correctly bound to one other. Without this interface this information is inferred directly from property getter/setters.\n  syntax:\n    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are needed.\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    return:\n      type: System.Workflow.ComponentModel.Compiler.AccessTypes\n      description: An <xref href=\"System.Workflow.ComponentModel.Compiler.AccessTypes\"></xref> enumeration value denoting the access level of the property.\n  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  commentId: M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  langs:\n  - csharp\n  name: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  nameWithType: ThrowActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  fullName: ThrowActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Returns the <xref href=\"System.Type\"></xref> of the specified property.\n  remarks: Used at compile time to validate if the properties are correctly bound to one other.\n  syntax:\n    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: An object that implements <xref href=\"System.IServiceProvider\"></xref> to provide access to design time services if they are needed.\n    - id: propertyName\n      type: System.String\n      description: The name of the property.\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> for the property whose name is passed as the <code>propertyName</code> parameter.\n  overload: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: ThrowActivity()\n  nameWithType: ThrowActivity.ThrowActivity()\n  fullName: ThrowActivity.ThrowActivity()\n- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: ThrowActivity(String)\n  nameWithType: ThrowActivity.ThrowActivity(String)\n  fullName: ThrowActivity.ThrowActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ThrowActivity.Execute(ActivityExecutionContext)\n  fullName: ThrowActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.ComponentModel.ThrowActivity.Fault\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: Fault\n  nameWithType: ThrowActivity.Fault\n  fullName: ThrowActivity.Fault\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Workflow.ComponentModel.ThrowActivity.FaultProperty\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: FaultProperty\n  nameWithType: ThrowActivity.FaultProperty\n  fullName: ThrowActivity.FaultProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.ComponentModel.ThrowActivity.FaultType\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: FaultType\n  nameWithType: ThrowActivity.FaultType\n  fullName: ThrowActivity.FaultType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: FaultTypeProperty\n  nameWithType: ThrowActivity.FaultTypeProperty\n  fullName: ThrowActivity.FaultTypeProperty\n- uid: System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: ThrowActivity.Initialize(IServiceProvider)\n  fullName: ThrowActivity.Initialize(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: ITypeFilterProvider.CanFilterType(Type, Boolean)\n  nameWithType: ThrowActivity.ITypeFilterProvider.CanFilterType(Type, Boolean)\n  fullName: ThrowActivity.ITypeFilterProvider.CanFilterType(Type, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: ITypeFilterProvider.FilterDescription\n  nameWithType: ThrowActivity.ITypeFilterProvider.FilterDescription\n  fullName: ThrowActivity.ITypeFilterProvider.FilterDescription\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  nameWithType: ThrowActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n  fullName: ThrowActivity.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider, String)\n- uid: System.Workflow.ComponentModel.Compiler.AccessTypes\n  parent: System.Workflow.ComponentModel.Compiler\n  isExternal: false\n  name: AccessTypes\n  nameWithType: AccessTypes\n  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  nameWithType: ThrowActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n  fullName: ThrowActivity.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider, String)\n- uid: System.Workflow.ComponentModel.ThrowActivity.#ctor*\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: ThrowActivity\n  nameWithType: ThrowActivity.ThrowActivity\n  fullName: ThrowActivity.ThrowActivity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n- uid: System.Workflow.ComponentModel.ThrowActivity.Execute*\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: Execute\n  nameWithType: ThrowActivity.Execute\n  fullName: ThrowActivity.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n- uid: System.Workflow.ComponentModel.ThrowActivity.Fault*\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: Fault\n  nameWithType: ThrowActivity.Fault\n  fullName: ThrowActivity.Fault\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n- uid: System.Workflow.ComponentModel.ThrowActivity.FaultType*\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: FaultType\n  nameWithType: ThrowActivity.FaultType\n  fullName: ThrowActivity.FaultType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n- uid: System.Workflow.ComponentModel.ThrowActivity.Initialize*\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: Initialize\n  nameWithType: ThrowActivity.Initialize\n  fullName: ThrowActivity.Initialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType*\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType\n  nameWithType: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType\n  fullName: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription*\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription\n  nameWithType: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription\n  fullName: ThrowActivity.System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType\n  nameWithType: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType\n  fullName: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n- uid: System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*\n  parent: System.Workflow.ComponentModel.ThrowActivity\n  isExternal: false\n  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType\n  nameWithType: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType\n  fullName: ThrowActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ThrowActivity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Workflow.ComponentModel.Activity.ToString\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: AddHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.AddHandler(DependencyProperty, Object)\n  fullName: DependencyObject.AddHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: DesignMode\n  nameWithType: DependencyObject.DesignMode\n  fullName: DependencyObject.DesignMode\n- uid: System.Workflow.ComponentModel.DependencyObject.Dispose\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Dispose()\n  nameWithType: DependencyObject.Dispose()\n  fullName: DependencyObject.Dispose()\n- uid: System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DependencyObject.Dispose(Boolean)\n  fullName: DependencyObject.Dispose(Boolean)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBinding(DependencyProperty)\n  nameWithType: DependencyObject.GetBinding(DependencyProperty)\n  fullName: DependencyObject.GetBinding(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBoundValue(ActivityBind, Type)\n  nameWithType: DependencyObject.GetBoundValue(ActivityBind, Type)\n  fullName: DependencyObject.GetBoundValue(ActivityBind, Type)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetInvocationList<T>(DependencyProperty)\n  nameWithType: DependencyObject.GetInvocationList<T>(DependencyProperty)\n  fullName: DependencyObject.GetInvocationList<T>(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValueBase(DependencyProperty)\n  nameWithType: DependencyObject.GetValueBase(DependencyProperty)\n  fullName: DependencyObject.GetValueBase(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: InitializeProperties()\n  nameWithType: DependencyObject.InitializeProperties()\n  fullName: DependencyObject.InitializeProperties()\n- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: IsBindingSet(DependencyProperty)\n  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)\n  fullName: DependencyObject.IsBindingSet(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: MetaEquals(DependencyObject)\n  nameWithType: DependencyObject.MetaEquals(DependencyObject)\n  fullName: DependencyObject.MetaEquals(DependencyObject)\n- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: ParentDependencyObject\n  nameWithType: DependencyObject.ParentDependencyObject\n  fullName: DependencyObject.ParentDependencyObject\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.RemoveHandler(DependencyProperty, Object)\n  fullName: DependencyObject.RemoveHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveProperty(DependencyProperty)\n  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)\n  fullName: DependencyObject.RemoveProperty(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBinding(DependencyProperty, ActivityBind)\n  nameWithType: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n  fullName: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBoundValue(ActivityBind, Object)\n  nameWithType: DependencyObject.SetBoundValue(ActivityBind, Object)\n  fullName: DependencyObject.SetBoundValue(ActivityBind, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetReadOnlyPropertyValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValueBase(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValueBase(DependencyProperty, Object)\n  fullName: DependencyObject.SetValueBase(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.Site\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Site\n  nameWithType: DependencyObject.Site\n  fullName: DependencyObject.Site\n- uid: System.Workflow.ComponentModel.DependencyObject.UserData\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: UserData\n  nameWithType: DependencyObject.UserData\n  fullName: DependencyObject.UserData\n- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ActivityContextGuidProperty\n  nameWithType: Activity.ActivityContextGuidProperty\n  fullName: Activity.ActivityContextGuidProperty\n- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: Activity.Cancel(ActivityExecutionContext)\n  fullName: Activity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.Activity.Canceling\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Canceling\n  nameWithType: Activity.Canceling\n  fullName: Activity.Canceling\n- uid: System.Workflow.ComponentModel.Activity.CancelingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CancelingEvent\n  nameWithType: Activity.CancelingEvent\n  fullName: Activity.CancelingEvent\n- uid: System.Workflow.ComponentModel.Activity.Clone\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Clone()\n  nameWithType: Activity.Clone()\n  fullName: Activity.Clone()\n- uid: System.Workflow.ComponentModel.Activity.Closed\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Closed\n  nameWithType: Activity.Closed\n  fullName: Activity.Closed\n- uid: System.Workflow.ComponentModel.Activity.ClosedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ClosedEvent\n  nameWithType: Activity.ClosedEvent\n  fullName: Activity.ClosedEvent\n- uid: System.Workflow.ComponentModel.Activity.Compensating\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Compensating\n  nameWithType: Activity.Compensating\n  fullName: Activity.Compensating\n- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CompensatingEvent\n  nameWithType: Activity.CompensatingEvent\n  fullName: Activity.CompensatingEvent\n- uid: System.Workflow.ComponentModel.Activity.Description\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Description\n  nameWithType: Activity.Description\n  fullName: Activity.Description\n- uid: System.Workflow.ComponentModel.Activity.Enabled\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Enabled\n  nameWithType: Activity.Enabled\n  fullName: Activity.Enabled\n- uid: System.Workflow.ComponentModel.Activity.Executing\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Executing\n  nameWithType: Activity.Executing\n  fullName: Activity.Executing\n- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutingEvent\n  nameWithType: Activity.ExecutingEvent\n  fullName: Activity.ExecutingEvent\n- uid: System.Workflow.ComponentModel.Activity.ExecutionResult\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionResult\n  nameWithType: Activity.ExecutionResult\n  fullName: Activity.ExecutionResult\n- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionStatus\n  nameWithType: Activity.ExecutionStatus\n  fullName: Activity.ExecutionStatus\n- uid: System.Workflow.ComponentModel.Activity.Faulting\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Faulting\n  nameWithType: Activity.Faulting\n  fullName: Activity.Faulting\n- uid: System.Workflow.ComponentModel.Activity.FaultingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: FaultingEvent\n  nameWithType: Activity.FaultingEvent\n  fullName: Activity.FaultingEvent\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String)\n  nameWithType: Activity.GetActivityByName(String)\n  fullName: Activity.GetActivityByName(String)\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String, Boolean)\n  nameWithType: Activity.GetActivityByName(String, Boolean)\n  fullName: Activity.GetActivityByName(String, Boolean)\n- uid: System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: HandleFault(ActivityExecutionContext, Exception)\n  nameWithType: Activity.HandleFault(ActivityExecutionContext, Exception)\n  fullName: Activity.HandleFault(ActivityExecutionContext, Exception)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(EventHandler<T>, T)\n  nameWithType: Activity.Invoke<T>(EventHandler<T>, T)\n  fullName: Activity.Invoke<T>(EventHandler<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(IActivityEventListener<T>, T)\n  nameWithType: Activity.Invoke<T>(IActivityEventListener<T>, T)\n  fullName: Activity.Invoke<T>(IActivityEventListener<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: IsDynamicActivity\n  nameWithType: Activity.IsDynamicActivity\n  fullName: Activity.IsDynamicActivity\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity)\n  nameWithType: Activity.Load(Stream, Activity)\n  fullName: Activity.Load(Stream, Activity)\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity, IFormatter)\n  nameWithType: Activity.Load(Stream, Activity, IFormatter)\n  fullName: Activity.Load(Stream, Activity, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.Name\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Name\n  nameWithType: Activity.Name\n  fullName: Activity.Name\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: Activity.OnActivityExecutionContextLoad(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: Activity.OnActivityExecutionContextUnload(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: Activity.OnClosed(IServiceProvider)\n  fullName: Activity.OnClosed(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Parent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Parent\n  nameWithType: Activity.Parent\n  fullName: Activity.Parent\n- uid: System.Workflow.ComponentModel.Activity.QualifiedName\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: QualifiedName\n  nameWithType: Activity.QualifiedName\n  fullName: Activity.QualifiedName\n- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseEvent(DependencyProperty, Object, EventArgs)\n  nameWithType: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n  fullName: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  nameWithType: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  fullName: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream)\n  nameWithType: Activity.Save(Stream)\n  fullName: Activity.Save(Stream)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream, IFormatter)\n  nameWithType: Activity.Save(Stream, IFormatter)\n  fullName: Activity.Save(Stream, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.StatusChanged\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChanged\n  nameWithType: Activity.StatusChanged\n  fullName: Activity.StatusChanged\n- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChangedEvent\n  nameWithType: Activity.StatusChangedEvent\n  fullName: Activity.StatusChangedEvent\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(Object)\n  nameWithType: Activity.TrackData(Object)\n  fullName: Activity.TrackData(Object)\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(String, Object)\n  nameWithType: Activity.TrackData(String, Object)\n  fullName: Activity.TrackData(String, Object)\n- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Uninitialize(IServiceProvider)\n  nameWithType: Activity.Uninitialize(IServiceProvider)\n  fullName: Activity.Uninitialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: Activity.WorkflowInstanceId\n  fullName: Activity.WorkflowInstanceId\n- uid: System.Workflow.ComponentModel.Design.ITypeFilterProvider\n  parent: System.Workflow.ComponentModel.Design\n  isExternal: false\n  name: ITypeFilterProvider\n  nameWithType: ITypeFilterProvider\n  fullName: System.Workflow.ComponentModel.Design.ITypeFilterProvider\n- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: IDynamicPropertyTypeProvider\n  nameWithType: IDynamicPropertyTypeProvider\n  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider\n"}