{"nodes":[{"content":"Provides persistence for application settings classes.","nodes":[{"pos":[0,54],"content":"Provides persistence for application settings classes.","nodes":[{"content":"Provides persistence for application settings classes.","pos":[0,54]}]}],"pos":[1434,1489],"yaml":true},{"content":"Setting providers define a mechanism for storing configuration data used in the application settings architecture. The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system. An application settings property or group of properties are associated to a specific settings provider through the use of the <xref:System.Configuration.SettingsProviderAttribute>.  \n  \n Typically, the client program does not explicitly access this class; rather, the application settings architecture automatically invokes the appropriate settings provider when its services are required. For example, many of the members of <xref:System.Configuration.ApplicationSettingsBase> delegate their work to the associated settings provider.  \n  \n <xref:System.Configuration.LocalFileSettingsProvider> persists settings to configuration files that have the extension `.config`. The contents of configuration files are structured as XML documents. Depending on whether the setting is scoped at either the application-level or user-level, the configuration data is stored as elements within an `<applicationSettings>` or a `<userSettings>` section group, respectively. Each of these section groups is represented by a corresponding <xref:System.Configuration.AppSettingsSection> or <xref:System.Configuration.ClientSettingsSection>, respectively. Each section object is owned and administered by a configuration section handler, which is an object of type <xref:System.Configuration.IConfigurationSectionHandler>.  \n  \n Application-scoped settings and the default user-scoped settings are stored in a file named `application.exe.config`, which is created in the same directory as the executable file. Application configuration settings are read-only. Specific user data is stored in a file named `user.config`, stored under the user's home directory. If roaming profiles are enabled, two versions of the user configuration file could exist. In such a case, the entries in the roaming version take precedence over duplicated entries in the local user configuration file.  \n  \n For more information about application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).","nodes":[{"pos":[0,511],"content":"Setting providers define a mechanism for storing configuration data used in the application settings architecture. The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system. An application settings property or group of properties are associated to a specific settings provider through the use of the <xref:System.Configuration.SettingsProviderAttribute>.","nodes":[{"content":"Setting providers define a mechanism for storing configuration data used in the application settings architecture.","pos":[0,114]},{"content":"The <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> contains a single default settings provider, <ph id=\"ph2\">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph>, which stores configuration data to the local file system.","pos":[115,330],"source":" The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system."},{"content":"An application settings property or group of properties are associated to a specific settings provider through the use of the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>.","pos":[331,511],"source":" An application settings property or group of properties are associated to a specific settings provider through the use of the <xref:System.Configuration.SettingsProviderAttribute>."}]},{"pos":[518,865],"content":"Typically, the client program does not explicitly access this class; rather, the application settings architecture automatically invokes the appropriate settings provider when its services are required. For example, many of the members of <xref:System.Configuration.ApplicationSettingsBase> delegate their work to the associated settings provider.","nodes":[{"content":"Typically, the client program does not explicitly access this class; rather, the application settings architecture automatically invokes the appropriate settings provider when its services are required. For example, many of the members of <xref:System.Configuration.ApplicationSettingsBase> delegate their work to the associated settings provider.","pos":[0,347],"nodes":[{"content":"Typically, the client program does not explicitly access this class; rather, the application settings architecture automatically invokes the appropriate settings provider when its services are required.","pos":[0,202]},{"content":"For example, many of the members of <ph id=\"ph1\">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> delegate their work to the associated settings provider.","pos":[203,347],"source":" For example, many of the members of <xref:System.Configuration.ApplicationSettingsBase> delegate their work to the associated settings provider."}]}]},{"pos":[872,1635],"content":"<xref:System.Configuration.LocalFileSettingsProvider> persists settings to configuration files that have the extension `.config`. The contents of configuration files are structured as XML documents. Depending on whether the setting is scoped at either the application-level or user-level, the configuration data is stored as elements within an `<applicationSettings>` or a `<userSettings>` section group, respectively. Each of these section groups is represented by a corresponding <xref:System.Configuration.AppSettingsSection> or <xref:System.Configuration.ClientSettingsSection>, respectively. Each section object is owned and administered by a configuration section handler, which is an object of type <xref:System.Configuration.IConfigurationSectionHandler>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> persists settings to configuration files that have the extension <ph id=\"ph2\">`.config`</ph>.","pos":[0,129],"source":"<xref:System.Configuration.LocalFileSettingsProvider> persists settings to configuration files that have the extension `.config`."},{"content":"The contents of configuration files are structured as XML documents.","pos":[130,198]},{"content":"Depending on whether the setting is scoped at either the application-level or user-level, the configuration data is stored as elements within an <ph id=\"ph1\">`&lt;applicationSettings&gt;`</ph> or a <ph id=\"ph2\">`&lt;userSettings&gt;`</ph> section group, respectively.","pos":[199,418],"source":" Depending on whether the setting is scoped at either the application-level or user-level, the configuration data is stored as elements within an `<applicationSettings>` or a `<userSettings>` section group, respectively."},{"content":"Each of these section groups is represented by a corresponding <ph id=\"ph1\">&lt;xref:System.Configuration.AppSettingsSection&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Configuration.ClientSettingsSection&gt;</ph>, respectively.","pos":[419,596],"source":" Each of these section groups is represented by a corresponding <xref:System.Configuration.AppSettingsSection> or <xref:System.Configuration.ClientSettingsSection>, respectively."},{"content":"Each section object is owned and administered by a configuration section handler, which is an object of type <ph id=\"ph1\">&lt;xref:System.Configuration.IConfigurationSectionHandler&gt;</ph>.","pos":[597,763],"source":" Each section object is owned and administered by a configuration section handler, which is an object of type <xref:System.Configuration.IConfigurationSectionHandler>."}]},{"pos":[1642,2191],"content":"Application-scoped settings and the default user-scoped settings are stored in a file named `application.exe.config`, which is created in the same directory as the executable file. Application configuration settings are read-only. Specific user data is stored in a file named `user.config`, stored under the user's home directory. If roaming profiles are enabled, two versions of the user configuration file could exist. In such a case, the entries in the roaming version take precedence over duplicated entries in the local user configuration file.","nodes":[{"content":"Application-scoped settings and the default user-scoped settings are stored in a file named <ph id=\"ph1\">`application.exe.config`</ph>, which is created in the same directory as the executable file.","pos":[0,180],"source":"Application-scoped settings and the default user-scoped settings are stored in a file named `application.exe.config`, which is created in the same directory as the executable file."},{"content":"Application configuration settings are read-only.","pos":[181,230]},{"content":"Specific user data is stored in a file named <ph id=\"ph1\">`user.config`</ph>, stored under the user's home directory.","pos":[231,330],"source":" Specific user data is stored in a file named `user.config`, stored under the user's home directory."},{"content":"If roaming profiles are enabled, two versions of the user configuration file could exist.","pos":[331,420]},{"content":"In such a case, the entries in the roaming version take precedence over duplicated entries in the local user configuration file.","pos":[421,549]}]},{"pos":[2198,2370],"content":"For more information about application settings, see <bpt id=\"p1\">[</bpt>Application Settings for Windows Forms<ept id=\"p1\">](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)</ept>.","source":"For more information about application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md)."}],"pos":[1500,3881],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.LocalFileSettingsProvider\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.LocalFileSettingsProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.LocalFileSettingsProvider\"></xref> class."}],"pos":[5774,5883],"yaml":true},{"content":"The default constructor sets the <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> property to <xref:System.String.Empty>.","nodes":[{"pos":[0,145],"content":"The default constructor sets the <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> property to <xref:System.String.Empty>.","nodes":[{"content":"The default constructor sets the <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A&gt;</ph> property to <ph id=\"ph2\">&lt;xref:System.String.Empty&gt;</ph>.","pos":[0,145],"source":"The default constructor sets the <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> property to <xref:System.String.Empty>."}]}],"pos":[5894,6040],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the name of the currently running application.","nodes":[{"pos":[0,59],"content":"Gets or sets the name of the currently running application.","nodes":[{"content":"Gets or sets the name of the currently running application.","pos":[0,59]}]}],"pos":[7334,7394],"yaml":true},{"content":"The <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.","nodes":[{"pos":[0,232],"content":"The <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Configuration.Provider.ProviderBase.Name%2A&gt;</ph> properties help to disambiguate similarly named setting properties in different applications.","pos":[0,232],"source":"The <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications."}]}],"pos":[7405,7638],"yaml":true,"extradata":"MT"},{"content":"A string that contains the application's display name.","nodes":[{"pos":[0,54],"content":"A string that contains the application's display name.","nodes":[{"content":"A string that contains the application's display name.","pos":[0,54]}]}],"pos":[7771,7826],"yaml":true},{"content":"Returns the value of the named settings property for the previous version of the same application.","nodes":[{"pos":[0,98],"content":"Returns the value of the named settings property for the previous version of the same application.","nodes":[{"content":"Returns the value of the named settings property for the previous version of the same application.","pos":[0,98]}]}],"pos":[9400,9499],"yaml":true},{"content":"The <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method when migrating application settings during the installation of a new version of an application. For more information, see the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method.","nodes":[{"pos":[0,395],"content":"The <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method when migrating application settings during the installation of a new version of an application. For more information, see the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method.","nodes":[{"content":"The <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method when migrating application settings during the installation of a new version of an application. For more information, see the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method.","pos":[0,395],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A&gt;</ph> method is often used in conjunction with the <ph id=\"ph2\">&lt;xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A&gt;</ph> method when migrating application settings during the installation of a new version of an application.","pos":[0,292],"source":"The <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method when migrating application settings during the installation of a new version of an application."},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A&gt;</ph> method.","pos":[293,395],"source":" For more information, see the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method."}]}]}],"pos":[9510,9906],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Configuration.SettingsContext\"></xref> that describes where the application settings property is used.","nodes":[{"pos":[0,123],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsContext\"&gt;&lt;/xref&gt;</ph> that describes where the application settings property is used.","source":"A <xref href=\"System.Configuration.SettingsContext\"></xref> that describes where the application settings property is used."}],"pos":[10230,10354],"yaml":true},{"content":"The <xref href=\"System.Configuration.SettingsProperty\"></xref> whose value is to be returned.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsProperty\"&gt;&lt;/xref&gt;</ph> whose value is to be returned.","source":"The <xref href=\"System.Configuration.SettingsProperty\"></xref> whose value is to be returned."}],"pos":[10442,10536],"yaml":true},{"content":"A <xref href=\"System.Configuration.SettingsPropertyValue\"></xref> representing the application setting if found; otherwise, `null`.","nodes":[{"pos":[0,131],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsPropertyValue\"&gt;&lt;/xref&gt;</ph> representing the application setting if found; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Configuration.SettingsPropertyValue\"></xref> representing the application setting if found; otherwise, `null`."}],"pos":[10622,10754],"yaml":true},{"content":"Returns the collection of setting property values for the specified application instance and settings property group.","nodes":[{"pos":[0,117],"content":"Returns the collection of setting property values for the specified application instance and settings property group.","nodes":[{"content":"Returns the collection of setting property values for the specified application instance and settings property group.","pos":[0,117]}]}],"pos":[12425,12543],"yaml":true},{"content":"The <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> method also manages the special application settings type <xref:System.Configuration.SpecialSetting.ConnectionString>. Connection strings are stored in a special section of the configuration file delimited by the element `<connectionstrings>`.  \n  \n> [!CAUTION]\n>  <xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings. Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file. For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).","nodes":[{"pos":[0,322],"content":"The <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> method also manages the special application settings type <xref:System.Configuration.SpecialSetting.ConnectionString>. Connection strings are stored in a special section of the configuration file delimited by the element `<connectionstrings>`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A&gt;</ph> method also manages the special application settings type <ph id=\"ph2\">&lt;xref:System.Configuration.SpecialSetting.ConnectionString&gt;</ph>.","pos":[0,197],"source":"The <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> method also manages the special application settings type <xref:System.Configuration.SpecialSetting.ConnectionString>."},{"content":"Connection strings are stored in a special section of the configuration file delimited by the element <ph id=\"ph1\">`&lt;connectionstrings&gt;`</ph>.","pos":[198,322],"source":" Connection strings are stored in a special section of the configuration file delimited by the element `<connectionstrings>`."}]},{"pos":[330,826],"content":"[!CAUTION]\n <xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings. Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file. For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).","leadings":["","> "],"nodes":[{"content":" <xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings. Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file. For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).","pos":[11,494],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> does not use encryption to persist any settings.","pos":[1,103],"source":" <xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings."},{"content":"Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file.","pos":[104,315]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Encrypting Configuration Information Using Protected Configuration<ept id=\"p1\">](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)</ept>.","pos":[316,483],"source":" For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)."}]}]}],"pos":[12554,13386],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsContext\"&gt;&lt;/xref&gt;</ph> describing the current application usage.","source":"A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage."}],"pos":[13740,13842],"yaml":true},{"content":"A <xref href=\"System.Configuration.SettingsPropertyCollection\"></xref> containing the settings property group whose values are to be retrieved.","nodes":[{"pos":[0,143],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsPropertyCollection\"&gt;&lt;/xref&gt;</ph> containing the settings property group whose values are to be retrieved.","source":"A <xref href=\"System.Configuration.SettingsPropertyCollection\"></xref> containing the settings property group whose values are to be retrieved."}],"pos":[13942,14086],"yaml":true},{"content":"A <xref href=\"System.Configuration.SettingsPropertyValueCollection\"></xref> containing the values for the specified settings property group.","nodes":[{"pos":[0,140],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsPropertyValueCollection\"&gt;&lt;/xref&gt;</ph> containing the values for the specified settings property group.","source":"A <xref href=\"System.Configuration.SettingsPropertyValueCollection\"></xref> containing the values for the specified settings property group."}],"pos":[14182,14323],"yaml":true},{"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.","nodes":[{"pos":[0,110],"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.","nodes":[{"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.","pos":[0,110]}]}],"pos":[14559,14670],"yaml":true},{"content":"Initializes the provider.","nodes":[{"pos":[0,25],"content":"Initializes the provider.","nodes":[{"content":"Initializes the provider.","pos":[0,25]}]}],"pos":[16095,16121],"yaml":true},{"content":"The friendly name of the provider.","nodes":[{"pos":[0,34],"content":"The friendly name of the provider.","nodes":[{"content":"The friendly name of the provider.","pos":[0,34]}]}],"pos":[16326,16361],"yaml":true},{"content":"A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.","nodes":[{"pos":[0,132],"content":"A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.","nodes":[{"content":"A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.","pos":[0,132]}]}],"pos":[16460,16593],"yaml":true},{"content":"Resets all application settings properties associated with the specified application to their default values.","nodes":[{"pos":[0,109],"content":"Resets all application settings properties associated with the specified application to their default values.","nodes":[{"content":"Resets all application settings properties associated with the specified application to their default values.","pos":[0,109]}]}],"pos":[17916,18026],"yaml":true},{"content":"The <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> method restores the stored values of the specified application settings group. The action of <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> depends on the scope of the application settings property:  \n  \n-   Application-scoped settings are not affected.  \n  \n-   User-scoped settings are reset to the default values that are stored as read-only entries in the application configuration file, `application.exe.config`. If roaming profiles are being used, any application settings values in the roaming profile take precedence over duplicates found in the local profile.  \n  \n Notice that if roaming profiles are used, there can be two `user.config` files, one for the local settings and one for the roaming profile.","nodes":[{"pos":[0,281],"content":"The <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> method restores the stored values of the specified application settings group. The action of <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> depends on the scope of the application settings property:","nodes":[{"content":"The <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> method restores the stored values of the specified application settings group. The action of <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> depends on the scope of the application settings property:","pos":[0,281],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider.Reset%2A&gt;</ph> method restores the stored values of the specified application settings group.","pos":[0,145],"source":"The <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> method restores the stored values of the specified application settings group."},{"content":"The action of <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider.Reset%2A&gt;</ph> depends on the scope of the application settings property:","pos":[146,281],"source":" The action of <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> depends on the scope of the application settings property:"}]}]},{"pos":[291,336],"content":"Application-scoped settings are not affected.","nodes":[{"content":"Application-scoped settings are not affected.","pos":[0,45]}]},{"pos":[346,651],"content":"User-scoped settings are reset to the default values that are stored as read-only entries in the application configuration file, `application.exe.config`. If roaming profiles are being used, any application settings values in the roaming profile take precedence over duplicates found in the local profile.","nodes":[{"content":"User-scoped settings are reset to the default values that are stored as read-only entries in the application configuration file, <ph id=\"ph1\">`application.exe.config`</ph>.","pos":[0,154],"source":"User-scoped settings are reset to the default values that are stored as read-only entries in the application configuration file, `application.exe.config`."},{"content":"If roaming profiles are being used, any application settings values in the roaming profile take precedence over duplicates found in the local profile.","pos":[155,305]}]},{"pos":[658,797],"content":"Notice that if roaming profiles are used, there can be two <ph id=\"ph1\">`user.config`</ph> files, one for the local settings and one for the roaming profile.","source":"Notice that if roaming profiles are used, there can be two `user.config` files, one for the local settings and one for the roaming profile."}],"pos":[18037,18843],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsContext\"&gt;&lt;/xref&gt;</ph> describing the current application usage.","source":"A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage."}],"pos":[19068,19170],"yaml":true},{"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.","nodes":[{"pos":[0,110],"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.","nodes":[{"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.","pos":[0,110]}]}],"pos":[19394,19505],"yaml":true},{"content":"Sets the values of the specified group of property settings.","nodes":[{"pos":[0,60],"content":"Sets the values of the specified group of property settings.","nodes":[{"content":"Sets the values of the specified group of property settings.","pos":[0,60]}]}],"pos":[21110,21171],"yaml":true},{"content":"A settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>, contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties. This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.  \n  \n <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> individually serializes each user-scoped application settings property to its corresponding application setting in the appropriate `user.config` configuration file.  \n  \n By default, the <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> method uses the following logical sequence to determine the serialization scheme, depending on type of the settings property:  \n  \n1.  If the type has an associated <xref:System.ComponentModel.TypeConverter> with a <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> method implementation, this conversion is used.  \n  \n2.  XML serialization is used.  \n  \n However, you can specify a preferred serialization mechanism by using the <xref:System.Configuration.SettingsSerializeAsAttribute>. <xref:System.Configuration.LocalFileSettingsProvider> does not support binary serialization in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  \n  \n If a user-scoped settings property is set back to its default value explicitly, then the local file settings provider will remove the entry for the associated setting from the user configuration file. The next read access for this property will simply use the default value.  \n  \n> [!CAUTION]\n>  <xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings. Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file. For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).","nodes":[{"pos":[0,532],"content":"A settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>, contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties. This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.","nodes":[{"content":"A settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>, contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties. This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.","pos":[0,532],"nodes":[{"content":"A settings wrapper class, derived from <ph id=\"ph1\">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>, contains the <ph id=\"ph2\">&lt;xref:System.Configuration.ApplicationSettingsBase.Save%2A&gt;</ph> method, which is called to persist the values of all of its settings properties.","pos":[0,245],"source":"A settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>, contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties."},{"content":"This method enumerates through all the settings providers associated with its settings properties, and calls the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsProvider.SetPropertyValues%2A&gt;</ph> method for each <ph id=\"ph2\">&lt;xref:System.Configuration.SettingsProvider&gt;</ph> to perform the actual serialization operation.","pos":[246,532],"source":" This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation."}]}]},{"pos":[539,778],"content":"<ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A&gt;</ph> individually serializes each user-scoped application settings property to its corresponding application setting in the appropriate <ph id=\"ph2\">`user.config`</ph> configuration file.","source":"<xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> individually serializes each user-scoped application settings property to its corresponding application setting in the appropriate `user.config` configuration file."},{"pos":[785,1001],"content":"By default, the <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> method uses the following logical sequence to determine the serialization scheme, depending on type of the settings property:","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A&gt;</ph> method uses the following logical sequence to determine the serialization scheme, depending on type of the settings property:","pos":[0,216],"source":"By default, the <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> method uses the following logical sequence to determine the serialization scheme, depending on type of the settings property:"}]},{"pos":[1011,1200],"content":"If the type has an associated <xref:System.ComponentModel.TypeConverter> with a <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> method implementation, this conversion is used.","nodes":[{"content":"If the type has an associated <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> with a <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter.ConvertToString%2A&gt;</ph> method implementation, this conversion is used.","pos":[0,189],"source":"If the type has an associated <xref:System.ComponentModel.TypeConverter> with a <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> method implementation, this conversion is used."}]},{"pos":[1210,1236],"content":"XML serialization is used.","nodes":[{"content":"XML serialization is used.","pos":[0,26]}]},{"pos":[1243,1522],"content":"However, you can specify a preferred serialization mechanism by using the <xref:System.Configuration.SettingsSerializeAsAttribute>. <xref:System.Configuration.LocalFileSettingsProvider> does not support binary serialization in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].","nodes":[{"content":"However, you can specify a preferred serialization mechanism by using the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsSerializeAsAttribute&gt;</ph>.","pos":[0,131],"source":"However, you can specify a preferred serialization mechanism by using the <xref:System.Configuration.SettingsSerializeAsAttribute>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> does not support binary serialization in <ph id=\"ph2\">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>.","pos":[132,279],"source":" <xref:System.Configuration.LocalFileSettingsProvider> does not support binary serialization in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]."}]},{"pos":[1529,1803],"content":"If a user-scoped settings property is set back to its default value explicitly, then the local file settings provider will remove the entry for the associated setting from the user configuration file. The next read access for this property will simply use the default value.","nodes":[{"content":"If a user-scoped settings property is set back to its default value explicitly, then the local file settings provider will remove the entry for the associated setting from the user configuration file. The next read access for this property will simply use the default value.","pos":[0,274],"nodes":[{"content":"If a user-scoped settings property is set back to its default value explicitly, then the local file settings provider will remove the entry for the associated setting from the user configuration file.","pos":[0,200]},{"content":"The next read access for this property will simply use the default value.","pos":[201,274]}]}]},{"pos":[1811,2307],"content":"[!CAUTION]\n <xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings. Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file. For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).","leadings":["","> "],"nodes":[{"content":" <xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings. Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file. For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).","pos":[11,494],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> does not use encryption to persist any settings.","pos":[1,103],"source":" <xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings."},{"content":"Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file.","pos":[104,315]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Encrypting Configuration Information Using Protected Configuration<ept id=\"p1\">](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)</ept>.","pos":[316,483],"source":" For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)."}]}]}],"pos":[21182,23507],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsContext\"&gt;&lt;/xref&gt;</ph> describing the current application usage.","source":"A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage."}],"pos":[23814,23916],"yaml":true},{"content":"A <xref href=\"System.Configuration.SettingsPropertyValueCollection\"></xref> representing the group of property settings to set.","nodes":[{"pos":[0,127],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsPropertyValueCollection\"&gt;&lt;/xref&gt;</ph> representing the group of property settings to set.","source":"A <xref href=\"System.Configuration.SettingsPropertyValueCollection\"></xref> representing the group of property settings to set."}],"pos":[24017,24145],"yaml":true},{"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  \n  \n -or-  \n  \n There was a general failure saving the settings to the configuration file.","nodes":[{"pos":[0,110],"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.","nodes":[{"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.","pos":[0,110]}]},{"pos":[117,121],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[128,202],"content":"There was a general failure saving the settings to the configuration file.","nodes":[{"content":"There was a general failure saving the settings to the configuration file.","pos":[0,74]}]}],"pos":[24381,24590],"yaml":true},{"content":"Attempts to migrate previous user-scoped settings from a previous version of the same application.","nodes":[{"pos":[0,98],"content":"Attempts to migrate previous user-scoped settings from a previous version of the same application.","nodes":[{"content":"Attempts to migrate previous user-scoped settings from a previous version of the same application.","pos":[0,98]}]}],"pos":[26105,26204],"yaml":true},{"content":"<xref:System.Configuration.LocalFileSettingsProvider> migrates the local and roaming settings in separate operations.  \n  \n The <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method is suppressed for every application setting that has the <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> applied to it, or to the entire settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>.  \n  \n This way this method is called depends on the type of application that is being upgraded:  \n  \n-   Each version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is stored in its own isolated installation directory. After a new version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is installed, and when the new version is first run, internal logic will automatically call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> to migrate all common application settings to the new version. For more information, see [ClickOnce and Application Settings](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb).  \n  \n-   Standard Windows Forms and console applications must manually call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, because there is not a general, automatic way to determine when such an application is first run. The two common ways to do this are either from the installation program or using from the application itself, using a persisted property, often named something like `IsFirstRun`.  \n  \n Note that for the newer version to migrate application settings, it must be able to also load and read the older version of the application settings. Therefore, it must contain wrapper classes compatible with both the new and previous versions of the application.","nodes":[{"pos":[0,117],"content":"<xref:System.Configuration.LocalFileSettingsProvider> migrates the local and roaming settings in separate operations.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider&gt;</ph> migrates the local and roaming settings in separate operations.","pos":[0,117],"source":"<xref:System.Configuration.LocalFileSettingsProvider> migrates the local and roaming settings in separate operations."}]},{"pos":[124,440],"content":"The <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method is suppressed for every application setting that has the <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> applied to it, or to the entire settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A&gt;</ph> method is suppressed for every application setting that has the <ph id=\"ph2\">&lt;xref:System.Configuration.NoSettingsVersionUpgradeAttribute&gt;</ph> applied to it, or to the entire settings wrapper class, derived from <ph id=\"ph3\">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph>.","pos":[0,316],"source":"The <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method is suppressed for every application setting that has the <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> applied to it, or to the entire settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>."}]},{"pos":[447,536],"content":"This way this method is called depends on the type of application that is being upgraded:","nodes":[{"content":"This way this method is called depends on the type of application that is being upgraded:","pos":[0,89]}]},{"pos":[546,1130],"content":"Each version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is stored in its own isolated installation directory. After a new version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is installed, and when the new version is first run, internal logic will automatically call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> to migrate all common application settings to the new version. For more information, see [ClickOnce and Application Settings](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb).","nodes":[{"content":"Each version of a <ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> application is stored in its own isolated installation directory.","pos":[0,137],"source":"Each version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is stored in its own isolated installation directory."},{"content":"After a new version of a <ph id=\"ph1\">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]</ph> application is installed, and when the new version is first run, internal logic will automatically call <ph id=\"ph2\">&lt;xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A&gt;</ph> to migrate all common application settings to the new version.","pos":[138,448],"source":" After a new version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is installed, and when the new version is first run, internal logic will automatically call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> to migrate all common application settings to the new version."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ClickOnce and Application Settings<ept id=\"p1\">](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb)</ept>.","pos":[449,584],"source":" For more information, see [ClickOnce and Application Settings](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb)."}]},{"pos":[1140,1549],"content":"Standard Windows Forms and console applications must manually call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, because there is not a general, automatic way to determine when such an application is first run. The two common ways to do this are either from the installation program or using from the application itself, using a persisted property, often named something like `IsFirstRun`.","nodes":[{"content":"Standard Windows Forms and console applications must manually call <ph id=\"ph1\">&lt;xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A&gt;</ph>, because there is not a general, automatic way to determine when such an application is first run.","pos":[0,230],"source":"Standard Windows Forms and console applications must manually call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, because there is not a general, automatic way to determine when such an application is first run."},{"content":"The two common ways to do this are either from the installation program or using from the application itself, using a persisted property, often named something like <ph id=\"ph1\">`IsFirstRun`</ph>.","pos":[231,409],"source":" The two common ways to do this are either from the installation program or using from the application itself, using a persisted property, often named something like `IsFirstRun`."}]},{"pos":[1556,1819],"content":"Note that for the newer version to migrate application settings, it must be able to also load and read the older version of the application settings. Therefore, it must contain wrapper classes compatible with both the new and previous versions of the application.","nodes":[{"content":"Note that for the newer version to migrate application settings, it must be able to also load and read the older version of the application settings. Therefore, it must contain wrapper classes compatible with both the new and previous versions of the application.","pos":[0,263],"nodes":[{"content":"Note that for the newer version to migrate application settings, it must be able to also load and read the older version of the application settings.","pos":[0,149]},{"content":"Therefore, it must contain wrapper classes compatible with both the new and previous versions of the application.","pos":[150,263]}]}]}],"pos":[26215,28047],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsContext\"&gt;&lt;/xref&gt;</ph> describing the current application usage.","source":"A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage."}],"pos":[28334,28436],"yaml":true},{"content":"A <xref href=\"System.Configuration.SettingsPropertyCollection\"></xref> containing the settings property group whose values are to be retrieved.","nodes":[{"pos":[0,143],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Configuration.SettingsPropertyCollection\"&gt;&lt;/xref&gt;</ph> containing the settings property group whose values are to be retrieved.","source":"A <xref href=\"System.Configuration.SettingsPropertyCollection\"></xref> containing the settings property group whose values are to be retrieved."}],"pos":[28536,28680],"yaml":true},{"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  \n  \n -or-  \n  \n The previous version of the configuration file could not be accessed.","nodes":[{"pos":[0,110],"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.","nodes":[{"content":"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.","pos":[0,110]}]},{"pos":[117,121],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[128,197],"content":"The previous version of the configuration file could not be accessed.","nodes":[{"content":"The previous version of the configuration file could not be accessed.","pos":[0,69]}]}],"pos":[28906,29110],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.LocalFileSettingsProvider\n  commentId: T:System.Configuration.LocalFileSettingsProvider\n  id: LocalFileSettingsProvider\n  children:\n  - System.Configuration.LocalFileSettingsProvider.#ctor\n  - System.Configuration.LocalFileSettingsProvider.ApplicationName\n  - System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)\n  - System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)\n  - System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)\n  - System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)\n  - System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)\n  langs:\n  - csharp\n  name: LocalFileSettingsProvider\n  nameWithType: LocalFileSettingsProvider\n  fullName: System.Configuration.LocalFileSettingsProvider\n  type: Class\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Provides persistence for application settings classes.\n  remarks: \"Setting providers define a mechanism for storing configuration data used in the application settings architecture. The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] contains a single default settings provider, <xref:System.Configuration.LocalFileSettingsProvider>, which stores configuration data to the local file system. An application settings property or group of properties are associated to a specific settings provider through the use of the <xref:System.Configuration.SettingsProviderAttribute>.  \\n  \\n Typically, the client program does not explicitly access this class; rather, the application settings architecture automatically invokes the appropriate settings provider when its services are required. For example, many of the members of <xref:System.Configuration.ApplicationSettingsBase> delegate their work to the associated settings provider.  \\n  \\n <xref:System.Configuration.LocalFileSettingsProvider> persists settings to configuration files that have the extension `.config`. The contents of configuration files are structured as XML documents. Depending on whether the setting is scoped at either the application-level or user-level, the configuration data is stored as elements within an `<applicationSettings>` or a `<userSettings>` section group, respectively. Each of these section groups is represented by a corresponding <xref:System.Configuration.AppSettingsSection> or <xref:System.Configuration.ClientSettingsSection>, respectively. Each section object is owned and administered by a configuration section handler, which is an object of type <xref:System.Configuration.IConfigurationSectionHandler>.  \\n  \\n Application-scoped settings and the default user-scoped settings are stored in a file named `application.exe.config`, which is created in the same directory as the executable file. Application configuration settings are read-only. Specific user data is stored in a file named `user.config`, stored under the user's home directory. If roaming profiles are enabled, two versions of the user configuration file could exist. In such a case, the entries in the roaming version take precedence over duplicated entries in the local user configuration file.  \\n  \\n For more information about application settings, see [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).\"\n  syntax:\n    content: 'public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  - System.Configuration.SettingsProvider\n  implements:\n  - System.Configuration.IApplicationSettingsProvider\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Name\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.LocalFileSettingsProvider.#ctor\n  commentId: M:System.Configuration.LocalFileSettingsProvider.#ctor\n  id: '#ctor'\n  parent: System.Configuration.LocalFileSettingsProvider\n  langs:\n  - csharp\n  name: LocalFileSettingsProvider()\n  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()\n  fullName: LocalFileSettingsProvider.LocalFileSettingsProvider()\n  type: Constructor\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.LocalFileSettingsProvider\"></xref> class.\n  remarks: The default constructor sets the <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> property to <xref:System.String.Empty>.\n  syntax:\n    content: public LocalFileSettingsProvider ();\n    parameters: []\n  overload: System.Configuration.LocalFileSettingsProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName\n  commentId: P:System.Configuration.LocalFileSettingsProvider.ApplicationName\n  id: ApplicationName\n  parent: System.Configuration.LocalFileSettingsProvider\n  langs:\n  - csharp\n  name: ApplicationName\n  nameWithType: LocalFileSettingsProvider.ApplicationName\n  fullName: LocalFileSettingsProvider.ApplicationName\n  type: Property\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets or sets the name of the currently running application.\n  remarks: The <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> and <xref:System.Configuration.Provider.ProviderBase.Name%2A> properties help to disambiguate similarly named setting properties in different applications.\n  syntax:\n    content: public override string ApplicationName { get; set; }\n    return:\n      type: System.String\n      description: A string that contains the application's display name.\n  overload: System.Configuration.LocalFileSettingsProvider.ApplicationName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)\n  commentId: M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)\n  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)\n  parent: System.Configuration.LocalFileSettingsProvider\n  langs:\n  - csharp\n  name: GetPreviousVersion(SettingsContext, SettingsProperty)\n  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext, SettingsProperty)\n  fullName: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext, SettingsProperty)\n  type: Method\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Returns the value of the named settings property for the previous version of the same application.\n  remarks: The <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> method is often used in conjunction with the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method when migrating application settings during the installation of a new version of an application. For more information, see the <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method.\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);\n    parameters:\n    - id: context\n      type: System.Configuration.SettingsContext\n      description: A <xref href=\"System.Configuration.SettingsContext\"></xref> that describes where the application settings property is used.\n    - id: property\n      type: System.Configuration.SettingsProperty\n      description: The <xref href=\"System.Configuration.SettingsProperty\"></xref> whose value is to be returned.\n    return:\n      type: System.Configuration.SettingsPropertyValue\n      description: A <xref href=\"System.Configuration.SettingsPropertyValue\"></xref> representing the application setting if found; otherwise, `null`.\n  overload: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)\n  commentId: M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)\n  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)\n  parent: System.Configuration.LocalFileSettingsProvider\n  langs:\n  - csharp\n  name: GetPropertyValues(SettingsContext, SettingsPropertyCollection)\n  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext, SettingsPropertyCollection)\n  fullName: LocalFileSettingsProvider.GetPropertyValues(SettingsContext, SettingsPropertyCollection)\n  type: Method\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Returns the collection of setting property values for the specified application instance and settings property group.\n  remarks: \"The <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> method also manages the special application settings type <xref:System.Configuration.SpecialSetting.ConnectionString>. Connection strings are stored in a special section of the configuration file delimited by the element `<connectionstrings>`.  \\n  \\n> [!CAUTION]\\n>  <xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings. Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file. For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);\n    parameters:\n    - id: context\n      type: System.Configuration.SettingsContext\n      description: A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage.\n    - id: properties\n      type: System.Configuration.SettingsPropertyCollection\n      description: A <xref href=\"System.Configuration.SettingsPropertyCollection\"></xref> containing the settings property group whose values are to be retrieved.\n    return:\n      type: System.Configuration.SettingsPropertyValueCollection\n      description: A <xref href=\"System.Configuration.SettingsPropertyValueCollection\"></xref> containing the values for the specified settings property group.\n  overload: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: A user-scoped setting was encountered but the current configuration only supports application-scoped settings.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  commentId: M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Configuration.LocalFileSettingsProvider\n  langs:\n  - csharp\n  name: Initialize(String, NameValueCollection)\n  nameWithType: LocalFileSettingsProvider.Initialize(String, NameValueCollection)\n  fullName: LocalFileSettingsProvider.Initialize(String, NameValueCollection)\n  type: Method\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes the provider.\n  syntax:\n    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);\n    parameters:\n    - id: name\n      type: System.String\n      description: The friendly name of the provider.\n    - id: values\n      type: System.Collections.Specialized.NameValueCollection\n      description: A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.\n  overload: System.Configuration.LocalFileSettingsProvider.Initialize*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)\n  commentId: M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)\n  id: Reset(System.Configuration.SettingsContext)\n  parent: System.Configuration.LocalFileSettingsProvider\n  langs:\n  - csharp\n  name: Reset(SettingsContext)\n  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)\n  fullName: LocalFileSettingsProvider.Reset(SettingsContext)\n  type: Method\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Resets all application settings properties associated with the specified application to their default values.\n  remarks: \"The <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> method restores the stored values of the specified application settings group. The action of <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> depends on the scope of the application settings property:  \\n  \\n-   Application-scoped settings are not affected.  \\n  \\n-   User-scoped settings are reset to the default values that are stored as read-only entries in the application configuration file, `application.exe.config`. If roaming profiles are being used, any application settings values in the roaming profile take precedence over duplicates found in the local profile.  \\n  \\n Notice that if roaming profiles are used, there can be two `user.config` files, one for the local settings and one for the roaming profile.\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public void Reset (System.Configuration.SettingsContext context);\n    parameters:\n    - id: context\n      type: System.Configuration.SettingsContext\n      description: A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage.\n  overload: System.Configuration.LocalFileSettingsProvider.Reset*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: A user-scoped setting was encountered but the current configuration only supports application-scoped settings.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)\n  commentId: M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)\n  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)\n  parent: System.Configuration.LocalFileSettingsProvider\n  langs:\n  - csharp\n  name: SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)\n  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)\n  fullName: LocalFileSettingsProvider.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)\n  type: Method\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Sets the values of the specified group of property settings.\n  remarks: \"A settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>, contains the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method, which is called to persist the values of all of its settings properties. This method enumerates through all the settings providers associated with its settings properties, and calls the <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> method for each <xref:System.Configuration.SettingsProvider> to perform the actual serialization operation.  \\n  \\n <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> individually serializes each user-scoped application settings property to its corresponding application setting in the appropriate `user.config` configuration file.  \\n  \\n By default, the <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> method uses the following logical sequence to determine the serialization scheme, depending on type of the settings property:  \\n  \\n1.  If the type has an associated <xref:System.ComponentModel.TypeConverter> with a <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> method implementation, this conversion is used.  \\n  \\n2.  XML serialization is used.  \\n  \\n However, you can specify a preferred serialization mechanism by using the <xref:System.Configuration.SettingsSerializeAsAttribute>. <xref:System.Configuration.LocalFileSettingsProvider> does not support binary serialization in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  \\n  \\n If a user-scoped settings property is set back to its default value explicitly, then the local file settings provider will remove the entry for the associated setting from the user configuration file. The next read access for this property will simply use the default value.  \\n  \\n> [!CAUTION]\\n>  <xref:System.Configuration.LocalFileSettingsProvider> does not use encryption to persist any settings. Therefore, do not store plain text passwords or other sensitive information using this provider without taking additional precautions, such as separately encrypting the information within the configuration file. For more information, see [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);\n    parameters:\n    - id: context\n      type: System.Configuration.SettingsContext\n      description: A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage.\n    - id: values\n      type: System.Configuration.SettingsPropertyValueCollection\n      description: A <xref href=\"System.Configuration.SettingsPropertyValueCollection\"></xref> representing the group of property settings to set.\n  overload: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: \"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  \\n  \\n -or-  \\n  \\n There was a general failure saving the settings to the configuration file.\"\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)\n  commentId: M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)\n  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)\n  parent: System.Configuration.LocalFileSettingsProvider\n  langs:\n  - csharp\n  name: Upgrade(SettingsContext, SettingsPropertyCollection)\n  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext, SettingsPropertyCollection)\n  fullName: LocalFileSettingsProvider.Upgrade(SettingsContext, SettingsPropertyCollection)\n  type: Method\n  assemblies:\n  - System\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Attempts to migrate previous user-scoped settings from a previous version of the same application.\n  remarks: \"<xref:System.Configuration.LocalFileSettingsProvider> migrates the local and roaming settings in separate operations.  \\n  \\n The <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> method is suppressed for every application setting that has the <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> applied to it, or to the entire settings wrapper class, derived from <xref:System.Configuration.ApplicationSettingsBase>.  \\n  \\n This way this method is called depends on the type of application that is being upgraded:  \\n  \\n-   Each version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is stored in its own isolated installation directory. After a new version of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application is installed, and when the new version is first run, internal logic will automatically call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> to migrate all common application settings to the new version. For more information, see [ClickOnce and Application Settings](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb).  \\n  \\n-   Standard Windows Forms and console applications must manually call <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, because there is not a general, automatic way to determine when such an application is first run. The two common ways to do this are either from the installation program or using from the application itself, using a persisted property, often named something like `IsFirstRun`.  \\n  \\n Note that for the newer version to migrate application settings, it must be able to also load and read the older version of the application settings. Therefore, it must contain wrapper classes compatible with both the new and previous versions of the application.\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);\n    parameters:\n    - id: context\n      type: System.Configuration.SettingsContext\n      description: A <xref href=\"System.Configuration.SettingsContext\"></xref> describing the current application usage.\n    - id: properties\n      type: System.Configuration.SettingsPropertyCollection\n      description: A <xref href=\"System.Configuration.SettingsPropertyCollection\"></xref> containing the settings property group whose values are to be retrieved.\n  overload: System.Configuration.LocalFileSettingsProvider.Upgrade*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: \"A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  \\n  \\n -or-  \\n  \\n The previous version of the configuration file could not be accessed.\"\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Configuration.SettingsProvider\n  parent: System.Configuration\n  isExternal: false\n  name: SettingsProvider\n  nameWithType: SettingsProvider\n  fullName: System.Configuration.SettingsProvider\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.Configuration.LocalFileSettingsProvider.#ctor\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: LocalFileSettingsProvider()\n  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()\n  fullName: LocalFileSettingsProvider.LocalFileSettingsProvider()\n- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: ApplicationName\n  nameWithType: LocalFileSettingsProvider.ApplicationName\n  fullName: LocalFileSettingsProvider.ApplicationName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: GetPreviousVersion(SettingsContext, SettingsProperty)\n  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext, SettingsProperty)\n  fullName: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext, SettingsProperty)\n- uid: System.Configuration.SettingsPropertyValue\n  parent: System.Configuration\n  isExternal: false\n  name: SettingsPropertyValue\n  nameWithType: SettingsPropertyValue\n  fullName: System.Configuration.SettingsPropertyValue\n- uid: System.Configuration.SettingsContext\n  parent: System.Configuration\n  isExternal: false\n  name: SettingsContext\n  nameWithType: SettingsContext\n  fullName: System.Configuration.SettingsContext\n- uid: System.Configuration.SettingsProperty\n  parent: System.Configuration\n  isExternal: false\n  name: SettingsProperty\n  nameWithType: SettingsProperty\n  fullName: System.Configuration.SettingsProperty\n- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: GetPropertyValues(SettingsContext, SettingsPropertyCollection)\n  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext, SettingsPropertyCollection)\n  fullName: LocalFileSettingsProvider.GetPropertyValues(SettingsContext, SettingsPropertyCollection)\n- uid: System.Configuration.SettingsPropertyValueCollection\n  parent: System.Configuration\n  isExternal: false\n  name: SettingsPropertyValueCollection\n  nameWithType: SettingsPropertyValueCollection\n  fullName: System.Configuration.SettingsPropertyValueCollection\n- uid: System.Configuration.SettingsPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: SettingsPropertyCollection\n  nameWithType: SettingsPropertyCollection\n  fullName: System.Configuration.SettingsPropertyCollection\n- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: Initialize(String, NameValueCollection)\n  nameWithType: LocalFileSettingsProvider.Initialize(String, NameValueCollection)\n  fullName: LocalFileSettingsProvider.Initialize(String, NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: Reset(SettingsContext)\n  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)\n  fullName: LocalFileSettingsProvider.Reset(SettingsContext)\n- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)\n  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)\n  fullName: LocalFileSettingsProvider.SetPropertyValues(SettingsContext, SettingsPropertyValueCollection)\n- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: Upgrade(SettingsContext, SettingsPropertyCollection)\n  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext, SettingsPropertyCollection)\n  fullName: LocalFileSettingsProvider.Upgrade(SettingsContext, SettingsPropertyCollection)\n- uid: System.Configuration.LocalFileSettingsProvider.#ctor*\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: LocalFileSettingsProvider\n  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider\n  fullName: LocalFileSettingsProvider.LocalFileSettingsProvider\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName*\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: ApplicationName\n  nameWithType: LocalFileSettingsProvider.ApplicationName\n  fullName: LocalFileSettingsProvider.ApplicationName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: GetPreviousVersion\n  nameWithType: LocalFileSettingsProvider.GetPreviousVersion\n  fullName: LocalFileSettingsProvider.GetPreviousVersion\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: GetPropertyValues\n  nameWithType: LocalFileSettingsProvider.GetPropertyValues\n  fullName: LocalFileSettingsProvider.GetPropertyValues\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n- uid: System.Configuration.LocalFileSettingsProvider.Initialize*\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: Initialize\n  nameWithType: LocalFileSettingsProvider.Initialize\n  fullName: LocalFileSettingsProvider.Initialize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n- uid: System.Configuration.LocalFileSettingsProvider.Reset*\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: Reset\n  nameWithType: LocalFileSettingsProvider.Reset\n  fullName: LocalFileSettingsProvider.Reset\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: SetPropertyValues\n  nameWithType: LocalFileSettingsProvider.SetPropertyValues\n  fullName: LocalFileSettingsProvider.SetPropertyValues\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n- uid: System.Configuration.LocalFileSettingsProvider.Upgrade*\n  parent: System.Configuration.LocalFileSettingsProvider\n  isExternal: false\n  name: Upgrade\n  nameWithType: LocalFileSettingsProvider.Upgrade\n  fullName: LocalFileSettingsProvider.Upgrade\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/LocalFileSettingsProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.Provider.ProviderBase.Description\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Description\n  nameWithType: ProviderBase.Description\n  fullName: ProviderBase.Description\n- uid: System.Configuration.Provider.ProviderBase.Name\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Name\n  nameWithType: ProviderBase.Name\n  fullName: ProviderBase.Name\n- uid: System.Configuration.IApplicationSettingsProvider\n  parent: System.Configuration\n  isExternal: false\n  name: IApplicationSettingsProvider\n  nameWithType: IApplicationSettingsProvider\n  fullName: System.Configuration.IApplicationSettingsProvider\n"}