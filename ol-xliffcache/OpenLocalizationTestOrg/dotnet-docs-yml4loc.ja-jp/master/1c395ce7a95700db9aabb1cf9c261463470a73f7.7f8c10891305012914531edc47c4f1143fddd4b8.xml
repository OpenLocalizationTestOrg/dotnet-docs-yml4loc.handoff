{"nodes":[{"content":"`abstract` base class for different classes of filters used to query messages.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`abstract`</ph> base class for different classes of filters used to query messages.","source":"`abstract` base class for different classes of filters used to query messages."}],"pos":[733,814],"yaml":true},{"content":"<xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages. Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message. A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.  \n  \n Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>. Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter. The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.  \n  \n The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change. The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.  \n  \n The following classes implement the `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> class:  \n  \n-   <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match.  \n  \n-   <xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages.  \n  \n-   <xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages.  \n  \n-   <xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions.  \n  \n-   <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address.  \n  \n <xref:System.ServiceModel.Channels.ChannelListenerBase%601> is an `abstract` base class that you can use for writing non-queuing listeners.","nodes":[{"pos":[0,485],"content":"<xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages. Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message. A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> is an <ph id=\"ph2\">`abstract`</ph> class that developers implement in order to specify the criteria to use for inspecting messages.","pos":[0,165],"source":"<xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages."},{"content":"Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message.","pos":[166,312]},{"content":"A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.","pos":[313,485]}]},{"pos":[492,884],"content":"Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>. Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter. The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.","nodes":[{"content":"Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>. Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter. The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.","pos":[0,392],"nodes":[{"content":"Filters are stored in a filter table that implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601&gt;</ph>.","pos":[0,115],"source":"Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>."},{"content":"Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter.","pos":[116,264]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A&gt;</ph> methods are used to determine if a message satisfies a filter.","pos":[265,392],"source":" The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter."}]}]},{"pos":[891,1133],"content":"The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change. The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.","nodes":[{"content":"The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change. The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.","pos":[0,242],"nodes":[{"content":"The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change.","pos":[0,136]},{"content":"The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.","pos":[137,242]}]}]},{"pos":[1140,1244],"content":"The following classes implement the <ph id=\"ph1\">`abstract`</ph><ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> class:","source":"The following classes implement the `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> class:"},{"pos":[1254,1376],"content":"<xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.XPathMessageFilter&gt;</ph> uses an XPath 1.0 expression to specify the criteria for a match.","pos":[0,122],"source":"<xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match."}]},{"pos":[1386,1467],"content":"<xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter&gt;</ph> matches all messages.","pos":[0,81],"source":"<xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages."}]},{"pos":[1477,1567],"content":"<xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter&gt;</ph> matches none of the messages.","pos":[0,90],"source":"<xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages."}]},{"pos":[1577,1710],"content":"<xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ActionMessageFilter&gt;</ph> tests whether the action of a message is one of a specified set of actions.","pos":[0,133],"source":"<xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions."}]},{"pos":[1720,1850],"content":"<xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter&gt;</ph> tests whether a message satisfies a specified endpoint address.","pos":[0,130],"source":"<xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address."}]},{"pos":[1857,1996],"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase%601&gt;</ph> is an <ph id=\"ph2\">`abstract`</ph> base class that you can use for writing non-queuing listeners.","source":"<xref:System.ServiceModel.Channels.ChannelListenerBase%601> is an `abstract` base class that you can use for writing non-queuing listeners."}],"pos":[825,2842],"yaml":true,"extradata":"MT"},{"content":"When called in a derived class, initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> class.","nodes":[{"pos":[0,138],"content":"When called in a derived class, initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"&gt;&lt;/xref&gt;</ph> class.","source":"When called in a derived class, initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> class."}],"pos":[5614,5753],"yaml":true},{"content":"The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated.","nodes":[{"pos":[0,139],"content":"The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated.","nodes":[{"content":"The constructor is protected so that only filters that derive from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> can be instantiated.","pos":[0,139],"source":"The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated."}]}],"pos":[5764,5904],"yaml":true,"extradata":"MT"},{"content":"Creates a filter table for a filter that has a specified type of data associated with it.","nodes":[{"pos":[0,89],"content":"Creates a filter table for a filter that has a specified type of data associated with it.","nodes":[{"content":"Creates a filter table for a filter that has a specified type of data associated with it.","pos":[0,89]}]}],"pos":[7157,7247],"yaml":true},{"content":"This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>. Users should create a filter table by calling a constructor for the filter table. The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially. Override this method to associate a custom filter table when implementing a filter.","nodes":[{"pos":[0,444],"content":"This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>. Users should create a filter table by calling a constructor for the filter table. The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially. Override this method to associate a custom filter table when implementing a filter.","nodes":[{"content":"This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>. Users should create a filter table by calling a constructor for the filter table. The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially. Override this method to associate a custom filter table when implementing a filter.","pos":[0,444],"nodes":[{"content":"This method is intended to be called by <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilterTable%601&gt;</ph>.","pos":[0,101],"source":"This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>."},{"content":"Users should create a filter table by calling a constructor for the filter table.","pos":[102,183]},{"content":"The default implementation of this method returns a filter table that calls the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A&gt;</ph> method of each filter sequentially.","pos":[184,360],"source":" The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially."},{"content":"Override this method to associate a custom filter table when implementing a filter.","pos":[361,444]}]}]}],"pos":[7258,7703],"yaml":true,"extradata":"MT"},{"content":"Data associated with the filters in the table.","nodes":[{"pos":[0,46],"content":"Data associated with the filters in the table.","nodes":[{"content":"Data associated with the filters in the table.","pos":[0,46]}]}],"pos":[7920,7967],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"></xref> object to which filters associated with <code>FilterData</code> can be added.","nodes":[{"pos":[0,154],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"&gt;&lt;/xref&gt;</ph> object to which filters associated with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">FilterData</ph><ept id=\"p1\">&lt;/code&gt;</ept> can be added.","source":"An <xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"></xref> object to which filters associated with <code>FilterData</code> can be added."}],"pos":[8073,8228],"yaml":true},{"content":"When overridden in a derived class, tests whether a message satisfies the filter criteria. The body cannot be examined.","nodes":[{"pos":[0,119],"content":"When overridden in a derived class, tests whether a message satisfies the filter criteria. The body cannot be examined.","nodes":[{"content":"When overridden in a derived class, tests whether a message satisfies the filter criteria. The body cannot be examined.","pos":[0,119],"nodes":[{"content":"When overridden in a derived class, tests whether a message satisfies the filter criteria.","pos":[0,90]},{"content":"The body cannot be examined.","pos":[91,119]}]}]}],"pos":[9444,9564],"yaml":true},{"content":"This method cannot inspect the contents of the message body.","nodes":[{"pos":[0,60],"content":"This method cannot inspect the contents of the message body.","nodes":[{"content":"This method cannot inspect the contents of the message body.","pos":[0,60]}]}],"pos":[9575,9636],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> object to test.","nodes":[{"pos":[0,77],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> object to test.","source":"The <xref href=\"System.ServiceModel.Channels.Message\"></xref> object to test."}],"pos":[9836,9914],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.Channels.Message\"></xref> object satisfies the filter criteria; otherwise, `false`.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.Message\"&gt;&lt;/xref&gt;</ph> object satisfies the filter criteria; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.Channels.Message\"></xref> object satisfies the filter criteria; otherwise, `false`."}],"pos":[9972,10104],"yaml":true},{"content":"When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.","nodes":[{"pos":[0,104],"content":"When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.","nodes":[{"content":"When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.","pos":[0,104]}]}],"pos":[11341,11446],"yaml":true},{"content":"The message must be fully buffered if the body is to be inspected by the filter. The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter. The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection. The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.","nodes":[{"pos":[0,490],"content":"The message must be fully buffered if the body is to be inspected by the filter. The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter. The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection. The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.","nodes":[{"content":"The message must be fully buffered if the body is to be inspected by the filter. The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter. The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection. The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.","pos":[0,490],"nodes":[{"content":"The message must be fully buffered if the body is to be inspected by the filter.","pos":[0,80]},{"content":"The body of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> is fully buffered and therefore can be inspected by a filter.","pos":[81,208],"source":" The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter."},{"content":"The body of a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> that has not been fully buffered may be consumed by the filter inspection.","pos":[209,341],"source":" The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection."},{"content":"The header element of a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> is automatically buffered and therefore can be inspected without being consumed.","pos":[342,490],"source":" The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed."}]}]}],"pos":[11457,11948],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object to test.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> object to test.","source":"The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object to test."}],"pos":[12158,12242],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object satisfies the filter criteria; otherwise, `false`.","nodes":[{"pos":[0,135],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.MessageBuffer\"&gt;&lt;/xref&gt;</ph> object satisfies the filter criteria; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object satisfies the filter criteria; otherwise, `false`."}],"pos":[12300,12438],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.MessageFilter\n  commentId: T:System.ServiceModel.Dispatcher.MessageFilter\n  id: MessageFilter\n  children:\n  - System.ServiceModel.Dispatcher.MessageFilter.#ctor\n  - System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1\n  - System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)\n  - System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)\n  langs:\n  - csharp\n  name: MessageFilter\n  nameWithType: MessageFilter\n  fullName: System.ServiceModel.Dispatcher.MessageFilter\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: '`abstract` base class for different classes of filters used to query messages.'\n  remarks: \"<xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages. Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message. A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.  \\n  \\n Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>. Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter. The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.  \\n  \\n The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change. The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.  \\n  \\n The following classes implement the `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> class:  \\n  \\n-   <xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match.  \\n  \\n-   <xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages.  \\n  \\n-   <xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages.  \\n  \\n-   <xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions.  \\n  \\n-   <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address.  \\n  \\n <xref:System.ServiceModel.Channels.ChannelListenerBase%601> is an `abstract` base class that you can use for writing non-queuing listeners.\"\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.DataContract]\n\n      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))]\n\n      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))]\n\n      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))]\n\n      [System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))]\n\n      public abstract class MessageFilter\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.ServiceModel.CorrelationActionMessageFilter\n  - System.ServiceModel.Dispatcher.ActionMessageFilter\n  - System.ServiceModel.Dispatcher.EndpointAddressMessageFilter\n  - System.ServiceModel.Dispatcher.EndpointNameMessageFilter\n  - System.ServiceModel.Dispatcher.MatchAllMessageFilter\n  - System.ServiceModel.Dispatcher.MatchNoneMessageFilter\n  - System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter\n  - System.ServiceModel.Dispatcher.StrictAndMessageFilter\n  - System.ServiceModel.Dispatcher.XPathMessageFilter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.Serialization.DataContractAttribute\n  - type: System.Runtime.Serialization.KnownTypeAttribute\n  - type: System.Runtime.Serialization.KnownTypeAttribute\n  - type: System.Runtime.Serialization.KnownTypeAttribute\n  - type: System.Runtime.Serialization.KnownTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilter.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Dispatcher.MessageFilter\n  langs:\n  - csharp\n  name: MessageFilter()\n  nameWithType: MessageFilter.MessageFilter()\n  fullName: MessageFilter.MessageFilter()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When called in a derived class, initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.MessageFilter\"></xref> class.\n  remarks: The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated.\n  syntax:\n    content: protected MessageFilter ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.MessageFilter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1\n  id: CreateFilterTable``1\n  parent: System.ServiceModel.Dispatcher.MessageFilter\n  langs:\n  - csharp\n  name: CreateFilterTable<FilterData>()\n  nameWithType: MessageFilter.CreateFilterTable<FilterData>()\n  fullName: MessageFilter.CreateFilterTable<FilterData>()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Creates a filter table for a filter that has a specified type of data associated with it.\n  remarks: This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>. Users should create a filter table by calling a constructor for the filter table. The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially. Override this method to associate a custom filter table when implementing a filter.\n  syntax:\n    content: protected virtual System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData> CreateFilterTable<FilterData> ();\n    parameters: []\n    typeParameters:\n    - id: FilterData\n      description: Data associated with the filters in the table.\n    return:\n      type: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}\n      description: An <xref href=\"System.ServiceModel.Dispatcher.IMessageFilterTable`1\"></xref> object to which filters associated with <code>FilterData</code> can be added.\n  overload: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)\n  id: Match(System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Dispatcher.MessageFilter\n  langs:\n  - csharp\n  name: Match(Message)\n  nameWithType: MessageFilter.Match(Message)\n  fullName: MessageFilter.Match(Message)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, tests whether a message satisfies the filter criteria. The body cannot be examined.\n  remarks: This method cannot inspect the contents of the message body.\n  syntax:\n    content: public abstract bool Match (System.ServiceModel.Channels.Message message);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The <xref href=\"System.ServiceModel.Channels.Message\"></xref> object to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.Channels.Message\"></xref> object satisfies the filter criteria; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.MessageFilter.Match*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)\n  commentId: M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)\n  id: Match(System.ServiceModel.Channels.MessageBuffer)\n  parent: System.ServiceModel.Dispatcher.MessageFilter\n  langs:\n  - csharp\n  name: Match(MessageBuffer)\n  nameWithType: MessageFilter.Match(MessageBuffer)\n  fullName: MessageFilter.Match(MessageBuffer)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.\n  remarks: The message must be fully buffered if the body is to be inspected by the filter. The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter. The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection. The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.\n  syntax:\n    content: public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);\n    parameters:\n    - id: buffer\n      type: System.ServiceModel.Channels.MessageBuffer\n      description: The <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.Channels.MessageBuffer\"></xref> object satisfies the filter criteria; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.MessageFilter.Match*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor\n  parent: System.ServiceModel.Dispatcher.MessageFilter\n  isExternal: false\n  name: MessageFilter()\n  nameWithType: MessageFilter.MessageFilter()\n  fullName: MessageFilter.MessageFilter()\n- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1\n  parent: System.ServiceModel.Dispatcher.MessageFilter\n  isExternal: false\n  name: CreateFilterTable<FilterData>()\n  nameWithType: MessageFilter.CreateFilterTable<FilterData>()\n  fullName: MessageFilter.CreateFilterTable<FilterData>()\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n  name: IMessageFilterTable<TFilterData>\n  nameWithType: IMessageFilterTable<TFilterData>\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<TFilterData>\n- uid: FilterData\n  name: FilterData\n  nameWithType: FilterData\n  fullName: FilterData\n- uid: System.ServiceModel.Dispatcher.IMessageFilterTable{FilterData}\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: IMessageFilterTable<FilterData>\n  nameWithType: IMessageFilterTable<FilterData>\n  fullName: System.ServiceModel.Dispatcher.IMessageFilterTable<FilterData>\n  spec.csharp:\n  - uid: System.ServiceModel.Dispatcher.IMessageFilterTable`1\n    name: IMessageFilterTable\n    nameWithType: IMessageFilterTable\n    fullName: System.ServiceModel.Dispatcher.IMessageFilterTable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: FilterData\n    name: FilterData\n    nameWithType: FilterData\n    fullName: FilterData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)\n  parent: System.ServiceModel.Dispatcher.MessageFilter\n  isExternal: false\n  name: Match(Message)\n  nameWithType: MessageFilter.Match(Message)\n  fullName: MessageFilter.Match(Message)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)\n  parent: System.ServiceModel.Dispatcher.MessageFilter\n  isExternal: false\n  name: Match(MessageBuffer)\n  nameWithType: MessageFilter.Match(MessageBuffer)\n  fullName: MessageFilter.Match(MessageBuffer)\n- uid: System.ServiceModel.Channels.MessageBuffer\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: MessageBuffer\n  nameWithType: MessageBuffer\n  fullName: System.ServiceModel.Channels.MessageBuffer\n- uid: System.ServiceModel.Dispatcher.MessageFilter.Match*\n  parent: System.ServiceModel.Dispatcher.MessageFilter\n  isExternal: false\n  name: Match\n  nameWithType: MessageFilter.Match\n  fullName: MessageFilter.Match\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilter.#ctor*\n  parent: System.ServiceModel.Dispatcher.MessageFilter\n  isExternal: false\n  name: MessageFilter\n  nameWithType: MessageFilter.MessageFilter\n  fullName: MessageFilter.MessageFilter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml\n- uid: System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1*\n  parent: System.ServiceModel.Dispatcher.MessageFilter\n  isExternal: false\n  name: CreateFilterTable<FilterData>\n  nameWithType: MessageFilter.CreateFilterTable<FilterData>\n  fullName: MessageFilter.CreateFilterTable<FilterData>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/MessageFilter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}