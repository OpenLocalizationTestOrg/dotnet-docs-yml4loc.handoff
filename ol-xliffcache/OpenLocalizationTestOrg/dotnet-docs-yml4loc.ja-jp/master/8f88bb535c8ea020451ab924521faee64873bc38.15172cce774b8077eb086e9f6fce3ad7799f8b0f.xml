{"nodes":[{"content":"Provides methods for working with the runtime metadata for an activity tree.","nodes":[{"pos":[0,76],"content":"Provides methods for working with the runtime metadata for an activity tree.","nodes":[{"content":"Provides methods for working with the runtime metadata for an activity tree.","pos":[0,76]}]}],"pos":[1052,1129],"yaml":true},{"content":"Caches the runtime metadata for the specified activity tree.","nodes":[{"pos":[0,60],"content":"Caches the runtime metadata for the specified activity tree.","nodes":[{"content":"Caches the runtime metadata for the specified activity tree.","pos":[0,60]}]}],"pos":[2657,2718],"yaml":true},{"content":"The root activity of the activity tree.","nodes":[{"pos":[0,39],"content":"The root activity of the activity tree.","nodes":[{"content":"The root activity of the activity tree.","pos":[0,39]}]}],"pos":[2914,2954],"yaml":true},{"content":"Caches the runtime metadata for the specified activity tree using the specified environment.","nodes":[{"pos":[0,92],"content":"Caches the runtime metadata for the specified activity tree using the specified environment.","nodes":[{"content":"Caches the runtime metadata for the specified activity tree using the specified environment.","pos":[0,92]}]}],"pos":[4388,4481],"yaml":true},{"content":"The root activity of the activity tree.","nodes":[{"pos":[0,39],"content":"The root activity of the activity tree.","nodes":[{"content":"The root activity of the activity tree.","pos":[0,39]}]}],"pos":[4741,4781],"yaml":true},{"content":"The environment associated with the activity tree.","nodes":[{"pos":[0,50],"content":"The environment associated with the activity tree.","nodes":[{"content":"The environment associated with the activity tree.","pos":[0,50]}]}],"pos":[4885,4936],"yaml":true},{"content":"Specifies whether the service can include idle activities.","nodes":[{"pos":[0,58],"content":"Specifies whether the service can include idle activities.","nodes":[{"content":"Specifies whether the service can include idle activities.","pos":[0,58]}]}],"pos":[6139,6198],"yaml":true},{"content":"The activity.","nodes":[{"pos":[0,13],"content":"The activity.","nodes":[{"content":"The activity.","pos":[0,13]}]}],"pos":[6386,6400],"yaml":true},{"content":"`True` if the service can include idle activities; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`True`</ph> if the service can include idle activities; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`True` if the service can include idle activities; otherwise, `false`."}],"pos":[6458,6531],"yaml":true},{"content":"Returns an <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> that represents all activities associated with the input activity.","nodes":[{"pos":[0,139],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> that represents all activities associated with the input activity.","source":"Returns an <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> that represents all activities associated with the input activity."}],"pos":[7734,7874],"yaml":true},{"content":"The enumeration contains all child activities, delegate handlers, variable defaults, and argument expressions. If the input activity is `null`, an <xref:System.ArgumentNullException> is thrown. The activity tree must remain unmodified and <xref:System.Activities.WorkflowInspectionServices.CacheMetadata%2A> must not be called while the tree is being enumerated or else an <xref:System.InvalidOperationException> is thrown when <xref:System.Collections.IEnumerator.MoveNext%2A> is called.  \n  \n Calling this method causes a full cache metadata to occur. If you make changes to the workflow after calling this method, you must call the <xref:System.Activities.Validation.ActivityValidationServices> <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> method after making the changes in order to re-cache the metadata.","nodes":[{"pos":[0,488],"content":"The enumeration contains all child activities, delegate handlers, variable defaults, and argument expressions. If the input activity is `null`, an <xref:System.ArgumentNullException> is thrown. The activity tree must remain unmodified and <xref:System.Activities.WorkflowInspectionServices.CacheMetadata%2A> must not be called while the tree is being enumerated or else an <xref:System.InvalidOperationException> is thrown when <xref:System.Collections.IEnumerator.MoveNext%2A> is called.","nodes":[{"content":"The enumeration contains all child activities, delegate handlers, variable defaults, and argument expressions.","pos":[0,110]},{"content":"If the input activity is <ph id=\"ph1\">`null`</ph>, an <ph id=\"ph2\">&lt;xref:System.ArgumentNullException&gt;</ph> is thrown.","pos":[111,193],"source":" If the input activity is `null`, an <xref:System.ArgumentNullException> is thrown."},{"content":"The activity tree must remain unmodified and <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowInspectionServices.CacheMetadata%2A&gt;</ph> must not be called while the tree is being enumerated or else an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.","pos":[194,488],"source":" The activity tree must remain unmodified and <xref:System.Activities.WorkflowInspectionServices.CacheMetadata%2A> must not be called while the tree is being enumerated or else an <xref:System.InvalidOperationException> is thrown when <xref:System.Collections.IEnumerator.MoveNext%2A> is called."}]},{"pos":[495,839],"content":"Calling this method causes a full cache metadata to occur. If you make changes to the workflow after calling this method, you must call the <xref:System.Activities.Validation.ActivityValidationServices> <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> method after making the changes in order to re-cache the metadata.","nodes":[{"content":"Calling this method causes a full cache metadata to occur. If you make changes to the workflow after calling this method, you must call the <xref:System.Activities.Validation.ActivityValidationServices> <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> method after making the changes in order to re-cache the metadata.","pos":[0,344],"nodes":[{"content":"Calling this method causes a full cache metadata to occur.","pos":[0,58]},{"content":"If you make changes to the workflow after calling this method, you must call the <ph id=\"ph1\">&lt;xref:System.Activities.Validation.ActivityValidationServices&gt;</ph> <ph id=\"ph2\">&lt;xref:System.Activities.Validation.ActivityValidationServices.Validate%2A&gt;</ph> method after making the changes in order to re-cache the metadata.","pos":[59,344],"source":" If you make changes to the workflow after calling this method, you must call the <xref:System.Activities.Validation.ActivityValidationServices> <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> method after making the changes in order to re-cache the metadata."}]}]}],"pos":[7885,8729],"yaml":true,"extradata":"MT"},{"content":"The root activity.","nodes":[{"pos":[0,18],"content":"The root activity.","nodes":[{"content":"The root activity.","pos":[0,18]}]}],"pos":[8979,8998],"yaml":true},{"content":"An enumeration that represents all activities associated with the input activity.","nodes":[{"pos":[0,81],"content":"An enumeration that represents all activities associated with the input activity.","nodes":[{"content":"An enumeration that represents all activities associated with the input activity.","pos":[0,81]}]}],"pos":[9108,9190],"yaml":true},{"content":"Retrieves the implementation version of the activity.","nodes":[{"pos":[0,53],"content":"Retrieves the implementation version of the activity.","nodes":[{"content":"Retrieves the implementation version of the activity.","pos":[0,53]}]}],"pos":[10476,10530],"yaml":true},{"content":"The activity.","nodes":[{"pos":[0,13],"content":"The activity.","nodes":[{"content":"The activity.","pos":[0,13]}]}],"pos":[10732,10746],"yaml":true},{"content":"The implementation version of the activity.","nodes":[{"pos":[0,43],"content":"The implementation version of the activity.","nodes":[{"content":"The implementation version of the activity.","pos":[0,43]}]}],"pos":[10804,10848],"yaml":true},{"content":"Returns the activity with the specified <code>id</code> from the specified activity tree.","nodes":[{"pos":[0,89],"content":"Returns the activity with the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">id</ph><ept id=\"p1\">&lt;/code&gt;</ept> from the specified activity tree.","source":"Returns the activity with the specified <code>id</code> from the specified activity tree."}],"pos":[12092,12182],"yaml":true},{"content":"The activity tree to search.","nodes":[{"pos":[0,28],"content":"The activity tree to search.","nodes":[{"content":"The activity tree to search.","pos":[0,28]}]}],"pos":[12389,12418],"yaml":true},{"content":"The identifier of the activity to find.","nodes":[{"pos":[0,39],"content":"The identifier of the activity to find.","nodes":[{"content":"The identifier of the activity to find.","pos":[0,39]}]}],"pos":[12476,12516],"yaml":true},{"content":"The specified activity if found; otherwise, an <xref href=\"System.ArgumentException\"></xref> is thrown.","nodes":[{"pos":[0,103],"content":"The specified activity if found; otherwise, an <ph id=\"ph1\">&lt;xref href=\"System.ArgumentException\"&gt;&lt;/xref&gt;</ph> is thrown.","source":"The specified activity if found; otherwise, an <xref href=\"System.ArgumentException\"></xref> is thrown."}],"pos":[12586,12690],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.WorkflowInspectionServices\n  commentId: T:System.Activities.WorkflowInspectionServices\n  id: WorkflowInspectionServices\n  children:\n  - System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)\n  - System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  - System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)\n  - System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)\n  - System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)\n  - System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)\n  langs:\n  - csharp\n  name: WorkflowInspectionServices\n  nameWithType: WorkflowInspectionServices\n  fullName: System.Activities.WorkflowInspectionServices\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Provides methods for working with the runtime metadata for an activity tree.\n  syntax:\n    content: public static class WorkflowInspectionServices\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)\n  commentId: M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)\n  id: CacheMetadata(System.Activities.Activity)\n  parent: System.Activities.WorkflowInspectionServices\n  langs:\n  - csharp\n  name: CacheMetadata(Activity)\n  nameWithType: WorkflowInspectionServices.CacheMetadata(Activity)\n  fullName: WorkflowInspectionServices.CacheMetadata(Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Caches the runtime metadata for the specified activity tree.\n  syntax:\n    content: public static void CacheMetadata (System.Activities.Activity rootActivity);\n    parameters:\n    - id: rootActivity\n      type: System.Activities.Activity\n      description: The root activity of the activity tree.\n  overload: System.Activities.WorkflowInspectionServices.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  commentId: M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  id: CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  parent: System.Activities.WorkflowInspectionServices\n  langs:\n  - csharp\n  name: CacheMetadata(Activity, LocationReferenceEnvironment)\n  nameWithType: WorkflowInspectionServices.CacheMetadata(Activity, LocationReferenceEnvironment)\n  fullName: WorkflowInspectionServices.CacheMetadata(Activity, LocationReferenceEnvironment)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Caches the runtime metadata for the specified activity tree using the specified environment.\n  syntax:\n    content: public static void CacheMetadata (System.Activities.Activity rootActivity, System.Activities.LocationReferenceEnvironment hostEnvironment);\n    parameters:\n    - id: rootActivity\n      type: System.Activities.Activity\n      description: The root activity of the activity tree.\n    - id: hostEnvironment\n      type: System.Activities.LocationReferenceEnvironment\n      description: The environment associated with the activity tree.\n  overload: System.Activities.WorkflowInspectionServices.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)\n  commentId: M:System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)\n  id: CanInduceIdle(System.Activities.Activity)\n  parent: System.Activities.WorkflowInspectionServices\n  langs:\n  - csharp\n  name: CanInduceIdle(Activity)\n  nameWithType: WorkflowInspectionServices.CanInduceIdle(Activity)\n  fullName: WorkflowInspectionServices.CanInduceIdle(Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Specifies whether the service can include idle activities.\n  syntax:\n    content: public static bool CanInduceIdle (System.Activities.Activity activity);\n    parameters:\n    - id: activity\n      type: System.Activities.Activity\n      description: The activity.\n    return:\n      type: System.Boolean\n      description: '`True` if the service can include idle activities; otherwise, `false`.'\n  overload: System.Activities.WorkflowInspectionServices.CanInduceIdle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)\n  commentId: M:System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)\n  id: GetActivities(System.Activities.Activity)\n  parent: System.Activities.WorkflowInspectionServices\n  langs:\n  - csharp\n  name: GetActivities(Activity)\n  nameWithType: WorkflowInspectionServices.GetActivities(Activity)\n  fullName: WorkflowInspectionServices.GetActivities(Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns an <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> that represents all activities associated with the input activity.\n  remarks: \"The enumeration contains all child activities, delegate handlers, variable defaults, and argument expressions. If the input activity is `null`, an <xref:System.ArgumentNullException> is thrown. The activity tree must remain unmodified and <xref:System.Activities.WorkflowInspectionServices.CacheMetadata%2A> must not be called while the tree is being enumerated or else an <xref:System.InvalidOperationException> is thrown when <xref:System.Collections.IEnumerator.MoveNext%2A> is called.  \\n  \\n Calling this method causes a full cache metadata to occur. If you make changes to the workflow after calling this method, you must call the <xref:System.Activities.Validation.ActivityValidationServices> <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> method after making the changes in order to re-cache the metadata.\"\n  syntax:\n    content: public static System.Collections.Generic.IEnumerable<System.Activities.Activity> GetActivities (System.Activities.Activity activity);\n    parameters:\n    - id: activity\n      type: System.Activities.Activity\n      description: The root activity.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Activities.Activity}\n      description: An enumeration that represents all activities associated with the input activity.\n  overload: System.Activities.WorkflowInspectionServices.GetActivities*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)\n  commentId: M:System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)\n  id: GetImplementationVersion(System.Activities.Activity)\n  parent: System.Activities.WorkflowInspectionServices\n  langs:\n  - csharp\n  name: GetImplementationVersion(Activity)\n  nameWithType: WorkflowInspectionServices.GetImplementationVersion(Activity)\n  fullName: WorkflowInspectionServices.GetImplementationVersion(Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Retrieves the implementation version of the activity.\n  syntax:\n    content: public static Version GetImplementationVersion (System.Activities.Activity activity);\n    parameters:\n    - id: activity\n      type: System.Activities.Activity\n      description: The activity.\n    return:\n      type: System.Version\n      description: The implementation version of the activity.\n  overload: System.Activities.WorkflowInspectionServices.GetImplementationVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)\n  commentId: M:System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)\n  id: Resolve(System.Activities.Activity,System.String)\n  parent: System.Activities.WorkflowInspectionServices\n  langs:\n  - csharp\n  name: Resolve(Activity, String)\n  nameWithType: WorkflowInspectionServices.Resolve(Activity, String)\n  fullName: WorkflowInspectionServices.Resolve(Activity, String)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns the activity with the specified <code>id</code> from the specified activity tree.\n  syntax:\n    content: public static System.Activities.Activity Resolve (System.Activities.Activity root, string id);\n    parameters:\n    - id: root\n      type: System.Activities.Activity\n      description: The activity tree to search.\n    - id: id\n      type: System.String\n      description: The identifier of the activity to find.\n    return:\n      type: System.Activities.Activity\n      description: The specified activity if found; otherwise, an <xref href=\"System.ArgumentException\"></xref> is thrown.\n  overload: System.Activities.WorkflowInspectionServices.Resolve*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)\n  parent: System.Activities.WorkflowInspectionServices\n  isExternal: false\n  name: CacheMetadata(Activity)\n  nameWithType: WorkflowInspectionServices.CacheMetadata(Activity)\n  fullName: WorkflowInspectionServices.CacheMetadata(Activity)\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)\n  parent: System.Activities.WorkflowInspectionServices\n  isExternal: false\n  name: CacheMetadata(Activity, LocationReferenceEnvironment)\n  nameWithType: WorkflowInspectionServices.CacheMetadata(Activity, LocationReferenceEnvironment)\n  fullName: WorkflowInspectionServices.CacheMetadata(Activity, LocationReferenceEnvironment)\n- uid: System.Activities.LocationReferenceEnvironment\n  parent: System.Activities\n  isExternal: false\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment\n  fullName: System.Activities.LocationReferenceEnvironment\n- uid: System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)\n  parent: System.Activities.WorkflowInspectionServices\n  isExternal: false\n  name: CanInduceIdle(Activity)\n  nameWithType: WorkflowInspectionServices.CanInduceIdle(Activity)\n  fullName: WorkflowInspectionServices.CanInduceIdle(Activity)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)\n  parent: System.Activities.WorkflowInspectionServices\n  isExternal: false\n  name: GetActivities(Activity)\n  nameWithType: WorkflowInspectionServices.GetActivities(Activity)\n  fullName: WorkflowInspectionServices.GetActivities(Activity)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Activities.Activity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Activity>\n  nameWithType: IEnumerable<Activity>\n  fullName: System.Collections.Generic.IEnumerable<System.Activities.Activity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Activities.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)\n  parent: System.Activities.WorkflowInspectionServices\n  isExternal: false\n  name: GetImplementationVersion(Activity)\n  nameWithType: WorkflowInspectionServices.GetImplementationVersion(Activity)\n  fullName: WorkflowInspectionServices.GetImplementationVersion(Activity)\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)\n  parent: System.Activities.WorkflowInspectionServices\n  isExternal: false\n  name: Resolve(Activity, String)\n  nameWithType: WorkflowInspectionServices.Resolve(Activity, String)\n  fullName: WorkflowInspectionServices.Resolve(Activity, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.WorkflowInspectionServices.CacheMetadata*\n  parent: System.Activities.WorkflowInspectionServices\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: WorkflowInspectionServices.CacheMetadata\n  fullName: WorkflowInspectionServices.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n- uid: System.Activities.WorkflowInspectionServices.CanInduceIdle*\n  parent: System.Activities.WorkflowInspectionServices\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: WorkflowInspectionServices.CanInduceIdle\n  fullName: WorkflowInspectionServices.CanInduceIdle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n- uid: System.Activities.WorkflowInspectionServices.GetActivities*\n  parent: System.Activities.WorkflowInspectionServices\n  isExternal: false\n  name: GetActivities\n  nameWithType: WorkflowInspectionServices.GetActivities\n  fullName: WorkflowInspectionServices.GetActivities\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n- uid: System.Activities.WorkflowInspectionServices.GetImplementationVersion*\n  parent: System.Activities.WorkflowInspectionServices\n  isExternal: false\n  name: GetImplementationVersion\n  nameWithType: WorkflowInspectionServices.GetImplementationVersion\n  fullName: WorkflowInspectionServices.GetImplementationVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n- uid: System.Activities.WorkflowInspectionServices.Resolve*\n  parent: System.Activities.WorkflowInspectionServices\n  isExternal: false\n  name: Resolve\n  nameWithType: WorkflowInspectionServices.Resolve\n  fullName: WorkflowInspectionServices.Resolve\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/WorkflowInspectionServices.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}