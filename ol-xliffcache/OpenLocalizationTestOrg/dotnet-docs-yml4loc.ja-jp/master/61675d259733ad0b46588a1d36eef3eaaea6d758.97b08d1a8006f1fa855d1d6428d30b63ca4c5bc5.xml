{"nodes":[{"content":"Provides the default implementations of the <xref href=\"System.Runtime.Remoting.Contexts.IContextAttribute\"></xref> and <xref href=\"System.Runtime.Remoting.Contexts.IContextProperty\"></xref> interfaces.","nodes":[{"pos":[0,202],"content":"Provides the default implementations of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Contexts.IContextAttribute\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Remoting.Contexts.IContextProperty\"&gt;&lt;/xref&gt;</ph> interfaces.","source":"Provides the default implementations of the <xref href=\"System.Runtime.Remoting.Contexts.IContextAttribute\"></xref> and <xref href=\"System.Runtime.Remoting.Contexts.IContextProperty\"></xref> interfaces."}],"pos":[1299,1502],"yaml":true},{"content":"The <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class is the root for all context attributes. Simple <xref:System.Runtime.Remoting.Contexts.Context> class properties can be derived from <xref:System.Runtime.Remoting.Contexts.ContextAttribute> with the context attribute and the context property being in the class. For more specialized or more sophisticated needs, the context attribute can derive from <xref:System.Runtime.Remoting.Contexts.ContextAttribute> and the context property can be split into a separated class. For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,669],"content":"The <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class is the root for all context attributes. Simple <xref:System.Runtime.Remoting.Contexts.Context> class properties can be derived from <xref:System.Runtime.Remoting.Contexts.ContextAttribute> with the context attribute and the context property being in the class. For more specialized or more sophisticated needs, the context attribute can derive from <xref:System.Runtime.Remoting.Contexts.ContextAttribute> and the context property can be split into a separated class. For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.ContextAttribute&gt;</ph> class is the root for all context attributes.","pos":[0,106],"source":"The <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class is the root for all context attributes."},{"content":"Simple <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.Context&gt;</ph> class properties can be derived from <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Contexts.ContextAttribute&gt;</ph> with the context attribute and the context property being in the class.","pos":[107,327],"source":" Simple <xref:System.Runtime.Remoting.Contexts.Context> class properties can be derived from <xref:System.Runtime.Remoting.Contexts.ContextAttribute> with the context attribute and the context property being in the class."},{"content":"For more specialized or more sophisticated needs, the context attribute can derive from <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.ContextAttribute&gt;</ph> and the context property can be split into a separated class.","pos":[328,534],"source":" For more specialized or more sophisticated needs, the context attribute can derive from <xref:System.Runtime.Remoting.Contexts.ContextAttribute> and the context property can be split into a separated class."},{"content":"For more information about using attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","pos":[535,669],"source":" For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}]}],"pos":[1513,2183],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of the <xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"></xref> class with the specified name.","nodes":[{"pos":[0,128],"content":"Creates an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified name.","source":"Creates an instance of the <xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"></xref> class with the specified name."}],"pos":[7648,7777],"yaml":true},{"content":"The name of the context attribute.","nodes":[{"pos":[0,34],"content":"The name of the context attribute.","nodes":[{"content":"The name of the context attribute.","pos":[0,34]}]}],"pos":[7915,7950],"yaml":true},{"content":"Indicates the name of the context attribute.","nodes":[{"pos":[0,44],"content":"Indicates the name of the context attribute.","nodes":[{"content":"Indicates the name of the context attribute.","pos":[0,44]}]}],"pos":[9154,9199],"yaml":true},{"content":"Returns a Boolean value indicating whether this instance is equal to the specified object.","nodes":[{"pos":[0,90],"content":"Returns a Boolean value indicating whether this instance is equal to the specified object.","nodes":[{"content":"Returns a Boolean value indicating whether this instance is equal to the specified object.","pos":[0,90]}]}],"pos":[10477,10568],"yaml":true},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[10704,10746],"yaml":true},{"content":"`true` if <code>o</code> is not `null` and if the object names are equivalent; otherwise, `false`.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">o</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <ph id=\"ph3\">`null`</ph> and if the object names are equivalent; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>o</code> is not `null` and if the object names are equivalent; otherwise, `false`."}],"pos":[10804,10905],"yaml":true},{"content":"Called when the context is frozen.","nodes":[{"pos":[0,34],"content":"Called when the context is frozen.","nodes":[{"content":"Called when the context is frozen.","pos":[0,34]}]}],"pos":[12222,12257],"yaml":true},{"content":"Context properties cannot be added after the context has been frozen.","nodes":[{"pos":[0,69],"content":"Context properties cannot be added after the context has been frozen.","nodes":[{"content":"Context properties cannot be added after the context has been frozen.","pos":[0,69]}]}],"pos":[12268,12338],"yaml":true,"extradata":"MT"},{"content":"The context to freeze.","nodes":[{"pos":[0,22],"content":"The context to freeze.","nodes":[{"content":"The context to freeze.","pos":[0,22]}]}],"pos":[12552,12575],"yaml":true},{"content":"Returns the hashcode for this instance of <xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"></xref>.","nodes":[{"pos":[0,113],"content":"Returns the hashcode for this instance of <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the hashcode for this instance of <xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"></xref>."}],"pos":[13775,13889],"yaml":true},{"content":"The hashcode for this instance of <xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"></xref>.","nodes":[{"pos":[0,105],"content":"The hashcode for this instance of <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"The hashcode for this instance of <xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"></xref>."}],"pos":[14023,14129],"yaml":true},{"content":"Adds the current context property to the given message.","nodes":[{"pos":[0,55],"content":"Adds the current context property to the given message.","nodes":[{"content":"Adds the current context property to the given message.","pos":[0,55]}]}],"pos":[15679,15735],"yaml":true},{"content":"The <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class is an implementation of an <xref:System.Runtime.Remoting.Contexts.IContextProperty> property. The <xref:System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext%2A> method adds the property to the given <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> class so that when the message is received, the new object can be created in the required context environment.","nodes":[{"pos":[0,467],"content":"The <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class is an implementation of an <xref:System.Runtime.Remoting.Contexts.IContextProperty> property. The <xref:System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext%2A> method adds the property to the given <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> class so that when the message is received, the new object can be created in the required context environment.","nodes":[{"content":"The <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class is an implementation of an <xref:System.Runtime.Remoting.Contexts.IContextProperty> property. The <xref:System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext%2A> method adds the property to the given <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> class so that when the message is received, the new object can be created in the required context environment.","pos":[0,467],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.ContextAttribute&gt;</ph> class is an implementation of an <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Contexts.IContextProperty&gt;</ph> property.","pos":[0,160],"source":"The <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class is an implementation of an <xref:System.Runtime.Remoting.Contexts.IContextProperty> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext%2A&gt;</ph> method adds the property to the given <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Activation.IConstructionCallMessage&gt;</ph> class so that when the message is received, the new object can be created in the required context environment.","pos":[161,467],"source":" The <xref:System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext%2A> method adds the property to the given <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> class so that when the message is received, the new object can be created in the required context environment."}]}]}],"pos":[15746,16214],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.Remoting.Activation.IConstructionCallMessage\"></xref> to which to add the context property.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Activation.IConstructionCallMessage\"&gt;&lt;/xref&gt;</ph> to which to add the context property.","source":"The <xref href=\"System.Runtime.Remoting.Activation.IConstructionCallMessage\"></xref> to which to add the context property."}],"pos":[16480,16603],"yaml":true},{"content":"The <code>ctorMsg</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">ctorMsg</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>ctorMsg</code> parameter is `null`."}],"pos":[16809,16855],"yaml":true},{"content":"Returns a Boolean value indicating whether the context parameter meets the context attribute's requirements.","nodes":[{"pos":[0,108],"content":"Returns a Boolean value indicating whether the context parameter meets the context attribute's requirements.","nodes":[{"content":"Returns a Boolean value indicating whether the context parameter meets the context attribute's requirements.","pos":[0,108]}]}],"pos":[18373,18482],"yaml":true},{"content":"The context in which to check.","nodes":[{"pos":[0,30],"content":"The context in which to check.","nodes":[{"content":"The context in which to check.","pos":[0,30]}]}],"pos":[18756,18787],"yaml":true},{"content":"The <xref href=\"System.Runtime.Remoting.Activation.IConstructionCallMessage\"></xref> to which to add the context property.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Activation.IConstructionCallMessage\"&gt;&lt;/xref&gt;</ph> to which to add the context property.","source":"The <xref href=\"System.Runtime.Remoting.Activation.IConstructionCallMessage\"></xref> to which to add the context property."}],"pos":[18896,19019],"yaml":true},{"content":"`true` if the passed in context is okay; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the passed in context is okay; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the passed in context is okay; otherwise, `false`."}],"pos":[19077,19140],"yaml":true},{"content":"Either <code>ctx</code> or <code>ctorMsg</code> is `null`.","nodes":[{"pos":[0,58],"content":"Either <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">ctx</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">ctorMsg</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"Either <code>ctx</code> or <code>ctorMsg</code> is `null`."}],"pos":[19331,19390],"yaml":true},{"content":"Returns a Boolean value indicating whether the context property is compatible with the new context.","nodes":[{"pos":[0,99],"content":"Returns a Boolean value indicating whether the context property is compatible with the new context.","nodes":[{"content":"Returns a Boolean value indicating whether the context property is compatible with the new context.","pos":[0,99]}]}],"pos":[20668,20768],"yaml":true},{"content":"Once all the context properties have been added to the new context, they are all queried as to whether they are okay in the new context. The context property could look at the other context properties in the <xref:System.Runtime.Remoting.Contexts.Context.ContextProperties%2A> property of the new context and determine whether it is compatible with these other context properties.  \n  \n> [!NOTE]\n>  By default, the <xref:System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK%2A> method returns `true`.","nodes":[{"pos":[0,380],"content":"Once all the context properties have been added to the new context, they are all queried as to whether they are okay in the new context. The context property could look at the other context properties in the <xref:System.Runtime.Remoting.Contexts.Context.ContextProperties%2A> property of the new context and determine whether it is compatible with these other context properties.","nodes":[{"content":"Once all the context properties have been added to the new context, they are all queried as to whether they are okay in the new context. The context property could look at the other context properties in the <xref:System.Runtime.Remoting.Contexts.Context.ContextProperties%2A> property of the new context and determine whether it is compatible with these other context properties.","pos":[0,380],"nodes":[{"content":"Once all the context properties have been added to the new context, they are all queried as to whether they are okay in the new context.","pos":[0,136]},{"content":"The context property could look at the other context properties in the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.Context.ContextProperties%2A&gt;</ph> property of the new context and determine whether it is compatible with these other context properties.","pos":[137,380],"source":" The context property could look at the other context properties in the <xref:System.Runtime.Remoting.Contexts.Context.ContextProperties%2A> property of the new context and determine whether it is compatible with these other context properties."}]}]},{"pos":[388,512],"content":"[!NOTE]\n By default, the <xref:System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK%2A> method returns `true`.","leadings":["","> "],"nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK%2A&gt;</ph> method returns <ph id=\"ph2\">`true`</ph>.","pos":[9,122],"source":" By default, the <xref:System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK%2A> method returns `true`."}]}],"pos":[20779,21297],"yaml":true,"extradata":"MT"},{"content":"The new context in which the property has been created.","nodes":[{"pos":[0,55],"content":"The new context in which the property has been created.","nodes":[{"content":"The new context in which the property has been created.","pos":[0,55]}]}],"pos":[21511,21567],"yaml":true},{"content":"`true` if the context property is okay with the new context; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if the context property is okay with the new context; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the context property is okay with the new context; otherwise, `false`."}],"pos":[21625,21708],"yaml":true},{"content":"Gets the name of the context attribute.","nodes":[{"pos":[0,39],"content":"Gets the name of the context attribute.","nodes":[{"content":"Gets the name of the context attribute.","pos":[0,39]}]}],"pos":[22870,22910],"yaml":true},{"content":"Default implementation of this property provides <xref:System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName> as the property name.","nodes":[{"pos":[0,141],"content":"Default implementation of this property provides <xref:System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName> as the property name.","nodes":[{"content":"Default implementation of this property provides <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName&gt;</ph> as the property name.","pos":[0,141],"source":"Default implementation of this property provides <xref:System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName> as the property name."}]}],"pos":[22921,23063],"yaml":true,"extradata":"MT"},{"content":"The name of the context attribute.","nodes":[{"pos":[0,34],"content":"The name of the context attribute.","nodes":[{"content":"The name of the context attribute.","pos":[0,34]}]}],"pos":[23179,23214],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute\n  commentId: T:System.Runtime.Remoting.Contexts.ContextAttribute\n  id: ContextAttribute\n  children:\n  - System.Runtime.Remoting.Contexts.ContextAttribute.#ctor(System.String)\n  - System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName\n  - System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)\n  - System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)\n  - System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode\n  - System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  - System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  - System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)\n  - System.Runtime.Remoting.Contexts.ContextAttribute.Name\n  langs:\n  - csharp\n  name: ContextAttribute\n  nameWithType: ContextAttribute\n  fullName: System.Runtime.Remoting.Contexts.ContextAttribute\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Provides the default implementations of the <xref href=\"System.Runtime.Remoting.Contexts.IContextAttribute\"></xref> and <xref href=\"System.Runtime.Remoting.Contexts.IContextProperty\"></xref> interfaces.\n  remarks: The <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class is the root for all context attributes. Simple <xref:System.Runtime.Remoting.Contexts.Context> class properties can be derived from <xref:System.Runtime.Remoting.Contexts.ContextAttribute> with the context attribute and the context property being in the class. For more specialized or more sophisticated needs, the context attribute can derive from <xref:System.Runtime.Remoting.Contexts.ContextAttribute> and the context property can be split into a separated class. For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ContextAttribute : Attribute, System.Runtime.Remoting.Contexts.IContextAttribute, System.Runtime.Remoting.Contexts.IContextProperty\n  inheritance:\n  - System.Object\n  - System.Attribute\n  derivedClasses:\n  - System.Runtime.Remoting.Activation.UrlAttribute\n  - System.Runtime.Remoting.Contexts.SynchronizationAttribute\n  implements:\n  - System.Runtime.Remoting.Contexts.IContextAttribute\n  - System.Runtime.Remoting.Contexts.IContextProperty\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.#ctor(System.String)\n  commentId: M:System.Runtime.Remoting.Contexts.ContextAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  langs:\n  - csharp\n  name: ContextAttribute(String)\n  nameWithType: ContextAttribute.ContextAttribute(String)\n  fullName: ContextAttribute.ContextAttribute(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Creates an instance of the <xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"></xref> class with the specified name.\n  syntax:\n    content: public ContextAttribute (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the context attribute.\n  overload: System.Runtime.Remoting.Contexts.ContextAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName\n  commentId: F:System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName\n  id: AttributeName\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  langs:\n  - csharp\n  name: AttributeName\n  nameWithType: ContextAttribute.AttributeName\n  fullName: ContextAttribute.AttributeName\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Indicates the name of the context attribute.\n  syntax:\n    content: protected string AttributeName;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)\n  commentId: M:System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ContextAttribute.Equals(Object)\n  fullName: ContextAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Returns a Boolean value indicating whether this instance is equal to the specified object.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The object to compare with this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>o</code> is not `null` and if the object names are equivalent; otherwise, `false`.'\n  overload: System.Runtime.Remoting.Contexts.ContextAttribute.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)\n  commentId: M:System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)\n  id: Freeze(System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  langs:\n  - csharp\n  name: Freeze(Context)\n  nameWithType: ContextAttribute.Freeze(Context)\n  fullName: ContextAttribute.Freeze(Context)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Called when the context is frozen.\n  remarks: Context properties cannot be added after the context has been frozen.\n  syntax:\n    content: public virtual void Freeze (System.Runtime.Remoting.Contexts.Context newContext);\n    parameters:\n    - id: newContext\n      type: System.Runtime.Remoting.Contexts.Context\n      description: The context to freeze.\n  overload: System.Runtime.Remoting.Contexts.ContextAttribute.Freeze*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode\n  commentId: M:System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ContextAttribute.GetHashCode()\n  fullName: ContextAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Returns the hashcode for this instance of <xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hashcode for this instance of <xref href=\"System.Runtime.Remoting.Contexts.ContextAttribute\"></xref>.\n  overload: System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  commentId: M:System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  id: GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  langs:\n  - csharp\n  name: GetPropertiesForNewContext(IConstructionCallMessage)\n  nameWithType: ContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)\n  fullName: ContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Adds the current context property to the given message.\n  remarks: The <xref:System.Runtime.Remoting.Contexts.ContextAttribute> class is an implementation of an <xref:System.Runtime.Remoting.Contexts.IContextProperty> property. The <xref:System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext%2A> method adds the property to the given <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> class so that when the message is received, the new object can be created in the required context environment.\n  syntax:\n    content: public virtual void GetPropertiesForNewContext (System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);\n    parameters:\n    - id: ctorMsg\n      type: System.Runtime.Remoting.Activation.IConstructionCallMessage\n      description: The <xref href=\"System.Runtime.Remoting.Activation.IConstructionCallMessage\"></xref> to which to add the context property.\n  overload: System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>ctorMsg</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  commentId: M:System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  id: IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  langs:\n  - csharp\n  name: IsContextOK(Context, IConstructionCallMessage)\n  nameWithType: ContextAttribute.IsContextOK(Context, IConstructionCallMessage)\n  fullName: ContextAttribute.IsContextOK(Context, IConstructionCallMessage)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Returns a Boolean value indicating whether the context parameter meets the context attribute's requirements.\n  syntax:\n    content: public virtual bool IsContextOK (System.Runtime.Remoting.Contexts.Context ctx, System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);\n    parameters:\n    - id: ctx\n      type: System.Runtime.Remoting.Contexts.Context\n      description: The context in which to check.\n    - id: ctorMsg\n      type: System.Runtime.Remoting.Activation.IConstructionCallMessage\n      description: The <xref href=\"System.Runtime.Remoting.Activation.IConstructionCallMessage\"></xref> to which to add the context property.\n    return:\n      type: System.Boolean\n      description: '`true` if the passed in context is okay; otherwise, `false`.'\n  overload: System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Either <code>ctx</code> or <code>ctorMsg</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)\n  commentId: M:System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)\n  id: IsNewContextOK(System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  langs:\n  - csharp\n  name: IsNewContextOK(Context)\n  nameWithType: ContextAttribute.IsNewContextOK(Context)\n  fullName: ContextAttribute.IsNewContextOK(Context)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Returns a Boolean value indicating whether the context property is compatible with the new context.\n  remarks: \"Once all the context properties have been added to the new context, they are all queried as to whether they are okay in the new context. The context property could look at the other context properties in the <xref:System.Runtime.Remoting.Contexts.Context.ContextProperties%2A> property of the new context and determine whether it is compatible with these other context properties.  \\n  \\n> [!NOTE]\\n>  By default, the <xref:System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK%2A> method returns `true`.\"\n  syntax:\n    content: public virtual bool IsNewContextOK (System.Runtime.Remoting.Contexts.Context newCtx);\n    parameters:\n    - id: newCtx\n      type: System.Runtime.Remoting.Contexts.Context\n      description: The new context in which the property has been created.\n    return:\n      type: System.Boolean\n      description: '`true` if the context property is okay with the new context; otherwise, `false`.'\n  overload: System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Name\n  commentId: P:System.Runtime.Remoting.Contexts.ContextAttribute.Name\n  id: Name\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ContextAttribute.Name\n  fullName: ContextAttribute.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Gets the name of the context attribute.\n  remarks: Default implementation of this property provides <xref:System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName> as the property name.\n  syntax:\n    content: public virtual string Name { get; }\n    return:\n      type: System.String\n      description: The name of the context attribute.\n  overload: System.Runtime.Remoting.Contexts.ContextAttribute.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.#ctor(System.String)\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: ContextAttribute(String)\n  nameWithType: ContextAttribute.ContextAttribute(String)\n  fullName: ContextAttribute.ContextAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.AttributeName\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: AttributeName\n  nameWithType: ContextAttribute.AttributeName\n  fullName: ContextAttribute.AttributeName\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Equals(System.Object)\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ContextAttribute.Equals(Object)\n  fullName: ContextAttribute.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Freeze(System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: Freeze(Context)\n  nameWithType: ContextAttribute.Freeze(Context)\n  fullName: ContextAttribute.Freeze(Context)\n- uid: System.Runtime.Remoting.Contexts.Context\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: Context\n  nameWithType: Context\n  fullName: System.Runtime.Remoting.Contexts.Context\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ContextAttribute.GetHashCode()\n  fullName: ContextAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: GetPropertiesForNewContext(IConstructionCallMessage)\n  nameWithType: ContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)\n  fullName: ContextAttribute.GetPropertiesForNewContext(IConstructionCallMessage)\n- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage\n  parent: System.Runtime.Remoting.Activation\n  isExternal: false\n  name: IConstructionCallMessage\n  nameWithType: IConstructionCallMessage\n  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: IsContextOK(Context, IConstructionCallMessage)\n  nameWithType: ContextAttribute.IsContextOK(Context, IConstructionCallMessage)\n  fullName: ContextAttribute.IsContextOK(Context, IConstructionCallMessage)\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: IsNewContextOK(Context)\n  nameWithType: ContextAttribute.IsNewContextOK(Context)\n  fullName: ContextAttribute.IsNewContextOK(Context)\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Name\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ContextAttribute.Name\n  fullName: ContextAttribute.Name\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.#ctor*\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: ContextAttribute\n  nameWithType: ContextAttribute.ContextAttribute\n  fullName: ContextAttribute.ContextAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Equals*\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: ContextAttribute.Equals\n  fullName: ContextAttribute.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Freeze*\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: Freeze\n  nameWithType: ContextAttribute.Freeze\n  fullName: ContextAttribute.Freeze\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetHashCode*\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ContextAttribute.GetHashCode\n  fullName: ContextAttribute.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.GetPropertiesForNewContext*\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: GetPropertiesForNewContext\n  nameWithType: ContextAttribute.GetPropertiesForNewContext\n  fullName: ContextAttribute.GetPropertiesForNewContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsContextOK*\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: IsContextOK\n  nameWithType: ContextAttribute.IsContextOK\n  fullName: ContextAttribute.IsContextOK\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.IsNewContextOK*\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: IsNewContextOK\n  nameWithType: ContextAttribute.IsNewContextOK\n  fullName: ContextAttribute.IsNewContextOK\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n- uid: System.Runtime.Remoting.Contexts.ContextAttribute.Name*\n  parent: System.Runtime.Remoting.Contexts.ContextAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ContextAttribute.Name\n  fullName: ContextAttribute.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/ContextAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Runtime.Remoting.Contexts.IContextAttribute\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContextAttribute\n  nameWithType: IContextAttribute\n  fullName: System.Runtime.Remoting.Contexts.IContextAttribute\n- uid: System.Runtime.Remoting.Contexts.IContextProperty\n  parent: System.Runtime.Remoting.Contexts\n  isExternal: false\n  name: IContextProperty\n  nameWithType: IContextProperty\n  fullName: System.Runtime.Remoting.Contexts.IContextProperty\n"}