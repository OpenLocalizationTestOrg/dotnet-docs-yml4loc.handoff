{"nodes":[{"content":"Discovers the attributes of a parameter and provides access to parameter metadata.","nodes":[{"pos":[0,82],"content":"Discovers the attributes of a parameter and provides access to parameter metadata.","nodes":[{"content":"Discovers the attributes of a parameter and provides access to parameter metadata.","pos":[0,82]}]}],"pos":[2973,3056],"yaml":true},{"content":"Use an instance of `ParameterInfo` to obtain information about the parameter's data type, default value, and so on.  \n  \n <xref:System.Reflection.MethodBase.GetParameters%2A> returns an array of `ParameterInfo` objects representing the parameters of a method, in order.","nodes":[{"pos":[0,115],"content":"Use an instance of <ph id=\"ph1\">`ParameterInfo`</ph> to obtain information about the parameter's data type, default value, and so on.","source":"Use an instance of `ParameterInfo` to obtain information about the parameter's data type, default value, and so on."},{"pos":[122,269],"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A&gt;</ph> returns an array of <ph id=\"ph2\">`ParameterInfo`</ph> objects representing the parameters of a method, in order.","source":"<xref:System.Reflection.MethodBase.GetParameters%2A> returns an array of `ParameterInfo` objects representing the parameters of a method, in order."}],"pos":[3067,3341],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the `ParameterInfo` class.","nodes":[{"pos":[0,56],"content":"Initializes a new instance of the <ph id=\"ph1\">`ParameterInfo`</ph> class.","source":"Initializes a new instance of the `ParameterInfo` class."}],"pos":[7611,7668],"yaml":true},{"content":"Gets the attributes for this parameter.","nodes":[{"pos":[0,39],"content":"Gets the attributes for this parameter.","nodes":[{"content":"Gets the attributes for this parameter.","pos":[0,39]}]}],"pos":[8961,9001],"yaml":true},{"content":"This method utilizes the <xref:System.Reflection.ParameterInfo.AttrsImpl> method.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"pos":[0,81],"content":"This method utilizes the <xref:System.Reflection.ParameterInfo.AttrsImpl> method.","nodes":[{"content":"This method utilizes the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.AttrsImpl&gt;</ph> method.","pos":[0,81],"source":"This method utilizes the <xref:System.Reflection.ParameterInfo.AttrsImpl> method."}]},{"pos":[88,277],"content":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"content":"To get the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> array, first get the method or the constructor and then call <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt;</ph>.","pos":[0,189],"source":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."}]}],"pos":[9012,9294],"yaml":true,"extradata":"MT"},{"content":"A `ParameterAttributes` object representing the attributes for this parameter.","nodes":[{"pos":[0,78],"content":"A <ph id=\"ph1\">`ParameterAttributes`</ph> object representing the attributes for this parameter.","source":"A `ParameterAttributes` object representing the attributes for this parameter."}],"pos":[10153,10232],"yaml":true},{"content":"The attributes of the parameter.","nodes":[{"pos":[0,32],"content":"The attributes of the parameter.","nodes":[{"content":"The attributes of the parameter.","pos":[0,32]}]}],"pos":[11773,11806],"yaml":true},{"content":"This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to parameter attributes is through <xref:System.Reflection.ParameterInfo.Attributes%2A>.","nodes":[{"pos":[0,84],"content":"This field is intended only for users who are deriving classes from <ph id=\"ph1\">`ParameterInfo`</ph>.","source":"This field is intended only for users who are deriving classes from `ParameterInfo`."},{"pos":[91,194],"content":"Typical access to parameter attributes is through <xref:System.Reflection.ParameterInfo.Attributes%2A>.","nodes":[{"content":"Typical access to parameter attributes is through <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.Attributes%2A&gt;</ph>.","pos":[0,103],"source":"Typical access to parameter attributes is through <xref:System.Reflection.ParameterInfo.Attributes%2A>."}]}],"pos":[11817,12016],"yaml":true,"extradata":"MT"},{"content":"The `Type` of the parameter.","nodes":[{"pos":[0,28],"content":"The <ph id=\"ph1\">`Type`</ph> of the parameter.","source":"The `Type` of the parameter."}],"pos":[13323,13352],"yaml":true},{"content":"This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to parameter types is through <xref:System.Reflection.ParameterInfo.ParameterType%2A>.","nodes":[{"pos":[0,84],"content":"This field is intended only for users who are deriving classes from <ph id=\"ph1\">`ParameterInfo`</ph>.","source":"This field is intended only for users who are deriving classes from `ParameterInfo`."},{"pos":[91,192],"content":"Typical access to parameter types is through <xref:System.Reflection.ParameterInfo.ParameterType%2A>.","nodes":[{"content":"Typical access to parameter types is through <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.ParameterType%2A&gt;</ph>.","pos":[0,101],"source":"Typical access to parameter types is through <xref:System.Reflection.ParameterInfo.ParameterType%2A>."}]}],"pos":[13363,13560],"yaml":true,"extradata":"MT"},{"content":"Gets a collection that contains this parameter's custom attributes.","nodes":[{"pos":[0,67],"content":"Gets a collection that contains this parameter's custom attributes.","nodes":[{"content":"Gets a collection that contains this parameter's custom attributes.","pos":[0,67]}]}],"pos":[14875,14943],"yaml":true},{"content":"A collection that contains this parameter's custom attributes.","nodes":[{"pos":[0,62],"content":"A collection that contains this parameter's custom attributes.","nodes":[{"content":"A collection that contains this parameter's custom attributes.","pos":[0,62]}]}],"pos":[15206,15269],"yaml":true},{"content":"Gets a value indicating the default value if the parameter has a default value.","nodes":[{"pos":[0,79],"content":"Gets a value indicating the default value if the parameter has a default value.","nodes":[{"content":"Gets a value indicating the default value if the parameter has a default value.","pos":[0,79]}]}],"pos":[16859,16939],"yaml":true},{"content":"This property is used only in the execution context. In the reflection-only context, use the <xref:System.Reflection.ParameterInfo.RawDefaultValue%2A> property instead.  \n  \n The default value is used when an actual value is not specified in the method call. A parameter can have a default value that is `null`. This is distinct from the case where a default value is not defined.  \n  \n This method utilizes the <xref:System.Reflection.ParameterInfo.DefaultValueImpl> method.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"pos":[0,168],"content":"This property is used only in the execution context. In the reflection-only context, use the <xref:System.Reflection.ParameterInfo.RawDefaultValue%2A> property instead.","nodes":[{"content":"This property is used only in the execution context. In the reflection-only context, use the <xref:System.Reflection.ParameterInfo.RawDefaultValue%2A> property instead.","pos":[0,168],"nodes":[{"content":"This property is used only in the execution context.","pos":[0,52]},{"content":"In the reflection-only context, use the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.RawDefaultValue%2A&gt;</ph> property instead.","pos":[53,168],"source":" In the reflection-only context, use the <xref:System.Reflection.ParameterInfo.RawDefaultValue%2A> property instead."}]}]},{"pos":[175,380],"content":"The default value is used when an actual value is not specified in the method call. A parameter can have a default value that is `null`. This is distinct from the case where a default value is not defined.","nodes":[{"content":"The default value is used when an actual value is not specified in the method call.","pos":[0,83]},{"content":"A parameter can have a default value that is <ph id=\"ph1\">`null`</ph>.","pos":[84,136],"source":" A parameter can have a default value that is `null`."},{"content":"This is distinct from the case where a default value is not defined.","pos":[137,205]}]},{"pos":[387,475],"content":"This method utilizes the <xref:System.Reflection.ParameterInfo.DefaultValueImpl> method.","nodes":[{"content":"This method utilizes the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.DefaultValueImpl&gt;</ph> method.","pos":[0,88],"source":"This method utilizes the <xref:System.Reflection.ParameterInfo.DefaultValueImpl> method."}]},{"pos":[482,671],"content":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"content":"To get the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> array, first get the method or the constructor and then call <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt;</ph>.","pos":[0,189],"source":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."}]}],"pos":[16950,17630],"yaml":true,"extradata":"MT"},{"content":"The default value of the parameter, or <xref href=\"System.DBNull.Value\"></xref> if the parameter has no default value.","nodes":[{"pos":[0,118],"content":"The default value of the parameter, or <ph id=\"ph1\">&lt;xref href=\"System.DBNull.Value\"&gt;&lt;/xref&gt;</ph> if the parameter has no default value.","source":"The default value of the parameter, or <xref href=\"System.DBNull.Value\"></xref> if the parameter has no default value."}],"pos":[17754,17873],"yaml":true},{"content":"The default value of the parameter.","nodes":[{"pos":[0,35],"content":"The default value of the parameter.","nodes":[{"content":"The default value of the parameter.","pos":[0,35]}]}],"pos":[19458,19494],"yaml":true},{"content":"This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to the default value of the parameter is through <xref:System.Reflection.ParameterInfo.DefaultValue%2A>.","nodes":[{"pos":[0,84],"content":"This field is intended only for users who are deriving classes from <ph id=\"ph1\">`ParameterInfo`</ph>.","source":"This field is intended only for users who are deriving classes from `ParameterInfo`."},{"pos":[91,210],"content":"Typical access to the default value of the parameter is through <xref:System.Reflection.ParameterInfo.DefaultValue%2A>.","nodes":[{"content":"Typical access to the default value of the parameter is through <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.DefaultValue%2A&gt;</ph>.","pos":[0,119],"source":"Typical access to the default value of the parameter is through <xref:System.Reflection.ParameterInfo.DefaultValue%2A>."}]}],"pos":[19505,19720],"yaml":true,"extradata":"MT"},{"content":"Gets the custom attributes of the specified type or its derived types that are applied to this parameter.","nodes":[{"pos":[0,105],"content":"Gets the custom attributes of the specified type or its derived types that are applied to this parameter.","nodes":[{"content":"Gets the custom attributes of the specified type or its derived types that are applied to this parameter.","pos":[0,105]}]}],"pos":[21169,21275],"yaml":true},{"content":"This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,223],"content":"This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> method.","nodes":[{"content":"This method ignores the <ph id=\"ph1\">`inherit`</ph> parameter.","pos":[0,44],"source":"This method ignores the `inherit` parameter."},{"content":"To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <ph id=\"ph1\">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph> method.","pos":[45,223],"source":" To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> method."}]}],"pos":[21286,21510],"yaml":true,"extradata":"MT"},{"content":"The custom attributes identified by type.","nodes":[{"pos":[0,41],"content":"The custom attributes identified by type.","nodes":[{"content":"The custom attributes identified by type.","pos":[0,41]}]}],"pos":[21696,21738],"yaml":true},{"content":"This argument is ignored for objects of this type.","nodes":[{"pos":[0,50],"content":"This argument is ignored for objects of this type.","nodes":[{"content":"This argument is ignored for objects of this type.","pos":[0,50]}]}],"pos":[21802,21853],"yaml":true},{"content":"An array that contains the custom attributes of the specified type or its derived types.","nodes":[{"pos":[0,88],"content":"An array that contains the custom attributes of the specified type or its derived types.","nodes":[{"content":"An array that contains the custom attributes of the specified type or its derived types.","pos":[0,88]}]}],"pos":[21912,22001],"yaml":true},{"content":"The type must be a type provided by the underlying runtime system.","nodes":[{"pos":[0,66],"content":"The type must be a type provided by the underlying runtime system.","nodes":[{"content":"The type must be a type provided by the underlying runtime system.","pos":[0,66]}]}],"pos":[22174,22241],"yaml":true},{"content":"<code>attributeType</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>attributeType</code> is `null`."}],"pos":[22343,22381],"yaml":true},{"content":"A custom attribute type could not be loaded.","nodes":[{"pos":[0,44],"content":"A custom attribute type could not be loaded.","nodes":[{"content":"A custom attribute type could not be loaded.","pos":[0,44]}]}],"pos":[22475,22520],"yaml":true},{"content":"Gets all the custom attributes defined on this parameter.","nodes":[{"pos":[0,57],"content":"Gets all the custom attributes defined on this parameter.","nodes":[{"content":"Gets all the custom attributes defined on this parameter.","pos":[0,57]}]}],"pos":[23780,23838],"yaml":true},{"content":"This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,223],"content":"This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> method.","nodes":[{"content":"This method ignores the <ph id=\"ph1\">`inherit`</ph> parameter.","pos":[0,44],"source":"This method ignores the `inherit` parameter."},{"content":"To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <ph id=\"ph1\">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph> method.","pos":[45,223],"source":" To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> method."}]}],"pos":[23849,24073],"yaml":true,"extradata":"MT"},{"content":"This argument is ignored for objects of this type.","nodes":[{"pos":[0,50],"content":"This argument is ignored for objects of this type.","nodes":[{"content":"This argument is ignored for objects of this type.","pos":[0,50]}]}],"pos":[25326,25377],"yaml":true},{"content":"An array that contains all the custom attributes applied to this parameter.","nodes":[{"pos":[0,75],"content":"An array that contains all the custom attributes applied to this parameter.","nodes":[{"content":"An array that contains all the custom attributes applied to this parameter.","pos":[0,75]}]}],"pos":[25436,25512],"yaml":true},{"content":"A custom attribute type could not be loaded.","nodes":[{"pos":[0,44],"content":"A custom attribute type could not be loaded.","nodes":[{"content":"A custom attribute type could not be loaded.","pos":[0,44]}]}],"pos":[25685,25730],"yaml":true},{"content":"Returns a list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects for the current parameter, which can be used in the reflection-only context.","nodes":[{"pos":[0,161],"content":"Returns a list of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeData\"&gt;&lt;/xref&gt;</ph> objects for the current parameter, which can be used in the reflection-only context.","source":"Returns a list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects for the current parameter, which can be used in the reflection-only context."}],"pos":[26945,27107],"yaml":true},{"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and example code, see the <xref:System.Reflection.CustomAttributeData> class.","nodes":[{"pos":[0,618],"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and example code, see the <xref:System.Reflection.CustomAttributeData> class.","nodes":[{"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and example code, see the <xref:System.Reflection.CustomAttributeData> class.","pos":[0,618],"nodes":[{"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.","pos":[0,205]},{"content":"Methods such as <ph id=\"ph1\">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph> cannot be used in such cases, because they create instances of the attributes.","pos":[206,463],"source":" Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes."},{"content":"Code in the reflection-only context cannot be executed.","pos":[464,519]},{"content":"For more information and example code, see the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class.","pos":[520,618],"source":" For more information and example code, see the <xref:System.Reflection.CustomAttributeData> class."}]}]}],"pos":[27118,27737],"yaml":true,"extradata":"MT"},{"content":"A generic list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects representing data about the attributes that have been applied to the current parameter.","nodes":[{"pos":[0,172],"content":"A generic list of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeData\"&gt;&lt;/xref&gt;</ph> objects representing data about the attributes that have been applied to the current parameter.","source":"A generic list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects representing data about the attributes that have been applied to the current parameter."}],"pos":[28009,28182],"yaml":true},{"content":"Gets the optional custom modifiers of the parameter.","nodes":[{"pos":[0,52],"content":"Gets the optional custom modifiers of the parameter.","nodes":[{"content":"Gets the optional custom modifiers of the parameter.","pos":[0,52]}]}],"pos":[29523,29576],"yaml":true},{"content":"The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers. For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"pos":[0,740],"content":"The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers. For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A&gt;</ph> methods are provided for designers of managed compilers.","pos":[0,202],"source":"The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers."},{"content":"For more information on custom modifiers, see <ph id=\"ph1\">&lt;xref:System.Runtime.CompilerServices.IsBoxed&gt;</ph> and related classes in the <ph id=\"ph2\">&lt;xref:System.Runtime.CompilerServices&gt;</ph> namespace, and the metadata specification in the ECMA Partition II documentation.","pos":[203,443],"source":" For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation."},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.","pos":[444,740],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site."}]}],"pos":[29587,30328],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Type\"></xref> objects that identify the optional custom modifiers of the current parameter, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsImplicitlyDereferenced\"></xref>.","nodes":[{"pos":[0,273],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects that identify the optional custom modifiers of the current parameter, such as <ph id=\"ph2\">&lt;xref href=\"System.Runtime.CompilerServices.IsConst\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Runtime.CompilerServices.IsImplicitlyDereferenced\"&gt;&lt;/xref&gt;</ph>.","source":"An array of <xref href=\"System.Type\"></xref> objects that identify the optional custom modifiers of the current parameter, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsImplicitlyDereferenced\"></xref>."}],"pos":[30480,30754],"yaml":true},{"content":"Returns the real object that should be deserialized instead of the object that the serialized stream specifies.","nodes":[{"pos":[0,111],"content":"Returns the real object that should be deserialized instead of the object that the serialized stream specifies.","nodes":[{"content":"Returns the real object that should be deserialized instead of the object that the serialized stream specifies.","pos":[0,111]}]}],"pos":[32331,32443],"yaml":true},{"content":"This method implements the <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,129],"content":"This method implements the <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=fullName> method.","nodes":[{"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,129],"source":"This method implements the <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=fullName> method."}]}],"pos":[32454,32584],"yaml":true,"extradata":"MT"},{"content":"The serialized stream from which the current object is deserialized.","nodes":[{"pos":[0,68],"content":"The serialized stream from which the current object is deserialized.","nodes":[{"content":"The serialized stream from which the current object is deserialized.","pos":[0,68]}]}],"pos":[32803,32872],"yaml":true},{"content":"The actual object that is put into the graph.","nodes":[{"pos":[0,45],"content":"The actual object that is put into the graph.","nodes":[{"content":"The actual object that is put into the graph.","pos":[0,45]}]}],"pos":[32929,32975],"yaml":true},{"content":"The parameter's position in the parameter list of its associated member is not valid for that member's type.","nodes":[{"pos":[0,108],"content":"The parameter's position in the parameter list of its associated member is not valid for that member's type.","nodes":[{"content":"The parameter's position in the parameter list of its associated member is not valid for that member's type.","pos":[0,108]}]}],"pos":[33196,33305],"yaml":true},{"content":"Gets the required custom modifiers of the parameter.","nodes":[{"pos":[0,52],"content":"Gets the required custom modifiers of the parameter.","nodes":[{"content":"Gets the required custom modifiers of the parameter.","pos":[0,52]}]}],"pos":[34560,34613],"yaml":true},{"content":"The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers. For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"pos":[0,740],"content":"The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers. For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A&gt;</ph> methods are provided for designers of managed compilers.","pos":[0,202],"source":"The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers."},{"content":"For more information on custom modifiers, see <ph id=\"ph1\">&lt;xref:System.Runtime.CompilerServices.IsBoxed&gt;</ph> and related classes in the <ph id=\"ph2\">&lt;xref:System.Runtime.CompilerServices&gt;</ph> namespace, and the metadata specification in the ECMA Partition II documentation.","pos":[203,443],"source":" For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation."},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.","pos":[444,740],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site."}]}],"pos":[34624,35365],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Type\"></xref> objects that identify the required custom modifiers of the current parameter, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsImplicitlyDereferenced\"></xref>.","nodes":[{"pos":[0,273],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects that identify the required custom modifiers of the current parameter, such as <ph id=\"ph2\">&lt;xref href=\"System.Runtime.CompilerServices.IsConst\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Runtime.CompilerServices.IsImplicitlyDereferenced\"&gt;&lt;/xref&gt;</ph>.","source":"An array of <xref href=\"System.Type\"></xref> objects that identify the required custom modifiers of the current parameter, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsImplicitlyDereferenced\"></xref>."}],"pos":[35517,35791],"yaml":true},{"content":"Gets a value that indicates whether this parameter has a default value.","nodes":[{"pos":[0,71],"content":"Gets a value that indicates whether this parameter has a default value.","nodes":[{"content":"Gets a value that indicates whether this parameter has a default value.","pos":[0,71]}]}],"pos":[37209,37281],"yaml":true},{"content":"`true` if this parameter has a default value; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if this parameter has a default value; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this parameter has a default value; otherwise, `false`."}],"pos":[37407,37475],"yaml":true},{"content":"Determines whether the custom attribute of the specified type or its derived types is applied to this parameter.","nodes":[{"pos":[0,112],"content":"Determines whether the custom attribute of the specified type or its derived types is applied to this parameter.","nodes":[{"content":"Determines whether the custom attribute of the specified type or its derived types is applied to this parameter.","pos":[0,112]}]}],"pos":[39151,39264],"yaml":true},{"content":"This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.IsDefined%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,213],"content":"This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.IsDefined%2A?displayProperty=fullName> method.","nodes":[{"content":"This method ignores the <ph id=\"ph1\">`inherit`</ph> parameter.","pos":[0,44],"source":"This method ignores the `inherit` parameter."},{"content":"To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <ph id=\"ph1\">&lt;xref:System.Attribute.IsDefined%2A?displayProperty=fullName&gt;</ph> method.","pos":[45,213],"source":" To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.IsDefined%2A?displayProperty=fullName> method."}]}],"pos":[39275,39489],"yaml":true,"extradata":"MT"},{"content":"The `Type` object to search for.","nodes":[{"pos":[0,32],"content":"The <ph id=\"ph1\">`Type`</ph> object to search for.","source":"The `Type` object to search for."}],"pos":[40764,40797],"yaml":true},{"content":"This argument is ignored for objects of this type.","nodes":[{"pos":[0,50],"content":"This argument is ignored for objects of this type.","nodes":[{"content":"This argument is ignored for objects of this type.","pos":[0,50]}]}],"pos":[40861,40912],"yaml":true},{"content":"`true` if one or more instances of <code>attributeType</code> or its derived types are applied to this parameter; otherwise, `false`.","nodes":[{"pos":[0,133],"content":"<ph id=\"ph1\">`true`</ph> if one or more instances of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">attributeType</ph><ept id=\"p1\">&lt;/code&gt;</ept> or its derived types are applied to this parameter; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if one or more instances of <code>attributeType</code> or its derived types are applied to this parameter; otherwise, `false`."}],"pos":[40970,41106],"yaml":true},{"content":"<code>attributeType</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>attributeType</code> is `null`."}],"pos":[41277,41315],"yaml":true},{"content":"<code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the common language runtime.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object supplied by the common language runtime.","source":"<code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the common language runtime."}],"pos":[41409,41526],"yaml":true},{"content":"Gets a value indicating whether this is an input parameter.","nodes":[{"pos":[0,59],"content":"Gets a value indicating whether this is an input parameter.","nodes":[{"content":"Gets a value indicating whether this is an input parameter.","pos":[0,59]}]}],"pos":[42645,42705],"yaml":true},{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \n  \n This method utilizes the `In` flag of the `ParameterAttributes` enumerator.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"pos":[0,135],"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","nodes":[{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[0,135],"nodes":[{"content":"This method depends on an optional metadata flag.","pos":[0,49]},{"content":"This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[50,135]}]}]},{"pos":[142,217],"content":"This method utilizes the <ph id=\"ph1\">`In`</ph> flag of the <ph id=\"ph2\">`ParameterAttributes`</ph> enumerator.","source":"This method utilizes the `In` flag of the `ParameterAttributes` enumerator."},{"pos":[224,413],"content":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"content":"To get the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> array, first get the method or the constructor and then call <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt;</ph>.","pos":[0,189],"source":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."}]}],"pos":[42716,43136],"yaml":true,"extradata":"MT"},{"content":"`true` if the parameter is an input parameter; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if the parameter is an input parameter; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the parameter is an input parameter; otherwise, `false`."}],"pos":[45237,45306],"yaml":true},{"content":"Gets a value indicating whether this parameter is a locale identifier (lcid).","nodes":[{"pos":[0,77],"content":"Gets a value indicating whether this parameter is a locale identifier (lcid).","nodes":[{"content":"Gets a value indicating whether this parameter is a locale identifier (lcid).","pos":[0,77]}]}],"pos":[46826,46904],"yaml":true},{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \n  \n This method utilizes the `Lcid` flag of the `ParameterAttributes` enumerator.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"pos":[0,135],"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","nodes":[{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[0,135],"nodes":[{"content":"This method depends on an optional metadata flag.","pos":[0,49]},{"content":"This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[50,135]}]}]},{"pos":[142,219],"content":"This method utilizes the <ph id=\"ph1\">`Lcid`</ph> flag of the <ph id=\"ph2\">`ParameterAttributes`</ph> enumerator.","source":"This method utilizes the `Lcid` flag of the `ParameterAttributes` enumerator."},{"pos":[226,415],"content":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"content":"To get the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> array, first get the method or the constructor and then call <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt;</ph>.","pos":[0,189],"source":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."}]}],"pos":[46915,47337],"yaml":true,"extradata":"MT"},{"content":"`true` if the parameter is a locale identifier; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the parameter is a locale identifier; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the parameter is a locale identifier; otherwise, `false`."}],"pos":[47446,47516],"yaml":true},{"content":"Gets a value indicating whether this parameter is optional.","nodes":[{"pos":[0,59],"content":"Gets a value indicating whether this parameter is optional.","nodes":[{"content":"Gets a value indicating whether this parameter is optional.","pos":[0,59]}]}],"pos":[48740,48800],"yaml":true},{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \n  \n This method utilizes the `Optional` flag of the `ParameterAttributes` enumerator.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"pos":[0,135],"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","nodes":[{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[0,135],"nodes":[{"content":"This method depends on an optional metadata flag.","pos":[0,49]},{"content":"This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[50,135]}]}]},{"pos":[142,223],"content":"This method utilizes the <ph id=\"ph1\">`Optional`</ph> flag of the <ph id=\"ph2\">`ParameterAttributes`</ph> enumerator.","source":"This method utilizes the `Optional` flag of the `ParameterAttributes` enumerator."},{"pos":[230,400],"content":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"content":"To get the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> array, first get the method and then call <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt;</ph>.","pos":[0,170],"source":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."}]}],"pos":[48811,49218],"yaml":true,"extradata":"MT"},{"content":"`true` if the parameter is optional; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the parameter is optional; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the parameter is optional; otherwise, `false`."}],"pos":[51325,51384],"yaml":true},{"content":"Gets a value indicating whether this is an output parameter.","nodes":[{"pos":[0,60],"content":"Gets a value indicating whether this is an output parameter.","nodes":[{"content":"Gets a value indicating whether this is an output parameter.","pos":[0,60]}]}],"pos":[52926,52987],"yaml":true},{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \n  \n This method utilizes the `Out` flag of the `ParameterAttributes` enumerator.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"pos":[0,135],"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","nodes":[{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[0,135],"nodes":[{"content":"This method depends on an optional metadata flag.","pos":[0,49]},{"content":"This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[50,135]}]}]},{"pos":[142,218],"content":"This method utilizes the <ph id=\"ph1\">`Out`</ph> flag of the <ph id=\"ph2\">`ParameterAttributes`</ph> enumerator.","source":"This method utilizes the `Out` flag of the `ParameterAttributes` enumerator."},{"pos":[225,414],"content":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"content":"To get the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> array, first get the method or the constructor and then call <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt;</ph>.","pos":[0,189],"source":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."}]}],"pos":[52998,53419],"yaml":true,"extradata":"MT"},{"content":"`true` if the parameter is an output parameter; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the parameter is an output parameter; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the parameter is an output parameter; otherwise, `false`."}],"pos":[55458,55528],"yaml":true},{"content":"Gets a value indicating whether this is a `Retval` parameter.","nodes":[{"pos":[0,61],"content":"Gets a value indicating whether this is a <ph id=\"ph1\">`Retval`</ph> parameter.","source":"Gets a value indicating whether this is a `Retval` parameter."}],"pos":[57083,57145],"yaml":true},{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \n  \n This method utilizes the `Retval` flag of the `ParameterAttributes` enumerator.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"pos":[0,135],"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","nodes":[{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[0,135],"nodes":[{"content":"This method depends on an optional metadata flag.","pos":[0,49]},{"content":"This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[50,135]}]}]},{"pos":[142,221],"content":"This method utilizes the <ph id=\"ph1\">`Retval`</ph> flag of the <ph id=\"ph2\">`ParameterAttributes`</ph> enumerator.","source":"This method utilizes the `Retval` flag of the `ParameterAttributes` enumerator."},{"pos":[228,417],"content":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"content":"To get the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> array, first get the method or the constructor and then call <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt;</ph>.","pos":[0,189],"source":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."}]}],"pos":[57156,57580],"yaml":true,"extradata":"MT"},{"content":"`true` if the parameter is a `Retval`; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the parameter is a <ph id=\"ph2\">`Retval`</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the parameter is a `Retval`; otherwise, `false`."}],"pos":[57691,57752],"yaml":true},{"content":"Gets a value indicating the member in which the parameter is implemented.","nodes":[{"pos":[0,73],"content":"Gets a value indicating the member in which the parameter is implemented.","nodes":[{"content":"Gets a value indicating the member in which the parameter is implemented.","pos":[0,73]}]}],"pos":[59298,59372],"yaml":true},{"content":"The member which implanted the parameter represented by this <xref href=\"System.Reflection.ParameterInfo\"></xref>.","nodes":[{"pos":[0,114],"content":"The member which implanted the parameter represented by this <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ParameterInfo\"&gt;&lt;/xref&gt;</ph>.","source":"The member which implanted the parameter represented by this <xref href=\"System.Reflection.ParameterInfo\"></xref>."}],"pos":[59527,59642],"yaml":true},{"content":"The member in which the field is implemented.","nodes":[{"pos":[0,45],"content":"The member in which the field is implemented.","nodes":[{"content":"The member in which the field is implemented.","pos":[0,45]}]}],"pos":[61185,61231],"yaml":true},{"content":"This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Member%2A>.","nodes":[{"pos":[0,84],"content":"This field is intended only for users who are deriving classes from <ph id=\"ph1\">`ParameterInfo`</ph>.","source":"This field is intended only for users who are deriving classes from `ParameterInfo`."},{"pos":[91,192],"content":"Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Member%2A>.","nodes":[{"content":"Typical access to the parameter name is through the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.Member%2A&gt;</ph>.","pos":[0,101],"source":"Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Member%2A>."}]}],"pos":[61242,61439],"yaml":true,"extradata":"MT"},{"content":"Gets a value that identifies this parameter in metadata.","nodes":[{"pos":[0,56],"content":"Gets a value that identifies this parameter in metadata.","nodes":[{"content":"Gets a value that identifies this parameter in metadata.","pos":[0,56]}]}],"pos":[62756,62813],"yaml":true},{"content":"To get the module, use the <xref:System.Reflection.MemberInfo.Module%2A> property of the member that defines this parameter.  \n  \n The tokens obtained using this property can be passed to the unmanaged Reflection API. For more information, please see [Unmanaged Reflection API](http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).","nodes":[{"pos":[0,124],"content":"To get the module, use the <xref:System.Reflection.MemberInfo.Module%2A> property of the member that defines this parameter.","nodes":[{"content":"To get the module, use the <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo.Module%2A&gt;</ph> property of the member that defines this parameter.","pos":[0,124],"source":"To get the module, use the <xref:System.Reflection.MemberInfo.Module%2A> property of the member that defines this parameter."}]},{"pos":[131,348],"content":"The tokens obtained using this property can be passed to the unmanaged Reflection API. For more information, please see [Unmanaged Reflection API](http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).","nodes":[{"content":"The tokens obtained using this property can be passed to the unmanaged Reflection API.","pos":[0,86]},{"content":"For more information, please see <bpt id=\"p1\">[</bpt>Unmanaged Reflection API<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8)</ept>.","pos":[87,217],"source":" For more information, please see [Unmanaged Reflection API](http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8)."}]}],"pos":[62824,63177],"yaml":true,"extradata":"MT"},{"content":"A value which, in combination with the module, uniquely identifies this parameter in metadata.","nodes":[{"pos":[0,94],"content":"A value which, in combination with the module, uniquely identifies this parameter in metadata.","nodes":[{"content":"A value which, in combination with the module, uniquely identifies this parameter in metadata.","pos":[0,94]}]}],"pos":[63298,63393],"yaml":true},{"content":"Gets the name of the parameter.","nodes":[{"pos":[0,31],"content":"Gets the name of the parameter.","nodes":[{"content":"Gets the name of the parameter.","pos":[0,31]}]}],"pos":[64588,64620],"yaml":true},{"content":"This property utilizes the protected <xref:System.Reflection.ParameterInfo.NameImpl> field, and depends on an optional metadata flag that might not be available in all compilers.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName> method.  \n  \n> [!WARNING]\n>  If this <xref:System.Reflection.ParameterInfo> represents a return value (that is, if it was obtained by using the <xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=fullName> property), this property will be `null`.","nodes":[{"pos":[0,178],"content":"This property utilizes the protected <xref:System.Reflection.ParameterInfo.NameImpl> field, and depends on an optional metadata flag that might not be available in all compilers.","nodes":[{"content":"This property utilizes the protected <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.NameImpl&gt;</ph> field, and depends on an optional metadata flag that might not be available in all compilers.","pos":[0,178],"source":"This property utilizes the protected <xref:System.Reflection.ParameterInfo.NameImpl> field, and depends on an optional metadata flag that might not be available in all compilers."}]},{"pos":[185,385],"content":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName> method.","nodes":[{"content":"To get the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> array, first get the method or the constructor and then call the <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,200],"source":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName> method."}]},{"pos":[393,642],"content":"[!WARNING]\n If this <xref:System.Reflection.ParameterInfo> represents a return value (that is, if it was obtained by using the <xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=fullName> property), this property will be `null`.","leadings":["","> "],"nodes":[{"content":"If this <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> represents a return value (that is, if it was obtained by using the <ph id=\"ph2\">&lt;xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=fullName&gt;</ph> property), this property will be <ph id=\"ph3\">`null`</ph>.","pos":[12,247],"source":" If this <xref:System.Reflection.ParameterInfo> represents a return value (that is, if it was obtained by using the <xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=fullName> property), this property will be `null`."}]}],"pos":[64631,65281],"yaml":true,"extradata":"MT"},{"content":"The simple name of this parameter.","nodes":[{"pos":[0,34],"content":"The simple name of this parameter.","nodes":[{"content":"The simple name of this parameter.","pos":[0,34]}]}],"pos":[66107,66142],"yaml":true},{"content":"The name of the parameter.","nodes":[{"pos":[0,26],"content":"The name of the parameter.","nodes":[{"content":"The name of the parameter.","pos":[0,26]}]}],"pos":[67671,67698],"yaml":true},{"content":"This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Name%2A>.","nodes":[{"pos":[0,84],"content":"This field is intended only for users who are deriving classes from <ph id=\"ph1\">`ParameterInfo`</ph>.","source":"This field is intended only for users who are deriving classes from `ParameterInfo`."},{"pos":[91,190],"content":"Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Name%2A>.","nodes":[{"content":"Typical access to the parameter name is through the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.Name%2A&gt;</ph>.","pos":[0,99],"source":"Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Name%2A>."}]}],"pos":[67709,67904],"yaml":true,"extradata":"MT"},{"content":"Gets the `Type` of this parameter.","nodes":[{"pos":[0,34],"content":"Gets the <ph id=\"ph1\">`Type`</ph> of this parameter.","source":"Gets the `Type` of this parameter."}],"pos":[69204,69239],"yaml":true},{"content":"This method depends on an optional metadata and might not be available in all compilers.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"pos":[0,88],"content":"This method depends on an optional metadata and might not be available in all compilers.","nodes":[{"content":"This method depends on an optional metadata and might not be available in all compilers.","pos":[0,88]}]},{"pos":[95,284],"content":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"content":"To get the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> array, first get the method or the constructor and then call <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt;</ph>.","pos":[0,189],"source":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."}]}],"pos":[69250,69539],"yaml":true,"extradata":"MT"},{"content":"The `Type` object that represents the `Type` of this parameter.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">`Type`</ph> object that represents the <ph id=\"ph2\">`Type`</ph> of this parameter.","source":"The `Type` object that represents the `Type` of this parameter."}],"pos":[70441,70505],"yaml":true},{"content":"Gets the zero-based position of the parameter in the formal parameter list.","nodes":[{"pos":[0,75],"content":"Gets the zero-based position of the parameter in the formal parameter list.","nodes":[{"content":"Gets the zero-based position of the parameter in the formal parameter list.","pos":[0,75]}]}],"pos":[72068,72144],"yaml":true},{"content":"Only parameters in the method signature (that is, in the formal parameter list) are considered when calculating the position. For instance methods, the hidden parameter that represents `this` (`Me` in Visual Basic) is not counted.  \n  \n This method utilizes the <xref:System.Reflection.ParameterInfo.PositionImpl> method.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"pos":[0,230],"content":"Only parameters in the method signature (that is, in the formal parameter list) are considered when calculating the position. For instance methods, the hidden parameter that represents `this` (`Me` in Visual Basic) is not counted.","nodes":[{"content":"Only parameters in the method signature (that is, in the formal parameter list) are considered when calculating the position.","pos":[0,125]},{"content":"For instance methods, the hidden parameter that represents <ph id=\"ph1\">`this`</ph> (<ph id=\"ph2\">`Me`</ph> in Visual Basic) is not counted.","pos":[126,230],"source":" For instance methods, the hidden parameter that represents `this` (`Me` in Visual Basic) is not counted."}]},{"pos":[237,321],"content":"This method utilizes the <xref:System.Reflection.ParameterInfo.PositionImpl> method.","nodes":[{"content":"This method utilizes the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.PositionImpl&gt;</ph> method.","pos":[0,84],"source":"This method utilizes the <xref:System.Reflection.ParameterInfo.PositionImpl> method."}]},{"pos":[328,517],"content":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.","nodes":[{"content":"To get the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> array, first get the method or the constructor and then call <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt;</ph>.","pos":[0,189],"source":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>."}]}],"pos":[72155,72679],"yaml":true,"extradata":"MT"},{"content":"An integer representing the position this parameter occupies in the parameter list.","nodes":[{"pos":[0,83],"content":"An integer representing the position this parameter occupies in the parameter list.","nodes":[{"content":"An integer representing the position this parameter occupies in the parameter list.","pos":[0,83]}]}],"pos":[72795,72879],"yaml":true},{"content":"The zero-based position of the parameter in the parameter list.","nodes":[{"pos":[0,63],"content":"The zero-based position of the parameter in the parameter list.","nodes":[{"content":"The zero-based position of the parameter in the parameter list.","pos":[0,63]}]}],"pos":[74436,74500],"yaml":true},{"content":"This field is intended only for users who are deriving classes from `ParameterInfo`.  \n  \n Typical access to the name of the parameter is through <xref:System.Reflection.ParameterInfo.Position%2A>.","nodes":[{"pos":[0,84],"content":"This field is intended only for users who are deriving classes from <ph id=\"ph1\">`ParameterInfo`</ph>.","source":"This field is intended only for users who are deriving classes from `ParameterInfo`."},{"pos":[91,197],"content":"Typical access to the name of the parameter is through <xref:System.Reflection.ParameterInfo.Position%2A>.","nodes":[{"content":"Typical access to the name of the parameter is through <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo.Position%2A&gt;</ph>.","pos":[0,106],"source":"Typical access to the name of the parameter is through <xref:System.Reflection.ParameterInfo.Position%2A>."}]}],"pos":[74511,74713],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating the default value if the parameter has a default value.","nodes":[{"pos":[0,79],"content":"Gets a value indicating the default value if the parameter has a default value.","nodes":[{"content":"Gets a value indicating the default value if the parameter has a default value.","pos":[0,79]}]}],"pos":[76025,76105],"yaml":true},{"content":"This property can be used in both the execution context and the reflection-only context.  \n  \n The default value is used when an actual value is not specified in the method call. A parameter can have a default value that is `null`. This is distinct from the case where a default value is not defined.  \n  \n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,88],"content":"This property can be used in both the execution context and the reflection-only context.","nodes":[{"content":"This property can be used in both the execution context and the reflection-only context.","pos":[0,88]}]},{"pos":[95,300],"content":"The default value is used when an actual value is not specified in the method call. A parameter can have a default value that is `null`. This is distinct from the case where a default value is not defined.","nodes":[{"content":"The default value is used when an actual value is not specified in the method call.","pos":[0,83]},{"content":"A parameter can have a default value that is <ph id=\"ph1\">`null`</ph>.","pos":[84,136],"source":" A parameter can have a default value that is `null`."},{"content":"This is distinct from the case where a default value is not defined.","pos":[137,205]}]},{"pos":[307,507],"content":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName> method.","nodes":[{"content":"To get the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> array, first get the method or the constructor and then call the <ph id=\"ph2\">&lt;xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,200],"source":"To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName> method."}]}],"pos":[76116,76630],"yaml":true,"extradata":"MT"},{"content":"The default value of the parameter, or <xref href=\"System.DBNull.Value\"></xref> if the parameter has no default value.","nodes":[{"pos":[0,118],"content":"The default value of the parameter, or <ph id=\"ph1\">&lt;xref href=\"System.DBNull.Value\"&gt;&lt;/xref&gt;</ph> if the parameter has no default value.","source":"The default value of the parameter, or <xref href=\"System.DBNull.Value\"></xref> if the parameter has no default value."}],"pos":[76757,76876],"yaml":true},{"content":"Gets the parameter type and name represented as a string.","nodes":[{"pos":[0,57],"content":"Gets the parameter type and name represented as a string.","nodes":[{"content":"Gets the parameter type and name represented as a string.","pos":[0,57]}]}],"pos":[78223,78281],"yaml":true},{"content":"A string containing the type and the name of the parameter.","nodes":[{"pos":[0,59],"content":"A string containing the type and the name of the parameter.","nodes":[{"content":"A string containing the type and the name of the parameter.","pos":[0,59]}]}],"pos":[78416,78476],"yaml":true},{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"pos":[0,67],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]}],"pos":[84420,84488],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"pos":[0,186],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[110,186],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]}],"pos":[84499,84686],"yaml":true,"extradata":"MT"},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[84893,84936],"yaml":true},{"content":"Passed-in array of names to be mapped.","nodes":[{"pos":[0,38],"content":"Passed-in array of names to be mapped.","nodes":[{"content":"Passed-in array of names to be mapped.","pos":[0,38]}]}],"pos":[85001,85040],"yaml":true},{"content":"Count of the names to be mapped.","nodes":[{"pos":[0,32],"content":"Count of the names to be mapped.","nodes":[{"content":"Count of the names to be mapped.","pos":[0,32]}]}],"pos":[85102,85135],"yaml":true},{"content":"The locale context in which to interpret the names.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret the names.","nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]}],"pos":[85195,85247],"yaml":true},{"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"pos":[0,73],"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"content":"Caller-allocated array which receives the IDs corresponding to the names.","pos":[0,73]}]}],"pos":[85311,85385],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[85610,85693],"yaml":true},{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"pos":[0,114],"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","pos":[0,114]}]}],"pos":[87035,87150],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"pos":[0,184],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[110,184],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]}],"pos":[87161,87346],"yaml":true,"extradata":"MT"},{"content":"The type information to return.","nodes":[{"pos":[0,31],"content":"The type information to return.","nodes":[{"content":"The type information to return.","pos":[0,31]}]}],"pos":[87521,87553],"yaml":true},{"content":"The locale identifier for the type information.","nodes":[{"pos":[0,47],"content":"The locale identifier for the type information.","nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]}],"pos":[87613,87661],"yaml":true},{"content":"Receives a pointer to the requested type information object.","nodes":[{"pos":[0,60],"content":"Receives a pointer to the requested type information object.","nodes":[{"content":"Receives a pointer to the requested type information object.","pos":[0,60]}]}],"pos":[87724,87785],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[88008,88091],"yaml":true},{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"pos":[0,92],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]}],"pos":[89334,89427],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"pos":[0,189],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[110,189],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]}],"pos":[89438,89628],"yaml":true,"extradata":"MT"},{"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"pos":[0,100],"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"content":"Points to a location that receives the number of type information interfaces provided by the object.","pos":[0,100]}]}],"pos":[89787,89888],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[90116,90199],"yaml":true},{"content":"Provides access to properties and methods exposed by an object.","nodes":[{"pos":[0,63],"content":"Provides access to properties and methods exposed by an object.","nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]}],"pos":[91826,91890],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"pos":[0,179],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[110,179],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]}],"pos":[91901,92081],"yaml":true,"extradata":"MT"},{"content":"Identifies the member.","nodes":[{"pos":[0,22],"content":"Identifies the member.","nodes":[{"content":"Identifies the member.","pos":[0,22]}]}],"pos":[92351,92374],"yaml":true},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[92432,92475],"yaml":true},{"content":"The locale context in which to interpret arguments.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret arguments.","nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]}],"pos":[92535,92587],"yaml":true},{"content":"Flags describing the context of the call.","nodes":[{"pos":[0,41],"content":"Flags describing the context of the call.","nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]}],"pos":[92648,92690],"yaml":true},{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"pos":[0,159],"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,159]}]}],"pos":[92757,92917],"yaml":true},{"content":"Pointer to the location where the result is to be stored.","nodes":[{"pos":[0,57],"content":"Pointer to the location where the result is to be stored.","nodes":[{"content":"Pointer to the location where the result is to be stored.","pos":[0,57]}]}],"pos":[92983,93041],"yaml":true},{"content":"Pointer to a structure that contains exception information.","nodes":[{"pos":[0,59],"content":"Pointer to a structure that contains exception information.","nodes":[{"content":"Pointer to a structure that contains exception information.","pos":[0,59]}]}],"pos":[93107,93167],"yaml":true},{"content":"The index of the first argument that has an error.","nodes":[{"pos":[0,50],"content":"The index of the first argument that has an error.","nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"pos":[93231,93282],"yaml":true},{"content":"Late-bound access using the COM <code>IDispatch</code> interface is not supported.","nodes":[{"pos":[0,82],"content":"Late-bound access using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface is not supported.","source":"Late-bound access using the COM <code>IDispatch</code> interface is not supported."}],"pos":[93500,93583],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.ParameterInfo\n  commentId: T:System.Reflection.ParameterInfo\n  id: ParameterInfo\n  children:\n  - System.Reflection.ParameterInfo.#ctor\n  - System.Reflection.ParameterInfo.Attributes\n  - System.Reflection.ParameterInfo.AttrsImpl\n  - System.Reflection.ParameterInfo.ClassImpl\n  - System.Reflection.ParameterInfo.CustomAttributes\n  - System.Reflection.ParameterInfo.DefaultValue\n  - System.Reflection.ParameterInfo.DefaultValueImpl\n  - System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean)\n  - System.Reflection.ParameterInfo.GetCustomAttributesData\n  - System.Reflection.ParameterInfo.GetOptionalCustomModifiers\n  - System.Reflection.ParameterInfo.GetRealObject(System.Runtime.Serialization.StreamingContext)\n  - System.Reflection.ParameterInfo.GetRequiredCustomModifiers\n  - System.Reflection.ParameterInfo.HasDefaultValue\n  - System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.ParameterInfo.IsIn\n  - System.Reflection.ParameterInfo.IsLcid\n  - System.Reflection.ParameterInfo.IsOptional\n  - System.Reflection.ParameterInfo.IsOut\n  - System.Reflection.ParameterInfo.IsRetval\n  - System.Reflection.ParameterInfo.Member\n  - System.Reflection.ParameterInfo.MemberImpl\n  - System.Reflection.ParameterInfo.MetadataToken\n  - System.Reflection.ParameterInfo.Name\n  - System.Reflection.ParameterInfo.NameImpl\n  - System.Reflection.ParameterInfo.ParameterType\n  - System.Reflection.ParameterInfo.Position\n  - System.Reflection.ParameterInfo.PositionImpl\n  - System.Reflection.ParameterInfo.RawDefaultValue\n  - System.Reflection.ParameterInfo.ToString\n  - System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  - System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  - System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  langs:\n  - csharp\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n  type: Class\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Discovers the attributes of a parameter and provides access to parameter metadata.\n  remarks: \"Use an instance of `ParameterInfo` to obtain information about the parameter's data type, default value, and so on.  \\n  \\n <xref:System.Reflection.MethodBase.GetParameters%2A> returns an array of `ParameterInfo` objects representing the parameters of a method, in order.\"\n  example:\n  - \"This example shows how to use various reflection classes to analyze the metadata contained in an assembly.  \\n  \\n [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]\\n [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]\\n [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ParameterInfo : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._ParameterInfo, System.Runtime.Serialization.IObjectReference\n  inheritance:\n  - System.Object\n  implements:\n  - System.Reflection.ICustomAttributeProvider\n  - System.Runtime.InteropServices._ParameterInfo\n  - System.Runtime.Serialization.IObjectReference\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  extensionMethods:\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.#ctor\n  commentId: M:System.Reflection.ParameterInfo.#ctor\n  id: '#ctor'\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: ParameterInfo()\n  nameWithType: ParameterInfo.ParameterInfo()\n  fullName: ParameterInfo.ParameterInfo()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Initializes a new instance of the `ParameterInfo` class.\n  syntax:\n    content: protected ParameterInfo ();\n    parameters: []\n  overload: System.Reflection.ParameterInfo.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.Attributes\n  commentId: P:System.Reflection.ParameterInfo.Attributes\n  id: Attributes\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: ParameterInfo.Attributes\n  fullName: ParameterInfo.Attributes\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the attributes for this parameter.\n  remarks: \"This method utilizes the <xref:System.Reflection.ParameterInfo.AttrsImpl> method.  \\n  \\n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following example defines a method with three parameters. It uses the <xref:System.Reflection.ParameterInfo.Attributes%2A> property to get the attributes of the second parameter and display them at the console.  \\n  \\n [!code-cpp[ParameterInfo_Attributes1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_Attributes1/CPP/parameterinfo_attributes1.cpp#1)]\\n [!code-csharp[ParameterInfo_Attributes1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_Attributes1/CS/parameterinfo_attributes1.cs#1)]\\n [!code-vb[ParameterInfo_Attributes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_Attributes1/VB/parameterinfo_attributes1.vb#1)]\"\n  syntax:\n    content: public virtual System.Reflection.ParameterAttributes Attributes { get; }\n    return:\n      type: System.Reflection.ParameterAttributes\n      description: A `ParameterAttributes` object representing the attributes for this parameter.\n  overload: System.Reflection.ParameterInfo.Attributes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.AttrsImpl\n  commentId: F:System.Reflection.ParameterInfo.AttrsImpl\n  id: AttrsImpl\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: AttrsImpl\n  nameWithType: ParameterInfo.AttrsImpl\n  fullName: ParameterInfo.AttrsImpl\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The attributes of the parameter.\n  remarks: \"This field is intended only for users who are deriving classes from `ParameterInfo`.  \\n  \\n Typical access to parameter attributes is through <xref:System.Reflection.ParameterInfo.Attributes%2A>.\"\n  syntax:\n    content: protected System.Reflection.ParameterAttributes AttrsImpl;\n    return:\n      type: System.Reflection.ParameterAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.ClassImpl\n  commentId: F:System.Reflection.ParameterInfo.ClassImpl\n  id: ClassImpl\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: ClassImpl\n  nameWithType: ParameterInfo.ClassImpl\n  fullName: ParameterInfo.ClassImpl\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The `Type` of the parameter.\n  remarks: \"This field is intended only for users who are deriving classes from `ParameterInfo`.  \\n  \\n Typical access to parameter types is through <xref:System.Reflection.ParameterInfo.ParameterType%2A>.\"\n  syntax:\n    content: protected Type ClassImpl;\n    return:\n      type: System.Type\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.CustomAttributes\n  commentId: P:System.Reflection.ParameterInfo.CustomAttributes\n  id: CustomAttributes\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: CustomAttributes\n  nameWithType: ParameterInfo.CustomAttributes\n  fullName: ParameterInfo.CustomAttributes\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a collection that contains this parameter's custom attributes.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData> CustomAttributes { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}\n      description: A collection that contains this parameter's custom attributes.\n  overload: System.Reflection.ParameterInfo.CustomAttributes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.DefaultValue\n  commentId: P:System.Reflection.ParameterInfo.DefaultValue\n  id: DefaultValue\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: DefaultValue\n  nameWithType: ParameterInfo.DefaultValue\n  fullName: ParameterInfo.DefaultValue\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a value indicating the default value if the parameter has a default value.\n  remarks: \"This property is used only in the execution context. In the reflection-only context, use the <xref:System.Reflection.ParameterInfo.RawDefaultValue%2A> property instead.  \\n  \\n The default value is used when an actual value is not specified in the method call. A parameter can have a default value that is `null`. This is distinct from the case where a default value is not defined.  \\n  \\n This method utilizes the <xref:System.Reflection.ParameterInfo.DefaultValueImpl> method.  \\n  \\n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public virtual object DefaultValue { get; }\n    return:\n      type: System.Object\n      description: The default value of the parameter, or <xref href=\"System.DBNull.Value\"></xref> if the parameter has no default value.\n  overload: System.Reflection.ParameterInfo.DefaultValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.DefaultValueImpl\n  commentId: F:System.Reflection.ParameterInfo.DefaultValueImpl\n  id: DefaultValueImpl\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: DefaultValueImpl\n  nameWithType: ParameterInfo.DefaultValueImpl\n  fullName: ParameterInfo.DefaultValueImpl\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The default value of the parameter.\n  remarks: \"This field is intended only for users who are deriving classes from `ParameterInfo`.  \\n  \\n Typical access to the default value of the parameter is through <xref:System.Reflection.ParameterInfo.DefaultValue%2A>.\"\n  syntax:\n    content: protected object DefaultValueImpl;\n    return:\n      type: System.Object\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)\n  commentId: M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: ParameterInfo.GetCustomAttributes(Type, Boolean)\n  fullName: ParameterInfo.GetCustomAttributes(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the custom attributes of the specified type or its derived types that are applied to this parameter.\n  remarks: This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> method.\n  syntax:\n    content: public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The custom attributes identified by type.\n    - id: inherit\n      type: System.Boolean\n      description: This argument is ignored for objects of this type.\n    return:\n      type: System.Object[]\n      description: An array that contains the custom attributes of the specified type or its derived types.\n  overload: System.Reflection.ParameterInfo.GetCustomAttributes*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The type must be a type provided by the underlying runtime system.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>attributeType</code> is `null`.\n  - type: System.TypeLoadException\n    commentId: T:System.TypeLoadException\n    description: A custom attribute type could not be loaded.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean)\n  commentId: M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: ParameterInfo.GetCustomAttributes(Boolean)\n  fullName: ParameterInfo.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets all the custom attributes defined on this parameter.\n  remarks: This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> method.\n  example:\n  - \"The following example shows how custom attributes that have been applied to the parameters of methods can be retrieved at run time. The example defines a custom attribute named `MyAttribute` that can be applied to parameters. The example then defines a class named `MyClass` with a method named `MyMethod`, and applies `MyAttribute` to a parameter of the method.  \\n  \\n When the example is run, it uses the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%28System.Boolean%29> method to retrieve the custom attributes that have been applied to all parameters of all methods in `MyClass`, and displays them at the console.  \\n  \\n [!code-cpp[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/CPP/source.cpp#1)]\\n [!code-csharp[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/CS/source.cs#1)]\\n [!code-vb[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: This argument is ignored for objects of this type.\n    return:\n      type: System.Object[]\n      description: An array that contains all the custom attributes applied to this parameter.\n  overload: System.Reflection.ParameterInfo.GetCustomAttributes*\n  exceptions:\n  - type: System.TypeLoadException\n    commentId: T:System.TypeLoadException\n    description: A custom attribute type could not be loaded.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.GetCustomAttributesData\n  commentId: M:System.Reflection.ParameterInfo.GetCustomAttributesData\n  id: GetCustomAttributesData\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: GetCustomAttributesData()\n  nameWithType: ParameterInfo.GetCustomAttributesData()\n  fullName: ParameterInfo.GetCustomAttributesData()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns a list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects for the current parameter, which can be used in the reflection-only context.\n  remarks: Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and example code, see the <xref:System.Reflection.CustomAttributeData> class.\n  syntax:\n    content: public virtual System.Collections.Generic.IList<System.Reflection.CustomAttributeData> GetCustomAttributesData ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n      description: A generic list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects representing data about the attributes that have been applied to the current parameter.\n  overload: System.Reflection.ParameterInfo.GetCustomAttributesData*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.GetOptionalCustomModifiers\n  commentId: M:System.Reflection.ParameterInfo.GetOptionalCustomModifiers\n  id: GetOptionalCustomModifiers\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: GetOptionalCustomModifiers()\n  nameWithType: ParameterInfo.GetOptionalCustomModifiers()\n  fullName: ParameterInfo.GetOptionalCustomModifiers()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the optional custom modifiers of the parameter.\n  remarks: The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers. For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.\n  syntax:\n    content: public virtual Type[] GetOptionalCustomModifiers ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: An array of <xref href=\"System.Type\"></xref> objects that identify the optional custom modifiers of the current parameter, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsImplicitlyDereferenced\"></xref>.\n  overload: System.Reflection.ParameterInfo.GetOptionalCustomModifiers*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.GetRealObject(System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Reflection.ParameterInfo.GetRealObject(System.Runtime.Serialization.StreamingContext)\n  id: GetRealObject(System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: GetRealObject(StreamingContext)\n  nameWithType: ParameterInfo.GetRealObject(StreamingContext)\n  fullName: ParameterInfo.GetRealObject(StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns the real object that should be deserialized instead of the object that the serialized stream specifies.\n  remarks: This method implements the <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=fullName> method.\n  syntax:\n    content: public object GetRealObject (System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The serialized stream from which the current object is deserialized.\n    return:\n      type: System.Object\n      description: The actual object that is put into the graph.\n  overload: System.Reflection.ParameterInfo.GetRealObject*\n  exceptions:\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The parameter's position in the parameter list of its associated member is not valid for that member's type.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.GetRequiredCustomModifiers\n  commentId: M:System.Reflection.ParameterInfo.GetRequiredCustomModifiers\n  id: GetRequiredCustomModifiers\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: GetRequiredCustomModifiers()\n  nameWithType: ParameterInfo.GetRequiredCustomModifiers()\n  fullName: ParameterInfo.GetRequiredCustomModifiers()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the required custom modifiers of the parameter.\n  remarks: The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers. For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.\n  syntax:\n    content: public virtual Type[] GetRequiredCustomModifiers ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: An array of <xref href=\"System.Type\"></xref> objects that identify the required custom modifiers of the current parameter, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsImplicitlyDereferenced\"></xref>.\n  overload: System.Reflection.ParameterInfo.GetRequiredCustomModifiers*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.HasDefaultValue\n  commentId: P:System.Reflection.ParameterInfo.HasDefaultValue\n  id: HasDefaultValue\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: HasDefaultValue\n  nameWithType: ParameterInfo.HasDefaultValue\n  fullName: ParameterInfo.HasDefaultValue\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a value that indicates whether this parameter has a default value.\n  syntax:\n    content: public virtual bool HasDefaultValue { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this parameter has a default value; otherwise, `false`.'\n  overload: System.Reflection.ParameterInfo.HasDefaultValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)\n  commentId: M:System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: IsDefined(Type, Boolean)\n  nameWithType: ParameterInfo.IsDefined(Type, Boolean)\n  fullName: ParameterInfo.IsDefined(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Determines whether the custom attribute of the specified type or its derived types is applied to this parameter.\n  remarks: This method ignores the `inherit` parameter. To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.IsDefined%2A?displayProperty=fullName> method.\n  example:\n  - \"The following example defines two custom attributes, `MyAttribute` and `MyDerivedAttribute`. `MyDerivedAttribute` is derived from `MyAttribute`. The example then applies these attributes to the parameters of a method of an example class.  \\n  \\n When the example is run, it uses the <xref:System.Reflection.ParameterInfo.IsDefined%2A> method to test all parameters of all methods in the example class. It then displays the parameters that have `MyAttribute` or `MyDerivedAttribute`.  \\n  \\n [!code-cpp[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/CPP/ParameterInfo_GetCustomAttribute_IsDefined.cpp#1)]\\n [!code-csharp[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/CS/parameterinfo_getcustomattribute_isdefined.cs#1)]\\n [!code-vb[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/VB/parameterinfo_getcustomattribute_isdefined.vb#1)]\"\n  syntax:\n    content: public virtual bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The `Type` object to search for.\n    - id: inherit\n      type: System.Boolean\n      description: This argument is ignored for objects of this type.\n    return:\n      type: System.Boolean\n      description: '`true` if one or more instances of <code>attributeType</code> or its derived types are applied to this parameter; otherwise, `false`.'\n  overload: System.Reflection.ParameterInfo.IsDefined*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>attributeType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the common language runtime.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.IsIn\n  commentId: P:System.Reflection.ParameterInfo.IsIn\n  id: IsIn\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: IsIn\n  nameWithType: ParameterInfo.IsIn\n  fullName: ParameterInfo.IsIn\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a value indicating whether this is an input parameter.\n  remarks: \"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \\n  \\n This method utilizes the `In` flag of the `ParameterAttributes` enumerator.  \\n  \\n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and <xref:System.Reflection.ParameterAttributes?displayProperty=fullName> attributes.  \\n  \\n The example contains a `DefineMethod` method that does the following:  \\n  \\n-   Creates a dynamic assembly containing a `MyType` type.  \\n  \\n-   Adds a `MyMethod` method to `MyType`. `MyMethod` has three parameters. The first parameter is defined with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, the second with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and the third with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>.  \\n  \\n-   Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> to complete the type.  \\n  \\n After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly. It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters. The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.  \\n  \\n [!code-cpp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CPP/ParameterInfo_IsIn_IsOut_IsOptional.cpp#1)]\\n [!code-csharp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CS/parameterinfo_isin_isout_isoptional.cs#1)]\\n [!code-vb[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/VB/parameterinfo_isin_isout_isoptional.vb#1)]\"\n  syntax:\n    content: public bool IsIn { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the parameter is an input parameter; otherwise, `false`.'\n  overload: System.Reflection.ParameterInfo.IsIn*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.IsLcid\n  commentId: P:System.Reflection.ParameterInfo.IsLcid\n  id: IsLcid\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: IsLcid\n  nameWithType: ParameterInfo.IsLcid\n  fullName: ParameterInfo.IsLcid\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a value indicating whether this parameter is a locale identifier (lcid).\n  remarks: \"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \\n  \\n This method utilizes the `Lcid` flag of the `ParameterAttributes` enumerator.  \\n  \\n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public bool IsLcid { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the parameter is a locale identifier; otherwise, `false`.'\n  overload: System.Reflection.ParameterInfo.IsLcid*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.IsOptional\n  commentId: P:System.Reflection.ParameterInfo.IsOptional\n  id: IsOptional\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: IsOptional\n  nameWithType: ParameterInfo.IsOptional\n  fullName: ParameterInfo.IsOptional\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a value indicating whether this parameter is optional.\n  remarks: \"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \\n  \\n This method utilizes the `Optional` flag of the `ParameterAttributes` enumerator.  \\n  \\n To get the <xref:System.Reflection.ParameterInfo> array, first get the method and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and <xref:System.Reflection.ParameterAttributes?displayProperty=fullName> attributes.  \\n  \\n The example contains a `DefineMethod` method that does the following:  \\n  \\n-   Creates a dynamic assembly containing a `MyType` type.  \\n  \\n-   Adds a `MyMethod` method to `MyType`. `MyMethod` has three parameters. The first parameter is defined with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, the second with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and the third with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>.  \\n  \\n-   Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> to complete the type.  \\n  \\n After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly. It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters. The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.  \\n  \\n [!code-cpp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CPP/ParameterInfo_IsIn_IsOut_IsOptional.cpp#1)]\\n [!code-csharp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CS/parameterinfo_isin_isout_isoptional.cs#1)]\\n [!code-vb[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/VB/parameterinfo_isin_isout_isoptional.vb#1)]\"\n  syntax:\n    content: public bool IsOptional { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the parameter is optional; otherwise, `false`.'\n  overload: System.Reflection.ParameterInfo.IsOptional*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.IsOut\n  commentId: P:System.Reflection.ParameterInfo.IsOut\n  id: IsOut\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: IsOut\n  nameWithType: ParameterInfo.IsOut\n  fullName: ParameterInfo.IsOut\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a value indicating whether this is an output parameter.\n  remarks: \"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \\n  \\n This method utilizes the `Out` flag of the `ParameterAttributes` enumerator.  \\n  \\n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and <xref:System.Reflection.ParameterAttributes?displayProperty=fullName> attributes.  \\n  \\n The example contains a `DefineMethod` method that does the following:  \\n  \\n-   Creates a dynamic assembly containing a `MyType` type.  \\n  \\n-   Adds a `MyMethod` method to `MyType`. `MyMethod` has three parameters. The first parameter is defined with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, the second with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>, and the third with <xref:System.Reflection.ParameterAttributes?displayProperty=fullName>.  \\n  \\n-   Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> to complete the type.  \\n  \\n After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly. It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters. The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.  \\n  \\n [!code-cpp[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/CS/source.cs#1)]\\n [!code-vb[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool IsOut { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the parameter is an output parameter; otherwise, `false`.'\n  overload: System.Reflection.ParameterInfo.IsOut*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.IsRetval\n  commentId: P:System.Reflection.ParameterInfo.IsRetval\n  id: IsRetval\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: IsRetval\n  nameWithType: ParameterInfo.IsRetval\n  fullName: ParameterInfo.IsRetval\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a value indicating whether this is a `Retval` parameter.\n  remarks: \"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.  \\n  \\n This method utilizes the `Retval` flag of the `ParameterAttributes` enumerator.  \\n  \\n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public bool IsRetval { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the parameter is a `Retval`; otherwise, `false`.'\n  overload: System.Reflection.ParameterInfo.IsRetval*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.Member\n  commentId: P:System.Reflection.ParameterInfo.Member\n  id: Member\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: Member\n  nameWithType: ParameterInfo.Member\n  fullName: ParameterInfo.Member\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a value indicating the member in which the parameter is implemented.\n  syntax:\n    content: public virtual System.Reflection.MemberInfo Member { get; }\n    return:\n      type: System.Reflection.MemberInfo\n      description: The member which implanted the parameter represented by this <xref href=\"System.Reflection.ParameterInfo\"></xref>.\n  overload: System.Reflection.ParameterInfo.Member*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.MemberImpl\n  commentId: F:System.Reflection.ParameterInfo.MemberImpl\n  id: MemberImpl\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: MemberImpl\n  nameWithType: ParameterInfo.MemberImpl\n  fullName: ParameterInfo.MemberImpl\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The member in which the field is implemented.\n  remarks: \"This field is intended only for users who are deriving classes from `ParameterInfo`.  \\n  \\n Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Member%2A>.\"\n  syntax:\n    content: protected System.Reflection.MemberInfo MemberImpl;\n    return:\n      type: System.Reflection.MemberInfo\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.MetadataToken\n  commentId: P:System.Reflection.ParameterInfo.MetadataToken\n  id: MetadataToken\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: MetadataToken\n  nameWithType: ParameterInfo.MetadataToken\n  fullName: ParameterInfo.MetadataToken\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a value that identifies this parameter in metadata.\n  remarks: \"To get the module, use the <xref:System.Reflection.MemberInfo.Module%2A> property of the member that defines this parameter.  \\n  \\n The tokens obtained using this property can be passed to the unmanaged Reflection API. For more information, please see [Unmanaged Reflection API](http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).\"\n  syntax:\n    content: public virtual int MetadataToken { get; }\n    return:\n      type: System.Int32\n      description: A value which, in combination with the module, uniquely identifies this parameter in metadata.\n  overload: System.Reflection.ParameterInfo.MetadataToken*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.Name\n  commentId: P:System.Reflection.ParameterInfo.Name\n  id: Name\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ParameterInfo.Name\n  fullName: ParameterInfo.Name\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the name of the parameter.\n  remarks: \"This property utilizes the protected <xref:System.Reflection.ParameterInfo.NameImpl> field, and depends on an optional metadata flag that might not be available in all compilers.  \\n  \\n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName> method.  \\n  \\n> [!WARNING]\\n>  If this <xref:System.Reflection.ParameterInfo> represents a return value (that is, if it was obtained by using the <xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=fullName> property), this property will be `null`.\"\n  example:\n  - \"The following example shows how to get <xref:System.Reflection.ParameterInfo> objects for the parameters of a method, and then use the <xref:System.Reflection.ParameterInfo.Name%2A> property to obtain the parameter names.  \\n  \\n [!code-cpp[Classic ParameterInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ParameterInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/CS/source.cs#1)]\\n [!code-vb[Classic ParameterInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual string Name { get; }\n    return:\n      type: System.String\n      description: The simple name of this parameter.\n  overload: System.Reflection.ParameterInfo.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.NameImpl\n  commentId: F:System.Reflection.ParameterInfo.NameImpl\n  id: NameImpl\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: NameImpl\n  nameWithType: ParameterInfo.NameImpl\n  fullName: ParameterInfo.NameImpl\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The name of the parameter.\n  remarks: \"This field is intended only for users who are deriving classes from `ParameterInfo`.  \\n  \\n Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Name%2A>.\"\n  syntax:\n    content: protected string NameImpl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.ParameterType\n  commentId: P:System.Reflection.ParameterInfo.ParameterType\n  id: ParameterType\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: ParameterType\n  nameWithType: ParameterInfo.ParameterType\n  fullName: ParameterInfo.ParameterType\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the `Type` of this parameter.\n  remarks: \"This method depends on an optional metadata and might not be available in all compilers.  \\n  \\n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following example shows how to get <xref:System.Reflection.ParameterInfo> objects for the parameters of a method, and then use the <xref:System.Reflection.ParameterInfo.ParameterType%2A> property to display the type of each parameter.  \\n  \\n [!code-cpp[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/CS/source.cs#1)]\\n [!code-vb[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual Type ParameterType { get; }\n    return:\n      type: System.Type\n      description: The `Type` object that represents the `Type` of this parameter.\n  overload: System.Reflection.ParameterInfo.ParameterType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.Position\n  commentId: P:System.Reflection.ParameterInfo.Position\n  id: Position\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: Position\n  nameWithType: ParameterInfo.Position\n  fullName: ParameterInfo.Position\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the zero-based position of the parameter in the formal parameter list.\n  remarks: \"Only parameters in the method signature (that is, in the formal parameter list) are considered when calculating the position. For instance methods, the hidden parameter that represents `this` (`Me` in Visual Basic) is not counted.  \\n  \\n This method utilizes the <xref:System.Reflection.ParameterInfo.PositionImpl> method.  \\n  \\n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public virtual int Position { get; }\n    return:\n      type: System.Int32\n      description: An integer representing the position this parameter occupies in the parameter list.\n  overload: System.Reflection.ParameterInfo.Position*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.PositionImpl\n  commentId: F:System.Reflection.ParameterInfo.PositionImpl\n  id: PositionImpl\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: PositionImpl\n  nameWithType: ParameterInfo.PositionImpl\n  fullName: ParameterInfo.PositionImpl\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: The zero-based position of the parameter in the parameter list.\n  remarks: \"This field is intended only for users who are deriving classes from `ParameterInfo`.  \\n  \\n Typical access to the name of the parameter is through <xref:System.Reflection.ParameterInfo.Position%2A>.\"\n  syntax:\n    content: protected int PositionImpl;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.RawDefaultValue\n  commentId: P:System.Reflection.ParameterInfo.RawDefaultValue\n  id: RawDefaultValue\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: RawDefaultValue\n  nameWithType: ParameterInfo.RawDefaultValue\n  fullName: ParameterInfo.RawDefaultValue\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a value indicating the default value if the parameter has a default value.\n  remarks: \"This property can be used in both the execution context and the reflection-only context.  \\n  \\n The default value is used when an actual value is not specified in the method call. A parameter can have a default value that is `null`. This is distinct from the case where a default value is not defined.  \\n  \\n To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: public virtual object RawDefaultValue { get; }\n    return:\n      type: System.Object\n      description: The default value of the parameter, or <xref href=\"System.DBNull.Value\"></xref> if the parameter has no default value.\n  overload: System.Reflection.ParameterInfo.RawDefaultValue*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.ToString\n  commentId: M:System.Reflection.ParameterInfo.ToString\n  id: ToString\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ParameterInfo.ToString()\n  fullName: ParameterInfo.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets the parameter type and name represented as a string.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the type and the name of the parameter.\n  overload: System.Reflection.ParameterInfo.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  commentId: M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  id: System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  isEii: true\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  nameWithType: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  fullName: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: ''\n    return:\n      type: System.Object[]\n      description: ''\n  overload: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  commentId: M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  id: System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  isEii: true\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  nameWithType: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  fullName: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: ''\n    - id: inherit\n      type: System.Boolean\n      description: ''\n    return:\n      type: System.Object[]\n      description: ''\n  overload: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  commentId: M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  id: System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  isEii: true\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: ICustomAttributeProvider.IsDefined(Type, Boolean)\n  nameWithType: ParameterInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  fullName: ParameterInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: ''\n    - id: inherit\n      type: System.Boolean\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: _ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: ParameterInfo._ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: ParameterInfo._ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: void _ParameterInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: Passed-in array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: Count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: Caller-allocated array which receives the IDs corresponding to the names.\n  overload: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: _ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: ParameterInfo._ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: ParameterInfo._ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: void _ParameterInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Receives a pointer to the requested type information object.\n  overload: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)\n  commentId: M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: _ParameterInfo.GetTypeInfoCount(UInt32)\n  nameWithType: ParameterInfo._ParameterInfo.GetTypeInfoCount(UInt32)\n  fullName: ParameterInfo._ParameterInfo.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: void _ParameterInfo.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Points to a location that receives the number of type information interfaces provided by the object.\n  overload: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  commentId: M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.ParameterInfo\n  langs:\n  - csharp\n  name: _ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: ParameterInfo._ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: ParameterInfo._ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: void _ParameterInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Identifies the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: Pointer to the location where the result is to be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.TypeLoadException\n  parent: System\n  isExternal: false\n  name: TypeLoadException\n  nameWithType: TypeLoadException\n  fullName: System.TypeLoadException\n- uid: System.Runtime.Serialization.SerializationException\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationException\n  nameWithType: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n- uid: System.NotImplementedException\n  parent: System\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n- uid: System.Reflection.ParameterInfo.#ctor\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: ParameterInfo()\n  nameWithType: ParameterInfo.ParameterInfo()\n  fullName: ParameterInfo.ParameterInfo()\n- uid: System.Reflection.ParameterInfo.Attributes\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: ParameterInfo.Attributes\n  fullName: ParameterInfo.Attributes\n- uid: System.Reflection.ParameterAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterAttributes\n  nameWithType: ParameterAttributes\n  fullName: System.Reflection.ParameterAttributes\n- uid: System.Reflection.ParameterInfo.AttrsImpl\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: AttrsImpl\n  nameWithType: ParameterInfo.AttrsImpl\n  fullName: ParameterInfo.AttrsImpl\n- uid: System.Reflection.ParameterInfo.ClassImpl\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: ClassImpl\n  nameWithType: ParameterInfo.ClassImpl\n  fullName: ParameterInfo.ClassImpl\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.ParameterInfo.CustomAttributes\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: ParameterInfo.CustomAttributes\n  fullName: ParameterInfo.CustomAttributes\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Reflection.CustomAttributeData\n  name: CustomAttributeData\n  nameWithType: CustomAttributeData\n  fullName: System.Reflection.CustomAttributeData\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<CustomAttributeData>\n  nameWithType: IEnumerable<CustomAttributeData>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.CustomAttributeData\n    name: CustomAttributeData\n    nameWithType: CustomAttributeData\n    fullName: System.Reflection.CustomAttributeData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.ParameterInfo.DefaultValue\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: DefaultValue\n  nameWithType: ParameterInfo.DefaultValue\n  fullName: ParameterInfo.DefaultValue\n- uid: System.Reflection.ParameterInfo.DefaultValueImpl\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: DefaultValueImpl\n  nameWithType: ParameterInfo.DefaultValueImpl\n  fullName: ParameterInfo.DefaultValueImpl\n- uid: System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: ParameterInfo.GetCustomAttributes(Type, Boolean)\n  fullName: ParameterInfo.GetCustomAttributes(Type, Boolean)\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: ParameterInfo.GetCustomAttributes(Boolean)\n  fullName: ParameterInfo.GetCustomAttributes(Boolean)\n- uid: System.Reflection.ParameterInfo.GetCustomAttributesData\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: GetCustomAttributesData()\n  nameWithType: ParameterInfo.GetCustomAttributesData()\n  fullName: ParameterInfo.GetCustomAttributesData()\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<CustomAttributeData>\n  nameWithType: IList<CustomAttributeData>\n  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeData>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.CustomAttributeData\n    name: CustomAttributeData\n    nameWithType: CustomAttributeData\n    fullName: System.Reflection.CustomAttributeData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.ParameterInfo.GetOptionalCustomModifiers\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: GetOptionalCustomModifiers()\n  nameWithType: ParameterInfo.GetOptionalCustomModifiers()\n  fullName: ParameterInfo.GetOptionalCustomModifiers()\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.ParameterInfo.GetRealObject(System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: GetRealObject(StreamingContext)\n  nameWithType: ParameterInfo.GetRealObject(StreamingContext)\n  fullName: ParameterInfo.GetRealObject(StreamingContext)\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Reflection.ParameterInfo.GetRequiredCustomModifiers\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: GetRequiredCustomModifiers()\n  nameWithType: ParameterInfo.GetRequiredCustomModifiers()\n  fullName: ParameterInfo.GetRequiredCustomModifiers()\n- uid: System.Reflection.ParameterInfo.HasDefaultValue\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: HasDefaultValue\n  nameWithType: ParameterInfo.HasDefaultValue\n  fullName: ParameterInfo.HasDefaultValue\n- uid: System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsDefined(Type, Boolean)\n  nameWithType: ParameterInfo.IsDefined(Type, Boolean)\n  fullName: ParameterInfo.IsDefined(Type, Boolean)\n- uid: System.Reflection.ParameterInfo.IsIn\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsIn\n  nameWithType: ParameterInfo.IsIn\n  fullName: ParameterInfo.IsIn\n- uid: System.Reflection.ParameterInfo.IsLcid\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsLcid\n  nameWithType: ParameterInfo.IsLcid\n  fullName: ParameterInfo.IsLcid\n- uid: System.Reflection.ParameterInfo.IsOptional\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsOptional\n  nameWithType: ParameterInfo.IsOptional\n  fullName: ParameterInfo.IsOptional\n- uid: System.Reflection.ParameterInfo.IsOut\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsOut\n  nameWithType: ParameterInfo.IsOut\n  fullName: ParameterInfo.IsOut\n- uid: System.Reflection.ParameterInfo.IsRetval\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsRetval\n  nameWithType: ParameterInfo.IsRetval\n  fullName: ParameterInfo.IsRetval\n- uid: System.Reflection.ParameterInfo.Member\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: Member\n  nameWithType: ParameterInfo.Member\n  fullName: ParameterInfo.Member\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Reflection.ParameterInfo.MemberImpl\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: MemberImpl\n  nameWithType: ParameterInfo.MemberImpl\n  fullName: ParameterInfo.MemberImpl\n- uid: System.Reflection.ParameterInfo.MetadataToken\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: MetadataToken\n  nameWithType: ParameterInfo.MetadataToken\n  fullName: ParameterInfo.MetadataToken\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.ParameterInfo.Name\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: Name\n  nameWithType: ParameterInfo.Name\n  fullName: ParameterInfo.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.ParameterInfo.NameImpl\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: NameImpl\n  nameWithType: ParameterInfo.NameImpl\n  fullName: ParameterInfo.NameImpl\n- uid: System.Reflection.ParameterInfo.ParameterType\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: ParameterType\n  nameWithType: ParameterInfo.ParameterType\n  fullName: ParameterInfo.ParameterType\n- uid: System.Reflection.ParameterInfo.Position\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: Position\n  nameWithType: ParameterInfo.Position\n  fullName: ParameterInfo.Position\n- uid: System.Reflection.ParameterInfo.PositionImpl\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: PositionImpl\n  nameWithType: ParameterInfo.PositionImpl\n  fullName: ParameterInfo.PositionImpl\n- uid: System.Reflection.ParameterInfo.RawDefaultValue\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: RawDefaultValue\n  nameWithType: ParameterInfo.RawDefaultValue\n  fullName: ParameterInfo.RawDefaultValue\n- uid: System.Reflection.ParameterInfo.ToString\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: ToString()\n  nameWithType: ParameterInfo.ToString()\n  fullName: ParameterInfo.ToString()\n- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  nameWithType: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  fullName: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  nameWithType: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  fullName: ParameterInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: ICustomAttributeProvider.IsDefined(Type, Boolean)\n  nameWithType: ParameterInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  fullName: ParameterInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: _ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: ParameterInfo._ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: ParameterInfo._ParameterInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: _ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: ParameterInfo._ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: ParameterInfo._ParameterInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: _ParameterInfo.GetTypeInfoCount(UInt32)\n  nameWithType: ParameterInfo._ParameterInfo.GetTypeInfoCount(UInt32)\n  fullName: ParameterInfo._ParameterInfo.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: _ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: ParameterInfo._ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: ParameterInfo._ParameterInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Reflection.ParameterInfo.#ctor*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: ParameterInfo\n  nameWithType: ParameterInfo.ParameterInfo\n  fullName: ParameterInfo.ParameterInfo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.Attributes*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: ParameterInfo.Attributes\n  fullName: ParameterInfo.Attributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.CustomAttributes*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: ParameterInfo.CustomAttributes\n  fullName: ParameterInfo.CustomAttributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.DefaultValue*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: DefaultValue\n  nameWithType: ParameterInfo.DefaultValue\n  fullName: ParameterInfo.DefaultValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.GetCustomAttributes*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: ParameterInfo.GetCustomAttributes\n  fullName: ParameterInfo.GetCustomAttributes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.GetCustomAttributesData*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: GetCustomAttributesData\n  nameWithType: ParameterInfo.GetCustomAttributesData\n  fullName: ParameterInfo.GetCustomAttributesData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.GetOptionalCustomModifiers*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: GetOptionalCustomModifiers\n  nameWithType: ParameterInfo.GetOptionalCustomModifiers\n  fullName: ParameterInfo.GetOptionalCustomModifiers\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.GetRealObject*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: GetRealObject\n  nameWithType: ParameterInfo.GetRealObject\n  fullName: ParameterInfo.GetRealObject\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.GetRequiredCustomModifiers*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: GetRequiredCustomModifiers\n  nameWithType: ParameterInfo.GetRequiredCustomModifiers\n  fullName: ParameterInfo.GetRequiredCustomModifiers\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.HasDefaultValue*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: HasDefaultValue\n  nameWithType: ParameterInfo.HasDefaultValue\n  fullName: ParameterInfo.HasDefaultValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.IsDefined*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsDefined\n  nameWithType: ParameterInfo.IsDefined\n  fullName: ParameterInfo.IsDefined\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.IsIn*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsIn\n  nameWithType: ParameterInfo.IsIn\n  fullName: ParameterInfo.IsIn\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.IsLcid*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsLcid\n  nameWithType: ParameterInfo.IsLcid\n  fullName: ParameterInfo.IsLcid\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.IsOptional*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsOptional\n  nameWithType: ParameterInfo.IsOptional\n  fullName: ParameterInfo.IsOptional\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.IsOut*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsOut\n  nameWithType: ParameterInfo.IsOut\n  fullName: ParameterInfo.IsOut\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.IsRetval*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: IsRetval\n  nameWithType: ParameterInfo.IsRetval\n  fullName: ParameterInfo.IsRetval\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.Member*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: Member\n  nameWithType: ParameterInfo.Member\n  fullName: ParameterInfo.Member\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.MetadataToken*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: MetadataToken\n  nameWithType: ParameterInfo.MetadataToken\n  fullName: ParameterInfo.MetadataToken\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.Name*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: Name\n  nameWithType: ParameterInfo.Name\n  fullName: ParameterInfo.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.ParameterType*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: ParameterType\n  nameWithType: ParameterInfo.ParameterType\n  fullName: ParameterInfo.ParameterType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.Position*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: Position\n  nameWithType: ParameterInfo.Position\n  fullName: ParameterInfo.Position\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.RawDefaultValue*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: RawDefaultValue\n  nameWithType: ParameterInfo.RawDefaultValue\n  fullName: ParameterInfo.RawDefaultValue\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.ToString*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: ToString\n  nameWithType: ParameterInfo.ToString\n  fullName: ParameterInfo.ToString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n  nameWithType: ParameterInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n  fullName: ParameterInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: System.Reflection.ICustomAttributeProvider.IsDefined\n  nameWithType: ParameterInfo.System.Reflection.ICustomAttributeProvider.IsDefined\n  fullName: ParameterInfo.System.Reflection.ICustomAttributeProvider.IsDefined\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames\n  nameWithType: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames\n  fullName: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ParameterInfo.GetTypeInfo\n  nameWithType: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetTypeInfo\n  fullName: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetTypeInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount\n  nameWithType: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount\n  fullName: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke*\n  parent: System.Reflection.ParameterInfo\n  isExternal: false\n  name: System.Runtime.InteropServices._ParameterInfo.Invoke\n  nameWithType: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.Invoke\n  fullName: ParameterInfo.System.Runtime.InteropServices._ParameterInfo.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/ParameterInfo.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(ParameterInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(ParameterInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(ParameterInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(ParameterInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(ParameterInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(ParameterInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: CustomAttributeExtensions.IsDefined(ParameterInfo, Type)\n  fullName: CustomAttributeExtensions.IsDefined(ParameterInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n- uid: System.Runtime.InteropServices._ParameterInfo\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: _ParameterInfo\n  nameWithType: _ParameterInfo\n  fullName: System.Runtime.InteropServices._ParameterInfo\n- uid: System.Runtime.Serialization.IObjectReference\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: IObjectReference\n  nameWithType: IObjectReference\n  fullName: System.Runtime.Serialization.IObjectReference\n"}