{"nodes":[{"content":"Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.","nodes":[{"pos":[0,106],"content":"Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.","nodes":[{"content":"Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.","pos":[0,106]}]}],"pos":[631,738],"yaml":true},{"content":"Session objects (this class together with <xref:System.Xml.XmlBinaryReaderSession>) enable dynamic string atomization that can span an entire conversation. These session objects manage dynamic dictionaries. For more information about dynamic dictionaries see <xref:System.Xml.XmlDictionary>.  \n  \n Due to asynchronous processing, it is possible for messages that arrive synchronously to be processed in a different order than the order in which they were sent. String atomization that spans messages must ensure the messages are processed in the original order or the atomized strings must be conveyed using a different mechanism.  \n  \n To use them, you create a session object and pass it to the constructor or initializer for a binary XML reader or writer.  \n  \n To reuse a dynamic dictionary pass the same session object to all subsequent readers and writers.  \n  \n The session object can be reset to allow pooling.","nodes":[{"pos":[0,291],"content":"Session objects (this class together with <xref:System.Xml.XmlBinaryReaderSession>) enable dynamic string atomization that can span an entire conversation. These session objects manage dynamic dictionaries. For more information about dynamic dictionaries see <xref:System.Xml.XmlDictionary>.","nodes":[{"content":"Session objects (this class together with <xref:System.Xml.XmlBinaryReaderSession>) enable dynamic string atomization that can span an entire conversation. These session objects manage dynamic dictionaries. For more information about dynamic dictionaries see <xref:System.Xml.XmlDictionary>.","pos":[0,291],"nodes":[{"content":"Session objects (this class together with <ph id=\"ph1\">&lt;xref:System.Xml.XmlBinaryReaderSession&gt;</ph>) enable dynamic string atomization that can span an entire conversation.","pos":[0,155],"source":"Session objects (this class together with <xref:System.Xml.XmlBinaryReaderSession>) enable dynamic string atomization that can span an entire conversation."},{"content":"These session objects manage dynamic dictionaries.","pos":[156,206]},{"content":"For more information about dynamic dictionaries see <ph id=\"ph1\">&lt;xref:System.Xml.XmlDictionary&gt;</ph>.","pos":[207,291],"source":" For more information about dynamic dictionaries see <xref:System.Xml.XmlDictionary>."}]}]},{"pos":[298,630],"content":"Due to asynchronous processing, it is possible for messages that arrive synchronously to be processed in a different order than the order in which they were sent. String atomization that spans messages must ensure the messages are processed in the original order or the atomized strings must be conveyed using a different mechanism.","nodes":[{"content":"Due to asynchronous processing, it is possible for messages that arrive synchronously to be processed in a different order than the order in which they were sent. String atomization that spans messages must ensure the messages are processed in the original order or the atomized strings must be conveyed using a different mechanism.","pos":[0,332],"nodes":[{"content":"Due to asynchronous processing, it is possible for messages that arrive synchronously to be processed in a different order than the order in which they were sent.","pos":[0,162]},{"content":"String atomization that spans messages must ensure the messages are processed in the original order or the atomized strings must be conveyed using a different mechanism.","pos":[163,332]}]}]},{"pos":[637,758],"content":"To use them, you create a session object and pass it to the constructor or initializer for a binary XML reader or writer.","nodes":[{"content":"To use them, you create a session object and pass it to the constructor or initializer for a binary XML reader or writer.","pos":[0,121]}]},{"pos":[765,862],"content":"To reuse a dynamic dictionary pass the same session object to all subsequent readers and writers.","nodes":[{"content":"To reuse a dynamic dictionary pass the same session object to all subsequent readers and writers.","pos":[0,97]}]},{"pos":[869,918],"content":"The session object can be reset to allow pooling.","nodes":[{"content":"The session object can be reset to allow pooling.","pos":[0,49]}]}],"pos":[749,1678],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of this class.","nodes":[{"pos":[0,34],"content":"Creates an instance of this class.","nodes":[{"content":"Creates an instance of this class.","pos":[0,34]}]}],"pos":[3364,3399],"yaml":true},{"content":"Clears out the internal collections.","nodes":[{"pos":[0,36],"content":"Clears out the internal collections.","nodes":[{"content":"Clears out the internal collections.","pos":[0,36]}]}],"pos":[4770,4807],"yaml":true},{"content":"Tries to add an <xref href=\"System.Xml.XmlDictionaryString\"></xref> to the internal collection.","nodes":[{"pos":[0,95],"content":"Tries to add an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryString\"&gt;&lt;/xref&gt;</ph> to the internal collection.","source":"Tries to add an <xref href=\"System.Xml.XmlDictionaryString\"></xref> to the internal collection."}],"pos":[6388,6484],"yaml":true},{"content":"When you use this class you must override this method to send the collection of keys along with the message. Without overriding, a new key is added to the collection, which is saved, but not sent with the message.","nodes":[{"pos":[0,213],"content":"When you use this class you must override this method to send the collection of keys along with the message. Without overriding, a new key is added to the collection, which is saved, but not sent with the message.","nodes":[{"content":"When you use this class you must override this method to send the collection of keys along with the message. Without overriding, a new key is added to the collection, which is saved, but not sent with the message.","pos":[0,213],"nodes":[{"content":"When you use this class you must override this method to send the collection of keys along with the message.","pos":[0,108]},{"content":"Without overriding, a new key is added to the collection, which is saved, but not sent with the message.","pos":[109,213]}]}]}],"pos":[6495,6709],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xml.XmlDictionaryString\"></xref> to add.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryString\"&gt;&lt;/xref&gt;</ph> to add.","source":"The <xref href=\"System.Xml.XmlDictionaryString\"></xref> to add."}],"pos":[6906,6970],"yaml":true},{"content":"The key of the <xref href=\"System.Xml.XmlDictionaryString\"></xref> that was successfully added.","nodes":[{"pos":[0,95],"content":"The key of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryString\"&gt;&lt;/xref&gt;</ph> that was successfully added.","source":"The key of the <xref href=\"System.Xml.XmlDictionaryString\"></xref> that was successfully added."}],"pos":[7028,7124],"yaml":true},{"content":"`true` if the string could be added; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the string could be added; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the string could be added; otherwise, `false`."}],"pos":[7182,7241],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[7411,7441],"yaml":true},{"content":"An entry with key = <code>key</code> already exists.","nodes":[{"pos":[0,52],"content":"An entry with key = <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> already exists.","source":"An entry with key = <code>key</code> already exists."}],"pos":[7551,7604],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlBinaryWriterSession\n  commentId: T:System.Xml.XmlBinaryWriterSession\n  id: XmlBinaryWriterSession\n  children:\n  - System.Xml.XmlBinaryWriterSession.#ctor\n  - System.Xml.XmlBinaryWriterSession.Reset\n  - System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)\n  langs:\n  - csharp\n  name: XmlBinaryWriterSession\n  nameWithType: XmlBinaryWriterSession\n  fullName: System.Xml.XmlBinaryWriterSession\n  type: Class\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  - System.Runtime.Serialization\n  - netstandard\n  namespace: System.Xml\n  summary: Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.\n  remarks: \"Session objects (this class together with <xref:System.Xml.XmlBinaryReaderSession>) enable dynamic string atomization that can span an entire conversation. These session objects manage dynamic dictionaries. For more information about dynamic dictionaries see <xref:System.Xml.XmlDictionary>.  \\n  \\n Due to asynchronous processing, it is possible for messages that arrive synchronously to be processed in a different order than the order in which they were sent. String atomization that spans messages must ensure the messages are processed in the original order or the atomized strings must be conveyed using a different mechanism.  \\n  \\n To use them, you create a session object and pass it to the constructor or initializer for a binary XML reader or writer.  \\n  \\n To reuse a dynamic dictionary pass the same session object to all subsequent readers and writers.  \\n  \\n The session object can be reset to allow pooling.\"\n  syntax:\n    content: public class XmlBinaryWriterSession\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlBinaryWriterSession.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlBinaryWriterSession.#ctor\n  commentId: M:System.Xml.XmlBinaryWriterSession.#ctor\n  id: '#ctor'\n  parent: System.Xml.XmlBinaryWriterSession\n  langs:\n  - csharp\n  name: XmlBinaryWriterSession()\n  nameWithType: XmlBinaryWriterSession.XmlBinaryWriterSession()\n  fullName: XmlBinaryWriterSession.XmlBinaryWriterSession()\n  type: Constructor\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  - System.Runtime.Serialization\n  - netstandard\n  namespace: System.Xml\n  summary: Creates an instance of this class.\n  syntax:\n    content: public XmlBinaryWriterSession ();\n    parameters: []\n  overload: System.Xml.XmlBinaryWriterSession.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlBinaryWriterSession.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlBinaryWriterSession.Reset\n  commentId: M:System.Xml.XmlBinaryWriterSession.Reset\n  id: Reset\n  parent: System.Xml.XmlBinaryWriterSession\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: XmlBinaryWriterSession.Reset()\n  fullName: XmlBinaryWriterSession.Reset()\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  - System.Runtime.Serialization\n  - netstandard\n  namespace: System.Xml\n  summary: Clears out the internal collections.\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.Xml.XmlBinaryWriterSession.Reset*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlBinaryWriterSession.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)\n  commentId: M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)\n  id: TryAdd(System.Xml.XmlDictionaryString,System.Int32@)\n  parent: System.Xml.XmlBinaryWriterSession\n  langs:\n  - csharp\n  name: TryAdd(XmlDictionaryString, Int32)\n  nameWithType: XmlBinaryWriterSession.TryAdd(XmlDictionaryString, Int32)\n  fullName: XmlBinaryWriterSession.TryAdd(XmlDictionaryString, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization.Xml\n  - System.Runtime.Serialization\n  - netstandard\n  namespace: System.Xml\n  summary: Tries to add an <xref href=\"System.Xml.XmlDictionaryString\"></xref> to the internal collection.\n  remarks: When you use this class you must override this method to send the collection of keys along with the message. Without overriding, a new key is added to the collection, which is saved, but not sent with the message.\n  syntax:\n    content: public virtual bool TryAdd (System.Xml.XmlDictionaryString value, out int key);\n    parameters:\n    - id: value\n      type: System.Xml.XmlDictionaryString\n      description: The <xref href=\"System.Xml.XmlDictionaryString\"></xref> to add.\n    - id: key\n      type: System.Int32\n      description: The key of the <xref href=\"System.Xml.XmlDictionaryString\"></xref> that was successfully added.\n    return:\n      type: System.Boolean\n      description: '`true` if the string could be added; otherwise, `false`.'\n  overload: System.Xml.XmlBinaryWriterSession.TryAdd*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An entry with key = <code>key</code> already exists.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlBinaryWriterSession.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Xml.XmlBinaryWriterSession.#ctor\n  parent: System.Xml.XmlBinaryWriterSession\n  isExternal: false\n  name: XmlBinaryWriterSession()\n  nameWithType: XmlBinaryWriterSession.XmlBinaryWriterSession()\n  fullName: XmlBinaryWriterSession.XmlBinaryWriterSession()\n- uid: System.Xml.XmlBinaryWriterSession.Reset\n  parent: System.Xml.XmlBinaryWriterSession\n  isExternal: false\n  name: Reset()\n  nameWithType: XmlBinaryWriterSession.Reset()\n  fullName: XmlBinaryWriterSession.Reset()\n- uid: System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)\n  parent: System.Xml.XmlBinaryWriterSession\n  isExternal: false\n  name: TryAdd(XmlDictionaryString, Int32)\n  nameWithType: XmlBinaryWriterSession.TryAdd(XmlDictionaryString, Int32)\n  fullName: XmlBinaryWriterSession.TryAdd(XmlDictionaryString, Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlDictionaryString\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryString\n  nameWithType: XmlDictionaryString\n  fullName: System.Xml.XmlDictionaryString\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.XmlBinaryWriterSession.#ctor*\n  parent: System.Xml.XmlBinaryWriterSession\n  isExternal: false\n  name: XmlBinaryWriterSession\n  nameWithType: XmlBinaryWriterSession.XmlBinaryWriterSession\n  fullName: XmlBinaryWriterSession.XmlBinaryWriterSession\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlBinaryWriterSession.xml\n- uid: System.Xml.XmlBinaryWriterSession.Reset*\n  parent: System.Xml.XmlBinaryWriterSession\n  isExternal: false\n  name: Reset\n  nameWithType: XmlBinaryWriterSession.Reset\n  fullName: XmlBinaryWriterSession.Reset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlBinaryWriterSession.xml\n- uid: System.Xml.XmlBinaryWriterSession.TryAdd*\n  parent: System.Xml.XmlBinaryWriterSession\n  isExternal: false\n  name: TryAdd\n  nameWithType: XmlBinaryWriterSession.TryAdd\n  fullName: XmlBinaryWriterSession.TryAdd\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlBinaryWriterSession.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}