{"nodes":[{"content":"Represents a configuration element that defines security settings at the service level.","nodes":[{"pos":[0,87],"content":"Represents a configuration element that defines security settings at the service level.","nodes":[{"content":"Represents a configuration element that defines security settings at the service level.","pos":[0,87]}]}],"pos":[1515,1603],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> class.","nodes":[{"pos":[0,123],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> class."}],"pos":[6355,6479],"yaml":true},{"content":"Gets a collection of authorization policy types.","nodes":[{"pos":[0,48],"content":"Gets a collection of authorization policy types.","nodes":[{"content":"Gets a collection of authorization policy types.","pos":[0,48]}]}],"pos":[7796,7845],"yaml":true},{"content":"Configuring a set of authorization policy implementations enables transformation of one set of input claims into another set of claims. Access control can be granted or denied based on the claims.","nodes":[{"pos":[0,196],"content":"Configuring a set of authorization policy implementations enables transformation of one set of input claims into another set of claims. Access control can be granted or denied based on the claims.","nodes":[{"content":"Configuring a set of authorization policy implementations enables transformation of one set of input claims into another set of claims. Access control can be granted or denied based on the claims.","pos":[0,196],"nodes":[{"content":"Configuring a set of authorization policy implementations enables transformation of one set of input claims into another set of claims.","pos":[0,135]},{"content":"Access control can be granted or denied based on the claims.","pos":[136,196]}]}]}],"pos":[7856,8053],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\"></xref> that contains a collection of authorization policy types.","nodes":[{"pos":[0,156],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\"&gt;&lt;/xref&gt;</ph> that contains a collection of authorization policy types.","source":"An <xref href=\"System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\"></xref> that contains a collection of authorization policy types."}],"pos":[8393,8550],"yaml":true},{"content":"Gets the type of this behavior configuration element.","nodes":[{"pos":[0,53],"content":"Gets the type of this behavior configuration element.","nodes":[{"content":"Gets the type of this behavior configuration element.","pos":[0,53]}]}],"pos":[9824,9878],"yaml":true},{"content":"The type of the behavior.","nodes":[{"pos":[0,25],"content":"The type of the behavior.","nodes":[{"content":"The type of the behavior.","pos":[0,25]}]}],"pos":[9999,10025],"yaml":true},{"content":"Copies the content of a specified configuration element to this configuration element.","nodes":[{"pos":[0,86],"content":"Copies the content of a specified configuration element to this configuration element.","nodes":[{"content":"Copies the content of a specified configuration element to this configuration element.","pos":[0,86]}]}],"pos":[11470,11557],"yaml":true},{"content":"The configuration element to be copied.","nodes":[{"pos":[0,39],"content":"The configuration element to be copied.","nodes":[{"content":"The configuration element to be copied.","pos":[0,39]}]}],"pos":[11806,11846],"yaml":true},{"content":"Gets or sets a Boolean value that specifies whether all the operations in the service impersonate the caller.","nodes":[{"pos":[0,109],"content":"Gets or sets a Boolean value that specifies whether all the operations in the service impersonate the caller.","nodes":[{"content":"Gets or sets a Boolean value that specifies whether all the operations in the service impersonate the caller.","pos":[0,109]}]}],"pos":[14408,14518],"yaml":true},{"content":"When a specific service operation impersonates the caller, the thread context is switched to the caller context before executing the specified service.","nodes":[{"pos":[0,151],"content":"When a specific service operation impersonates the caller, the thread context is switched to the caller context before executing the specified service.","nodes":[{"content":"When a specific service operation impersonates the caller, the thread context is switched to the caller context before executing the specified service.","pos":[0,151]}]}],"pos":[14529,14681],"yaml":true,"extradata":"MT"},{"content":"`true` if all the operations in the service impersonate the caller; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,111],"content":"`true` if all the operations in the service impersonate the caller; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if all the operations in the service impersonate the caller; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,87],"source":"`true` if all the operations in the service impersonate the caller; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[88,111],"source":" The default is `false`."}]}],"pos":[14969,15083],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> impersonates on serializing reply.","nodes":[{"pos":[0,165],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"&gt;&lt;/xref&gt;</ph> impersonates on serializing reply.","source":"Gets or sets a value that indicates whether the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> impersonates on serializing reply."}],"pos":[16471,16637],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> impersonates on serializing reply; otherwise, `false`.","nodes":[{"pos":[0,151],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"&gt;&lt;/xref&gt;</ph> impersonates on serializing reply; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> impersonates on serializing reply; otherwise, `false`."}],"pos":[16917,17071],"yaml":true},{"content":"Gets or sets the principal used to carry out operations on the server.","nodes":[{"pos":[0,70],"content":"Gets or sets the principal used to carry out operations on the server.","nodes":[{"content":"Gets or sets the principal used to carry out operations on the server.","pos":[0,70]}]}],"pos":[18419,18490],"yaml":true},{"content":"A valid <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"></xref> value that specifies the principal used to carry out operations on the server. The default is <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups\"></xref>.","nodes":[{"pos":[0,273],"content":"A valid <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"></xref> value that specifies the principal used to carry out operations on the server. The default is <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups\"></xref>.","nodes":[{"content":"A valid <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"&gt;&lt;/xref&gt;</ph> value that specifies the principal used to carry out operations on the server.","pos":[0,163],"source":"A valid <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"></xref> value that specifies the principal used to carry out operations on the server."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups\"&gt;&lt;/xref&gt;</ph>.","pos":[164,273],"source":" The default is <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups\"></xref>."}]}],"pos":[18850,19124],"yaml":true},{"content":"Gets or sets the name of the role provider, which provides role information for a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] application.","nodes":[{"pos":[0,140],"content":"Gets or sets the name of the role provider, which provides role information for a <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> application.","source":"Gets or sets the name of the role provider, which provides role information for a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] application."}],"pos":[21710,21851],"yaml":true},{"content":"Different types of role providers can be used to provide role information from a Windows group, an SQL database, an authorization manager policy store, and so on.","nodes":[{"pos":[0,162],"content":"Different types of role providers can be used to provide role information from a Windows group, an SQL database, an authorization manager policy store, and so on.","nodes":[{"content":"Different types of role providers can be used to provide role information from a Windows group, an SQL database, an authorization manager policy store, and so on.","pos":[0,162]}]}],"pos":[21862,22025],"yaml":true,"extradata":"MT"},{"content":"The name of the role provider. The default is an empty string.","nodes":[{"pos":[0,62],"content":"The name of the role provider. The default is an empty string.","nodes":[{"content":"The name of the role provider. The default is an empty string.","pos":[0,62],"nodes":[{"content":"The name of the role provider.","pos":[0,30]},{"content":"The default is an empty string.","pos":[31,62]}]}]}],"pos":[22339,22402],"yaml":true},{"content":"Gets or sets the type of service authorization manager used.","nodes":[{"pos":[0,60],"content":"Gets or sets the type of service authorization manager used.","nodes":[{"content":"Gets or sets the type of service authorization manager used.","pos":[0,60]}]}],"pos":[23841,23902],"yaml":true},{"content":"A string that specifies the type of the service authorization manager.","nodes":[{"pos":[0,70],"content":"A string that specifies the type of the service authorization manager.","nodes":[{"content":"A string that specifies the type of the service authorization manager.","pos":[0,70]}]}],"pos":[24246,24317],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  commentId: T:System.ServiceModel.Configuration.ServiceAuthorizationElement\n  id: ServiceAuthorizationElement\n  children:\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName\n  - System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  langs:\n  - csharp\n  name: ServiceAuthorizationElement\n  nameWithType: ServiceAuthorizationElement\n  fullName: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Represents a configuration element that defines security settings at the service level.\n  syntax:\n    content: 'public sealed class ServiceAuthorizationElement : System.ServiceModel.Configuration.BehaviorExtensionElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement\n  - System.ServiceModel.Configuration.BehaviorExtensionElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)\n  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor\n  commentId: M:System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: ServiceAuthorizationElement()\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationElement()\n  fullName: ServiceAuthorizationElement.ServiceAuthorizationElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> class.\n  syntax:\n    content: public ServiceAuthorizationElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies\n  commentId: P:System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies\n  id: AuthorizationPolicies\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: AuthorizationPolicies\n  nameWithType: ServiceAuthorizationElement.AuthorizationPolicies\n  fullName: ServiceAuthorizationElement.AuthorizationPolicies\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets a collection of authorization policy types.\n  remarks: Configuring a set of authorization policy implementations enables transformation of one set of input claims into another set of claims. Access control can be granted or denied based on the claims.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"authorizationPolicies\")]\n\n      public System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection AuthorizationPolicies { get; }\n    return:\n      type: System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\n      description: An <xref href=\"System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\"></xref> that contains a collection of authorization policy types.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType\n  commentId: P:System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType\n  id: BehaviorType\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: BehaviorType\n  nameWithType: ServiceAuthorizationElement.BehaviorType\n  fullName: ServiceAuthorizationElement.BehaviorType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets the type of this behavior configuration element.\n  syntax:\n    content: public override Type BehaviorType { get; }\n    return:\n      type: System.Type\n      description: The type of the behavior.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  commentId: M:System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: CopyFrom(ServiceModelExtensionElement)\n  nameWithType: ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)\n  fullName: ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Copies the content of a specified configuration element to this configuration element.\n  syntax:\n    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);\n    parameters:\n    - id: from\n      type: System.ServiceModel.Configuration.ServiceModelExtensionElement\n      description: The configuration element to be copied.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior\n  commentId: M:System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior\n  id: CreateBehavior\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: CreateBehavior()\n  nameWithType: ServiceAuthorizationElement.CreateBehavior()\n  fullName: ServiceAuthorizationElement.CreateBehavior()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override object CreateBehavior ();\n    parameters: []\n    return:\n      type: System.Object\n      description: ''\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  commentId: P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  id: ImpersonateCallerForAllOperations\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: ImpersonateCallerForAllOperations\n  nameWithType: ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  fullName: ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a Boolean value that specifies whether all the operations in the service impersonate the caller.\n  remarks: When a specific service operation impersonates the caller, the thread context is switched to the caller context before executing the specified service.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"impersonateCallerForAllOperations\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool ImpersonateCallerForAllOperations { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if all the operations in the service impersonate the caller; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  commentId: P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  id: ImpersonateOnSerializingReply\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: ImpersonateOnSerializingReply\n  nameWithType: ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  fullName: ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> impersonates on serializing reply.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"impersonateOnSerializingReply\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool ImpersonateOnSerializingReply { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.Configuration.ServiceAuthorizationElement\"></xref> impersonates on serializing reply; otherwise, `false`.'\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode\n  commentId: P:System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode\n  id: PrincipalPermissionMode\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: PrincipalPermissionMode\n  nameWithType: ServiceAuthorizationElement.PrincipalPermissionMode\n  fullName: ServiceAuthorizationElement.PrincipalPermissionMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the principal used to carry out operations on the server.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"principalPermissionMode\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.ServiceModel.Description.PrincipalPermissionMode PrincipalPermissionMode { get; set; }\n    return:\n      type: System.ServiceModel.Description.PrincipalPermissionMode\n      description: A valid <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode\"></xref> value that specifies the principal used to carry out operations on the server. The default is <xref href=\"System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups\"></xref>.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties\n  commentId: P:System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: ServiceAuthorizationElement.Properties\n  fullName: ServiceAuthorizationElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName\n  commentId: P:System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName\n  id: RoleProviderName\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: RoleProviderName\n  nameWithType: ServiceAuthorizationElement.RoleProviderName\n  fullName: ServiceAuthorizationElement.RoleProviderName\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the name of the role provider, which provides role information for a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] application.\n  remarks: Different types of role providers can be used to provide role information from a Windows group, an SQL database, an authorization manager policy store, and so on.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"roleProviderName\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.StringValidator(MinLength=0)]\n\n      public string RoleProviderName { get; set; }\n    return:\n      type: System.String\n      description: The name of the role provider. The default is an empty string.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  commentId: P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  id: ServiceAuthorizationManagerType\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  langs:\n  - csharp\n  name: ServiceAuthorizationManagerType\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  fullName: ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the type of service authorization manager used.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"serviceAuthorizationManagerType\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.StringValidator(MinLength=0)]\n\n      public string ServiceAuthorizationManagerType { get; set; }\n    return:\n      type: System.String\n      description: A string that specifies the type of the service authorization manager.\n  overload: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Configuration.BehaviorExtensionElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: BehaviorExtensionElement\n  nameWithType: BehaviorExtensionElement\n  fullName: System.ServiceModel.Configuration.BehaviorExtensionElement\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ServiceAuthorizationElement()\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationElement()\n  fullName: ServiceAuthorizationElement.ServiceAuthorizationElement()\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: AuthorizationPolicies\n  nameWithType: ServiceAuthorizationElement.AuthorizationPolicies\n  fullName: ServiceAuthorizationElement.AuthorizationPolicies\n- uid: System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: AuthorizationPolicyTypeElementCollection\n  nameWithType: AuthorizationPolicyTypeElementCollection\n  fullName: System.ServiceModel.Configuration.AuthorizationPolicyTypeElementCollection\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: BehaviorType\n  nameWithType: ServiceAuthorizationElement.BehaviorType\n  fullName: ServiceAuthorizationElement.BehaviorType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: CopyFrom(ServiceModelExtensionElement)\n  nameWithType: ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)\n  fullName: ServiceAuthorizationElement.CopyFrom(ServiceModelExtensionElement)\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ServiceModelExtensionElement\n  nameWithType: ServiceModelExtensionElement\n  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: CreateBehavior()\n  nameWithType: ServiceAuthorizationElement.CreateBehavior()\n  fullName: ServiceAuthorizationElement.CreateBehavior()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ImpersonateCallerForAllOperations\n  nameWithType: ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  fullName: ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ImpersonateOnSerializingReply\n  nameWithType: ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  fullName: ServiceAuthorizationElement.ImpersonateOnSerializingReply\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: PrincipalPermissionMode\n  nameWithType: ServiceAuthorizationElement.PrincipalPermissionMode\n  fullName: ServiceAuthorizationElement.PrincipalPermissionMode\n- uid: System.ServiceModel.Description.PrincipalPermissionMode\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: PrincipalPermissionMode\n  nameWithType: PrincipalPermissionMode\n  fullName: System.ServiceModel.Description.PrincipalPermissionMode\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: Properties\n  nameWithType: ServiceAuthorizationElement.Properties\n  fullName: ServiceAuthorizationElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: RoleProviderName\n  nameWithType: ServiceAuthorizationElement.RoleProviderName\n  fullName: ServiceAuthorizationElement.RoleProviderName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ServiceAuthorizationManagerType\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  fullName: ServiceAuthorizationElement.ServiceAuthorizationManagerType\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.#ctor*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ServiceAuthorizationElement\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationElement\n  fullName: ServiceAuthorizationElement.ServiceAuthorizationElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.AuthorizationPolicies*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: AuthorizationPolicies\n  nameWithType: ServiceAuthorizationElement.AuthorizationPolicies\n  fullName: ServiceAuthorizationElement.AuthorizationPolicies\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.BehaviorType*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: BehaviorType\n  nameWithType: ServiceAuthorizationElement.BehaviorType\n  fullName: ServiceAuthorizationElement.BehaviorType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CopyFrom*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: CopyFrom\n  nameWithType: ServiceAuthorizationElement.CopyFrom\n  fullName: ServiceAuthorizationElement.CopyFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.CreateBehavior*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: CreateBehavior\n  nameWithType: ServiceAuthorizationElement.CreateBehavior\n  fullName: ServiceAuthorizationElement.CreateBehavior\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ImpersonateCallerForAllOperations\n  nameWithType: ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  fullName: ServiceAuthorizationElement.ImpersonateCallerForAllOperations\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateOnSerializingReply*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ImpersonateOnSerializingReply\n  nameWithType: ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  fullName: ServiceAuthorizationElement.ImpersonateOnSerializingReply\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.PrincipalPermissionMode*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: PrincipalPermissionMode\n  nameWithType: ServiceAuthorizationElement.PrincipalPermissionMode\n  fullName: ServiceAuthorizationElement.PrincipalPermissionMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.Properties*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: Properties\n  nameWithType: ServiceAuthorizationElement.Properties\n  fullName: ServiceAuthorizationElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.RoleProviderName*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: RoleProviderName\n  nameWithType: ServiceAuthorizationElement.RoleProviderName\n  fullName: ServiceAuthorizationElement.RoleProviderName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.ServiceModel.Configuration.ServiceAuthorizationElement.ServiceAuthorizationManagerType*\n  parent: System.ServiceModel.Configuration.ServiceAuthorizationElement\n  isExternal: false\n  name: ServiceAuthorizationManagerType\n  nameWithType: ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  fullName: ServiceAuthorizationElement.ServiceAuthorizationManagerType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/ServiceAuthorizationElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ServiceModelExtensionElement.IsModified()\n  fullName: ServiceModelExtensionElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ServiceModelExtensionElement.Reset(ConfigurationElement)\n  fullName: ServiceModelExtensionElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ServiceModelExtensionElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ServiceModelExtensionElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  parent: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  isExternal: false\n  name: SetPropertyValueIfNotDefaultValue<T>(String, T)\n  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n  fullName: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName\n  parent: System.ServiceModel.Configuration.ServiceModelExtensionElement\n  isExternal: false\n  name: ConfigurationElementName\n  nameWithType: ServiceModelExtensionElement.ConfigurationElementName\n  fullName: ServiceModelExtensionElement.ConfigurationElementName\n"}