{"nodes":[{"content":"Provides data for the events defined on <xref href=\"System.Windows.Forms.HtmlDocument\"></xref> and <xref href=\"System.Windows.Forms.HtmlElement\"></xref>.","nodes":[{"pos":[0,153],"content":"Provides data for the events defined on <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlDocument\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph>.","source":"Provides data for the events defined on <xref href=\"System.Windows.Forms.HtmlDocument\"></xref> and <xref href=\"System.Windows.Forms.HtmlElement\"></xref>."}],"pos":[1207,1361],"yaml":true},{"content":"<xref:System.Windows.Forms.HtmlElementEventArgs> encapsulates the same information found on the `window.event` object when programming against the unmanaged HTML DOM or when writing Active Script for HTML pages.  \n  \n In most cases, you can use <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> to find the HTML element that is receiving the event action, and <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> to find the HTML element that the current event is causing us to leave. However, not every event supplies a value for these properties; see the managed documentation for an event, or the corresponding documentation in the Internet Explorer SDK documentation, to discover if the event supplies it.  \n  \n Many events in the HTML DOM are sent to their parent elements unless they are cancelled. This is known as event bubbling. If a `SPAN` inside of a `DIV` receives a click, then a click event is raised for the `SPAN` first, then for the `DIV`, and finally for the HTML page's `BODY` element. <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> controls whether an event will behave in this manner or not.","nodes":[{"pos":[0,211],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs&gt;</ph> encapsulates the same information found on the <ph id=\"ph2\">`window.event`</ph> object when programming against the unmanaged HTML DOM or when writing Active Script for HTML pages.","source":"<xref:System.Windows.Forms.HtmlElementEventArgs> encapsulates the same information found on the `window.event` object when programming against the unmanaged HTML DOM or when writing Active Script for HTML pages."},{"pos":[218,732],"content":"In most cases, you can use <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> to find the HTML element that is receiving the event action, and <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> to find the HTML element that the current event is causing us to leave. However, not every event supplies a value for these properties; see the managed documentation for an event, or the corresponding documentation in the Internet Explorer SDK documentation, to discover if the event supplies it.","nodes":[{"content":"In most cases, you can use <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> to find the HTML element that is receiving the event action, and <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> to find the HTML element that the current event is causing us to leave. However, not every event supplies a value for these properties; see the managed documentation for an event, or the corresponding documentation in the Internet Explorer SDK documentation, to discover if the event supplies it.","pos":[0,514],"nodes":[{"content":"In most cases, you can use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A&gt;</ph> to find the HTML element that is receiving the event action, and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A&gt;</ph> to find the HTML element that the current event is causing us to leave.","pos":[0,289],"source":"In most cases, you can use <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> to find the HTML element that is receiving the event action, and <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> to find the HTML element that the current event is causing us to leave."},{"content":"However, not every event supplies a value for these properties; see the managed documentation for an event, or the corresponding documentation in the Internet Explorer SDK documentation, to discover if the event supplies it.","pos":[290,514]}]}]},{"pos":[739,1152],"content":"Many events in the HTML DOM are sent to their parent elements unless they are cancelled. This is known as event bubbling. If a `SPAN` inside of a `DIV` receives a click, then a click event is raised for the `SPAN` first, then for the `DIV`, and finally for the HTML page's `BODY` element. <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> controls whether an event will behave in this manner or not.","nodes":[{"content":"Many events in the HTML DOM are sent to their parent elements unless they are cancelled.","pos":[0,88]},{"content":"This is known as event bubbling.","pos":[89,121]},{"content":"If a <ph id=\"ph1\">`SPAN`</ph> inside of a <ph id=\"ph2\">`DIV`</ph> receives a click, then a click event is raised for the <ph id=\"ph3\">`SPAN`</ph> first, then for the <ph id=\"ph4\">`DIV`</ph>, and finally for the HTML page's <ph id=\"ph5\">`BODY`</ph> element.","pos":[122,288],"source":" If a `SPAN` inside of a `DIV` receives a click, then a click event is raised for the `SPAN` first, then for the `DIV`, and finally for the HTML page's `BODY` element."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A&gt;</ph> controls whether an event will behave in this manner or not.","pos":[289,413],"source":" <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> controls whether an event will behave in this manner or not."}]}],"pos":[1372,2531],"yaml":true,"extradata":"MT"},{"content":"Indicates whether the ALT key was pressed when this event occurred.","nodes":[{"pos":[0,67],"content":"Indicates whether the ALT key was pressed when this event occurred.","nodes":[{"content":"Indicates whether the ALT key was pressed when this event occurred.","pos":[0,67]}]}],"pos":[5149,5217],"yaml":true},{"content":"`true` is the ALT key was pressed; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> is the ALT key was pressed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` is the ALT key was pressed; otherwise, `false`."}],"pos":[6584,6641],"yaml":true},{"content":"Gets or sets a value indicating whether the current event bubbles up through the element hierarchy of the HTML Document Object Model.","nodes":[{"pos":[0,133],"content":"Gets or sets a value indicating whether the current event bubbles up through the element hierarchy of the HTML Document Object Model.","nodes":[{"content":"Gets or sets a value indicating whether the current event bubbles up through the element hierarchy of the HTML Document Object Model.","pos":[0,133]}]}],"pos":[7703,7837],"yaml":true},{"content":"Not all events in the Document Object Model bubble. All of the events exposed by the <xref:System.Windows.Forms.HtmlDocument> managed wrapper bubble with the exception of <xref:System.Windows.Forms.HtmlDocument.Stop>. For <xref:System.Windows.Forms.HtmlElement>, the `Error` and `Load` events do not bubble. Setting `BubbleEvent` to `true` during any of these events will have no effect.","nodes":[{"pos":[0,387],"content":"Not all events in the Document Object Model bubble. All of the events exposed by the <xref:System.Windows.Forms.HtmlDocument> managed wrapper bubble with the exception of <xref:System.Windows.Forms.HtmlDocument.Stop>. For <xref:System.Windows.Forms.HtmlElement>, the `Error` and `Load` events do not bubble. Setting `BubbleEvent` to `true` during any of these events will have no effect.","nodes":[{"content":"Not all events in the Document Object Model bubble.","pos":[0,51]},{"content":"All of the events exposed by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> managed wrapper bubble with the exception of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlDocument.Stop&gt;</ph>.","pos":[52,217],"source":" All of the events exposed by the <xref:System.Windows.Forms.HtmlDocument> managed wrapper bubble with the exception of <xref:System.Windows.Forms.HtmlDocument.Stop>."},{"content":"For <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>, the <ph id=\"ph2\">`Error`</ph> and <ph id=\"ph3\">`Load`</ph> events do not bubble.","pos":[218,307],"source":" For <xref:System.Windows.Forms.HtmlElement>, the `Error` and `Load` events do not bubble."},{"content":"Setting <ph id=\"ph1\">`BubbleEvent`</ph> to <ph id=\"ph2\">`true`</ph> during any of these events will have no effect.","pos":[308,387],"source":" Setting `BubbleEvent` to `true` during any of these events will have no effect."}]}],"pos":[7848,8236],"yaml":true,"extradata":"MT"},{"content":"`true` if the event bubbles; `false` if it does not.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if the event bubbles; <ph id=\"ph2\">`false`</ph> if it does not.","source":"`true` if the event bubbles; `false` if it does not."}],"pos":[9592,9647],"yaml":true},{"content":"Gets or sets the position of the mouse cursor in the document's client area.","nodes":[{"pos":[0,76],"content":"Gets or sets the position of the mouse cursor in the document's client area.","nodes":[{"content":"Gets or sets the position of the mouse cursor in the document's client area.","pos":[0,76]}]}],"pos":[10755,10832],"yaml":true},{"content":"`ClientMousePosition` gives the mouse position of the cursor relative to the upper-left corner of the document. Use <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> if you need the mouse coordinates relative to the element that raised the event.","nodes":[{"pos":[0,262],"content":"`ClientMousePosition` gives the mouse position of the cursor relative to the upper-left corner of the document. Use <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> if you need the mouse coordinates relative to the element that raised the event.","nodes":[{"content":"<ph id=\"ph1\">`ClientMousePosition`</ph> gives the mouse position of the cursor relative to the upper-left corner of the document.","pos":[0,111],"source":"`ClientMousePosition` gives the mouse position of the cursor relative to the upper-left corner of the document."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A&gt;</ph> if you need the mouse coordinates relative to the element that raised the event.","pos":[112,262],"source":" Use <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> if you need the mouse coordinates relative to the element that raised the event."}]}],"pos":[10843,11108],"yaml":true,"extradata":"MT"},{"content":"The current position of the mouse cursor.","nodes":[{"pos":[0,41],"content":"The current position of the mouse cursor.","nodes":[{"content":"The current position of the mouse cursor.","pos":[0,41]}]}],"pos":[12966,13008],"yaml":true},{"content":"Indicates whether the CTRL key was pressed when this event occurred.","nodes":[{"pos":[0,68],"content":"Indicates whether the CTRL key was pressed when this event occurred.","nodes":[{"content":"Indicates whether the CTRL key was pressed when this event occurred.","pos":[0,68]}]}],"pos":[14094,14163],"yaml":true},{"content":"`true` if the CTRL key was pressed; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the CTRL key was pressed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the CTRL key was pressed; otherwise, `false`."}],"pos":[15531,15589],"yaml":true},{"content":"Gets the name of the event that was raised.","nodes":[{"pos":[0,43],"content":"Gets the name of the event that was raised.","nodes":[{"content":"Gets the name of the event that was raised.","pos":[0,43]}]}],"pos":[16640,16684],"yaml":true},{"content":"The name of the event.","nodes":[{"pos":[0,22],"content":"The name of the event.","nodes":[{"content":"The name of the event.","pos":[0,22]}]}],"pos":[18048,18071],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Forms.HtmlElement\"></xref> the mouse pointer is moving away from.","nodes":[{"pos":[0,101],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph> the mouse pointer is moving away from.","source":"Gets the <xref href=\"System.Windows.Forms.HtmlElement\"></xref> the mouse pointer is moving away from."}],"pos":[19129,19231],"yaml":true},{"content":"<xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> will have a valid value during mouse events such as <xref:System.Windows.Forms.HtmlElement.MouseEnter> and <xref:System.Windows.Forms.HtmlElement.MouseLeave>.","nodes":[{"pos":[0,222],"content":"<xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> will have a valid value during mouse events such as <xref:System.Windows.Forms.HtmlElement.MouseEnter> and <xref:System.Windows.Forms.HtmlElement.MouseLeave>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A&gt;</ph> will have a valid value during mouse events such as <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.MouseEnter&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.MouseLeave&gt;</ph>.","pos":[0,222],"source":"<xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> will have a valid value during mouse events such as <xref:System.Windows.Forms.HtmlElement.MouseEnter> and <xref:System.Windows.Forms.HtmlElement.MouseLeave>."}]}],"pos":[19242,19465],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.HtmlElement\"></xref> the mouse pointer is moving away from.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph> the mouse pointer is moving away from.","source":"The <xref href=\"System.Windows.Forms.HtmlElement\"></xref> the mouse pointer is moving away from."}],"pos":[19682,19779],"yaml":true},{"content":"Gets the ASCII value of the keyboard character typed in a <xref href=\"System.Windows.Forms.HtmlElement.KeyPress\"></xref>, <xref href=\"System.Windows.Forms.HtmlElement.KeyDown\"></xref>, or <xref href=\"System.Windows.Forms.HtmlElement.KeyUp\"></xref> event.","nodes":[{"pos":[0,254],"content":"Gets the ASCII value of the keyboard character typed in a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement.KeyPress\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.HtmlElement.KeyDown\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Windows.Forms.HtmlElement.KeyUp\"&gt;&lt;/xref&gt;</ph> event.","source":"Gets the ASCII value of the keyboard character typed in a <xref href=\"System.Windows.Forms.HtmlElement.KeyPress\"></xref>, <xref href=\"System.Windows.Forms.HtmlElement.KeyDown\"></xref>, or <xref href=\"System.Windows.Forms.HtmlElement.KeyUp\"></xref> event."}],"pos":[20922,21177],"yaml":true},{"content":"The ASCII value of the composed keyboard entry.","nodes":[{"pos":[0,47],"content":"The ASCII value of the composed keyboard entry.","nodes":[{"content":"The ASCII value of the composed keyboard entry.","pos":[0,47]}]}],"pos":[22542,22590],"yaml":true},{"content":"Gets the mouse button that was clicked during a <xref href=\"System.Windows.Forms.HtmlElement.MouseDown\"></xref> or <xref href=\"System.Windows.Forms.HtmlElement.MouseUp\"></xref> event.","nodes":[{"pos":[0,183],"content":"Gets the mouse button that was clicked during a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement.MouseDown\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.HtmlElement.MouseUp\"&gt;&lt;/xref&gt;</ph> event.","source":"Gets the mouse button that was clicked during a <xref href=\"System.Windows.Forms.HtmlElement.MouseDown\"></xref> or <xref href=\"System.Windows.Forms.HtmlElement.MouseUp\"></xref> event."}],"pos":[23679,23863],"yaml":true},{"content":"The mouse button that was clicked.","nodes":[{"pos":[0,34],"content":"The mouse button that was clicked.","nodes":[{"content":"The mouse button that was clicked.","pos":[0,34]}]}],"pos":[25284,25319],"yaml":true},{"content":"Gets or sets the position of the mouse cursor relative to a relatively positioned parent element.","nodes":[{"pos":[0,97],"content":"Gets or sets the position of the mouse cursor relative to a relatively positioned parent element.","nodes":[{"content":"Gets or sets the position of the mouse cursor relative to a relatively positioned parent element.","pos":[0,97]}]}],"pos":[26399,26497],"yaml":true},{"content":"Relative positioning is used in HTML to place an element on a page in relation to its parent.  \n  \n If an element is relatively positioned, this property will return the same result as <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>.","nodes":[{"pos":[0,93],"content":"Relative positioning is used in HTML to place an element on a page in relation to its parent.","nodes":[{"content":"Relative positioning is used in HTML to place an element on a page in relation to its parent.","pos":[0,93]}]},{"pos":[100,257],"content":"If an element is relatively positioned, this property will return the same result as <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>.","nodes":[{"content":"If an element is relatively positioned, this property will return the same result as <ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A&gt;</ph>.","pos":[0,157],"source":"If an element is relatively positioned, this property will return the same result as <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>."}]}],"pos":[26508,26770],"yaml":true,"extradata":"MT"},{"content":"The position of the mouse cursor relative to the upper-left corner of the parent of the element that raised the event, if the parent element is relatively positioned.","nodes":[{"pos":[0,166],"content":"The position of the mouse cursor relative to the upper-left corner of the parent of the element that raised the event, if the parent element is relatively positioned.","nodes":[{"content":"The position of the mouse cursor relative to the upper-left corner of the parent of the element that raised the event, if the parent element is relatively positioned.","pos":[0,166]}]}],"pos":[28621,28788],"yaml":true},{"content":"Gets or sets the position of the mouse cursor relative to the element that raises the event.","nodes":[{"pos":[0,92],"content":"Gets or sets the position of the mouse cursor relative to the element that raises the event.","nodes":[{"content":"Gets or sets the position of the mouse cursor relative to the element that raises the event.","pos":[0,92]}]}],"pos":[29898,29991],"yaml":true},{"content":"The mouse position relative to the element that raises the event.","nodes":[{"pos":[0,65],"content":"The mouse position relative to the element that raises the event.","nodes":[{"content":"The mouse position relative to the element that raises the event.","pos":[0,65]}]}],"pos":[31862,31928],"yaml":true},{"content":"Gets or sets the return value of the handled event.","nodes":[{"pos":[0,51],"content":"Gets or sets the return value of the handled event.","nodes":[{"content":"Gets or sets the return value of the handled event.","pos":[0,51]}]}],"pos":[32996,33048],"yaml":true},{"content":"`true` if the event has been handled; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the event has been handled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the event has been handled; otherwise, `false`."}],"pos":[34418,34478],"yaml":true},{"content":"Indicates whether the SHIFT key was pressed when this event occurred.","nodes":[{"pos":[0,69],"content":"Indicates whether the SHIFT key was pressed when this event occurred.","nodes":[{"content":"Indicates whether the SHIFT key was pressed when this event occurred.","pos":[0,69]}]}],"pos":[35562,35632],"yaml":true},{"content":"`true` if the SHIFT key was pressed; otherwise, `false`.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">`true`</ph> if the SHIFT key was pressed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the SHIFT key was pressed; otherwise, `false`."}],"pos":[37001,37060],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Forms.HtmlElement\"></xref> toward which the user is moving the mouse pointer.","nodes":[{"pos":[0,113],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.HtmlElement\"&gt;&lt;/xref&gt;</ph> toward which the user is moving the mouse pointer.","source":"Gets the <xref href=\"System.Windows.Forms.HtmlElement\"></xref> toward which the user is moving the mouse pointer."}],"pos":[38112,38226],"yaml":true},{"content":"<xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> will have a valid value during mouse events such as <xref:System.Windows.Forms.HtmlElement.MouseEnter> and <xref:System.Windows.Forms.HtmlElement.MouseLeave>.","nodes":[{"pos":[0,220],"content":"<xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> will have a valid value during mouse events such as <xref:System.Windows.Forms.HtmlElement.MouseEnter> and <xref:System.Windows.Forms.HtmlElement.MouseLeave>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A&gt;</ph> will have a valid value during mouse events such as <ph id=\"ph2\">&lt;xref:System.Windows.Forms.HtmlElement.MouseEnter&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.HtmlElement.MouseLeave&gt;</ph>.","pos":[0,220],"source":"<xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> will have a valid value during mouse events such as <xref:System.Windows.Forms.HtmlElement.MouseEnter> and <xref:System.Windows.Forms.HtmlElement.MouseLeave>."}]}],"pos":[38237,38458],"yaml":true,"extradata":"MT"},{"content":"The element toward which the mouse pointer is moving.","nodes":[{"pos":[0,53],"content":"The element toward which the mouse pointer is moving.","nodes":[{"content":"The element toward which the mouse pointer is moving.","pos":[0,53]}]}],"pos":[39910,39964],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.HtmlElementEventArgs\n  commentId: T:System.Windows.Forms.HtmlElementEventArgs\n  id: HtmlElementEventArgs\n  children:\n  - System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed\n  - System.Windows.Forms.HtmlElementEventArgs.BubbleEvent\n  - System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition\n  - System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed\n  - System.Windows.Forms.HtmlElementEventArgs.EventType\n  - System.Windows.Forms.HtmlElementEventArgs.FromElement\n  - System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode\n  - System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed\n  - System.Windows.Forms.HtmlElementEventArgs.MousePosition\n  - System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition\n  - System.Windows.Forms.HtmlElementEventArgs.ReturnValue\n  - System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed\n  - System.Windows.Forms.HtmlElementEventArgs.ToElement\n  langs:\n  - csharp\n  name: HtmlElementEventArgs\n  nameWithType: HtmlElementEventArgs\n  fullName: System.Windows.Forms.HtmlElementEventArgs\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Provides data for the events defined on <xref href=\"System.Windows.Forms.HtmlDocument\"></xref> and <xref href=\"System.Windows.Forms.HtmlElement\"></xref>.\n  remarks: \"<xref:System.Windows.Forms.HtmlElementEventArgs> encapsulates the same information found on the `window.event` object when programming against the unmanaged HTML DOM or when writing Active Script for HTML pages.  \\n  \\n In most cases, you can use <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> to find the HTML element that is receiving the event action, and <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> to find the HTML element that the current event is causing us to leave. However, not every event supplies a value for these properties; see the managed documentation for an event, or the corresponding documentation in the Internet Explorer SDK documentation, to discover if the event supplies it.  \\n  \\n Many events in the HTML DOM are sent to their parent elements unless they are cancelled. This is known as event bubbling. If a `SPAN` inside of a `DIV` receives a click, then a click event is raised for the `SPAN` first, then for the `DIV`, and finally for the HTML page's `BODY` element. <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> controls whether an event will behave in this manner or not.\"\n  example:\n  - \"The following code example demonstrates the use of this type. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]\\n [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]\"\n  syntax:\n    content: 'public sealed class HtmlElementEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed\n  id: AltKeyPressed\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: AltKeyPressed\n  nameWithType: HtmlElementEventArgs.AltKeyPressed\n  fullName: HtmlElementEventArgs.AltKeyPressed\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Indicates whether the ALT key was pressed when this event occurred.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]\\n [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]\"\n  syntax:\n    content: public bool AltKeyPressed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` is the ALT key was pressed; otherwise, `false`.'\n  overload: System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.BubbleEvent\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent\n  id: BubbleEvent\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: BubbleEvent\n  nameWithType: HtmlElementEventArgs.BubbleEvent\n  fullName: HtmlElementEventArgs.BubbleEvent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the current event bubbles up through the element hierarchy of the HTML Document Object Model.\n  remarks: Not all events in the Document Object Model bubble. All of the events exposed by the <xref:System.Windows.Forms.HtmlDocument> managed wrapper bubble with the exception of <xref:System.Windows.Forms.HtmlDocument.Stop>. For <xref:System.Windows.Forms.HtmlElement>, the `Error` and `Load` events do not bubble. Setting `BubbleEvent` to `true` during any of these events will have no effect.\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]\\n [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]\"\n  syntax:\n    content: public bool BubbleEvent { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the event bubbles; `false` if it does not.'\n  overload: System.Windows.Forms.HtmlElementEventArgs.BubbleEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition\n  id: ClientMousePosition\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: ClientMousePosition\n  nameWithType: HtmlElementEventArgs.ClientMousePosition\n  fullName: HtmlElementEventArgs.ClientMousePosition\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the position of the mouse cursor in the document's client area.\n  remarks: '`ClientMousePosition` gives the mouse position of the cursor relative to the upper-left corner of the document. Use <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> if you need the mouse coordinates relative to the element that raised the event.'\n  example:\n  - \"The following HTML file demonstrates relative positioning of a `TABLE` inside of a `BODY` tag.  \\n  \\n```  \\n<HTML>  \\n  \\n<BODY>  \\n  \\n    <TABLE style=\\\"position:relative;top:100px;left:100px;\\\">  \\n        <TR>  \\n            <TD>Text</TD>  \\n            <TD>More text</TD>  \\n        </TR>  \\n    </TABLE>  \\n  \\n</BODY>  \\n  \\n</HTML>  \\n  \\n```  \\n  \\n The following code example displays the difference between <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>, <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>, and <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> when the user clicks on an element of the `TABLE`. <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> will display coordinates relative to the upper-left corner of the document's client area. <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> will display coordinates relative to the upper-left corner of the `TABLE`. If you click on one of the lines of text, <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> will display coordinates relative to that `TD` element.  \\n  \\n This example requires that you have configured `Document_MouseDown` as a handler for the <xref:System.Windows.Forms.HtmlDocument.MouseDown> event on <xref:System.Windows.Forms.HtmlDocument>.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]\\n [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]\"\n  syntax:\n    content: public System.Drawing.Point ClientMousePosition { get; }\n    return:\n      type: System.Drawing.Point\n      description: The current position of the mouse cursor.\n  overload: System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed\n  id: CtrlKeyPressed\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: CtrlKeyPressed\n  nameWithType: HtmlElementEventArgs.CtrlKeyPressed\n  fullName: HtmlElementEventArgs.CtrlKeyPressed\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Indicates whether the CTRL key was pressed when this event occurred.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]\\n [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]\"\n  syntax:\n    content: public bool CtrlKeyPressed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the CTRL key was pressed; otherwise, `false`.'\n  overload: System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.EventType\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.EventType\n  id: EventType\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: EventType\n  nameWithType: HtmlElementEventArgs.EventType\n  fullName: HtmlElementEventArgs.EventType\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the name of the event that was raised.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]\\n [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]\"\n  syntax:\n    content: public string EventType { get; }\n    return:\n      type: System.String\n      description: The name of the event.\n  overload: System.Windows.Forms.HtmlElementEventArgs.EventType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.FromElement\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.FromElement\n  id: FromElement\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: FromElement\n  nameWithType: HtmlElementEventArgs.FromElement\n  fullName: HtmlElementEventArgs.FromElement\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the <xref href=\"System.Windows.Forms.HtmlElement\"></xref> the mouse pointer is moving away from.\n  remarks: <xref:System.Windows.Forms.HtmlElementEventArgs.FromElement%2A> will have a valid value during mouse events such as <xref:System.Windows.Forms.HtmlElement.MouseEnter> and <xref:System.Windows.Forms.HtmlElement.MouseLeave>.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.HtmlElement FromElement { get; }\n    return:\n      type: System.Windows.Forms.HtmlElement\n      description: The <xref href=\"System.Windows.Forms.HtmlElement\"></xref> the mouse pointer is moving away from.\n  overload: System.Windows.Forms.HtmlElementEventArgs.FromElement*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode\n  id: KeyPressedCode\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: KeyPressedCode\n  nameWithType: HtmlElementEventArgs.KeyPressedCode\n  fullName: HtmlElementEventArgs.KeyPressedCode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the ASCII value of the keyboard character typed in a <xref href=\"System.Windows.Forms.HtmlElement.KeyPress\"></xref>, <xref href=\"System.Windows.Forms.HtmlElement.KeyDown\"></xref>, or <xref href=\"System.Windows.Forms.HtmlElement.KeyUp\"></xref> event.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]\\n [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]\"\n  syntax:\n    content: public int KeyPressedCode { get; }\n    return:\n      type: System.Int32\n      description: The ASCII value of the composed keyboard entry.\n  overload: System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed\n  id: MouseButtonsPressed\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: MouseButtonsPressed\n  nameWithType: HtmlElementEventArgs.MouseButtonsPressed\n  fullName: HtmlElementEventArgs.MouseButtonsPressed\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the mouse button that was clicked during a <xref href=\"System.Windows.Forms.HtmlElement.MouseDown\"></xref> or <xref href=\"System.Windows.Forms.HtmlElement.MouseUp\"></xref> event.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]\\n [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]\"\n  syntax:\n    content: public System.Windows.Forms.MouseButtons MouseButtonsPressed { get; }\n    return:\n      type: System.Windows.Forms.MouseButtons\n      description: The mouse button that was clicked.\n  overload: System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.MousePosition\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.MousePosition\n  id: MousePosition\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: MousePosition\n  nameWithType: HtmlElementEventArgs.MousePosition\n  fullName: HtmlElementEventArgs.MousePosition\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the position of the mouse cursor relative to a relatively positioned parent element.\n  remarks: \"Relative positioning is used in HTML to place an element on a page in relation to its parent.  \\n  \\n If an element is relatively positioned, this property will return the same result as <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>.\"\n  example:\n  - \"The following HTML file demonstrates relative positioning of a `TABLE` inside of a `BODY` tag.  \\n  \\n```  \\n<HTML>  \\n  \\n<BODY>  \\n  \\n    <TABLE style=\\\"position:relative;top:100px;left:100px;\\\">  \\n        <TR>  \\n            <TD>Text/TD>  \\n            <TD>More text</TD>  \\n        </TR>  \\n    </TABLE>  \\n  \\n</BODY>  \\n  \\n</HTML>  \\n  \\n```  \\n  \\n The following code example displays the difference between <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>, <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A>, and <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> when the user clicks on an element of the `TABLE`. <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> will display coordinates relative to the upper-left corner of the document's client area. <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> will display coordinates relative to the upper-left corner of the `TABLE`. If you click on one of the lines of text, <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> will display coordinates relative to that `TD` element.  \\n  \\n This example requires that you have configured `Document_MouseDown` as a handler for the <xref:System.Windows.Forms.HtmlDocument.MouseDown> event on <xref:System.Windows.Forms.HtmlDocument>.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]\\n [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]\"\n  syntax:\n    content: public System.Drawing.Point MousePosition { get; }\n    return:\n      type: System.Drawing.Point\n      description: The position of the mouse cursor relative to the upper-left corner of the parent of the element that raised the event, if the parent element is relatively positioned.\n  overload: System.Windows.Forms.HtmlElementEventArgs.MousePosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition\n  id: OffsetMousePosition\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: OffsetMousePosition\n  nameWithType: HtmlElementEventArgs.OffsetMousePosition\n  fullName: HtmlElementEventArgs.OffsetMousePosition\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the position of the mouse cursor relative to the element that raises the event.\n  remarks: ''\n  example:\n  - \"The following HTML file demonstrates relative positioning of a `TABLE` inside of a `BODY` tag.  \\n  \\n```  \\n<HTML>  \\n  \\n<BODY>  \\n  \\n    <TABLE style=\\\"position:relative;top:100px;left:100px;\\\">  \\n        <TR>  \\n            <TD>Text</TD>  \\n            <TD>More text</TD>  \\n        </TR>  \\n    </TABLE>  \\n  \\n</BODY>  \\n  \\n</HTML>  \\n  \\n```  \\n  \\n The following code example displays the difference between <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A>, <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> and <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> when the user clicks on an element of the `TABLE`. <xref:System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition%2A> will display coordinates relative to the upper-left corner of the document's client area. <xref:System.Windows.Forms.HtmlElementEventArgs.MousePosition%2A> will display coordinates relative to the upper-left corner of the `TABLE`. If you click on one of the lines of text, <xref:System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition%2A> will display coordinates relative to that `TD` element.  \\n  \\n This example requires that you have configured `Document_MouseDown` as a handler for the <xref:System.Windows.Forms.HtmlDocument.MouseDown> event on <xref:System.Windows.Forms.HtmlDocument>.  \\n  \\n [!code-csharp[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/CS/Form1.cs#2)]\\n [!code-vb[System.Windows.Forms.HtmlElementEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HtmlElementEventArgs/VB/Form1.vb#2)]\"\n  syntax:\n    content: public System.Drawing.Point OffsetMousePosition { get; }\n    return:\n      type: System.Drawing.Point\n      description: The mouse position relative to the element that raises the event.\n  overload: System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.ReturnValue\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.ReturnValue\n  id: ReturnValue\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: ReturnValue\n  nameWithType: HtmlElementEventArgs.ReturnValue\n  fullName: HtmlElementEventArgs.ReturnValue\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the return value of the handled event.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]\\n [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]\"\n  syntax:\n    content: public bool ReturnValue { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the event has been handled; otherwise, `false`.'\n  overload: System.Windows.Forms.HtmlElementEventArgs.ReturnValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed\n  id: ShiftKeyPressed\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: ShiftKeyPressed\n  nameWithType: HtmlElementEventArgs.ShiftKeyPressed\n  fullName: HtmlElementEventArgs.ShiftKeyPressed\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Indicates whether the SHIFT key was pressed when this event occurred.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]\\n [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]\"\n  syntax:\n    content: public bool ShiftKeyPressed { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the SHIFT key was pressed; otherwise, `false`.'\n  overload: System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.HtmlElementEventArgs.ToElement\n  commentId: P:System.Windows.Forms.HtmlElementEventArgs.ToElement\n  id: ToElement\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  langs:\n  - csharp\n  name: ToElement\n  nameWithType: HtmlElementEventArgs.ToElement\n  fullName: HtmlElementEventArgs.ToElement\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the <xref href=\"System.Windows.Forms.HtmlElement\"></xref> toward which the user is moving the mouse pointer.\n  remarks: <xref:System.Windows.Forms.HtmlElementEventArgs.ToElement%2A> will have a valid value during mouse events such as <xref:System.Windows.Forms.HtmlElement.MouseEnter> and <xref:System.Windows.Forms.HtmlElement.MouseLeave>.\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlDocument> named `HtmlDocument1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.HtmlDocument.Click?displayProperty=fullName> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#422](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#422)]\\n [!code-vb[System.Windows.Forms.EventExamples#422](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#422)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.HtmlElement ToElement { get; }\n    return:\n      type: System.Windows.Forms.HtmlElement\n      description: The element toward which the mouse pointer is moving.\n  overload: System.Windows.Forms.HtmlElementEventArgs.ToElement*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: AltKeyPressed\n  nameWithType: HtmlElementEventArgs.AltKeyPressed\n  fullName: HtmlElementEventArgs.AltKeyPressed\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.HtmlElementEventArgs.BubbleEvent\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: BubbleEvent\n  nameWithType: HtmlElementEventArgs.BubbleEvent\n  fullName: HtmlElementEventArgs.BubbleEvent\n- uid: System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: ClientMousePosition\n  nameWithType: HtmlElementEventArgs.ClientMousePosition\n  fullName: HtmlElementEventArgs.ClientMousePosition\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: CtrlKeyPressed\n  nameWithType: HtmlElementEventArgs.CtrlKeyPressed\n  fullName: HtmlElementEventArgs.CtrlKeyPressed\n- uid: System.Windows.Forms.HtmlElementEventArgs.EventType\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: EventType\n  nameWithType: HtmlElementEventArgs.EventType\n  fullName: HtmlElementEventArgs.EventType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.HtmlElementEventArgs.FromElement\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: FromElement\n  nameWithType: HtmlElementEventArgs.FromElement\n  fullName: HtmlElementEventArgs.FromElement\n- uid: System.Windows.Forms.HtmlElement\n  parent: System.Windows.Forms\n  isExternal: false\n  name: HtmlElement\n  nameWithType: HtmlElement\n  fullName: System.Windows.Forms.HtmlElement\n- uid: System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: KeyPressedCode\n  nameWithType: HtmlElementEventArgs.KeyPressedCode\n  fullName: HtmlElementEventArgs.KeyPressedCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: MouseButtonsPressed\n  nameWithType: HtmlElementEventArgs.MouseButtonsPressed\n  fullName: HtmlElementEventArgs.MouseButtonsPressed\n- uid: System.Windows.Forms.MouseButtons\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MouseButtons\n  nameWithType: MouseButtons\n  fullName: System.Windows.Forms.MouseButtons\n- uid: System.Windows.Forms.HtmlElementEventArgs.MousePosition\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: MousePosition\n  nameWithType: HtmlElementEventArgs.MousePosition\n  fullName: HtmlElementEventArgs.MousePosition\n- uid: System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: OffsetMousePosition\n  nameWithType: HtmlElementEventArgs.OffsetMousePosition\n  fullName: HtmlElementEventArgs.OffsetMousePosition\n- uid: System.Windows.Forms.HtmlElementEventArgs.ReturnValue\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: ReturnValue\n  nameWithType: HtmlElementEventArgs.ReturnValue\n  fullName: HtmlElementEventArgs.ReturnValue\n- uid: System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: ShiftKeyPressed\n  nameWithType: HtmlElementEventArgs.ShiftKeyPressed\n  fullName: HtmlElementEventArgs.ShiftKeyPressed\n- uid: System.Windows.Forms.HtmlElementEventArgs.ToElement\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: ToElement\n  nameWithType: HtmlElementEventArgs.ToElement\n  fullName: HtmlElementEventArgs.ToElement\n- uid: System.Windows.Forms.HtmlElementEventArgs.AltKeyPressed*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: AltKeyPressed\n  nameWithType: HtmlElementEventArgs.AltKeyPressed\n  fullName: HtmlElementEventArgs.AltKeyPressed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.BubbleEvent*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: BubbleEvent\n  nameWithType: HtmlElementEventArgs.BubbleEvent\n  fullName: HtmlElementEventArgs.BubbleEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.ClientMousePosition*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: ClientMousePosition\n  nameWithType: HtmlElementEventArgs.ClientMousePosition\n  fullName: HtmlElementEventArgs.ClientMousePosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.CtrlKeyPressed*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: CtrlKeyPressed\n  nameWithType: HtmlElementEventArgs.CtrlKeyPressed\n  fullName: HtmlElementEventArgs.CtrlKeyPressed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.EventType*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: EventType\n  nameWithType: HtmlElementEventArgs.EventType\n  fullName: HtmlElementEventArgs.EventType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.FromElement*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: FromElement\n  nameWithType: HtmlElementEventArgs.FromElement\n  fullName: HtmlElementEventArgs.FromElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.KeyPressedCode*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: KeyPressedCode\n  nameWithType: HtmlElementEventArgs.KeyPressedCode\n  fullName: HtmlElementEventArgs.KeyPressedCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.MouseButtonsPressed*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: MouseButtonsPressed\n  nameWithType: HtmlElementEventArgs.MouseButtonsPressed\n  fullName: HtmlElementEventArgs.MouseButtonsPressed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.MousePosition*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: MousePosition\n  nameWithType: HtmlElementEventArgs.MousePosition\n  fullName: HtmlElementEventArgs.MousePosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.OffsetMousePosition*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: OffsetMousePosition\n  nameWithType: HtmlElementEventArgs.OffsetMousePosition\n  fullName: HtmlElementEventArgs.OffsetMousePosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.ReturnValue*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: ReturnValue\n  nameWithType: HtmlElementEventArgs.ReturnValue\n  fullName: HtmlElementEventArgs.ReturnValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.ShiftKeyPressed*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: ShiftKeyPressed\n  nameWithType: HtmlElementEventArgs.ShiftKeyPressed\n  fullName: HtmlElementEventArgs.ShiftKeyPressed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Windows.Forms.HtmlElementEventArgs.ToElement*\n  parent: System.Windows.Forms.HtmlElementEventArgs\n  isExternal: false\n  name: ToElement\n  nameWithType: HtmlElementEventArgs.ToElement\n  fullName: HtmlElementEventArgs.ToElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/HtmlElementEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}