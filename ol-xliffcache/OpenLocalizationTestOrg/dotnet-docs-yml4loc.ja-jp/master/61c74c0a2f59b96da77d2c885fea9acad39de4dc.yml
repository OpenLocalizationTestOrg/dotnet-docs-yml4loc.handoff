### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BoundField
  commentId: T:System.Web.UI.WebControls.BoundField
  id: BoundField
  children:
  - System.Web.UI.WebControls.BoundField.#ctor
  - System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  - System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.BoundField.CreateField
  - System.Web.UI.WebControls.BoundField.DataField
  - System.Web.UI.WebControls.BoundField.DataFormatString
  - System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  - System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  - System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.HeaderText
  - System.Web.UI.WebControls.BoundField.HtmlEncode
  - System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  - System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.BoundField.NullDisplayText
  - System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BoundField.ReadOnly
  - System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  - System.Web.UI.WebControls.BoundField.ThisExpression
  - System.Web.UI.WebControls.BoundField.ValidateRequestMode
  - System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  langs:
  - csharp
  name: BoundField
  nameWithType: BoundField
  fullName: System.Web.UI.WebControls.BoundField
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Represents a field that is displayed as text in a data-bound control.
  remarks: "The <xref:System.Web.UI.WebControls.BoundField> class is used by data-bound controls (such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>) to display the value of a field as text. The <xref:System.Web.UI.WebControls.BoundField> object is displayed differently depending on the data-bound control in which it is used. For example, the <xref:System.Web.UI.WebControls.GridView> control displays a <xref:System.Web.UI.WebControls.BoundField> object as a column, while the <xref:System.Web.UI.WebControls.DetailsView> control displays it as a row.  \n  \n To specify the field to display in a <xref:System.Web.UI.WebControls.BoundField> object, set the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to the field's name. The field's value can be HTML-encoded before it is displayed by setting the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `true`. You can apply a custom formatting string to the field's value by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property. When the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property is `true`, the encoded string value of the field is used in the custom format string. By default, the formatting string is applied to field values only when the data-bound control is in read-only mode. To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`. If a field's value is null, you can display a custom caption by setting the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property. The <xref:System.Web.UI.WebControls.BoundField> object can also automatically convert empty string (\"\") field values to null values by setting the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`.  \n  \n You can hide a <xref:System.Web.UI.WebControls.BoundField> object in a data-bound control by setting the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property to `false`. To prevent the value of a field from being modified in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to `true`. In data-bound controls that support inserting records (such as the <xref:System.Web.UI.WebControls.DetailsView> control), you can hide a <xref:System.Web.UI.WebControls.BoundField> object by setting the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property to `false`. This is commonly done when you want to hide an automatically generated key field in insert mode.  \n  \n You can customize the header and footer sections of a <xref:System.Web.UI.WebControls.BoundField> object. To display a caption in the header or footer sections, set the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> or <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> properties, respectively. Instead of displaying text in the header section, you can display an image by setting the <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> property. The header section can be hidden in the <xref:System.Web.UI.WebControls.BoundField> object by setting the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property to `false`.  \n  \n> [!NOTE]\n>  Some data-bound controls (such as the <xref:System.Web.UI.WebControls.GridView> control) can show or hide only the entire header section of the control. These data-bound controls do not support the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property for an individual bound field. To show or hide the entire header section of a data-bound control (if available), use the control's `ShowHeader` property.  \n  \n You also can customize the appearance of the <xref:System.Web.UI.WebControls.BoundField> object (font color, background color, and so on) by setting the style properties for the different parts of the field. The following table lists the different style properties.  \n  \n|Style property|Description|  \n|--------------------|-----------------|  \n|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|The style settings for the child Web server controls of the <xref:System.Web.UI.WebControls.BoundField> object.|  \n|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|The style settings for the footer section of the <xref:System.Web.UI.WebControls.BoundField> object.|  \n|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|The style settings for the header section of the <xref:System.Web.UI.WebControls.BoundField> object.|  \n|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|The style settings for the data items in the <xref:System.Web.UI.WebControls.BoundField> object.|"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.BoundField> object to display the values of a field in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  -->"
  syntax:
    content: 'public class BoundField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  derivedClasses:
  - System.Web.UI.WebControls.AutoGeneratedField
  - System.Web.UI.WebControls.CheckBoxField
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.#ctor
  commentId: M:System.Web.UI.WebControls.BoundField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: BoundField.BoundField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.BoundField"></xref> class.
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.BoundField> class. This constructor is commonly used when adding fields to a dynamically created data-bound control.  \n  \n To dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a data-bound control, create a new <xref:System.Web.UI.WebControls.BoundField> object, set its properties, and then add it to the data-bound control's field collection. For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.  \n  \n> [!NOTE]\n>  Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate. Statically declaring all of your fields reduces the size of the view state for the parent data-bound control."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  -->"
  syntax:
    content: public BoundField ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  commentId: P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: BoundField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether the formatting string specified by the <xref href="System.Web.UI.WebControls.BoundField.DataFormatString"></xref> property is applied to field values when the data-bound control that contains the <xref href="System.Web.UI.WebControls.BoundField"></xref> object is in edit mode.
  remarks: "Data-bound controls (such as <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, and <xref:System.Web.UI.WebControls.GridView>) have different display modes that allow the user to read, edit, or insert records. By default, the formatting string specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode. To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`.  \n  \n> [!NOTE]\n>  A <xref:System.Web.UI.WebControls.BoundField> object does not automatically remove the formatting when the field is updated in the data source. If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to apply the formatting string to field values while a <xref:System.Web.UI.WebControls.GridView> control is in edit mode. The formatting is then programmatically removed before the value is updated in the data source.  \n  \n <!-- TODO: review snippet reference [!code-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  -->"
  syntax:
    content: public virtual bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: '`true` to apply the formatting string to field values in edit mode; otherwise, `false`. The default is `false`.'
  overload: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  commentId: P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: BoundField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.
  remarks: "Sometimes the user might enter an empty string for a field value when updating or inserting records. Use the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to null when the data field is updated in the data source.  \n  \n> [!NOTE]\n>  By default, a <xref:System.Web.UI.WebControls.BoundField> object displays null values as empty strings. To display a different value, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to specify that an empty string (\"\") field value should automatically be converted to null.  \n  \n <!-- TODO: review snippet reference [!code-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  -->"
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: '`true` to automatically convert empty string values to null values; otherwise, the `false`. The default is `true`.'
  overload: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  commentId: M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: BoundField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Copies the properties of the current <xref href="System.Web.UI.WebControls.BoundField"></xref> object to the specified <xref href="System.Web.UI.WebControls.DataControlField"></xref> object.
  remarks: The <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.DataControlField> object created by the method.
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: The <xref href="System.Web.UI.WebControls.DataControlField"></xref> to copy the properties of the current <xref href="System.Web.UI.WebControls.BoundField"></xref> to.
  overload: System.Web.UI.WebControls.BoundField.CopyProperties*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.CreateField
  commentId: M:System.Web.UI.WebControls.BoundField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: BoundField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Creates an empty <xref href="System.Web.UI.WebControls.BoundField"></xref> object.
  remarks: The <xref:System.Web.UI.WebControls.BoundField.CreateField%2A> method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> method to create an empty <xref:System.Web.UI.WebControls.BoundField> object to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to.
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: An empty <xref href="System.Web.UI.WebControls.BoundField"></xref>.
  overload: System.Web.UI.WebControls.BoundField.CreateField*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.DataField
  commentId: P:System.Web.UI.WebControls.BoundField.DataField
  id: DataField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataField
  nameWithType: BoundField.DataField
  fullName: BoundField.DataField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the name of the data field to bind to the <xref href="System.Web.UI.WebControls.BoundField"></xref> object.
  remarks: "Use the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to specify the name of the data field to bind to the <xref:System.Web.UI.WebControls.BoundField> object. The values of the specified field are displayed in the <xref:System.Web.UI.WebControls.BoundField> object as text. You can optionally format the displayed text by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.  \n  \n> [!NOTE]\n>  If a field's value is null, an empty string (\"\") is displayed for the value by default. To specify an alternate caption, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to specify which field to display in a <xref:System.Web.UI.WebControls.BoundField> field column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public virtual string DataField { get; set; }
    return:
      type: System.String
      description: The name of the data field to bind to the <xref href="System.Web.UI.WebControls.BoundField"></xref>. The default is an empty string (""), which indicates that this property is not set.
  overload: System.Web.UI.WebControls.BoundField.DataField*
  exceptions: []
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  commentId: P:System.Web.UI.WebControls.BoundField.DataFormatString
  id: DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: BoundField.DataFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the string that specifies the display format for the value of the field.
  remarks: "Use the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property to specify a custom display format for the values that are displayed in the <xref:System.Web.UI.WebControls.BoundField> object. If the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is not set, the field's value is displayed without any special formatting.  \n  \n> [!NOTE]\n>  In versions of ASP.NET earlier than 3.5, you must set the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `false` in order to format fields that are not string data types. Otherwise, the field value is converted to a string by the default conversion method before the format string that is stored in the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is applied.  \n  \n By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.UI.WebControls.BoundField> object is in read-only mode. To apply the formatting string to field values while in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`.  \n  \n The formatting string can be any literal string and usually includes a placeholder for the field's value. For example, in the formatting string `Item Value: {0}`, the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.UI.WebControls.BoundField> object. The rest of the formatting string is displayed as literal text.  \n  \n If the formatting string does not include a placeholder, only the formatting string itself is included in the final display text (the field's value from the data source is not included). If the placeholder is a 0 (zero) enclosed in curly braces as shown in the preceding example, the field value is converted to a string by the default method. You can append to the zero a string that specifies how the field value should be formatted. For example, the placeholder `{0:C}` for a numeric field specifies that value of the field should be converted to a currency format.  \n  \n Formatting is applied by using the <xref:System.String.Format%2A> method. The number that follows the left curly brace is part of the syntax used by that method and indicates which one of a series of values the placeholder should use. Because there is only one field value in each cell, the number that follows the left curly brace can only be set to 0.  \n  \n The following table lists the standard format characters for numeric fields. These format characters are not case-sensitive, except for `X`, which displays hexadecimal characters in the case that is specified. You can append a number to most format characters in order to specify how many significant digits or decimal places you want to display.  \n  \n> [!NOTE]\n>  In most cases, formatting depends on the server's culture setting. The examples are for a culture setting of `en-US`.  \n  \n|Format character|Description|Example|  \n|----------------------|-----------------|-------------|  \n|`C` or `c`|Displays numeric values in currency format. You can specify the number of decimal places.|Format: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Format: `{0:C3}`<br /><br /> 123.456  -> $123.456|  \n|`D` or `d`|Displays integer values in decimal format. You can specify the number of digits. (Although the type is referred to as \"decimal\", the numbers are formatted as integers.)|Format: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Format: `{0:D6}`<br /><br /> 1234  -> 001234|  \n|`E` or `e`|Displays numeric values in scientific (exponential) format. You can specify the number of decimal places.|Format: `{0:E}`<br /><br /> 1052.0329112756 -> 1.052033E+003<br /><br /> Format: `{0:E2}`<br /><br /> -1052.0329112756 -> -1.05e+003|  \n|`F` or `f`|Displays numeric values in fixed format. You can specify the number of decimal places.|Format: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Format: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  \n|`G` or `g`|Displays numeric values in general format (the most compact of either fixed-point or scientific notation). You can specify the number of significant digits.|Format: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Format: `{0:G2}`<br /><br /> -123.456 -> -120|  \n|`N` or `n`|Displays numeric values in number format (including group separators and optional negative sign). You can specify the number of decimal places.|Format: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Format: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  \n|`P` or `p`|Displays numeric values in percent format. You can specify the number of decimal places.|Format: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Format: `{0:P1}`<br /><br /> .5 -> 50.0%|  \n|`R` or `r`|Displays <xref:System.Single>, <xref:System.Double>, or `BigInteger` values in round-trip format.|Format: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  \n|`X` or `x`|Displays integer values in hexadecimal format. You can specify the number of digits.|Format: `{0:X}`<br /><br /> 255 -> FF<br /><br /> Format: `{0:x4}`<br /><br /> 255  -> 00ff|  \n  \n For more information and for examples that show formatting for other culture values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). You can also create custom numeric format strings. For more information, see [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n The following table lists format characters for <xref:System.DateTime> fields. Most of these formatting specifications result in a different output depending on culture settings. The examples are for a <xref:System.DateTime> value of 6/15/2009 1:45:30 PM with a culture setting of `en-US`.  \n  \n|Format character|Description|Example|  \n|----------------------|-----------------|-------------|  \n|`d`|Short date pattern.|Format: `{0:d}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009|  \n|`D`|Long date pattern.|Format: `{0:D}`<br /><br /> 6/15/2009 1:45:30 PM ->Monday, June 15, 2009|  \n|`f`|Full date/time pattern (short time).|Format: `{0:f}`<br /><br /> 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45 PM|  \n|`F`|Full date/time pattern (long time).|Format: `{0:F}`<br /><br /> 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45:30 PM|  \n|`g`|General date/time pattern (short time).|Format: `{0:g}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009 1:45 PM|  \n|`G`|General date/time pattern (long time).|Format: `{0:G}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009 1:45:30 PM|  \n|`M` or `m`|Month/day pattern.|Format: `{0:M}`<br /><br /> 6/15/2009 1:45:30 PM -> June 15|  \n|`O` or `o`|Round-trip date/time pattern.|Format: `{0:o}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|  \n|`R` or `r`|RFC1123 pattern (for information, see <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName>).|Format: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  \n|`s`|Sortable date/time pattern.|Format: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  \n|`t`|Short time pattern.|Format: `{0:t}`<br /><br /> 6/15/2009 1:45:30 PM -> 1:45 PM|  \n|`T`|Long time pattern.|Format: `{0:T}`<br /><br /> 6/15/2009 1:45:30 PM -> 1:45:30 PM|  \n|`u`|Universal sortable date/time pattern.|Format: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  \n|`U`|Universal full date/time pattern.|Format: `{0:U}`<br /><br /> 6/15/2009 1:45:30 PM -> Monday, June 15, 2009 8:45:30 PM|  \n|`Y` or `y`|Year month pattern.|Format: `{0:Y}`<br /><br /> 6/15/2009 1:45:30 PM -> June, 2009|  \n  \n For more information and for examples that show formatting for other culture values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md). You can also create custom date and time format strings. For more information, see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191889).  \n  \n The following example shows how to use the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property to specify a custom display format for the values of a field.  \n  \n  \n  \n The following example shows one row of the output that is produced by this example.  \n  \n|ProductID|Name|ProductNumber|ListPrice|Weight|ModifiedDate|  \n|---------------|----------|-------------------|---------------|------------|------------------|  \n|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|"
  syntax:
    content: public virtual string DataFormatString { get; set; }
    return:
      type: System.String
      description: A formatting string that specifies the display format for the value of the field. The default is an empty string (""), which indicates that no special formatting is applied to the field value.
  overload: System.Web.UI.WebControls.BoundField.DataFormatString*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  commentId: M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary, DataControlFieldCell, DataControlRowState, Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary, DataControlFieldCell, DataControlRowState, Boolean)
  fullName: BoundField.ExtractValuesFromCell(IOrderedDictionary, DataControlFieldCell, DataControlRowState, Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Fills the specified <xref href="System.Collections.IDictionary"></xref> object with the values from the specified <xref href="System.Web.UI.WebControls.TableCell"></xref> object.
  remarks: "The <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> method is provided as a convenient way to retrieve the values of the fields from the specified <xref:System.Web.UI.WebControls.TableCell> object in a <xref:System.Web.UI.WebControls.BoundField> object.  \n  \n> [!NOTE]\n>  This method is used primarily by control developers.  \n  \n This method does not have a return value. Instead, the field values are returned by reference through the <xref:System.Collections.IDictionary?displayProperty=fullName> object passed in for the `dictionary` parameter. After the method has been called, iterate through the <xref:System.Collections.IDictionary?displayProperty=fullName> object to access the field values.  \n  \n> [!NOTE]\n>  If the <xref:System.Web.UI.WebControls.TableCell> object contains read-only field values, you must pass in `true` for the `includeReadOnly` parameter to include those values."
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: A <xref href="System.Collections.IDictionary"></xref> used to store the values of the specified cell.
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: The <xref href="System.Web.UI.WebControls.TableCell"></xref> that contains the values to retrieve.
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: One of the <xref href="System.Web.UI.WebControls.DataControlRowState"></xref> values.
    - id: includeReadOnly
      type: System.Boolean
      description: '`true` to include the values of read-only fields; otherwise, `false`.'
  overload: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  commentId: M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  id: FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: FormatDataValue(Object, Boolean)
  nameWithType: BoundField.FormatDataValue(Object, Boolean)
  fullName: BoundField.FormatDataValue(Object, Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Formats the specified field value for a cell in the <xref href="System.Web.UI.WebControls.BoundField"></xref> object.
  remarks: "The <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> method is a helper method used to transform a field value to the format specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property. If a field value is null, the value of the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property is returned.  \n  \n> [!NOTE]\n>  This method is used primarily by control developers."
  syntax:
    content: protected virtual string FormatDataValue (object dataValue, bool encode);
    parameters:
    - id: dataValue
      type: System.Object
      description: The field value to format.
    - id: encode
      type: System.Boolean
      description: '`true` to encode the value; otherwise, `false`.'
    return:
      type: System.String
      description: The field value converted to the format specified by <xref href="System.Web.UI.WebControls.BoundField.DataFormatString"></xref>.
  overload: System.Web.UI.WebControls.BoundField.FormatDataValue*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  commentId: M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  id: GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: BoundField.GetDesignTimeValue()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Retrieves the value used for a field's value when rendering the <xref href="System.Web.UI.WebControls.BoundField"></xref> object in a designer.
  remarks: "The <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> method is a helper method used to determine what value to display for a field when rendering the <xref:System.Web.UI.WebControls.BoundField> object in a designer. If real data cannot be retrieved from the data source at design time, the value returned by this method is displayed instead.  \n  \n> [!NOTE]\n>  This method is used primarily by control developers."
  syntax:
    content: protected virtual object GetDesignTimeValue ();
    parameters: []
    return:
      type: System.Object
      description: The value to display in the designer as the field's value.
  overload: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  commentId: M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  id: GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: BoundField.GetValue(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Retrieves the value of the field bound to the <xref href="System.Web.UI.WebControls.BoundField"></xref> object.
  remarks: "The <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> method is a helper method used to determine the value of a field. If the <xref:System.Web.UI.WebControls.BoundField> object is being displayed in a designer and the field value cannot be determined at design time, the value returned from the <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> method is returned instead of the actual field value.  \n  \n> [!NOTE]\n>  This method is used primarily by control developers."
  syntax:
    content: protected virtual object GetValue (System.Web.UI.Control controlContainer);
    parameters:
    - id: controlContainer
      type: System.Web.UI.Control
      description: The container for the field value.
    return:
      type: System.Object
      description: The value of the field bound to the <xref href="System.Web.UI.WebControls.BoundField"></xref>.
  overload: System.Web.UI.WebControls.BoundField.GetValue*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The container specified by the <code>controlContainer</code> parameter is `null`.  \n  \n \\- or -  \n  \n The container specified by the <code>controlContainer</code> parameter does not have a data item.  \n  \n \\- or -  \n  \n The data field was not found."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  commentId: P:System.Web.UI.WebControls.BoundField.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: BoundField.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the text that is displayed in the header of a data control.
  remarks: Use the <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> property to identify a field in a data control with a friendly name. The most common application of the <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> property is to provide meaningful column names to data-bound fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: The text displayed in the header of a data control. The default value is an empty string ("").
  overload: System.Web.UI.WebControls.BoundField.HeaderText*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  commentId: P:System.Web.UI.WebControls.BoundField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: BoundField.HtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether field values are HTML-encoded before they are displayed in a <xref href="System.Web.UI.WebControls.BoundField"></xref> object.
  remarks: "Use the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to specify whether field values are HTML-encoded to their respective string representations before they are displayed in a <xref:System.Web.UI.WebControls.BoundField> object. For example, if this property is `true`, a string value of \"\\<script>\" would be rendered as \"&lt;script&gt;\". If this property is `false`, the string would be rendered unchanged.  \n  \n> [!NOTE]\n>  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed. This property should be enabled whenever possible."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to prevent field values from being HTML-encoded before being displayed in a <xref:System.Web.UI.WebControls.BoundField> object.  \n  \n <!-- TODO: review snippet reference [!code-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  -->"
  syntax:
    content: public virtual bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: '`true` if field values are HTML-encoded before they are displayed in a <xref href="System.Web.UI.WebControls.BoundField"></xref> object; otherwise, `false`. The default is `true`.'
  overload: System.Web.UI.WebControls.BoundField.HtmlEncode*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  commentId: P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  id: HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: BoundField.HtmlEncodeFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value that indicates whether text that is created by applying the <xref href="System.Web.UI.WebControls.BoundField.DataFormatString"></xref> property to the <xref href="System.Web.UI.WebControls.BoundField"></xref> value should be HTML encoded when it is displayed.
  remarks: "HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed. HTML encoding is also useful when you want to display HTML code in the browser, such as displaying the string \"\\<br/>\" instead of inserting a line break (`<br/>` element) in the page.  \n  \n> [!NOTE]\n>  This property is new in ASP.NET 3.5. Setting this property to `false` restores the default behavior of the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property in versions of ASP.NET earlier than 3.5. For more information, see the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property."
  syntax:
    content: public virtual bool HtmlEncodeFormatString { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the text should be HTML-encoded; otherwise, `false`. The default is `true`.'
  overload: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  commentId: M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: Initialize(Boolean, Control)
  nameWithType: BoundField.Initialize(Boolean, Control)
  fullName: BoundField.Initialize(Boolean, Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Initializes the <xref href="System.Web.UI.WebControls.BoundField"></xref> object.
  remarks: "The <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> method is called by the data control with which the <xref:System.Web.UI.WebControls.BoundField> object is associated to perform basic object initialization for instances of the field, before the field is ever added to a rows collection. Data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView> call the <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> method in their `CreateChildControls` methods before other methods such as `CreateRow` are called to create specific rows with data.  \n  \n Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to perform basic initialization for a <xref:System.Web.UI.WebControls.BoundField> object. Implement this method if your <xref:System.Web.UI.WebControls.BoundField>-derived type requires any object initialization before it populates <xref:System.Web.UI.WebControls.TableCell> objects with data or controls in the <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method."
  syntax:
    content: public override bool Initialize (bool enableSorting, System.Web.UI.Control control);
    parameters:
    - id: enableSorting
      type: System.Boolean
      description: '`true` if sorting is supported; otherwise, `false`.'
    - id: control
      type: System.Web.UI.Control
      description: The data control that owns the <xref href="System.Web.UI.WebControls.BoundField"></xref>.
    return:
      type: System.Boolean
      description: '`false` in all cases.'
  overload: System.Web.UI.WebControls.BoundField.Initialize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  commentId: M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell, DataControlCellType, DataControlRowState, Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell, DataControlCellType, DataControlRowState, Int32)
  fullName: BoundField.InitializeCell(DataControlFieldCell, DataControlCellType, DataControlRowState, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Initializes the specified <xref href="System.Web.UI.WebControls.TableCell"></xref> object to the specified row state.
  remarks: "The <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method is implemented by <xref:System.Web.UI.WebControls.BoundField>-derived types to add text and controls to a <xref:System.Web.UI.WebControls.TableCell> object of a data control that uses tables to display a user interface (UI). These data controls create the complete table structure row-by-row when the control's `CreateChildControls` method is called. The <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method is called by the `InitializeRow` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>.  \n  \n Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to initialize the cells of the table structure with data or controls. Implement this method when you are writing a <xref:System.Web.UI.WebControls.BoundField>-derived class."
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: The <xref href="System.Web.UI.WebControls.TableCell"></xref> to initialize.
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: One of the <xref href="System.Web.UI.WebControls.DataControlCellType"></xref> values.
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: One of the <xref href="System.Web.UI.WebControls.DataControlRowState"></xref> values.
    - id: rowIndex
      type: System.Int32
      description: The zero-based index of the row.
  overload: System.Web.UI.WebControls.BoundField.InitializeCell*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  commentId: M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  id: InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeDataCell(DataControlFieldCell, DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell, DataControlRowState)
  fullName: BoundField.InitializeDataCell(DataControlFieldCell, DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Initializes the specified <xref href="System.Web.UI.WebControls.TableCell"></xref> object to the specified row state.
  remarks: The <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> method is a helper method used to initialize a cell in the <xref:System.Web.UI.WebControls.BoundField> object.
  syntax:
    content: protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: The <xref href="System.Web.UI.WebControls.TableCell"></xref> to initialize.
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: One of the <xref href="System.Web.UI.WebControls.DataControlRowState"></xref> values.
  overload: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  commentId: M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: BoundField.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Restores the previously stored view-state information for this field.
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: Represents the control state to be restored.
  overload: System.Web.UI.WebControls.BoundField.LoadViewState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  commentId: P:System.Web.UI.WebControls.BoundField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: BoundField.NullDisplayText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the caption displayed for a field when the field's value is null.
  remarks: "Sometimes a field's value is stored as null in the data source. You can specify a custom caption to display for fields that have a null value by setting the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property. If this property is not set, null field values are displayed as empty strings (\"\"). When a record is being updated or inserted in a data-bound control, if the user enters the value specified by this property (other than an empty string) for a field in a data-bound control, that value is automatically converted to null in the data source.  \n  \n> [!NOTE]\n>  To convert an empty string field value to a null value, set the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property to specify a custom caption to display for null field values.  \n  \n <!-- TODO: review snippet reference [!code-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  -->"
  syntax:
    content: public virtual string NullDisplayText { get; set; }
    return:
      type: System.String
      description: The caption displayed for a field when the field's value is null. The default is an empty string (""), which indicates that this property is not set.
  overload: System.Web.UI.WebControls.BoundField.NullDisplayText*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  commentId: M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  id: OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: OnDataBindField(Object, EventArgs)
  nameWithType: BoundField.OnDataBindField(Object, EventArgs)
  fullName: BoundField.OnDataBindField(Object, EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Binds the value of a field to the <xref href="System.Web.UI.WebControls.BoundField"></xref> object.
  remarks: The <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> method is a helper method used to bind the value of a field in the data source to a corresponding cell in the <xref:System.Web.UI.WebControls.BoundField> object.
  syntax:
    content: protected virtual void OnDataBindField (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: The source of the event.
    - id: e
      type: System.EventArgs
      description: An <xref href="System.EventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.BoundField.OnDataBindField*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: The control to which the field value is bound is not a <xref href="System.Web.UI.WebControls.TextBox"></xref> or a <xref href="System.Web.UI.WebControls.TableCell"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  commentId: P:System.Web.UI.WebControls.BoundField.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: BoundField.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether the value of the field can be modified in edit mode.
  remarks: "Use the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to prevent the values displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified. When a data-bound control is in edit mode, fields that are read-only are displayed as plain text, without any editing controls.  \n  \n> [!NOTE]\n>  The <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property applies only to edit mode. To prevent fields from showing up in insert mode, use the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to prevent the values of the key field displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified in edit mode.  \n  \n <!-- TODO: review snippet reference [!code-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  -->"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: '`true` to prevent the value of the field from being modified in edit mode; otherwise, `false`. The default is `false`.'
  overload: System.Web.UI.WebControls.BoundField.ReadOnly*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  commentId: P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  id: SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: BoundField.SupportsHtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets a value indicating whether HTML encoding is supported by a <xref href="System.Web.UI.WebControls.BoundField"></xref> object.
  remarks: The <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> property is a helper property used by the <xref:System.Web.UI.WebControls.BoundField> class and derived classes to determine whether HTML encoding is supported by the class.
  syntax:
    content: protected virtual bool SupportsHtmlEncode { get; }
    return:
      type: System.Boolean
      description: Always returns `true` to indicate that HTML encoding is supported by a <xref href="System.Web.UI.WebControls.BoundField"></xref>.
  overload: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  commentId: F:System.Web.UI.WebControls.BoundField.ThisExpression
  id: ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: BoundField.ThisExpression
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Represents the "this" expression.
  remarks: "This field is used to indicate that the <xref:System.Web.UI.WebControls.BoundField> object should bind against the data source itself, rather than a field of the data source. In this case, the object's `ToString` value will be displayed in the field.  \n  \n This field is used primarily by control developers."
  syntax:
    content: public static readonly string ThisExpression;
    return:
      type: System.String
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  commentId: P:System.Web.UI.WebControls.BoundField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: BoundField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value that determines whether the control validates client input or not.
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: A value that determines whether the control validates client input or not. The default is <xref href="System.Web.UI.ValidateRequestMode.Inherit"></xref>.
  overload: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  commentId: M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: BoundField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Determines whether the controls contained in a <xref href="System.Web.UI.WebControls.BoundField"></xref> object support callbacks.
  remarks: "The <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> method is a helper method used to determine whether the controls contained in a <xref:System.Web.UI.WebControls.BoundField> object support callbacks. This method has been implemented as an empty method (a method that does not contain any code) to indicate that callbacks are supported.  \n  \n> [!NOTE]\n>  This method is used primarily by control developers."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.BoundField.#ctor
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: BoundField.BoundField()
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: BoundField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: BoundField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.BoundField.CreateField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: BoundField.CreateField()
- uid: System.Web.UI.WebControls.BoundField.DataField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
  fullName: BoundField.DataField
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary, DataControlFieldCell, DataControlRowState, Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary, DataControlFieldCell, DataControlRowState, Boolean)
  fullName: BoundField.ExtractValuesFromCell(IOrderedDictionary, DataControlFieldCell, DataControlRowState, Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue(Object, Boolean)
  nameWithType: BoundField.FormatDataValue(Object, Boolean)
  fullName: BoundField.FormatDataValue(Object, Boolean)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: BoundField.GetDesignTimeValue()
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: BoundField.GetValue(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize(Boolean, Control)
  nameWithType: BoundField.Initialize(Boolean, Control)
  fullName: BoundField.Initialize(Boolean, Control)
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell(DataControlFieldCell, DataControlCellType, DataControlRowState, Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell, DataControlCellType, DataControlRowState, Int32)
  fullName: BoundField.InitializeCell(DataControlFieldCell, DataControlCellType, DataControlRowState, Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell(DataControlFieldCell, DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell, DataControlRowState)
  fullName: BoundField.InitializeDataCell(DataControlFieldCell, DataControlRowState)
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: BoundField.LoadViewState(Object)
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField(Object, EventArgs)
  nameWithType: BoundField.OnDataBindField(Object, EventArgs)
  fullName: BoundField.OnDataBindField(Object, EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: BoundField.ThisExpression
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: BoundField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: BoundField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.BoundField.#ctor*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField
  nameWithType: BoundField.BoundField
  fullName: BoundField.BoundField
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: BoundField.ApplyFormatInEditMode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: BoundField.ConvertEmptyStringToNull
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.CopyProperties*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties
  nameWithType: BoundField.CopyProperties
  fullName: BoundField.CopyProperties
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.CreateField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField
  nameWithType: BoundField.CreateField
  fullName: BoundField.CreateField
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.DataField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
  fullName: BoundField.DataField
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.DataFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: BoundField.DataFormatString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: BoundField.ExtractValuesFromCell
  fullName: BoundField.ExtractValuesFromCell
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue
  nameWithType: BoundField.FormatDataValue
  fullName: BoundField.FormatDataValue
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue
  nameWithType: BoundField.GetDesignTimeValue
  fullName: BoundField.GetDesignTimeValue
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.GetValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue
  nameWithType: BoundField.GetValue
  fullName: BoundField.GetValue
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.HeaderText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: BoundField.HeaderText
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: BoundField.HtmlEncode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: BoundField.HtmlEncodeFormatString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.Initialize*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize
  nameWithType: BoundField.Initialize
  fullName: BoundField.Initialize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.InitializeCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell
  nameWithType: BoundField.InitializeCell
  fullName: BoundField.InitializeCell
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell
  nameWithType: BoundField.InitializeDataCell
  fullName: BoundField.InitializeDataCell
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.LoadViewState*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState
  nameWithType: BoundField.LoadViewState
  fullName: BoundField.LoadViewState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: BoundField.NullDisplayText
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField
  nameWithType: BoundField.OnDataBindField
  fullName: BoundField.OnDataBindField
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.ReadOnly*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: BoundField.ReadOnly
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: BoundField.SupportsHtmlEncode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: BoundField.ValidateRequestMode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: BoundField.ValidateSupportsCallback
  fullName: BoundField.ValidateSupportsCallback
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/BoundField.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Web.UI.WebControls.DataControlField.ToString
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ToString()
  nameWithType: DataControlField.ToString()
  fullName: DataControlField.ToString()
- uid: System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: AccessibleHeaderText
  nameWithType: DataControlField.AccessibleHeaderText
  fullName: DataControlField.AccessibleHeaderText
- uid: System.Web.UI.WebControls.DataControlField.CloneField
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: CloneField()
  nameWithType: DataControlField.CloneField()
  fullName: DataControlField.CloneField()
- uid: System.Web.UI.WebControls.DataControlField.Control
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Control
  nameWithType: DataControlField.Control
  fullName: DataControlField.Control
- uid: System.Web.UI.WebControls.DataControlField.ControlStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ControlStyle
  nameWithType: DataControlField.ControlStyle
  fullName: DataControlField.ControlStyle
- uid: System.Web.UI.WebControls.DataControlField.DesignMode
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: DesignMode
  nameWithType: DataControlField.DesignMode
  fullName: DataControlField.DesignMode
- uid: System.Web.UI.WebControls.DataControlField.FooterStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: FooterStyle
  nameWithType: DataControlField.FooterStyle
  fullName: DataControlField.FooterStyle
- uid: System.Web.UI.WebControls.DataControlField.FooterText
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: FooterText
  nameWithType: DataControlField.FooterText
  fullName: DataControlField.FooterText
- uid: System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderImageUrl
  nameWithType: DataControlField.HeaderImageUrl
  fullName: DataControlField.HeaderImageUrl
- uid: System.Web.UI.WebControls.DataControlField.HeaderStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: HeaderStyle
  nameWithType: DataControlField.HeaderStyle
  fullName: DataControlField.HeaderStyle
- uid: System.Web.UI.WebControls.DataControlField.InsertVisible
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: InsertVisible
  nameWithType: DataControlField.InsertVisible
  fullName: DataControlField.InsertVisible
- uid: System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: IsTrackingViewState
  nameWithType: DataControlField.IsTrackingViewState
  fullName: DataControlField.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataControlField.ItemStyle
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ItemStyle
  nameWithType: DataControlField.ItemStyle
  fullName: DataControlField.ItemStyle
- uid: System.Web.UI.WebControls.DataControlField.OnFieldChanged
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: OnFieldChanged()
  nameWithType: DataControlField.OnFieldChanged()
  fullName: DataControlField.OnFieldChanged()
- uid: System.Web.UI.WebControls.DataControlField.SaveViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: SaveViewState()
  nameWithType: DataControlField.SaveViewState()
  fullName: DataControlField.SaveViewState()
- uid: System.Web.UI.WebControls.DataControlField.ShowHeader
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ShowHeader
  nameWithType: DataControlField.ShowHeader
  fullName: DataControlField.ShowHeader
- uid: System.Web.UI.WebControls.DataControlField.SortExpression
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: SortExpression
  nameWithType: DataControlField.SortExpression
  fullName: DataControlField.SortExpression
- uid: System.Web.UI.WebControls.DataControlField.TrackViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: TrackViewState()
  nameWithType: DataControlField.TrackViewState()
  fullName: DataControlField.TrackViewState()
- uid: System.Web.UI.WebControls.DataControlField.ViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: ViewState
  nameWithType: DataControlField.ViewState
  fullName: DataControlField.ViewState
- uid: System.Web.UI.WebControls.DataControlField.Visible
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: Visible
  nameWithType: DataControlField.Visible
  fullName: DataControlField.Visible
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: IDataSourceViewSchemaAccessor.DataSourceViewSchema
  nameWithType: DataControlField.IDataSourceViewSchemaAccessor.DataSourceViewSchema
  fullName: DataControlField.IDataSourceViewSchemaAccessor.DataSourceViewSchema
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: IStateManager.IsTrackingViewState
  nameWithType: DataControlField.IStateManager.IsTrackingViewState
  fullName: DataControlField.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: IStateManager.LoadViewState(Object)
  nameWithType: DataControlField.IStateManager.LoadViewState(Object)
  fullName: DataControlField.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: IStateManager.SaveViewState()
  nameWithType: DataControlField.IStateManager.SaveViewState()
  fullName: DataControlField.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: IStateManager.TrackViewState()
  nameWithType: DataControlField.IStateManager.TrackViewState()
  fullName: DataControlField.IStateManager.TrackViewState()
