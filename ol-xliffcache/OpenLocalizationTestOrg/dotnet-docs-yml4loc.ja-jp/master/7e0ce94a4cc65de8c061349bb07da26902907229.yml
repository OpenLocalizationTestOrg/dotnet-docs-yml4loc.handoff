### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.NTAccount
  commentId: T:System.Security.Principal.NTAccount
  id: NTAccount
  children:
  - System.Security.Principal.NTAccount.#ctor(System.String)
  - System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  - System.Security.Principal.NTAccount.Equals(System.Object)
  - System.Security.Principal.NTAccount.GetHashCode
  - System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  - System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  - System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  - System.Security.Principal.NTAccount.ToString
  - System.Security.Principal.NTAccount.Translate(System.Type)
  - System.Security.Principal.NTAccount.Value
  langs:
  - csharp
  name: NTAccount
  nameWithType: NTAccount
  fullName: System.Security.Principal.NTAccount
  type: Class
  assemblies:
  - System.Security.Principal.Windows
  - mscorlib
  namespace: System.Security.Principal
  summary: Represents a user or group account.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class NTAccount : System.Security.Principal.IdentityReference
  inheritance:
  - System.Object
  - System.Security.Principal.IdentityReference
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.NTAccount.#ctor(System.String)
  commentId: M:System.Security.Principal.NTAccount.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: NTAccount(String)
  nameWithType: NTAccount.NTAccount(String)
  fullName: NTAccount.NTAccount(String)
  type: Constructor
  assemblies:
  - System.Security.Principal.Windows
  - mscorlib
  namespace: System.Security.Principal
  summary: Initializes a new instance of the <xref href="System.Security.Principal.NTAccount"></xref> class by using the specified name.
  remarks: The specified name is not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.
  syntax:
    content: public NTAccount (string name);
    parameters:
    - id: name
      type: System.String
      description: The name used to create the <xref href="System.Security.Principal.NTAccount"></xref> object. This parameter cannot be `null` or an empty string.
  overload: System.Security.Principal.NTAccount.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>name</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code> is an empty string.  \n  \n -or-  \n  \n <code>name</code> is too long."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  commentId: M:System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: NTAccount(String, String)
  nameWithType: NTAccount.NTAccount(String, String)
  fullName: NTAccount.NTAccount(String, String)
  type: Constructor
  assemblies:
  - System.Security.Principal.Windows
  - mscorlib
  namespace: System.Security.Principal
  summary: Initializes a new instance of the <xref href="System.Security.Principal.NTAccount"></xref> class by using the specified domain name and account name.
  remarks: The specified domain and account names are not required to correspond to an existing account or group, but translation into other <xref:System.Security.Principal.IdentityReference>-derived types will not be possible unless the account or group does exist.
  syntax:
    content: public NTAccount (string domainName, string accountName);
    parameters:
    - id: domainName
      type: System.String
      description: The name of the domain. This parameter can be `null` or an empty string. Domain names that are null values are treated like an empty string.
    - id: accountName
      type: System.String
      description: The name of the account. This parameter cannot be `null` or an empty string.
  overload: System.Security.Principal.NTAccount.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>accountName</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>accountName</code> is an empty string.  \n  \n -or-  \n  \n <code>accountName</code> is too long.  \n  \n -or-  \n  \n <code>domainName</code> is too long."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.NTAccount.Equals(System.Object)
  commentId: M:System.Security.Principal.NTAccount.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: NTAccount.Equals(Object)
  fullName: NTAccount.Equals(Object)
  type: Method
  assemblies:
  - System.Security.Principal.Windows
  - mscorlib
  namespace: System.Security.Principal
  summary: Returns a value that indicates whether this <xref href="System.Security.Principal.NTAccount"></xref> object is equal to a specified object.
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: An object to compare with this <xref href="System.Security.Principal.NTAccount"></xref> object, or `null`.
    return:
      type: System.Boolean
      description: '`true` if <code>o</code> is an object with the same underlying type and value as this <xref href="System.Security.Principal.NTAccount"></xref> object; otherwise, `false`.'
  overload: System.Security.Principal.NTAccount.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.NTAccount.GetHashCode
  commentId: M:System.Security.Principal.NTAccount.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: NTAccount.GetHashCode()
  fullName: NTAccount.GetHashCode()
  type: Method
  assemblies:
  - System.Security.Principal.Windows
  - mscorlib
  namespace: System.Security.Principal
  summary: Serves as a hash function for the current <xref href="System.Security.Principal.NTAccount"></xref> object. The <xref href="System.Security.Principal.NTAccount.GetHashCode"></xref> method is suitable for hashing algorithms and data structures like a hash table.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash value for the current <xref href="System.Security.Principal.NTAccount"></xref> object.
  overload: System.Security.Principal.NTAccount.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  commentId: M:System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: IsValidTargetType(Type)
  nameWithType: NTAccount.IsValidTargetType(Type)
  fullName: NTAccount.IsValidTargetType(Type)
  type: Method
  assemblies:
  - System.Security.Principal.Windows
  - mscorlib
  namespace: System.Security.Principal
  summary: Returns a value that indicates whether the specified type is a valid translation type for the <xref href="System.Security.Principal.NTAccount"></xref> class.
  syntax:
    content: public override bool IsValidTargetType (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.NTAccount\"></xref>. The following target types are valid:  \n  \n \\- <xref href=\"System.Security.Principal.NTAccount\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>"
    return:
      type: System.Boolean
      description: '`true` if <code>targetType</code> is a valid translation type for the <xref href="System.Security.Principal.NTAccount"></xref> class; otherwise `false`.'
  overload: System.Security.Principal.NTAccount.IsValidTargetType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  commentId: M:System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  id: op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: op_Equality(NTAccount, NTAccount)
  nameWithType: NTAccount.op_Equality(NTAccount, NTAccount)
  fullName: NTAccount.op_Equality(NTAccount, NTAccount)
  type: Operator
  assemblies:
  - System.Security.Principal.Windows
  - mscorlib
  namespace: System.Security.Principal
  summary: Compares two <xref href="System.Security.Principal.NTAccount"></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <xref href="System.Security.Principal.NTAccount.Value"></xref> property or if they are both `null`.
  syntax:
    content: public static bool op_Equality (System.Security.Principal.NTAccount left, System.Security.Principal.NTAccount right);
    parameters:
    - id: left
      type: System.Security.Principal.NTAccount
      description: The left operand to use for the equality comparison. This parameter can be `null`.
    - id: right
      type: System.Security.Principal.NTAccount
      description: The right operand to use for the equality comparison. This parameter can be `null`.
    return:
      type: System.Boolean
      description: '`true` if <code>left</code> and <code>right</code> are equal; otherwise `false`.'
  overload: System.Security.Principal.NTAccount.op_Equality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  commentId: M:System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  id: op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: op_Inequality(NTAccount, NTAccount)
  nameWithType: NTAccount.op_Inequality(NTAccount, NTAccount)
  fullName: NTAccount.op_Inequality(NTAccount, NTAccount)
  type: Operator
  assemblies:
  - System.Security.Principal.Windows
  - mscorlib
  namespace: System.Security.Principal
  summary: Compares two <xref href="System.Security.Principal.NTAccount"></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref href="System.Security.Principal.NTAccount.Value"></xref> property or if one of the objects is `null` and the other is not.
  syntax:
    content: public static bool op_Inequality (System.Security.Principal.NTAccount left, System.Security.Principal.NTAccount right);
    parameters:
    - id: left
      type: System.Security.Principal.NTAccount
      description: The left operand to use for the inequality comparison. This parameter can be `null`.
    - id: right
      type: System.Security.Principal.NTAccount
      description: The right operand to use for the inequality comparison. This parameter can be `null`.
    return:
      type: System.Boolean
      description: '`true` if <code>left</code> and <code>right</code> are not equal; otherwise `false`.'
  overload: System.Security.Principal.NTAccount.op_Inequality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.NTAccount.ToString
  commentId: M:System.Security.Principal.NTAccount.ToString
  id: ToString
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: ToString()
  nameWithType: NTAccount.ToString()
  fullName: NTAccount.ToString()
  type: Method
  assemblies:
  - System.Security.Principal.Windows
  - mscorlib
  namespace: System.Security.Principal
  summary: Returns the account name, in *Domain* **\\** *Account* format, for the account represented by the <xref href="System.Security.Principal.NTAccount"></xref> object.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The account name, in *Domain* **\\** *Account* format.
  overload: System.Security.Principal.NTAccount.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.NTAccount.Translate(System.Type)
  commentId: M:System.Security.Principal.NTAccount.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: Translate(Type)
  nameWithType: NTAccount.Translate(Type)
  fullName: NTAccount.Translate(Type)
  type: Method
  assemblies:
  - System.Security.Principal.Windows
  - mscorlib
  namespace: System.Security.Principal
  summary: Translates the account name represented by the <xref href="System.Security.Principal.NTAccount"></xref> object into another <xref href="System.Security.Principal.IdentityReference"></xref>-derived type.
  syntax:
    content: public override System.Security.Principal.IdentityReference Translate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: The target type for the conversion from <xref href="System.Security.Principal.NTAccount"></xref>. The target type must be a type that is considered valid by the <xref href="System.Security.Principal.NTAccount.IsValidTargetType(System.Type)"></xref> method.
    return:
      type: System.Security.Principal.IdentityReference
      description: The converted identity.
  overload: System.Security.Principal.NTAccount.Translate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>targetType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>targetType</code> is not an <xref href="System.Security.Principal.IdentityReference"></xref> type.
  - type: System.Security.Principal.IdentityNotMappedException
    commentId: T:System.Security.Principal.IdentityNotMappedException
    description: Some or all identity references could not be translated.
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "The source account name is too long.  \n  \n -or-  \n  \n A Win32 error code was returned."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Principal.NTAccount.Value
  commentId: P:System.Security.Principal.NTAccount.Value
  id: Value
  parent: System.Security.Principal.NTAccount
  langs:
  - csharp
  name: Value
  nameWithType: NTAccount.Value
  fullName: NTAccount.Value
  type: Property
  assemblies:
  - System.Security.Principal.Windows
  - mscorlib
  namespace: System.Security.Principal
  summary: Returns an uppercase string representation of this <xref href="System.Security.Principal.NTAccount"></xref> object.
  syntax:
    content: public override string Value { get; }
    return:
      type: System.String
      description: The uppercase string representation of this <xref href="System.Security.Principal.NTAccount"></xref> object.
  overload: System.Security.Principal.NTAccount.Value*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.Principal.IdentityNotMappedException
  parent: System.Security.Principal
  isExternal: false
  name: IdentityNotMappedException
  nameWithType: IdentityNotMappedException
  fullName: System.Security.Principal.IdentityNotMappedException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Security.Principal.NTAccount.#ctor(System.String)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: NTAccount(String)
  nameWithType: NTAccount.NTAccount(String)
  fullName: NTAccount.NTAccount(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: NTAccount(String, String)
  nameWithType: NTAccount.NTAccount(String, String)
  fullName: NTAccount.NTAccount(String, String)
- uid: System.Security.Principal.NTAccount.Equals(System.Object)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Equals(Object)
  nameWithType: NTAccount.Equals(Object)
  fullName: NTAccount.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Principal.NTAccount.GetHashCode
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: GetHashCode()
  nameWithType: NTAccount.GetHashCode()
  fullName: NTAccount.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: IsValidTargetType(Type)
  nameWithType: NTAccount.IsValidTargetType(Type)
  fullName: NTAccount.IsValidTargetType(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: op_Equality(NTAccount, NTAccount)
  nameWithType: NTAccount.op_Equality(NTAccount, NTAccount)
  fullName: NTAccount.op_Equality(NTAccount, NTAccount)
- uid: System.Security.Principal.NTAccount
  parent: System.Security.Principal
  isExternal: false
  name: NTAccount
  nameWithType: NTAccount
  fullName: System.Security.Principal.NTAccount
- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: op_Inequality(NTAccount, NTAccount)
  nameWithType: NTAccount.op_Inequality(NTAccount, NTAccount)
  fullName: NTAccount.op_Inequality(NTAccount, NTAccount)
- uid: System.Security.Principal.NTAccount.ToString
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: ToString()
  nameWithType: NTAccount.ToString()
  fullName: NTAccount.ToString()
- uid: System.Security.Principal.NTAccount.Translate(System.Type)
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Translate(Type)
  nameWithType: NTAccount.Translate(Type)
  fullName: NTAccount.Translate(Type)
- uid: System.Security.Principal.NTAccount.Value
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Value
  nameWithType: NTAccount.Value
  fullName: NTAccount.Value
- uid: System.Security.Principal.NTAccount.#ctor*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: NTAccount
  nameWithType: NTAccount.NTAccount
  fullName: NTAccount.NTAccount
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
- uid: System.Security.Principal.NTAccount.Equals*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Equals
  nameWithType: NTAccount.Equals
  fullName: NTAccount.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
- uid: System.Security.Principal.NTAccount.GetHashCode*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: GetHashCode
  nameWithType: NTAccount.GetHashCode
  fullName: NTAccount.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
- uid: System.Security.Principal.NTAccount.IsValidTargetType*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: IsValidTargetType
  nameWithType: NTAccount.IsValidTargetType
  fullName: NTAccount.IsValidTargetType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
- uid: System.Security.Principal.NTAccount.op_Equality*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: op_Equality
  nameWithType: NTAccount.op_Equality
  fullName: NTAccount.op_Equality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
- uid: System.Security.Principal.NTAccount.op_Inequality*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: op_Inequality
  nameWithType: NTAccount.op_Inequality
  fullName: NTAccount.op_Inequality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
- uid: System.Security.Principal.NTAccount.ToString*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: ToString
  nameWithType: NTAccount.ToString
  fullName: NTAccount.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
- uid: System.Security.Principal.NTAccount.Translate*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Translate
  nameWithType: NTAccount.Translate
  fullName: NTAccount.Translate
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
- uid: System.Security.Principal.NTAccount.Value*
  parent: System.Security.Principal.NTAccount
  isExternal: false
  name: Value
  nameWithType: NTAccount.Value
  fullName: NTAccount.Value
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Principal/NTAccount.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Equality(IdentityReference, IdentityReference)
  nameWithType: IdentityReference.op_Equality(IdentityReference, IdentityReference)
  fullName: IdentityReference.op_Equality(IdentityReference, IdentityReference)
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Inequality(IdentityReference, IdentityReference)
  nameWithType: IdentityReference.op_Inequality(IdentityReference, IdentityReference)
  fullName: IdentityReference.op_Inequality(IdentityReference, IdentityReference)
