{"nodes":[{"content":"Exposes the <xref href=\"System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)\"></xref> method, which allows <xref href=\"System.Web.UI.DataVisualization.Charting.Series\"></xref> data to be custom filtered.","nodes":[{"pos":[0,337],"content":"Exposes the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)\"&gt;&lt;/xref&gt;</ph> method, which allows <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.Series\"&gt;&lt;/xref&gt;</ph> data to be custom filtered.","source":"Exposes the <xref href=\"System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)\"></xref> method, which allows <xref href=\"System.Web.UI.DataVisualization.Charting.Series\"></xref> data to be custom filtered."}],"pos":[678,1016],"yaml":true},{"content":"The <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> interface exposes the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method, which takes a specific data point within a series and returns a `Boolean` value that determines whether that data point will be filtered.  \n  \n To perform custom filtering:  \n  \n-   Derive a new or existing class from this interface.  \n  \n-   Override the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method to provide the custom filtering logic.  \n  \n-   To initiate the filtering operation, call one of the `Filter` methods in the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> object as its first parameter.  \n  \n For sample source code, see the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method.","nodes":[{"pos":[0,320],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter&gt;</ph> interface exposes the <ph id=\"ph2\">&lt;xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A&gt;</ph> method, which takes a specific data point within a series and returns a <ph id=\"ph3\">`Boolean`</ph> value that determines whether that data point will be filtered.","source":"The <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> interface exposes the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method, which takes a specific data point within a series and returns a `Boolean` value that determines whether that data point will be filtered."},{"pos":[327,355],"content":"To perform custom filtering:","nodes":[{"content":"To perform custom filtering:","pos":[0,28]}]},{"pos":[365,416],"content":"Derive a new or existing class from this interface.","nodes":[{"content":"Derive a new or existing class from this interface.","pos":[0,51]}]},{"pos":[426,568],"content":"Override the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method to provide the custom filtering logic.","nodes":[{"content":"Override the <ph id=\"ph1\">&lt;xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A&gt;</ph> method to provide the custom filtering logic.","pos":[0,142],"source":"Override the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method to provide the custom filtering logic."}]},{"pos":[578,834],"content":"To initiate the filtering operation, call one of the <ph id=\"ph1\">`Filter`</ph> methods in the <ph id=\"ph2\">&lt;xref:System.Web.UI.DataVisualization.Charting.DataManipulator&gt;</ph> class that takes an <ph id=\"ph3\">&lt;xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter&gt;</ph> object as its first parameter.","source":"To initiate the filtering operation, call one of the `Filter` methods in the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> object as its first parameter."},{"pos":[841,964],"content":"For sample source code, see the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method.","nodes":[{"content":"For sample source code, see the <ph id=\"ph1\">&lt;xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A&gt;</ph> method.","pos":[0,123],"source":"For sample source code, see the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method."}]}],"pos":[1027,2004],"yaml":true,"extradata":"MT"},{"content":"Determines whether a particular data point in the series will be filtered.","nodes":[{"pos":[0,74],"content":"Determines whether a particular data point in the series will be filtered.","nodes":[{"content":"Determines whether a particular data point in the series will be filtered.","pos":[0,74]}]}],"pos":[3558,3633],"yaml":true},{"content":"This method should be called for each data point in a series, and returns a `Boolean` value indicating whether a data point should be filtered.  \n  \n To provide custom filtering, derive a new or existing class from the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> interface and then implement this method. Provide custom criteria matching logic, then return `true` or `false` to mark the data points to be filtered. After this method has been implemented, use one of the `Filter` method definitions in the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> object as a parameter to perform the filtering.  \n  \n Filtered points, by default, are removed from a series. They can also be displayed as empty points by setting the value of the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> property to `true`.  \n  \n Filtered points can also be marked as filtered if they do not match filtering criteria, as determined by the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A>value.","nodes":[{"pos":[0,143],"content":"This method should be called for each data point in a series, and returns a <ph id=\"ph1\">`Boolean`</ph> value indicating whether a data point should be filtered.","source":"This method should be called for each data point in a series, and returns a `Boolean` value indicating whether a data point should be filtered."},{"pos":[150,722],"content":"To provide custom filtering, derive a new or existing class from the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> interface and then implement this method. Provide custom criteria matching logic, then return `true` or `false` to mark the data points to be filtered. After this method has been implemented, use one of the `Filter` method definitions in the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> object as a parameter to perform the filtering.","nodes":[{"content":"To provide custom filtering, derive a new or existing class from the <ph id=\"ph1\">&lt;xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter&gt;</ph> interface and then implement this method.","pos":[0,175],"source":"To provide custom filtering, derive a new or existing class from the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> interface and then implement this method."},{"content":"Provide custom criteria matching logic, then return <ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph> to mark the data points to be filtered.","pos":[176,285],"source":" Provide custom criteria matching logic, then return `true` or `false` to mark the data points to be filtered."},{"content":"After this method has been implemented, use one of the <ph id=\"ph1\">`Filter`</ph> method definitions in the <ph id=\"ph2\">&lt;xref:System.Web.UI.DataVisualization.Charting.DataManipulator&gt;</ph> class that takes an <ph id=\"ph3\">&lt;xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter&gt;</ph> object as a parameter to perform the filtering.","pos":[286,572],"source":" After this method has been implemented, use one of the `Filter` method definitions in the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> object as a parameter to perform the filtering."}]},{"pos":[729,963],"content":"Filtered points, by default, are removed from a series. They can also be displayed as empty points by setting the value of the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> property to `true`.","nodes":[{"content":"Filtered points, by default, are removed from a series.","pos":[0,55]},{"content":"They can also be displayed as empty points by setting the value of the <ph id=\"ph1\">&lt;xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[56,234],"source":" They can also be displayed as empty points by setting the value of the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> property to `true`."}]},{"pos":[970,1171],"content":"Filtered points can also be marked as filtered if they do not match filtering criteria, as determined by the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A>value.","nodes":[{"content":"Filtered points can also be marked as filtered if they do not match filtering criteria, as determined by the <ph id=\"ph1\">&lt;xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A&gt;</ph>value.","pos":[0,201],"source":"Filtered points can also be marked as filtered if they do not match filtering criteria, as determined by the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A>value."}]}],"pos":[3644,4824],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.UI.DataVisualization.Charting.DataPoint\"></xref> object to be filtered.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.DataPoint\"&gt;&lt;/xref&gt;</ph> object to be filtered.","source":"The <xref href=\"System.Web.UI.DataVisualization.Charting.DataPoint\"></xref> object to be filtered."}],"pos":[5121,5220],"yaml":true},{"content":"The <xref href=\"System.Web.UI.DataVisualization.Charting.Series\"></xref> object that the data point belongs to.","nodes":[{"pos":[0,111],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.DataVisualization.Charting.Series\"&gt;&lt;/xref&gt;</ph> object that the data point belongs to.","source":"The <xref href=\"System.Web.UI.DataVisualization.Charting.Series\"></xref> object that the data point belongs to."}],"pos":[5316,5428],"yaml":true},{"content":"The index of the data point, which determines its position in the series.","nodes":[{"pos":[0,73],"content":"The index of the data point, which determines its position in the series.","nodes":[{"content":"The index of the data point, which determines its position in the series.","pos":[0,73]}]}],"pos":[5493,5567],"yaml":true},{"content":"`True` if the data point is removed, otherwise `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`True`</ph> if the data point is removed, otherwise <ph id=\"ph2\">`false`</ph>.","source":"`True` if the data point is removed, otherwise `false`."}],"pos":[5625,5683],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.DataVisualization.Charting.IDataPointFilter\n  commentId: T:System.Web.UI.DataVisualization.Charting.IDataPointFilter\n  id: IDataPointFilter\n  children:\n  - System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)\n  langs:\n  - csharp\n  name: IDataPointFilter\n  nameWithType: IDataPointFilter\n  fullName: System.Web.UI.DataVisualization.Charting.IDataPointFilter\n  type: Interface\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: Exposes the <xref href=\"System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)\"></xref> method, which allows <xref href=\"System.Web.UI.DataVisualization.Charting.Series\"></xref> data to be custom filtered.\n  remarks: \"The <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> interface exposes the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method, which takes a specific data point within a series and returns a `Boolean` value that determines whether that data point will be filtered.  \\n  \\n To perform custom filtering:  \\n  \\n-   Derive a new or existing class from this interface.  \\n  \\n-   Override the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method to provide the custom filtering logic.  \\n  \\n-   To initiate the filtering operation, call one of the `Filter` methods in the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> object as its first parameter.  \\n  \\n For sample source code, see the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method.\"\n  syntax:\n    content: public interface IDataPointFilter\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.DataVisualization.Charting/IDataPointFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: mblythe\n  manager: mblythe\n- uid: System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)\n  commentId: M:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)\n  id: FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)\n  parent: System.Web.UI.DataVisualization.Charting.IDataPointFilter\n  langs:\n  - csharp\n  name: FilterDataPoint(DataPoint, Series, Int32)\n  nameWithType: IDataPointFilter.FilterDataPoint(DataPoint, Series, Int32)\n  fullName: IDataPointFilter.FilterDataPoint(DataPoint, Series, Int32)\n  type: Method\n  assemblies:\n  - System.Web.DataVisualization\n  namespace: System.Web.UI.DataVisualization.Charting\n  summary: Determines whether a particular data point in the series will be filtered.\n  remarks: \"This method should be called for each data point in a series, and returns a `Boolean` value indicating whether a data point should be filtered.  \\n  \\n To provide custom filtering, derive a new or existing class from the <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> interface and then implement this method. Provide custom criteria matching logic, then return `true` or `false` to mark the data points to be filtered. After this method has been implemented, use one of the `Filter` method definitions in the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter> object as a parameter to perform the filtering.  \\n  \\n Filtered points, by default, are removed from a series. They can also be displayed as empty points by setting the value of the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> property to `true`.  \\n  \\n Filtered points can also be marked as filtered if they do not match filtering criteria, as determined by the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A>value.\"\n  syntax:\n    content: public bool FilterDataPoint (System.Web.UI.DataVisualization.Charting.DataPoint point, System.Web.UI.DataVisualization.Charting.Series series, int pointIndex);\n    parameters:\n    - id: point\n      type: System.Web.UI.DataVisualization.Charting.DataPoint\n      description: The <xref href=\"System.Web.UI.DataVisualization.Charting.DataPoint\"></xref> object to be filtered.\n    - id: series\n      type: System.Web.UI.DataVisualization.Charting.Series\n      description: The <xref href=\"System.Web.UI.DataVisualization.Charting.Series\"></xref> object that the data point belongs to.\n    - id: pointIndex\n      type: System.Int32\n      description: The index of the data point, which determines its position in the series.\n    return:\n      type: System.Boolean\n      description: '`True` if the data point is removed, otherwise `false`.'\n  overload: System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.DataVisualization.Charting/IDataPointFilter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: mblythe\n  manager: mblythe\nreferences:\n- uid: System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)\n  parent: System.Web.UI.DataVisualization.Charting.IDataPointFilter\n  isExternal: false\n  name: FilterDataPoint(DataPoint, Series, Int32)\n  nameWithType: IDataPointFilter.FilterDataPoint(DataPoint, Series, Int32)\n  fullName: IDataPointFilter.FilterDataPoint(DataPoint, Series, Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.DataVisualization.Charting.DataPoint\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: DataPoint\n  nameWithType: DataPoint\n  fullName: System.Web.UI.DataVisualization.Charting.DataPoint\n- uid: System.Web.UI.DataVisualization.Charting.Series\n  parent: System.Web.UI.DataVisualization.Charting\n  isExternal: false\n  name: Series\n  nameWithType: Series\n  fullName: System.Web.UI.DataVisualization.Charting.Series\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint*\n  parent: System.Web.UI.DataVisualization.Charting.IDataPointFilter\n  isExternal: false\n  name: FilterDataPoint\n  nameWithType: IDataPointFilter.FilterDataPoint\n  fullName: IDataPointFilter.FilterDataPoint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.DataVisualization.Charting/IDataPointFilter.xml\n"}