{"nodes":[{"content":"Retrieves a dynamic resource during compilation.","nodes":[{"pos":[0,48],"content":"Retrieves a dynamic resource during compilation.","nodes":[{"content":"Retrieves a dynamic resource during compilation.","pos":[0,48]}]}],"pos":[663,712],"yaml":true},{"content":"ASP.NET automatically evaluates expressions during page parsing using the <xref:System.Web.Configuration.ExpressionBuilder> class. The <xref:System.Web.Configuration.ExpressionBuilderCollection> collection, which is made up of the `expressionBuilders` elements contained in the `compilation` section of the configuration. The <xref:System.Web.Configuration.ExpressionBuilder> contains specific values in key/value pairs.  \n  \n A value is retrieved by including an expression of the form  \n  \n `<%$ ExpressionPrefix: ExpressionKey %>`  \n  \n within the page. The `ExpressionPrefix` maps the type of expression to be retrieved as either a common expression-builder type (that is, <xref:System.Web.Compilation.AppSettingsExpressionBuilder>) or a custom expression builder type. The `ExpressionKey` specifies the key used to reference the returned value.  \n  \n If you choose to implement a common expression-builder type, you must map the expression builder to the associated section name in the configuration. If you choose to implement a custom expression-builder type, you must map your expression builder to your custom expression-builder class, which must derive from the <xref:System.Web.Configuration.ExpressionBuilder> class.","nodes":[{"pos":[0,420],"content":"ASP.NET automatically evaluates expressions during page parsing using the <xref:System.Web.Configuration.ExpressionBuilder> class. The <xref:System.Web.Configuration.ExpressionBuilderCollection> collection, which is made up of the `expressionBuilders` elements contained in the `compilation` section of the configuration. The <xref:System.Web.Configuration.ExpressionBuilder> contains specific values in key/value pairs.","nodes":[{"content":"ASP.NET automatically evaluates expressions during page parsing using the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.ExpressionBuilder&gt;</ph> class.","pos":[0,130],"source":"ASP.NET automatically evaluates expressions during page parsing using the <xref:System.Web.Configuration.ExpressionBuilder> class."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.ExpressionBuilderCollection&gt;</ph> collection, which is made up of the <ph id=\"ph2\">`expressionBuilders`</ph> elements contained in the <ph id=\"ph3\">`compilation`</ph> section of the configuration.","pos":[131,321],"source":" The <xref:System.Web.Configuration.ExpressionBuilderCollection> collection, which is made up of the `expressionBuilders` elements contained in the `compilation` section of the configuration."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.ExpressionBuilder&gt;</ph> contains specific values in key/value pairs.","pos":[322,420],"source":" The <xref:System.Web.Configuration.ExpressionBuilder> contains specific values in key/value pairs."}]},{"pos":[427,486],"content":"A value is retrieved by including an expression of the form","nodes":[{"content":"A value is retrieved by including an expression of the form","pos":[0,59]}]},{"pos":[540,849],"content":"within the page. The `ExpressionPrefix` maps the type of expression to be retrieved as either a common expression-builder type (that is, <xref:System.Web.Compilation.AppSettingsExpressionBuilder>) or a custom expression builder type. The `ExpressionKey` specifies the key used to reference the returned value.","nodes":[{"content":"within the page.","pos":[0,16]},{"content":"The <ph id=\"ph1\">`ExpressionPrefix`</ph> maps the type of expression to be retrieved as either a common expression-builder type (that is, <ph id=\"ph2\">&lt;xref:System.Web.Compilation.AppSettingsExpressionBuilder&gt;</ph>) or a custom expression builder type.","pos":[17,233],"source":" The `ExpressionPrefix` maps the type of expression to be retrieved as either a common expression-builder type (that is, <xref:System.Web.Compilation.AppSettingsExpressionBuilder>) or a custom expression builder type."},{"content":"The <ph id=\"ph1\">`ExpressionKey`</ph> specifies the key used to reference the returned value.","pos":[234,309],"source":" The `ExpressionKey` specifies the key used to reference the returned value."}]},{"pos":[856,1228],"content":"If you choose to implement a common expression-builder type, you must map the expression builder to the associated section name in the configuration. If you choose to implement a custom expression-builder type, you must map your expression builder to your custom expression-builder class, which must derive from the <xref:System.Web.Configuration.ExpressionBuilder> class.","nodes":[{"content":"If you choose to implement a common expression-builder type, you must map the expression builder to the associated section name in the configuration. If you choose to implement a custom expression-builder type, you must map your expression builder to your custom expression-builder class, which must derive from the <xref:System.Web.Configuration.ExpressionBuilder> class.","pos":[0,372],"nodes":[{"content":"If you choose to implement a common expression-builder type, you must map the expression builder to the associated section name in the configuration.","pos":[0,149]},{"content":"If you choose to implement a custom expression-builder type, you must map your expression builder to your custom expression-builder class, which must derive from the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.ExpressionBuilder&gt;</ph> class.","pos":[150,372],"source":" If you choose to implement a custom expression-builder type, you must map your expression builder to your custom expression-builder class, which must derive from the <xref:System.Web.Configuration.ExpressionBuilder> class."}]}]}],"pos":[723,1962],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Configuration.ExpressionBuilder\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.ExpressionBuilder\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.ExpressionBuilder\"></xref> class."}],"pos":[6174,6279],"yaml":true},{"content":"A string that identifies the type of expression to retrieve.","nodes":[{"pos":[0,60],"content":"A string that identifies the type of expression to retrieve.","nodes":[{"content":"A string that identifies the type of expression to retrieve.","pos":[0,60]}]}],"pos":[7157,7218],"yaml":true},{"content":"A string that specifies the expression type.","nodes":[{"pos":[0,44],"content":"A string that specifies the expression type.","nodes":[{"content":"A string that specifies the expression type.","pos":[0,44]}]}],"pos":[7281,7326],"yaml":true},{"content":"Gets or sets a string that identifies the type of expression to retrieve.","nodes":[{"pos":[0,73],"content":"Gets or sets a string that identifies the type of expression to retrieve.","nodes":[{"content":"Gets or sets a string that identifies the type of expression to retrieve.","pos":[0,73]}]}],"pos":[8384,8458],"yaml":true},{"content":"The <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A> maps the expression to the associated section name in the configuration for common expression types, or maps the expression to the custom expression class.","nodes":[{"pos":[0,229],"content":"The <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A> maps the expression to the associated section name in the configuration for common expression types, or maps the expression to the custom expression class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A&gt;</ph> maps the expression to the associated section name in the configuration for common expression types, or maps the expression to the custom expression class.","pos":[0,229],"source":"The <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A> maps the expression to the associated section name in the configuration for common expression types, or maps the expression to the custom expression class."}]}],"pos":[8469,8699],"yaml":true,"extradata":"MT"},{"content":"A string that identifies the type of expression to retrieve.","nodes":[{"pos":[0,60],"content":"A string that identifies the type of expression to retrieve.","nodes":[{"content":"A string that identifies the type of expression to retrieve.","pos":[0,60]}]}],"pos":[9042,9103],"yaml":true},{"content":"Gets or sets a string that specifies the expression type.","nodes":[{"pos":[0,57],"content":"Gets or sets a string that specifies the expression type.","nodes":[{"content":"Gets or sets a string that specifies the expression type.","pos":[0,57]}]}],"pos":[11385,11443],"yaml":true},{"content":"The <xref:System.Web.Configuration.ExpressionBuilder.Type%2A> specifies the type of object used to determine the value of the expression. The type can specify either a section within the configuration, or a custom class.","nodes":[{"pos":[0,220],"content":"The <xref:System.Web.Configuration.ExpressionBuilder.Type%2A> specifies the type of object used to determine the value of the expression. The type can specify either a section within the configuration, or a custom class.","nodes":[{"content":"The <xref:System.Web.Configuration.ExpressionBuilder.Type%2A> specifies the type of object used to determine the value of the expression. The type can specify either a section within the configuration, or a custom class.","pos":[0,220],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.ExpressionBuilder.Type%2A&gt;</ph> specifies the type of object used to determine the value of the expression.","pos":[0,137],"source":"The <xref:System.Web.Configuration.ExpressionBuilder.Type%2A> specifies the type of object used to determine the value of the expression."},{"content":"The type can specify either a section within the configuration, or a custom class.","pos":[138,220]}]}]}],"pos":[11454,11675],"yaml":true,"extradata":"MT"},{"content":"A string that specifies the expression type.","nodes":[{"pos":[0,44],"content":"A string that specifies the expression type.","nodes":[{"content":"A string that specifies the expression type.","pos":[0,44]}]}],"pos":[11982,12027],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.ExpressionBuilder\n  commentId: T:System.Web.Configuration.ExpressionBuilder\n  id: ExpressionBuilder\n  children:\n  - System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)\n  - System.Web.Configuration.ExpressionBuilder.ExpressionPrefix\n  - System.Web.Configuration.ExpressionBuilder.Properties\n  - System.Web.Configuration.ExpressionBuilder.Type\n  langs:\n  - csharp\n  name: ExpressionBuilder\n  nameWithType: ExpressionBuilder\n  fullName: System.Web.Configuration.ExpressionBuilder\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Retrieves a dynamic resource during compilation.\n  remarks: \"ASP.NET automatically evaluates expressions during page parsing using the <xref:System.Web.Configuration.ExpressionBuilder> class. The <xref:System.Web.Configuration.ExpressionBuilderCollection> collection, which is made up of the `expressionBuilders` elements contained in the `compilation` section of the configuration. The <xref:System.Web.Configuration.ExpressionBuilder> contains specific values in key/value pairs.  \\n  \\n A value is retrieved by including an expression of the form  \\n  \\n `<%$ ExpressionPrefix: ExpressionKey %>`  \\n  \\n within the page. The `ExpressionPrefix` maps the type of expression to be retrieved as either a common expression-builder type (that is, <xref:System.Web.Compilation.AppSettingsExpressionBuilder>) or a custom expression builder type. The `ExpressionKey` specifies the key used to reference the returned value.  \\n  \\n If you choose to implement a common expression-builder type, you must map the expression builder to the associated section name in the configuration. If you choose to implement a custom expression-builder type, you must map your expression builder to your custom expression-builder class, which must derive from the <xref:System.Web.Configuration.ExpressionBuilder> class.\"\n  syntax:\n    content: 'public sealed class ExpressionBuilder : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/ExpressionBuilder.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)\n  commentId: M:System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Web.Configuration.ExpressionBuilder\n  langs:\n  - csharp\n  name: ExpressionBuilder(String, String)\n  nameWithType: ExpressionBuilder.ExpressionBuilder(String, String)\n  fullName: ExpressionBuilder.ExpressionBuilder(String, String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.ExpressionBuilder\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to create an <xref:System.Web.Configuration.ExpressionBuilder> object. This code example is part of a larger example provided for the <xref:System.Web.Configuration.ExpressionBuilderCollection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.ExpressionBuilderCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ExpressionBuilderCollection/CS/ExpressionBuilderCollection.cs#2)]\\n [!code-vb[System.Web.Configuration.ExpressionBuilderCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ExpressionBuilderCollection/VB/ExpressionBuilderCollection.vb#2)]\"\n  syntax:\n    content: public ExpressionBuilder (string expressionPrefix, string theType);\n    parameters:\n    - id: expressionPrefix\n      type: System.String\n      description: A string that identifies the type of expression to retrieve.\n    - id: theType\n      type: System.String\n      description: A string that specifies the expression type.\n  overload: System.Web.Configuration.ExpressionBuilder.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/ExpressionBuilder.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix\n  commentId: P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix\n  id: ExpressionPrefix\n  parent: System.Web.Configuration.ExpressionBuilder\n  langs:\n  - csharp\n  name: ExpressionPrefix\n  nameWithType: ExpressionBuilder.ExpressionPrefix\n  fullName: ExpressionBuilder.ExpressionPrefix\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a string that identifies the type of expression to retrieve.\n  remarks: The <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A> maps the expression to the associated section name in the configuration for common expression types, or maps the expression to the custom expression class.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"expressionPrefix\", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)]\n\n      [System.Configuration.StringValidator(MinLength=1)]\n\n      public string ExpressionPrefix { get; set; }\n    return:\n      type: System.String\n      description: A string that identifies the type of expression to retrieve.\n  overload: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/ExpressionBuilder.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.ExpressionBuilder.Properties\n  commentId: P:System.Web.Configuration.ExpressionBuilder.Properties\n  id: Properties\n  parent: System.Web.Configuration.ExpressionBuilder\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: ExpressionBuilder.Properties\n  fullName: ExpressionBuilder.Properties\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.Web.Configuration.ExpressionBuilder.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/ExpressionBuilder.xml\n- uid: System.Web.Configuration.ExpressionBuilder.Type\n  commentId: P:System.Web.Configuration.ExpressionBuilder.Type\n  id: Type\n  parent: System.Web.Configuration.ExpressionBuilder\n  langs:\n  - csharp\n  name: Type\n  nameWithType: ExpressionBuilder.Type\n  fullName: ExpressionBuilder.Type\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets a string that specifies the expression type.\n  remarks: The <xref:System.Web.Configuration.ExpressionBuilder.Type%2A> specifies the type of object used to determine the value of the expression. The type can specify either a section within the configuration, or a custom class.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"type\", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=true)]\n\n      [System.Configuration.StringValidator(MinLength=1)]\n\n      public string Type { get; set; }\n    return:\n      type: System.String\n      description: A string that specifies the expression type.\n  overload: System.Web.Configuration.ExpressionBuilder.Type*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/ExpressionBuilder.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.Web.Configuration.ExpressionBuilder.#ctor(System.String,System.String)\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: ExpressionBuilder(String, String)\n  nameWithType: ExpressionBuilder.ExpressionBuilder(String, String)\n  fullName: ExpressionBuilder.ExpressionBuilder(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: ExpressionPrefix\n  nameWithType: ExpressionBuilder.ExpressionPrefix\n  fullName: ExpressionBuilder.ExpressionPrefix\n- uid: System.Web.Configuration.ExpressionBuilder.Properties\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: Properties\n  nameWithType: ExpressionBuilder.Properties\n  fullName: ExpressionBuilder.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Web.Configuration.ExpressionBuilder.Type\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: Type\n  nameWithType: ExpressionBuilder.Type\n  fullName: ExpressionBuilder.Type\n- uid: System.Web.Configuration.ExpressionBuilder.#ctor*\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: ExpressionBuilder\n  nameWithType: ExpressionBuilder.ExpressionBuilder\n  fullName: ExpressionBuilder.ExpressionBuilder\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/ExpressionBuilder.xml\n- uid: System.Web.Configuration.ExpressionBuilder.ExpressionPrefix*\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: ExpressionPrefix\n  nameWithType: ExpressionBuilder.ExpressionPrefix\n  fullName: ExpressionBuilder.ExpressionPrefix\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/ExpressionBuilder.xml\n- uid: System.Web.Configuration.ExpressionBuilder.Properties*\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: Properties\n  nameWithType: ExpressionBuilder.Properties\n  fullName: ExpressionBuilder.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/ExpressionBuilder.xml\n- uid: System.Web.Configuration.ExpressionBuilder.Type*\n  parent: System.Web.Configuration.ExpressionBuilder\n  isExternal: false\n  name: Type\n  nameWithType: ExpressionBuilder.Type\n  fullName: ExpressionBuilder.Type\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/ExpressionBuilder.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n"}