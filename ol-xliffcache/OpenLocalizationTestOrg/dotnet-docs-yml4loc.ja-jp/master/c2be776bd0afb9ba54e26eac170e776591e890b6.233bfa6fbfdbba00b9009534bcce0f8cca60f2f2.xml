{"nodes":[{"content":"The <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> class represents the weekly schedule for an Active Directory Domain Services replication.","nodes":[{"pos":[0,179],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"&gt;&lt;/xref&gt;</ph> class represents the weekly schedule for an Active Directory Domain Services replication.","source":"The <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> class represents the weekly schedule for an Active Directory Domain Services replication."}],"pos":[1818,1998],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> class.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> class."}],"pos":[3531,3658],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> class, using the specified <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> object.","nodes":[{"pos":[0,240],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"&gt;&lt;/xref&gt;</ph> class, using the specified <ph id=\"ph2\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> class, using the specified <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> object."}],"pos":[5232,5473],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> object that is copied to this object.","nodes":[{"pos":[0,125],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"&gt;&lt;/xref&gt;</ph> object that is copied to this object.","source":"A <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> object that is copied to this object."}],"pos":[5735,5861],"yaml":true},{"content":"<code>schedule</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;schedule&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>schedule</code> is `null`."}],"pos":[6061,6094],"yaml":true},{"content":"Gets or sets a three-dimensional array that indicates at what time during the week that the source is available for replication.","nodes":[{"pos":[0,128],"content":"Gets or sets a three-dimensional array that indicates at what time during the week that the source is available for replication.","nodes":[{"content":"Gets or sets a three-dimensional array that indicates at what time during the week that the source is available for replication.","pos":[0,128]}]}],"pos":[7194,7323],"yaml":true},{"content":"A three-dimensional array of <xref href=\"System.Boolean\"></xref> elements in which the element is `true` if the source is available for replication during that specific 15-minute interval. The element is `false` if the source is not available for replication.  \n  \n The array is in the form RawSchedule[<day-of-week>, <hour>, <15-minute interval>]. All of these values are zero-based and the week begins at 00:00 on Sunday morning, Coordinated Universal Time.  \n  \n The following are the valid values for the day-of-week.  \n  \n <table><thead><tr><th> Day-of-week value  \n  \n </th><th> Indicated day of the week.  \n  \n </th></tr></thead><tbody><tr><td> 0  \n  \n </td><td> Sunday  \n  \n </td></tr><tr><td> 1  \n  \n </td><td> Monday  \n  \n </td></tr><tr><td> 2  \n  \n </td><td> Tuesday  \n  \n </td></tr><tr><td> 3  \n  \n </td><td> Wednesday  \n  \n </td></tr><tr><td> 4  \n  \n </td><td> Thursday  \n  \n </td></tr><tr><td> 5  \n  \n </td><td> Friday  \n  \n </td></tr><tr><td> 6  \n  \n </td><td> Saturday  \n  \n </td></tr></tbody></table>  \n  \n The hour is zero-based and specified in 24-hour format. For example, 2 P.M. would be specified as 14. Valid values are 0-23.  \n  \n The 15-minute interval specifies the 15-minute block within the hour that the source is available for replication. The following table identifies the possible values for the 15-minute interval.  \n  \n <table><thead><tr><th> 15-minute interval  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> 0  \n  \n </td><td> The source is available for replication from 0 to 14 minutes after the hour.  \n  \n </td></tr><tr><td> 1  \n  \n </td><td> The source is available for replication from 15 to 29 minutes after the hour.  \n  \n </td></tr><tr><td> 2  \n  \n </td><td> The source is available for replication from 30 to 44 minutes after the hour.  \n  \n </td></tr><tr><td> 3  \n  \n </td><td> The source is available for replication from 45 to 59 minutes after the hour.  \n  \n </td></tr></tbody></table>  \n  \n The following C# example shows how to use this property to determine if the source is available for replication at 15:50 Coordinated Universal Time on Tuesday.  \n  \n```csharp  \nBoolean isAvailable = scheduleObject.RawSchedule[2, 15, 3];  \n```  \n  \n The following C# example shows how to use this property to calculate the 15-minute interval at runtime by dividing the minutes by 15.  \n  \n```csharp  \nBoolean isAvailable = scheduleObject.RawSchedule[2, 15, (Int32)50/15];  \n```","nodes":[{"pos":[0,259],"content":"A three-dimensional array of <xref href=\"System.Boolean\"></xref> elements in which the element is `true` if the source is available for replication during that specific 15-minute interval. The element is `false` if the source is not available for replication.","nodes":[{"content":"A three-dimensional array of <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> elements in which the element is <ph id=\"ph2\">`true`</ph> if the source is available for replication during that specific 15-minute interval.","pos":[0,188],"source":"A three-dimensional array of <xref href=\"System.Boolean\"></xref> elements in which the element is `true` if the source is available for replication during that specific 15-minute interval."},{"content":"The element is <ph id=\"ph1\">`false`</ph> if the source is not available for replication.","pos":[189,259],"source":" The element is `false` if the source is not available for replication."}]},{"pos":[266,459],"content":"The array is in the form RawSchedule[<day-of-week>, <hour>, <15-minute interval>]. All of these values are zero-based and the week begins at 00:00 on Sunday morning, Coordinated Universal Time.","nodes":[{"content":"The array is in the form RawSchedule[&lt;day-of-week&gt;, <ph id=\"ph1\">&lt;hour&gt;</ph>, &lt;15-minute interval&gt;].","pos":[0,82],"source":"The array is in the form RawSchedule[<day-of-week>, <hour>, <15-minute interval>]."},{"content":"All of these values are zero-based and the week begins at 00:00 on Sunday morning, Coordinated Universal Time.","pos":[83,193]}]},{"pos":[466,521],"content":"The following are the valid values for the day-of-week.","nodes":[{"content":"The following are the valid values for the day-of-week.","pos":[0,55]}]},{"pos":[528,1017],"content":"<table><thead><tr><th> Day-of-week value  \n  \n </th><th> Indicated day of the week.  \n  \n </th></tr></thead><tbody><tr><td> 0  \n  \n </td><td> Sunday  \n  \n </td></tr><tr><td> 1  \n  \n </td><td> Monday  \n  \n </td></tr><tr><td> 2  \n  \n </td><td> Tuesday  \n  \n </td></tr><tr><td> 3  \n  \n </td><td> Wednesday  \n  \n </td></tr><tr><td> 4  \n  \n </td><td> Thursday  \n  \n </td></tr><tr><td> 5  \n  \n </td><td> Friday  \n  \n </td></tr><tr><td> 6  \n  \n </td><td> Saturday  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Day-of-week value","pos":[23,45],"source":" Day-of-week value  \n  \n "},{"content":" Indicated day of the week.  \n  \n ","pos":[56,90],"nodes":[{"content":"Indicated day of the week.","pos":[1,27]}]},{"content":"0","pos":[124,130],"source":" 0  \n  \n "},{"content":"Sunday","pos":[142,153],"source":" Sunday  \n  \n "},{"content":"1","pos":[174,180],"source":" 1  \n  \n "},{"content":"Monday","pos":[192,203],"source":" Monday  \n  \n "},{"content":"2","pos":[224,230],"source":" 2  \n  \n "},{"content":"Tuesday","pos":[242,254],"source":" Tuesday  \n  \n "},{"content":"3","pos":[275,281],"source":" 3  \n  \n "},{"content":"Wednesday","pos":[293,307],"source":" Wednesday  \n  \n "},{"content":"4","pos":[328,334],"source":" 4  \n  \n "},{"content":"Thursday","pos":[346,359],"source":" Thursday  \n  \n "},{"content":"5","pos":[380,386],"source":" 5  \n  \n "},{"content":"Friday","pos":[398,409],"source":" Friday  \n  \n "},{"content":"6","pos":[430,436],"source":" 6  \n  \n "},{"content":"Saturday","pos":[448,461],"source":" Saturday  \n  \n "}]},{"pos":[1024,1148],"content":"The hour is zero-based and specified in 24-hour format. For example, 2 P.M. would be specified as 14. Valid values are 0-23.","nodes":[{"content":"The hour is zero-based and specified in 24-hour format. For example, 2 P.M. would be specified as 14. Valid values are 0-23.","pos":[0,124],"nodes":[{"content":"The hour is zero-based and specified in 24-hour format.","pos":[0,55]},{"content":"For example, 2 P.M.","pos":[56,75]},{"content":"would be specified as 14.","pos":[76,101]},{"content":"Valid values are 0-23.","pos":[102,124]}]}]},{"pos":[1155,1348],"content":"The 15-minute interval specifies the 15-minute block within the hour that the source is available for replication. The following table identifies the possible values for the 15-minute interval.","nodes":[{"content":"The 15-minute interval specifies the 15-minute block within the hour that the source is available for replication. The following table identifies the possible values for the 15-minute interval.","pos":[0,193],"nodes":[{"content":"The 15-minute interval specifies the 15-minute block within the hour that the source is available for replication.","pos":[0,114]},{"content":"The following table identifies the possible values for the 15-minute interval.","pos":[115,193]}]}]},{"pos":[1355,1955],"content":"<table><thead><tr><th> 15-minute interval  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> 0  \n  \n </td><td> The source is available for replication from 0 to 14 minutes after the hour.  \n  \n </td></tr><tr><td> 1  \n  \n </td><td> The source is available for replication from 15 to 29 minutes after the hour.  \n  \n </td></tr><tr><td> 2  \n  \n </td><td> The source is available for replication from 30 to 44 minutes after the hour.  \n  \n </td></tr><tr><td> 3  \n  \n </td><td> The source is available for replication from 45 to 59 minutes after the hour.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"15-minute interval","pos":[23,46],"source":" 15-minute interval  \n  \n "},{"content":"Description","pos":[58,74],"source":" Description  \n  \n "},{"content":"0","pos":[110,116],"source":" 0  \n  \n "},{"content":" The source is available for replication from 0 to 14 minutes after the hour.  \n  \n ","pos":[127,211],"nodes":[{"content":"The source is available for replication from 0 to 14 minutes after the hour.","pos":[1,77]}]},{"content":"1","pos":[230,236],"source":" 1  \n  \n "},{"content":" The source is available for replication from 15 to 29 minutes after the hour.  \n  \n ","pos":[247,332],"nodes":[{"content":"The source is available for replication from 15 to 29 minutes after the hour.","pos":[1,78]}]},{"content":"2","pos":[351,357],"source":" 2  \n  \n "},{"content":" The source is available for replication from 30 to 44 minutes after the hour.  \n  \n ","pos":[368,453],"nodes":[{"content":"The source is available for replication from 30 to 44 minutes after the hour.","pos":[1,78]}]},{"content":"3","pos":[472,478],"source":" 3  \n  \n "},{"content":" The source is available for replication from 45 to 59 minutes after the hour.  \n  \n ","pos":[489,574],"nodes":[{"content":"The source is available for replication from 45 to 59 minutes after the hour.","pos":[1,78]}]}]},{"pos":[1962,2121],"content":"The following C# example shows how to use this property to determine if the source is available for replication at 15:50 Coordinated Universal Time on Tuesday.","nodes":[{"content":"The following C# example shows how to use this property to determine if the source is available for replication at 15:50 Coordinated Universal Time on Tuesday.","pos":[0,159]}]},{"pos":[2211,2344],"content":"The following C# example shows how to use this property to calculate the 15-minute interval at runtime by dividing the minutes by 15.","nodes":[{"content":"The following C# example shows how to use this property to calculate the 15-minute interval at runtime by dividing the minutes by 15.","pos":[0,133]}]}],"pos":[7450,9969],"yaml":true},{"content":"Resets the entire schedule to unavailable.","nodes":[{"pos":[0,42],"content":"Resets the entire schedule to unavailable.","nodes":[{"content":"Resets the entire schedule to unavailable.","pos":[0,42]}]}],"pos":[11192,11235],"yaml":true},{"content":"Adds a range of times for every day of the week to the schedule.","nodes":[{"pos":[0,64],"content":"Adds a range of times for every day of the week to the schedule.","nodes":[{"content":"Adds a range of times for every day of the week to the schedule.","pos":[0,64]}]}],"pos":[13327,13392],"yaml":true},{"content":"All of the parameters in this method are inclusive.  \n  \n This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.","nodes":[{"pos":[0,51],"content":"All of the parameters in this method are inclusive.","nodes":[{"content":"All of the parameters in this method are inclusive.","pos":[0,51]}]},{"pos":[58,357],"content":"This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.","nodes":[{"content":"This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.","pos":[0,299],"nodes":[{"content":"This method is cumulative and does not remove any existing schedule information.","pos":[0,80]},{"content":"If an existing schedule and the new schedule overlap, the result will still be cumulative.","pos":[81,171]},{"content":"To clear the schedule, use the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A&gt;</ph> method.","pos":[172,299],"source":" To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method."}]}]}],"pos":[13403,13765],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the first hour that the source will be available for replication.","nodes":[{"pos":[0,171],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"&gt;&lt;/xref&gt;</ph> members that specifies the first hour that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the first hour that the source will be available for replication."}],"pos":[14186,14358],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the first 15-minute interval that the source will be available for replication.","nodes":[{"pos":[0,188],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"&gt;&lt;/xref&gt;</ph> members that specifies the first 15-minute interval that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the first 15-minute interval that the source will be available for replication."}],"pos":[14464,14653],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the final hour that the source will be available for replication.","nodes":[{"pos":[0,171],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"&gt;&lt;/xref&gt;</ph> members that specifies the final hour that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the final hour that the source will be available for replication."}],"pos":[14752,14924],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the final 15-minute interval that the source will be available for replication.","nodes":[{"pos":[0,188],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"&gt;&lt;/xref&gt;</ph> members that specifies the final 15-minute interval that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the final 15-minute interval that the source will be available for replication."}],"pos":[15028,15217],"yaml":true},{"content":"Adds a range of times for a single day to the schedule.","nodes":[{"pos":[0,55],"content":"Adds a range of times for a single day to the schedule.","nodes":[{"content":"Adds a range of times for a single day to the schedule.","pos":[0,55]}]}],"pos":[17294,17350],"yaml":true},{"content":"All of the parameters in this method are inclusive.  \n  \n This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.","nodes":[{"pos":[0,51],"content":"All of the parameters in this method are inclusive.","nodes":[{"content":"All of the parameters in this method are inclusive.","pos":[0,51]}]},{"pos":[58,357],"content":"This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.","nodes":[{"content":"This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.","pos":[0,299],"nodes":[{"content":"This method is cumulative and does not remove any existing schedule information.","pos":[0,80]},{"content":"If an existing schedule and the new schedule overlap, the result will still be cumulative.","pos":[81,171]},{"content":"To clear the schedule, use the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A&gt;</ph> method.","pos":[172,299],"source":" To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method."}]}]}],"pos":[17361,17723],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.DayOfWeek\"></xref> members that specifies the day of the week that the source will be available for replication.","nodes":[{"pos":[0,142],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DayOfWeek\"&gt;&lt;/xref&gt;</ph> members that specifies the day of the week that the source will be available for replication.","source":"One of the <xref href=\"System.DayOfWeek\"></xref> members that specifies the day of the week that the source will be available for replication."}],"pos":[18115,18258],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the first hour that the source will be available for replication.","nodes":[{"pos":[0,171],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"&gt;&lt;/xref&gt;</ph> members that specifies the first hour that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the first hour that the source will be available for replication."}],"pos":[18359,18531],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the first 15-minute interval that the source will be available for replication.","nodes":[{"pos":[0,188],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"&gt;&lt;/xref&gt;</ph> members that specifies the first 15-minute interval that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the first 15-minute interval that the source will be available for replication."}],"pos":[18637,18826],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the final hour that the source will be available for replication.","nodes":[{"pos":[0,171],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"&gt;&lt;/xref&gt;</ph> members that specifies the final hour that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the final hour that the source will be available for replication."}],"pos":[18925,19097],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the final 15-minute interval that the source will be available for replication.","nodes":[{"pos":[0,188],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"&gt;&lt;/xref&gt;</ph> members that specifies the final 15-minute interval that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the final 15-minute interval that the source will be available for replication."}],"pos":[19201,19390],"yaml":true},{"content":"The start time is after the end time.","nodes":[{"pos":[0,37],"content":"The start time is after the end time.","nodes":[{"content":"The start time is after the end time.","pos":[0,37]}]}],"pos":[19588,19626],"yaml":true},{"content":"One or more parameters is not valid.","nodes":[{"pos":[0,36],"content":"One or more parameters is not valid.","nodes":[{"content":"One or more parameters is not valid.","pos":[0,36]}]}],"pos":[19772,19809],"yaml":true},{"content":"<code>days</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;days&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>days</code> is `null`."}],"pos":[19911,19940],"yaml":true},{"content":"Adds a range of times for multiple days to the schedule.","nodes":[{"pos":[0,56],"content":"Adds a range of times for multiple days to the schedule.","nodes":[{"content":"Adds a range of times for multiple days to the schedule.","pos":[0,56]}]}],"pos":[21917,21974],"yaml":true},{"content":"All of the parameters in this method are inclusive.  \n  \n This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.","nodes":[{"pos":[0,51],"content":"All of the parameters in this method are inclusive.","nodes":[{"content":"All of the parameters in this method are inclusive.","pos":[0,51]}]},{"pos":[58,357],"content":"This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.","nodes":[{"content":"This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.","pos":[0,299],"nodes":[{"content":"This method is cumulative and does not remove any existing schedule information.","pos":[0,80]},{"content":"If an existing schedule and the new schedule overlap, the result will still be cumulative.","pos":[81,171]},{"content":"To clear the schedule, use the <ph id=\"ph1\">&lt;xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A&gt;</ph> method.","pos":[172,299],"source":" To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method."}]}]}],"pos":[21985,22347],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.DayOfWeek\"></xref> members that specifies the day of the week that the source will be available for replication.","nodes":[{"pos":[0,142],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DayOfWeek\"&gt;&lt;/xref&gt;</ph> members that specifies the day of the week that the source will be available for replication.","source":"One of the <xref href=\"System.DayOfWeek\"></xref> members that specifies the day of the week that the source will be available for replication."}],"pos":[22745,22888],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the first hour that the source will be available for replication.","nodes":[{"pos":[0,171],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"&gt;&lt;/xref&gt;</ph> members that specifies the first hour that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the first hour that the source will be available for replication."}],"pos":[22989,23161],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the first 15-minute interval that the source will be available for replication.","nodes":[{"pos":[0,188],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"&gt;&lt;/xref&gt;</ph> members that specifies the first 15-minute interval that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the first 15-minute interval that the source will be available for replication."}],"pos":[23267,23456],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the final hour that the source will be available for replication.","nodes":[{"pos":[0,171],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"&gt;&lt;/xref&gt;</ph> members that specifies the final hour that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the final hour that the source will be available for replication."}],"pos":[23555,23727],"yaml":true},{"content":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the final 15-minute interval that the source will be available for replication.","nodes":[{"pos":[0,188],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"&gt;&lt;/xref&gt;</ph> members that specifies the final 15-minute interval that the source will be available for replication.","source":"One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the final 15-minute interval that the source will be available for replication."}],"pos":[23831,24020],"yaml":true},{"content":"The start time is after the end time.","nodes":[{"pos":[0,37],"content":"The start time is after the end time.","nodes":[{"content":"The start time is after the end time.","pos":[0,37]}]}],"pos":[24218,24256],"yaml":true},{"content":"One or more parameters is not valid.","nodes":[{"pos":[0,36],"content":"One or more parameters is not valid.","nodes":[{"content":"One or more parameters is not valid.","pos":[0,36]}]}],"pos":[24402,24439],"yaml":true},{"content":"<code>days</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;days&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>days</code> is `null`."}],"pos":[24541,24570],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  id: ActiveDirectorySchedule\n  children:\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  langs:\n  - csharp\n  name: ActiveDirectorySchedule\n  nameWithType: ActiveDirectorySchedule\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  type: Class\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: The <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> class represents the weekly schedule for an Active Directory Domain Services replication.\n  syntax:\n    content: public class ActiveDirectorySchedule\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor\n  commentId: M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor\n  id: '#ctor'\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  langs:\n  - csharp\n  name: ActiveDirectorySchedule()\n  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule()\n  fullName: ActiveDirectorySchedule.ActiveDirectorySchedule()\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> class.\n  syntax:\n    content: public ActiveDirectorySchedule ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)\n  commentId: M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)\n  id: '#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)'\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  langs:\n  - csharp\n  name: ActiveDirectorySchedule(ActiveDirectorySchedule)\n  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)\n  fullName: ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> class, using the specified <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> object.\n  syntax:\n    content: public ActiveDirectorySchedule (System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule);\n    parameters:\n    - id: schedule\n      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n      description: A <xref href=\"System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\"></xref> object that is copied to this object.\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>schedule</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule\n  commentId: P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule\n  id: RawSchedule\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  langs:\n  - csharp\n  name: RawSchedule\n  nameWithType: ActiveDirectorySchedule.RawSchedule\n  fullName: ActiveDirectorySchedule.RawSchedule\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Gets or sets a three-dimensional array that indicates at what time during the week that the source is available for replication.\n  syntax:\n    content: public bool[,,] RawSchedule { get; set; }\n    return:\n      type: System.Boolean[,,]\n      description: \"A three-dimensional array of <xref href=\\\"System.Boolean\\\"></xref> elements in which the element is `true` if the source is available for replication during that specific 15-minute interval. The element is `false` if the source is not available for replication.  \\n  \\n The array is in the form RawSchedule[<day-of-week>, <hour>, <15-minute interval>]. All of these values are zero-based and the week begins at 00:00 on Sunday morning, Coordinated Universal Time.  \\n  \\n The following are the valid values for the day-of-week.  \\n  \\n <table><thead><tr><th> Day-of-week value  \\n  \\n </th><th> Indicated day of the week.  \\n  \\n </th></tr></thead><tbody><tr><td> 0  \\n  \\n </td><td> Sunday  \\n  \\n </td></tr><tr><td> 1  \\n  \\n </td><td> Monday  \\n  \\n </td></tr><tr><td> 2  \\n  \\n </td><td> Tuesday  \\n  \\n </td></tr><tr><td> 3  \\n  \\n </td><td> Wednesday  \\n  \\n </td></tr><tr><td> 4  \\n  \\n </td><td> Thursday  \\n  \\n </td></tr><tr><td> 5  \\n  \\n </td><td> Friday  \\n  \\n </td></tr><tr><td> 6  \\n  \\n </td><td> Saturday  \\n  \\n </td></tr></tbody></table>  \\n  \\n The hour is zero-based and specified in 24-hour format. For example, 2 P.M. would be specified as 14. Valid values are 0-23.  \\n  \\n The 15-minute interval specifies the 15-minute block within the hour that the source is available for replication. The following table identifies the possible values for the 15-minute interval.  \\n  \\n <table><thead><tr><th> 15-minute interval  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> 0  \\n  \\n </td><td> The source is available for replication from 0 to 14 minutes after the hour.  \\n  \\n </td></tr><tr><td> 1  \\n  \\n </td><td> The source is available for replication from 15 to 29 minutes after the hour.  \\n  \\n </td></tr><tr><td> 2  \\n  \\n </td><td> The source is available for replication from 30 to 44 minutes after the hour.  \\n  \\n </td></tr><tr><td> 3  \\n  \\n </td><td> The source is available for replication from 45 to 59 minutes after the hour.  \\n  \\n </td></tr></tbody></table>  \\n  \\n The following C# example shows how to use this property to determine if the source is available for replication at 15:50 Coordinated Universal Time on Tuesday.  \\n  \\n```csharp  \\nBoolean isAvailable = scheduleObject.RawSchedule[2, 15, 3];  \\n```  \\n  \\n The following C# example shows how to use this property to calculate the 15-minute interval at runtime by dividing the minutes by 15.  \\n  \\n```csharp  \\nBoolean isAvailable = scheduleObject.RawSchedule[2, 15, (Int32)50/15];  \\n```\"\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule\n  commentId: M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule\n  id: ResetSchedule\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  langs:\n  - csharp\n  name: ResetSchedule()\n  nameWithType: ActiveDirectorySchedule.ResetSchedule()\n  fullName: ActiveDirectorySchedule.ResetSchedule()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Resets the entire schedule to unavailable.\n  syntax:\n    content: public void ResetSchedule ();\n    parameters: []\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  commentId: M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  id: SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  langs:\n  - csharp\n  name: SetDailySchedule(HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  nameWithType: ActiveDirectorySchedule.SetDailySchedule(HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  fullName: ActiveDirectorySchedule.SetDailySchedule(HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Adds a range of times for every day of the week to the schedule.\n  remarks: \"All of the parameters in this method are inclusive.  \\n  \\n This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.\"\n  syntax:\n    content: public void SetDailySchedule (System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);\n    parameters:\n    - id: fromHour\n      type: System.DirectoryServices.ActiveDirectory.HourOfDay\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the first hour that the source will be available for replication.\n    - id: fromMinute\n      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the first 15-minute interval that the source will be available for replication.\n    - id: toHour\n      type: System.DirectoryServices.ActiveDirectory.HourOfDay\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the final hour that the source will be available for replication.\n    - id: toMinute\n      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the final 15-minute interval that the source will be available for replication.\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  commentId: M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  id: SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  langs:\n  - csharp\n  name: SetSchedule(DayOfWeek, HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek, HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  fullName: ActiveDirectorySchedule.SetSchedule(DayOfWeek, HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Adds a range of times for a single day to the schedule.\n  remarks: \"All of the parameters in this method are inclusive.  \\n  \\n This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.\"\n  syntax:\n    content: public void SetSchedule (DayOfWeek day, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);\n    parameters:\n    - id: day\n      type: System.DayOfWeek\n      description: One of the <xref href=\"System.DayOfWeek\"></xref> members that specifies the day of the week that the source will be available for replication.\n    - id: fromHour\n      type: System.DirectoryServices.ActiveDirectory.HourOfDay\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the first hour that the source will be available for replication.\n    - id: fromMinute\n      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the first 15-minute interval that the source will be available for replication.\n    - id: toHour\n      type: System.DirectoryServices.ActiveDirectory.HourOfDay\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the final hour that the source will be available for replication.\n    - id: toMinute\n      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the final 15-minute interval that the source will be available for replication.\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The start time is after the end time.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: One or more parameters is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>days</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  commentId: M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  id: SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  langs:\n  - csharp\n  name: SetSchedule(DayOfWeek[], HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek[], HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  fullName: ActiveDirectorySchedule.SetSchedule(DayOfWeek[], HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Adds a range of times for multiple days to the schedule.\n  remarks: \"All of the parameters in this method are inclusive.  \\n  \\n This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.\"\n  syntax:\n    content: public void SetSchedule (DayOfWeek[] days, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);\n    parameters:\n    - id: days\n      type: System.DayOfWeek[]\n      description: One of the <xref href=\"System.DayOfWeek\"></xref> members that specifies the day of the week that the source will be available for replication.\n    - id: fromHour\n      type: System.DirectoryServices.ActiveDirectory.HourOfDay\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the first hour that the source will be available for replication.\n    - id: fromMinute\n      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the first 15-minute interval that the source will be available for replication.\n    - id: toHour\n      type: System.DirectoryServices.ActiveDirectory.HourOfDay\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.HourOfDay\"></xref> members that specifies the final hour that the source will be available for replication.\n    - id: toMinute\n      type: System.DirectoryServices.ActiveDirectory.MinuteOfHour\n      description: One of the <xref href=\"System.DirectoryServices.ActiveDirectory.MinuteOfHour\"></xref> members that specifies the final 15-minute interval that the source will be available for replication.\n  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The start time is after the end time.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: One or more parameters is not valid.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>days</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: ActiveDirectorySchedule()\n  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule()\n  fullName: ActiveDirectorySchedule.ActiveDirectorySchedule()\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: ActiveDirectorySchedule(ActiveDirectorySchedule)\n  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)\n  fullName: ActiveDirectorySchedule.ActiveDirectorySchedule(ActiveDirectorySchedule)\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectorySchedule\n  nameWithType: ActiveDirectorySchedule\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: RawSchedule\n  nameWithType: ActiveDirectorySchedule.RawSchedule\n  fullName: ActiveDirectorySchedule.RawSchedule\n- uid: System.Boolean\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean[]\n  parent: System\n  isExternal: false\n  name: Boolean[]\n  nameWithType: Boolean[]\n  fullName: System.Boolean[,,]\n  spec.csharp:\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: ResetSchedule()\n  nameWithType: ActiveDirectorySchedule.ResetSchedule()\n  fullName: ActiveDirectorySchedule.ResetSchedule()\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: SetDailySchedule(HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  nameWithType: ActiveDirectorySchedule.SetDailySchedule(HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  fullName: ActiveDirectorySchedule.SetDailySchedule(HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n- uid: System.DirectoryServices.ActiveDirectory.HourOfDay\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: HourOfDay\n  nameWithType: HourOfDay\n  fullName: System.DirectoryServices.ActiveDirectory.HourOfDay\n- uid: System.DirectoryServices.ActiveDirectory.MinuteOfHour\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: MinuteOfHour\n  nameWithType: MinuteOfHour\n  fullName: System.DirectoryServices.ActiveDirectory.MinuteOfHour\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: SetSchedule(DayOfWeek, HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek, HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  fullName: ActiveDirectorySchedule.SetSchedule(DayOfWeek, HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n- uid: System.DayOfWeek\n  parent: System\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: DayOfWeek\n  fullName: System.DayOfWeek\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: SetSchedule(DayOfWeek[], HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  nameWithType: ActiveDirectorySchedule.SetSchedule(DayOfWeek[], HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n  fullName: ActiveDirectorySchedule.SetSchedule(DayOfWeek[], HourOfDay, MinuteOfHour, HourOfDay, MinuteOfHour)\n- uid: System.DayOfWeek[]\n  parent: System\n  isExternal: false\n  name: DayOfWeek[]\n  nameWithType: DayOfWeek[]\n  fullName: System.DayOfWeek[]\n  spec.csharp:\n  - uid: System.DayOfWeek\n    name: DayOfWeek\n    nameWithType: DayOfWeek\n    fullName: System.DayOfWeek\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor*\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: ActiveDirectorySchedule\n  nameWithType: ActiveDirectorySchedule.ActiveDirectorySchedule\n  fullName: ActiveDirectorySchedule.ActiveDirectorySchedule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule*\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: RawSchedule\n  nameWithType: ActiveDirectorySchedule.RawSchedule\n  fullName: ActiveDirectorySchedule.RawSchedule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule*\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: ResetSchedule\n  nameWithType: ActiveDirectorySchedule.ResetSchedule\n  fullName: ActiveDirectorySchedule.ResetSchedule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule*\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: SetDailySchedule\n  nameWithType: ActiveDirectorySchedule.SetDailySchedule\n  fullName: ActiveDirectorySchedule.SetDailySchedule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule*\n  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule\n  isExternal: false\n  name: SetSchedule\n  nameWithType: ActiveDirectorySchedule.SetSchedule\n  fullName: ActiveDirectorySchedule.SetSchedule\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/ActiveDirectorySchedule.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}