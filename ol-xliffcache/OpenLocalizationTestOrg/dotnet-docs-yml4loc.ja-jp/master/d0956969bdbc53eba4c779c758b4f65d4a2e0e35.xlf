<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0956969bdbc53eba4c779c758b4f65d4a2e0e35</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Description.IOperationBehavior.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5939caaeedc9646ef9aba3275a100e88cb797633</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">086324519b717c64d72e82cc04f10c9bac27f7b3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements methods that can be used to extend run-time behavior for an operation in either a service or client application.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> interface to modify, examine, or extend some aspect of operation-wide execution at the application level for either client or service applications.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> method to pass custom data at runtime to enable bindings to support custom behavior.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to a client dispatcher in a client application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to modify, examine, or insert extensions to operation-wide execution in a service application.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> method to confirm that a <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> meets specific requirements.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be used to ensure that an operation has a certain configuration setting enabled, supports a particular feature and other requirements.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> methods pass an <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> object as a parameter.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This parameter is for examination only; if you modify the <ph id="ph1">&lt;xref:System.ServiceModel.Description.OperationDescription&gt;</ph> object the execution behavior is undefined.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> objects are typically used to access the various properties of the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=fullName&gt;</ph> object in a service application and the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=fullName&gt;</ph> object in a client application.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the developer first reviews the extensibility points to determine which customization option suits the application scenario and then implements the customization at the appropriate scope.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName&gt;</ph> objects can insert customizations for all messages in an entire service and <ph id="ph2">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt;</ph> objects can insert customizations for all messages across a specific contract, and so on.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of the various properties and customizations available, see <bpt id="p1">[</bpt>Extending ServiceHost and the Service Model Layer<ept id="p1">](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once a customization has been decided upon (and the customization interface implemented if necessary) and the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> is the appropriate scope of customization, the customization must be inserted into the <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> runtime by implementing <ph id="ph3">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> and adding the operation behavior to the runtime.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to add the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> to the runtime:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Programmatically add the custom operation behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=fullName&gt;</ph> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add the behavior using a custom attribute.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform the service customization task for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=fullName&gt;</ph> property prior to the construction of the service runtime, which occurs when <ph id="ph3">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName&gt;</ph> method is called on <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform a client customization task, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=fullName&gt;</ph> property before calling the <ph id="ph3">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName&gt;</ph> method or the <ph id="ph4">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName&gt;</ph> method on <ph id="ph5">&lt;xref:System.ServiceModel.ChannelFactory%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the operation behavior is designed for easy access to the runtime at the scope of an individual operation, you can access the runtime at a larger scope by accessing the parent runtime object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Implement to pass data at runtime to bindings to support custom behavior.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> method to provide binding elements with the extra objects they require to support the operation behavior.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>When binding parameters are added here, the binding can locate and process these objects when the channel listener or channel factory is created.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A&gt;</ph> method to pass information about the operation to a custom binding element so that it can build a supporting channel correctly.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Return no value if no modifications are required.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The operation being examined.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use for examination only.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If the operation description is modified, the results are undefined.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The collection of objects that binding elements require to support the behavior.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Implements a modification or extension of the client across an operation.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> method to view, modify, or add a custom extension to the client runtime across all messages used with a specific operation.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about what customizations you can do with a client run-time object, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ClientOperation&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> method throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> if the behavior is only intended for use in a service application.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The operation being examined.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Use for examination only.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the operation description is modified, the results are undefined.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The run-time object that exposes customization properties for the operation described by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">operationDescription</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Implements a modification or extension of the service across an operation.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to view, modify, or extend the service runtime across all messages or for a specific operation.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about what customizations you can do in a service application, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> method throw a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception if the behavior is only intended for use in a client application.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The operation being examined.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Use for examination only.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the operation description is modified, the results are undefined.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The run-time object that exposes customization properties for the operation described by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">operationDescription</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Implement to confirm that the operation meets some intended criteria.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> method to examine the structure to confirm any set of criteria.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to perform any customizations in <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A&gt;</ph> to make use of this method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operation passes validation, return; otherwise, throw an exception.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A&gt;</ph> method can be use to ensure that an operation is authorized.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The operation being examined.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Use for examination only.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the operation description is modified, the results are undefined.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>