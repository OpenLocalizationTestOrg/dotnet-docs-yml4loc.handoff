### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.ConstructorBuilder
  commentId: T:System.Reflection.Emit.ConstructorBuilder
  id: ConstructorBuilder
  children:
  - System.Reflection.Emit.ConstructorBuilder.#ctor
  - System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)
  - System.Reflection.Emit.ConstructorBuilder.Attributes
  - System.Reflection.Emit.ConstructorBuilder.CallingConvention
  - System.Reflection.Emit.ConstructorBuilder.DeclaringType
  - System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  - System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  - System.Reflection.Emit.ConstructorBuilder.GetILGenerator
  - System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags
  - System.Reflection.Emit.ConstructorBuilder.GetModule
  - System.Reflection.Emit.ConstructorBuilder.GetParameters
  - System.Reflection.Emit.ConstructorBuilder.GetToken
  - System.Reflection.Emit.ConstructorBuilder.InitLocals
  - System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Emit.ConstructorBuilder.MethodHandle
  - System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags
  - System.Reflection.Emit.ConstructorBuilder.Module
  - System.Reflection.Emit.ConstructorBuilder.Name
  - System.Reflection.Emit.ConstructorBuilder.ReflectedType
  - System.Reflection.Emit.ConstructorBuilder.ReturnType
  - System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  - System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})
  - System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])
  - System.Reflection.Emit.ConstructorBuilder.Signature
  - System.Reflection.Emit.ConstructorBuilder.ToString
  - System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: ConstructorBuilder
  nameWithType: ConstructorBuilder
  fullName: System.Reflection.Emit.ConstructorBuilder
  type: Class
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines and represents a constructor of a dynamic class.
  remarks: "<xref:System.Reflection.Emit.ConstructorBuilder> is used to fully describe a constructor in Microsoft intermediate language (MSIL), including the name, attributes, signature, and constructor body. It is used in conjunction with the <xref:System.Reflection.Emit.TypeBuilder> class to create classes at run time. Call <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> to get an instance of <xref:System.Reflection.Emit.ConstructorBuilder>.  \n  \n If you do not define a constructor for your dynamic type, a default constructor is provided automatically, and it calls the default constructor of the base class.  \n  \n If you use <xref:System.Reflection.Emit.ConstructorBuilder> to define a constructor for your dynamic type, a default constructor is not provided. You have the following options for providing a default constructor in addition to the constructor you defined:  \n  \n-   If you want a default constructor that simply calls the default constructor of the base class, you can use the <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A?displayProperty=fullName> method to create one (and optionally restrict access to it). Do not provide an implementation for this default constructor. If you do, an exception is thrown when you try to use the constructor. No exception is thrown when the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method is called.  \n  \n-   If you want a default constructor that does something more than simply calling the default constructor of the base class, or that calls another constructor of the base class, or that does something else entirely, you must use the <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=fullName> method to create a <xref:System.Reflection.Emit.ConstructorBuilder>, and provide your own implementation."
  example:
  - "The following code sample illustrates the contextual usage of a `ConstructorBuilder`.  \n  \n [!code-cpp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CPP/source.cpp#1)]\n [!code-csharp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CS/source.cs#1)]\n [!code-vb[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ConstructorBuilder : System.Reflection.ConstructorInfo, System.Runtime.InteropServices._ConstructorBuilder
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Reflection.MethodBase
  - System.Reflection.ConstructorInfo
  implements:
  - System.Runtime.InteropServices._ConstructorBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Reflection.ConstructorInfo.ConstructorName
  - System.Reflection.ConstructorInfo.Equals(System.Object)
  - System.Reflection.ConstructorInfo.GetHashCode
  - System.Reflection.ConstructorInfo.Invoke(System.Object[])
  - System.Reflection.ConstructorInfo.MemberType
  - System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  - System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])
  - System.Reflection.ConstructorInfo.TypeConstructorName
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.MetadataToken
  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.MethodBase.ContainsGenericParameters
  - System.Reflection.MethodBase.GetCurrentMethod
  - System.Reflection.MethodBase.GetGenericArguments
  - System.Reflection.MethodBase.GetMethodBody
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  - System.Reflection.MethodBase.IsAbstract
  - System.Reflection.MethodBase.IsAssembly
  - System.Reflection.MethodBase.IsConstructor
  - System.Reflection.MethodBase.IsFamily
  - System.Reflection.MethodBase.IsFamilyAndAssembly
  - System.Reflection.MethodBase.IsFamilyOrAssembly
  - System.Reflection.MethodBase.IsFinal
  - System.Reflection.MethodBase.IsGenericMethod
  - System.Reflection.MethodBase.IsGenericMethodDefinition
  - System.Reflection.MethodBase.IsHideBySig
  - System.Reflection.MethodBase.IsPrivate
  - System.Reflection.MethodBase.IsPublic
  - System.Reflection.MethodBase.IsSecurityCritical
  - System.Reflection.MethodBase.IsSecuritySafeCritical
  - System.Reflection.MethodBase.IsSecurityTransparent
  - System.Reflection.MethodBase.IsSpecialName
  - System.Reflection.MethodBase.IsStatic
  - System.Reflection.MethodBase.IsVirtual
  - System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)
  - System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic
  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual
  extensionMethods:
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  - System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.#ctor
  commentId: M:System.Reflection.Emit.ConstructorBuilder.#ctor
  id: '#ctor'
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: ConstructorBuilder()
  nameWithType: ConstructorBuilder.ConstructorBuilder()
  fullName: ConstructorBuilder.ConstructorBuilder()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected ConstructorBuilder ();
    parameters: []
  overload: System.Reflection.Emit.ConstructorBuilder.#ctor*
  exceptions: []
  version:
  - xamarinios-10.8
  monikers:
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)
  id: AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: AddDeclarativeSecurity(SecurityAction, PermissionSet)
  nameWithType: ConstructorBuilder.AddDeclarativeSecurity(SecurityAction, PermissionSet)
  fullName: ConstructorBuilder.AddDeclarativeSecurity(SecurityAction, PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds declarative security to this constructor.
  remarks: "<xref:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity%2A> can be called several times, with each call specifying a security action (such as `Demand`, `Assert`, and `Deny`) and a set of permissions that the action applies to.  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0, 1.1, and 2.0, the declarative security attributes applied to a constructor by using this method are stored in the old XML metadata format. See Emitting Declarative Security Attributes."
  example:
  - "The following code sample illustrates the use of `AddDeclarativeSecurity`.  \n  \n [!code-cpp[ConstructorBuilder_Attributes_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#1)]\n [!code-csharp[ConstructorBuilder_Attributes_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#1)]\n [!code-vb[ConstructorBuilder_Attributes_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#1)]"
  syntax:
    content: public void AddDeclarativeSecurity (System.Security.Permissions.SecurityAction action, System.Security.PermissionSet pset);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: The security action to be taken, such as Demand, Assert, and so on.
    - id: pset
      type: System.Security.PermissionSet
      description: The set of permissions the action applies to.
  overload: System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>action</code> is invalid (RequestMinimum, RequestOptional, and RequestRefuse are invalid).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The containing type has been previously created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>.  \n  \n -or-  \n  \n The permission set <code>pset</code> contains an action that was added earlier by `AddDeclarativeSecurity`."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pset</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.Attributes
  commentId: P:System.Reflection.Emit.ConstructorBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: Attributes
  nameWithType: ConstructorBuilder.Attributes
  fullName: ConstructorBuilder.Attributes
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the attributes for this constructor.
  remarks: "The following code sample illustrates the use of `Attributes`.  \n  \n [!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]\n [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]\n [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]"
  syntax:
    content: public override System.Reflection.MethodAttributes Attributes { get; }
    return:
      type: System.Reflection.MethodAttributes
      description: Returns the attributes for this constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.Attributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.CallingConvention
  commentId: P:System.Reflection.Emit.ConstructorBuilder.CallingConvention
  id: CallingConvention
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: CallingConvention
  nameWithType: ConstructorBuilder.CallingConvention
  fullName: ConstructorBuilder.CallingConvention
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a <xref href="System.Reflection.CallingConventions"></xref> value that depends on whether the declaring type is generic.
  syntax:
    content: public override System.Reflection.CallingConventions CallingConvention { get; }
    return:
      type: System.Reflection.CallingConventions
      description: <xref href="System.Reflection.CallingConventions.HasThis"></xref> if the declaring type is generic; otherwise, <xref href="System.Reflection.CallingConventions.Standard"></xref>.
  overload: System.Reflection.Emit.ConstructorBuilder.CallingConvention*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.DeclaringType
  commentId: P:System.Reflection.Emit.ConstructorBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: DeclaringType
  nameWithType: ConstructorBuilder.DeclaringType
  fullName: ConstructorBuilder.DeclaringType
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves a reference to the <xref href="System.Type"></xref> object for the type that declares this member.
  remarks: "A member of a class (or interface) is either declared or inherited from a base class (or interface).  \n  \n The following code sample illustrates the use of `DeclaringType`.  \n  \n [!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]\n [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]\n [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]"
  syntax:
    content: public override Type DeclaringType { get; }
    return:
      type: System.Type
      description: Returns the <xref href="System.Type"></xref> object for the type that declares this member.
  overload: System.Reflection.Emit.ConstructorBuilder.DeclaringType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  id: DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: DefineParameter(Int32, ParameterAttributes, String)
  nameWithType: ConstructorBuilder.DefineParameter(Int32, ParameterAttributes, String)
  fullName: ConstructorBuilder.DefineParameter(Int32, ParameterAttributes, String)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines a parameter of this constructor.
  remarks: If you specify 0 (zero) for `iSequence`, this method returns a <xref:System.Reflection.Emit.ParameterBuilder> instead of throwing an exception. There is nothing useful that you can do with this <xref:System.Reflection.Emit.ParameterBuilder>.
  syntax:
    content: public System.Reflection.Emit.ParameterBuilder DefineParameter (int iSequence, System.Reflection.ParameterAttributes attributes, string strParamName);
    parameters:
    - id: iSequence
      type: System.Int32
      description: The position of the parameter in the parameter list. Parameters are indexed beginning with the number 1 for the first parameter.
    - id: attributes
      type: System.Reflection.ParameterAttributes
      description: The attributes of the parameter.
    - id: strParamName
      type: System.String
      description: The name of the parameter. The name can be the null string.
    return:
      type: System.Reflection.Emit.ParameterBuilder
      description: Returns a `ParameterBuilder` object that represents the new parameter of this constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.DefineParameter*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>iSequence</code> is less than 0 (zero), or it is greater than the number of parameters of the constructor.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The containing type has been created using <xref href="System.Reflection.Emit.TypeBuilder.CreateType"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: ConstructorBuilder.GetCustomAttributes(Boolean)
  fullName: ConstructorBuilder.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns all the custom attributes defined for this constructor.
  remarks: "The `inherit` parameter is ignored because a class never inherits constructors from base classes.  \n  \n To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>."
  syntax:
    content: public override object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: Controls inheritance of custom attributes from base classes. This parameter is ignored.
    return:
      type: System.Object[]
      description: Returns an array of objects representing all the custom attributes of the constructor represented by this <xref href="System.Reflection.Emit.ConstructorBuilder"></xref> instance.
  overload: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: ConstructorBuilder.GetCustomAttributes(Type, Boolean)
  fullName: ConstructorBuilder.GetCustomAttributes(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the custom attributes identified by the given type.
  remarks: "The `inherit` parameter is ignored because a class never inherits constructors from base classes.  \n  \n To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>."
  syntax:
    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: The custom attribute type.
    - id: inherit
      type: System.Boolean
      description: Controls inheritance of custom attributes from base classes. This parameter is ignored.
    return:
      type: System.Object[]
      description: Returns an array of type <xref href="System.Object"></xref> representing the attributes of this constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  id: GetILGenerator(System.Int32)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: GetILGenerator(Int32)
  nameWithType: ConstructorBuilder.GetILGenerator(Int32)
  fullName: ConstructorBuilder.GetILGenerator(Int32)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets an <xref href="System.Reflection.Emit.ILGenerator"></xref> object, with the specified MSIL stream size, that can be used to build a method body for this constructor.
  remarks: The runtime generates the code for default constructors. Therefore, if an attempt is made to obtain an `ILGenerator` for a default constructor, an exception is thrown.
  syntax:
    content: public System.Reflection.Emit.ILGenerator GetILGenerator (int streamSize);
    parameters:
    - id: streamSize
      type: System.Int32
      description: The size of the MSIL stream, in bytes.
    return:
      type: System.Reflection.Emit.ILGenerator
      description: An <xref href="System.Reflection.Emit.ILGenerator"></xref> for this constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.GetILGenerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The constructor is a default constructor.  \n  \n -or-  \n  \n The constructor has <xref href=\"System.Reflection.MethodAttributes\"></xref> or <xref href=\"System.Reflection.MethodImplAttributes\"></xref> flags indicating that it should not have a method body."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator
  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator
  id: GetILGenerator
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: GetILGenerator()
  nameWithType: ConstructorBuilder.GetILGenerator()
  fullName: ConstructorBuilder.GetILGenerator()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets an <xref href="System.Reflection.Emit.ILGenerator"></xref> for this constructor.
  remarks: The runtime generates the code for default constructors. Therefore, if an attempt is made to obtain an `ILGenerator`, an exception will be thrown.
  example:
  - "The following code sample illustrates the use of the `GetILGenerator` method.  \n  \n [!code-cpp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CPP/source.cpp#1)]\n [!code-csharp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CS/source.cs#1)]\n [!code-vb[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/VB/source.vb#1)]"
  syntax:
    content: public System.Reflection.Emit.ILGenerator GetILGenerator ();
    parameters: []
    return:
      type: System.Reflection.Emit.ILGenerator
      description: Returns an <xref href="System.Reflection.Emit.ILGenerator"></xref> object for this constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.GetILGenerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The constructor is a default constructor.  \n  \n -or-  \n  \n The constructor has <xref href=\"System.Reflection.MethodAttributes\"></xref> or <xref href=\"System.Reflection.MethodImplAttributes\"></xref> flags indicating that it should not have a method body."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags
  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: GetMethodImplementationFlags()
  nameWithType: ConstructorBuilder.GetMethodImplementationFlags()
  fullName: ConstructorBuilder.GetMethodImplementationFlags()
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the method implementation flags for this constructor.
  remarks: "The following code sample illustrates the use of `GetMethodImplementationFlags`.  \n  \n [!code-cpp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#3)]\n [!code-csharp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#3)]\n [!code-vb[ConstructorBuilder_GetModule_4#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#3)]"
  syntax:
    content: public override System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
      description: The method implementation flags for this constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.GetModule
  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetModule
  id: GetModule
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: GetModule()
  nameWithType: ConstructorBuilder.GetModule()
  fullName: ConstructorBuilder.GetModule()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns a reference to the module that contains this constructor.
  remarks: "The following code sample illustrates the usage of `GetModule`.  \n  \n [!code-cpp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CPP/source3.cpp#1)]\n [!code-csharp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CS/source3.cs#1)]\n [!code-vb[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/VB/source3.vb#1)]"
  syntax:
    content: public System.Reflection.Module GetModule ();
    parameters: []
    return:
      type: System.Reflection.Module
      description: The module that contains this constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.GetModule*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.GetParameters
  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetParameters
  id: GetParameters
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: GetParameters()
  nameWithType: ConstructorBuilder.GetParameters()
  fullName: ConstructorBuilder.GetParameters()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the parameters of this constructor.
  remarks: This property is not supported until after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=fullName> method has been called. In the .NET Framework versions 1.0 and 1.1, <xref:System.InvalidOperationException> is thrown. In the .NET Framework version 2.0, <xref:System.NotSupportedException> is thrown.
  example:
  - "The code sample illustrates the use of `GetParameters`.  \n  \n [!code-cpp[ConstructorBuilder_GetModule_4#4](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#4)]\n [!code-csharp[ConstructorBuilder_GetModule_4#4](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#4)]\n [!code-vb[ConstructorBuilder_GetModule_4#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#4)]"
  syntax:
    content: public override System.Reflection.ParameterInfo[] GetParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: Returns an array of <xref href="System.Reflection.ParameterInfo"></xref> objects that represent the parameters of this constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.GetParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Reflection.Emit.TypeBuilder.CreateType"></xref> has not been called on this constructor's type, in the .NET Framework versions 1.0 and 1.1.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <xref href="System.Reflection.Emit.TypeBuilder.CreateType"></xref> has not been called on this constructor's type, in the .NET Framework version 2.0.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.GetToken
  commentId: M:System.Reflection.Emit.ConstructorBuilder.GetToken
  id: GetToken
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: GetToken()
  nameWithType: ConstructorBuilder.GetToken()
  fullName: ConstructorBuilder.GetToken()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the <xref href="System.Reflection.Emit.MethodToken"></xref> that represents the token for this constructor.
  remarks: "This code sample illustrates the use of `GetToken`.  \n  \n [!code-cpp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#2)]\n [!code-csharp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#2)]\n [!code-vb[ConstructorBuilder_GetModule_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#2)]"
  syntax:
    content: public System.Reflection.Emit.MethodToken GetToken ();
    parameters: []
    return:
      type: System.Reflection.Emit.MethodToken
      description: Returns the <xref href="System.Reflection.Emit.MethodToken"></xref> of this constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.GetToken*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.InitLocals
  commentId: P:System.Reflection.Emit.ConstructorBuilder.InitLocals
  id: InitLocals
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: InitLocals
  nameWithType: ConstructorBuilder.InitLocals
  fullName: ConstructorBuilder.InitLocals
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets or sets whether the local variables in this constructor should be zero-initialized.
  syntax:
    content: public bool InitLocals { get; set; }
    return:
      type: System.Boolean
      description: Read/write. Gets or sets whether the local variables in this constructor should be zero-initialized.
  overload: System.Reflection.Emit.ConstructorBuilder.InitLocals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: Invoke(BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorBuilder.Invoke(BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorBuilder.Invoke(BindingFlags, Binder, Object[], CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Invokes the constructor dynamically reflected by this instance on the given object, passing along the specified parameters, and under the constraints of the given binder.
  remarks: "If the constructor has no parameters, the value of the `parameters` parameter should be `null`. Otherwise, the number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.  \n  \n For example, if the constructor reflected by this instance is declared as public class taking two strings, then the `parameters` parameter should be an array of <xref:System.Object> with length 2.  \n  \n> [!NOTE]\n>  Access restrictions are ignored for fully-trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted."
  syntax:
    content: public override object Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref>, such as InvokeMethod, NonPublic, and so on.
    - id: binder
      type: System.Reflection.Binder
      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects using reflection. If binder is `null`, the default binder is used. See <xref href="System.Reflection.Binder"></xref>.
    - id: parameters
      type: System.Object[]
      description: An argument list. This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked. If there are no parameters this should be `null`.
    - id: culture
      type: System.Globalization.CultureInfo
      description: An instance of <xref href="System.Globalization.CultureInfo"></xref> used to govern the coercion of types. If this is null, the <xref href="System.Globalization.CultureInfo"></xref> for the current thread is used. (For example, this is necessary to convert a <xref href="System.String"></xref> that represents 1000 to a <xref href="System.Double"></xref> value, since 1000 is represented differently by different cultures.)
    return:
      type: System.Object
      description: Returns an <xref href="System.Object"></xref> that is the return value of the invoked constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.Invoke*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported. You can retrieve the constructor using <xref href="System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])"></xref> and call <xref href="System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)"></xref> on the returned <xref href="System.Reflection.ConstructorInfo"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorBuilder.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorBuilder.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Dynamically invokes the constructor reflected by this instance with the specified arguments, under the constraints of the specified `Binder`.
  remarks: "The number, type, and order of elements in the parameters array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.  \n  \n Before calling the constructor, `Invoke` ensures that the caller has access permission, and that the parameters are of the correct number, order and type.  \n  \n Access restrictions are ignored for fully-trusted code. That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted."
  syntax:
    content: public override object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: The object that needs to be reinitialized.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: One of the `BindingFlags` values that specifies the type of binding that is desired.
    - id: binder
      type: System.Reflection.Binder
      description: A `Binder` that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If <code>binder</code> is `null`, then Binder.DefaultBinding is used.
    - id: parameters
      type: System.Object[]
      description: An argument list. This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked. If there are no parameters, this should be a null reference (`Nothing` in Visual Basic).
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo"></xref> used to govern the coercion of types. If this is null, the <xref href="System.Globalization.CultureInfo"></xref> for the current thread is used.
    return:
      type: System.Object
      description: An instance of the class associated with the constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.Invoke*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported. You can retrieve the constructor using <xref href="System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])"></xref> and call <xref href="System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)"></xref> on the returned <xref href="System.Reflection.ConstructorInfo"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: IsDefined(Type, Boolean)
  nameWithType: ConstructorBuilder.IsDefined(Type, Boolean)
  fullName: ConstructorBuilder.IsDefined(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Checks if the specified custom attribute type is defined.
  remarks: See the metadata specification for details on how to format `binaryAttribute`.
  syntax:
    content: public override bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: A custom attribute type.
    - id: inherit
      type: System.Boolean
      description: Controls inheritance of custom attributes from base classes. This parameter is ignored.
    return:
      type: System.Boolean
      description: '`true` if the specified custom attribute type is defined; otherwise, `false`.'
  overload: System.Reflection.Emit.ConstructorBuilder.IsDefined*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not currently supported. You can retrieve the constructor using <xref href="System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])"></xref> and call <xref href="System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)"></xref> on the returned <xref href="System.Reflection.ConstructorInfo"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.MethodHandle
  commentId: P:System.Reflection.Emit.ConstructorBuilder.MethodHandle
  id: MethodHandle
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: MethodHandle
  nameWithType: ConstructorBuilder.MethodHandle
  fullName: ConstructorBuilder.MethodHandle
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Retrieves the internal handle for the method. Use this handle to access the underlying metadata handle.
  syntax:
    content: public override RuntimeMethodHandle MethodHandle { get; }
    return:
      type: System.RuntimeMethodHandle
      description: Returns the internal handle for the method. Use this handle to access the underlying metadata handle.
  overload: System.Reflection.Emit.ConstructorBuilder.MethodHandle*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this class.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags
  commentId: P:System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags
  id: MethodImplementationFlags
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: MethodImplementationFlags
  nameWithType: ConstructorBuilder.MethodImplementationFlags
  fullName: ConstructorBuilder.MethodImplementationFlags
  type: Property
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  syntax:
    content: public override System.Reflection.MethodImplAttributes MethodImplementationFlags { get; }
    return:
      type: System.Reflection.MethodImplAttributes
      description: ''
  overload: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.Module
  commentId: P:System.Reflection.Emit.ConstructorBuilder.Module
  id: Module
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: Module
  nameWithType: ConstructorBuilder.Module
  fullName: ConstructorBuilder.Module
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets the dynamic module in which this constructor is defined.
  remarks: This property returns the same value as the <xref:System.Reflection.Emit.ConstructorBuilder.GetModule%2A> method.
  syntax:
    content: public override System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: A <xref href="System.Reflection.Module"></xref> object that represents the dynamic module in which this constructor is defined.
  overload: System.Reflection.Emit.ConstructorBuilder.Module*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.Name
  commentId: P:System.Reflection.Emit.ConstructorBuilder.Name
  id: Name
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: Name
  nameWithType: ConstructorBuilder.Name
  fullName: ConstructorBuilder.Name
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the name of this constructor.
  remarks: "The following code sample illustrates the use of `Name`.  \n  \n [!code-cpp[ConstructorBuilder_Name_5#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CPP/constructorbuilder_name_5.cpp#2)]\n [!code-csharp[ConstructorBuilder_Name_5#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CS/constructorbuilder_name_5.cs#2)]\n [!code-vb[ConstructorBuilder_Name_5#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Name_5/VB/constructorbuilder_name_5.vb#2)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: Returns the name of this constructor.
  overload: System.Reflection.Emit.ConstructorBuilder.Name*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.ReflectedType
  commentId: P:System.Reflection.Emit.ConstructorBuilder.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: ReflectedType
  nameWithType: ConstructorBuilder.ReflectedType
  fullName: ConstructorBuilder.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Holds a reference to the <xref href="System.Type"></xref> object from which this object was obtained.
  remarks: A <xref:System.Reflection.Emit.ConstructorBuilder> object represents a constructor on a particular class. In order to obtain a <xref:System.Reflection.ConstructorInfo> object, the <xref:System.Type> object that represents the class that supports the constructor is queried. This property holds a reference to that <xref:System.Type> object.
  syntax:
    content: public override Type ReflectedType { get; }
    return:
      type: System.Type
      description: Returns the `Type` object from which this object was obtained.
  overload: System.Reflection.Emit.ConstructorBuilder.ReflectedType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.ReturnType
  commentId: P:System.Reflection.Emit.ConstructorBuilder.ReturnType
  id: ReturnType
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: ReturnType
  nameWithType: ConstructorBuilder.ReturnType
  fullName: ConstructorBuilder.ReturnType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets `null`.
  remarks: This property might be removed in a future version.
  syntax:
    content: >-
      [System.Obsolete]

      public Type ReturnType { get; }
    return:
      type: System.Type
      description: Returns `null`.
  overload: System.Reflection.Emit.ConstructorBuilder.ReturnType*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: ConstructorBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: ConstructorBuilder.SetCustomAttribute(CustomAttributeBuilder)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a custom attribute builder.
  remarks: ''
  example:
  - "The following code sample illustrates the use of `SetCustomAttribute` of the context of a <xref:System.Reflection.Emit.ConstructorBuilder>, passing a <xref:System.Reflection.Emit.CustomAttributeBuilder>.  \n  \n [!code-cpp[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/CPP/constructorbuilder_setcustomattribute1.cpp#1)]\n [!code-csharp[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/CS/constructorbuilder_setcustomattribute1.cs#1)]\n [!code-vb[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/VB/constructorbuilder_setcustomattribute1.vb#1)]"
  syntax:
    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class to define the custom attribute.
  overload: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>customBuilder</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  nameWithType: ConstructorBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: ConstructorBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a specified custom attribute blob.
  remarks: See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.
  example:
  - "The following code sample illustrates the use of `SetCustomAttribute` of the context of a <xref:System.Reflection.Emit.ConstructorBuilder>, passing a byte blob.  \n  \n [!code-cpp[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/CPP/constructorbuilder_setcustomattribute2.cpp#1)]\n [!code-csharp[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/CS/constructorbuilder_setcustomattribute2.cs#1)]\n [!code-vb[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/VB/constructorbuilder_setcustomattribute2.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte blob representing the attributes.
  overload: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>con</code> or <code>binaryAttribute</code> is `null`.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  id: SetImplementationFlags(System.Reflection.MethodImplAttributes)
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: SetImplementationFlags(MethodImplAttributes)
  nameWithType: ConstructorBuilder.SetImplementationFlags(MethodImplAttributes)
  fullName: ConstructorBuilder.SetImplementationFlags(MethodImplAttributes)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the method implementation flags for this constructor.
  remarks: "The following code sample illustrates the use of `SetImplementationFlags`.  \n  \n [!code-cpp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CPP/constructorbuilder_setimplementationflags.cpp#1)]\n [!code-csharp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CS/constructorbuilder_setimplementationflags.cs#1)]\n [!code-vb[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/VB/constructorbuilder_setimplementationflags.vb#1)]"
  syntax:
    content: public void SetImplementationFlags (System.Reflection.MethodImplAttributes attributes);
    parameters:
    - id: attributes
      type: System.Reflection.MethodImplAttributes
      description: The method implementation flags.
  overload: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The containing type has been created using <xref href="System.Reflection.Emit.TypeBuilder.CreateType"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})
  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})
  id: SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)
  nameWithType: ConstructorBuilder.SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)
  fullName: ConstructorBuilder.SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Creates the body of the constructor by using a specified byte array of Microsoft intermediate language (MSIL) instructions.
  syntax:
    content: public void SetMethodBody (byte[] il, int maxStack, byte[] localSignature, System.Collections.Generic.IEnumerable<System.Reflection.Emit.ExceptionHandler> exceptionHandlers, System.Collections.Generic.IEnumerable<int> tokenFixups);
    parameters:
    - id: il
      type: System.Byte[]
      description: An array that contains valid MSIL instructions.
    - id: maxStack
      type: System.Int32
      description: The maximum stack evaluation depth.
    - id: localSignature
      type: System.Byte[]
      description: An array of bytes that contain the serialized local variable structure. Specify `null` if the constructor has no local variables.
    - id: exceptionHandlers
      type: System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler}
      description: A collection that contains the exception handlers for the constructor. Specify `null` if the constructor has no exception handlers.
    - id: tokenFixups
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: A collection of values that represent offsets in <code>il</code>, each of which specifies the beginning of a token that may be modified. Specify `null` if the constructor has no tokens that have to be modified.
  overload: System.Reflection.Emit.ConstructorBuilder.SetMethodBody*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>il</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>maxStack</code> is negative.  \n  \n -or-  \n  \n One of <code>exceptionHandlers</code> specifies an offset outside of <code>il</code>.  \n  \n -or-  \n  \n One of <code>tokenFixups</code> specifies an offset that is outside the <code>il</code> array."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The containing type was previously created using the <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> method.  \n  \n -or-  \n  \n This method was called previously on this <xref href=\"System.Reflection.Emit.ConstructorBuilder\"></xref> object."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])
  commentId: M:System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])
  id: SetSymCustomAttribute(System.String,System.Byte[])
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: SetSymCustomAttribute(String, Byte[])
  nameWithType: ConstructorBuilder.SetSymCustomAttribute(String, Byte[])
  fullName: ConstructorBuilder.SetSymCustomAttribute(String, Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets this constructor's custom attribute associated with symbolic information.
  remarks: "The following code sample illustrates the use of `SetSymCustomAttributes`.  \n  \n [!code-cpp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CPP/constructorbuilder_setsymcustomattribute.cpp#1)]\n [!code-csharp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CS/constructorbuilder_setsymcustomattribute.cs#1)]\n [!code-vb[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/VB/constructorbuilder_setsymcustomattribute.vb#1)]"
  syntax:
    content: public void SetSymCustomAttribute (string name, byte[] data);
    parameters:
    - id: name
      type: System.String
      description: The name of the custom attribute.
    - id: data
      type: System.Byte[]
      description: The value of the custom attribute.
  overload: System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The containing type has been created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>.  \n  \n -or-  \n  \n The module does not have a symbol writer defined. For example, the module is not a debug module."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.Signature
  commentId: P:System.Reflection.Emit.ConstructorBuilder.Signature
  id: Signature
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: Signature
  nameWithType: ConstructorBuilder.Signature
  fullName: ConstructorBuilder.Signature
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the signature of the field in the form of a string.
  syntax:
    content: public string Signature { get; }
    return:
      type: System.String
      description: Returns the signature of the field.
  overload: System.Reflection.Emit.ConstructorBuilder.Signature*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.ToString
  commentId: M:System.Reflection.Emit.ConstructorBuilder.ToString
  id: ToString
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: ToString()
  nameWithType: ConstructorBuilder.ToString()
  fullName: ConstructorBuilder.ToString()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns this <xref href="System.Reflection.Emit.ConstructorBuilder"></xref> instance as a <xref href="System.String"></xref>.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: Returns a <xref href="System.String"></xref> containing the name, attributes, and exceptions of this constructor, followed by the current Microsoft intermediate language (MSIL) stream.
  overload: System.Reflection.Emit.ConstructorBuilder.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: _ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: ConstructorBuilder._ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: ConstructorBuilder._ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Maps a set of names to a corresponding set of dispatch identifiers.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.
  syntax:
    content: void _ConstructorBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: rgszNames
      type: System.IntPtr
      description: Passed-in array of names to be mapped.
    - id: cNames
      type: System.UInt32
      description: Count of the names to be mapped.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret the names.
    - id: rgDispId
      type: System.IntPtr
      description: Caller-allocated array which receives the IDs corresponding to the names.
  overload: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: _ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: ConstructorBuilder._ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: ConstructorBuilder._ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.
  syntax:
    content: void _ConstructorBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: The type information to return.
    - id: lcid
      type: System.UInt32
      description: The locale identifier for the type information.
    - id: ppTInfo
      type: System.IntPtr
      description: Receives a pointer to the requested type information object.
  overload: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: _ConstructorBuilder.GetTypeInfoCount(UInt32)
  nameWithType: ConstructorBuilder._ConstructorBuilder.GetTypeInfoCount(UInt32)
  fullName: ConstructorBuilder._ConstructorBuilder.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.
  syntax:
    content: void _ConstructorBuilder.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: Points to a location that receives the number of type information interfaces provided by the object.
  overload: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.ConstructorBuilder
  langs:
  - csharp
  name: _ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: ConstructorBuilder._ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: ConstructorBuilder._ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Provides access to properties and methods exposed by an object.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.
  syntax:
    content: void _ConstructorBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: Identifies the member.
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret arguments.
    - id: wFlags
      type: System.Int16
      description: Flags describing the context of the call.
    - id: pDispParams
      type: System.IntPtr
      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.
    - id: pVarResult
      type: System.IntPtr
      description: Pointer to the location where the result is to be stored.
    - id: pExcepInfo
      type: System.IntPtr
      description: Pointer to a structure that contains exception information.
    - id: puArgErr
      type: System.IntPtr
      description: The index of the first argument that has an error.
  overload: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.NotImplementedException
  parent: System
  isExternal: false
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: System.Reflection.Emit.ConstructorBuilder.#ctor
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: ConstructorBuilder()
  nameWithType: ConstructorBuilder.ConstructorBuilder()
  fullName: ConstructorBuilder.ConstructorBuilder()
- uid: System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: AddDeclarativeSecurity(SecurityAction, PermissionSet)
  nameWithType: ConstructorBuilder.AddDeclarativeSecurity(SecurityAction, PermissionSet)
  fullName: ConstructorBuilder.AddDeclarativeSecurity(SecurityAction, PermissionSet)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Reflection.Emit.ConstructorBuilder.Attributes
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: Attributes
  nameWithType: ConstructorBuilder.Attributes
  fullName: ConstructorBuilder.Attributes
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.Emit.ConstructorBuilder.CallingConvention
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: CallingConvention
  nameWithType: ConstructorBuilder.CallingConvention
  fullName: ConstructorBuilder.CallingConvention
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: false
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Reflection.Emit.ConstructorBuilder.DeclaringType
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: DeclaringType
  nameWithType: ConstructorBuilder.DeclaringType
  fullName: ConstructorBuilder.DeclaringType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: DefineParameter(Int32, ParameterAttributes, String)
  nameWithType: ConstructorBuilder.DefineParameter(Int32, ParameterAttributes, String)
  fullName: ConstructorBuilder.DefineParameter(Int32, ParameterAttributes, String)
- uid: System.Reflection.Emit.ParameterBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: ParameterBuilder
  nameWithType: ParameterBuilder
  fullName: System.Reflection.Emit.ParameterBuilder
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: ParameterAttributes
  nameWithType: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: ConstructorBuilder.GetCustomAttributes(Boolean)
  fullName: ConstructorBuilder.GetCustomAttributes(Boolean)
- uid: System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: ConstructorBuilder.GetCustomAttributes(Type, Boolean)
  fullName: ConstructorBuilder.GetCustomAttributes(Type, Boolean)
- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetILGenerator(Int32)
  nameWithType: ConstructorBuilder.GetILGenerator(Int32)
  fullName: ConstructorBuilder.GetILGenerator(Int32)
- uid: System.Reflection.Emit.ILGenerator
  parent: System.Reflection.Emit
  isExternal: false
  name: ILGenerator
  nameWithType: ILGenerator
  fullName: System.Reflection.Emit.ILGenerator
- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetILGenerator()
  nameWithType: ConstructorBuilder.GetILGenerator()
  fullName: ConstructorBuilder.GetILGenerator()
- uid: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetMethodImplementationFlags()
  nameWithType: ConstructorBuilder.GetMethodImplementationFlags()
  fullName: ConstructorBuilder.GetMethodImplementationFlags()
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Reflection.Emit.ConstructorBuilder.GetModule
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetModule()
  nameWithType: ConstructorBuilder.GetModule()
  fullName: ConstructorBuilder.GetModule()
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Emit.ConstructorBuilder.GetParameters
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetParameters()
  nameWithType: ConstructorBuilder.GetParameters()
  fullName: ConstructorBuilder.GetParameters()
- uid: System.Reflection.ParameterInfo
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: false
  name: ParameterInfo[]
  nameWithType: ParameterInfo[]
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.ConstructorBuilder.GetToken
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetToken()
  nameWithType: ConstructorBuilder.GetToken()
  fullName: ConstructorBuilder.GetToken()
- uid: System.Reflection.Emit.MethodToken
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodToken
  nameWithType: MethodToken
  fullName: System.Reflection.Emit.MethodToken
- uid: System.Reflection.Emit.ConstructorBuilder.InitLocals
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: InitLocals
  nameWithType: ConstructorBuilder.InitLocals
  fullName: ConstructorBuilder.InitLocals
- uid: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: Invoke(BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorBuilder.Invoke(BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorBuilder.Invoke(BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorBuilder.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorBuilder.Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: IsDefined(Type, Boolean)
  nameWithType: ConstructorBuilder.IsDefined(Type, Boolean)
  fullName: ConstructorBuilder.IsDefined(Type, Boolean)
- uid: System.Reflection.Emit.ConstructorBuilder.MethodHandle
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: MethodHandle
  nameWithType: ConstructorBuilder.MethodHandle
  fullName: ConstructorBuilder.MethodHandle
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: false
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: MethodImplementationFlags
  nameWithType: ConstructorBuilder.MethodImplementationFlags
  fullName: ConstructorBuilder.MethodImplementationFlags
- uid: System.Reflection.Emit.ConstructorBuilder.Module
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: Module
  nameWithType: ConstructorBuilder.Module
  fullName: ConstructorBuilder.Module
- uid: System.Reflection.Emit.ConstructorBuilder.Name
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: Name
  nameWithType: ConstructorBuilder.Name
  fullName: ConstructorBuilder.Name
- uid: System.Reflection.Emit.ConstructorBuilder.ReflectedType
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: ReflectedType
  nameWithType: ConstructorBuilder.ReflectedType
  fullName: ConstructorBuilder.ReflectedType
- uid: System.Reflection.Emit.ConstructorBuilder.ReturnType
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: ReturnType
  nameWithType: ConstructorBuilder.ReturnType
  fullName: ConstructorBuilder.ReturnType
- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: ConstructorBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: ConstructorBuilder.SetCustomAttribute(CustomAttributeBuilder)
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  nameWithType: ConstructorBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: ConstructorBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: SetImplementationFlags(MethodImplAttributes)
  nameWithType: ConstructorBuilder.SetImplementationFlags(MethodImplAttributes)
  fullName: ConstructorBuilder.SetImplementationFlags(MethodImplAttributes)
- uid: System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)
  nameWithType: ConstructorBuilder.SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)
  fullName: ConstructorBuilder.SetMethodBody(Byte[], Int32, Byte[], IEnumerable<ExceptionHandler>, IEnumerable<Int32>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Reflection.Emit.ExceptionHandler
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: System.Reflection.Emit.ExceptionHandler
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<ExceptionHandler>
  nameWithType: IEnumerable<ExceptionHandler>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Emit.ExceptionHandler>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Emit.ExceptionHandler
    name: ExceptionHandler
    nameWithType: ExceptionHandler
    fullName: System.Reflection.Emit.ExceptionHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: SetSymCustomAttribute(String, Byte[])
  nameWithType: ConstructorBuilder.SetSymCustomAttribute(String, Byte[])
  fullName: ConstructorBuilder.SetSymCustomAttribute(String, Byte[])
- uid: System.Reflection.Emit.ConstructorBuilder.Signature
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: Signature
  nameWithType: ConstructorBuilder.Signature
  fullName: ConstructorBuilder.Signature
- uid: System.Reflection.Emit.ConstructorBuilder.ToString
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: ToString()
  nameWithType: ConstructorBuilder.ToString()
  fullName: ConstructorBuilder.ToString()
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: _ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: ConstructorBuilder._ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: ConstructorBuilder._ConstructorBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: _ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: ConstructorBuilder._ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: ConstructorBuilder._ConstructorBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: _ConstructorBuilder.GetTypeInfoCount(UInt32)
  nameWithType: ConstructorBuilder._ConstructorBuilder.GetTypeInfoCount(UInt32)
  fullName: ConstructorBuilder._ConstructorBuilder.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: _ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: ConstructorBuilder._ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: ConstructorBuilder._ConstructorBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.ConstructorBuilder.#ctor*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: ConstructorBuilder
  nameWithType: ConstructorBuilder.ConstructorBuilder
  fullName: ConstructorBuilder.ConstructorBuilder
  monikers:
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: AddDeclarativeSecurity
  nameWithType: ConstructorBuilder.AddDeclarativeSecurity
  fullName: ConstructorBuilder.AddDeclarativeSecurity
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.Attributes*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: Attributes
  nameWithType: ConstructorBuilder.Attributes
  fullName: ConstructorBuilder.Attributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.CallingConvention*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: CallingConvention
  nameWithType: ConstructorBuilder.CallingConvention
  fullName: ConstructorBuilder.CallingConvention
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.DeclaringType*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: DeclaringType
  nameWithType: ConstructorBuilder.DeclaringType
  fullName: ConstructorBuilder.DeclaringType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.DefineParameter*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: DefineParameter
  nameWithType: ConstructorBuilder.DefineParameter
  fullName: ConstructorBuilder.DefineParameter
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetCustomAttributes
  nameWithType: ConstructorBuilder.GetCustomAttributes
  fullName: ConstructorBuilder.GetCustomAttributes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.GetILGenerator*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetILGenerator
  nameWithType: ConstructorBuilder.GetILGenerator
  fullName: ConstructorBuilder.GetILGenerator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetMethodImplementationFlags
  nameWithType: ConstructorBuilder.GetMethodImplementationFlags
  fullName: ConstructorBuilder.GetMethodImplementationFlags
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.GetModule*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetModule
  nameWithType: ConstructorBuilder.GetModule
  fullName: ConstructorBuilder.GetModule
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.GetParameters*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetParameters
  nameWithType: ConstructorBuilder.GetParameters
  fullName: ConstructorBuilder.GetParameters
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.GetToken*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: GetToken
  nameWithType: ConstructorBuilder.GetToken
  fullName: ConstructorBuilder.GetToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.InitLocals*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: InitLocals
  nameWithType: ConstructorBuilder.InitLocals
  fullName: ConstructorBuilder.InitLocals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.Invoke*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: Invoke
  nameWithType: ConstructorBuilder.Invoke
  fullName: ConstructorBuilder.Invoke
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.IsDefined*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: IsDefined
  nameWithType: ConstructorBuilder.IsDefined
  fullName: ConstructorBuilder.IsDefined
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.MethodHandle*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: MethodHandle
  nameWithType: ConstructorBuilder.MethodHandle
  fullName: ConstructorBuilder.MethodHandle
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: MethodImplementationFlags
  nameWithType: ConstructorBuilder.MethodImplementationFlags
  fullName: ConstructorBuilder.MethodImplementationFlags
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.Module*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: Module
  nameWithType: ConstructorBuilder.Module
  fullName: ConstructorBuilder.Module
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.Name*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: Name
  nameWithType: ConstructorBuilder.Name
  fullName: ConstructorBuilder.Name
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.ReflectedType*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: ReflectedType
  nameWithType: ConstructorBuilder.ReflectedType
  fullName: ConstructorBuilder.ReflectedType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.ReturnType*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: ReturnType
  nameWithType: ConstructorBuilder.ReturnType
  fullName: ConstructorBuilder.ReturnType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: SetCustomAttribute
  nameWithType: ConstructorBuilder.SetCustomAttribute
  fullName: ConstructorBuilder.SetCustomAttribute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: SetImplementationFlags
  nameWithType: ConstructorBuilder.SetImplementationFlags
  fullName: ConstructorBuilder.SetImplementationFlags
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.SetMethodBody*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: SetMethodBody
  nameWithType: ConstructorBuilder.SetMethodBody
  fullName: ConstructorBuilder.SetMethodBody
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: SetSymCustomAttribute
  nameWithType: ConstructorBuilder.SetSymCustomAttribute
  fullName: ConstructorBuilder.SetSymCustomAttribute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.Signature*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: Signature
  nameWithType: ConstructorBuilder.Signature
  fullName: ConstructorBuilder.Signature
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.ToString*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: ToString
  nameWithType: ConstructorBuilder.ToString
  fullName: ConstructorBuilder.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames
  nameWithType: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames
  fullName: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo
  nameWithType: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo
  fullName: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount
  nameWithType: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount
  fullName: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke*
  parent: System.Reflection.Emit.ConstructorBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ConstructorBuilder.Invoke
  nameWithType: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.Invoke
  fullName: ConstructorBuilder.System.Runtime.InteropServices._ConstructorBuilder.Invoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ConstructorBuilder.xml
- uid: System.Reflection.ConstructorInfo.Equals(System.Object)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: ConstructorInfo.Equals(Object)
  fullName: ConstructorInfo.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Reflection.ConstructorInfo.GetHashCode
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: ConstructorInfo.GetHashCode()
  fullName: ConstructorInfo.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: CustomAttributes
  nameWithType: MemberInfo.CustomAttributes
  fullName: MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.GetCustomAttributesData
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: GetCustomAttributesData()
  nameWithType: MemberInfo.GetCustomAttributesData()
  fullName: MemberInfo.GetCustomAttributesData()
- uid: System.Reflection.ConstructorInfo.MemberType
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: MemberType
  nameWithType: ConstructorInfo.MemberType
  fullName: ConstructorInfo.MemberType
- uid: System.Reflection.MemberInfo.MetadataToken
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: MetadataToken
  nameWithType: MemberInfo.MetadataToken
  fullName: MemberInfo.MetadataToken
- uid: System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: op_Equality(MemberInfo, MemberInfo)
  nameWithType: MemberInfo.op_Equality(MemberInfo, MemberInfo)
  fullName: MemberInfo.op_Equality(MemberInfo, MemberInfo)
- uid: System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: op_Inequality(MemberInfo, MemberInfo)
  nameWithType: MemberInfo.op_Inequality(MemberInfo, MemberInfo)
  fullName: MemberInfo.op_Inequality(MemberInfo, MemberInfo)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.IsDefined(Type, Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetType()
  nameWithType: MemberInfo._MemberInfo.GetType()
  fullName: MemberInfo._MemberInfo.GetType()
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetTypeInfoCount(UInt32)
  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
  fullName: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Reflection.MethodBase.ContainsGenericParameters
  parent: System.Reflection.MethodBase
  isExternal: false
  name: ContainsGenericParameters
  nameWithType: MethodBase.ContainsGenericParameters
  fullName: MethodBase.ContainsGenericParameters
- uid: System.Reflection.MethodBase.GetCurrentMethod
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetCurrentMethod()
  nameWithType: MethodBase.GetCurrentMethod()
  fullName: MethodBase.GetCurrentMethod()
- uid: System.Reflection.MethodBase.GetGenericArguments
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetGenericArguments()
  nameWithType: MethodBase.GetGenericArguments()
  fullName: MethodBase.GetGenericArguments()
- uid: System.Reflection.MethodBase.GetMethodBody
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetMethodBody()
  nameWithType: MethodBase.GetMethodBody()
  fullName: MethodBase.GetMethodBody()
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetMethodFromHandle(RuntimeMethodHandle)
  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)
  fullName: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)
- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)
  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)
  fullName: MethodBase.GetMethodFromHandle(RuntimeMethodHandle, RuntimeTypeHandle)
- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  parent: System.Reflection.MethodBase
  isExternal: false
  name: Invoke(Object, Object[])
  nameWithType: MethodBase.Invoke(Object, Object[])
  fullName: MethodBase.Invoke(Object, Object[])
- uid: System.Reflection.MethodBase.IsAbstract
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsAbstract
  nameWithType: MethodBase.IsAbstract
  fullName: MethodBase.IsAbstract
- uid: System.Reflection.MethodBase.IsAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsAssembly
  nameWithType: MethodBase.IsAssembly
  fullName: MethodBase.IsAssembly
- uid: System.Reflection.MethodBase.IsConstructor
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsConstructor
  nameWithType: MethodBase.IsConstructor
  fullName: MethodBase.IsConstructor
- uid: System.Reflection.MethodBase.IsFamily
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsFamily
  nameWithType: MethodBase.IsFamily
  fullName: MethodBase.IsFamily
- uid: System.Reflection.MethodBase.IsFamilyAndAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: MethodBase.IsFamilyAndAssembly
  fullName: MethodBase.IsFamilyAndAssembly
- uid: System.Reflection.MethodBase.IsFamilyOrAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: MethodBase.IsFamilyOrAssembly
  fullName: MethodBase.IsFamilyOrAssembly
- uid: System.Reflection.MethodBase.IsFinal
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsFinal
  nameWithType: MethodBase.IsFinal
  fullName: MethodBase.IsFinal
- uid: System.Reflection.MethodBase.IsGenericMethod
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsGenericMethod
  nameWithType: MethodBase.IsGenericMethod
  fullName: MethodBase.IsGenericMethod
- uid: System.Reflection.MethodBase.IsGenericMethodDefinition
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsGenericMethodDefinition
  nameWithType: MethodBase.IsGenericMethodDefinition
  fullName: MethodBase.IsGenericMethodDefinition
- uid: System.Reflection.MethodBase.IsHideBySig
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsHideBySig
  nameWithType: MethodBase.IsHideBySig
  fullName: MethodBase.IsHideBySig
- uid: System.Reflection.MethodBase.IsPrivate
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsPrivate
  nameWithType: MethodBase.IsPrivate
  fullName: MethodBase.IsPrivate
- uid: System.Reflection.MethodBase.IsPublic
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsPublic
  nameWithType: MethodBase.IsPublic
  fullName: MethodBase.IsPublic
- uid: System.Reflection.MethodBase.IsSecurityCritical
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsSecurityCritical
  nameWithType: MethodBase.IsSecurityCritical
  fullName: MethodBase.IsSecurityCritical
- uid: System.Reflection.MethodBase.IsSecuritySafeCritical
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsSecuritySafeCritical
  nameWithType: MethodBase.IsSecuritySafeCritical
  fullName: MethodBase.IsSecuritySafeCritical
- uid: System.Reflection.MethodBase.IsSecurityTransparent
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsSecurityTransparent
  nameWithType: MethodBase.IsSecurityTransparent
  fullName: MethodBase.IsSecurityTransparent
- uid: System.Reflection.MethodBase.IsSpecialName
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsSpecialName
  nameWithType: MethodBase.IsSpecialName
  fullName: MethodBase.IsSpecialName
- uid: System.Reflection.MethodBase.IsStatic
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsStatic
  nameWithType: MethodBase.IsStatic
  fullName: MethodBase.IsStatic
- uid: System.Reflection.MethodBase.IsVirtual
  parent: System.Reflection.MethodBase
  isExternal: false
  name: IsVirtual
  nameWithType: MethodBase.IsVirtual
  fullName: MethodBase.IsVirtual
- uid: System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: op_Equality(MethodBase, MethodBase)
  nameWithType: MethodBase.op_Equality(MethodBase, MethodBase)
  fullName: MethodBase.op_Equality(MethodBase, MethodBase)
- uid: System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: op_Inequality(MethodBase, MethodBase)
  nameWithType: MethodBase.op_Inequality(MethodBase, MethodBase)
  fullName: MethodBase.op_Inequality(MethodBase, MethodBase)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: MethodBase._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: MethodBase._MethodBase.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.GetType()
  nameWithType: MethodBase._MethodBase.GetType()
  fullName: MethodBase._MethodBase.GetType()
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: MethodBase._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: MethodBase._MethodBase.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.GetTypeInfoCount(UInt32)
  nameWithType: MethodBase._MethodBase.GetTypeInfoCount(UInt32)
  fullName: MethodBase._MethodBase.GetTypeInfoCount(UInt32)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: MethodBase._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: MethodBase._MethodBase.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsAbstract
  nameWithType: MethodBase._MethodBase.IsAbstract
  fullName: MethodBase._MethodBase.IsAbstract
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsAssembly
  nameWithType: MethodBase._MethodBase.IsAssembly
  fullName: MethodBase._MethodBase.IsAssembly
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsConstructor
  nameWithType: MethodBase._MethodBase.IsConstructor
  fullName: MethodBase._MethodBase.IsConstructor
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsFamily
  nameWithType: MethodBase._MethodBase.IsFamily
  fullName: MethodBase._MethodBase.IsFamily
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsFamilyAndAssembly
  nameWithType: MethodBase._MethodBase.IsFamilyAndAssembly
  fullName: MethodBase._MethodBase.IsFamilyAndAssembly
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsFamilyOrAssembly
  nameWithType: MethodBase._MethodBase.IsFamilyOrAssembly
  fullName: MethodBase._MethodBase.IsFamilyOrAssembly
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsFinal
  nameWithType: MethodBase._MethodBase.IsFinal
  fullName: MethodBase._MethodBase.IsFinal
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsHideBySig
  nameWithType: MethodBase._MethodBase.IsHideBySig
  fullName: MethodBase._MethodBase.IsHideBySig
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsPrivate
  nameWithType: MethodBase._MethodBase.IsPrivate
  fullName: MethodBase._MethodBase.IsPrivate
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsPublic
  nameWithType: MethodBase._MethodBase.IsPublic
  fullName: MethodBase._MethodBase.IsPublic
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsSpecialName
  nameWithType: MethodBase._MethodBase.IsSpecialName
  fullName: MethodBase._MethodBase.IsSpecialName
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsStatic
  nameWithType: MethodBase._MethodBase.IsStatic
  fullName: MethodBase._MethodBase.IsStatic
- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual
  parent: System.Reflection.MethodBase
  isExternal: false
  name: _MethodBase.IsVirtual
  nameWithType: MethodBase._MethodBase.IsVirtual
  fullName: MethodBase._MethodBase.IsVirtual
- uid: System.Reflection.ConstructorInfo.ConstructorName
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: ConstructorName
  nameWithType: ConstructorInfo.ConstructorName
  fullName: ConstructorInfo.ConstructorName
- uid: System.Reflection.ConstructorInfo.Invoke(System.Object[])
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: Invoke(Object[])
  nameWithType: ConstructorInfo.Invoke(Object[])
  fullName: ConstructorInfo.Invoke(Object[])
- uid: System.Reflection.ConstructorInfo.op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: op_Equality(ConstructorInfo, ConstructorInfo)
  nameWithType: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)
  fullName: ConstructorInfo.op_Equality(ConstructorInfo, ConstructorInfo)
- uid: System.Reflection.ConstructorInfo.op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: op_Inequality(ConstructorInfo, ConstructorInfo)
  nameWithType: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)
  fullName: ConstructorInfo.op_Inequality(ConstructorInfo, ConstructorInfo)
- uid: System.Reflection.ConstructorInfo.TypeConstructorName
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: TypeConstructorName
  nameWithType: ConstructorInfo.TypeConstructorName
  fullName: ConstructorInfo.TypeConstructorName
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: ConstructorInfo._ConstructorInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.GetType()
  nameWithType: ConstructorInfo._ConstructorInfo.GetType()
  fullName: ConstructorInfo._ConstructorInfo.GetType()
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.GetTypeInfoCount(UInt32)
  nameWithType: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)
  fullName: ConstructorInfo._ConstructorInfo.GetTypeInfoCount(UInt32)
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: ConstructorInfo._ConstructorInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorInfo._ConstructorInfo.Invoke_2(Object, BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_3(System.Object,System.Object[])
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.Invoke_3(Object, Object[])
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])
  fullName: ConstructorInfo._ConstructorInfo.Invoke_3(Object, Object[])
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)
  fullName: ConstructorInfo._ConstructorInfo.Invoke_4(BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_5(System.Object[])
  parent: System.Reflection.ConstructorInfo
  isExternal: false
  name: _ConstructorInfo.Invoke_5(Object[])
  nameWithType: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])
  fullName: ConstructorInfo._ConstructorInfo.Invoke_5(Object[])
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfoExtensions
  isExternal: false
  name: GetMetadataToken(MemberInfo)
  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)
  fullName: MemberInfoExtensions.GetMetadataToken(MemberInfo)
- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfoExtensions
  isExternal: false
  name: HasMetadataToken(MemberInfo)
  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)
  fullName: MemberInfoExtensions.HasMetadataToken(MemberInfo)
- uid: System.Runtime.InteropServices._ConstructorBuilder
  parent: System.Runtime.InteropServices
  isExternal: false
  name: _ConstructorBuilder
  nameWithType: _ConstructorBuilder
  fullName: System.Runtime.InteropServices._ConstructorBuilder
