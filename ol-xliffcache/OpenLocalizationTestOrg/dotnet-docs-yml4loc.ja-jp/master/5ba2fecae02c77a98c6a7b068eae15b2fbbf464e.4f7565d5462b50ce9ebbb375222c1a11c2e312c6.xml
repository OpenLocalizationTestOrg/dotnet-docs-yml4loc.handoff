{"nodes":[{"content":"Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.","nodes":[{"pos":[0,129],"content":"Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.","nodes":[{"content":"Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.","pos":[0,129],"nodes":[{"content":"Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database.","pos":[0,97]},{"content":"This class cannot be inherited.","pos":[98,129]}]}]}],"pos":[4202,4332],"yaml":true},{"content":"When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the read/write properties are set to their initial values. For a list of these values, see the <xref:System.Data.SqlClient.SqlCommand> constructor.  \n  \n <xref:System.Data.SqlClient.SqlCommand> features the following methods for executing commands at a SQL Server database:  \n  \n|Item|Description|  \n|----------|-----------------|  \n|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>|Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements. Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> which finishes the operation, typically on a separate thread.|  \n|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>|Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand> and retrieves one or more results sets from the server. Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> which finishes the operation, typically on a separate thread.|  \n|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>|Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>. Each call to `BeginExecuteXmlReader` must be paired with a call to `EndExecuteXmlReader`, which finishes the operation, typically on a separate thread, and returns an <xref:System.Xml.XmlReader> object.|  \n|<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>|Executes commands that return rows. For increased performance, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> invokes commands using the Transact-SQL `sp_executesql` system stored procedure. Therefore, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.|  \n|<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>|Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.|  \n|<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>|Retrieves a single value (for example, an aggregate value) from a database.|  \n|<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>|Sends the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> to the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> and builds an <xref:System.Xml.XmlReader> object.|  \n  \n You can reset the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property and reuse the <xref:System.Data.SqlClient.SqlCommand> object. However, you must close the <xref:System.Data.SqlClient.SqlDataReader> before you can execute a new or previous command.  \n  \n If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue.  \n  \n> [!NOTE]\n>  Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.","nodes":[{"pos":[0,219],"content":"When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the read/write properties are set to their initial values. For a list of these values, see the <xref:System.Data.SqlClient.SqlCommand> constructor.","nodes":[{"content":"When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the read/write properties are set to their initial values. For a list of these values, see the <xref:System.Data.SqlClient.SqlCommand> constructor.","pos":[0,219],"nodes":[{"content":"When an instance of <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is created, the read/write properties are set to their initial values.","pos":[0,130],"source":"When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the read/write properties are set to their initial values."},{"content":"For a list of these values, see the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> constructor.","pos":[131,219],"source":" For a list of these values, see the <xref:System.Data.SqlClient.SqlCommand> constructor."}]}]},{"pos":[226,345],"content":"<xref:System.Data.SqlClient.SqlCommand> features the following methods for executing commands at a SQL Server database:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> features the following methods for executing commands at a SQL Server database:","pos":[0,119],"source":"<xref:System.Data.SqlClient.SqlCommand> features the following methods for executing commands at a SQL Server database:"}]},{"pos":[352,356],"content":"Item","nodes":[{"content":"Item","pos":[0,4]}]},{"pos":[357,368],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[406,469],"content":"<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>","nodes":[]},{"pos":[470,935],"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements. Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> which finishes the operation, typically on a separate thread.","nodes":[{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements. Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> which finishes the operation, typically on a separate thread.","pos":[0,465],"nodes":[{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements.","pos":[0,234],"source":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements."},{"content":"Each call to <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> must be paired with a call to <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> which finishes the operation, typically on a separate thread.","pos":[235,465],"source":" Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> which finishes the operation, typically on a separate thread."}]}]},{"pos":[940,1001],"content":"<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>","nodes":[]},{"pos":[1002,1437],"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand> and retrieves one or more results sets from the server. Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> which finishes the operation, typically on a separate thread.","nodes":[{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand> and retrieves one or more results sets from the server. Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> which finishes the operation, typically on a separate thread.","pos":[0,435],"nodes":[{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and retrieves one or more results sets from the server.","pos":[0,208],"source":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand> and retrieves one or more results sets from the server."},{"content":"Each call to <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> must be paired with a call to <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> which finishes the operation, typically on a separate thread.","pos":[209,435],"source":" Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> which finishes the operation, typically on a separate thread."}]}]},{"pos":[1442,1506],"content":"<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>","nodes":[]},{"pos":[1507,1863],"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>. Each call to `BeginExecuteXmlReader` must be paired with a call to `EndExecuteXmlReader`, which finishes the operation, typically on a separate thread, and returns an <xref:System.Xml.XmlReader> object.","nodes":[{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.","pos":[0,153],"source":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>."},{"content":"Each call to <ph id=\"ph1\">`BeginExecuteXmlReader`</ph> must be paired with a call to <ph id=\"ph2\">`EndExecuteXmlReader`</ph>, which finishes the operation, typically on a separate thread, and returns an <ph id=\"ph3\">&lt;xref:System.Xml.XmlReader&gt;</ph> object.","pos":[154,356],"source":" Each call to `BeginExecuteXmlReader` must be paired with a call to `EndExecuteXmlReader`, which finishes the operation, typically on a separate thread, and returns an <xref:System.Xml.XmlReader> object."}]},{"pos":[1868,1924],"content":"<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>","nodes":[]},{"pos":[1925,2298],"content":"Executes commands that return rows. For increased performance, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> invokes commands using the Transact-SQL `sp_executesql` system stored procedure. Therefore, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.","nodes":[{"content":"Executes commands that return rows.","pos":[0,35]},{"content":"For increased performance, <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> invokes commands using the Transact-SQL <ph id=\"ph2\">`sp_executesql`</ph> system stored procedure.","pos":[36,200],"source":" For increased performance, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> invokes commands using the Transact-SQL `sp_executesql` system stored procedure."},{"content":"Therefore, <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.","pos":[201,373],"source":" Therefore, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements."}]},{"pos":[2303,2361],"content":"<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>","nodes":[]},{"pos":[2362,2444],"content":"Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.","nodes":[{"content":"Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.","pos":[0,82]}]},{"pos":[2449,2505],"content":"<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>","nodes":[]},{"pos":[2506,2581],"content":"Retrieves a single value (for example, an aggregate value) from a database.","nodes":[{"content":"Retrieves a single value (for example, an aggregate value) from a database.","pos":[0,75]}]},{"pos":[2586,2645],"content":"<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>","nodes":[]},{"pos":[2646,2821],"content":"Sends the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> to the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> and builds an <xref:System.Xml.XmlReader> object.","nodes":[{"content":"Sends the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> to the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph> and builds an <ph id=\"ph3\">&lt;xref:System.Xml.XmlReader&gt;</ph> object.","pos":[0,175],"source":"Sends the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> to the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> and builds an <xref:System.Xml.XmlReader> object."}]},{"pos":[2829,3093],"content":"You can reset the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property and reuse the <xref:System.Data.SqlClient.SqlCommand> object. However, you must close the <xref:System.Data.SqlClient.SqlDataReader> before you can execute a new or previous command.","nodes":[{"content":"You can reset the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property and reuse the <xref:System.Data.SqlClient.SqlCommand> object. However, you must close the <xref:System.Data.SqlClient.SqlDataReader> before you can execute a new or previous command.","pos":[0,264],"nodes":[{"content":"You can reset the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property and reuse the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.","pos":[0,143],"source":"You can reset the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property and reuse the <xref:System.Data.SqlClient.SqlCommand> object."},{"content":"However, you must close the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> before you can execute a new or previous command.","pos":[144,264],"source":" However, you must close the <xref:System.Data.SqlClient.SqlDataReader> before you can execute a new or previous command."}]}]},{"pos":[3100,3502],"content":"If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue.","nodes":[{"content":"If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue.","pos":[0,402],"nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is generated by the method executing a <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> remains open when the severity level is 19 or less.","pos":[0,225],"source":"If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less."},{"content":"When the severity level is 20 or greater, the server ordinarily closes the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.","pos":[226,344],"source":" When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>."},{"content":"However, the user can reopen the connection and continue.","pos":[345,402]}]}]},{"pos":[3510,3632],"content":"[!NOTE]\n Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.","leadings":["","> "],"nodes":[{"content":"Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.","pos":[9,120]}]}],"pos":[4343,7997],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class."}],"pos":[26130,26225],"yaml":true},{"content":"The base constructor initializes all fields to their default values. The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.  \n  \n|Properties|Initial value|  \n|----------------|-------------------|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|empty string (\"\")|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Null|  \n  \n You can change the value for any of these properties through a separate call to the property.","nodes":[{"pos":[0,178],"content":"The base constructor initializes all fields to their default values. The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.","nodes":[{"content":"The base constructor initializes all fields to their default values. The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.","pos":[0,178],"nodes":[{"content":"The base constructor initializes all fields to their default values.","pos":[0,68]},{"content":"The following table shows initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.","pos":[69,178],"source":" The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>."}]}]},{"pos":[185,195],"content":"Properties","nodes":[{"content":"Properties","pos":[0,10]}]},{"pos":[196,209],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[255,309],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>","nodes":[]},{"pos":[310,327],"content":"empty string (\"\")","nodes":[{"content":"empty string (\"\")","pos":[0,17]}]},{"pos":[332,389],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>","nodes":[]},{"pos":[390,392],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[397,451],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>","nodes":[]},{"pos":[475,528],"content":"<xref:System.Data.SqlClient.SqlCommand.Connection%2A>","nodes":[]},{"pos":[529,533],"content":"Null","nodes":[{"content":"Null","pos":[0,4]}]},{"pos":[541,634],"content":"You can change the value for any of these properties through a separate call to the property.","nodes":[{"content":"You can change the value for any of these properties through a separate call to the property.","pos":[0,93]}]}],"pos":[26236,26884],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with the text of the query.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> class with the text of the query.","source":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with the text of the query."}],"pos":[28746,28868],"yaml":true},{"content":"When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the following read/write properties are set to initial values.  \n  \n|Properties|Initial value|  \n|----------------|-------------------|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|null|  \n  \n You can change the value for any of these properties through a separate call to the property.","nodes":[{"pos":[0,134],"content":"When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the following read/write properties are set to initial values.","nodes":[{"content":"When an instance of <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is created, the following read/write properties are set to initial values.","pos":[0,134],"source":"When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the following read/write properties are set to initial values."}]},{"pos":[141,151],"content":"Properties","nodes":[{"content":"Properties","pos":[0,10]}]},{"pos":[152,165],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[211,265],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>","nodes":[]},{"pos":[280,337],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>","nodes":[]},{"pos":[338,340],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[345,399],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>","nodes":[]},{"pos":[423,476],"content":"<xref:System.Data.SqlClient.SqlCommand.Connection%2A>","nodes":[]},{"pos":[477,481],"content":"null","nodes":[{"content":"null","pos":[0,4]}]},{"pos":[489,582],"content":"You can change the value for any of these properties through a separate call to the property.","nodes":[{"content":"You can change the value for any of these properties through a separate call to the property.","pos":[0,93]}]}],"pos":[28879,29473],"yaml":true,"extradata":"MT"},{"content":"The text of the query.","nodes":[{"pos":[0,22],"content":"The text of the query.","nodes":[{"content":"The text of the query.","pos":[0,22]}]}],"pos":[30111,30134],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with the text of the query and a <xref href=\"System.Data.SqlClient.SqlConnection\"></xref>.","nodes":[{"pos":[0,184],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> class with the text of the query and a <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with the text of the query and a <xref href=\"System.Data.SqlClient.SqlConnection\"></xref>."}],"pos":[31585,31770],"yaml":true},{"content":"The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.  \n  \n|Properties|Initial value|  \n|----------------|-------------------|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.|  \n  \n You can change the value for any of these parameters by setting the related property.","nodes":[{"pos":[0,109],"content":"The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.","nodes":[{"content":"The following table shows initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.","pos":[0,109],"source":"The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>."}]},{"pos":[116,126],"content":"Properties","nodes":[{"content":"Properties","pos":[0,10]}]},{"pos":[127,140],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[186,240],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>","nodes":[]},{"pos":[255,312],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>","nodes":[]},{"pos":[313,315],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[320,374],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>","nodes":[]},{"pos":[398,451],"content":"<xref:System.Data.SqlClient.SqlCommand.Connection%2A>","nodes":[]},{"pos":[452,550],"content":"A new <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is the value for the <ph id=\"ph2\">`connection`</ph> parameter.","source":"A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter."},{"pos":[558,643],"content":"You can change the value for any of these parameters by setting the related property.","nodes":[{"content":"You can change the value for any of these parameters by setting the related property.","pos":[0,85]}]}],"pos":[31781,32436],"yaml":true,"extradata":"MT"},{"content":"The text of the query.","nodes":[{"pos":[0,22],"content":"The text of the query.","nodes":[{"content":"The text of the query.","pos":[0,22]}]}],"pos":[33103,33126],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> that represents the connection to an instance of SQL Server.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> that represents the connection to an instance of SQL Server.","source":"A <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> that represents the connection to an instance of SQL Server."}],"pos":[33214,33334],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with the text of the query, a <xref href=\"System.Data.SqlClient.SqlConnection\"></xref>, and the <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref>.","nodes":[{"pos":[0,248],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> class with the text of the query, a <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph>, and the <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlTransaction\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with the text of the query, a <xref href=\"System.Data.SqlClient.SqlConnection\"></xref>, and the <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref>."}],"pos":[34944,35193],"yaml":true},{"content":"The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.  \n  \n|Properties|Initial value|  \n|----------------|-------------------|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.|  \n  \n You can change the value for any of these parameters by setting the related property.","nodes":[{"pos":[0,109],"content":"The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.","nodes":[{"content":"The following table shows initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.","pos":[0,109],"source":"The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>."}]},{"pos":[116,126],"content":"Properties","nodes":[{"content":"Properties","pos":[0,10]}]},{"pos":[127,140],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[186,240],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>","nodes":[]},{"pos":[255,312],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>","nodes":[]},{"pos":[313,315],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[320,374],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>","nodes":[]},{"pos":[398,451],"content":"<xref:System.Data.SqlClient.SqlCommand.Connection%2A>","nodes":[]},{"pos":[452,550],"content":"A new <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is the value for the <ph id=\"ph2\">`connection`</ph> parameter.","source":"A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter."},{"pos":[558,643],"content":"You can change the value for any of these parameters by setting the related property.","nodes":[{"content":"You can change the value for any of these parameters by setting the related property.","pos":[0,85]}]}],"pos":[35204,35859],"yaml":true,"extradata":"MT"},{"content":"The text of the query.","nodes":[{"pos":[0,22],"content":"The text of the query.","nodes":[{"content":"The text of the query.","pos":[0,22]}]}],"pos":[36095,36118],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> that represents the connection to an instance of SQL Server.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> that represents the connection to an instance of SQL Server.","source":"A <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> that represents the connection to an instance of SQL Server."}],"pos":[36206,36326],"yaml":true},{"content":"The <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref> in which the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> executes.","nodes":[{"pos":[0,138],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlTransaction\"&gt;&lt;/xref&gt;</ph> in which the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> executes.","source":"The <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref> in which the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> executes."}],"pos":[36416,36555],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with specified command text, connection, transaction, and encryption setting.","nodes":[{"pos":[0,171],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> class with specified command text, connection, transaction, and encryption setting.","source":"Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with specified command text, connection, transaction, and encryption setting."}],"pos":[38396,38568],"yaml":true},{"content":"The text of the query.","nodes":[{"pos":[0,22],"content":"The text of the query.","nodes":[{"content":"The text of the query.","pos":[0,22]}]}],"pos":[38885,38908],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> that represents the connection to an instance of SQL Server.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> that represents the connection to an instance of SQL Server.","source":"A <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> that represents the connection to an instance of SQL Server."}],"pos":[38996,39116],"yaml":true},{"content":"The <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref> in which the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> executes.","nodes":[{"pos":[0,138],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlTransaction\"&gt;&lt;/xref&gt;</ph> in which the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> executes.","source":"The <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref> in which the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> executes."}],"pos":[39206,39345],"yaml":true},{"content":"The encryption setting. For more information, see [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).","nodes":[{"pos":[0,119],"content":"The encryption setting. For more information, see [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).","nodes":[{"content":"The encryption setting.","pos":[0,23]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Always Encrypted<ept id=\"p1\">](https://msdn.microsoft.com/library/mt163865.aspx)</ept>.","pos":[24,119],"source":" For more information, see [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx)."}]}],"pos":[39466,39586],"yaml":true},{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.","nodes":[{"pos":[0,167],"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","source":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."}],"pos":[40493,40661],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.  \n  \n Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.","nodes":[{"pos":[0,1176],"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method starts the process of asynchronously executing a <ph id=\"ph2\">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.","pos":[0,295],"source":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing."},{"content":"When the statement has completed, developers must call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method to finish the operation.","pos":[296,448],"source":" When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method returns immediately (<ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect on <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), but until the code executes the corresponding <ph id=\"ph4\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id=\"ph5\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.","pos":[449,958],"source":" The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> before the command's execution is completed causes the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.","pos":[959,1176],"source":" Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished."}]},{"pos":[1183,1485],"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","pos":[0,302],"nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously.","pos":[0,79]},{"content":"If a large command or many parameters are sent, this method may block during writes.","pos":[80,164]},{"content":"After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","pos":[165,302]}]}]},{"pos":[1492,1971],"content":"Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.","nodes":[{"content":"Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id=\"ph1\">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id=\"ph4\">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id=\"ph5\">&lt;xref:System.IAsyncResult&gt;</ph>.","pos":[0,479],"source":"Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>."}]}],"pos":[40672,42650],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref>, which returns the number of affected rows.","nodes":[{"pos":[0,276],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph>, which returns the number of affected rows.","source":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref>, which returns the number of affected rows."}],"pos":[43552,43829],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[44010,44899],"yaml":true},{"content":"Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,57],"content":"Any error that occurred while executing the command text.","nodes":[{"content":"Any error that occurred while executing the command text.","pos":[0,57]}]},{"pos":[64,246],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[45013,45264],"yaml":true},{"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,184],"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","source":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."},{"pos":[191,433],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[45374,45818],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[45906,46227],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[46333,46646],"yaml":true},{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>, given a callback procedure and state information.","nodes":[{"pos":[0,217],"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>, given a callback procedure and state information.","source":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>, given a callback procedure and state information."}],"pos":[47913,48131],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `asyncStateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.  \n  \n Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.  \n  \n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.","nodes":[{"pos":[0,1149],"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","nodes":[{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","pos":[0,1149],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.","pos":[0,268],"source":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing."},{"content":"When the statement has completed, developers must call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method to finish the operation.","pos":[269,421],"source":" When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method returns immediately (<ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect on <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), but until the code executes the corresponding <ph id=\"ph4\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id=\"ph5\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.","pos":[422,931],"source":" The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> before the command's execution is completed causes the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.","pos":[932,1149],"source":" Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished."}]}]},{"pos":[1156,1654],"content":"The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `asyncStateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">`callback`</ph> parameter lets you specify an <ph id=\"ph2\">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.","pos":[0,130],"source":"The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed."},{"content":"You can call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.","pos":[131,305],"source":" You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method from within this delegate procedure, or from any other location within your application."},{"content":"In addition, you can pass any object in the <ph id=\"ph1\">`asyncStateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id=\"ph2\">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.","pos":[306,498],"source":" In addition, you can pass any object in the `asyncStateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property."}]},{"pos":[1661,1963],"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","pos":[0,302],"nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously.","pos":[0,79]},{"content":"If a large command or many parameters are sent, this method may block during writes.","pos":[80,164]},{"content":"After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","pos":[165,302]}]}]},{"pos":[1970,2474],"content":"Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.","nodes":[{"content":"Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.","pos":[0,504],"nodes":[{"content":"Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.","pos":[0,251]},{"content":"For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.","pos":[252,450]},{"content":"The example in this topic demonstrates this behavior.","pos":[451,504]}]}]},{"pos":[2481,2785],"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.","nodes":[{"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.","pos":[0,304],"nodes":[{"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.","pos":[0,111]},{"content":"You must handle the exception in the callback procedure, not in the main application.","pos":[112,197]},{"content":"See the example in this topic for additional information on handling exceptions in the callback procedure.","pos":[198,304]}]}]}],"pos":[48142,50938],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.","nodes":[{"pos":[0,205],"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that is invoked when the command's execution has completed.","pos":[0,113],"source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed."},{"content":"Pass <ph id=\"ph1\">`null`</ph> (<ph id=\"ph2\">`Nothing`</ph> in Microsoft Visual Basic) to indicate that no callback is required.","pos":[114,205],"source":" Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required."}]}],"pos":[52441,52647],"yaml":true},{"content":"A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.","nodes":[{"pos":[0,197],"content":"A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.","nodes":[{"content":"A user-defined state object that is passed to the callback procedure.","pos":[0,69]},{"content":"Retrieve this object from within the callback procedure using the <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult.AsyncState\"&gt;&lt;/xref&gt;</ph> property.","pos":[70,197],"source":" Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property."}]}],"pos":[52714,52912],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref>, which returns the number of affected rows.","nodes":[{"pos":[0,276],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph>, which returns the number of affected rows.","source":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref>, which returns the number of affected rows."}],"pos":[52975,53252],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[53433,54322],"yaml":true},{"content":"Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,57],"content":"Any error that occurred while executing the command text.","nodes":[{"content":"Any error that occurred while executing the command text.","pos":[0,57]}]},{"pos":[64,246],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[54436,54687],"yaml":true},{"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,184],"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","source":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."},{"pos":[191,433],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[54797,55241],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[55329,55650],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[55756,56069],"yaml":true},{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>, and retrieves one or more result sets from the server.","nodes":[{"pos":[0,222],"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>, and retrieves one or more result sets from the server.","source":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>, and retrieves one or more result sets from the server."}],"pos":[57153,57376],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \n  \n Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"pos":[0,1074],"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","nodes":[{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","pos":[0,1074],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.","pos":[0,258],"source":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing."},{"content":"When the statement has completed, developers must call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.","pos":[259,493],"source":" When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.","pos":[494,858],"source":" The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.","pos":[859,1074],"source":" Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished."}]}]},{"pos":[1081,1627],"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.","nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.","pos":[0,546],"nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously.","pos":[0,79]},{"content":"If a large command or many parameters are sent, this method may block during writes.","pos":[80,164]},{"content":"After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","pos":[165,302]},{"content":"Although command execution is asynchronous, value fetching is still synchronous.","pos":[303,383]},{"content":"This means that calls to <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.","pos":[384,546],"source":" This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks."}]}]},{"pos":[1634,2111],"content":"Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.","nodes":[{"content":"Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id=\"ph1\">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id=\"ph4\">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id=\"ph5\">&lt;xref:System.IAsyncResult&gt;</ph>.","pos":[0,477],"source":"Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>."}]},{"pos":[2118,2738],"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[0,620],"nodes":[{"content":"If you use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.","pos":[0,274],"source":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each."},{"content":"To avoid this behavior, use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.","pos":[275,455],"source":" To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries."},{"content":"For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[456,620]}]}]}],"pos":[57387,60136],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance that can be used to retrieve the returned rows.","nodes":[{"pos":[0,361],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph>, which returns a <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> instance that can be used to retrieve the returned rows.","source":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance that can be used to retrieve the returned rows."}],"pos":[61007,61369],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[61548,62437],"yaml":true},{"content":"Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,57],"content":"Any error that occurred while executing the command text.","nodes":[{"content":"Any error that occurred while executing the command text.","pos":[0,57]}]},{"pos":[64,246],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[62551,62802],"yaml":true},{"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,184],"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","source":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."},{"pos":[191,433],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[62912,63356],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[63444,63765],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[63871,64184],"yaml":true},{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values.","nodes":[{"pos":[0,240],"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> using one of the <ph id=\"ph2\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> values.","source":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values."}],"pos":[65400,65641],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The `behavior` parameter lets you specify options that control the behavior of the command and its connection. These values can be combined together (using the programming language's `OR` operator); generally, developers use the `CommandBehavior.CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \n  \n Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"pos":[0,1074],"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","nodes":[{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","pos":[0,1074],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.","pos":[0,258],"source":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing."},{"content":"When the statement has completed, developers must call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.","pos":[259,493],"source":" When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.","pos":[494,858],"source":" The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.","pos":[859,1074],"source":" Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished."}]}]},{"pos":[1081,1470],"content":"The `behavior` parameter lets you specify options that control the behavior of the command and its connection. These values can be combined together (using the programming language's `OR` operator); generally, developers use the `CommandBehavior.CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed.","nodes":[{"content":"The <ph id=\"ph1\">`behavior`</ph> parameter lets you specify options that control the behavior of the command and its connection.","pos":[0,110],"source":"The `behavior` parameter lets you specify options that control the behavior of the command and its connection."},{"content":"These values can be combined together (using the programming language's <ph id=\"ph1\">`OR`</ph> operator); generally, developers use the <ph id=\"ph2\">`CommandBehavior.CloseConnection`</ph> value to make sure that the connection is closed by the runtime when the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.","pos":[111,389],"source":" These values can be combined together (using the programming language's `OR` operator); generally, developers use the `CommandBehavior.CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed."}]},{"pos":[1477,2023],"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.","nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.","pos":[0,546],"nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously.","pos":[0,79]},{"content":"If a large command or many parameters are sent, this method may block during writes.","pos":[80,164]},{"content":"After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","pos":[165,302]},{"content":"Although command execution is asynchronous, value fetching is still synchronous.","pos":[303,383]},{"content":"This means that calls to <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.","pos":[384,546],"source":" This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks."}]}]},{"pos":[2030,2509],"content":"Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.","nodes":[{"content":"Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id=\"ph1\">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id=\"ph4\">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id=\"ph5\">&lt;xref:System.IAsyncResult&gt;</ph>.","pos":[0,479],"source":"Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>."}]},{"pos":[2516,3132],"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[0,616],"nodes":[{"content":"If you use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.","pos":[0,270],"source":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each."},{"content":"To avoid this behavior, use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.","pos":[271,451],"source":" To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries."},{"content":"For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[452,616]}]}]}],"pos":[65652,68797],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values, indicating options for statement execution and data retrieval.","nodes":[{"pos":[0,130],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> values, indicating options for statement execution and data retrieval.","source":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values, indicating options for statement execution and data retrieval."}],"pos":[70040,70171],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll, wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance that can be used to retrieve the returned rows.","nodes":[{"pos":[0,359],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when invoking <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph>, which returns a <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> instance that can be used to retrieve the returned rows.","source":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll, wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance that can be used to retrieve the returned rows."}],"pos":[70234,70594],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[70773,71662],"yaml":true},{"content":"Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,57],"content":"Any error that occurred while executing the command text.","nodes":[{"content":"Any error that occurred while executing the command text.","pos":[0,57]}]},{"pos":[64,246],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[71776,72027],"yaml":true},{"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,184],"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","source":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."},{"pos":[191,433],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[72137,72581],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[72669,72990],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[73096,73409],"yaml":true},{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and retrieves one or more result sets from the server, given a callback procedure and state information.","nodes":[{"pos":[0,271],"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> and retrieves one or more result sets from the server, given a callback procedure and state information.","source":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and retrieves one or more result sets from the server, given a callback procedure and state information."}],"pos":[74664,74936],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed cause the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \n  \n Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.  \n  \n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"pos":[0,1073],"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed cause the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","nodes":[{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed cause the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","pos":[0,1073],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.","pos":[0,258],"source":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing."},{"content":"When the statement has completed, developers must call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.","pos":[259,493],"source":" When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.","pos":[494,858],"source":" The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed cause the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.","pos":[859,1073],"source":" Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed cause the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished."}]}]},{"pos":[1080,1571],"content":"The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">`callback`</ph> parameter lets you specify an <ph id=\"ph2\">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.","pos":[0,130],"source":"The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed."},{"content":"You can call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.","pos":[131,303],"source":" You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application."},{"content":"In addition, you can pass any object in the <ph id=\"ph1\">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id=\"ph2\">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.","pos":[304,491],"source":" In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property."}]},{"pos":[1578,2124],"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.","nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.","pos":[0,546],"nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously.","pos":[0,79]},{"content":"If a large command or many parameters are sent, this method may block during writes.","pos":[80,164]},{"content":"After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","pos":[165,302]},{"content":"Although command execution is asynchronous, value fetching is still synchronous.","pos":[303,383]},{"content":"This means that calls to <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.","pos":[384,546],"source":" This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks."}]}]},{"pos":[2131,2619],"content":"Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.","nodes":[{"content":"Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.","pos":[0,488],"nodes":[{"content":"Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.","pos":[0,235]},{"content":"For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.","pos":[236,434]},{"content":"The example in this topic demonstrates this behavior.","pos":[435,488]}]}]},{"pos":[2626,2930],"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.","nodes":[{"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.","pos":[0,304],"nodes":[{"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.","pos":[0,111]},{"content":"You must handle the exception in the callback procedure, not in the main application.","pos":[112,197]},{"content":"See the example in this topic for additional information on handling exceptions in the callback procedure.","pos":[198,304]}]}]},{"pos":[2937,3553],"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[0,616],"nodes":[{"content":"If you use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.","pos":[0,270],"source":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each."},{"content":"To avoid this behavior, use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.","pos":[271,451],"source":" To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries."},{"content":"For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[452,616]}]}]}],"pos":[74947,78515],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.","nodes":[{"pos":[0,205],"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that is invoked when the command's execution has completed.","pos":[0,113],"source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed."},{"content":"Pass <ph id=\"ph1\">`null`</ph> (<ph id=\"ph2\">`Nothing`</ph> in Microsoft Visual Basic) to indicate that no callback is required.","pos":[114,205],"source":" Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required."}]}],"pos":[80607,80813],"yaml":true},{"content":"A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.","nodes":[{"pos":[0,197],"content":"A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.","nodes":[{"content":"A user-defined state object that is passed to the callback procedure.","pos":[0,69]},{"content":"Retrieve this object from within the callback procedure using the <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult.AsyncState\"&gt;&lt;/xref&gt;</ph> property.","pos":[70,197],"source":" Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property."}]}],"pos":[80880,81078],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll, wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance which can be used to retrieve the returned rows.","nodes":[{"pos":[0,360],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when invoking <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph>, which returns a <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> instance which can be used to retrieve the returned rows.","source":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll, wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance which can be used to retrieve the returned rows."}],"pos":[81141,81502],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[81681,82570],"yaml":true},{"content":"Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,57],"content":"Any error that occurred while executing the command text.","nodes":[{"content":"Any error that occurred while executing the command text.","pos":[0,57]}]},{"pos":[64,246],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[82684,82935],"yaml":true},{"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,184],"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","source":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."},{"pos":[191,433],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[83045,83489],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[83577,83898],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[84004,84317],"yaml":true},{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>, using one of the `CommandBehavior` values, and retrieving one or more result sets from the server, given a callback procedure and state information.","nodes":[{"pos":[0,316],"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>, using one of the <ph id=\"ph2\">`CommandBehavior`</ph> values, and retrieving one or more result sets from the server, given a callback procedure and state information.","source":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>, using one of the `CommandBehavior` values, and retrieving one or more result sets from the server, given a callback procedure and state information."}],"pos":[85707,86024],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \n  \n The `behavior` parameter lets you specify options that control the behavior of the command and its connection. These values can be combined together (using the programming language's `Or` operator); generally, developers use the `CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed. Developers can also optimize the behavior of the <xref:System.Data.SqlClient.SqlDataReader> by specifying the `SingleRow` value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \n  \n Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.  \n  \n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"pos":[0,1074],"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","nodes":[{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","pos":[0,1074],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.","pos":[0,258],"source":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing."},{"content":"When the statement has completed, developers must call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.","pos":[259,493],"source":" When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.","pos":[494,858],"source":" The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.","pos":[859,1074],"source":" Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished."}]}]},{"pos":[1081,1572],"content":"The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">`callback`</ph> parameter lets you specify an <ph id=\"ph2\">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.","pos":[0,130],"source":"The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed."},{"content":"You can call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.","pos":[131,303],"source":" You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application."},{"content":"In addition, you can pass any object in the <ph id=\"ph1\">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id=\"ph2\">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.","pos":[304,491],"source":" In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property."}]},{"pos":[1579,2187],"content":"The `behavior` parameter lets you specify options that control the behavior of the command and its connection. These values can be combined together (using the programming language's `Or` operator); generally, developers use the `CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed. Developers can also optimize the behavior of the <xref:System.Data.SqlClient.SqlDataReader> by specifying the `SingleRow` value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.","nodes":[{"content":"The <ph id=\"ph1\">`behavior`</ph> parameter lets you specify options that control the behavior of the command and its connection.","pos":[0,110],"source":"The `behavior` parameter lets you specify options that control the behavior of the command and its connection."},{"content":"These values can be combined together (using the programming language's <ph id=\"ph1\">`Or`</ph> operator); generally, developers use the <ph id=\"ph2\">`CloseConnection`</ph> value to make sure that the connection is closed by the runtime when the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.","pos":[111,373],"source":" These values can be combined together (using the programming language's `Or` operator); generally, developers use the `CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed."},{"content":"Developers can also optimize the behavior of the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> by specifying the <ph id=\"ph2\">`SingleRow`</ph> value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.","pos":[374,608],"source":" Developers can also optimize the behavior of the <xref:System.Data.SqlClient.SqlDataReader> by specifying the `SingleRow` value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row."}]},{"pos":[2194,2740],"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.","nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.","pos":[0,546],"nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously.","pos":[0,79]},{"content":"If a large command or many parameters are sent, this method may block during writes.","pos":[80,164]},{"content":"After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","pos":[165,302]},{"content":"Although command execution is asynchronous, value fetching is still synchronous.","pos":[303,383]},{"content":"This means that calls to <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.","pos":[384,546],"source":" This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks."}]}]},{"pos":[2747,3251],"content":"Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.","nodes":[{"content":"Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.","pos":[0,504],"nodes":[{"content":"Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.","pos":[0,251]},{"content":"For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work.","pos":[252,450]},{"content":"The example in this topic demonstrates this behavior.","pos":[451,504]}]}]},{"pos":[3258,3562],"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.","nodes":[{"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.","pos":[0,304],"nodes":[{"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.","pos":[0,111]},{"content":"You must handle the exception in the callback procedure, not in the main application.","pos":[112,197]},{"content":"See the example in this topic for additional information on handling exceptions in the callback procedure.","pos":[198,304]}]}]},{"pos":[3569,4189],"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[0,620],"nodes":[{"content":"If you use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.","pos":[0,274],"source":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each."},{"content":"To avoid this behavior, use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.","pos":[275,455],"source":" To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries."},{"content":"For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[456,620]}]}]}],"pos":[86035,90241],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.","nodes":[{"pos":[0,205],"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that is invoked when the command's execution has completed.","pos":[0,113],"source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed."},{"content":"Pass <ph id=\"ph1\">`null`</ph> (<ph id=\"ph2\">`Nothing`</ph> in Microsoft Visual Basic) to indicate that no callback is required.","pos":[114,205],"source":" Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required."}]}],"pos":[92625,92831],"yaml":true},{"content":"A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.","nodes":[{"pos":[0,197],"content":"A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.","nodes":[{"content":"A user-defined state object that is passed to the callback procedure.","pos":[0,69]},{"content":"Retrieve this object from within the callback procedure using the <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult.AsyncState\"&gt;&lt;/xref&gt;</ph> property.","pos":[70,197],"source":" Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property."}]}],"pos":[92898,93096],"yaml":true},{"content":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values, indicating options for statement execution and data retrieval.","nodes":[{"pos":[0,130],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> values, indicating options for statement execution and data retrieval.","source":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values, indicating options for statement execution and data retrieval."}],"pos":[93174,93305],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance which can be used to retrieve the returned rows.","nodes":[{"pos":[0,362],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph>, which returns a <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> instance which can be used to retrieve the returned rows.","source":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance which can be used to retrieve the returned rows."}],"pos":[93368,93731],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[93910,94799],"yaml":true},{"content":"Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,57],"content":"Any error that occurred while executing the command text.","nodes":[{"content":"Any error that occurred while executing the command text.","pos":[0,57]}]},{"pos":[64,246],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[94913,95164],"yaml":true},{"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,184],"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","source":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."},{"pos":[191,433],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[95274,95718],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[95806,96127],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[96233,96546],"yaml":true},{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and returns results as an <xref href=\"System.Xml.XmlReader\"></xref> object, using a callback procedure.","nodes":[{"pos":[0,270],"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> and returns results as an <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> object, using a callback procedure.","source":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and returns results as an <xref href=\"System.Xml.XmlReader\"></xref> object, using a callback procedure."}],"pos":[97819,98090],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method to finish the operation and retrieve the requested XML data. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause. However, `CommandText` can also specify a statement that returns data that contains valid XML. This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \n  \n A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:  \n  \n```  \nSqlCommand command = new SqlCommand(\"SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA\", SqlConn);  \n```  \n  \n This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \n  \n The multiple active result set (MARS) feature lets multiple actions use the same connection.  \n  \n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters is sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.  \n  \n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"pos":[0,1048],"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method to finish the operation and retrieve the requested XML data. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","nodes":[{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method to finish the operation and retrieve the requested XML data. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","pos":[0,1048],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing.","pos":[0,268],"source":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing."},{"content":"When the statement has completed, developers must call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method to finish the operation and retrieve the requested XML data.","pos":[269,458],"source":" When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method to finish the operation and retrieve the requested XML data."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.","pos":[459,829],"source":" The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object."},{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> before the command's execution is completed causes the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.","pos":[830,1048],"source":" Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished."}]}]},{"pos":[1055,1608],"content":"The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause. However, `CommandText` can also specify a statement that returns data that contains valid XML. This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.","pos":[0,142],"source":"The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause."},{"content":"However, <ph id=\"ph1\">`CommandText`</ph> can also specify a statement that returns data that contains valid XML.","pos":[143,237],"source":" However, `CommandText` can also specify a statement that returns data that contains valid XML."},{"content":"This method can also be used to retrieve a single-row, single-column result set.","pos":[238,318]},{"content":"In this case, if more than one row is returned, the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method attaches the <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.","pos":[319,553],"source":" In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set."}]},{"pos":[1615,1744],"content":"A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:","nodes":[{"content":"A typical <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following C# example:","pos":[0,129],"source":"A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:"}]},{"pos":[1890,2205],"content":"This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.","nodes":[{"content":"This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.","pos":[0,315],"nodes":[{"content":"This method can also be used to retrieve a single-row, single-column result set.","pos":[0,80]},{"content":"In this case, if more than one row is returned, the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method attaches the <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.","pos":[81,315],"source":" In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set."}]}]},{"pos":[2212,2304],"content":"The multiple active result set (MARS) feature lets multiple actions use the same connection.","nodes":[{"content":"The multiple active result set (MARS) feature lets multiple actions use the same connection.","pos":[0,92]}]},{"pos":[2311,2805],"content":"The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.","nodes":[{"content":"The <ph id=\"ph1\">`callback`</ph> parameter lets you specify an <ph id=\"ph2\">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.","pos":[0,130],"source":"The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed."},{"content":"You can call the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.","pos":[131,306],"source":" You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method from within this delegate procedure, or from any other location within your application."},{"content":"In addition, you can pass any object in the <ph id=\"ph1\">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id=\"ph2\">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.","pos":[307,494],"source":" In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property."}]},{"pos":[2812,3113],"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters is sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters is sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","pos":[0,301],"nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously.","pos":[0,79]},{"content":"If a large command or many parameters is sent, this method may block during writes.","pos":[80,163]},{"content":"After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","pos":[164,301]}]}]},{"pos":[3120,3424],"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.","nodes":[{"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.","pos":[0,304],"nodes":[{"content":"All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.","pos":[0,111]},{"content":"You must handle the exception in the callback procedure, not in the main application.","pos":[112,197]},{"content":"See the example in this topic for additional information on handling exceptions in the callback procedure.","pos":[198,304]}]}]},{"pos":[3431,4051],"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[0,620],"nodes":[{"content":"If you use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.","pos":[0,274],"source":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each."},{"content":"To avoid this behavior, use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.","pos":[275,455],"source":" To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries."},{"content":"For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[456,620]}]}]}],"pos":[98101,102179],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.","nodes":[{"pos":[0,205],"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that is invoked when the command's execution has completed.","pos":[0,113],"source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed."},{"content":"Pass <ph id=\"ph1\">`null`</ph> (<ph id=\"ph2\">`Nothing`</ph> in Microsoft Visual Basic) to indicate that no callback is required.","pos":[114,205],"source":" Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required."}]}],"pos":[104178,104384],"yaml":true},{"content":"A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.","nodes":[{"pos":[0,197],"content":"A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.","nodes":[{"content":"A user-defined state object that is passed to the callback procedure.","pos":[0,69]},{"content":"Retrieve this object from within the callback procedure using the <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult.AsyncState\"&gt;&lt;/xref&gt;</ph> property.","pos":[70,197],"source":" Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property."}]}],"pos":[104451,104649],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll, wait for results, or both; this value is also needed when the <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"></xref> is called, which returns the results of the command as XML.","nodes":[{"pos":[0,286],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> is called, which returns the results of the command as XML.","source":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll, wait for results, or both; this value is also needed when the <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"></xref> is called, which returns the results of the command as XML."}],"pos":[104712,104999],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[105181,106070],"yaml":true},{"content":"Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,57],"content":"Any error that occurred while executing the command text.","nodes":[{"content":"Any error that occurred while executing the command text.","pos":[0,57]}]},{"pos":[64,246],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[106184,106435],"yaml":true},{"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,184],"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","source":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."},{"pos":[191,433],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[106545,106989],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[107077,107398],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[107504,107817],"yaml":true},{"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and returns results as an <xref href=\"System.Xml.XmlReader\"></xref> object.","nodes":[{"pos":[0,242],"content":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> and returns results as an <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> object.","source":"Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and returns results as an <xref href=\"System.Xml.XmlReader\"></xref> object."}],"pos":[108919,109162],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the `EndExecuteXmlReader` method to finish the operation and retrieve the XML returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding `EndExecuteXmlReader` method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the `EndExecuteXmlReader` before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause. However, `CommandText` can also specify a statement that returns `ntext` data that contains valid XML.  \n  \n A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:  \n  \n```  \nSqlCommand command = new SqlCommand(\"SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA\", SqlConn);  \n```  \n  \n This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the `EndExecuteXmlReader` method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \n  \n The multiple active result set (MARS) feature lets multiple actions use the same connection.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous.  \n  \n Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"pos":[0,914],"content":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the `EndExecuteXmlReader` method to finish the operation and retrieve the XML returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding `EndExecuteXmlReader` method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the `EndExecuteXmlReader` before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing.","pos":[0,248],"source":"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing."},{"content":"When the statement has completed, developers must call the <ph id=\"ph1\">`EndExecuteXmlReader`</ph> method to finish the operation and retrieve the XML returned by the command.","pos":[249,406],"source":" When the statement has completed, developers must call the `EndExecuteXmlReader` method to finish the operation and retrieve the XML returned by the command."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id=\"ph2\">`EndExecuteXmlReader`</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.","pos":[407,736],"source":" The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding `EndExecuteXmlReader` method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object."},{"content":"Calling the <ph id=\"ph1\">`EndExecuteXmlReader`</ph> before the command's execution is completed causes the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.","pos":[737,914],"source":" Calling the `EndExecuteXmlReader` before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished."}]},{"pos":[921,1166],"content":"The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause. However, `CommandText` can also specify a statement that returns `ntext` data that contains valid XML.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.","pos":[0,142],"source":"The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause."},{"content":"However, <ph id=\"ph1\">`CommandText`</ph> can also specify a statement that returns <ph id=\"ph2\">`ntext`</ph> data that contains valid XML.","pos":[143,245],"source":" However, `CommandText` can also specify a statement that returns `ntext` data that contains valid XML."}]},{"pos":[1173,1302],"content":"A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:","nodes":[{"content":"A typical <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following C# example:","pos":[0,129],"source":"A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:"}]},{"pos":[1452,1726],"content":"This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the `EndExecuteXmlReader` method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.","nodes":[{"content":"This method can also be used to retrieve a single-row, single-column result set.","pos":[0,80]},{"content":"In this case, if more than one row is returned, the <ph id=\"ph1\">`EndExecuteXmlReader`</ph> method attaches the <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.","pos":[81,274],"source":" In this case, if more than one row is returned, the `EndExecuteXmlReader` method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set."}]},{"pos":[1733,1825],"content":"The multiple active result set (MARS) feature lets multiple actions use the same connection.","nodes":[{"content":"The multiple active result set (MARS) feature lets multiple actions use the same connection.","pos":[0,92]}]},{"pos":[1832,2215],"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous.","nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous.","pos":[0,383],"nodes":[{"content":"Note that the command text and parameters are sent to the server synchronously.","pos":[0,79]},{"content":"If a large command or many parameters are sent, this method may block during writes.","pos":[80,164]},{"content":"After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.","pos":[165,302]},{"content":"Although command execution is asynchronous, value fetching is still synchronous.","pos":[303,383]}]}]},{"pos":[2222,2705],"content":"Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.","nodes":[{"content":"Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <ph id=\"ph1\">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id=\"ph4\">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id=\"ph5\">&lt;xref:System.IAsyncResult&gt;</ph>.","pos":[0,483],"source":"Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>."}]},{"pos":[2712,3328],"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[0,616],"nodes":[{"content":"If you use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.","pos":[0,270],"source":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each."},{"content":"To avoid this behavior, use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.","pos":[271,451],"source":" To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries."},{"content":"For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[452,616]}]}]}],"pos":[109173,112526],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking `EndExecuteXmlReader`, which returns a single XML value.","nodes":[{"pos":[0,195],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id=\"ph2\">`EndExecuteXmlReader`</ph>, which returns a single XML value.","source":"An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking `EndExecuteXmlReader`, which returns a single XML value."}],"pos":[113362,113558],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[113740,114629],"yaml":true},{"content":"Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,57],"content":"Any error that occurred while executing the command text.","nodes":[{"content":"Any error that occurred while executing the command text.","pos":[0,57]}]},{"pos":[64,246],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[114743,114994],"yaml":true},{"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,184],"content":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","source":"The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."},{"pos":[191,433],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[115104,115548],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[115636,115957],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[116063,116376],"yaml":true},{"content":"Tries to cancel the execution of a <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.","nodes":[{"pos":[0,89],"content":"Tries to cancel the execution of a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","source":"Tries to cancel the execution of a <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."}],"pos":[117430,117520],"yaml":true},{"content":"If there is nothing to cancel, nothing occurs. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.  \n  \n In some, rare, cases, if you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> then call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (implicitily or explicitly) before calling <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, and then call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <xref:System.Data.SqlClient.SqlConnection.Close%2A>. To avoid this, make sure that you call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> before closing the reader or connection.","nodes":[{"pos":[0,149],"content":"If there is nothing to cancel, nothing occurs. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.","nodes":[{"content":"If there is nothing to cancel, nothing occurs. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.","pos":[0,149],"nodes":[{"content":"If there is nothing to cancel, nothing occurs.","pos":[0,46]},{"content":"However, if there is a command in process, and the attempt to cancel fails, no exception is generated.","pos":[47,149]}]}]},{"pos":[156,757],"content":"In some, rare, cases, if you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> then call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (implicitily or explicitly) before calling <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, and then call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <xref:System.Data.SqlClient.SqlConnection.Close%2A>. To avoid this, make sure that you call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> before closing the reader or connection.","nodes":[{"content":"In some, rare, cases, if you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> then call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (implicitily or explicitly) before calling <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, and then call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <xref:System.Data.SqlClient.SqlConnection.Close%2A>. To avoid this, make sure that you call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> before closing the reader or connection.","pos":[0,601],"nodes":[{"content":"In some, rare, cases, if you call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> then call <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph> (implicitily or explicitly) before calling <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, and then call <ph id=\"ph4\">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <ph id=\"ph5\">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>.","pos":[0,471],"source":"In some, rare, cases, if you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> then call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (implicitily or explicitly) before calling <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, and then call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <xref:System.Data.SqlClient.SqlConnection.Close%2A>."},{"content":"To avoid this, make sure that you call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> before closing the reader or connection.","pos":[472,601],"source":" To avoid this, make sure that you call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> before closing the reader or connection."}]}]}],"pos":[117531,118293],"yaml":true,"extradata":"MT"},{"content":"Creates a new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of the current instance.","nodes":[{"pos":[0,114],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object that is a copy of the current instance.","source":"Creates a new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of the current instance."}],"pos":[119997,120112],"yaml":true},{"content":"A new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of this instance.","nodes":[{"pos":[0,99],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object that is a copy of this instance.","source":"A new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of this instance."}],"pos":[120280,120380],"yaml":true},{"content":"Gets or sets the column encryption setting for this command.","nodes":[{"pos":[0,60],"content":"Gets or sets the column encryption setting for this command.","nodes":[{"content":"Gets or sets the column encryption setting for this command.","pos":[0,60]}]}],"pos":[121591,121652],"yaml":true},{"content":"The column encryption setting for this command.","nodes":[{"pos":[0,47],"content":"The column encryption setting for this command.","nodes":[{"content":"The column encryption setting for this command.","pos":[0,47]}]}],"pos":[121927,121975],"yaml":true},{"content":"Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.","nodes":[{"pos":[0,102],"content":"Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.","nodes":[{"content":"Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.","pos":[0,102]}]}],"pos":[122949,123052],"yaml":true},{"content":"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The user may be required to use escape character syntax if the stored procedure name contains any special characters. The command executes this stored procedure when you call one of the `Execute` methods.  \n  \n The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of `CommandType.Text`. In this case, named parameters must be used. For example:  \n  \n```  \nSELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID  \n```  \n  \n For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).","nodes":[{"pos":[0,425],"content":"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The user may be required to use escape character syntax if the stored procedure name contains any special characters. The command executes this stored procedure when you call one of the `Execute` methods.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id=\"ph2\">`StoredProcedure`</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.","pos":[0,220],"source":"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure."},{"content":"The user may be required to use escape character syntax if the stored procedure name contains any special characters.","pos":[221,338]},{"content":"The command executes this stored procedure when you call one of the <ph id=\"ph1\">`Execute`</ph> methods.","pos":[339,425],"source":" The command executes this stored procedure when you call one of the `Execute` methods."}]},{"pos":[432,714],"content":"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of `CommandType.Text`. In this case, named parameters must be used. For example:","nodes":[{"content":"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of <ph id=\"ph1\">`CommandType.Text`</ph>.","pos":[0,224],"source":"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of `CommandType.Text`."},{"content":"In this case, named parameters must be used.","pos":[225,269]},{"content":"For example:","pos":[270,282]}]},{"pos":[797,954],"content":"For more information, see <bpt id=\"p1\">[</bpt>Configuring Parameters and Parameter Data Types<ept id=\"p1\">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.","source":"For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)."}],"pos":[123063,124028],"yaml":true,"extradata":"MT"},{"content":"The Transact-SQL statement or stored procedure to execute. The default is an empty string.","nodes":[{"pos":[0,90],"content":"The Transact-SQL statement or stored procedure to execute. The default is an empty string.","nodes":[{"content":"The Transact-SQL statement or stored procedure to execute. The default is an empty string.","pos":[0,90],"nodes":[{"content":"The Transact-SQL statement or stored procedure to execute.","pos":[0,58]},{"content":"The default is an empty string.","pos":[59,90]}]}]}],"pos":[124638,124729],"yaml":true},{"content":"Gets or sets the wait time before terminating the attempt to execute a command and generating an error.","nodes":[{"pos":[0,103],"content":"Gets or sets the wait time before terminating the attempt to execute a command and generating an error.","nodes":[{"content":"Gets or sets the wait time before terminating the attempt to execute a command and generating an error.","pos":[0,103]}]}],"pos":[126015,126119],"yaml":true},{"content":"A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).  \n  \n> [!NOTE]\n>  The <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property will be ignored during asynchronous method calls such as <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \n  \n <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect when the command is executed against a context connection (a <xref:System.Data.SqlClient.SqlConnection> opened with \"context connection=true\" in the connection string).  \n  \n> [!NOTE]\n>  This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results. A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.  \n>   \n>  For example, with a 30 second time out, if <xref:System.Data.SqlClient.SqlDataReader.Read%2A> requires two network packets, then it has 30 seconds to read both network packets. If you call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> again, it will have another 30 seconds to read any data that it requires.  \n  \n```  \nusing System;  \nusing System.Data.SqlClient;  \n///   \npublic class A {  \n   ///   \n   public static void Main() {  \n      string connectionString = \"\";  \n      // Wait for 5 second delay in the command  \n      string queryString = \"waitfor delay '00:00:05'\";  \n      using (SqlConnection connection = new SqlConnection(connectionString)) {  \n         connection.Open();  \n         SqlCommand command = new SqlCommand(queryString, connection);  \n         // Setting command timeout to 1 second  \n         command.CommandTimeout = 1;  \n         try {  \n            command.ExecuteNonQuery();  \n         }  \n         catch (SqlException e) {  \n            Console.WriteLine(\"Got expected SqlException due to command timeout \");  \n            Console.WriteLine(e);  \n         }  \n      }  \n   }  \n}  \n```","nodes":[{"pos":[0,89],"content":"A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).","nodes":[{"content":"A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).","pos":[0,89]}]},{"pos":[97,298],"content":"[!NOTE]\n The <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property will be ignored during asynchronous method calls such as <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> property will be ignored during asynchronous method calls such as <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.","pos":[9,199],"source":" The <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property will be ignored during asynchronous method calls such as <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>."}]},{"pos":[305,545],"content":"<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect when the command is executed against a context connection (a <xref:System.Data.SqlClient.SqlConnection> opened with \"context connection=true\" in the connection string).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect when the command is executed against a context connection (a <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> opened with \"context connection=true\" in the connection string).","pos":[0,240],"source":"<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect when the command is executed against a context connection (a <xref:System.Data.SqlClient.SqlConnection> opened with \"context connection=true\" in the connection string)."}]},{"pos":[553,882],"content":"[!NOTE]\n This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results. A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.","leadings":["","> "],"nodes":[{"content":" This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results. A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.","pos":[8,327],"nodes":[{"content":"This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results.","pos":[1,192]},{"content":"A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.","pos":[193,319]}]}]},{"pos":[893,1206],"content":"For example, with a 30 second time out, if <xref:System.Data.SqlClient.SqlDataReader.Read%2A> requires two network packets, then it has 30 seconds to read both network packets. If you call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> again, it will have another 30 seconds to read any data that it requires.","nodes":[{"content":"For example, with a 30 second time out, if <xref:System.Data.SqlClient.SqlDataReader.Read%2A> requires two network packets, then it has 30 seconds to read both network packets. If you call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> again, it will have another 30 seconds to read any data that it requires.","pos":[0,313],"nodes":[{"content":"For example, with a 30 second time out, if <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> requires two network packets, then it has 30 seconds to read both network packets.","pos":[0,176],"source":"For example, with a 30 second time out, if <xref:System.Data.SqlClient.SqlDataReader.Read%2A> requires two network packets, then it has 30 seconds to read both network packets."},{"content":"If you call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> again, it will have another 30 seconds to read any data that it requires.","pos":[177,313],"source":" If you call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> again, it will have another 30 seconds to read any data that it requires."}]}]}],"pos":[126130,128196],"yaml":true,"extradata":"MT"},{"content":"The time in seconds to wait for the command to execute. The default is 30 seconds.","nodes":[{"pos":[0,82],"content":"The time in seconds to wait for the command to execute. The default is 30 seconds.","nodes":[{"content":"The time in seconds to wait for the command to execute. The default is 30 seconds.","pos":[0,82],"nodes":[{"content":"The time in seconds to wait for the command to execute.","pos":[0,55]},{"content":"The default is 30 seconds.","pos":[56,82]}]}]}],"pos":[128324,128407],"yaml":true},{"content":"Gets or sets a value indicating how the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> property is to be interpreted.","nodes":[{"pos":[0,136],"content":"Gets or sets a value indicating how the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"&gt;&lt;/xref&gt;</ph> property is to be interpreted.","source":"Gets or sets a value indicating how the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> property is to be interpreted."}],"pos":[129661,129798],"yaml":true},{"content":"When you set the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property to the name of the stored procedure. The command executes this stored procedure when you call one of the Execute methods.  \n  \n The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> of <xref:System.Data.CommandType.Text>. In this case, named parameters must be used. For example:  \n  \n SELECT * FROM Customers WHERE CustomerID = @CustomerID  \n  \n For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).","nodes":[{"pos":[0,307],"content":"When you set the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property to the name of the stored procedure. The command executes this stored procedure when you call one of the Execute methods.","nodes":[{"content":"When you set the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property to <ph id=\"ph2\">`StoredProcedure`</ph>, you should set the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property to the name of the stored procedure.","pos":[0,222],"source":"When you set the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property to the name of the stored procedure."},{"content":"The command executes this stored procedure when you call one of the Execute methods.","pos":[223,307]}]},{"pos":[314,653],"content":"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> of <xref:System.Data.CommandType.Text>. In this case, named parameters must be used. For example:","nodes":[{"content":"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> of <xref:System.Data.CommandType.Text>. In this case, named parameters must be used. For example:","pos":[0,339],"nodes":[{"content":"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> of <ph id=\"ph2\">&lt;xref:System.Data.CommandType.Text&gt;</ph>.","pos":[0,281],"source":"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> of <xref:System.Data.CommandType.Text>."},{"content":"In this case, named parameters must be used.","pos":[282,326]},{"content":"For example:","pos":[327,339]}]}]},{"pos":[660,714],"content":"SELECT * FROM Customers WHERE CustomerID = @CustomerID","nodes":[{"content":"SELECT * FROM Customers WHERE CustomerID = <ph id=\"ph1\">@CustomerID</ph>","pos":[0,54],"source":"SELECT * FROM Customers WHERE CustomerID = @CustomerID"}]},{"pos":[721,878],"content":"For more information, see <bpt id=\"p1\">[</bpt>Configuring Parameters and Parameter Data Types<ept id=\"p1\">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.","source":"For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)."}],"pos":[129809,130696],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Data.CommandType\"></xref> values. The default is `Text`.","nodes":[{"pos":[0,86],"content":"One of the <xref href=\"System.Data.CommandType\"></xref> values. The default is `Text`.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandType\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,63],"source":"One of the <xref href=\"System.Data.CommandType\"></xref> values."},{"content":"The default is <ph id=\"ph1\">`Text`</ph>.","pos":[64,86],"source":" The default is `Text`."}]}],"pos":[131345,131432],"yaml":true},{"content":"The value was not a valid <xref href=\"System.Data.CommandType\"></xref>.","nodes":[{"pos":[0,71],"content":"The value was not a valid <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandType\"&gt;&lt;/xref&gt;</ph>.","source":"The value was not a valid <xref href=\"System.Data.CommandType\"></xref>."}],"pos":[131598,131670],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> used by this instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.","nodes":[{"pos":[0,157],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> used by this instance of the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> used by this instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>."}],"pos":[132857,133015],"yaml":true},{"content":"If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <xref:System.InvalidOperationException>.  \n  \n If the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> is set to null.","nodes":[{"pos":[0,170],"content":"If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <xref:System.InvalidOperationException>.","nodes":[{"content":"If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[0,170],"source":"If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <xref:System.InvalidOperationException>."}]},{"pos":[177,393],"content":"If the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> is set to null.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> property is not null and the transaction has already been committed or rolled back, <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> is set to null.","pos":[0,216],"source":"If the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> is set to null."}]}],"pos":[133026,133424],"yaml":true,"extradata":"MT"},{"content":"The connection to a data source. The default value is `null`.","nodes":[{"pos":[0,61],"content":"The connection to a data source. The default value is `null`.","nodes":[{"content":"The connection to a data source.","pos":[0,32]},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[33,61],"source":" The default value is `null`."}]}],"pos":[134071,134133],"yaml":true},{"content":"The <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> property was changed while the command was enlisted in a transaction..","nodes":[{"pos":[0,139],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Connection\"&gt;&lt;/xref&gt;</ph> property was changed while the command was enlisted in a transaction..","source":"The <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> property was changed while the command was enlisted in a transaction.."}],"pos":[134314,134454],"yaml":true},{"content":"Creates a new instance of a <xref href=\"System.Data.SqlClient.SqlParameter\"></xref> object.","nodes":[{"pos":[0,91],"content":"Creates a new instance of a <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates a new instance of a <xref href=\"System.Data.SqlClient.SqlParameter\"></xref> object."}],"pos":[137054,137146],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.","nodes":[{"pos":[0,150],"content":"The <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A&gt;</ph> method is a strongly-typed version of <ph id=\"ph2\">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>.","pos":[0,150],"source":"The <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>."}]}],"pos":[137157,137308],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter\"></xref> object.","nodes":[{"pos":[0,65],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter\"></xref> object."}],"pos":[137490,137556],"yaml":true},{"content":"Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.","nodes":[{"pos":[0,112],"content":"Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.","nodes":[{"content":"Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.","pos":[0,112]}]}],"pos":[142926,143039],"yaml":true},{"content":"A value indicating whether the command object should be visible in a control. The default is **true**.","nodes":[{"pos":[0,102],"content":"A value indicating whether the command object should be visible in a control. The default is **true**.","nodes":[{"content":"A value indicating whether the command object should be visible in a control.","pos":[0,77]},{"content":"The default is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>.","pos":[78,102],"source":" The default is **true**."}]}],"pos":[143230,143333],"yaml":true},{"content":"Finishes asynchronous execution of a Transact-SQL statement.","nodes":[{"pos":[0,60],"content":"Finishes asynchronous execution of a Transact-SQL statement.","nodes":[{"content":"Finishes asynchronous execution of a Transact-SQL statement.","pos":[0,60]}]}],"pos":[146103,146164],"yaml":true},{"content":"When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> to execute a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, this method must be called.","nodes":[{"pos":[0,712],"content":"When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> to execute a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, this method must be called.","nodes":[{"content":"When you call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> to execute a <ph id=\"ph2\">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement, you must call <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> in order to complete the operation.","pos":[0,253],"source":"When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> to execute a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> in order to complete the operation."},{"content":"If the process of executing the command has not yet finished, this method blocks until the operation is complete.","pos":[254,367]},{"content":"Users can verify that the command has completed its operation by using the <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method.","pos":[368,566],"source":" Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method."},{"content":"If a callback procedure was specified in the call to <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>, this method must be called.","pos":[567,712],"source":" If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, this method must be called."}]}],"pos":[146175,146888],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by the call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\"></xref>.","nodes":[{"pos":[0,144],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by the call to <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by the call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\"></xref>."}],"pos":[147254,147399],"yaml":true},{"content":"The number of rows affected (the same behavior as <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQuery\"></xref>).","nodes":[{"pos":[0,121],"content":"The number of rows affected (the same behavior as <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQuery\"&gt;&lt;/xref&gt;</ph>).","source":"The number of rows affected (the same behavior as <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQuery\"></xref>)."}],"pos":[147455,147577],"yaml":true},{"content":"<code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> parameter is null (<ph id=\"ph2\">`Nothing`</ph> in Microsoft Visual Basic)","source":"<code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)"}],"pos":[147750,147831],"yaml":true},{"content":"<xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref> to complete execution of a call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"></xref>.","nodes":[{"pos":[0,445],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> to complete execution of a call to <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref> to complete execution of a call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"></xref>."}],"pos":[147941,148387],"yaml":true},{"content":"The amount of time specified in <xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"></xref> elapsed and the asynchronous operation specified with <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\"></xref> is not complete.  \n  \n In some situations, <xref href=\"System.IAsyncResult\"></xref> can be set to `IsCompleted` incorrectly. If this occurs and <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"></xref> elapsed and the asynchronous operation specified with <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\"></xref> is not complete. To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.","nodes":[{"pos":[0,247],"content":"The amount of time specified in <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"&gt;&lt;/xref&gt;</ph> elapsed and the asynchronous operation specified with <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\"&gt;&lt;/xref&gt;</ph> is not complete.","source":"The amount of time specified in <xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"></xref> elapsed and the asynchronous operation specified with <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\"></xref> is not complete."},{"pos":[254,925],"content":"In some situations, <xref href=\"System.IAsyncResult\"></xref> can be set to `IsCompleted` incorrectly. If this occurs and <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"></xref> elapsed and the asynchronous operation specified with <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\"></xref> is not complete. To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.","nodes":[{"content":"In some situations, <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> can be set to <ph id=\"ph2\">`IsCompleted`</ph> incorrectly.","pos":[0,101],"source":"In some situations, <xref href=\"System.IAsyncResult\"></xref> can be set to `IsCompleted` incorrectly."},{"content":"If this occurs and <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"&gt;&lt;/xref&gt;</ph> elapsed and the asynchronous operation specified with <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\"&gt;&lt;/xref&gt;</ph> is not complete.","pos":[102,528],"source":" If this occurs and <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"></xref> elapsed and the asynchronous operation specified with <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\"></xref> is not complete."},{"content":"To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.","pos":[529,671]}]}],"pos":[148501,149443],"yaml":true},{"content":"Finishes asynchronous execution of a Transact-SQL statement, returning the requested <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.","nodes":[{"pos":[0,142],"content":"Finishes asynchronous execution of a Transact-SQL statement, returning the requested <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>.","source":"Finishes asynchronous execution of a Transact-SQL statement, returning the requested <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>."}],"pos":[150614,150757],"yaml":true},{"content":"When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, this method must be called.","nodes":[{"pos":[0,677],"content":"When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, this method must be called.","nodes":[{"content":"When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, this method must be called.","pos":[0,677],"nodes":[{"content":"When you call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to execute a Transact-SQL statement, you must call <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> in order to complete the operation.","pos":[0,222],"source":"When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> in order to complete the operation."},{"content":"If the process of executing the command has not yet finished, this method blocks until the operation is complete.","pos":[223,336]},{"content":"Users can verify that the command has completed its operation by using the <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method.","pos":[337,533],"source":" Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method."},{"content":"If a callback procedure was specified in the call to <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>, this method must be called.","pos":[534,677],"source":" If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, this method must be called."}]}]}],"pos":[150768,151446],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by the call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteReader\"></xref>.","nodes":[{"pos":[0,142],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by the call to <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteReader\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by the call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteReader\"></xref>."}],"pos":[151838,151981],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object that can be used to retrieve the requested rows.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> object that can be used to retrieve the requested rows.","source":"A <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object that can be used to retrieve the requested rows."}],"pos":[152060,152175],"yaml":true},{"content":"<code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> parameter is null (<ph id=\"ph2\">`Nothing`</ph> in Microsoft Visual Basic)","source":"<code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)"}],"pos":[152346,152427],"yaml":true},{"content":"<xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref> to complete execution of a call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"></xref>.","nodes":[{"pos":[0,441],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> to complete execution of a call to <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref> to complete execution of a call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"></xref>."}],"pos":[152537,152979],"yaml":true},{"content":"Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.","nodes":[{"pos":[0,97],"content":"Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.","nodes":[{"content":"Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.","pos":[0,97]}]}],"pos":[154168,154266],"yaml":true},{"content":"When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, this method must be called.","nodes":[{"pos":[0,689],"content":"When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, this method must be called.","nodes":[{"content":"When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, this method must be called.","pos":[0,689],"nodes":[{"content":"When you call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to execute a Transact-SQL statement, you must call <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> in order to complete the operation.","pos":[0,228],"source":"When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> in order to complete the operation."},{"content":"If the process of executing the command has not yet finished, this method blocks until the operation is complete.","pos":[229,342]},{"content":"Users can verify that the command has completed its operation by using the <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method.","pos":[343,542],"source":" Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method."},{"content":"If a callback procedure was specified in the call to <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>, this method must be called.","pos":[543,689],"source":" If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, this method must be called."}]}]}],"pos":[154277,154967],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by the call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"></xref>.","nodes":[{"pos":[0,145],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by the call to <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by the call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"></xref>."}],"pos":[155353,155499],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlReader\"></xref> object that can be used to fetch the resulting XML data.","nodes":[{"pos":[0,101],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> object that can be used to fetch the resulting XML data.","source":"An <xref href=\"System.Xml.XmlReader\"></xref> object that can be used to fetch the resulting XML data."}],"pos":[155563,155665],"yaml":true},{"content":"<code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> parameter is null (<ph id=\"ph2\">`Nothing`</ph> in Microsoft Visual Basic)","source":"<code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)"}],"pos":[155839,155920],"yaml":true},{"content":"<xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"></xref> to complete execution of a call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\"></xref>.","nodes":[{"pos":[0,446],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> to complete execution of a call to <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"></xref> to complete execution of a call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\"></xref>."}],"pos":[156030,156477],"yaml":true},{"content":"Executes a Transact-SQL statement against the connection and returns the number of rows affected.","nodes":[{"pos":[0,97],"content":"Executes a Transact-SQL statement against the connection and returns the number of rows affected.","nodes":[{"content":"Executes a Transact-SQL statement against the connection and returns the number of rows affected.","pos":[0,97]}]}],"pos":[161158,161256],"yaml":true},{"content":"You can use the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.  \n  \n Although the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.  \n  \n For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers. For all other types of statements, the return value is -1. If a rollback occurs, the return value is also -1.","nodes":[{"pos":[0,331],"content":"You can use the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <ph id=\"ph2\">&lt;xref:System.Data.DataSet&gt;</ph> by executing UPDATE, INSERT, or DELETE statements.","pos":[0,331],"source":"You can use the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements."}]},{"pos":[338,511],"content":"Although the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.","nodes":[{"content":"Although the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> returns no rows, any output parameters or return values mapped to parameters are populated with data.","pos":[0,173],"source":"Although the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data."}]},{"pos":[518,947],"content":"For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers. For all other types of statements, the return value is -1. If a rollback occurs, the return value is also -1.","nodes":[{"content":"For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers. For all other types of statements, the return value is -1. If a rollback occurs, the return value is also -1.","pos":[0,429],"nodes":[{"content":"For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.","pos":[0,106]},{"content":"When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.","pos":[107,319]},{"content":"For all other types of statements, the return value is -1.","pos":[320,378]},{"content":"If a rollback occurs, the return value is also -1.","pos":[379,429]}]}]}],"pos":[161267,162221],"yaml":true,"extradata":"MT"},{"content":"The number of rows affected.","nodes":[{"pos":[0,28],"content":"The number of rows affected.","nodes":[{"content":"The number of rows affected.","pos":[0,28]}]}],"pos":[163061,163090],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[163266,164155],"yaml":true},{"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,160],"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.","nodes":[{"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.","pos":[0,160],"nodes":[{"content":"An exception occurred while executing the command against a locked row.","pos":[0,71]},{"content":"This exception is not generated when you are using Microsoft .NET Framework version 1.0.","pos":[72,160]}]}]},{"pos":[167,349],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[164269,164623],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[164711,165032],"yaml":true},{"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,242],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[165142,165385],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[165491,165804],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQuery\"></xref>, which executes a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement against the connection and returns the number of rows affected. The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","nodes":[{"pos":[0,401],"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQuery\"></xref>, which executes a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement against the connection and returns the number of rows affected. The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","nodes":[{"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQuery\"&gt;&lt;/xref&gt;</ph>, which executes a <ph id=\"ph2\">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement against the connection and returns the number of rows affected.","pos":[0,228],"source":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQuery\"></xref>, which executes a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement against the connection and returns the number of rows affected."},{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.","pos":[229,342]},{"content":"Exceptions will be reported via the returned Task object.","pos":[344,401]}]}],"pos":[167197,167599],"yaml":true},{"content":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,275],"content":"For more information about asynchronous programming in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[167610,167886],"yaml":true,"extradata":"MT"},{"content":"The cancellation instruction.","nodes":[{"pos":[0,29],"content":"The cancellation instruction.","nodes":[{"content":"The cancellation instruction.","pos":[0,29]}]}],"pos":[168145,168175],"yaml":true},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[168260,168308],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[168489,169378],"yaml":true},{"content":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,179],"content":"Calling <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.","source":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion."},{"pos":[186,428],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[435,499],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[169488,169998],"yaml":true},{"content":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.","source":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text."},{"pos":[112,294],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[170112,170411],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[170499,170820],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[170926,171239],"yaml":true},{"content":"Sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.","nodes":[{"pos":[0,218],"content":"Sends the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"&gt;&lt;/xref&gt;</ph> to the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Connection\"&gt;&lt;/xref&gt;</ph> and builds a <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>.","source":"Sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>."}],"pos":[172307,172526],"yaml":true},{"content":"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  \n  \n> [!NOTE]\n>  If a transaction is deadlocked, an exception may not be thrown until <xref:System.Data.SqlClient.SqlDataReader.Read%2A> is called.  \n  \n The multiple active result set (MARS) feature allows for multiple actions using the same connection.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"pos":[0,335],"content":"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id=\"ph2\">`StoredProcedure`</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.","pos":[0,220],"source":"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure."},{"content":"The command executes this stored procedure when you call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.","pos":[221,335],"source":" The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>."}]},{"pos":[343,484],"content":"[!NOTE]\n If a transaction is deadlocked, an exception may not be thrown until <xref:System.Data.SqlClient.SqlDataReader.Read%2A> is called.","leadings":["","> "],"nodes":[{"content":"If a transaction is deadlocked, an exception may not be thrown until <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> is called.","pos":[9,139],"source":" If a transaction is deadlocked, an exception may not be thrown until <xref:System.Data.SqlClient.SqlDataReader.Read%2A> is called."}]},{"pos":[491,591],"content":"The multiple active result set (MARS) feature allows for multiple actions using the same connection.","nodes":[{"content":"The multiple active result set (MARS) feature allows for multiple actions using the same connection.","pos":[0,100]}]},{"pos":[598,1218],"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[0,620],"nodes":[{"content":"If you use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.","pos":[0,274],"source":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each."},{"content":"To avoid this behavior, use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.","pos":[275,455],"source":" To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries."},{"content":"For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[456,620]}]}]}],"pos":[172537,173767],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object.","nodes":[{"pos":[0,66],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object."}],"pos":[174539,174606],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[174780,175669],"yaml":true},{"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,160],"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.","nodes":[{"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.","pos":[0,160],"nodes":[{"content":"An exception occurred while executing the command against a locked row.","pos":[0,71]},{"content":"This exception is not generated when you are using Microsoft .NET Framework version 1.0.","pos":[72,160]}]}]},{"pos":[167,349],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[175783,176137],"yaml":true},{"content":"The current state of the connection is closed. <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"></xref> requires an open <xref href=\"System.Data.SqlClient.SqlConnection\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,189],"content":"The current state of the connection is closed. <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"></xref> requires an open <xref href=\"System.Data.SqlClient.SqlConnection\"></xref>.","nodes":[{"content":"The current state of the connection is closed.","pos":[0,46]},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"&gt;&lt;/xref&gt;</ph> requires an open <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph>.","pos":[47,189],"source":"<xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"></xref> requires an open <xref href=\"System.Data.SqlClient.SqlConnection\"></xref>."}]},{"pos":[196,438],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[176247,176696],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[176784,177105],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[177211,177524],"yaml":true},{"content":"Sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref>, and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values.","nodes":[{"pos":[0,292],"content":"Sends the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"&gt;&lt;/xref&gt;</ph> to the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Connection\"&gt;&lt;/xref&gt;</ph>, and builds a <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> using one of the <ph id=\"ph4\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> values.","source":"Sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref>, and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values."}],"pos":[178848,179141],"yaml":true},{"content":"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  \n  \n> [!NOTE]\n>  Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data. Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.  \n  \n The multiple active result set (MARS) feature allows for multiple actions using the same connection.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"pos":[0,335],"content":"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id=\"ph2\">`StoredProcedure`</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.","pos":[0,220],"source":"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure."},{"content":"The command executes this stored procedure when you call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.","pos":[221,335],"source":" The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>."}]},{"pos":[343,547],"content":"[!NOTE]\n Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data. Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.","leadings":["","> "],"nodes":[{"content":" Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data. Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.","pos":[8,202],"nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph> to retrieve large values and binary data.","pos":[1,98],"source":" Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data."},{"content":"Otherwise, an <ph id=\"ph1\">&lt;xref:System.OutOfMemoryException&gt;</ph> might occur and the connection will be closed.","pos":[99,194],"source":" Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed."}]}]},{"pos":[554,654],"content":"The multiple active result set (MARS) feature allows for multiple actions using the same connection.","nodes":[{"content":"The multiple active result set (MARS) feature allows for multiple actions using the same connection.","pos":[0,100]}]},{"pos":[661,1281],"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[0,620],"nodes":[{"content":"If you use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.","pos":[0,274],"source":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each."},{"content":"To avoid this behavior, use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.","pos":[275,455],"source":" To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries."},{"content":"For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[456,620]}]}]}],"pos":[179152,180445],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values.","nodes":[{"pos":[0,67],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Data.CommandBehavior\"></xref> values."}],"pos":[181322,181390],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object.","nodes":[{"pos":[0,66],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object."}],"pos":[181469,181536],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[181710,182599],"yaml":true},{"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,182],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[182713,182896],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[182984,183305],"yaml":true},{"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,242],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[183415,183658],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[183764,184077],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>. Exceptions will be reported via the returned Task object.","nodes":[{"pos":[0,378],"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>. Exceptions will be reported via the returned Task object.","nodes":[{"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"&gt;&lt;/xref&gt;</ph>, which sends the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"&gt;&lt;/xref&gt;</ph> to the <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Connection\"&gt;&lt;/xref&gt;</ph> and builds a <ph id=\"ph4\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>.","pos":[0,320],"source":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>."},{"content":"Exceptions will be reported via the returned Task object.","pos":[321,378]}]}],"pos":[185299,185678],"yaml":true},{"content":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,275],"content":"For more information about asynchronous programming in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[185689,185965],"yaml":true,"extradata":"MT"},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[186210,186258],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[186437,187326],"yaml":true},{"content":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.","nodes":[{"pos":[0,66],"content":"An invalid <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> value.","source":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value."}],"pos":[187420,187487],"yaml":true},{"content":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,141],"content":"Calling <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.","source":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\"></xref> more than once for the same instance before task completion."},{"pos":[148,390],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[397,461],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[187597,188069],"yaml":true},{"content":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.","source":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text."},{"pos":[112,294],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[188183,188482],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[188570,188891],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[188997,189310],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref>, and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>. Exceptions will be reported via the returned Task object.","nodes":[{"pos":[0,408],"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref>, and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>. Exceptions will be reported via the returned Task object.","nodes":[{"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\"&gt;&lt;/xref&gt;</ph>, which sends the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"&gt;&lt;/xref&gt;</ph> to the <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Connection\"&gt;&lt;/xref&gt;</ph>, and builds a <ph id=\"ph4\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>.","pos":[0,350],"source":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref>, and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>."},{"content":"Exceptions will be reported via the returned Task object.","pos":[351,408]}]}],"pos":[190664,191073],"yaml":true},{"content":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,275],"content":"For more information about asynchronous programming in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[191084,191360],"yaml":true,"extradata":"MT"},{"content":"Options for statement execution and data retrieval.  When is set to `Default`, <xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> reads the entire row before returning a complete Task.","nodes":[{"pos":[0,236],"content":"Options for statement execution and data retrieval.  When is set to `Default`, <xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> reads the entire row before returning a complete Task.","nodes":[{"content":"Options for statement execution and data retrieval.","pos":[0,51]},{"content":"When is set to <ph id=\"ph1\">`Default`</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> reads the entire row before returning a complete Task.","pos":[53,236],"source":"  When is set to `Default`, <xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> reads the entire row before returning a complete Task."}]}],"pos":[191608,191845],"yaml":true},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[191953,192001],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[192180,193069],"yaml":true},{"content":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.","nodes":[{"pos":[0,66],"content":"An invalid <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> value.","source":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value."}],"pos":[193163,193230],"yaml":true},{"content":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,170],"content":"Calling <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.","source":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\"></xref> more than once for the same instance before task completion."},{"pos":[177,419],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[426,490],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[193340,193841],"yaml":true},{"content":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.","source":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text."},{"pos":[112,294],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[193955,194254],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[194342,194663],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[194769,195082],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.  \n  \n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","nodes":[{"pos":[0,320],"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"&gt;&lt;/xref&gt;</ph>, which sends the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"&gt;&lt;/xref&gt;</ph> to the <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Connection\"&gt;&lt;/xref&gt;</ph> and builds a <ph id=\"ph4\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>.","source":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>."},{"pos":[327,499],"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","pos":[0,172],"nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.","pos":[0,113]},{"content":"Exceptions will be reported via the returned Task object.","pos":[115,172]}]}]}],"pos":[196463,196975],"yaml":true},{"content":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,275],"content":"For more information about asynchronous programming in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[196986,197262],"yaml":true,"extradata":"MT"},{"content":"The cancellation instruction.","nodes":[{"pos":[0,29],"content":"The cancellation instruction.","nodes":[{"content":"The cancellation instruction.","pos":[0,29]}]}],"pos":[197542,197572],"yaml":true},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[197680,197728],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[197907,198796],"yaml":true},{"content":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.","nodes":[{"pos":[0,66],"content":"An invalid <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> value.","source":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value."}],"pos":[198890,198957],"yaml":true},{"content":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,205],"content":"Calling <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.","source":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion."},{"pos":[212,454],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[461,525],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[199067,199603],"yaml":true},{"content":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.","source":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text."},{"pos":[112,294],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[199717,200016],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[200104,200425],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[200531,200844],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref>, and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>  \n  \n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","nodes":[{"pos":[0,349],"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\"&gt;&lt;/xref&gt;</ph>, which sends the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"&gt;&lt;/xref&gt;</ph> to the <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Connection\"&gt;&lt;/xref&gt;</ph>, and builds a <ph id=\"ph4\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader\"&gt;&lt;/xref&gt;</ph>","source":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref>, and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>"},{"pos":[356,528],"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","pos":[0,172],"nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.","pos":[0,113]},{"content":"Exceptions will be reported via the returned Task object.","pos":[115,172]}]}]}],"pos":[202360,202901],"yaml":true},{"content":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,275],"content":"For more information about asynchronous programming in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[202912,203188],"yaml":true,"extradata":"MT"},{"content":"Options for statement execution and data retrieval.  When is set to `Default`, <xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> reads the entire row before returning a complete Task.","nodes":[{"pos":[0,236],"content":"Options for statement execution and data retrieval.  When is set to `Default`, <xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> reads the entire row before returning a complete Task.","nodes":[{"content":"Options for statement execution and data retrieval.","pos":[0,51]},{"content":"When is set to <ph id=\"ph1\">`Default`</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> reads the entire row before returning a complete Task.","pos":[53,236],"source":"  When is set to `Default`, <xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> reads the entire row before returning a complete Task."}]}],"pos":[203490,203727],"yaml":true},{"content":"The cancellation instruction.","nodes":[{"pos":[0,29],"content":"The cancellation instruction.","nodes":[{"content":"The cancellation instruction.","pos":[0,29]}]}],"pos":[203821,203851],"yaml":true},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[203959,204007],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[204186,205075],"yaml":true},{"content":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.","nodes":[{"pos":[0,66],"content":"An invalid <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> value.","source":"An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value."}],"pos":[205169,205236],"yaml":true},{"content":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,205],"content":"Calling <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.","source":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion."},{"pos":[212,454],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[461,525],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[205346,205882],"yaml":true},{"content":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.","source":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text."},{"pos":[112,294],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[205996,206295],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[206383,206704],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[206810,207123],"yaml":true},{"content":"Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.","nodes":[{"pos":[0,146],"content":"Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.","nodes":[{"content":"Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.","pos":[0,146],"nodes":[{"content":"Executes the query, and returns the first column of the first row in the result set returned by the query.","pos":[0,106]},{"content":"Additional columns or rows are ignored.","pos":[107,146]}]}]}],"pos":[208315,208462],"yaml":true},{"content":"Use the <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database. This requires less code than using the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method, and then performing the operations that you need to generate the single value using the data returned by a <xref:System.Data.SqlClient.SqlDataReader>.  \n  \n A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:  \n  \n```  \ncmd.CommandText = \"SELECT COUNT(*) FROM dbo.region\";  \nInt32 count = (Int32) cmd.ExecuteScalar();  \n```","nodes":[{"pos":[0,404],"content":"Use the <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database. This requires less code than using the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method, and then performing the operations that you need to generate the single value using the data returned by a <xref:System.Data.SqlClient.SqlDataReader>.","nodes":[{"content":"Use the <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database. This requires less code than using the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method, and then performing the operations that you need to generate the single value using the data returned by a <xref:System.Data.SqlClient.SqlDataReader>.","pos":[0,404],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> method to retrieve a single value (for example, an aggregate value) from a database.","pos":[0,149],"source":"Use the <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database."},{"content":"This requires less code than using the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> method, and then performing the operations that you need to generate the single value using the data returned by a <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.","pos":[150,404],"source":" This requires less code than using the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method, and then performing the operations that you need to generate the single value using the data returned by a <xref:System.Data.SqlClient.SqlDataReader>."}]}]},{"pos":[411,532],"content":"A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:","nodes":[{"content":"A typical <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> query can be formatted as in the following C# example:","pos":[0,121],"source":"A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:"}]}],"pos":[208473,209132],"yaml":true,"extradata":"MT"},{"content":"The first column of the first row in the result set, or a null reference (`Nothing` in Visual Basic) if the result set is empty. Returns a maximum of 2033 characters.","nodes":[{"pos":[0,166],"content":"The first column of the first row in the result set, or a null reference (`Nothing` in Visual Basic) if the result set is empty. Returns a maximum of 2033 characters.","nodes":[{"content":"The first column of the first row in the result set, or a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic) if the result set is empty.","pos":[0,128],"source":"The first column of the first row in the result set, or a null reference (`Nothing` in Visual Basic) if the result set is empty."},{"content":"Returns a maximum of 2033 characters.","pos":[129,166]}]}],"pos":[209989,210156],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[210330,211219],"yaml":true},{"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,160],"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.","nodes":[{"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.","pos":[0,160],"nodes":[{"content":"An exception occurred while executing the command against a locked row.","pos":[0,71]},{"content":"This exception is not generated when you are using Microsoft .NET Framework version 1.0.","pos":[72,160]}]}]},{"pos":[167,349],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[211333,211687],"yaml":true},{"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,242],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[211797,212040],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[212128,212449],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[212555,212868],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalar\"></xref>, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.  \n  \n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.","nodes":[{"pos":[0,262],"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalar\"></xref>, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.","nodes":[{"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalar\"&gt;&lt;/xref&gt;</ph>, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query.","pos":[0,222],"source":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalar\"></xref>, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query."},{"content":"Additional columns or rows are ignored.","pos":[223,262]}]},{"pos":[269,440],"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.","nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.","pos":[0,171],"nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.","pos":[0,113]},{"content":"Exceptions will be reported via the returned Task object.","pos":[114,171]}]}]}],"pos":[214249,214696],"yaml":true},{"content":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,275],"content":"For more information about asynchronous programming in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[214707,214983],"yaml":true,"extradata":"MT"},{"content":"The cancellation instruction.","nodes":[{"pos":[0,29],"content":"The cancellation instruction.","nodes":[{"content":"The cancellation instruction.","pos":[0,29]}]}],"pos":[215243,215273],"yaml":true},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[215359,215407],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[215586,216475],"yaml":true},{"content":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,177],"content":"Calling <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.","source":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion."},{"pos":[184,426],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[433,497],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[216585,217093],"yaml":true},{"content":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.","source":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text."},{"pos":[112,294],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[217207,217506],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[217594,217915],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[218021,218334],"yaml":true},{"content":"Sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds an <xref href=\"System.Xml.XmlReader\"></xref> object.","nodes":[{"pos":[0,211],"content":"Sends the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"&gt;&lt;/xref&gt;</ph> to the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Connection\"&gt;&lt;/xref&gt;</ph> and builds an <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> object.","source":"Sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds an <xref href=\"System.Xml.XmlReader\"></xref> object."}],"pos":[219420,219632],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement with a valid FOR XML clause. However, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> can also specify a statement that returns `ntext` or `nvarchar` data that contains valid XML, or the contents of a column defined with the `xml` data type.  \n  \n A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> query can be formatted as in the following Microsoft Visual C# example:  \n  \n```  \nSqlCommand command = new SqlCommand(\"SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA\", SqlConn);  \n```  \n  \n This method can also be used to retrieve a single-row, single-column result set that contains XML data. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \n  \n The multiple active result set (MARS) feature allows for multiple actions using the same connection.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"pos":[0,389],"content":"The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement with a valid FOR XML clause. However, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> can also specify a statement that returns `ntext` or `nvarchar` data that contains valid XML, or the contents of a column defined with the `xml` data type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a <ph id=\"ph2\">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement with a valid FOR XML clause.","pos":[0,169],"source":"The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement with a valid FOR XML clause."},{"content":"However, <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> can also specify a statement that returns <ph id=\"ph2\">`ntext`</ph> or <ph id=\"ph3\">`nvarchar`</ph> data that contains valid XML, or the contents of a column defined with the <ph id=\"ph4\">`xml`</ph> data type.","pos":[170,389],"source":" However, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> can also specify a statement that returns `ntext` or `nvarchar` data that contains valid XML, or the contents of a column defined with the `xml` data type."}]},{"pos":[396,537],"content":"A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> query can be formatted as in the following Microsoft Visual C# example:","nodes":[{"content":"A typical <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following Microsoft Visual C# example:","pos":[0,141],"source":"A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> query can be formatted as in the following Microsoft Visual C# example:"}]},{"pos":[660,995],"content":"This method can also be used to retrieve a single-row, single-column result set that contains XML data. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.","nodes":[{"content":"This method can also be used to retrieve a single-row, single-column result set that contains XML data. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.","pos":[0,335],"nodes":[{"content":"This method can also be used to retrieve a single-row, single-column result set that contains XML data.","pos":[0,103]},{"content":"In this case, if more than one row is returned, the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> method attaches the <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.","pos":[104,335],"source":" In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set."}]}]},{"pos":[1002,1102],"content":"The multiple active result set (MARS) feature allows for multiple actions using the same connection.","nodes":[{"content":"The multiple active result set (MARS) feature allows for multiple actions using the same connection.","pos":[0,100]}]},{"pos":[1109,1729],"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"content":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[0,620],"nodes":[{"content":"If you use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.","pos":[0,274],"source":"If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each."},{"content":"To avoid this behavior, use <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.","pos":[275,455],"source":" To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries."},{"content":"For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[456,620]}]}]}],"pos":[219643,221391],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.XmlReader\"></xref> object.","nodes":[{"pos":[0,52],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Xml.XmlReader\"></xref> object."}],"pos":[222205,222258],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[222435,223324],"yaml":true},{"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,160],"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.","nodes":[{"content":"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.","pos":[0,160],"nodes":[{"content":"An exception occurred while executing the command against a locked row.","pos":[0,71]},{"content":"This exception is not generated when you are using Microsoft .NET Framework version 1.0.","pos":[72,160]}]}]},{"pos":[167,349],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[223438,223792],"yaml":true},{"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,242],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[223902,224145],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[224233,224554],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[224660,224973],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds an <xref href=\"System.Xml.XmlReader\"></xref> object.  \n  \n Exceptions will be reported via the returned Task object.","nodes":[{"pos":[0,316],"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\"&gt;&lt;/xref&gt;</ph>, which sends the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"&gt;&lt;/xref&gt;</ph> to the <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Connection\"&gt;&lt;/xref&gt;</ph> and builds an <ph id=\"ph4\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> object.","source":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds an <xref href=\"System.Xml.XmlReader\"></xref> object."},{"pos":[323,380],"content":"Exceptions will be reported via the returned Task object.","nodes":[{"content":"Exceptions will be reported via the returned Task object.","pos":[0,57]}]}],"pos":[226213,226606],"yaml":true},{"content":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,275],"content":"For more information about asynchronous programming in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[226617,226893],"yaml":true,"extradata":"MT"},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[227111,227159],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[227341,228230],"yaml":true},{"content":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,177],"content":"Calling <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.","source":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion."},{"pos":[184,426],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[433,497],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[228340,228848],"yaml":true},{"content":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.","source":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text."},{"pos":[112,294],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[228962,229261],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[229349,229670],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[229776,230089],"yaml":true},{"content":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds an <xref href=\"System.Xml.XmlReader\"></xref> object.  \n  \n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","nodes":[{"pos":[0,316],"content":"An asynchronous version of <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\"&gt;&lt;/xref&gt;</ph>, which sends the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"&gt;&lt;/xref&gt;</ph> to the <ph id=\"ph3\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.Connection\"&gt;&lt;/xref&gt;</ph> and builds an <ph id=\"ph4\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> object.","source":"An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds an <xref href=\"System.Xml.XmlReader\"></xref> object."},{"pos":[323,495],"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.","pos":[0,172],"nodes":[{"content":"The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.","pos":[0,113]},{"content":"Exceptions will be reported via the returned Task object.","pos":[115,172]}]}]}],"pos":[231488,231996],"yaml":true},{"content":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).","nodes":[{"pos":[0,275],"content":"For more information about asynchronous programming in the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for <ph id=\"ph2\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>Asynchronous Programming<ept id=\"p1\">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.","source":"For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."}],"pos":[232007,232283],"yaml":true,"extradata":"MT"},{"content":"The cancellation instruction.","nodes":[{"pos":[0,29],"content":"The cancellation instruction.","nodes":[{"content":"The cancellation instruction.","pos":[0,29]}]}],"pos":[232551,232581],"yaml":true},{"content":"A task representing the asynchronous operation.","nodes":[{"pos":[0,47],"content":"A task representing the asynchronous operation.","nodes":[{"content":"A task representing the asynchronous operation.","pos":[0,47]}]}],"pos":[232674,232722],"yaml":true},{"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>.","nodes":[{"pos":[0,366],"content":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Binary<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>VarBinary<ept id=\"p2\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","pos":[0,232],"source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[233,366],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[373,641],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Char<ept id=\"p1\">**</ept>, <bpt id=\"p2\">**</bpt>NChar<ept id=\"p2\">**</ept>, <bpt id=\"p3\">**</bpt>NVarChar<ept id=\"p3\">**</ept>, <bpt id=\"p4\">**</bpt>VarChar<ept id=\"p4\">**</ept>, or  <bpt id=\"p5\">**</bpt>Xml<ept id=\"p5\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>."},{"pos":[648,864],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"&gt;&lt;/xref&gt;</ph> other than <bpt id=\"p1\">**</bpt>Xml<ept id=\"p1\">**</ept> was used when <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlParameter.Value\"&gt;&lt;/xref&gt;</ph> was set to <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."}],"pos":[232904,233793],"yaml":true},{"content":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string.","nodes":[{"pos":[0,177],"content":"Calling <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> more than once for the same instance before task completion.","source":"Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion."},{"pos":[184,426],"content":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlConnection\"&gt;&lt;/xref&gt;</ph> closed or dropped during a streaming operation.","pos":[0,108],"source":"The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[109,242],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]},{"pos":[433,497],"content":"<ph id=\"ph1\">`Context Connection=true`</ph> is specified in the connection string.","source":"`Context Connection=true` is specified in the connection string."}],"pos":[233903,234411],"yaml":true},{"content":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph> returned an error while executing the command text.","source":"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text."},{"pos":[112,294],"content":"A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"A timeout occurred during a streaming operation.","pos":[0,48]},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[49,182],"source":" For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[234525,234824],"yaml":true},{"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,320],"content":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"An error occurred in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object during a streaming operation.","pos":[0,185],"source":"An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[187,320],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[234912,235233],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"pos":[0,312],"content":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlReader\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object was closed during a streaming operation.","pos":[0,177],"source":"The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation."},{"content":"For more information about streaming, see <bpt id=\"p1\">[</bpt>SqlClient Streaming Support<ept id=\"p1\">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.","pos":[179,312],"source":"  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."}]}],"pos":[235339,235652],"yaml":true},{"content":"Gets or sets a value that specifies the <xref href=\"System.Data.Sql.SqlNotificationRequest\"></xref> object bound to this command.","nodes":[{"pos":[0,129],"content":"Gets or sets a value that specifies the <ph id=\"ph1\">&lt;xref href=\"System.Data.Sql.SqlNotificationRequest\"&gt;&lt;/xref&gt;</ph> object bound to this command.","source":"Gets or sets a value that specifies the <xref href=\"System.Data.Sql.SqlNotificationRequest\"></xref> object bound to this command."}],"pos":[236792,236922],"yaml":true},{"content":"You must set the value for this property before the command is executed for it to take effect.","nodes":[{"pos":[0,94],"content":"You must set the value for this property before the command is executed for it to take effect.","nodes":[{"content":"You must set the value for this property before the command is executed for it to take effect.","pos":[0,94]}]}],"pos":[236933,237028],"yaml":true,"extradata":"MT"},{"content":"When set to null (default), no notification should be requested.","nodes":[{"pos":[0,64],"content":"When set to null (default), no notification should be requested.","nodes":[{"content":"When set to null (default), no notification should be requested.","pos":[0,64]}]}],"pos":[237263,237328],"yaml":true},{"content":"Gets or sets a value indicating whether the application should automatically receive query notifications from a common <xref href=\"System.Data.SqlClient.SqlDependency\"></xref> object.","nodes":[{"pos":[0,183],"content":"Gets or sets a value indicating whether the application should automatically receive query notifications from a common <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlDependency\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets a value indicating whether the application should automatically receive query notifications from a common <xref href=\"System.Data.SqlClient.SqlDependency\"></xref> object."}],"pos":[238573,238757],"yaml":true},{"content":"This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server. This enables ASP.NET to cache the page until the queries used to render the page would produce a different result. Automatic enlistment.  \n  \n This property applies only to versions of SQL Server that support query notifications. For earlier versions, setting this property to **true** has no effect on the application.","nodes":[{"pos":[0,267],"content":"This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server. This enables ASP.NET to cache the page until the queries used to render the page would produce a different result. Automatic enlistment.","nodes":[{"content":"This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server. This enables ASP.NET to cache the page until the queries used to render the page would produce a different result. Automatic enlistment.","pos":[0,267],"nodes":[{"content":"This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server.","pos":[0,130]},{"content":"This enables ASP.NET to cache the page until the queries used to render the page would produce a different result.","pos":[131,245]},{"content":"Automatic enlistment.","pos":[246,267]}]}]},{"pos":[274,450],"content":"This property applies only to versions of SQL Server that support query notifications. For earlier versions, setting this property to **true** has no effect on the application.","nodes":[{"content":"This property applies only to versions of SQL Server that support query notifications.","pos":[0,86]},{"content":"For earlier versions, setting this property to <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> has no effect on the application.","pos":[87,176],"source":" For earlier versions, setting this property to **true** has no effect on the application."}]}],"pos":[238768,239223],"yaml":true,"extradata":"MT"},{"content":"**true** if the application should automatically receive query notifications; otherwise **false**. The default value is **true**.","nodes":[{"pos":[0,129],"content":"**true** if the application should automatically receive query notifications; otherwise **false**. The default value is **true**.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if the application should automatically receive query notifications; otherwise <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","pos":[0,98],"source":"**true** if the application should automatically receive query notifications; otherwise **false**."},{"content":"The default value is <bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept>.","pos":[99,129],"source":" The default value is **true**."}]}],"pos":[239353,239485],"yaml":true},{"content":"Gets the <xref href=\"System.Data.SqlClient.SqlParameterCollection\"></xref>.","nodes":[{"pos":[0,75],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlParameterCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Data.SqlClient.SqlParameterCollection\"></xref>."}],"pos":[240662,240738],"yaml":true},{"content":"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of `CommandType.Text`. In this case, named parameters must be used. For example:  \n  \n SELECT * FROM Customers WHERE CustomerID = @CustomerID  \n  \n> [!NOTE]\n>  If the parameters in the collection do not match the requirements of the query to be executed, an error may result.  \n  \n For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).","nodes":[{"pos":[0,273],"content":"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of `CommandType.Text`. In this case, named parameters must be used. For example:","nodes":[{"content":"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of <ph id=\"ph1\">`CommandType.Text`</ph>.","pos":[0,215],"source":"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of `CommandType.Text`."},{"content":"In this case, named parameters must be used.","pos":[216,260]},{"content":"For example:","pos":[261,273]}]},{"pos":[280,334],"content":"SELECT * FROM Customers WHERE CustomerID = @CustomerID","nodes":[{"content":"SELECT * FROM Customers WHERE CustomerID = <ph id=\"ph1\">@CustomerID</ph>","pos":[0,54],"source":"SELECT * FROM Customers WHERE CustomerID = @CustomerID"}]},{"pos":[342,468],"content":"[!NOTE]\n If the parameters in the collection do not match the requirements of the query to be executed, an error may result.","leadings":["","> "],"nodes":[{"content":"If the parameters in the collection do not match the requirements of the query to be executed, an error may result.","pos":[9,124]}]},{"pos":[475,632],"content":"For more information, see <bpt id=\"p1\">[</bpt>Configuring Parameters and Parameter Data Types<ept id=\"p1\">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.","source":"For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)."}],"pos":[240749,241391],"yaml":true,"extradata":"MT"},{"content":"The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.","nodes":[{"pos":[0,101],"content":"The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.","nodes":[{"content":"The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.","pos":[0,101],"nodes":[{"content":"The parameters of the Transact-SQL statement or stored procedure.","pos":[0,65]},{"content":"The default is an empty collection.","pos":[66,101]}]}]}],"pos":[242116,242218],"yaml":true},{"content":"Creates a prepared version of the command on an instance of SQL Server.","nodes":[{"pos":[0,71],"content":"Creates a prepared version of the command on an instance of SQL Server.","nodes":[{"content":"Creates a prepared version of the command on an instance of SQL Server.","pos":[0,71]}]}],"pos":[243465,243537],"yaml":true},{"content":"If <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> should succeed, although it may cause a no-op.  \n  \n Before you call <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared. For each parameter that has a variable length data type, you must set the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property to the maximum size needed. <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> returns an error if these conditions are not met.  \n  \n> [!NOTE]\n>  If the database context is changed by executing the Transact-SQL `USE <database>` statement, or by calling the <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> method, then <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> must be called a second time.  \n  \n If you call an `Execute` method after calling <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, any parameter value that is larger than the value specified by the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.  \n  \n Output parameters (whether prepared or not) must have a user-specified data type. If you specify a variable length data type, you must also specify the maximum <xref:System.Data.SqlClient.SqlParameter.Size%2A>.  \n  \n Prior to Visual Studio 2010, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> threw an exception.  Beginning in Visual Studio 2010, this method does not throw an exception.","nodes":[{"pos":[0,196],"content":"If <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> is set to <ph id=\"ph2\">`StoredProcedure`</ph>, the call to <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> should succeed, although it may cause a no-op.","source":"If <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> should succeed, although it may cause a no-op."},{"pos":[203,605],"content":"Before you call <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared. For each parameter that has a variable length data type, you must set the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property to the maximum size needed. <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> returns an error if these conditions are not met.","nodes":[{"content":"Before you call <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared. For each parameter that has a variable length data type, you must set the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property to the maximum size needed. <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> returns an error if these conditions are not met.","pos":[0,402],"nodes":[{"content":"Before you call <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, specify the data type of each parameter in the statement to be prepared.","pos":[0,140],"source":"Before you call <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared."},{"content":"For each parameter that has a variable length data type, you must set the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> property to the maximum size needed.","pos":[141,301],"source":" For each parameter that has a variable length data type, you must set the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property to the maximum size needed."},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> returns an error if these conditions are not met.","pos":[302,402],"source":" <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> returns an error if these conditions are not met."}]}]},{"pos":[613,889],"content":"[!NOTE]\n If the database context is changed by executing the Transact-SQL `USE <database>` statement, or by calling the <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> method, then <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> must be called a second time.","leadings":["","> "],"nodes":[{"content":"If the database context is changed by executing the Transact-SQL <ph id=\"ph1\">`USE &lt;database&gt;`</ph> statement, or by calling the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph> method, then <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> must be called a second time.","pos":[9,274],"source":" If the database context is changed by executing the Transact-SQL `USE <database>` statement, or by calling the <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> method, then <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> must be called a second time."}]},{"pos":[896,1234],"content":"If you call an <ph id=\"ph1\">`Execute`</ph> method after calling <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, any parameter value that is larger than the value specified by the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.","source":"If you call an `Execute` method after calling <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, any parameter value that is larger than the value specified by the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned."},{"pos":[1241,1451],"content":"Output parameters (whether prepared or not) must have a user-specified data type. If you specify a variable length data type, you must also specify the maximum <xref:System.Data.SqlClient.SqlParameter.Size%2A>.","nodes":[{"content":"Output parameters (whether prepared or not) must have a user-specified data type. If you specify a variable length data type, you must also specify the maximum <xref:System.Data.SqlClient.SqlParameter.Size%2A>.","pos":[0,210],"nodes":[{"content":"Output parameters (whether prepared or not) must have a user-specified data type.","pos":[0,81]},{"content":"If you specify a variable length data type, you must also specify the maximum <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph>.","pos":[82,210],"source":" If you specify a variable length data type, you must also specify the maximum <xref:System.Data.SqlClient.SqlParameter.Size%2A>."}]}]},{"pos":[1458,1632],"content":"Prior to Visual Studio 2010, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> threw an exception.  Beginning in Visual Studio 2010, this method does not throw an exception.","nodes":[{"content":"Prior to Visual Studio 2010, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> threw an exception.  Beginning in Visual Studio 2010, this method does not throw an exception.","pos":[0,174],"nodes":[{"content":"Prior to Visual Studio 2010, <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> threw an exception.","pos":[0,99],"source":"Prior to Visual Studio 2010, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> threw an exception."},{"content":"Beginning in Visual Studio 2010, this method does not throw an exception.","pos":[101,174]}]}]}],"pos":[243548,245194],"yaml":true,"extradata":"MT"},{"content":"Resets the <xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"></xref> property to its default value.","nodes":[{"pos":[0,110],"content":"Resets the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"&gt;&lt;/xref&gt;</ph> property to its default value.","source":"Resets the <xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"></xref> property to its default value."}],"pos":[246963,247074],"yaml":true},{"content":"The default value of the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> is 30 seconds.","nodes":[{"pos":[0,97],"content":"The default value of the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> is 30 seconds.","nodes":[{"content":"The default value of the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> is 30 seconds.","pos":[0,97],"source":"The default value of the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> is 30 seconds."}]}],"pos":[247085,247183],"yaml":true,"extradata":"MT"},{"content":"Occurs when the execution of a Transact-SQL statement completes.","nodes":[{"pos":[0,64],"content":"Occurs when the execution of a Transact-SQL statement completes.","nodes":[{"content":"Occurs when the execution of a Transact-SQL statement completes.","pos":[0,64]}]}],"pos":[248463,248528],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref> within which the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> executes.","nodes":[{"pos":[0,155],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlTransaction\"&gt;&lt;/xref&gt;</ph> within which the <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> executes.","source":"Gets or sets the <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref> within which the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> executes."}],"pos":[249909,250065],"yaml":true},{"content":"You cannot set the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing. If you set the transaction property to a <xref:System.Data.SqlClient.SqlTransaction> object that is not connected to the same <xref:System.Data.SqlClient.SqlConnection> as the <xref:System.Data.SqlClient.SqlCommand> object, an exception is thrown the next time that you attempt to execute a statement.","nodes":[{"pos":[0,474],"content":"You cannot set the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing. If you set the transaction property to a <xref:System.Data.SqlClient.SqlTransaction> object that is not connected to the same <xref:System.Data.SqlClient.SqlConnection> as the <xref:System.Data.SqlClient.SqlCommand> object, an exception is thrown the next time that you attempt to execute a statement.","nodes":[{"content":"You cannot set the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing. If you set the transaction property to a <xref:System.Data.SqlClient.SqlTransaction> object that is not connected to the same <xref:System.Data.SqlClient.SqlConnection> as the <xref:System.Data.SqlClient.SqlCommand> object, an exception is thrown the next time that you attempt to execute a statement.","pos":[0,474],"nodes":[{"content":"You cannot set the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> property if it is already set to a specific value, and the command is in the process of executing.","pos":[0,172],"source":"You cannot set the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing."},{"content":"If you set the transaction property to a <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object that is not connected to the same <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> as the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object, an exception is thrown the next time that you attempt to execute a statement.","pos":[173,474],"source":" If you set the transaction property to a <xref:System.Data.SqlClient.SqlTransaction> object that is not connected to the same <xref:System.Data.SqlClient.SqlConnection> as the <xref:System.Data.SqlClient.SqlCommand> object, an exception is thrown the next time that you attempt to execute a statement."}]}]}],"pos":[250076,250551],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref>. The default value is `null`.","nodes":[{"pos":[0,91],"content":"The <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref>. The default value is `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlTransaction\"&gt;&lt;/xref&gt;</ph>.","pos":[0,62],"source":"The <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref>."},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[63,91],"source":" The default value is `null`."}]}],"pos":[250781,250873],"yaml":true},{"content":"Gets or sets how command results are applied to the <xref href=\"System.Data.DataRow\"></xref> when used by the **Update** method of the <xref href=\"System.Data.Common.DbDataAdapter\"></xref>.","nodes":[{"pos":[0,189],"content":"Gets or sets how command results are applied to the <ph id=\"ph1\">&lt;xref href=\"System.Data.DataRow\"&gt;&lt;/xref&gt;</ph> when used by the <bpt id=\"p1\">**</bpt>Update<ept id=\"p1\">**</ept> method of the <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataAdapter\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets how command results are applied to the <xref href=\"System.Data.DataRow\"></xref> when used by the **Update** method of the <xref href=\"System.Data.Common.DbDataAdapter\"></xref>."}],"pos":[252219,252409],"yaml":true},{"content":"The default <xref:System.Data.UpdateRowSource> value is **Both** unless the command is automatically generated (as in the case of the <xref:System.Data.SqlClient.SqlCommandBuilder>), in which case the default is **None**.  \n  \n For more information about using the **UpdatedRowSource** property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).","nodes":[{"pos":[0,221],"content":"The default <ph id=\"ph1\">&lt;xref:System.Data.UpdateRowSource&gt;</ph> value is <bpt id=\"p1\">**</bpt>Both<ept id=\"p1\">**</ept> unless the command is automatically generated (as in the case of the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>), in which case the default is <bpt id=\"p2\">**</bpt>None<ept id=\"p2\">**</ept>.","source":"The default <xref:System.Data.UpdateRowSource> value is **Both** unless the command is automatically generated (as in the case of the <xref:System.Data.SqlClient.SqlCommandBuilder>), in which case the default is **None**."},{"pos":[228,381],"content":"For more information about using the <bpt id=\"p1\">**</bpt>UpdatedRowSource<ept id=\"p1\">**</ept> property, see <bpt id=\"p2\">[</bpt>DataAdapter Parameters<ept id=\"p2\">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>.","source":"For more information about using the **UpdatedRowSource** property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md)."}],"pos":[252420,252806],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Data.UpdateRowSource\"></xref> values.","nodes":[{"pos":[0,67],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Data.UpdateRowSource\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Data.UpdateRowSource\"></xref> values."}],"pos":[252975,253043],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of the current instance.","nodes":[{"pos":[0,114],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object that is a copy of the current instance.","source":"Creates a new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of the current instance."}],"pos":[254369,254484],"yaml":true},{"content":"A new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of this instance.","nodes":[{"pos":[0,99],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlCommand\"&gt;&lt;/xref&gt;</ph> object that is a copy of this instance.","source":"A new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of this instance."}],"pos":[254611,254711],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlClient.SqlCommand\n  commentId: T:System.Data.SqlClient.SqlCommand\n  id: SqlCommand\n  children:\n  - System.Data.SqlClient.SqlCommand.#ctor\n  - System.Data.SqlClient.SqlCommand.#ctor(System.String)\n  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)\n  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)\n  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)\n  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\n  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)\n  - System.Data.SqlClient.SqlCommand.BeginExecuteReader\n  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)\n  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)\n  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)\n  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)\n  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\n  - System.Data.SqlClient.SqlCommand.Cancel\n  - System.Data.SqlClient.SqlCommand.Clone\n  - System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting\n  - System.Data.SqlClient.SqlCommand.CommandText\n  - System.Data.SqlClient.SqlCommand.CommandTimeout\n  - System.Data.SqlClient.SqlCommand.CommandType\n  - System.Data.SqlClient.SqlCommand.Connection\n  - System.Data.SqlClient.SqlCommand.CreateDbParameter\n  - System.Data.SqlClient.SqlCommand.CreateParameter\n  - System.Data.SqlClient.SqlCommand.DbConnection\n  - System.Data.SqlClient.SqlCommand.DbParameterCollection\n  - System.Data.SqlClient.SqlCommand.DbTransaction\n  - System.Data.SqlClient.SqlCommand.DesignTimeVisible\n  - System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)\n  - System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\n  - System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\n  - System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\n  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.ExecuteNonQuery\n  - System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.ExecuteReader\n  - System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\n  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\n  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.ExecuteScalar\n  - System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.ExecuteXmlReader\n  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync\n  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)\n  - System.Data.SqlClient.SqlCommand.Notification\n  - System.Data.SqlClient.SqlCommand.NotificationAutoEnlist\n  - System.Data.SqlClient.SqlCommand.Parameters\n  - System.Data.SqlClient.SqlCommand.Prepare\n  - System.Data.SqlClient.SqlCommand.ResetCommandTimeout\n  - System.Data.SqlClient.SqlCommand.StatementCompleted\n  - System.Data.SqlClient.SqlCommand.Transaction\n  - System.Data.SqlClient.SqlCommand.UpdatedRowSource\n  - System.Data.SqlClient.SqlCommand.System#ICloneable#Clone\n  langs:\n  - csharp\n  name: SqlCommand\n  nameWithType: SqlCommand\n  fullName: System.Data.SqlClient.SqlCommand\n  type: Class\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.\n  remarks: \"When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the read/write properties are set to their initial values. For a list of these values, see the <xref:System.Data.SqlClient.SqlCommand> constructor.  \\n  \\n <xref:System.Data.SqlClient.SqlCommand> features the following methods for executing commands at a SQL Server database:  \\n  \\n|Item|Description|  \\n|----------|-----------------|  \\n|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>|Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements. Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> which finishes the operation, typically on a separate thread.|  \\n|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>|Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand> and retrieves one or more results sets from the server. Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> which finishes the operation, typically on a separate thread.|  \\n|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>|Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>. Each call to `BeginExecuteXmlReader` must be paired with a call to `EndExecuteXmlReader`, which finishes the operation, typically on a separate thread, and returns an <xref:System.Xml.XmlReader> object.|  \\n|<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>|Executes commands that return rows. For increased performance, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> invokes commands using the Transact-SQL `sp_executesql` system stored procedure. Therefore, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.|  \\n|<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>|Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.|  \\n|<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>|Retrieves a single value (for example, an aggregate value) from a database.|  \\n|<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>|Sends the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> to the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> and builds an <xref:System.Xml.XmlReader> object.|  \\n  \\n You can reset the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property and reuse the <xref:System.Data.SqlClient.SqlCommand> object. However, you must close the <xref:System.Data.SqlClient.SqlDataReader> before you can execute a new or previous command.  \\n  \\n If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue.  \\n  \\n> [!NOTE]\\n>  Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader> and then the <xref:System.Data.SqlClient.SqlConnection> as it exits the `Using` code blocks.  \\n  \\n [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  \\n  \\n The following sample shows how to create and execute different types of SqlCommand objects.  \\n  \\n First you must create the sample database, by executing the following script:  \\n  \\n```  \\nUSE [master]  \\nGO  \\n  \\nCREATE DATABASE [MySchool]  \\nGO  \\n  \\nUSE [MySchool]  \\nGO  \\n  \\nSET ANSI_NULLS ON  \\nGO  \\nSET QUOTED_IDENTIFIER ON  \\nGO  \\nCREATE procedure [dbo].[CourseExtInfo] @CourseId int  \\nas  \\nselect c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  \\nfrom Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  \\nwhere c.CourseID=@CourseId  \\n  \\nGO  \\n  \\nSET ANSI_NULLS ON  \\nGO  \\nSET QUOTED_IDENTIFIER ON  \\nGO  \\ncreate procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  \\nas  \\nselect @CourseCount=Count(c.CourseID)  \\nfrom course as c  \\nwhere c.DepartmentID=@DepartmentId  \\n  \\nselect d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  \\nfrom Department as d  \\nwhere d.DepartmentID=@DepartmentId  \\n  \\nGO  \\n  \\nSET ANSI_NULLS ON  \\nGO  \\nSET QUOTED_IDENTIFIER ON  \\nGO  \\nCreate PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   \\n@Year int,@BudgetSum money output  \\nAS  \\nBEGIN  \\n        SELECT @BudgetSum=SUM([Budget])  \\n  FROM [MySchool].[dbo].[Department]  \\n  Where YEAR([StartDate])=@Year   \\n  \\nSELECT [DepartmentID]  \\n      ,[Name]  \\n      ,[Budget]  \\n      ,[StartDate]  \\n      ,[Administrator]  \\n  FROM [MySchool].[dbo].[Department]  \\n  Where YEAR([StartDate])=@Year  \\n  \\nEND  \\nGO  \\n  \\nSET ANSI_NULLS ON  \\nGO  \\nSET QUOTED_IDENTIFIER ON  \\nGO  \\nCREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  \\n[Year] [smallint] NOT NULL,  \\n[Title] [nvarchar](100) NOT NULL,  \\n[Credits] [int] NOT NULL,  \\n[DepartmentID] [int] NOT NULL,  \\n CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   \\n(  \\n[CourseID] ASC,  \\n[Year] ASC  \\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \\n  \\nGO  \\n  \\nSET ANSI_NULLS ON  \\nGO  \\nSET QUOTED_IDENTIFIER ON  \\nGO  \\nCREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  \\n[Name] [nvarchar](50) NOT NULL,  \\n[Budget] [money] NOT NULL,  \\n[StartDate] [datetime] NOT NULL,  \\n[Administrator] [int] NULL,  \\n CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   \\n(  \\n[DepartmentID] ASC  \\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \\n  \\nGO  \\n  \\nSET ANSI_NULLS ON  \\nGO  \\nSET QUOTED_IDENTIFIER ON  \\nGO  \\nCREATE TABLE [dbo].[Person]([PersonID] [int] IDENTITY(1,1) NOT NULL,  \\n[LastName] [nvarchar](50) NOT NULL,  \\n[FirstName] [nvarchar](50) NOT NULL,  \\n[HireDate] [datetime] NULL,  \\n[EnrollmentDate] [datetime] NULL,  \\n CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   \\n(  \\n[PersonID] ASC  \\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \\n  \\nGO  \\n  \\nSET ANSI_NULLS ON  \\nGO  \\nSET QUOTED_IDENTIFIER ON  \\nGO  \\nCREATE TABLE [dbo].[StudentGrade]([EnrollmentID] [int] IDENTITY(1,1) NOT NULL,  \\n[CourseID] [nvarchar](10) NOT NULL,  \\n[StudentID] [int] NOT NULL,  \\n[Grade] [decimal](3, 2) NOT NULL,  \\n CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   \\n(  \\n[EnrollmentID] ASC  \\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \\n  \\nGO  \\n  \\nSET ANSI_NULLS ON  \\nGO  \\nSET QUOTED_IDENTIFIER ON  \\nGO  \\ncreate view [dbo].[EnglishCourse]  \\nas  \\nselect c.CourseID,c.Title,c.Credits,c.DepartmentID  \\nfrom Course as c join Department as d on c.DepartmentID=d.DepartmentID  \\nwhere d.Name=N'English'  \\n  \\nGO  \\nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  \\nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  \\nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  \\nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  \\nSET IDENTITY_INSERT [dbo].[Department] ON   \\n  \\nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  \\nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  \\nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  \\nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  \\nSET IDENTITY_INSERT [dbo].[Department] OFF  \\nSET IDENTITY_INSERT [dbo].[Person] ON   \\n  \\nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \\nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \\nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \\nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \\nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \\nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  \\nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  \\nSET IDENTITY_INSERT [dbo].[Person] OFF  \\nSET IDENTITY_INSERT [dbo].[StudentGrade] ON   \\n  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  \\nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  \\nSET IDENTITY_INSERT [dbo].[StudentGrade] OFF  \\nALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  \\nREFERENCES [dbo].[Department] ([DepartmentID])  \\nGO  \\nALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  \\nGO  \\nALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  \\nREFERENCES [dbo].[Person] ([PersonID])  \\nGO  \\nALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  \\nGO  \\n```  \\n  \\n Next, compile and execute the following:  \\n  \\n```  \\nusing System;  \\nusing System.Data;  \\nusing System.Data.SqlClient;  \\nusing System.Threading.Tasks;  \\n  \\nclass Program {  \\n  \\n   static class SqlHelper {  \\n      // Set the connection, command, and then execute the command with non query.  \\n      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  \\n          CommandType commandType, params SqlParameter[] parameters) {  \\n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \\n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \\n               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   \\n               // type is only for OLE DB.    \\n               cmd.CommandType = commandType;  \\n               cmd.Parameters.AddRange(parameters);  \\n  \\n               conn.Open();  \\n               return cmd.ExecuteNonQuery();  \\n            }  \\n         }  \\n      }  \\n  \\n      // Set the connection, command, and then execute the command and only return one value.  \\n      public static Object ExecuteScalar(String connectionString, String commandText,  \\n          CommandType commandType, params SqlParameter[] parameters) {  \\n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \\n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \\n               cmd.CommandType = commandType;  \\n               cmd.Parameters.AddRange(parameters);  \\n  \\n               conn.Open();  \\n               return cmd.ExecuteScalar();  \\n            }  \\n         }  \\n      }  \\n  \\n      // Set the connection, command, and then execute the command with query and return the reader.  \\n      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  \\n          CommandType commandType, params SqlParameter[] parameters) {  \\n         SqlConnection conn = new SqlConnection(connectionString);  \\n  \\n         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \\n            cmd.CommandType = commandType;  \\n            cmd.Parameters.AddRange(parameters);  \\n  \\n            conn.Open();  \\n            // When using CommandBehavior.CloseConnection, the connection will be closed when the   \\n            // IDataReader is closed.  \\n            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  \\n  \\n            return reader;  \\n         }  \\n      }  \\n   }  \\n  \\n   static void Main(string[] args) {  \\n      String connectionString = \\\"Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;\\\";  \\n  \\n      CountCourses(connectionString, 2012);  \\n      Console.WriteLine();  \\n  \\n      Console.WriteLine(\\\"Following result is the departments that started from 2007:\\\");  \\n      GetDepartments(connectionString, 2007);  \\n      Console.WriteLine();  \\n  \\n      Console.WriteLine(\\\"Add the credits when the credits of course is lower than 4.\\\");  \\n      AddCredits(connectionString, 4);  \\n      Console.WriteLine();  \\n  \\n      Console.WriteLine(\\\"Please press any key to exit...\\\");  \\n      Console.ReadKey();  \\n   }  \\n  \\n   static void CountCourses(String connectionString, Int32 year) {  \\n      String commandText = \\\"Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year\\\";  \\n      SqlParameter parameterYear = new SqlParameter(\\\"@Year\\\", SqlDbType.Int);  \\n      parameterYear.Value = year;  \\n  \\n      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  \\n      Int32 count;  \\n      if (Int32.TryParse(oValue.ToString(), out count))  \\n         Console.WriteLine(\\\"There {0} {1} course{2} in {3}.\\\", count > 1 ? \\\"are\\\" : \\\"is\\\", count, count > 1 ? \\\"s\\\" : null, year);  \\n   }  \\n  \\n   // Display the Departments that start from the specified year.  \\n   static void GetDepartments(String connectionString, Int32 year) {  \\n      String commandText = \\\"dbo.GetDepartmentsOfSpecifiedYear\\\";  \\n  \\n      // Specify the year of StartDate  \\n      SqlParameter parameterYear = new SqlParameter(\\\"@Year\\\", SqlDbType.Int);  \\n      parameterYear.Value = year;  \\n  \\n      // When the direction of parameter is set as Output, you can get the value after   \\n      // executing the command.  \\n      SqlParameter parameterBudget = new SqlParameter(\\\"@BudgetSum\\\", SqlDbType.Money);  \\n      parameterBudget.Direction = ParameterDirection.Output;  \\n  \\n      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  \\n          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  \\n         Console.WriteLine(\\\"{0,-20}{1,-20}{2,-20}{3,-20}\\\", \\\"Name\\\", \\\"Budget\\\", \\\"StartDate\\\",  \\n             \\\"Administrator\\\");  \\n         while (reader.Read()) {  \\n            Console.WriteLine(\\\"{0,-20}{1,-20:C}{2,-20:d}{3,-20}\\\", reader[\\\"Name\\\"],  \\n                reader[\\\"Budget\\\"], reader[\\\"StartDate\\\"], reader[\\\"Administrator\\\"]);  \\n         }  \\n      }  \\n      Console.WriteLine(\\\"{0,-20}{1,-20:C}\\\", \\\"Sum:\\\", parameterBudget.Value);  \\n   }  \\n  \\n   // If credits of course is lower than the certain value, the method will add the credits.  \\n   static void AddCredits(String connectionString, Int32 creditsLow) {  \\n      String commandText = \\\"Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits\\\";  \\n  \\n      SqlParameter parameterCredits = new SqlParameter(\\\"@Credits\\\", creditsLow);  \\n  \\n      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  \\n  \\n      Console.WriteLine(\\\"{0} row{1} {2} updated.\\\", rows, rows > 1 ? \\\"s\\\" : null, rows > 1 ? \\\"are\\\" : \\\"is\\\");  \\n   }  \\n}  \\n```\"\n  syntax:\n    content: 'public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable, IDisposable'\n  inheritance:\n  - System.Object\n  - System.Data.Common.DbCommand\n  implements:\n  - System.ICloneable\n  - System.IDisposable\n  inheritedMembers:\n  - System.Data.Common.DbCommand.Dispose\n  - System.Data.Common.DbCommand.ExecuteNonQueryAsync\n  - System.Data.Common.DbCommand.ExecuteScalarAsync\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters\n  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.#ctor\n  commentId: M:System.Data.SqlClient.SqlCommand.#ctor\n  id: '#ctor'\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: SqlCommand()\n  nameWithType: SqlCommand.SqlCommand()\n  fullName: SqlCommand.SqlCommand()\n  type: Constructor\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class.\n  remarks: \"The base constructor initializes all fields to their default values. The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.  \\n  \\n|Properties|Initial value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|empty string (\\\"\\\")|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \\n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Null|  \\n  \\n You can change the value for any of these properties through a separate call to the property.\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets the `CommandTimeout` property.  \\n  \\n [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]\"\n  syntax:\n    content: public SqlCommand ();\n    parameters: []\n  overload: System.Data.SqlClient.SqlCommand.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)\n  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: SqlCommand(String)\n  nameWithType: SqlCommand.SqlCommand(String)\n  fullName: SqlCommand.SqlCommand(String)\n  type: Constructor\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with the text of the query.\n  remarks: \"When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the following read/write properties are set to initial values.  \\n  \\n|Properties|Initial value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \\n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|null|  \\n  \\n You can change the value for any of these properties through a separate call to the property.\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlCommand>, passing in the connection string and command text.  \\n  \\n [!code-csharp[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/VB/source.vb#1)]\"\n  syntax:\n    content: public SqlCommand (string cmdText);\n    parameters:\n    - id: cmdText\n      type: System.String\n      description: The text of the query.\n  overload: System.Data.SqlClient.SqlCommand.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)\n  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)\n  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: SqlCommand(String, SqlConnection)\n  nameWithType: SqlCommand.SqlCommand(String, SqlConnection)\n  fullName: SqlCommand.SqlCommand(String, SqlConnection)\n  type: Constructor\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with the text of the query and a <xref href=\"System.Data.SqlClient.SqlConnection\"></xref>.\n  remarks: \"The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.  \\n  \\n|Properties|Initial value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \\n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.|  \\n  \\n You can change the value for any of these parameters by setting the related property.\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \\n  \\n [!code-csharp[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/VB/source.vb#1)]\"\n  syntax:\n    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);\n    parameters:\n    - id: cmdText\n      type: System.String\n      description: The text of the query.\n    - id: connection\n      type: System.Data.SqlClient.SqlConnection\n      description: A <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> that represents the connection to an instance of SQL Server.\n  overload: System.Data.SqlClient.SqlCommand.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)\n  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)\n  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)'\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: SqlCommand(String, SqlConnection, SqlTransaction)\n  nameWithType: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction)\n  fullName: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction)\n  type: Constructor\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with the text of the query, a <xref href=\"System.Data.SqlClient.SqlConnection\"></xref>, and the <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref>.\n  remarks: \"The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.  \\n  \\n|Properties|Initial value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \\n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \\n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.|  \\n  \\n You can change the value for any of these parameters by setting the related property.\"\n  syntax:\n    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);\n    parameters:\n    - id: cmdText\n      type: System.String\n      description: The text of the query.\n    - id: connection\n      type: System.Data.SqlClient.SqlConnection\n      description: A <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> that represents the connection to an instance of SQL Server.\n    - id: transaction\n      type: System.Data.SqlClient.SqlTransaction\n      description: The <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref> in which the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> executes.\n  overload: System.Data.SqlClient.SqlCommand.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)\n  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)\n  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)'\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)\n  nameWithType: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)\n  fullName: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> class with specified command text, connection, transaction, and encryption setting.\n  syntax:\n    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);\n    parameters:\n    - id: cmdText\n      type: System.String\n      description: The text of the query.\n    - id: connection\n      type: System.Data.SqlClient.SqlConnection\n      description: A <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> that represents the connection to an instance of SQL Server.\n    - id: transaction\n      type: System.Data.SqlClient.SqlTransaction\n      description: The <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref> in which the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> executes.\n    - id: columnEncryptionSetting\n      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting\n      description: The encryption setting. For more information, see [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).\n  overload: System.Data.SqlClient.SqlCommand.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\n  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\n  id: BeginExecuteNonQuery\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: BeginExecuteNonQuery()\n  nameWithType: SqlCommand.BeginExecuteNonQuery()\n  fullName: SqlCommand.BeginExecuteNonQuery()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.\n  remarks: \"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \\n  \\n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.  \\n  \\n Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.\"\n  example:\n  - \"The following console application creates updates data within the **AdventureWorks** sample database, doing its work asynchronously. In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text. Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.  \\n  \\n [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/CS/source.cs#1)]\\n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/VB/source.vb#1)]\"\n  syntax:\n    content: public IAsyncResult BeginExecuteNonQuery ();\n    parameters: []\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref>, which returns the number of affected rows.\n  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"Any error that occurred while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The name/value pair \\\"Asynchronous Processing=true\\\" was not included within the connection string defining the connection for this <xref href=\\\"System.Data.SqlClient.SqlCommand\\\"></xref>.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)\n  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)\n  id: BeginExecuteNonQuery(System.AsyncCallback,System.Object)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: BeginExecuteNonQuery(AsyncCallback, Object)\n  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback, Object)\n  fullName: SqlCommand.BeginExecuteNonQuery(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>, given a callback procedure and state information.\n  remarks: \"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \\n  \\n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `asyncStateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \\n  \\n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.  \\n  \\n Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.  \\n  \\n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.\"\n  example:\n  - \"The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).  \\n  \\n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \\n  \\n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \\n  \\n [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/CS/Form1.cs#1)]\\n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/VB/Form1.vb#1)]\"\n  syntax:\n    content: public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.\n    - id: stateObject\n      type: System.Object\n      description: A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref>, which returns the number of affected rows.\n  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"Any error that occurred while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The name/value pair \\\"Asynchronous Processing=true\\\" was not included within the connection string defining the connection for this <xref href=\\\"System.Data.SqlClient.SqlCommand\\\"></xref>.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader\n  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteReader\n  id: BeginExecuteReader\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: BeginExecuteReader()\n  nameWithType: SqlCommand.BeginExecuteReader()\n  fullName: SqlCommand.BeginExecuteReader()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>, and retrieves one or more result sets from the server.\n  remarks: \"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \\n  \\n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \\n  \\n Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.  \\n  \\n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \\\"PRB: XML Data Is Truncated When You Use SqlDataReader,\\\" in the Microsoft Knowledge Base at http://support.microsoft.com.\"\n  example:\n  - \"The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. As soon as the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \\n  \\n [!code-csharp[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/CS/source.cs#1)]\\n [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/VB/source.vb#1)]\"\n  syntax:\n    content: public IAsyncResult BeginExecuteReader ();\n    parameters: []\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance that can be used to retrieve the returned rows.\n  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"Any error that occurred while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The name/value pair \\\"Asynchronous Processing=true\\\" was not included within the connection string defining the connection for this <xref href=\\\"System.Data.SqlClient.SqlCommand\\\"></xref>.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)\n  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)\n  id: BeginExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: BeginExecuteReader(CommandBehavior)\n  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)\n  fullName: SqlCommand.BeginExecuteReader(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n  remarks: \"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \\n  \\n The `behavior` parameter lets you specify options that control the behavior of the command and its connection. These values can be combined together (using the programming language's `OR` operator); generally, developers use the `CommandBehavior.CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed.  \\n  \\n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \\n  \\n Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.  \\n  \\n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \\\"PRB: XML Data Is Truncated When You Use SqlDataReader,\\\" in the Microsoft Knowledge Base at http://support.microsoft.com.\"\n  example:\n  - \"The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \\n  \\n This example also passes the `CommandBehavior.CloseConnection` and `CommandBehavior.SingleRow` values in the behavior parameter, causing the connection to be closed with the returned <xref:System.Data.SqlClient.SqlDataReader> is closed, and to optimize for a single row result.  \\n  \\n [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/CS/source.cs#1)]\\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/VB/source.vb#1)]\"\n  syntax:\n    content: public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: One of the <xref href=\"System.Data.CommandBehavior\"></xref> values, indicating options for statement execution and data retrieval.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll, wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance that can be used to retrieve the returned rows.\n  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"Any error that occurred while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The name/value pair \\\"Asynchronous Processing=true\\\" was not included within the connection string defining the connection for this <xref href=\\\"System.Data.SqlClient.SqlCommand\\\"></xref>.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)\n  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)\n  id: BeginExecuteReader(System.AsyncCallback,System.Object)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: BeginExecuteReader(AsyncCallback, Object)\n  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback, Object)\n  fullName: SqlCommand.BeginExecuteReader(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and retrieves one or more result sets from the server, given a callback procedure and state information.\n  remarks: \"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed cause the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \\n  \\n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \\n  \\n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \\n  \\n Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.  \\n  \\n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.  \\n  \\n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \\\"PRB: XML Data Is Truncated When You Use SqlDataReader,\\\" in the Microsoft Knowledge Base at http://support.microsoft.com.\"\n  example:\n  - \"The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \\n  \\n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \\n  \\n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \\n  \\n [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/CS/Form1.cs#1)]\\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/VB/Form1.vb#1)]\"\n  syntax:\n    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.\n    - id: stateObject\n      type: System.Object\n      description: A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll, wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance which can be used to retrieve the returned rows.\n  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"Any error that occurred while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The name/value pair \\\"Asynchronous Processing=true\\\" was not included within the connection string defining the connection for this <xref href=\\\"System.Data.SqlClient.SqlCommand\\\"></xref>.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)\n  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)\n  id: BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: BeginExecuteReader(AsyncCallback, Object, CommandBehavior)\n  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback, Object, CommandBehavior)\n  fullName: SqlCommand.BeginExecuteReader(AsyncCallback, Object, CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>, using one of the `CommandBehavior` values, and retrieving one or more result sets from the server, given a callback procedure and state information.\n  remarks: \"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \\n  \\n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \\n  \\n The `behavior` parameter lets you specify options that control the behavior of the command and its connection. These values can be combined together (using the programming language's `Or` operator); generally, developers use the `CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed. Developers can also optimize the behavior of the <xref:System.Data.SqlClient.SqlDataReader> by specifying the `SingleRow` value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.  \\n  \\n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \\n  \\n Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.  \\n  \\n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.  \\n  \\n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \\\"PRB: XML Data Is Truncated When You Use SqlDataReader,\\\" in the Microsoft Knowledge Base at http://support.microsoft.com.\"\n  example:\n  - \"The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \\n  \\n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \\n  \\n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \\n  \\n This example passes the `CommandBehavior.CloseConnection` value in the `behavior` parameter, causing the returned <xref:System.Data.SqlClient.SqlDataReader> to automatically close its connection when it is closed.  \\n  \\n [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/CS/Form1.cs#1)]\\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/VB/Form1.vb#1)]\"\n  syntax:\n    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.\n    - id: stateObject\n      type: System.Object\n      description: A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: One of the <xref href=\"System.Data.CommandBehavior\"></xref> values, indicating options for statement execution and data retrieval.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref>, which returns a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> instance which can be used to retrieve the returned rows.\n  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"Any error that occurred while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The name/value pair \\\"Asynchronous Processing=true\\\" was not included within the connection string defining the connection for this <xref href=\\\"System.Data.SqlClient.SqlCommand\\\"></xref>.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)\n  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)\n  id: BeginExecuteXmlReader(System.AsyncCallback,System.Object)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: BeginExecuteXmlReader(AsyncCallback, Object)\n  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback, Object)\n  fullName: SqlCommand.BeginExecuteXmlReader(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and returns results as an <xref href=\"System.Xml.XmlReader\"></xref> object, using a callback procedure.\n  remarks: \"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method to finish the operation and retrieve the requested XML data. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \\n  \\n The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause. However, `CommandText` can also specify a statement that returns data that contains valid XML. This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \\n  \\n A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:  \\n  \\n```  \\nSqlCommand command = new SqlCommand(\\\"SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA\\\", SqlConn);  \\n```  \\n  \\n This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \\n  \\n The multiple active result set (MARS) feature lets multiple actions use the same connection.  \\n  \\n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \\n  \\n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters is sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.  \\n  \\n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.  \\n  \\n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \\\"PRB: XML Data Is Truncated When You Use SqlDataReader,\\\" in the Microsoft Knowledge Base at http://support.microsoft.com.\"\n  example:\n  - \"The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter--doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.  \\n  \\n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \\n  \\n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.ListBox> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \\n  \\n [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/CS/Form1.cs#1)]\\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/VB/Form1.vb#1)]\"\n  syntax:\n    content: public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.\n    - id: stateObject\n      type: System.Object\n      description: A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href=\"System.IAsyncResult.AsyncState\"></xref> property.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll, wait for results, or both; this value is also needed when the <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"></xref> is called, which returns the results of the command as XML.\n  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"Any error that occurred while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The name/value pair \\\"Asynchronous Processing=true\\\" was not included within the connection string defining the connection for this <xref href=\\\"System.Data.SqlClient.SqlCommand\\\"></xref>.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\n  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\n  id: BeginExecuteXmlReader\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: BeginExecuteXmlReader()\n  nameWithType: SqlCommand.BeginExecuteXmlReader()\n  fullName: SqlCommand.BeginExecuteXmlReader()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> and returns results as an <xref href=\"System.Xml.XmlReader\"></xref> object.\n  remarks: \"The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the `EndExecuteXmlReader` method to finish the operation and retrieve the XML returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding `EndExecuteXmlReader` method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the `EndExecuteXmlReader` before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \\n  \\n The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause. However, `CommandText` can also specify a statement that returns `ntext` data that contains valid XML.  \\n  \\n A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:  \\n  \\n```  \\nSqlCommand command = new SqlCommand(\\\"SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA\\\", SqlConn);  \\n```  \\n  \\n This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the `EndExecuteXmlReader` method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \\n  \\n The multiple active result set (MARS) feature lets multiple actions use the same connection.  \\n  \\n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous.  \\n  \\n Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.  \\n  \\n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \\\"PRB: XML Data Is Truncated When You Use SqlDataReader,\\\" in the Microsoft Knowledge Base at http://support.microsoft.com.\"\n  example:\n  - \"The following console application starts the process of retrieving XML data asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the XML and displays its contents.  \\n  \\n [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/CS/source.cs#1)]\\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/VB/source.vb#1)]\"\n  syntax:\n    content: public IAsyncResult BeginExecuteXmlReader ();\n    parameters: []\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking `EndExecuteXmlReader`, which returns a single XML value.\n  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"Any error that occurred while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The name/value pair \\\"Asynchronous Processing=true\\\" was not included within the connection string defining the connection for this <xref href=\\\"System.Data.SqlClient.SqlCommand\\\"></xref>.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.Cancel\n  commentId: M:System.Data.SqlClient.SqlCommand.Cancel\n  id: Cancel\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: Cancel()\n  nameWithType: SqlCommand.Cancel()\n  fullName: SqlCommand.Cancel()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Tries to cancel the execution of a <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.\n  remarks: \"If there is nothing to cancel, nothing occurs. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.  \\n  \\n In some, rare, cases, if you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> then call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (implicitily or explicitly) before calling <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, and then call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <xref:System.Data.SqlClient.SqlConnection.Close%2A>. To avoid this, make sure that you call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> before closing the reader or connection.\"\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method.  \\n  \\n [!code-csharp[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/VB/source.vb#1)]\"\n  syntax:\n    content: public override void Cancel ();\n    parameters: []\n  overload: System.Data.SqlClient.SqlCommand.Cancel*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.Clone\n  commentId: M:System.Data.SqlClient.SqlCommand.Clone\n  id: Clone\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: SqlCommand.Clone()\n  fullName: SqlCommand.Clone()\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: Creates a new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of the current instance.\n  syntax:\n    content: public System.Data.SqlClient.SqlCommand Clone ();\n    parameters: []\n    return:\n      type: System.Data.SqlClient.SqlCommand\n      description: A new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of this instance.\n  overload: System.Data.SqlClient.SqlCommand.Clone*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting\n  commentId: P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting\n  id: ColumnEncryptionSetting\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ColumnEncryptionSetting\n  nameWithType: SqlCommand.ColumnEncryptionSetting\n  fullName: SqlCommand.ColumnEncryptionSetting\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets or sets the column encryption setting for this command.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }\n    return:\n      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting\n      description: The column encryption setting for this command.\n  overload: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.CommandText\n  commentId: P:System.Data.SqlClient.SqlCommand.CommandText\n  id: CommandText\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: CommandText\n  nameWithType: SqlCommand.CommandText\n  fullName: SqlCommand.CommandText\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.\n  remarks: \"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The user may be required to use escape character syntax if the stored procedure name contains any special characters. The command executes this stored procedure when you call one of the `Execute` methods.  \\n  \\n The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of `CommandType.Text`. In this case, named parameters must be used. For example:  \\n  \\n```  \\nSELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID  \\n```  \\n  \\n For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \\n  \\n [!code-csharp[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override string CommandText { get; set; }\n    return:\n      type: System.String\n      description: The Transact-SQL statement or stored procedure to execute. The default is an empty string.\n  overload: System.Data.SqlClient.SqlCommand.CommandText*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.CommandTimeout\n  commentId: P:System.Data.SqlClient.SqlCommand.CommandTimeout\n  id: CommandTimeout\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: CommandTimeout\n  nameWithType: SqlCommand.CommandTimeout\n  fullName: SqlCommand.CommandTimeout\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets or sets the wait time before terminating the attempt to execute a command and generating an error.\n  remarks: \"A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).  \\n  \\n> [!NOTE]\\n>  The <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property will be ignored during asynchronous method calls such as <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \\n  \\n <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect when the command is executed against a context connection (a <xref:System.Data.SqlClient.SqlConnection> opened with \\\"context connection=true\\\" in the connection string).  \\n  \\n> [!NOTE]\\n>  This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results. A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.  \\n>   \\n>  For example, with a 30 second time out, if <xref:System.Data.SqlClient.SqlDataReader.Read%2A> requires two network packets, then it has 30 seconds to read both network packets. If you call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> again, it will have another 30 seconds to read any data that it requires.  \\n  \\n```  \\nusing System;  \\nusing System.Data.SqlClient;  \\n///   \\npublic class A {  \\n   ///   \\n   public static void Main() {  \\n      string connectionString = \\\"\\\";  \\n      // Wait for 5 second delay in the command  \\n      string queryString = \\\"waitfor delay '00:00:05'\\\";  \\n      using (SqlConnection connection = new SqlConnection(connectionString)) {  \\n         connection.Open();  \\n         SqlCommand command = new SqlCommand(queryString, connection);  \\n         // Setting command timeout to 1 second  \\n         command.CommandTimeout = 1;  \\n         try {  \\n            command.ExecuteNonQuery();  \\n         }  \\n         catch (SqlException e) {  \\n            Console.WriteLine(\\\"Got expected SqlException due to command timeout \\\");  \\n            Console.WriteLine(e);  \\n         }  \\n      }  \\n   }  \\n}  \\n```\"\n  syntax:\n    content: public override int CommandTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: The time in seconds to wait for the command to execute. The default is 30 seconds.\n  overload: System.Data.SqlClient.SqlCommand.CommandTimeout*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.CommandType\n  commentId: P:System.Data.SqlClient.SqlCommand.CommandType\n  id: CommandType\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: CommandType\n  nameWithType: SqlCommand.CommandType\n  fullName: SqlCommand.CommandType\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets or sets a value indicating how the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> property is to be interpreted.\n  remarks: \"When you set the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property to the name of the stored procedure. The command executes this stored procedure when you call one of the Execute methods.  \\n  \\n The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> of <xref:System.Data.CommandType.Text>. In this case, named parameters must be used. For example:  \\n  \\n SELECT * FROM Customers WHERE CustomerID = @CustomerID  \\n  \\n For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \\n  \\n [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override System.Data.CommandType CommandType { get; set; }\n    return:\n      type: System.Data.CommandType\n      description: One of the <xref href=\"System.Data.CommandType\"></xref> values. The default is `Text`.\n  overload: System.Data.SqlClient.SqlCommand.CommandType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value was not a valid <xref href=\"System.Data.CommandType\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.Connection\n  commentId: P:System.Data.SqlClient.SqlCommand.Connection\n  id: Connection\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: Connection\n  nameWithType: SqlCommand.Connection\n  fullName: SqlCommand.Connection\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets or sets the <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> used by this instance of the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.\n  remarks: \"If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <xref:System.InvalidOperationException>.  \\n  \\n If the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> is set to null.\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \\n  \\n [!code-csharp[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.SqlClient.SqlConnection Connection { get; set; }\n    return:\n      type: System.Data.SqlClient.SqlConnection\n      description: The connection to a data source. The default value is `null`.\n  overload: System.Data.SqlClient.SqlCommand.Connection*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> property was changed while the command was enlisted in a transaction..\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter\n  commentId: M:System.Data.SqlClient.SqlCommand.CreateDbParameter\n  id: CreateDbParameter\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: CreateDbParameter()\n  nameWithType: SqlCommand.CreateDbParameter()\n  fullName: SqlCommand.CreateDbParameter()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override System.Data.Common.DbParameter CreateDbParameter ();\n    parameters: []\n    return:\n      type: System.Data.Common.DbParameter\n      description: ''\n  overload: System.Data.SqlClient.SqlCommand.CreateDbParameter*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.CreateParameter\n  commentId: M:System.Data.SqlClient.SqlCommand.CreateParameter\n  id: CreateParameter\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: CreateParameter()\n  nameWithType: SqlCommand.CreateParameter()\n  fullName: SqlCommand.CreateParameter()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Creates a new instance of a <xref href=\"System.Data.SqlClient.SqlParameter\"></xref> object.\n  remarks: The <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.\n  syntax:\n    content: public System.Data.SqlClient.SqlParameter CreateParameter ();\n    parameters: []\n    return:\n      type: System.Data.SqlClient.SqlParameter\n      description: A <xref href=\"System.Data.SqlClient.SqlParameter\"></xref> object.\n  overload: System.Data.SqlClient.SqlCommand.CreateParameter*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.DbConnection\n  commentId: P:System.Data.SqlClient.SqlCommand.DbConnection\n  id: DbConnection\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: DbConnection\n  nameWithType: SqlCommand.DbConnection\n  fullName: SqlCommand.DbConnection\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }\n    return:\n      type: System.Data.Common.DbConnection\n      description: ''\n  overload: System.Data.SqlClient.SqlCommand.DbConnection*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection\n  commentId: P:System.Data.SqlClient.SqlCommand.DbParameterCollection\n  id: DbParameterCollection\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: DbParameterCollection\n  nameWithType: SqlCommand.DbParameterCollection\n  fullName: SqlCommand.DbParameterCollection\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }\n    return:\n      type: System.Data.Common.DbParameterCollection\n      description: ''\n  overload: System.Data.SqlClient.SqlCommand.DbParameterCollection*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.DbTransaction\n  commentId: P:System.Data.SqlClient.SqlCommand.DbTransaction\n  id: DbTransaction\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: DbTransaction\n  nameWithType: SqlCommand.DbTransaction\n  fullName: SqlCommand.DbTransaction\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }\n    return:\n      type: System.Data.Common.DbTransaction\n      description: ''\n  overload: System.Data.SqlClient.SqlCommand.DbTransaction*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible\n  commentId: P:System.Data.SqlClient.SqlCommand.DesignTimeVisible\n  id: DesignTimeVisible\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: DesignTimeVisible\n  nameWithType: SqlCommand.DesignTimeVisible\n  fullName: SqlCommand.DesignTimeVisible\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public override bool DesignTimeVisible { get; set; }\n    return:\n      type: System.Boolean\n      description: A value indicating whether the command object should be visible in a control. The default is **true**.\n  overload: System.Data.SqlClient.SqlCommand.DesignTimeVisible*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)\n  commentId: M:System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SqlCommand.Dispose(Boolean)\n  fullName: SqlCommand.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.Data.SqlClient.SqlCommand.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\n  commentId: M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\n  id: EndExecuteNonQuery(System.IAsyncResult)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: EndExecuteNonQuery(IAsyncResult)\n  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)\n  fullName: SqlCommand.EndExecuteNonQuery(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Finishes asynchronous execution of a Transact-SQL statement.\n  remarks: When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> to execute a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, this method must be called.\n  example:\n  - For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.\n  syntax:\n    content: public int EndExecuteNonQuery (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by the call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\"></xref>.\n    return:\n      type: System.Int32\n      description: The number of rows affected (the same behavior as <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQuery\"></xref>).\n  overload: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref> to complete execution of a call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"></xref>.\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"The amount of time specified in <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandTimeout\\\"></xref> elapsed and the asynchronous operation specified with <xref href=\\\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\\\"></xref> is not complete.  \\n  \\n In some situations, <xref href=\\\"System.IAsyncResult\\\"></xref> can be set to `IsCompleted` incorrectly. If this occurs and <xref href=\\\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\\\"></xref> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandTimeout\\\"></xref> elapsed and the asynchronous operation specified with <xref href=\\\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\\\"></xref> is not complete. To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\n  commentId: M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\n  id: EndExecuteReader(System.IAsyncResult)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: EndExecuteReader(IAsyncResult)\n  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)\n  fullName: SqlCommand.EndExecuteReader(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Finishes asynchronous execution of a Transact-SQL statement, returning the requested <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.\n  remarks: When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, this method must be called.\n  example:\n  - For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.\n  syntax:\n    content: public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by the call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteReader\"></xref>.\n    return:\n      type: System.Data.SqlClient.SqlDataReader\n      description: A <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object that can be used to retrieve the requested rows.\n  overload: System.Data.SqlClient.SqlCommand.EndExecuteReader*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\"></xref> to complete execution of a call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\n  commentId: M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\n  id: EndExecuteXmlReader(System.IAsyncResult)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: EndExecuteXmlReader(IAsyncResult)\n  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)\n  fullName: SqlCommand.EndExecuteXmlReader(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.\n  remarks: When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, this method must be called.\n  example:\n  - For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.\n  syntax:\n    content: public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by the call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\"></xref>.\n    return:\n      type: System.Xml.XmlReader\n      description: An <xref href=\"System.Xml.XmlReader\"></xref> object that can be used to fetch the resulting XML data.\n  overload: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\"></xref> to complete execution of a call to <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  id: ExecuteDbDataReader(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteDbDataReader(CommandBehavior)\n  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)\n  fullName: SqlCommand.ExecuteDbDataReader(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: ''\n    return:\n      type: System.Data.Common.DbDataReader\n      description: ''\n  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)\n  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)\n  fullName: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  syntax:\n    content: protected override System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: ''\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}\n      description: ''\n  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery\n  id: ExecuteNonQuery\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteNonQuery()\n  nameWithType: SqlCommand.ExecuteNonQuery()\n  fullName: SqlCommand.ExecuteNonQuery()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Executes a Transact-SQL statement against the connection and returns the number of rows affected.\n  remarks: \"You can use the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.  \\n  \\n Although the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.  \\n  \\n For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers. For all other types of statements, the return value is -1. If a rollback occurs, the return value is also -1.\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.  \\n  \\n [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override int ExecuteNonQuery ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The number of rows affected.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteNonQueryAsync(CancellationToken)\n  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)\n  fullName: SqlCommand.ExecuteNonQueryAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQuery\"></xref>, which executes a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement against the connection and returns the number of rows affected. The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.\n  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public override System.Threading.Tasks.Task<int> ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction.\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\\\"></xref> more than once for the same instance before task completion.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReader\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReader\n  id: ExecuteReader\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteReader()\n  nameWithType: SqlCommand.ExecuteReader()\n  fullName: SqlCommand.ExecuteReader()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.\n  remarks: \"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  \\n  \\n> [!NOTE]\\n>  If a transaction is deadlocked, an exception may not be thrown until <xref:System.Data.SqlClient.SqlDataReader.Read%2A> is called.  \\n  \\n The multiple active result set (MARS) feature allows for multiple actions using the same connection.  \\n  \\n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \\\"PRB: XML Data Is Truncated When You Use SqlDataReader,\\\" in the Microsoft Knowledge Base at http://support.microsoft.com.\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.  \\n  \\n [!code-csharp[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.SqlClient.SqlDataReader ExecuteReader ();\n    parameters: []\n    return:\n      type: System.Data.SqlClient.SqlDataReader\n      description: A <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The current state of the connection is closed. <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReader\\\"></xref> requires an open <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref>.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\n  id: ExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteReader(CommandBehavior)\n  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)\n  fullName: SqlCommand.ExecuteReader(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref>, and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> using one of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n  remarks: \"When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  \\n  \\n> [!NOTE]\\n>  Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data. Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.  \\n  \\n The multiple active result set (MARS) feature allows for multiple actions using the same connection.  \\n  \\n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \\\"PRB: XML Data Is Truncated When You Use SqlDataReader,\\\" in the Microsoft Knowledge Base at http://support.microsoft.com.\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior.CloseConnection>.  \\n  \\n [!code-csharp[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/CS/mysample.cs#1)]\\n [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/VB/mysample.vb#1)]\"\n  syntax:\n    content: public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: One of the <xref href=\"System.Data.CommandBehavior\"></xref> values.\n    return:\n      type: System.Data.SqlClient.SqlDataReader\n      description: A <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref> object.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\n  id: ExecuteReaderAsync\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteReaderAsync()\n  nameWithType: SqlCommand.ExecuteReaderAsync()\n  fullName: SqlCommand.ExecuteReaderAsync()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>. Exceptions will be reported via the returned Task object.\n  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\\\"></xref> more than once for the same instance before task completion.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  id: ExecuteReaderAsync(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteReaderAsync(CommandBehavior)\n  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)\n  fullName: SqlCommand.ExecuteReaderAsync(CommandBehavior)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref>, and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>. Exceptions will be reported via the returned Task object.\n  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: Options for statement execution and data retrieval.  When is set to `Default`, <xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> reads the entire row before returning a complete Task.\n    return:\n      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\\\"></xref> more than once for the same instance before task completion.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  id: ExecuteReaderAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteReaderAsync(CancellationToken)\n  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)\n  fullName: SqlCommand.ExecuteReaderAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: \"An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReader\\\"></xref>, which sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\"></xref> and builds a <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\"></xref>.  \\n  \\n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.\"\n  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction.\n    return:\n      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\\\"></xref> more than once for the same instance before task completion.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteReaderAsync(CommandBehavior, CancellationToken)\n  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior, CancellationToken)\n  fullName: SqlCommand.ExecuteReaderAsync(CommandBehavior, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: \"An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\\\"></xref>, which sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\"></xref>, and builds a <xref href=\\\"System.Data.SqlClient.SqlDataReader\\\"></xref>  \\n  \\n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.\"\n  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: behavior\n      type: System.Data.CommandBehavior\n      description: Options for statement execution and data retrieval.  When is set to `Default`, <xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\"></xref> reads the entire row before returning a complete Task.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction.\n    return:\n      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid <xref href=\"System.Data.CommandBehavior\"></xref> value.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\\\"></xref> more than once for the same instance before task completion.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteScalar\n  id: ExecuteScalar\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteScalar()\n  nameWithType: SqlCommand.ExecuteScalar()\n  fullName: SqlCommand.ExecuteScalar()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.\n  remarks: \"Use the <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database. This requires less code than using the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method, and then performing the operations that you need to generate the single value using the data returned by a <xref:System.Data.SqlClient.SqlDataReader>.  \\n  \\n A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:  \\n  \\n```  \\ncmd.CommandText = \\\"SELECT COUNT(*) FROM dbo.region\\\";  \\nInt32 count = (Int32) cmd.ExecuteScalar();  \\n```\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>. The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source. The function returns the new **Identity** column value if a new row was inserted, 0 on failure.  \\n  \\n [!code-csharp[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/CS/source.cs#1)]\\n [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/VB/source.vb#1)]\"\n  syntax:\n    content: public override object ExecuteScalar ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The first column of the first row in the result set, or a null reference (`Nothing` in Visual Basic) if the result set is empty. Returns a maximum of 2033 characters.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteScalar*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  id: ExecuteScalarAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteScalarAsync(CancellationToken)\n  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)\n  fullName: SqlCommand.ExecuteScalarAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: \"An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteScalar\\\"></xref>, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.  \\n  \\n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.\"\n  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public override System.Threading.Tasks.Task<object> ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction.\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\\\"></xref> more than once for the same instance before task completion.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader\n  id: ExecuteXmlReader\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteXmlReader()\n  nameWithType: SqlCommand.ExecuteXmlReader()\n  fullName: SqlCommand.ExecuteXmlReader()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds an <xref href=\"System.Xml.XmlReader\"></xref> object.\n  remarks: \"The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement with a valid FOR XML clause. However, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> can also specify a statement that returns `ntext` or `nvarchar` data that contains valid XML, or the contents of a column defined with the `xml` data type.  \\n  \\n A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> query can be formatted as in the following Microsoft Visual C# example:  \\n  \\n```  \\nSqlCommand command = new SqlCommand(\\\"SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA\\\", SqlConn);  \\n```  \\n  \\n This method can also be used to retrieve a single-row, single-column result set that contains XML data. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \\n  \\n The multiple active result set (MARS) feature allows for multiple actions using the same connection.  \\n  \\n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \\\"PRB: XML Data Is Truncated When You Use SqlDataReader,\\\" in the Microsoft Knowledge Base at http://support.microsoft.com.\"\n  example:\n  - \"The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>. The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.  \\n  \\n [!code-csharp[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/CS/mysample.cs#1)]\\n [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/VB/mysample.vb#1)]\"\n  syntax:\n    content: public System.Xml.XmlReader ExecuteXmlReader ();\n    parameters: []\n    return:\n      type: System.Xml.XmlReader\n      description: An <xref href=\"System.Xml.XmlReader\"></xref> object.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync\n  id: ExecuteXmlReaderAsync\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteXmlReaderAsync()\n  nameWithType: SqlCommand.ExecuteXmlReaderAsync()\n  fullName: SqlCommand.ExecuteXmlReaderAsync()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: \"An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\\\"></xref>, which sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\"></xref> and builds an <xref href=\\\"System.Xml.XmlReader\\\"></xref> object.  \\n  \\n Exceptions will be reported via the returned Task object.\"\n  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.Xml.XmlReader}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\\\"></xref> more than once for the same instance before task completion.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)\n  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)\n  id: ExecuteXmlReaderAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ExecuteXmlReaderAsync(CancellationToken)\n  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)\n  fullName: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: \"An asynchronous version of <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\\\"></xref>, which sends the <xref href=\\\"System.Data.SqlClient.SqlCommand.CommandText\\\"></xref> to the <xref href=\\\"System.Data.SqlClient.SqlCommand.Connection\\\"></xref> and builds an <xref href=\\\"System.Xml.XmlReader\\\"></xref> object.  \\n  \\n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.\"\n  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).\n  syntax:\n    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation instruction.\n    return:\n      type: System.Threading.Tasks.Task{System.Xml.XmlReader}\n      description: A task representing the asynchronous operation.\n  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: \"A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.Stream\\\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.IO.TextReader\\\"></xref>.  \\n  \\n A <xref href=\\\"System.Data.SqlClient.SqlParameter.SqlDbType\\\"></xref> other than **Xml** was used when <xref href=\\\"System.Data.SqlClient.SqlParameter.Value\\\"></xref> was set to <xref href=\\\"System.Xml.XmlReader\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Calling <xref href=\\\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\\\"></xref> more than once for the same instance before task completion.  \\n  \\n The <xref href=\\\"System.Data.SqlClient.SqlConnection\\\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \\n  \\n `Context Connection=true` is specified in the connection string.\"\n  - type: System.Data.SqlClient.SqlException\n    commentId: T:System.Data.SqlClient.SqlException\n    description: \"[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \\n  \\n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An error occurred in a <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.IO.Stream\"></xref>, <xref href=\"System.Xml.XmlReader\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.Notification\n  commentId: P:System.Data.SqlClient.SqlCommand.Notification\n  id: Notification\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: Notification\n  nameWithType: SqlCommand.Notification\n  fullName: SqlCommand.Notification\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets or sets a value that specifies the <xref href=\"System.Data.Sql.SqlNotificationRequest\"></xref> object bound to this command.\n  remarks: You must set the value for this property before the command is executed for it to take effect.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Data.Sql.SqlNotificationRequest Notification { get; set; }\n    return:\n      type: System.Data.Sql.SqlNotificationRequest\n      description: When set to null (default), no notification should be requested.\n  overload: System.Data.SqlClient.SqlCommand.Notification*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist\n  commentId: P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist\n  id: NotificationAutoEnlist\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: NotificationAutoEnlist\n  nameWithType: SqlCommand.NotificationAutoEnlist\n  fullName: SqlCommand.NotificationAutoEnlist\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Gets or sets a value indicating whether the application should automatically receive query notifications from a common <xref href=\"System.Data.SqlClient.SqlDependency\"></xref> object.\n  remarks: \"This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server. This enables ASP.NET to cache the page until the queries used to render the page would produce a different result. Automatic enlistment.  \\n  \\n This property applies only to versions of SQL Server that support query notifications. For earlier versions, setting this property to **true** has no effect on the application.\"\n  syntax:\n    content: public bool NotificationAutoEnlist { get; set; }\n    return:\n      type: System.Boolean\n      description: '**true** if the application should automatically receive query notifications; otherwise **false**. The default value is **true**.'\n  overload: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.Parameters\n  commentId: P:System.Data.SqlClient.SqlCommand.Parameters\n  id: Parameters\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: SqlCommand.Parameters\n  fullName: SqlCommand.Parameters\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the <xref href=\"System.Data.SqlClient.SqlParameterCollection\"></xref>.\n  remarks: \"The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of `CommandType.Text`. In this case, named parameters must be used. For example:  \\n  \\n SELECT * FROM Customers WHERE CustomerID = @CustomerID  \\n  \\n> [!NOTE]\\n>  If the parameters in the collection do not match the requirements of the query to be executed, an error may result.  \\n  \\n For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).\"\n  example:\n  - \"The following example demonstrates how to create a <xref:System.Data.SqlClient.SqlCommand> and add parameters to the <xref:System.Data.SqlClient.SqlParameterCollection>.  \\n  \\n [!code-csharp[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/CS/source.cs#1)]\\n [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.SqlClient.SqlParameterCollection Parameters { get; }\n    return:\n      type: System.Data.SqlClient.SqlParameterCollection\n      description: The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.\n  overload: System.Data.SqlClient.SqlCommand.Parameters*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.Prepare\n  commentId: M:System.Data.SqlClient.SqlCommand.Prepare\n  id: Prepare\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: Prepare()\n  nameWithType: SqlCommand.Prepare()\n  fullName: SqlCommand.Prepare()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Creates a prepared version of the command on an instance of SQL Server.\n  remarks: \"If <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> should succeed, although it may cause a no-op.  \\n  \\n Before you call <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared. For each parameter that has a variable length data type, you must set the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property to the maximum size needed. <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> returns an error if these conditions are not met.  \\n  \\n> [!NOTE]\\n>  If the database context is changed by executing the Transact-SQL `USE <database>` statement, or by calling the <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> method, then <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> must be called a second time.  \\n  \\n If you call an `Execute` method after calling <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, any parameter value that is larger than the value specified by the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.  \\n  \\n Output parameters (whether prepared or not) must have a user-specified data type. If you specify a variable length data type, you must also specify the maximum <xref:System.Data.SqlClient.SqlParameter.Size%2A>.  \\n  \\n Prior to Visual Studio 2010, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> threw an exception.  Beginning in Visual Studio 2010, this method does not throw an exception.\"\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> method.  \\n  \\n [!code-csharp[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/CS/Source.cs#1)]\\n [!code-vb[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/VB/Source.vb#1)]\"\n  syntax:\n    content: public override void Prepare ();\n    parameters: []\n  overload: System.Data.SqlClient.SqlCommand.Prepare*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout\n  commentId: M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout\n  id: ResetCommandTimeout\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ResetCommandTimeout()\n  nameWithType: SqlCommand.ResetCommandTimeout()\n  fullName: SqlCommand.ResetCommandTimeout()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  summary: Resets the <xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"></xref> property to its default value.\n  remarks: The default value of the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> is 30 seconds.\n  syntax:\n    content: public void ResetCommandTimeout ();\n    parameters: []\n  overload: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.StatementCompleted\n  commentId: E:System.Data.SqlClient.SqlCommand.StatementCompleted\n  id: StatementCompleted\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: StatementCompleted\n  nameWithType: SqlCommand.StatementCompleted\n  fullName: SqlCommand.StatementCompleted\n  type: Event\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Occurs when the execution of a Transact-SQL statement completes.\n  syntax:\n    content: public event System.Data.StatementCompletedEventHandler StatementCompleted;\n    return:\n      type: System.Data.StatementCompletedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.Transaction\n  commentId: P:System.Data.SqlClient.SqlCommand.Transaction\n  id: Transaction\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: Transaction\n  nameWithType: SqlCommand.Transaction\n  fullName: SqlCommand.Transaction\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets or sets the <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref> within which the <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> executes.\n  remarks: You cannot set the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing. If you set the transaction property to a <xref:System.Data.SqlClient.SqlTransaction> object that is not connected to the same <xref:System.Data.SqlClient.SqlConnection> as the <xref:System.Data.SqlClient.SqlCommand> object, an exception is thrown the next time that you attempt to execute a statement.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Data.SqlClient.SqlTransaction Transaction { get; set; }\n    return:\n      type: System.Data.SqlClient.SqlTransaction\n      description: The <xref href=\"System.Data.SqlClient.SqlTransaction\"></xref>. The default value is `null`.\n  overload: System.Data.SqlClient.SqlCommand.Transaction*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource\n  commentId: P:System.Data.SqlClient.SqlCommand.UpdatedRowSource\n  id: UpdatedRowSource\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: UpdatedRowSource\n  nameWithType: SqlCommand.UpdatedRowSource\n  fullName: SqlCommand.UpdatedRowSource\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets or sets how command results are applied to the <xref href=\"System.Data.DataRow\"></xref> when used by the **Update** method of the <xref href=\"System.Data.Common.DbDataAdapter\"></xref>.\n  remarks: \"The default <xref:System.Data.UpdateRowSource> value is **Both** unless the command is automatically generated (as in the case of the <xref:System.Data.SqlClient.SqlCommandBuilder>), in which case the default is **None**.  \\n  \\n For more information about using the **UpdatedRowSource** property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).\"\n  syntax:\n    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }\n    return:\n      type: System.Data.UpdateRowSource\n      description: One of the <xref href=\"System.Data.UpdateRowSource\"></xref> values.\n  overload: System.Data.SqlClient.SqlCommand.UpdatedRowSource*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone\n  commentId: M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Data.SqlClient.SqlCommand\n  langs:\n  - csharp\n  name: ICloneable.Clone()\n  nameWithType: SqlCommand.ICloneable.Clone()\n  fullName: SqlCommand.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: Creates a new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of the current instance.\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new <xref href=\"System.Data.SqlClient.SqlCommand\"></xref> object that is a copy of this instance.\n  overload: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Common.DbCommand\n  parent: System.Data.Common\n  isExternal: false\n  name: DbCommand\n  nameWithType: DbCommand\n  fullName: System.Data.Common.DbCommand\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.Data.SqlClient.SqlException\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlException\n  nameWithType: SqlException\n  fullName: System.Data.SqlClient.SqlException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Data.SqlClient.SqlCommand.#ctor\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: SqlCommand()\n  nameWithType: SqlCommand.SqlCommand()\n  fullName: SqlCommand.SqlCommand()\n- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: SqlCommand(String)\n  nameWithType: SqlCommand.SqlCommand(String)\n  fullName: SqlCommand.SqlCommand(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: SqlCommand(String, SqlConnection)\n  nameWithType: SqlCommand.SqlCommand(String, SqlConnection)\n  fullName: SqlCommand.SqlCommand(String, SqlConnection)\n- uid: System.Data.SqlClient.SqlConnection\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlConnection\n  nameWithType: SqlConnection\n  fullName: System.Data.SqlClient.SqlConnection\n- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: SqlCommand(String, SqlConnection, SqlTransaction)\n  nameWithType: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction)\n  fullName: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction)\n- uid: System.Data.SqlClient.SqlTransaction\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlTransaction\n  nameWithType: SqlTransaction\n  fullName: System.Data.SqlClient.SqlTransaction\n- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)\n  nameWithType: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)\n  fullName: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)\n- uid: System.Data.SqlClient.SqlCommandColumnEncryptionSetting\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlCommandColumnEncryptionSetting\n  nameWithType: SqlCommandColumnEncryptionSetting\n  fullName: System.Data.SqlClient.SqlCommandColumnEncryptionSetting\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: BeginExecuteNonQuery()\n  nameWithType: SqlCommand.BeginExecuteNonQuery()\n  fullName: SqlCommand.BeginExecuteNonQuery()\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: BeginExecuteNonQuery(AsyncCallback, Object)\n  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback, Object)\n  fullName: SqlCommand.BeginExecuteNonQuery(AsyncCallback, Object)\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: BeginExecuteReader()\n  nameWithType: SqlCommand.BeginExecuteReader()\n  fullName: SqlCommand.BeginExecuteReader()\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: BeginExecuteReader(CommandBehavior)\n  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)\n  fullName: SqlCommand.BeginExecuteReader(CommandBehavior)\n- uid: System.Data.CommandBehavior\n  parent: System.Data\n  isExternal: false\n  name: CommandBehavior\n  nameWithType: CommandBehavior\n  fullName: System.Data.CommandBehavior\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: BeginExecuteReader(AsyncCallback, Object)\n  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback, Object)\n  fullName: SqlCommand.BeginExecuteReader(AsyncCallback, Object)\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: BeginExecuteReader(AsyncCallback, Object, CommandBehavior)\n  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback, Object, CommandBehavior)\n  fullName: SqlCommand.BeginExecuteReader(AsyncCallback, Object, CommandBehavior)\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: BeginExecuteXmlReader(AsyncCallback, Object)\n  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback, Object)\n  fullName: SqlCommand.BeginExecuteXmlReader(AsyncCallback, Object)\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: BeginExecuteXmlReader()\n  nameWithType: SqlCommand.BeginExecuteXmlReader()\n  fullName: SqlCommand.BeginExecuteXmlReader()\n- uid: System.Data.SqlClient.SqlCommand.Cancel\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Cancel()\n  nameWithType: SqlCommand.Cancel()\n  fullName: SqlCommand.Cancel()\n- uid: System.Data.SqlClient.SqlCommand.Clone\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Clone()\n  nameWithType: SqlCommand.Clone()\n  fullName: SqlCommand.Clone()\n- uid: System.Data.SqlClient.SqlCommand\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlCommand\n  nameWithType: SqlCommand\n  fullName: System.Data.SqlClient.SqlCommand\n- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ColumnEncryptionSetting\n  nameWithType: SqlCommand.ColumnEncryptionSetting\n  fullName: SqlCommand.ColumnEncryptionSetting\n- uid: System.Data.SqlClient.SqlCommand.CommandText\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: CommandText\n  nameWithType: SqlCommand.CommandText\n  fullName: SqlCommand.CommandText\n- uid: System.Data.SqlClient.SqlCommand.CommandTimeout\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: CommandTimeout\n  nameWithType: SqlCommand.CommandTimeout\n  fullName: SqlCommand.CommandTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.SqlClient.SqlCommand.CommandType\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: CommandType\n  nameWithType: SqlCommand.CommandType\n  fullName: SqlCommand.CommandType\n- uid: System.Data.CommandType\n  parent: System.Data\n  isExternal: false\n  name: CommandType\n  nameWithType: CommandType\n  fullName: System.Data.CommandType\n- uid: System.Data.SqlClient.SqlCommand.Connection\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Connection\n  nameWithType: SqlCommand.Connection\n  fullName: SqlCommand.Connection\n- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: CreateDbParameter()\n  nameWithType: SqlCommand.CreateDbParameter()\n  fullName: SqlCommand.CreateDbParameter()\n- uid: System.Data.Common.DbParameter\n  parent: System.Data.Common\n  isExternal: false\n  name: DbParameter\n  nameWithType: DbParameter\n  fullName: System.Data.Common.DbParameter\n- uid: System.Data.SqlClient.SqlCommand.CreateParameter\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: CreateParameter()\n  nameWithType: SqlCommand.CreateParameter()\n  fullName: SqlCommand.CreateParameter()\n- uid: System.Data.SqlClient.SqlParameter\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlParameter\n  nameWithType: SqlParameter\n  fullName: System.Data.SqlClient.SqlParameter\n- uid: System.Data.SqlClient.SqlCommand.DbConnection\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: DbConnection\n  nameWithType: SqlCommand.DbConnection\n  fullName: SqlCommand.DbConnection\n- uid: System.Data.Common.DbConnection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbConnection\n  nameWithType: DbConnection\n  fullName: System.Data.Common.DbConnection\n- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: DbParameterCollection\n  nameWithType: SqlCommand.DbParameterCollection\n  fullName: SqlCommand.DbParameterCollection\n- uid: System.Data.Common.DbParameterCollection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbParameterCollection\n  nameWithType: DbParameterCollection\n  fullName: System.Data.Common.DbParameterCollection\n- uid: System.Data.SqlClient.SqlCommand.DbTransaction\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: DbTransaction\n  nameWithType: SqlCommand.DbTransaction\n  fullName: SqlCommand.DbTransaction\n- uid: System.Data.Common.DbTransaction\n  parent: System.Data.Common\n  isExternal: false\n  name: DbTransaction\n  nameWithType: DbTransaction\n  fullName: System.Data.Common.DbTransaction\n- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: DesignTimeVisible\n  nameWithType: SqlCommand.DesignTimeVisible\n  fullName: SqlCommand.DesignTimeVisible\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SqlCommand.Dispose(Boolean)\n  fullName: SqlCommand.Dispose(Boolean)\n- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: EndExecuteNonQuery(IAsyncResult)\n  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)\n  fullName: SqlCommand.EndExecuteNonQuery(IAsyncResult)\n- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: EndExecuteReader(IAsyncResult)\n  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)\n  fullName: SqlCommand.EndExecuteReader(IAsyncResult)\n- uid: System.Data.SqlClient.SqlDataReader\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlDataReader\n  nameWithType: SqlDataReader\n  fullName: System.Data.SqlClient.SqlDataReader\n- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: EndExecuteXmlReader(IAsyncResult)\n  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)\n  fullName: SqlCommand.EndExecuteXmlReader(IAsyncResult)\n- uid: System.Xml.XmlReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlReader\n  nameWithType: XmlReader\n  fullName: System.Xml.XmlReader\n- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteDbDataReader(CommandBehavior)\n  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)\n  fullName: SqlCommand.ExecuteDbDataReader(CommandBehavior)\n- uid: System.Data.Common.DbDataReader\n  parent: System.Data.Common\n  isExternal: false\n  name: DbDataReader\n  nameWithType: DbDataReader\n  fullName: System.Data.Common.DbDataReader\n- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)\n  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)\n  fullName: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<DbDataReader>\n  nameWithType: Task<DbDataReader>\n  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.DbDataReader\n    name: DbDataReader\n    nameWithType: DbDataReader\n    fullName: System.Data.Common.DbDataReader\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteNonQuery()\n  nameWithType: SqlCommand.ExecuteNonQuery()\n  fullName: SqlCommand.ExecuteNonQuery()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteNonQueryAsync(CancellationToken)\n  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)\n  fullName: SqlCommand.ExecuteNonQueryAsync(CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReader\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteReader()\n  nameWithType: SqlCommand.ExecuteReader()\n  fullName: SqlCommand.ExecuteReader()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteReader(CommandBehavior)\n  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)\n  fullName: SqlCommand.ExecuteReader(CommandBehavior)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteReaderAsync()\n  nameWithType: SqlCommand.ExecuteReaderAsync()\n  fullName: SqlCommand.ExecuteReaderAsync()\n- uid: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<SqlDataReader>\n  nameWithType: Task<SqlDataReader>\n  fullName: System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.SqlClient.SqlDataReader\n    name: SqlDataReader\n    nameWithType: SqlDataReader\n    fullName: System.Data.SqlClient.SqlDataReader\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteReaderAsync(CommandBehavior)\n  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)\n  fullName: SqlCommand.ExecuteReaderAsync(CommandBehavior)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteReaderAsync(CancellationToken)\n  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)\n  fullName: SqlCommand.ExecuteReaderAsync(CancellationToken)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteReaderAsync(CommandBehavior, CancellationToken)\n  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior, CancellationToken)\n  fullName: SqlCommand.ExecuteReaderAsync(CommandBehavior, CancellationToken)\n- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteScalar()\n  nameWithType: SqlCommand.ExecuteScalar()\n  fullName: SqlCommand.ExecuteScalar()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteScalarAsync(CancellationToken)\n  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)\n  fullName: SqlCommand.ExecuteScalarAsync(CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Object}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Object>\n  nameWithType: Task<Object>\n  fullName: System.Threading.Tasks.Task<System.Object>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteXmlReader()\n  nameWithType: SqlCommand.ExecuteXmlReader()\n  fullName: SqlCommand.ExecuteXmlReader()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteXmlReaderAsync()\n  nameWithType: SqlCommand.ExecuteXmlReaderAsync()\n  fullName: SqlCommand.ExecuteXmlReaderAsync()\n- uid: System.Threading.Tasks.Task{System.Xml.XmlReader}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<XmlReader>\n  nameWithType: Task<XmlReader>\n  fullName: System.Threading.Tasks.Task<System.Xml.XmlReader>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.XmlReader\n    name: XmlReader\n    nameWithType: XmlReader\n    fullName: System.Xml.XmlReader\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteXmlReaderAsync(CancellationToken)\n  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)\n  fullName: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)\n- uid: System.Data.SqlClient.SqlCommand.Notification\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Notification\n  nameWithType: SqlCommand.Notification\n  fullName: SqlCommand.Notification\n- uid: System.Data.Sql.SqlNotificationRequest\n  parent: System.Data.Sql\n  isExternal: false\n  name: SqlNotificationRequest\n  nameWithType: SqlNotificationRequest\n  fullName: System.Data.Sql.SqlNotificationRequest\n- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: NotificationAutoEnlist\n  nameWithType: SqlCommand.NotificationAutoEnlist\n  fullName: SqlCommand.NotificationAutoEnlist\n- uid: System.Data.SqlClient.SqlCommand.Parameters\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Parameters\n  nameWithType: SqlCommand.Parameters\n  fullName: SqlCommand.Parameters\n- uid: System.Data.SqlClient.SqlParameterCollection\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlParameterCollection\n  nameWithType: SqlParameterCollection\n  fullName: System.Data.SqlClient.SqlParameterCollection\n- uid: System.Data.SqlClient.SqlCommand.Prepare\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Prepare()\n  nameWithType: SqlCommand.Prepare()\n  fullName: SqlCommand.Prepare()\n- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ResetCommandTimeout()\n  nameWithType: SqlCommand.ResetCommandTimeout()\n  fullName: SqlCommand.ResetCommandTimeout()\n- uid: System.Data.SqlClient.SqlCommand.StatementCompleted\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: StatementCompleted\n  nameWithType: SqlCommand.StatementCompleted\n  fullName: SqlCommand.StatementCompleted\n- uid: System.Data.StatementCompletedEventHandler\n  parent: System.Data\n  isExternal: false\n  name: StatementCompletedEventHandler\n  nameWithType: StatementCompletedEventHandler\n  fullName: System.Data.StatementCompletedEventHandler\n- uid: System.Data.SqlClient.SqlCommand.Transaction\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Transaction\n  nameWithType: SqlCommand.Transaction\n  fullName: SqlCommand.Transaction\n- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: UpdatedRowSource\n  nameWithType: SqlCommand.UpdatedRowSource\n  fullName: SqlCommand.UpdatedRowSource\n- uid: System.Data.UpdateRowSource\n  parent: System.Data\n  isExternal: false\n  name: UpdateRowSource\n  nameWithType: UpdateRowSource\n  fullName: System.Data.UpdateRowSource\n- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ICloneable.Clone()\n  nameWithType: SqlCommand.ICloneable.Clone()\n  fullName: SqlCommand.ICloneable.Clone()\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteReaderAsync\n  nameWithType: SqlCommand.ExecuteReaderAsync\n  fullName: SqlCommand.ExecuteReaderAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.#ctor*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: SqlCommand\n  nameWithType: SqlCommand.SqlCommand\n  fullName: SqlCommand.SqlCommand\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: BeginExecuteNonQuery\n  nameWithType: SqlCommand.BeginExecuteNonQuery\n  fullName: SqlCommand.BeginExecuteNonQuery\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: BeginExecuteReader\n  nameWithType: SqlCommand.BeginExecuteReader\n  fullName: SqlCommand.BeginExecuteReader\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: BeginExecuteXmlReader\n  nameWithType: SqlCommand.BeginExecuteXmlReader\n  fullName: SqlCommand.BeginExecuteXmlReader\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.Cancel*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Cancel\n  nameWithType: SqlCommand.Cancel\n  fullName: SqlCommand.Cancel\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.Clone*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Clone\n  nameWithType: SqlCommand.Clone\n  fullName: SqlCommand.Clone\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ColumnEncryptionSetting\n  nameWithType: SqlCommand.ColumnEncryptionSetting\n  fullName: SqlCommand.ColumnEncryptionSetting\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.CommandText*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: CommandText\n  nameWithType: SqlCommand.CommandText\n  fullName: SqlCommand.CommandText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.CommandTimeout*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: CommandTimeout\n  nameWithType: SqlCommand.CommandTimeout\n  fullName: SqlCommand.CommandTimeout\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.CommandType*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: CommandType\n  nameWithType: SqlCommand.CommandType\n  fullName: SqlCommand.CommandType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.Connection*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Connection\n  nameWithType: SqlCommand.Connection\n  fullName: SqlCommand.Connection\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: CreateDbParameter\n  nameWithType: SqlCommand.CreateDbParameter\n  fullName: SqlCommand.CreateDbParameter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.CreateParameter*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: CreateParameter\n  nameWithType: SqlCommand.CreateParameter\n  fullName: SqlCommand.CreateParameter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.DbConnection*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: DbConnection\n  nameWithType: SqlCommand.DbConnection\n  fullName: SqlCommand.DbConnection\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: DbParameterCollection\n  nameWithType: SqlCommand.DbParameterCollection\n  fullName: SqlCommand.DbParameterCollection\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.DbTransaction*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: DbTransaction\n  nameWithType: SqlCommand.DbTransaction\n  fullName: SqlCommand.DbTransaction\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: DesignTimeVisible\n  nameWithType: SqlCommand.DesignTimeVisible\n  fullName: SqlCommand.DesignTimeVisible\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.Dispose*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Dispose\n  nameWithType: SqlCommand.Dispose\n  fullName: SqlCommand.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: EndExecuteNonQuery\n  nameWithType: SqlCommand.EndExecuteNonQuery\n  fullName: SqlCommand.EndExecuteNonQuery\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: EndExecuteReader\n  nameWithType: SqlCommand.EndExecuteReader\n  fullName: SqlCommand.EndExecuteReader\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: EndExecuteXmlReader\n  nameWithType: SqlCommand.EndExecuteXmlReader\n  fullName: SqlCommand.EndExecuteXmlReader\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteDbDataReader\n  nameWithType: SqlCommand.ExecuteDbDataReader\n  fullName: SqlCommand.ExecuteDbDataReader\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteDbDataReaderAsync\n  nameWithType: SqlCommand.ExecuteDbDataReaderAsync\n  fullName: SqlCommand.ExecuteDbDataReaderAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteNonQuery\n  nameWithType: SqlCommand.ExecuteNonQuery\n  fullName: SqlCommand.ExecuteNonQuery\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteNonQueryAsync\n  nameWithType: SqlCommand.ExecuteNonQueryAsync\n  fullName: SqlCommand.ExecuteNonQueryAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ExecuteReader*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteReader\n  nameWithType: SqlCommand.ExecuteReader\n  fullName: SqlCommand.ExecuteReader\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteScalar\n  nameWithType: SqlCommand.ExecuteScalar\n  fullName: SqlCommand.ExecuteScalar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteScalarAsync\n  nameWithType: SqlCommand.ExecuteScalarAsync\n  fullName: SqlCommand.ExecuteScalarAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteXmlReader\n  nameWithType: SqlCommand.ExecuteXmlReader\n  fullName: SqlCommand.ExecuteXmlReader\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ExecuteXmlReaderAsync\n  nameWithType: SqlCommand.ExecuteXmlReaderAsync\n  fullName: SqlCommand.ExecuteXmlReaderAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.Notification*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Notification\n  nameWithType: SqlCommand.Notification\n  fullName: SqlCommand.Notification\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: NotificationAutoEnlist\n  nameWithType: SqlCommand.NotificationAutoEnlist\n  fullName: SqlCommand.NotificationAutoEnlist\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.Parameters*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Parameters\n  nameWithType: SqlCommand.Parameters\n  fullName: SqlCommand.Parameters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.Prepare*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Prepare\n  nameWithType: SqlCommand.Prepare\n  fullName: SqlCommand.Prepare\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: ResetCommandTimeout\n  nameWithType: SqlCommand.ResetCommandTimeout\n  fullName: SqlCommand.ResetCommandTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.Transaction*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: Transaction\n  nameWithType: SqlCommand.Transaction\n  fullName: SqlCommand.Transaction\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: UpdatedRowSource\n  nameWithType: SqlCommand.UpdatedRowSource\n  fullName: SqlCommand.UpdatedRowSource\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*\n  parent: System.Data.SqlClient.SqlCommand\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: SqlCommand.System.ICloneable.Clone\n  fullName: SqlCommand.System.ICloneable.Clone\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Data.Common.DbCommand.Dispose\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: Dispose()\n  nameWithType: DbCommand.Dispose()\n  fullName: DbCommand.Dispose()\n- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteNonQueryAsync()\n  nameWithType: DbCommand.ExecuteNonQueryAsync()\n  fullName: DbCommand.ExecuteNonQueryAsync()\n- uid: System.Data.Common.DbCommand.ExecuteScalarAsync\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: ExecuteScalarAsync()\n  nameWithType: DbCommand.ExecuteScalarAsync()\n  fullName: DbCommand.ExecuteScalarAsync()\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: IDbCommand.Connection\n  nameWithType: DbCommand.IDbCommand.Connection\n  fullName: DbCommand.IDbCommand.Connection\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: IDbCommand.CreateParameter()\n  nameWithType: DbCommand.IDbCommand.CreateParameter()\n  fullName: DbCommand.IDbCommand.CreateParameter()\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: IDbCommand.ExecuteReader()\n  nameWithType: DbCommand.IDbCommand.ExecuteReader()\n  fullName: DbCommand.IDbCommand.ExecuteReader()\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: IDbCommand.ExecuteReader(CommandBehavior)\n  nameWithType: DbCommand.IDbCommand.ExecuteReader(CommandBehavior)\n  fullName: DbCommand.IDbCommand.ExecuteReader(CommandBehavior)\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: IDbCommand.Parameters\n  nameWithType: DbCommand.IDbCommand.Parameters\n  fullName: DbCommand.IDbCommand.Parameters\n- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction\n  parent: System.Data.Common.DbCommand\n  isExternal: false\n  name: IDbCommand.Transaction\n  nameWithType: DbCommand.IDbCommand.Transaction\n  fullName: DbCommand.IDbCommand.Transaction\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}