{"nodes":[{"content":"Terminates the running workflow instance, raises the <xref href=\"System.Activities.WorkflowApplication.Completed\"></xref> event in the host, and reports error information. Once the workflow is terminated, it cannot be resumed.","nodes":[{"pos":[0,226],"content":"Terminates the running workflow instance, raises the <xref href=\"System.Activities.WorkflowApplication.Completed\"></xref> event in the host, and reports error information. Once the workflow is terminated, it cannot be resumed.","nodes":[{"content":"Terminates the running workflow instance, raises the <ph id=\"ph1\">&lt;xref href=\"System.Activities.WorkflowApplication.Completed\"&gt;&lt;/xref&gt;</ph> event in the host, and reports error information.","pos":[0,171],"source":"Terminates the running workflow instance, raises the <xref href=\"System.Activities.WorkflowApplication.Completed\"></xref> event in the host, and reports error information."},{"content":"Once the workflow is terminated, it cannot be resumed.","pos":[172,226]}]}],"pos":[813,1040],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.TerminateWorkflow\"></xref> class.","nodes":[{"pos":[0,104],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.TerminateWorkflow\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.TerminateWorkflow\"></xref> class."}],"pos":[3612,3717],"yaml":true},{"content":"Gets or sets the exception that provoked the instance termination.","nodes":[{"pos":[0,66],"content":"Gets or sets the exception that provoked the instance termination.","nodes":[{"content":"Gets or sets the exception that provoked the instance termination.","pos":[0,66]}]}],"pos":[6261,6328],"yaml":true},{"content":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set. If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.","nodes":[{"pos":[0,974],"content":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set. If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.","nodes":[{"content":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set. If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.","pos":[0,974],"nodes":[{"content":"The exception that is passed to <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> is a <ph id=\"ph2\">&lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt;</ph> if only <ph id=\"ph3\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Reason%2A&gt;</ph> is set.","pos":[0,238],"source":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set."},{"content":"If only <ph id=\"ph1\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Exception%2A&gt;</ph> is set, that exception is passed to <ph id=\"ph2\">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph>.","pos":[239,408],"source":" If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>."},{"content":"If both <ph id=\"ph1\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Reason%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Exception%2A&gt;</ph> are set, a <ph id=\"ph3\">&lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt;</ph> is passed with the specified <ph id=\"ph4\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Reason%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Exception%2A&gt;</ph> is set as the exception’s <ph id=\"ph6\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[409,869],"source":" If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property."},{"content":"If neither is set, a default <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt;</ph> is created.","pos":[870,974],"source":" If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created."}]}]}],"pos":[6339,7314],"yaml":true,"extradata":"MT"},{"content":"The exception.","nodes":[{"pos":[0,14],"content":"The exception.","nodes":[{"content":"The exception.","pos":[0,14]}]}],"pos":[7498,7513],"yaml":true},{"content":"A string input argument with the reason for the workflow instance termination.","nodes":[{"pos":[0,78],"content":"A string input argument with the reason for the workflow instance termination.","nodes":[{"content":"A string input argument with the reason for the workflow instance termination.","pos":[0,78]}]}],"pos":[9931,10010],"yaml":true},{"content":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set. If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.","nodes":[{"pos":[0,974],"content":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set. If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.","nodes":[{"content":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set. If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.","pos":[0,974],"nodes":[{"content":"The exception that is passed to <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> is a <ph id=\"ph2\">&lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt;</ph> if only <ph id=\"ph3\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Reason%2A&gt;</ph> is set.","pos":[0,238],"source":"The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set."},{"content":"If only <ph id=\"ph1\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Exception%2A&gt;</ph> is set, that exception is passed to <ph id=\"ph2\">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph>.","pos":[239,408],"source":" If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>."},{"content":"If both <ph id=\"ph1\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Reason%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Exception%2A&gt;</ph> are set, a <ph id=\"ph3\">&lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt;</ph> is passed with the specified <ph id=\"ph4\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Reason%2A&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Activities.Statements.TerminateWorkflow.Exception%2A&gt;</ph> is set as the exception’s <ph id=\"ph6\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[409,869],"source":" If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property."},{"content":"If neither is set, a default <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowApplicationTerminatedException&gt;</ph> is created.","pos":[870,974],"source":" If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created."}]}]}],"pos":[10021,10996],"yaml":true,"extradata":"MT"},{"content":"The reason for workflow termination.","nodes":[{"pos":[0,36],"content":"The reason for workflow termination.","nodes":[{"content":"The reason for workflow termination.","pos":[0,36]}]}],"pos":[11171,11208],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.TerminateWorkflow\n  commentId: T:System.Activities.Statements.TerminateWorkflow\n  id: TerminateWorkflow\n  children:\n  - System.Activities.Statements.TerminateWorkflow.#ctor\n  - System.Activities.Statements.TerminateWorkflow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.TerminateWorkflow.Exception\n  - System.Activities.Statements.TerminateWorkflow.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.TerminateWorkflow.Reason\n  langs:\n  - csharp\n  name: TerminateWorkflow\n  nameWithType: TerminateWorkflow\n  fullName: System.Activities.Statements.TerminateWorkflow\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Terminates the running workflow instance, raises the <xref href=\"System.Activities.WorkflowApplication.Completed\"></xref> event in the host, and reports error information. Once the workflow is terminated, it cannot be resumed.\n  syntax:\n    content: 'public sealed class TerminateWorkflow : System.Activities.NativeActivity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TerminateWorkflow.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TerminateWorkflow.#ctor\n  commentId: M:System.Activities.Statements.TerminateWorkflow.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: TerminateWorkflow()\n  nameWithType: TerminateWorkflow.TerminateWorkflow()\n  fullName: TerminateWorkflow.TerminateWorkflow()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.TerminateWorkflow\"></xref> class.\n  syntax:\n    content: public TerminateWorkflow ();\n    parameters: []\n  overload: System.Activities.Statements.TerminateWorkflow.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TerminateWorkflow.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TerminateWorkflow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.Activities.Statements.TerminateWorkflow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n  fullName: TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: ''\n  overload: System.Activities.Statements.TerminateWorkflow.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TerminateWorkflow.xml\n- uid: System.Activities.Statements.TerminateWorkflow.Exception\n  commentId: P:System.Activities.Statements.TerminateWorkflow.Exception\n  id: Exception\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: TerminateWorkflow.Exception\n  fullName: TerminateWorkflow.Exception\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the exception that provoked the instance termination.\n  remarks: The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set. If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.\n  syntax:\n    content: public System.Activities.InArgument<Exception> Exception { get; set; }\n    return:\n      type: System.Activities.InArgument{System.Exception}\n      description: The exception.\n  overload: System.Activities.Statements.TerminateWorkflow.Exception*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TerminateWorkflow.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.TerminateWorkflow.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.TerminateWorkflow.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: TerminateWorkflow.Execute(NativeActivityContext)\n  fullName: TerminateWorkflow.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.TerminateWorkflow.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TerminateWorkflow.xml\n- uid: System.Activities.Statements.TerminateWorkflow.Reason\n  commentId: P:System.Activities.Statements.TerminateWorkflow.Reason\n  id: Reason\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: Reason\n  nameWithType: TerminateWorkflow.Reason\n  fullName: TerminateWorkflow.Reason\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: A string input argument with the reason for the workflow instance termination.\n  remarks: The exception that is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A> is a <xref:System.Activities.WorkflowApplicationTerminatedException> if only <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> is set. If only <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set, that exception is passed to <xref:System.Activities.WorkflowApplication.Terminate%2A>. If both <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A> and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> are set, a <xref:System.Activities.WorkflowApplicationTerminatedException> is passed with the specified <xref:System.Activities.Statements.TerminateWorkflow.Reason%2A>, and <xref:System.Activities.Statements.TerminateWorkflow.Exception%2A> is set as the exception’s <xref:System.Exception.InnerException%2A> property. If neither is set, a default <xref:System.Activities.WorkflowApplicationTerminatedException> is created.\n  syntax:\n    content: public System.Activities.InArgument<string> Reason { get; set; }\n    return:\n      type: System.Activities.InArgument{System.String}\n      description: The reason for workflow termination.\n  overload: System.Activities.Statements.TerminateWorkflow.Reason*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TerminateWorkflow.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.NativeActivity\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n- uid: System.Activities.Statements.TerminateWorkflow.#ctor\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: TerminateWorkflow()\n  nameWithType: TerminateWorkflow.TerminateWorkflow()\n  fullName: TerminateWorkflow.TerminateWorkflow()\n- uid: System.Activities.Statements.TerminateWorkflow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n  fullName: TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.TerminateWorkflow.Exception\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Exception\n  nameWithType: TerminateWorkflow.Exception\n  fullName: TerminateWorkflow.Exception\n- uid: System.Activities.InArgument`1\n  name: InArgument<T>\n  nameWithType: InArgument<T>\n  fullName: System.Activities.InArgument<T>\n- uid: System.Exception\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Activities.InArgument{System.Exception}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<Exception>\n  nameWithType: InArgument<Exception>\n  fullName: System.Activities.InArgument<System.Exception>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: System.Activities.InArgument\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Exception\n    name: Exception\n    nameWithType: Exception\n    fullName: System.Exception\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.TerminateWorkflow.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: TerminateWorkflow.Execute(NativeActivityContext)\n  fullName: TerminateWorkflow.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.TerminateWorkflow.Reason\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Reason\n  nameWithType: TerminateWorkflow.Reason\n  fullName: TerminateWorkflow.Reason\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.InArgument{System.String}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<String>\n  nameWithType: InArgument<String>\n  fullName: System.Activities.InArgument<System.String>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: System.Activities.InArgument\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.TerminateWorkflow.#ctor*\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: TerminateWorkflow\n  nameWithType: TerminateWorkflow.TerminateWorkflow\n  fullName: TerminateWorkflow.TerminateWorkflow\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TerminateWorkflow.xml\n- uid: System.Activities.Statements.TerminateWorkflow.CacheMetadata*\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: TerminateWorkflow.CacheMetadata\n  fullName: TerminateWorkflow.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TerminateWorkflow.xml\n- uid: System.Activities.Statements.TerminateWorkflow.Exception*\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Exception\n  nameWithType: TerminateWorkflow.Exception\n  fullName: TerminateWorkflow.Exception\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TerminateWorkflow.xml\n- uid: System.Activities.Statements.TerminateWorkflow.Execute*\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Execute\n  nameWithType: TerminateWorkflow.Execute\n  fullName: TerminateWorkflow.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TerminateWorkflow.xml\n- uid: System.Activities.Statements.TerminateWorkflow.Reason*\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Reason\n  nameWithType: TerminateWorkflow.Reason\n  fullName: TerminateWorkflow.Reason\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TerminateWorkflow.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: NativeActivity.Cancel(NativeActivityContext)\n  fullName: NativeActivity.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: NativeActivity.CanInduceIdle\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n"}