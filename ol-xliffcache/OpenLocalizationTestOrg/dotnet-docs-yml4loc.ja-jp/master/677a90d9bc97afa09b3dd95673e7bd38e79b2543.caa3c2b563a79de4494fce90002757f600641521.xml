{"nodes":[{"content":"Used to specify the type of event, and its arguments (if any)  to be generated as part of the rendering of text to speech by a custom synthetic speech engine.","nodes":[{"pos":[0,158],"content":"Used to specify the type of event, and its arguments (if any)  to be generated as part of the rendering of text to speech by a custom synthetic speech engine.","nodes":[{"content":"Used to specify the type of event, and its arguments (if any)  to be generated as part of the rendering of text to speech by a custom synthetic speech engine.","pos":[0,158]}]}],"pos":[1391,1550],"yaml":true},{"content":"A custom speech synthesis engine requests the generation of events under the Speech Platform by providing an appropriate <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance to <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> member of the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> engine site object passed to implementations of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.","nodes":[{"pos":[0,588],"content":"A custom speech synthesis engine requests the generation of events under the Speech Platform by providing an appropriate <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance to <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> member of the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> engine site object passed to implementations of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.","nodes":[{"content":"A custom speech synthesis engine requests the generation of events under the Speech Platform by providing an appropriate <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</ph> instance to <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A&gt;</ph> member of the <ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite&gt;</ph> engine site object passed to implementations of <ph id=\"ph4\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt;</ph>, and <ph id=\"ph6\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A&gt;</ph>.","pos":[0,588],"source":"A custom speech synthesis engine requests the generation of events under the Speech Platform by providing an appropriate <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance to <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> member of the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> engine site object passed to implementations of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>."}]}],"pos":[1561,2150],"yaml":true,"extradata":"MT"},{"content":"Constucts an appropriate <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref>.","nodes":[{"pos":[0,96],"content":"Constucts an appropriate <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph>.","source":"Constucts an appropriate <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref>."}],"pos":[7316,7413],"yaml":true},{"content":"Permitted values used for `parameterType`, `param1`, and `param2` and their meaning is dictated by the type of event being requested, as specified by the member of <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> used for `eventId`.  \n  \n For detailed information on appropriate values for `parameterType`, `param1`, and `param2`, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>  \n  \n The type of the events which can be handled by the Speech platform infrastructure can be obtained through the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the synthesizer engine site implementation of <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.","nodes":[{"pos":[0,235],"content":"Permitted values used for <ph id=\"ph1\">`parameterType`</ph>, <ph id=\"ph2\">`param1`</ph>, and <ph id=\"ph3\">`param2`</ph> and their meaning is dictated by the type of event being requested, as specified by the member of <ph id=\"ph4\">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEventId&gt;</ph> used for <ph id=\"ph5\">`eventId`</ph>.","source":"Permitted values used for `parameterType`, `param1`, and `param2` and their meaning is dictated by the type of event being requested, as specified by the member of <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> used for `eventId`."},{"pos":[242,423],"content":"For detailed information on appropriate values for <ph id=\"ph1\">`parameterType`</ph>, <ph id=\"ph2\">`param1`</ph>, and <ph id=\"ph3\">`param2`</ph>, see documentation for <ph id=\"ph4\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A&gt;</ph>","source":"For detailed information on appropriate values for `parameterType`, `param1`, and `param2`, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>"},{"pos":[430,727],"content":"The type of the events which can be handled by the Speech platform infrastructure can be obtained through the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the synthesizer engine site implementation of <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.","nodes":[{"content":"The type of the events which can be handled by the Speech platform infrastructure can be obtained through the <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A&gt;</ph> property on the synthesizer engine site implementation of <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite&gt;</ph>.","pos":[0,297],"source":"The type of the events which can be handled by the Speech platform infrastructure can be obtained through the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the synthesizer engine site implementation of <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>."}]}],"pos":[7424,8158],"yaml":true,"extradata":"MT"},{"content":"An instance of <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEventId\"></xref> indicating the sort of Speech platform event the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object is to handle.","nodes":[{"pos":[0,221],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.TtsEventId\"&gt;&lt;/xref&gt;</ph> indicating the sort of Speech platform event the <ph id=\"ph2\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object is to handle.","source":"An instance of <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEventId\"></xref> indicating the sort of Speech platform event the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object is to handle."}],"pos":[12004,12226],"yaml":true},{"content":"An instance of <xref href=\"System.Speech.Synthesis.TtsEngine.EventParameterType\"></xref> indicating how the `System.IntPtr` reference of <code>param2</code> is to be interpreted, and, by implication, the use of <code>param1</code>.","nodes":[{"pos":[0,231],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.EventParameterType\"&gt;&lt;/xref&gt;</ph> indicating how the <ph id=\"ph2\">`System.IntPtr`</ph> reference of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">param2</ph><ept id=\"p1\">&lt;/code&gt;</ept> is to be interpreted, and, by implication, the use of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">param1</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An instance of <xref href=\"System.Speech.Synthesis.TtsEngine.EventParameterType\"></xref> indicating how the `System.IntPtr` reference of <code>param2</code> is to be interpreted, and, by implication, the use of <code>param1</code>."}],"pos":[12294,12526],"yaml":true},{"content":"An integer value to be passed to the Speech platform when the event requested by the instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> to be constructed is generated.  \n  \n The exact meaning of this integer is implicitly determined by the value of <code>parameterType</code>.","nodes":[{"pos":[0,199],"content":"An integer value to be passed to the Speech platform when the event requested by the instance of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> to be constructed is generated.","source":"An integer value to be passed to the Speech platform when the event requested by the instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> to be constructed is generated."},{"pos":[206,308],"content":"The exact meaning of this integer is implicitly determined by the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parameterType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The exact meaning of this integer is implicitly determined by the value of <code>parameterType</code>."}],"pos":[12587,12902],"yaml":true},{"content":"A `System.IntPtr` instance referencing an object. to be passed to the Speech platform when the event requested by the instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> to be constructed is generated.  \n  \n The type which must be referenced is explicitly defined by the value <code>parameterType</code>. The value `System.IntPtr.Zero`.","nodes":[{"pos":[0,232],"content":"A `System.IntPtr` instance referencing an object. to be passed to the Speech platform when the event requested by the instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> to be constructed is generated.","nodes":[{"content":"A <ph id=\"ph1\">`System.IntPtr`</ph> instance referencing an object.","pos":[0,49],"source":"A `System.IntPtr` instance referencing an object."},{"content":"to be passed to the Speech platform when the event requested by the instance of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> to be constructed is generated.","pos":[50,232],"source":" to be passed to the Speech platform when the event requested by the instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> to be constructed is generated."}]},{"pos":[239,367],"content":"The type which must be referenced is explicitly defined by the value <code>parameterType</code>. The value `System.IntPtr.Zero`.","nodes":[{"content":"The type which must be referenced is explicitly defined by the value <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parameterType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,96],"source":"The type which must be referenced is explicitly defined by the value <code>parameterType</code>."},{"content":"The value <ph id=\"ph1\">`System.IntPtr.Zero`</ph>.","pos":[97,128],"source":" The value `System.IntPtr.Zero`."}]}],"pos":[12964,13338],"yaml":true},{"content":"Determines whether a specified object is an instance of <code>SpeechEventInfo</code> and equal to the current instance of <code>SpeechEventInfo</code>.","nodes":[{"pos":[0,151],"content":"Determines whether a specified object is an instance of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">SpeechEventInfo</ph><ept id=\"p1\">&lt;/code&gt;</ept> and equal to the current instance of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">SpeechEventInfo</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"Determines whether a specified object is an instance of <code>SpeechEventInfo</code> and equal to the current instance of <code>SpeechEventInfo</code>."}],"pos":[14445,14597],"yaml":true},{"content":"The object to evaluate.","nodes":[{"pos":[0,23],"content":"The object to evaluate.","nodes":[{"content":"The object to evaluate.","pos":[0,23]}]}],"pos":[14737,14761],"yaml":true},{"content":"`true` if <code>obj</code> is equal to the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,149],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>obj</code> is equal to the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object; otherwise, `false`."}],"pos":[14819,14971],"yaml":true},{"content":"Determines whether a specified <code>SpeechEventInfo</code> object is equal to the current instance of <code>SpeechEventInfo</code>.","nodes":[{"pos":[0,132],"content":"Determines whether a specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">SpeechEventInfo</ph><ept id=\"p1\">&lt;/code&gt;</ept> object is equal to the current instance of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">SpeechEventInfo</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"Determines whether a specified <code>SpeechEventInfo</code> object is equal to the current instance of <code>SpeechEventInfo</code>."}],"pos":[16214,16347],"yaml":true},{"content":"The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to evaluate.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object to evaluate.","source":"The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to evaluate."}],"pos":[16561,16656],"yaml":true},{"content":"`true` if <code>other</code> is equal to the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,151],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>other</code> is equal to the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object; otherwise, `false`."}],"pos":[16714,16868],"yaml":true},{"content":"Gets and set the Speech platform event which an instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is used to request.","nodes":[{"pos":[0,150],"content":"Gets and set the Speech platform event which an instance of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> is used to request.","source":"Gets and set the Speech platform event which an instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is used to request."}],"pos":[17915,18066],"yaml":true},{"content":"Returns a member of <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEventId\"></xref> as a `short`, indicating the event type the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object is to generate.","nodes":[{"pos":[0,223],"content":"Returns a member of <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.TtsEventId\"&gt;&lt;/xref&gt;</ph> as a <ph id=\"ph2\">`short`</ph>, indicating the event type the <ph id=\"ph3\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object is to generate.","source":"Returns a member of <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEventId\"></xref> as a `short`, indicating the event type the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object is to generate."}],"pos":[22272,22496],"yaml":true},{"content":"Provides a hash code for a <code>SpeechEventInfo</code> object.","nodes":[{"pos":[0,63],"content":"Provides a hash code for a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">SpeechEventInfo</ph><ept id=\"p1\">&lt;/code&gt;</ept> object.","source":"Provides a hash code for a <code>SpeechEventInfo</code> object."}],"pos":[23572,23636],"yaml":true},{"content":"A hash code for a <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object.","nodes":[{"pos":[0,96],"content":"A hash code for a <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"A hash code for a <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object."}],"pos":[23770,23867],"yaml":true},{"content":"Determines whether two instances of <code>SpeechEventInfo</code> are equal.","nodes":[{"pos":[0,75],"content":"Determines whether two instances of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">SpeechEventInfo</ph><ept id=\"p1\">&lt;/code&gt;</ept> are equal.","source":"Determines whether two instances of <code>SpeechEventInfo</code> are equal."}],"pos":[25348,25424],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%2CSystem.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=fullName>","nodes":[{"pos":[0,238],"content":"The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%2CSystem.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%2CSystem.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=fullName&gt;</ph>","pos":[0,238],"source":"The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%2CSystem.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=fullName>"}]}],"pos":[25435,25674],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event2</code>.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object to compare to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">event2</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event2</code>."}],"pos":[25960,26077],"yaml":true},{"content":"The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event1</code>.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object to compare to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">event1</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event1</code>."}],"pos":[26175,26292],"yaml":true},{"content":"`true` if <code>event1</code> is the same as <code>event2</code>; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">event1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is the same as <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">event2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>event1</code> is the same as <code>event2</code>; otherwise, `false`."}],"pos":[26350,26438],"yaml":true},{"content":"Determines whether two instances of <code>SpeechEventInfo</code> are not equal.","nodes":[{"pos":[0,79],"content":"Determines whether two instances of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">SpeechEventInfo</ph><ept id=\"p1\">&lt;/code&gt;</ept> are not equal.","source":"Determines whether two instances of <code>SpeechEventInfo</code> are not equal."}],"pos":[27931,28011],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Compare%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%2CSystem.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=fullName>","nodes":[{"pos":[0,239],"content":"The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Compare%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%2CSystem.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Compare%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%2CSystem.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=fullName&gt;</ph>","pos":[0,239],"source":"The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Compare%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%2CSystem.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=fullName>"}]}],"pos":[28022,28262],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event2</code>.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object to compare to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">event2</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event2</code>."}],"pos":[28550,28667],"yaml":true},{"content":"The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event1</code>.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object to compare to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">event1</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event1</code>."}],"pos":[28765,28882],"yaml":true},{"content":"`true` if <code>event1</code> is different from <code>event2</code>; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">event1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is different from <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">event2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>event1</code> is different from <code>event2</code>; otherwise, `false`."}],"pos":[28940,29031],"yaml":true},{"content":"Gets and set the `integer` value (<code>param1</code> in the constructor) to be passed to the Speech platform to generate an event the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is used to request.","nodes":[{"pos":[0,245],"content":"Gets and set the <ph id=\"ph1\">`integer`</ph> value (<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">param1</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the constructor) to be passed to the Speech platform to generate an event the current instance of <ph id=\"ph3\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> is used to request.","source":"Gets and set the `integer` value (<code>param1</code> in the constructor) to be passed to the Speech platform to generate an event the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is used to request."}],"pos":[30079,30325],"yaml":true},{"content":"The requirements and meaning of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.  \n  \n For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.","nodes":[{"pos":[0,440],"content":"The requirements and meaning of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.","nodes":[{"content":"The requirements and meaning of <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A&gt;</ph> property of <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</ph> are uniquely determined by the values of the <ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A&gt;</ph> properties the <ph id=\"ph5\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</ph> instance.","pos":[0,440],"source":"The requirements and meaning of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance."}]},{"pos":[447,641],"content":"For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.","nodes":[{"content":"For detailed information on how use <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A&gt;</ph>, see documentation for <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A&gt;</ph>.","pos":[0,194],"source":"For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>."}]}],"pos":[30336,30982],"yaml":true,"extradata":"MT"},{"content":"Returns the `integer` to be passed to Speech platform when the event specified by the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is generated.","nodes":[{"pos":[0,190],"content":"Returns the <ph id=\"ph1\">`integer`</ph> to be passed to Speech platform when the event specified by the current instance of <ph id=\"ph2\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> is generated.","source":"Returns the `integer` to be passed to Speech platform when the event specified by the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is generated."}],"pos":[35170,35361],"yaml":true},{"content":"Gets and set the `System.IntPtr` instance (<code>param2</code> in the constructor) referencing the object to be passed to the Speech platform to generate an event the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is used to request.","nodes":[{"pos":[0,277],"content":"Gets and set the <ph id=\"ph1\">`System.IntPtr`</ph> instance (<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">param2</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the constructor) referencing the object to be passed to the Speech platform to generate an event the current instance of <ph id=\"ph3\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> is used to request.","source":"Gets and set the `System.IntPtr` instance (<code>param2</code> in the constructor) referencing the object to be passed to the Speech platform to generate an event the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is used to request."}],"pos":[36402,36680],"yaml":true},{"content":"The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.  \n  \n For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.","nodes":[{"pos":[0,465],"content":"The requirements on the <ph id=\"ph1\">`System.IntPtr`</ph> reference of the <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A&gt;</ph> property of <ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</ph> are uniquely determined by the values of the <ph id=\"ph4\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A&gt;</ph> properties the <ph id=\"ph6\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</ph> instance.","source":"The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance."},{"pos":[472,666],"content":"For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.","nodes":[{"content":"For detailed information on how use <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A&gt;</ph>, see documentation for <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A&gt;</ph>.","pos":[0,194],"source":"For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>."}]}],"pos":[36691,37362],"yaml":true,"extradata":"MT"},{"content":"Returns the `System.IntPtr` referencing the object to be passed to Speech platform when the event specified by the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is generated.","nodes":[{"pos":[0,219],"content":"Returns the <ph id=\"ph1\">`System.IntPtr`</ph> referencing the object to be passed to Speech platform when the event specified by the current instance of <ph id=\"ph2\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> is generated.","source":"Returns the `System.IntPtr` referencing the object to be passed to Speech platform when the event specified by the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is generated."}],"pos":[41554,41774],"yaml":true},{"content":"Returns the data type of the object pointed to by the `IntPtr` returned by the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\"></xref> parameter on the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object.","nodes":[{"pos":[0,260],"content":"Returns the data type of the object pointed to by the <ph id=\"ph1\">`IntPtr`</ph> returned by the <ph id=\"ph2\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\"&gt;&lt;/xref&gt;</ph> parameter on the current <ph id=\"ph3\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the data type of the object pointed to by the `IntPtr` returned by the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\"></xref> parameter on the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object."}],"pos":[42857,43118],"yaml":true},{"content":"The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.  \n  \n For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.","nodes":[{"pos":[0,465],"content":"The requirements on the <ph id=\"ph1\">`System.IntPtr`</ph> reference of the <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A&gt;</ph> property of <ph id=\"ph3\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</ph> are uniquely determined by the values of the <ph id=\"ph4\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A&gt;</ph> properties the <ph id=\"ph6\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</ph> instance.","source":"The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance."},{"pos":[472,666],"content":"For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.","nodes":[{"content":"For detailed information on how use <ph id=\"ph1\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A&gt;</ph>, see documentation for <ph id=\"ph2\">&lt;xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A&gt;</ph>.","pos":[0,194],"source":"For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>."}]}],"pos":[43129,43800],"yaml":true,"extradata":"MT"},{"content":"A `short` value corresponding to a member of the <xref href=\"System.Speech.Synthesis.TtsEngine.EventParameterType\"></xref> enumeration and indicating the data type of the object pointed to by the `IntPtr` returned by the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\"></xref> parameter and used as the second argument for the constructor of the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object.","nodes":[{"pos":[0,454],"content":"A <ph id=\"ph1\">`short`</ph> value corresponding to a member of the <ph id=\"ph2\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.EventParameterType\"&gt;&lt;/xref&gt;</ph> enumeration and indicating the data type of the object pointed to by the <ph id=\"ph3\">`IntPtr`</ph> returned by the <ph id=\"ph4\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\"&gt;&lt;/xref&gt;</ph> parameter and used as the second argument for the constructor of the current <ph id=\"ph5\">&lt;xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"A `short` value corresponding to a member of the <xref href=\"System.Speech.Synthesis.TtsEngine.EventParameterType\"></xref> enumeration and indicating the data type of the object pointed to by the `IntPtr` returned by the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\"></xref> parameter and used as the second argument for the constructor of the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object."}],"pos":[48004,48459],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  commentId: T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  id: SpeechEventInfo\n  children:\n  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)\n  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)\n  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId\n  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode\n  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1\n  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\n  - System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType\n  langs:\n  - csharp\n  name: SpeechEventInfo\n  nameWithType: SpeechEventInfo\n  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  type: Struct\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Used to specify the type of event, and its arguments (if any)  to be generated as part of the rendering of text to speech by a custom synthetic speech engine.\n  remarks: A custom speech synthesis engine requests the generation of events under the Speech Platform by providing an appropriate <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance to <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> member of the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> engine site object passed to implementations of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n  \\n  _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: 'public struct SpeechEventInfo : IEquatable<System.Speech.Synthesis.TtsEngine.SpeechEventInfo>'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IEquatable{System.Speech.Synthesis.TtsEngine.SpeechEventInfo}\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)\n  commentId: M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)\n  id: '#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)'\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  langs:\n  - csharp\n  name: SpeechEventInfo(Int16, Int16, Int32, IntPtr)\n  nameWithType: SpeechEventInfo.SpeechEventInfo(Int16, Int16, Int32, IntPtr)\n  fullName: SpeechEventInfo.SpeechEventInfo(Int16, Int16, Int32, IntPtr)\n  type: Constructor\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Constucts an appropriate <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref>.\n  remarks: \"Permitted values used for `parameterType`, `param1`, and `param2` and their meaning is dictated by the type of event being requested, as specified by the member of <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> used for `eventId`.  \\n  \\n For detailed information on appropriate values for `parameterType`, `param1`, and `param2`, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>  \\n  \\n The type of the events which can be handled by the Speech platform infrastructure can be obtained through the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the synthesizer engine site implementation of <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.\"\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n  \\n  _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public SpeechEventInfo (short eventId, short parameterType, int param1, IntPtr param2);\n    parameters:\n    - id: eventId\n      type: System.Int16\n      description: An instance of <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEventId\"></xref> indicating the sort of Speech platform event the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object is to handle.\n    - id: parameterType\n      type: System.Int16\n      description: An instance of <xref href=\"System.Speech.Synthesis.TtsEngine.EventParameterType\"></xref> indicating how the `System.IntPtr` reference of <code>param2</code> is to be interpreted, and, by implication, the use of <code>param1</code>.\n    - id: param1\n      type: System.Int32\n      description: \"An integer value to be passed to the Speech platform when the event requested by the instance of <xref href=\\\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\\\"></xref> to be constructed is generated.  \\n  \\n The exact meaning of this integer is implicitly determined by the value of <code>parameterType</code>.\"\n    - id: param2\n      type: System.IntPtr\n      description: \"A `System.IntPtr` instance referencing an object. to be passed to the Speech platform when the event requested by the instance of <xref href=\\\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\\\"></xref> to be constructed is generated.  \\n  \\n The type which must be referenced is explicitly defined by the value <code>parameterType</code>. The value `System.IntPtr.Zero`.\"\n  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)\n  commentId: M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SpeechEventInfo.Equals(Object)\n  fullName: SpeechEventInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Determines whether a specified object is an instance of <code>SpeechEventInfo</code> and equal to the current instance of <code>SpeechEventInfo</code>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is equal to the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object; otherwise, `false`.'\n  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  commentId: M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  id: Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  langs:\n  - csharp\n  name: Equals(SpeechEventInfo)\n  nameWithType: SpeechEventInfo.Equals(SpeechEventInfo)\n  fullName: SpeechEventInfo.Equals(SpeechEventInfo)\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Determines whether a specified <code>SpeechEventInfo</code> object is equal to the current instance of <code>SpeechEventInfo</code>.\n  syntax:\n    content: public bool Equals (System.Speech.Synthesis.TtsEngine.SpeechEventInfo other);\n    parameters:\n    - id: other\n      type: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n      description: The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to evaluate.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>other</code> is equal to the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object; otherwise, `false`.'\n  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId\n  commentId: P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId\n  id: EventId\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  langs:\n  - csharp\n  name: EventId\n  nameWithType: SpeechEventInfo.EventId\n  fullName: SpeechEventInfo.EventId\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Gets and set the Speech platform event which an instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is used to request.\n  remarks: ''\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n         The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> are used to log the event generated through the `LogSpeechEvent` method.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n         LogSpeechEvent(spEvent.EventId,   \\n                        spEvent.ParameterType,   \\n                        spEvent.Param1,  \\n                        spEvent.Param2);  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n  \\n  _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public short EventId { get; }\n    return:\n      type: System.Int16\n      description: Returns a member of <xref href=\"System.Speech.Synthesis.TtsEngine.TtsEventId\"></xref> as a `short`, indicating the event type the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object is to generate.\n  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode\n  commentId: M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SpeechEventInfo.GetHashCode()\n  fullName: SpeechEventInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Provides a hash code for a <code>SpeechEventInfo</code> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for a <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object.\n  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  commentId: M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  id: op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  langs:\n  - csharp\n  name: op_Equality(SpeechEventInfo, SpeechEventInfo)\n  nameWithType: SpeechEventInfo.op_Equality(SpeechEventInfo, SpeechEventInfo)\n  fullName: SpeechEventInfo.op_Equality(SpeechEventInfo, SpeechEventInfo)\n  type: Operator\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Determines whether two instances of <code>SpeechEventInfo</code> are equal.\n  remarks: The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%2CSystem.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Equality (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);\n    parameters:\n    - id: event1\n      type: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n      description: The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event2</code>.\n    - id: event2\n      type: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n      description: The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event1</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>event1</code> is the same as <code>event2</code>; otherwise, `false`.'\n  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  commentId: M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  id: op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  langs:\n  - csharp\n  name: op_Inequality(SpeechEventInfo, SpeechEventInfo)\n  nameWithType: SpeechEventInfo.op_Inequality(SpeechEventInfo, SpeechEventInfo)\n  fullName: SpeechEventInfo.op_Inequality(SpeechEventInfo, SpeechEventInfo)\n  type: Operator\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Determines whether two instances of <code>SpeechEventInfo</code> are not equal.\n  remarks: The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Compare%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%2CSystem.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Inequality (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);\n    parameters:\n    - id: event1\n      type: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n      description: The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event2</code>.\n    - id: event2\n      type: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n      description: The <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object to compare to <code>event1</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>event1</code> is different from <code>event2</code>; otherwise, `false`.'\n  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1\n  commentId: P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1\n  id: Param1\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  langs:\n  - csharp\n  name: Param1\n  nameWithType: SpeechEventInfo.Param1\n  fullName: SpeechEventInfo.Param1\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Gets and set the `integer` value (<code>param1</code> in the constructor) to be passed to the Speech platform to generate an event the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is used to request.\n  remarks: \"The requirements and meaning of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.  \\n  \\n For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.\"\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n         The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> are used to log the event generated through the `LogSpeechEvent` method.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n         LogSpeechEvent(spEvent.EventId,   \\n                        spEvent.ParameterType,   \\n                        spEvent.Param1,  \\n                        spEvent.Param2);  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n  \\n  _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public int Param1 { get; }\n    return:\n      type: System.Int32\n      description: Returns the `integer` to be passed to Speech platform when the event specified by the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is generated.\n  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\n  commentId: P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\n  id: Param2\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  langs:\n  - csharp\n  name: Param2\n  nameWithType: SpeechEventInfo.Param2\n  fullName: SpeechEventInfo.Param2\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Gets and set the `System.IntPtr` instance (<code>param2</code> in the constructor) referencing the object to be passed to the Speech platform to generate an event the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is used to request.\n  remarks: \"The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.  \\n  \\n For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.\"\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n         The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> are used to log the event generated through the `LogSpeechEvent` method.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n         LogSpeechEvent(spEvent.EventId,   \\n                        spEvent.ParameterType,   \\n                        spEvent.Param1,  \\n                        spEvent.Param2);  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n  \\n  _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public IntPtr Param2 { get; }\n    return:\n      type: System.IntPtr\n      description: Returns the `System.IntPtr` referencing the object to be passed to Speech platform when the event specified by the current instance of <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> is generated.\n  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType\n  commentId: P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType\n  id: ParameterType\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  langs:\n  - csharp\n  name: ParameterType\n  nameWithType: SpeechEventInfo.ParameterType\n  fullName: SpeechEventInfo.ParameterType\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Synthesis.TtsEngine\n  summary: Returns the data type of the object pointed to by the `IntPtr` returned by the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\"></xref> parameter on the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object.\n  remarks: \"The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.  \\n  \\n For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.\"\n  example:\n  - \"The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>  \\n  \\n The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  \\n  \\n1.  Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.  \\n  \\n2.  If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation  \\n  \\n    -   Translates Americanism to Britishisms in the text to be spoken.  \\n  \\n    -   If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.  \\n  \\n         The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> are used to log the event generated through the `LogSpeechEvent` method.  \\n  \\n3.  A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.  \\n  \\n```  \\nprivate const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  \\nprivate readonly char[] spaces = new char[] { ' ', '\\\\t', '\\\\r', '\\\\n' };  \\ninternal struct UsVsUk  \\n{  \\n  internal string UK;  \\n  internal string US;  \\n}  \\n  \\noverride public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  \\n{  \\n  TextFragment [] newFrags=new TextFragment[frags.Length];  \\n  \\n  for (int i=0;i<frags.Length;i++){  \\n    newFrags[i].State=frags[i].State;  \\n    //truncate  \\n    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  \\n                               frags[i].TextLength);  \\n    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  \\n    newFrags[i].TextOffset = 0;  \\n    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  \\n      //Us to UK conversion  \\n      foreach (UsVsUk term in TransList) {  \\n      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  \\n      }  \\n      //Generate progress meter events if supported  \\n      if ((site.EventInterest & WordBoundaryFlag) != 0) {  \\n      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  \\n  \\n      foreach (string s in subs) {  \\n        int offset = newFrags[i].TextOffset;  \\n        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   \\n                (Int16)EventParameterType.Undefined,   \\n                 s.Length, new IntPtr(offset));  \\n         LogSpeechEvent(spEvent.EventId,   \\n                        spEvent.ParameterType,   \\n                        spEvent.Param1,  \\n                        spEvent.Param2);  \\n        offset += s.Length;  \\n        if (s.Trim().Length > 0) {  \\n          SpeechEventInfo[] events = new SpeechEventInfo[1];  \\n          events[0] = spEvent;  \\n          site.AddEvents(events, 1);  \\n        }  \\n      }  \\n      }  \\n    }  \\n  }  \\n  \\n  _baseSynthesize.Speak(newFrags, wfx, site);  \\n  \\n}  \\n```\"\n  syntax:\n    content: public short ParameterType { get; }\n    return:\n      type: System.Int16\n      description: A `short` value corresponding to a member of the <xref href=\"System.Speech.Synthesis.TtsEngine.EventParameterType\"></xref> enumeration and indicating the data type of the object pointed to by the `IntPtr` returned by the <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\"></xref> parameter and used as the second argument for the constructor of the current <xref href=\"System.Speech.Synthesis.TtsEngine.SpeechEventInfo\"></xref> object.\n  overload: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: SpeechEventInfo(Int16, Int16, Int32, IntPtr)\n  nameWithType: SpeechEventInfo.SpeechEventInfo(Int16, Int16, Int32, IntPtr)\n  fullName: SpeechEventInfo.SpeechEventInfo(Int16, Int16, Int32, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SpeechEventInfo.Equals(Object)\n  fullName: SpeechEventInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: Equals(SpeechEventInfo)\n  nameWithType: SpeechEventInfo.Equals(SpeechEventInfo)\n  fullName: SpeechEventInfo.Equals(SpeechEventInfo)\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  parent: System.Speech.Synthesis.TtsEngine\n  isExternal: false\n  name: SpeechEventInfo\n  nameWithType: SpeechEventInfo\n  fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: EventId\n  nameWithType: SpeechEventInfo.EventId\n  fullName: SpeechEventInfo.EventId\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SpeechEventInfo.GetHashCode()\n  fullName: SpeechEventInfo.GetHashCode()\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: op_Equality(SpeechEventInfo, SpeechEventInfo)\n  nameWithType: SpeechEventInfo.op_Equality(SpeechEventInfo, SpeechEventInfo)\n  fullName: SpeechEventInfo.op_Equality(SpeechEventInfo, SpeechEventInfo)\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: op_Inequality(SpeechEventInfo, SpeechEventInfo)\n  nameWithType: SpeechEventInfo.op_Inequality(SpeechEventInfo, SpeechEventInfo)\n  fullName: SpeechEventInfo.op_Inequality(SpeechEventInfo, SpeechEventInfo)\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: Param1\n  nameWithType: SpeechEventInfo.Param1\n  fullName: SpeechEventInfo.Param1\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: Param2\n  nameWithType: SpeechEventInfo.Param2\n  fullName: SpeechEventInfo.Param2\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: ParameterType\n  nameWithType: SpeechEventInfo.ParameterType\n  fullName: SpeechEventInfo.ParameterType\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor*\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: SpeechEventInfo\n  nameWithType: SpeechEventInfo.SpeechEventInfo\n  fullName: SpeechEventInfo.SpeechEventInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals*\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: Equals\n  nameWithType: SpeechEventInfo.Equals\n  fullName: SpeechEventInfo.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId*\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: EventId\n  nameWithType: SpeechEventInfo.EventId\n  fullName: SpeechEventInfo.EventId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode*\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: SpeechEventInfo.GetHashCode\n  fullName: SpeechEventInfo.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality*\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: op_Equality\n  nameWithType: SpeechEventInfo.op_Equality\n  fullName: SpeechEventInfo.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality*\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: op_Inequality\n  nameWithType: SpeechEventInfo.op_Inequality\n  fullName: SpeechEventInfo.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1*\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: Param1\n  nameWithType: SpeechEventInfo.Param1\n  fullName: SpeechEventInfo.Param1\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2*\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: Param2\n  nameWithType: SpeechEventInfo.Param2\n  fullName: SpeechEventInfo.Param2\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n- uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType*\n  parent: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  isExternal: false\n  name: ParameterType\n  nameWithType: SpeechEventInfo.ParameterType\n  fullName: SpeechEventInfo.ParameterType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Synthesis.TtsEngine/SpeechEventInfo.xml\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Speech.Synthesis.TtsEngine.SpeechEventInfo}\n  parent: System\n  isExternal: false\n  name: IEquatable<SpeechEventInfo>\n  nameWithType: IEquatable<SpeechEventInfo>\n  fullName: System.IEquatable<System.Speech.Synthesis.TtsEngine.SpeechEventInfo>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n    name: SpeechEventInfo\n    nameWithType: SpeechEventInfo\n    fullName: System.Speech.Synthesis.TtsEngine.SpeechEventInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}