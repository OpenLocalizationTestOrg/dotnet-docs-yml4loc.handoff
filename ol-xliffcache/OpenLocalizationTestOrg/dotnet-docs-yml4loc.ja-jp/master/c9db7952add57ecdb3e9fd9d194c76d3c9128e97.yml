### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  id: DbConnection
  children:
  - System.Data.Common.DbConnection.#ctor
  - System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.BeginTransaction
  - System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.ChangeDatabase(System.String)
  - System.Data.Common.DbConnection.Close
  - System.Data.Common.DbConnection.ConnectionString
  - System.Data.Common.DbConnection.ConnectionTimeout
  - System.Data.Common.DbConnection.CreateCommand
  - System.Data.Common.DbConnection.CreateDbCommand
  - System.Data.Common.DbConnection.Database
  - System.Data.Common.DbConnection.DataSource
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.Dispose(System.Boolean)
  - System.Data.Common.DbConnection.Dispose
  - System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.Common.DbConnection.GetSchema
  - System.Data.Common.DbConnection.GetSchema(System.String)
  - System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.Open
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.ServerVersion
  - System.Data.Common.DbConnection.State
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
  type: Class
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Represents a connection to a database.
  syntax:
    content: 'public abstract class DbConnection : System.ComponentModel.Component, IDisposable, System.Data.IDbConnection'
  inheritance:
  - System.Object
  derivedClasses:
  - System.Data.EntityClient.EntityConnection
  - System.Data.Odbc.OdbcConnection
  - System.Data.OleDb.OleDbConnection
  - System.Data.OracleClient.OracleConnection
  - System.Data.SqlClient.SqlConnection
  implements:
  - System.Data.IDbConnection
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.#ctor
  commentId: M:System.Data.Common.DbConnection.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: DbConnection()
  nameWithType: DbConnection.DbConnection()
  fullName: DbConnection.DbConnection()
  type: Constructor
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Initializes a new instance of the <xref href="System.Data.Common.DbConnection"></xref> class.
  syntax:
    content: protected DbConnection ();
    parameters: []
  overload: System.Data.Common.DbConnection.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  commentId: M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginDbTransaction(IsolationLevel)
  fullName: DbConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Starts a database transaction.
  remarks: If you are creating your own connection type, override this method to implement the code necessary to begin a transaction.
  syntax:
    content: protected abstract System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: Specifies the isolation level for the transaction.
    return:
      type: System.Data.Common.DbTransaction
      description: An object representing the new transaction.
  overload: System.Data.Common.DbConnection.BeginDbTransaction*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.BeginTransaction
  commentId: M:System.Data.Common.DbConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: DbConnection.BeginTransaction()
  fullName: DbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Starts a database transaction.
  remarks: If you do not specify an isolation level, the default isolation level for the specific type of connection is used.
  syntax:
    content: public System.Data.Common.DbTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.Common.DbTransaction
      description: An object representing the new transaction.
  overload: System.Data.Common.DbConnection.BeginTransaction*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginTransaction(IsolationLevel)
  fullName: DbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Starts a database transaction with the specified isolation level.
  syntax:
    content: public System.Data.Common.DbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: Specifies the isolation level for the transaction.
    return:
      type: System.Data.Common.DbTransaction
      description: An object representing the new transaction.
  overload: System.Data.Common.DbConnection.BeginTransaction*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.ChangeDatabase(System.String)
  commentId: M:System.Data.Common.DbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: DbConnection.ChangeDatabase(String)
  fullName: DbConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Changes the current database for an open connection.
  remarks: The value supplied in the `databaseName` parameter must be a valid database name for the current instance.
  syntax:
    content: public abstract void ChangeDatabase (string databaseName);
    parameters:
    - id: databaseName
      type: System.String
      description: Specifies the name of the database for the connection to use.
  overload: System.Data.Common.DbConnection.ChangeDatabase*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.Close
  commentId: M:System.Data.Common.DbConnection.Close
  id: Close
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: Close()
  nameWithType: DbConnection.Close()
  fullName: DbConnection.Close()
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Closes the connection to the database. This is the preferred method of closing any open connection.
  remarks: "The <xref:System.Data.Common.DbConnection.Close%2A> method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.  \n  \n An application can call <xref:System.Data.Common.DbConnection.Close%2A> more than one time. No exception is generated.  \n  \n If the <xref:System.Data.Common.DbConnection> goes out of scope, it is not closed. Therefore, you must explicitly close the connection by calling `Close` or `Dispose`, which are functionally equivalent. If the connection pooling value `Pooling` is set to `true` or `yes`, this also releases the physical connection.  \n  \n> [!CAUTION]\n>  Do not call `Close` or `Dispose` on a **Connection**, a **DataReader**, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)."
  syntax:
    content: public abstract void Close ();
    parameters: []
  overload: System.Data.Common.DbConnection.Close*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: The connection-level error that occurred while opening the connection.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.ConnectionString
  commentId: P:System.Data.Common.DbConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: DbConnection.ConnectionString
  fullName: DbConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Gets or sets the string used to open the connection.
  remarks: The exact contents of the connection string depend on the specific data source for this connection. To determine which settings are valid, see the documentation for the specific type of connection that you are using.
  syntax:
    content: >-
      [System.ComponentModel.SettingsBindable(true)]

      public abstract string ConnectionString { get; set; }
    return:
      type: System.String
      description: The connection string used to establish the initial connection. The exact contents of the connection string depend on the specific data source for this connection. The default value is an empty string.
  overload: System.Data.Common.DbConnection.ConnectionString*
  exceptions: []
  attributes:
  - type: System.ComponentModel.SettingsBindableAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.ConnectionTimeout
  commentId: P:System.Data.Common.DbConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: DbConnection.ConnectionTimeout
  fullName: DbConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Gets the time to wait while establishing a connection before terminating the attempt and generating an error.
  syntax:
    content: public virtual int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: The time (in seconds) to wait for a connection to open. The default value is determined by the specific type of connection that you are using.
  overload: System.Data.Common.DbConnection.ConnectionTimeout*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.CreateCommand
  commentId: M:System.Data.Common.DbConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: DbConnection.CreateCommand()
  fullName: DbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Creates and returns a <xref href="System.Data.Common.DbCommand"></xref> object associated with the current connection.
  syntax:
    content: public System.Data.Common.DbCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: A <xref href="System.Data.Common.DbCommand"></xref> object.
  overload: System.Data.Common.DbConnection.CreateCommand*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.CreateDbCommand
  commentId: M:System.Data.Common.DbConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: DbConnection.CreateDbCommand()
  fullName: DbConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Creates and returns a <xref href="System.Data.Common.DbCommand"></xref> object associated with the current connection.
  remarks: If you are implementing your own connection, override this method to implement the code necessary to create and return a <xref:System.Data.Common.DbCommand> object.
  syntax:
    content: protected abstract System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: A <xref href="System.Data.Common.DbCommand"></xref> object.
  overload: System.Data.Common.DbConnection.CreateDbCommand*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.Database
  commentId: P:System.Data.Common.DbConnection.Database
  id: Database
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: Database
  nameWithType: DbConnection.Database
  fullName: DbConnection.Database
  type: Property
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Gets the name of the current database after a connection is opened, or the database name specified in the connection string before the connection is opened.
  remarks: A connection typically updates this property dynamically when the current database changes.
  syntax:
    content: public abstract string Database { get; }
    return:
      type: System.String
      description: The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.
  overload: System.Data.Common.DbConnection.Database*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.DataSource
  commentId: P:System.Data.Common.DbConnection.DataSource
  id: DataSource
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: DbConnection.DataSource
  fullName: DbConnection.DataSource
  type: Property
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Gets the name of the database server to which to connect.
  remarks: If the connection to the database is closed, the <xref:System.Data.Common.DbConnection.DataSource%2A> returns whatever is contained in the <xref:System.Data.Common.DbConnection.ConnectionString%2A> for the `DataSource` keyword. If the connection is open and the <xref:System.Data.Common.DbConnection.ConnectionString%2A> data source keyword's value starts with "&#124;`datadirectory`&#124;", the property returns whatever is contained in the <xref:System.Data.Common.DbConnection.ConnectionString%2A> for the `DataSource` keyword only. If the connection to the database is open, the property returns what the native provider returns for the `DBPROP_INIT_DATASOURCE`, and if that is empty, the native provider's `DBPROP_DATASOURCENAME` is returned.
  syntax:
    content: public abstract string DataSource { get; }
    return:
      type: System.String
      description: The name of the database server to which to connect. The default value is an empty string.
  overload: System.Data.Common.DbConnection.DataSource*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.DbProviderFactory
  commentId: P:System.Data.Common.DbConnection.DbProviderFactory
  id: DbProviderFactory
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: DbProviderFactory
  nameWithType: DbConnection.DbProviderFactory
  fullName: DbConnection.DbProviderFactory
  type: Property
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data.Common
  summary: Gets the <xref href="System.Data.Common.DbProviderFactory"></xref> for this <xref href="System.Data.Common.DbConnection"></xref>.
  syntax:
    content: protected virtual System.Data.Common.DbProviderFactory DbProviderFactory { get; }
    return:
      type: System.Data.Common.DbProviderFactory
      description: A set of methods for creating instances of a provider's implementation of the data source classes.
  overload: System.Data.Common.DbConnection.DbProviderFactory*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.Dispose(System.Boolean)
  commentId: M:System.Data.Common.DbConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbConnection.Dispose(Boolean)
  fullName: DbConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
  overload: System.Data.Common.DbConnection.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.Dispose
  commentId: M:System.Data.Common.DbConnection.Dispose
  id: Dispose
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: Dispose()
  nameWithType: DbConnection.Dispose()
  fullName: DbConnection.Dispose()
  type: Method
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Data.Common.DbConnection.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)
  commentId: M:System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: DbConnection.EnlistTransaction(Transaction)
  fullName: DbConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data.Common
  summary: Enlists in the specified transaction.
  remarks: New in ADO.NET 2.0 is support for using the `EnlistTransaction` method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, `EnlistTransaction` takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions. Once a connection is explicitly enlisted in a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.
  syntax:
    content: public virtual void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: A reference to an existing <xref href="System.Transactions.Transaction"></xref> in which to enlist.
  overload: System.Data.Common.DbConnection.EnlistTransaction*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.GetSchema
  commentId: M:System.Data.Common.DbConnection.GetSchema
  id: GetSchema
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: DbConnection.GetSchema()
  fullName: DbConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data.Common
  summary: Returns schema information for the data source of this <xref href="System.Data.Common.DbConnection"></xref>.
  remarks: If the connection is associated with a transaction, executing `GetSchema` calls may cause some providers to throw an exception.
  syntax:
    content: public virtual System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: A <xref href="System.Data.DataTable"></xref> that contains schema information.
  overload: System.Data.Common.DbConnection.GetSchema*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.GetSchema(System.String)
  commentId: M:System.Data.Common.DbConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: DbConnection.GetSchema(String)
  fullName: DbConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data.Common
  summary: Returns schema information for the data source of this <xref href="System.Data.Common.DbConnection"></xref> using the specified string for the schema name.
  remarks: If the connection is associated with a transaction, executing `GetSchema` calls may cause some providers to throw an exception.
  syntax:
    content: public virtual System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: Specifies the name of the schema to return.
    return:
      type: System.Data.DataTable
      description: A <xref href="System.Data.DataTable"></xref> that contains schema information.
  overload: System.Data.Common.DbConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>collectionName</code> is specified as null.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  commentId: M:System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: GetSchema(String, String[])
  nameWithType: DbConnection.GetSchema(String, String[])
  fullName: DbConnection.GetSchema(String, String[])
  type: Method
  assemblies:
  - System.Data
  - netstandard
  - System.Data.Common
  namespace: System.Data.Common
  summary: Returns schema information for the data source of this <xref href="System.Data.Common.DbConnection"></xref> using the specified string for the schema name and the specified string array for the restriction values.
  remarks: "The `restrictionValues` parameter can supply *n* depth of values, which are specified by the restrictions collection for a specific collection. In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.  \n  \n An example of this is the \"Tables\" collection. If the \"Tables\" collection has three restrictions (database, owner, and table name) and you want to get back only the tables associated with the owner \"Carl\", you must pass in the following values at least: null, \"Carl\". If a restriction value is not passed in, the default values are used for that restriction. This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value. In that case, the empty string (\"\") is considered to be the value for the specified parameter.  \n  \n If the connection is associated with a transaction, executing `GetSchema` calls may cause some providers to throw an exception."
  syntax:
    content: public virtual System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: Specifies the name of the schema to return.
    - id: restrictionValues
      type: System.String[]
      description: Specifies a set of restriction values for the requested schema.
    return:
      type: System.Data.DataTable
      description: A <xref href="System.Data.DataTable"></xref> that contains schema information.
  overload: System.Data.Common.DbConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>collectionName</code> is specified as null.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  commentId: M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  id: OnStateChange(System.Data.StateChangeEventArgs)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: OnStateChange(StateChangeEventArgs)
  nameWithType: DbConnection.OnStateChange(StateChangeEventArgs)
  fullName: DbConnection.OnStateChange(StateChangeEventArgs)
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Raises the <xref href="System.Data.Common.DbConnection.StateChange"></xref> event.
  remarks: 'Raising an event invokes the event handler through a delegate. For an overview, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnStateChange (System.Data.StateChangeEventArgs stateChange);
    parameters:
    - id: stateChange
      type: System.Data.StateChangeEventArgs
      description: A <xref href="System.Data.StateChangeEventArgs"></xref> that contains the event data.
  overload: System.Data.Common.DbConnection.OnStateChange*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.Open
  commentId: M:System.Data.Common.DbConnection.Open
  id: Open
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: Open()
  nameWithType: DbConnection.Open()
  fullName: DbConnection.Open()
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Opens a database connection with the settings specified by the <xref href="System.Data.Common.DbConnection.ConnectionString"></xref>.
  remarks: This method must be overridden with user-defined behavior. <xref:System.Data.SqlClient.SqlConnection.Open%2A?displayProperty=fullName> will throw an exception if called again without first being closed.
  syntax:
    content: public abstract void Open ();
    parameters: []
  overload: System.Data.Common.DbConnection.Open*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.OpenAsync
  commentId: M:System.Data.Common.DbConnection.OpenAsync
  id: OpenAsync
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: OpenAsync()
  nameWithType: DbConnection.OpenAsync()
  fullName: DbConnection.OpenAsync()
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: An asynchronous version of <xref href="System.Data.Common.DbConnection.Open"></xref>, which opens a database connection with the settings specified by the <xref href="System.Data.Common.DbConnection.ConnectionString"></xref>. This method invokes the virtual method <xref href="System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)"></xref> with CancellationToken.None.
  remarks: "After calling <xref:System.Data.Common.DbConnection.OpenAsync%2A>, <xref:System.Data.Common.DbConnection.State%2A> must return <xref:System.Data.ConnectionState.Connecting> until the returned <xref:System.Threading.Tasks.Task> is completed. Then, if the connection was successful, <xref:System.Data.Common.DbConnection.State%2A> must return <xref:System.Data.ConnectionState.Open>. If the connection fails, <xref:System.Data.Common.DbConnection.State%2A> must return <xref:System.Data.ConnectionState.Closed>.  \n  \n A call to <xref:System.Data.Common.DbConnection.Close%2A> will attempt to cancel or close the corresponding <xref:System.Data.Common.DbConnection.OpenAsync%2A> call.  \n  \n For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."
  syntax:
    content: public System.Threading.Tasks.Task OpenAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
  overload: System.Data.Common.DbConnection.OpenAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  id: OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: OpenAsync(CancellationToken)
  nameWithType: DbConnection.OpenAsync(CancellationToken)
  fullName: DbConnection.OpenAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: "This is the asynchronous version of <xref href=\"System.Data.Common.DbConnection.Open\"></xref>. Providers should override with an appropriate implementation. The cancellation token can optionally be honored.  \n  \n The default implementation invokes the synchronous <xref href=\"System.Data.Common.DbConnection.Open\"></xref> call and returns a completed task. The default implementation will return a cancelled task if passed an already cancelled cancellationToken. Exceptions thrown by Open will be communicated via the returned Task Exception property.  \n  \n Do not invoke other methods and properties of the `DbConnection` object until the returned Task is complete."
  remarks: "After calling <xref:System.Data.Common.DbConnection.OpenAsync%2A>, <xref:System.Data.Common.DbConnection.State%2A> must return <xref:System.Data.ConnectionState.Connecting> until the returned <xref:System.Threading.Tasks.Task> is completed. Then, if the connection was successful, <xref:System.Data.Common.DbConnection.State%2A> must return <xref:System.Data.ConnectionState.Open>. If the connection fails, <xref:System.Data.Common.DbConnection.State%2A> must return <xref:System.Data.ConnectionState.Closed>.  \n  \n A call to <xref:System.Data.Common.DbConnection.Close%2A> will attempt to cancel or close the corresponding <xref:System.Data.Common.DbConnection.OpenAsync%2A> call.  \n  \n For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
  overload: System.Data.Common.DbConnection.OpenAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.ServerVersion
  commentId: P:System.Data.Common.DbConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: DbConnection.ServerVersion
  fullName: DbConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Gets a string that represents the version of the server to which the object is connected.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public abstract string ServerVersion { get; }
    return:
      type: System.String
      description: The version of the database. The format of the string returned depends on the specific type of connection you are using.
  overload: System.Data.Common.DbConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Data.Common.DbConnection.ServerVersion"></xref> was called while the returned Task was not completed and the connection was not opened after a call to <xref href="System.Data.Common.DbConnection.OpenAsync*"></xref>.
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.State
  commentId: P:System.Data.Common.DbConnection.State
  id: State
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: State
  nameWithType: DbConnection.State
  fullName: DbConnection.State
  type: Property
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Gets a string that describes the state of the connection.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public abstract System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: The state of the connection. The format of the string returned depends on the specific type of connection you are using.
  overload: System.Data.Common.DbConnection.State*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.StateChange
  commentId: E:System.Data.Common.DbConnection.StateChange
  id: StateChange
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: StateChange
  nameWithType: DbConnection.StateChange
  fullName: DbConnection.StateChange
  type: Event
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Occurs when the state of the event changes.
  remarks: The <xref:System.Data.Common.DbConnection.StateChange> event occurs when the state of the event changes from closed to opened, or opened to closed.
  syntax:
    content: public virtual event System.Data.StateChangeEventHandler StateChange;
    return:
      type: System.Data.StateChangeEventHandler
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  commentId: M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  id: System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: IDbConnection.BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.IDbConnection.BeginTransaction(IsolationLevel)
  fullName: DbConnection.IDbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Begins a database transaction with the specified <xref href="System.Data.IsolationLevel"></xref> value.
  remarks: For more information, see <xref:System.Data.IDbConnection.BeginTransaction%2A>.
  syntax:
    content: System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: One of the <xref href="System.Data.IsolationLevel"></xref> values.
    return:
      type: System.Data.IDbTransaction
      description: An object that represents the new transaction.
  overload: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  commentId: M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  id: System#Data#IDbConnection#BeginTransaction
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: IDbConnection.BeginTransaction()
  nameWithType: DbConnection.IDbConnection.BeginTransaction()
  fullName: DbConnection.IDbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Begins a database transaction.
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbConnection> instance is cast to an <xref:System.Data.IDbConnection> interface.  \n  \n For more information, see <xref:System.Data.IDbConnection.BeginTransaction%2A>."
  syntax:
    content: System.Data.IDbTransaction IDbConnection.BeginTransaction ();
    parameters: []
    return:
      type: System.Data.IDbTransaction
      description: An object that represents the new transaction.
  overload: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  commentId: M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  id: System#Data#IDbConnection#CreateCommand
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: IDbConnection.CreateCommand()
  nameWithType: DbConnection.IDbConnection.CreateCommand()
  fullName: DbConnection.IDbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data.Common
  - System.Data
  - netstandard
  namespace: System.Data.Common
  summary: Creates and returns a <xref href="System.Data.Common.DbCommand"></xref> object that is associated with the current connection.
  remarks: For more information, see [Commands and Parameters](~/docs/framework/data/adonet/commands-and-parameters.md) and <xref:System.Data.IDbConnection.CreateCommand%2A>.
  syntax:
    content: System.Data.IDbCommand IDbConnection.CreateCommand ();
    parameters: []
    return:
      type: System.Data.IDbCommand
      description: A <xref href="System.Data.Common.DbCommand"></xref> object that is associated with the connection.
  overload: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbException
  parent: System.Data.Common
  isExternal: false
  name: DbException
  nameWithType: DbException
  fullName: System.Data.Common.DbException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Data.Common.DbConnection.#ctor
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbConnection()
  nameWithType: DbConnection.DbConnection()
  fullName: DbConnection.DbConnection()
- uid: System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginDbTransaction(IsolationLevel)
  fullName: DbConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.Common.DbConnection.BeginTransaction
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: DbConnection.BeginTransaction()
  fullName: DbConnection.BeginTransaction()
- uid: System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginTransaction(IsolationLevel)
  fullName: DbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.Common.DbConnection.ChangeDatabase(System.String)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: DbConnection.ChangeDatabase(String)
  fullName: DbConnection.ChangeDatabase(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbConnection.Close
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Close()
  nameWithType: DbConnection.Close()
  fullName: DbConnection.Close()
- uid: System.Data.Common.DbConnection.ConnectionString
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: DbConnection.ConnectionString
  fullName: DbConnection.ConnectionString
- uid: System.Data.Common.DbConnection.ConnectionTimeout
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: DbConnection.ConnectionTimeout
  fullName: DbConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbConnection.CreateCommand
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: DbConnection.CreateCommand()
  fullName: DbConnection.CreateCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common.DbConnection.CreateDbCommand
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: DbConnection.CreateDbCommand()
  fullName: DbConnection.CreateDbCommand()
- uid: System.Data.Common.DbConnection.Database
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Database
  nameWithType: DbConnection.Database
  fullName: DbConnection.Database
- uid: System.Data.Common.DbConnection.DataSource
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DataSource
  nameWithType: DbConnection.DataSource
  fullName: DbConnection.DataSource
- uid: System.Data.Common.DbConnection.DbProviderFactory
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbConnection.DbProviderFactory
  fullName: DbConnection.DbProviderFactory
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.Common.DbConnection.Dispose(System.Boolean)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbConnection.Dispose(Boolean)
  fullName: DbConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbConnection.Dispose
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Dispose()
  nameWithType: DbConnection.Dispose()
  fullName: DbConnection.Dispose()
- uid: System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: DbConnection.EnlistTransaction(Transaction)
  fullName: DbConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.Common.DbConnection.GetSchema
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema()
  nameWithType: DbConnection.GetSchema()
  fullName: DbConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbConnection.GetSchema(System.String)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: DbConnection.GetSchema(String)
  fullName: DbConnection.GetSchema(String)
- uid: System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema(String, String[])
  nameWithType: DbConnection.GetSchema(String, String[])
  fullName: DbConnection.GetSchema(String, String[])
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OnStateChange(StateChangeEventArgs)
  nameWithType: DbConnection.OnStateChange(StateChangeEventArgs)
  fullName: DbConnection.OnStateChange(StateChangeEventArgs)
- uid: System.Data.StateChangeEventArgs
  parent: System.Data
  isExternal: false
  name: StateChangeEventArgs
  nameWithType: StateChangeEventArgs
  fullName: System.Data.StateChangeEventArgs
- uid: System.Data.Common.DbConnection.Open
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Open()
  nameWithType: DbConnection.Open()
  fullName: DbConnection.Open()
- uid: System.Data.Common.DbConnection.OpenAsync
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OpenAsync()
  nameWithType: DbConnection.OpenAsync()
  fullName: DbConnection.OpenAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OpenAsync(CancellationToken)
  nameWithType: DbConnection.OpenAsync(CancellationToken)
  fullName: DbConnection.OpenAsync(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbConnection.ServerVersion
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: DbConnection.ServerVersion
  fullName: DbConnection.ServerVersion
- uid: System.Data.Common.DbConnection.State
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: State
  nameWithType: DbConnection.State
  fullName: DbConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.Common.DbConnection.StateChange
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: StateChange
  nameWithType: DbConnection.StateChange
  fullName: DbConnection.StateChange
- uid: System.Data.StateChangeEventHandler
  parent: System.Data
  isExternal: false
  name: StateChangeEventHandler
  nameWithType: StateChangeEventHandler
  fullName: System.Data.StateChangeEventHandler
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: IDbConnection.BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.IDbConnection.BeginTransaction(IsolationLevel)
  fullName: DbConnection.IDbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.IDbTransaction
  parent: System.Data
  isExternal: false
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: IDbConnection.BeginTransaction()
  nameWithType: DbConnection.IDbConnection.BeginTransaction()
  fullName: DbConnection.IDbConnection.BeginTransaction()
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: IDbConnection.CreateCommand()
  nameWithType: DbConnection.IDbConnection.CreateCommand()
  fullName: DbConnection.IDbConnection.CreateCommand()
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.Common.DbConnection.BeginTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: DbConnection.BeginTransaction
  fullName: DbConnection.BeginTransaction
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.GetSchema*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema
  nameWithType: DbConnection.GetSchema
  fullName: DbConnection.GetSchema
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.OpenAsync*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OpenAsync
  nameWithType: DbConnection.OpenAsync
  fullName: DbConnection.OpenAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.#ctor*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection.DbConnection
  fullName: DbConnection.DbConnection
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.BeginDbTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: DbConnection.BeginDbTransaction
  fullName: DbConnection.BeginDbTransaction
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.ChangeDatabase*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: DbConnection.ChangeDatabase
  fullName: DbConnection.ChangeDatabase
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.Close*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Close
  nameWithType: DbConnection.Close
  fullName: DbConnection.Close
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.ConnectionString*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: DbConnection.ConnectionString
  fullName: DbConnection.ConnectionString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.ConnectionTimeout*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: DbConnection.ConnectionTimeout
  fullName: DbConnection.ConnectionTimeout
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.CreateCommand*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateCommand
  nameWithType: DbConnection.CreateCommand
  fullName: DbConnection.CreateCommand
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.CreateDbCommand*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: DbConnection.CreateDbCommand
  fullName: DbConnection.CreateDbCommand
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.Database*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Database
  nameWithType: DbConnection.Database
  fullName: DbConnection.Database
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.DataSource*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DataSource
  nameWithType: DbConnection.DataSource
  fullName: DbConnection.DataSource
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.DbProviderFactory*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbConnection.DbProviderFactory
  fullName: DbConnection.DbProviderFactory
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.Dispose*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Dispose
  nameWithType: DbConnection.Dispose
  fullName: DbConnection.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.EnlistTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: DbConnection.EnlistTransaction
  fullName: DbConnection.EnlistTransaction
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.OnStateChange*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OnStateChange
  nameWithType: DbConnection.OnStateChange
  fullName: DbConnection.OnStateChange
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.Open*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Open
  nameWithType: DbConnection.Open
  fullName: DbConnection.Open
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.ServerVersion*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: DbConnection.ServerVersion
  fullName: DbConnection.ServerVersion
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.State*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: State
  nameWithType: DbConnection.State
  fullName: DbConnection.State
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.BeginTransaction
  nameWithType: DbConnection.System.Data.IDbConnection.BeginTransaction
  fullName: DbConnection.System.Data.IDbConnection.BeginTransaction
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.CreateCommand
  nameWithType: DbConnection.System.Data.IDbConnection.CreateCommand
  fullName: DbConnection.System.Data.IDbConnection.CreateCommand
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common/DbConnection.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Data.IDbConnection
  parent: System.Data
  isExternal: false
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
