{"nodes":[{"content":"Discovers available types at design time.","nodes":[{"pos":[0,41],"content":"Discovers available types at design time.","nodes":[{"content":"Discovers available types at design time.","pos":[0,41]}]}],"pos":[595,637],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.ITypeDiscoveryService> is used to discover available types at design time, when a client of the service does not know the names of existing types or referenced assemblies.","nodes":[{"pos":[0,210],"content":"The <xref:System.ComponentModel.Design.ITypeDiscoveryService> is used to discover available types at design time, when a client of the service does not know the names of existing types or referenced assemblies.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ITypeDiscoveryService&gt;</ph> is used to discover available types at design time, when a client of the service does not know the names of existing types or referenced assemblies.","pos":[0,210],"source":"The <xref:System.ComponentModel.Design.ITypeDiscoveryService> is used to discover available types at design time, when a client of the service does not know the names of existing types or referenced assemblies."}]}],"pos":[648,859],"yaml":true,"extradata":"MT"},{"content":"Retrieves the list of available types.","nodes":[{"pos":[0,38],"content":"Retrieves the list of available types.","nodes":[{"content":"Retrieves the list of available types.","pos":[0,38]}]}],"pos":[2307,2346],"yaml":true},{"content":"If `baseType` is `null`, all types are returned. Otherwise, only types derived from the specified base type are returned. If `excludeGlobalTypes` is `false`, types from all referenced assemblies are checked. Otherwise, only types from non-Global Assembly Cache (GAC) referenced assemblies are checked. For more information, see [Working with Assemblies and the Global Assembly Cache](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md).","nodes":[{"pos":[0,453],"content":"If `baseType` is `null`, all types are returned. Otherwise, only types derived from the specified base type are returned. If `excludeGlobalTypes` is `false`, types from all referenced assemblies are checked. Otherwise, only types from non-Global Assembly Cache (GAC) referenced assemblies are checked. For more information, see [Working with Assemblies and the Global Assembly Cache](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md).","nodes":[{"content":"If <ph id=\"ph1\">`baseType`</ph> is <ph id=\"ph2\">`null`</ph>, all types are returned.","pos":[0,48],"source":"If `baseType` is `null`, all types are returned."},{"content":"Otherwise, only types derived from the specified base type are returned.","pos":[49,121]},{"content":"If <ph id=\"ph1\">`excludeGlobalTypes`</ph> is <ph id=\"ph2\">`false`</ph>, types from all referenced assemblies are checked.","pos":[122,207],"source":" If `excludeGlobalTypes` is `false`, types from all referenced assemblies are checked."},{"content":"Otherwise, only types from non-Global Assembly Cache (GAC) referenced assemblies are checked.","pos":[208,301]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Working with Assemblies and the Global Assembly Cache<ept id=\"p1\">](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md)</ept>.","pos":[302,453],"source":" For more information, see [Working with Assemblies and the Global Assembly Cache](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md)."}]}],"pos":[2357,2811],"yaml":true,"extradata":"MT"},{"content":"The base type to match. Can be `null`.","nodes":[{"pos":[0,38],"content":"The base type to match. Can be `null`.","nodes":[{"content":"The base type to match.","pos":[0,23]},{"content":"Can be <ph id=\"ph1\">`null`</ph>.","pos":[24,38],"source":" Can be `null`."}]}],"pos":[3001,3040],"yaml":true},{"content":"Indicates whether types from all referenced assemblies should be checked.","nodes":[{"pos":[0,73],"content":"Indicates whether types from all referenced assemblies should be checked.","nodes":[{"content":"Indicates whether types from all referenced assemblies should be checked.","pos":[0,73]}]}],"pos":[3115,3189],"yaml":true},{"content":"A collection of types that match the criteria specified by <code>baseType</code> and <code>excludeGlobalTypes</code>.","nodes":[{"pos":[0,117],"content":"A collection of types that match the criteria specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseType</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">excludeGlobalTypes</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A collection of types that match the criteria specified by <code>baseType</code> and <code>excludeGlobalTypes</code>."}],"pos":[3263,3381],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.ITypeDiscoveryService\n  commentId: T:System.ComponentModel.Design.ITypeDiscoveryService\n  id: ITypeDiscoveryService\n  children:\n  - System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)\n  langs:\n  - csharp\n  name: ITypeDiscoveryService\n  nameWithType: ITypeDiscoveryService\n  fullName: System.ComponentModel.Design.ITypeDiscoveryService\n  type: Interface\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Discovers available types at design time.\n  remarks: The <xref:System.ComponentModel.Design.ITypeDiscoveryService> is used to discover available types at design time, when a client of the service does not know the names of existing types or referenced assemblies.\n  syntax:\n    content: public interface ITypeDiscoveryService\n  implements: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDiscoveryService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)\n  commentId: M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)\n  id: GetTypes(System.Type,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeDiscoveryService\n  langs:\n  - csharp\n  name: GetTypes(Type, Boolean)\n  nameWithType: ITypeDiscoveryService.GetTypes(Type, Boolean)\n  fullName: ITypeDiscoveryService.GetTypes(Type, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Retrieves the list of available types.\n  remarks: If `baseType` is `null`, all types are returned. Otherwise, only types derived from the specified base type are returned. If `excludeGlobalTypes` is `false`, types from all referenced assemblies are checked. Otherwise, only types from non-Global Assembly Cache (GAC) referenced assemblies are checked. For more information, see [Working with Assemblies and the Global Assembly Cache](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md).\n  syntax:\n    content: public System.Collections.ICollection GetTypes (Type baseType, bool excludeGlobalTypes);\n    parameters:\n    - id: baseType\n      type: System.Type\n      description: The base type to match. Can be `null`.\n    - id: excludeGlobalTypes\n      type: System.Boolean\n      description: Indicates whether types from all referenced assemblies should be checked.\n    return:\n      type: System.Collections.ICollection\n      description: A collection of types that match the criteria specified by <code>baseType</code> and <code>excludeGlobalTypes</code>.\n  overload: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDiscoveryService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)\n  parent: System.ComponentModel.Design.ITypeDiscoveryService\n  isExternal: false\n  name: GetTypes(Type, Boolean)\n  nameWithType: ITypeDiscoveryService.GetTypes(Type, Boolean)\n  fullName: ITypeDiscoveryService.GetTypes(Type, Boolean)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.ITypeDiscoveryService.GetTypes*\n  parent: System.ComponentModel.Design.ITypeDiscoveryService\n  isExternal: false\n  name: GetTypes\n  nameWithType: ITypeDiscoveryService.GetTypes\n  fullName: ITypeDiscoveryService.GetTypes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ITypeDiscoveryService.xml\n"}