{"nodes":[{"content":"Defines the behavior of outbound request and request/reply channels used by client applications.","nodes":[{"pos":[0,96],"content":"Defines the behavior of outbound request and request/reply channels used by client applications.","nodes":[{"content":"Defines the behavior of outbound request and request/reply channels used by client applications.","pos":[0,96]}]}],"pos":[870,967],"yaml":true},{"content":"The <xref:System.ServiceModel.IClientChannel> interface defines the operations supported by all channels returned by a call to <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName>. Use the <xref:System.ServiceModel.IClientChannel> methods and properties to inspect and modify the outbound typed channel. The [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) exports both a <xref:System.ServiceModel.ClientBase%601> class and a service contract interface by creating a contract interface that inherits from both the target service contract and <xref:System.ServiceModel.IClientChannel>, enabling you to use the extended contract as both the proxy to the service and to access the client channel.  \n  \n For more information, see [WCF Client Architecture](~/docs/framework/wcf/feature-details/client-architecture.md). For examples of its appearance in generated client code files, see [Understanding Generated Client Code](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md).","nodes":[{"pos":[0,802],"content":"The <xref:System.ServiceModel.IClientChannel> interface defines the operations supported by all channels returned by a call to <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName>. Use the <xref:System.ServiceModel.IClientChannel> methods and properties to inspect and modify the outbound typed channel. The [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) exports both a <xref:System.ServiceModel.ClientBase%601> class and a service contract interface by creating a contract interface that inherits from both the target service contract and <xref:System.ServiceModel.IClientChannel>, enabling you to use the extended contract as both the proxy to the service and to access the client channel.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> interface defines the operations supported by all channels returned by a call to <ph id=\"ph2\">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName&gt;</ph>.","pos":[0,215],"source":"The <xref:System.ServiceModel.IClientChannel> interface defines the operations supported by all channels returned by a call to <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName>."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> methods and properties to inspect and modify the outbound typed channel.","pos":[216,338],"source":" Use the <xref:System.ServiceModel.IClientChannel> methods and properties to inspect and modify the outbound typed channel."},{"content":"The <bpt id=\"p1\">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id=\"p1\">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> exports both a <ph id=\"ph1\">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class and a service contract interface by creating a contract interface that inherits from both the target service contract and <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph>, enabling you to use the extended contract as both the proxy to the service and to access the client channel.","pos":[339,802],"source":" The [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) exports both a <xref:System.ServiceModel.ClientBase%601> class and a service contract interface by creating a contract interface that inherits from both the target service contract and <xref:System.ServiceModel.IClientChannel>, enabling you to use the extended contract as both the proxy to the service and to access the client channel."}]},{"pos":[809,1105],"content":"For more information, see [WCF Client Architecture](~/docs/framework/wcf/feature-details/client-architecture.md). For examples of its appearance in generated client code files, see [Understanding Generated Client Code](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md).","nodes":[{"content":"For more information, see <bpt id=\"p1\">[</bpt>WCF Client Architecture<ept id=\"p1\">](~/docs/framework/wcf/feature-details/client-architecture.md)</ept>.","pos":[0,113],"source":"For more information, see [WCF Client Architecture](~/docs/framework/wcf/feature-details/client-architecture.md)."},{"content":"For examples of its appearance in generated client code files, see <bpt id=\"p1\">[</bpt>Understanding Generated Client Code<ept id=\"p1\">](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md)</ept>.","pos":[114,296],"source":" For examples of its appearance in generated client code files, see [Understanding Generated Client Code](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md)."}]}],"pos":[978,2088],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether <xref href=\"System.ServiceModel.IClientChannel.DisplayInitializationUI\"></xref> attempts to call the <xref href=\"System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\"></xref> objects in the <xref href=\"System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers\"></xref> property or throws if that collection is not empty.","nodes":[{"pos":[0,387],"content":"Gets or sets a value indicating whether <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.IClientChannel.DisplayInitializationUI\"&gt;&lt;/xref&gt;</ph> attempts to call the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\"&gt;&lt;/xref&gt;</ph> objects in the <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers\"&gt;&lt;/xref&gt;</ph> property or throws if that collection is not empty.","source":"Gets or sets a value indicating whether <xref href=\"System.ServiceModel.IClientChannel.DisplayInitializationUI\"></xref> attempts to call the <xref href=\"System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\"></xref> objects in the <xref href=\"System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers\"></xref> property or throws if that collection is not empty."}],"pos":[3611,3999],"yaml":true},{"content":"Set this to `false` if you want to throw an exception rather than display an initialization dialog. This is useful in a middle-tier scenario in which you want to guarantee that no dialog appears even if the application is configured to display one. For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>.","nodes":[{"pos":[0,479],"content":"Set this to `false` if you want to throw an exception rather than display an initialization dialog. This is useful in a middle-tier scenario in which you want to guarantee that no dialog appears even if the application is configured to display one. For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>.","nodes":[{"content":"Set this to <ph id=\"ph1\">`false`</ph> if you want to throw an exception rather than display an initialization dialog.","pos":[0,99],"source":"Set this to `false` if you want to throw an exception rather than display an initialization dialog."},{"content":"This is useful in a middle-tier scenario in which you want to guarantee that no dialog appears even if the application is configured to display one.","pos":[100,248]},{"content":"For details, see <bpt id=\"p1\">[</bpt>Accessing Services Using a WCF Client<ept id=\"p1\">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> and <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName&gt;</ph>.","pos":[249,479],"source":" For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>."}]}],"pos":[4010,4490],"yaml":true,"extradata":"MT"},{"content":"`true` if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] is permitted to invoke interactive channel initializers; otherwise, `false`.","nodes":[{"pos":[0,132],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> is permitted to invoke interactive channel initializers; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] is permitted to invoke interactive channel initializers; otherwise, `false`."}],"pos":[4619,4754],"yaml":true},{"content":"An asynchronous call to begin using a user interface to obtain credential information.","nodes":[{"pos":[0,86],"content":"An asynchronous call to begin using a user interface to obtain credential information.","nodes":[{"content":"An asynchronous call to begin using a user interface to obtain credential information.","pos":[0,86]}]}],"pos":[6172,6259],"yaml":true},{"content":"Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur. This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional.  \n  \n However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly. These operations do not time out and allow you to control exactly where in your application this dialog comes up.  \n  \n This method only brings up a dialog if the application is configured to do so. When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.  \n  \n If you call this method explicitly, you must also explicitly open the channel before using it.","nodes":[{"pos":[0,321],"content":"Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur. This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional.","nodes":[{"content":"Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur. This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional.","pos":[0,321],"nodes":[{"content":"Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur.","pos":[0,114]},{"content":"This happens automatically if the channel is used without explicitly calling <ph id=\"ph1\">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName&gt;</ph>, so for many applications this call is optional.","pos":[115,321],"source":" This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional."}]}]},{"pos":[328,821],"content":"However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly. These operations do not time out and allow you to control exactly where in your application this dialog comes up.","nodes":[{"content":"However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly. These operations do not time out and allow you to control exactly where in your application this dialog comes up.","pos":[0,493],"nodes":[{"content":"However, if the user takes a long time in the selection process, the operation that automatically called this may time out.","pos":[0,123]},{"content":"To prevent this, call <ph id=\"ph1\">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A&gt;</ph> explicitly.","pos":[124,379],"source":" To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly."},{"content":"These operations do not time out and allow you to control exactly where in your application this dialog comes up.","pos":[380,493]}]}]},{"pos":[828,1044],"content":"This method only brings up a dialog if the application is configured to do so. When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.","nodes":[{"content":"This method only brings up a dialog if the application is configured to do so. When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.","pos":[0,216],"nodes":[{"content":"This method only brings up a dialog if the application is configured to do so.","pos":[0,78]},{"content":"When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.","pos":[79,216]}]}]},{"pos":[1051,1145],"content":"If you call this method explicitly, you must also explicitly open the channel before using it.","nodes":[{"content":"If you call this method explicitly, you must also explicitly open the channel before using it.","pos":[0,94]}]}],"pos":[6270,7424],"yaml":true,"extradata":"MT"},{"content":"The method that is called when this method completes.","nodes":[{"pos":[0,53],"content":"The method that is called when this method completes.","nodes":[{"content":"The method that is called when this method completes.","pos":[0,53]}]}],"pos":[7623,7677],"yaml":true},{"content":"Information about the state of the channel.","nodes":[{"pos":[0,43],"content":"Information about the state of the channel.","nodes":[{"content":"Information about the state of the channel.","pos":[0,43]}]}],"pos":[7738,7782],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> to use to call back when processing has completed.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> to use to call back when processing has completed.","source":"The <xref href=\"System.IAsyncResult\"></xref> to use to call back when processing has completed."}],"pos":[7845,7941],"yaml":true},{"content":"Gets a value indicating whether a call was done to a user interface to obtain credential information.","nodes":[{"pos":[0,101],"content":"Gets a value indicating whether a call was done to a user interface to obtain credential information.","nodes":[{"content":"Gets a value indicating whether a call was done to a user interface to obtain credential information.","pos":[0,101]}]}],"pos":[9191,9293],"yaml":true},{"content":"If operations are called on an <xref:System.ServiceModel.IClientChannel> without calling <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> and <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, these methods are called automatically. For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>.","nodes":[{"pos":[0,514],"content":"If operations are called on an <xref:System.ServiceModel.IClientChannel> without calling <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> and <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, these methods are called automatically. For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>.","nodes":[{"content":"If operations are called on an <ph id=\"ph1\">&lt;xref:System.ServiceModel.IClientChannel&gt;</ph> without calling <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName&gt;</ph>, these methods are called automatically.","pos":[0,283],"source":"If operations are called on an <xref:System.ServiceModel.IClientChannel> without calling <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> and <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, these methods are called automatically."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Accessing Services Using a WCF Client<ept id=\"p1\">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> and <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName&gt;</ph>.","pos":[284,514],"source":" For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>."}]}],"pos":[9304,9819],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.ServiceModel.IClientChannel.DisplayInitializationUI\"></xref> method was called (or the <xref href=\"System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\"></xref> and <xref href=\"System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)\"></xref> methods; otherwise, `false`.","nodes":[{"pos":[0,377],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.IClientChannel.DisplayInitializationUI\"&gt;&lt;/xref&gt;</ph> method was called (or the <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;xref href=\"System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> methods; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.IClientChannel.DisplayInitializationUI\"></xref> method was called (or the <xref href=\"System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\"></xref> and <xref href=\"System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)\"></xref> methods; otherwise, `false`."}],"pos":[9950,10330],"yaml":true},{"content":"A call to a user interface to obtain credential information.","nodes":[{"pos":[0,60],"content":"A call to a user interface to obtain credential information.","nodes":[{"content":"A call to a user interface to obtain credential information.","pos":[0,60]}]}],"pos":[11554,11615],"yaml":true},{"content":"Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur. This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional.  \n  \n However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly. These operations do not time out and allow you to control exactly where in your application this dialog comes up.  \n  \n This method only brings up a dialog if the application is configured to do so. When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.  \n  \n If you call this method explicitly, you must also explicitly open the channel before using it.  \n  \n For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>.","nodes":[{"pos":[0,321],"content":"Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur. This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional.","nodes":[{"content":"Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur. This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional.","pos":[0,321],"nodes":[{"content":"Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur.","pos":[0,114]},{"content":"This happens automatically if the channel is used without explicitly calling <ph id=\"ph1\">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName&gt;</ph>, so for many applications this call is optional.","pos":[115,321],"source":" This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional."}]}]},{"pos":[328,821],"content":"However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly. These operations do not time out and allow you to control exactly where in your application this dialog comes up.","nodes":[{"content":"However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly. These operations do not time out and allow you to control exactly where in your application this dialog comes up.","pos":[0,493],"nodes":[{"content":"However, if the user takes a long time in the selection process, the operation that automatically called this may time out.","pos":[0,123]},{"content":"To prevent this, call <ph id=\"ph1\">&lt;xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A&gt;</ph> explicitly.","pos":[124,379],"source":" To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly."},{"content":"These operations do not time out and allow you to control exactly where in your application this dialog comes up.","pos":[380,493]}]}]},{"pos":[828,1044],"content":"This method only brings up a dialog if the application is configured to do so. When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.","nodes":[{"content":"This method only brings up a dialog if the application is configured to do so. When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.","pos":[0,216],"nodes":[{"content":"This method only brings up a dialog if the application is configured to do so.","pos":[0,78]},{"content":"When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.","pos":[79,216]}]}]},{"pos":[1051,1145],"content":"If you call this method explicitly, you must also explicitly open the channel before using it.","nodes":[{"content":"If you call this method explicitly, you must also explicitly open the channel before using it.","pos":[0,94]}]},{"pos":[1152,1382],"content":"For details, see <bpt id=\"p1\">[</bpt>Accessing Services Using a WCF Client<ept id=\"p1\">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept> and <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName&gt;</ph>.","source":"For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>."}],"pos":[11626,13019],"yaml":true,"extradata":"MT"},{"content":"Called when the call to <xref href=\"System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\"></xref> has finished.","nodes":[{"pos":[0,158],"content":"Called when the call to <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> has finished.","source":"Called when the call to <xref href=\"System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\"></xref> has finished."}],"pos":[14437,14596],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref>.","nodes":[{"pos":[0,45],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IAsyncResult\"></xref>."}],"pos":[14765,14811],"yaml":true},{"content":"This is a reserved event.","nodes":[{"pos":[0,25],"content":"This is a reserved event.","nodes":[{"content":"This is a reserved event.","pos":[0,25]}]}],"pos":[16020,16046],"yaml":true},{"content":"Gets the URI that contains the transport address to which messages are sent on the client channel.","nodes":[{"pos":[0,98],"content":"Gets the URI that contains the transport address to which messages are sent on the client channel.","nodes":[{"content":"Gets the URI that contains the transport address to which messages are sent on the client channel.","pos":[0,98]}]}],"pos":[17314,17413],"yaml":true},{"content":"The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.IClientChannel.Via%2A> is not specified. If the <xref:System.ServiceModel.IClientChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination. This value can be set from a configuration file using the <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=fullName>.","nodes":[{"pos":[0,532],"content":"The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.IClientChannel.Via%2A> is not specified. If the <xref:System.ServiceModel.IClientChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination. This value can be set from a configuration file using the <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=fullName>.","nodes":[{"content":"The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.IClientChannel.Via%2A> is not specified. If the <xref:System.ServiceModel.IClientChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination. This value can be set from a configuration file using the <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=fullName>.","pos":[0,532],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> serves as both the ultimate destination and the physical address if a <ph id=\"ph2\">&lt;xref:System.ServiceModel.IClientChannel.Via%2A&gt;</ph> is not specified.","pos":[0,183],"source":"The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.IClientChannel.Via%2A> is not specified."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.ServiceModel.IClientChannel.Via%2A&gt;</ph> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.","pos":[184,391],"source":" If the <xref:System.ServiceModel.IClientChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination."},{"content":"This value can be set from a configuration file using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=fullName&gt;</ph>.","pos":[392,532],"source":" This value can be set from a configuration file using the <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=fullName>."}]}]}],"pos":[17424,17957],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which messages are sent on the channel.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the transport address to which messages are sent on the channel.","source":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which messages are sent on the channel."}],"pos":[18058,18173],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.IClientChannel\n  commentId: T:System.ServiceModel.IClientChannel\n  id: IClientChannel\n  children:\n  - System.ServiceModel.IClientChannel.AllowInitializationUI\n  - System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\n  - System.ServiceModel.IClientChannel.DidInteractiveInitialization\n  - System.ServiceModel.IClientChannel.DisplayInitializationUI\n  - System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)\n  - System.ServiceModel.IClientChannel.UnknownMessageReceived\n  - System.ServiceModel.IClientChannel.Via\n  langs:\n  - csharp\n  name: IClientChannel\n  nameWithType: IClientChannel\n  fullName: System.ServiceModel.IClientChannel\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Defines the behavior of outbound request and request/reply channels used by client applications.\n  remarks: \"The <xref:System.ServiceModel.IClientChannel> interface defines the operations supported by all channels returned by a call to <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName>. Use the <xref:System.ServiceModel.IClientChannel> methods and properties to inspect and modify the outbound typed channel. The [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) exports both a <xref:System.ServiceModel.ClientBase%601> class and a service contract interface by creating a contract interface that inherits from both the target service contract and <xref:System.ServiceModel.IClientChannel>, enabling you to use the extended contract as both the proxy to the service and to access the client channel.  \\n  \\n For more information, see [WCF Client Architecture](~/docs/framework/wcf/feature-details/client-architecture.md). For examples of its appearance in generated client code files, see [Understanding Generated Client Code](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md).\"\n  syntax:\n    content: 'public interface IClientChannel : IDisposable, System.ServiceModel.IContextChannel, System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>'\n  derivedClasses:\n  - System.ServiceModel.ClientBase`1.ChannelBase`1\n  implements:\n  - System.IDisposable\n  - System.ServiceModel.IContextChannel\n  - System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.IClientChannel.AllowInitializationUI\n  commentId: P:System.ServiceModel.IClientChannel.AllowInitializationUI\n  id: AllowInitializationUI\n  parent: System.ServiceModel.IClientChannel\n  langs:\n  - csharp\n  name: AllowInitializationUI\n  nameWithType: IClientChannel.AllowInitializationUI\n  fullName: IClientChannel.AllowInitializationUI\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets a value indicating whether <xref href=\"System.ServiceModel.IClientChannel.DisplayInitializationUI\"></xref> attempts to call the <xref href=\"System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\"></xref> objects in the <xref href=\"System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers\"></xref> property or throws if that collection is not empty.\n  remarks: Set this to `false` if you want to throw an exception rather than display an initialization dialog. This is useful in a middle-tier scenario in which you want to guarantee that no dialog appears even if the application is configured to display one. For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>.\n  syntax:\n    content: public bool AllowInitializationUI { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] is permitted to invoke interactive channel initializers; otherwise, `false`.'\n  overload: System.ServiceModel.IClientChannel.AllowInitializationUI*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\n  id: BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.IClientChannel\n  langs:\n  - csharp\n  name: BeginDisplayInitializationUI(AsyncCallback, Object)\n  nameWithType: IClientChannel.BeginDisplayInitializationUI(AsyncCallback, Object)\n  fullName: IClientChannel.BeginDisplayInitializationUI(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: An asynchronous call to begin using a user interface to obtain credential information.\n  remarks: \"Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur. This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional.  \\n  \\n However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly. These operations do not time out and allow you to control exactly where in your application this dialog comes up.  \\n  \\n This method only brings up a dialog if the application is configured to do so. When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.  \\n  \\n If you call this method explicitly, you must also explicitly open the channel before using it.\"\n  syntax:\n    content: public IAsyncResult BeginDisplayInitializationUI (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: The method that is called when this method completes.\n    - id: state\n      type: System.Object\n      description: Information about the state of the channel.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> to use to call back when processing has completed.\n  overload: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.IClientChannel.DidInteractiveInitialization\n  commentId: P:System.ServiceModel.IClientChannel.DidInteractiveInitialization\n  id: DidInteractiveInitialization\n  parent: System.ServiceModel.IClientChannel\n  langs:\n  - csharp\n  name: DidInteractiveInitialization\n  nameWithType: IClientChannel.DidInteractiveInitialization\n  fullName: IClientChannel.DidInteractiveInitialization\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value indicating whether a call was done to a user interface to obtain credential information.\n  remarks: If operations are called on an <xref:System.ServiceModel.IClientChannel> without calling <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> and <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, these methods are called automatically. For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>.\n  syntax:\n    content: public bool DidInteractiveInitialization { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.IClientChannel.DisplayInitializationUI\"></xref> method was called (or the <xref href=\"System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\"></xref> and <xref href=\"System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)\"></xref> methods; otherwise, `false`.'\n  overload: System.ServiceModel.IClientChannel.DidInteractiveInitialization*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.IClientChannel.DisplayInitializationUI\n  commentId: M:System.ServiceModel.IClientChannel.DisplayInitializationUI\n  id: DisplayInitializationUI\n  parent: System.ServiceModel.IClientChannel\n  langs:\n  - csharp\n  name: DisplayInitializationUI()\n  nameWithType: IClientChannel.DisplayInitializationUI()\n  fullName: IClientChannel.DisplayInitializationUI()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: A call to a user interface to obtain credential information.\n  remarks: \"Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur. This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional.  \\n  \\n However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly. These operations do not time out and allow you to control exactly where in your application this dialog comes up.  \\n  \\n This method only brings up a dialog if the application is configured to do so. When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.  \\n  \\n If you call this method explicitly, you must also explicitly open the channel before using it.  \\n  \\n For details, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>.\"\n  syntax:\n    content: public void DisplayInitializationUI ();\n    parameters: []\n  overload: System.ServiceModel.IClientChannel.DisplayInitializationUI*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)\n  commentId: M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)\n  id: EndDisplayInitializationUI(System.IAsyncResult)\n  parent: System.ServiceModel.IClientChannel\n  langs:\n  - csharp\n  name: EndDisplayInitializationUI(IAsyncResult)\n  nameWithType: IClientChannel.EndDisplayInitializationUI(IAsyncResult)\n  fullName: IClientChannel.EndDisplayInitializationUI(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Called when the call to <xref href=\"System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\"></xref> has finished.\n  syntax:\n    content: public void EndDisplayInitializationUI (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref>.\n  overload: System.ServiceModel.IClientChannel.EndDisplayInitializationUI*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.IClientChannel.UnknownMessageReceived\n  commentId: E:System.ServiceModel.IClientChannel.UnknownMessageReceived\n  id: UnknownMessageReceived\n  parent: System.ServiceModel.IClientChannel\n  langs:\n  - csharp\n  name: UnknownMessageReceived\n  nameWithType: IClientChannel.UnknownMessageReceived\n  fullName: IClientChannel.UnknownMessageReceived\n  type: Event\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: This is a reserved event.\n  syntax:\n    content: public event EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs> UnknownMessageReceived;\n    return:\n      type: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.IClientChannel.Via\n  commentId: P:System.ServiceModel.IClientChannel.Via\n  id: Via\n  parent: System.ServiceModel.IClientChannel\n  langs:\n  - csharp\n  name: Via\n  nameWithType: IClientChannel.Via\n  fullName: IClientChannel.Via\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the URI that contains the transport address to which messages are sent on the client channel.\n  remarks: The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.IClientChannel.Via%2A> is not specified. If the <xref:System.ServiceModel.IClientChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination. This value can be set from a configuration file using the <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=fullName>.\n  syntax:\n    content: public Uri Via { get; }\n    return:\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the transport address to which messages are sent on the channel.\n  overload: System.ServiceModel.IClientChannel.Via*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.IClientChannel.AllowInitializationUI\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: AllowInitializationUI\n  nameWithType: IClientChannel.AllowInitializationUI\n  fullName: IClientChannel.AllowInitializationUI\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: BeginDisplayInitializationUI(AsyncCallback, Object)\n  nameWithType: IClientChannel.BeginDisplayInitializationUI(AsyncCallback, Object)\n  fullName: IClientChannel.BeginDisplayInitializationUI(AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.IClientChannel.DidInteractiveInitialization\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: DidInteractiveInitialization\n  nameWithType: IClientChannel.DidInteractiveInitialization\n  fullName: IClientChannel.DidInteractiveInitialization\n- uid: System.ServiceModel.IClientChannel.DisplayInitializationUI\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: DisplayInitializationUI()\n  nameWithType: IClientChannel.DisplayInitializationUI()\n  fullName: IClientChannel.DisplayInitializationUI()\n- uid: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: EndDisplayInitializationUI(IAsyncResult)\n  nameWithType: IClientChannel.EndDisplayInitializationUI(IAsyncResult)\n  fullName: IClientChannel.EndDisplayInitializationUI(IAsyncResult)\n- uid: System.ServiceModel.IClientChannel.UnknownMessageReceived\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: UnknownMessageReceived\n  nameWithType: IClientChannel.UnknownMessageReceived\n  fullName: IClientChannel.UnknownMessageReceived\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.ServiceModel.UnknownMessageReceivedEventArgs\n  name: UnknownMessageReceivedEventArgs\n  nameWithType: UnknownMessageReceivedEventArgs\n  fullName: System.ServiceModel.UnknownMessageReceivedEventArgs\n- uid: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<UnknownMessageReceivedEventArgs>\n  nameWithType: EventHandler<UnknownMessageReceivedEventArgs>\n  fullName: System.EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.UnknownMessageReceivedEventArgs\n    name: UnknownMessageReceivedEventArgs\n    nameWithType: UnknownMessageReceivedEventArgs\n    fullName: System.ServiceModel.UnknownMessageReceivedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.IClientChannel.Via\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: Via\n  nameWithType: IClientChannel.Via\n  fullName: IClientChannel.Via\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.IClientChannel.AllowInitializationUI*\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: AllowInitializationUI\n  nameWithType: IClientChannel.AllowInitializationUI\n  fullName: IClientChannel.AllowInitializationUI\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n- uid: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI*\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: BeginDisplayInitializationUI\n  nameWithType: IClientChannel.BeginDisplayInitializationUI\n  fullName: IClientChannel.BeginDisplayInitializationUI\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n- uid: System.ServiceModel.IClientChannel.DidInteractiveInitialization*\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: DidInteractiveInitialization\n  nameWithType: IClientChannel.DidInteractiveInitialization\n  fullName: IClientChannel.DidInteractiveInitialization\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n- uid: System.ServiceModel.IClientChannel.DisplayInitializationUI*\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: DisplayInitializationUI\n  nameWithType: IClientChannel.DisplayInitializationUI\n  fullName: IClientChannel.DisplayInitializationUI\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n- uid: System.ServiceModel.IClientChannel.EndDisplayInitializationUI*\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: EndDisplayInitializationUI\n  nameWithType: IClientChannel.EndDisplayInitializationUI\n  fullName: IClientChannel.EndDisplayInitializationUI\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n- uid: System.ServiceModel.IClientChannel.Via*\n  parent: System.ServiceModel.IClientChannel\n  isExternal: false\n  name: Via\n  nameWithType: IClientChannel.Via\n  fullName: IClientChannel.Via\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/IClientChannel.xml\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.ServiceModel.IContextChannel\n  parent: System.ServiceModel\n  isExternal: false\n  name: IContextChannel\n  nameWithType: IContextChannel\n  fullName: System.ServiceModel.IContextChannel\n- uid: System.ServiceModel.IExtensibleObject`1\n  name: IExtensibleObject<T>\n  nameWithType: IExtensibleObject<T>\n  fullName: System.ServiceModel.IExtensibleObject<T>\n- uid: System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}\n  parent: System.ServiceModel\n  isExternal: false\n  name: IExtensibleObject<IContextChannel>\n  nameWithType: IExtensibleObject<IContextChannel>\n  fullName: System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>\n  spec.csharp:\n  - uid: System.ServiceModel.IExtensibleObject`1\n    name: IExtensibleObject\n    nameWithType: IExtensibleObject\n    fullName: System.ServiceModel.IExtensibleObject\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.IContextChannel\n    name: IContextChannel\n    nameWithType: IContextChannel\n    fullName: System.ServiceModel.IContextChannel\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}