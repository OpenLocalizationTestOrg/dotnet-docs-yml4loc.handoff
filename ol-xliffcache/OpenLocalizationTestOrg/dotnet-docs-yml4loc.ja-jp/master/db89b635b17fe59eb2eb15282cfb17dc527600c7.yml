### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  commentId: T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  id: LinqDataSourceStatusEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs
  nameWithType: LinqDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  type: Class
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Provides data for the <xref href="System.Web.UI.WebControls.LinqDataSource.ContextCreated"></xref>, <xref href="System.Web.UI.WebControls.LinqDataSource.Deleted"></xref>, <xref href="System.Web.UI.WebControls.LinqDataSource.Inserted"></xref>, <xref href="System.Web.UI.WebControls.LinqDataSource.Selected"></xref>, and <xref href="System.Web.UI.WebControls.LinqDataSource.Updated"></xref> events.
  remarks: "The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> class enables you to examine the results of data operations that have been performed by a <xref:System.Web.UI.WebControls.LinqDataSource> control. A <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object is passed to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, and <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events of the <xref:System.Web.UI.WebControls.LinqDataSource> control.  \n  \n If the data operation completed successfully, the resulting data object is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`. If the data operation failed, the exception that occurred during the data operation is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property is `null`. If you handled the exception represented by the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property, set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property to `true` so that the exception will not be thrown.  \n  \n You retrieve the total number of data records returned from a query through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]"
  syntax:
    content: 'public class LinqDataSourceStatusEventArgs : EventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  commentId: M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Exception)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  fullName: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs"></xref> class by using an exception that occurred as a result of the data operation.
  remarks: This constructor is used when an exception is thrown during the data operation. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property is automatically set to `null`.
  syntax:
    content: public LinqDataSourceStatusEventArgs (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: The error that occurred during the data operation.
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  commentId: M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Object)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  fullName: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs"></xref> class by using an object that contains the data from the data operation.
  remarks: This constructor is used when the data operation has finished without an error. The `result` parameter contains an object that represents the result of the data operation. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is automatically set to `null`.
  syntax:
    content: public LinqDataSourceStatusEventArgs (object result);
    parameters:
    - id: result
      type: System.Object
      description: An object that contains the data that results from a data operation.
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  commentId: M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  id: '#ctor(System.Object,System.Int32)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Object, Int32)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object, Int32)
  fullName: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object, Int32)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs"></xref> class with an object that contains the data from the data operation and the number of rows returned.
  syntax:
    content: public LinqDataSourceStatusEventArgs (object result, int totalRowCount);
    parameters:
    - id: result
      type: System.Object
      description: An object that contains the data that results from a data operation.
    - id: totalRowCount
      type: System.Int32
      description: The number of rows that were returned from a data retrieval operation.
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  commentId: P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
  fullName: LinqDataSourceStatusEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Gets the exception that was thrown during the data operation.
  remarks: If an exception is raised during the data operation, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property. You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, and <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events and retrieve the exception, if any, through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, so the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: An <xref href="System.Exception"></xref> object that represents the exception, if an error occurred; otherwise, `null`.
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  commentId: P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
  fullName: LinqDataSourceStatusEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.
  remarks: You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, and <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events to examine any exceptions that occurred during those operations. If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property to `true`. If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the exception was handled; otherwise, `false`.'
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  commentId: P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  id: Result
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
  fullName: LinqDataSourceStatusEventArgs.Result
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Gets the object that represents the result of a data operation.
  remarks: "You use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to examine values returned from a data operation. You can retrieve output parameters from a data operation or modify the values returned from a query.  \n  \n The data stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property depends on the type of data operation that has been performed. When you delete data, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property, with the original values that were deleted from the data source. When you insert or update data, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property, with the new values that were saved to the data source. When you select data, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains the results of the query.  \n  \n If the select query involves grouping the data or selecting a subset of properties from the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of a dynamically created type. Otherwise, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]"
  syntax:
    content: public object Result { get; }
    return:
      type: System.Object
      description: An object that contains the data from the data operation.
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  commentId: P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  id: TotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
  fullName: LinqDataSourceStatusEventArgs.TotalRowCount
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Gets the total number of rows in a data set from a data-retrieval operation.
  remarks: "You use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property to get the number of records in the data set during a data retrieval operation. Typically, you retrieve this property when you are displaying pages of data and want to show the total number of records.  \n  \n When data is being paged, the value in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property might be different from the actual number of rows that are returned by the query. This is because the query returns only the number of rows that are needed for that page of data.  \n  \n The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property contains the number of records from a query only when it is accessed in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event. When the property is accessed from an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property contains -1.  \n  \n The value of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property depends on the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control, and on the `AllowPaging` property of the data-bound control. The following table summarizes the possible values for the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property.  \n  \n|AutoPage Property of LinqDataSource control|AllowPaging Property of data-bound control|TotalRowCount property|Outcome|  \n|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  \n|`true`|`true`|Number of records for a query.|Data is automatically paged.|  \n|`false`|`false`|Number of records for a query.|Data is not paged.|  \n|`true`|`false`|-1|Data is not paged.|  \n|`false`|`true`|The value that you assigned to the <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> property in the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.|Data is paged according to the values that you specified when you customized paging.|"
  example:
  - "The following example shows a Web page with a <xref:System.Web.UI.WebControls.LinqDataSource> control, a <xref:System.Web.UI.WebControls.GridView> control, and a <xref:System.Web.UI.WebControls.Literal> control. The <xref:System.Web.UI.WebControls.LinqDataSource> control defines an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  -->  \n  \n The following example shows the code for the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event. The value of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property is assigned to the <xref:System.Web.UI.WebControls.Literal> control.  \n  \n [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]"
  syntax:
    content: public int TotalRowCount { get; }
    return:
      type: System.Int32
      description: The total number of rows in a data set from the data retrieval operation; -1 if the <xref href="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs"></xref> object was created during a data modification operation; -1 if you enabled customized paging by setting <xref href="System.Web.UI.WebControls.LinqDataSource.AutoPage"></xref> to `true` and by setting <xref href="System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount"></xref> to `false`.
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Exception)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  fullName: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Object)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  fullName: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Object, Int32)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object, Int32)
  fullName: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
  fullName: LinqDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
  fullName: LinqDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
  fullName: LinqDataSourceStatusEventArgs.Result
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
  fullName: LinqDataSourceStatusEventArgs.TotalRowCount
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs
  fullName: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
  fullName: LinqDataSourceStatusEventArgs.Exception
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
  fullName: LinqDataSourceStatusEventArgs.ExceptionHandled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
  fullName: LinqDataSourceStatusEventArgs.Result
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
  fullName: LinqDataSourceStatusEventArgs.TotalRowCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceStatusEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
