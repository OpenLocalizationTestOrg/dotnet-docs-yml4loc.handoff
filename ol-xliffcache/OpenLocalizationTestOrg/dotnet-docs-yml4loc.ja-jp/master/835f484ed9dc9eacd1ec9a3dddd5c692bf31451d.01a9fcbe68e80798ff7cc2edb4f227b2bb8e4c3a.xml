{"nodes":[{"content":"Used to access the Event Log service on the local computer or a remote computer so you can manage and gather information about the event logs and event providers on the computer.","nodes":[{"pos":[0,178],"content":"Used to access the Event Log service on the local computer or a remote computer so you can manage and gather information about the event logs and event providers on the computer.","nodes":[{"content":"Used to access the Event Log service on the local computer or a remote computer so you can manage and gather information about the event logs and event providers on the computer.","pos":[0,178]}]}],"pos":[2189,2368],"yaml":true},{"content":"Initializes a new <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object, establishes a connection with the local Event Log service.","nodes":[{"pos":[0,156],"content":"Initializes a new <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"&gt;&lt;/xref&gt;</ph> object, establishes a connection with the local Event Log service.","source":"Initializes a new <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object, establishes a connection with the local Event Log service."}],"pos":[4211,4368],"yaml":true},{"content":"Initializes a new <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object, and establishes a connection with the Event Log service on the specified computer. The credentials (user name and password) of the user who calls the method is used for the credentials to access the remote computer.","nodes":[{"pos":[0,313],"content":"Initializes a new <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object, and establishes a connection with the Event Log service on the specified computer. The credentials (user name and password) of the user who calls the method is used for the credentials to access the remote computer.","nodes":[{"content":"Initializes a new <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"&gt;&lt;/xref&gt;</ph> object, and establishes a connection with the Event Log service on the specified computer.","pos":[0,180],"source":"Initializes a new <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object, and establishes a connection with the Event Log service on the specified computer."},{"content":"The credentials (user name and password) of the user who calls the method is used for the credentials to access the remote computer.","pos":[181,313]}]}],"pos":[5697,6011],"yaml":true},{"content":"The name of the computer on which to connect to the Event Log service.","nodes":[{"pos":[0,70],"content":"The name of the computer on which to connect to the Event Log service.","nodes":[{"content":"The name of the computer on which to connect to the Event Log service.","pos":[0,70]}]}],"pos":[6152,6223],"yaml":true},{"content":"Initializes a new <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object, and establishes a connection with the Event Log service on the specified computer. The specified credentials (user name and password) are used for the credentials to access the remote computer.","nodes":[{"pos":[0,291],"content":"Initializes a new <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object, and establishes a connection with the Event Log service on the specified computer. The specified credentials (user name and password) are used for the credentials to access the remote computer.","nodes":[{"content":"Initializes a new <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"&gt;&lt;/xref&gt;</ph> object, and establishes a connection with the Event Log service on the specified computer.","pos":[0,180],"source":"Initializes a new <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object, and establishes a connection with the Event Log service on the specified computer."},{"content":"The specified credentials (user name and password) are used for the credentials to access the remote computer.","pos":[181,291]}]}],"pos":[7867,8159],"yaml":true},{"content":"The name of the computer on which to connect to the Event Log service.","nodes":[{"pos":[0,70],"content":"The name of the computer on which to connect to the Event Log service.","nodes":[{"content":"The name of the computer on which to connect to the Event Log service.","pos":[0,70]}]}],"pos":[8486,8557],"yaml":true},{"content":"The domain of the specified user.","nodes":[{"pos":[0,33],"content":"The domain of the specified user.","nodes":[{"content":"The domain of the specified user.","pos":[0,33]}]}],"pos":[8619,8653],"yaml":true},{"content":"The user name used to connect to the remote computer.","nodes":[{"pos":[0,53],"content":"The user name used to connect to the remote computer.","nodes":[{"content":"The user name used to connect to the remote computer.","pos":[0,53]}]}],"pos":[8713,8767],"yaml":true},{"content":"The password used to connect to the remote computer.","nodes":[{"pos":[0,52],"content":"The password used to connect to the remote computer.","nodes":[{"content":"The password used to connect to the remote computer.","pos":[0,52]}]}],"pos":[8846,8899],"yaml":true},{"content":"The type of connection to use for the connection to the remote computer.","nodes":[{"pos":[0,72],"content":"The type of connection to use for the connection to the remote computer.","nodes":[{"content":"The type of connection to use for the connection to the remote computer.","pos":[0,72]}]}],"pos":[9007,9080],"yaml":true},{"content":"Cancels any operations (such as reading an event log or subscribing to an event log) that are currently active for the Event Log service that this session object is connected to.","nodes":[{"pos":[0,178],"content":"Cancels any operations (such as reading an event log or subscribing to an event log) that are currently active for the Event Log service that this session object is connected to.","nodes":[{"content":"Cancels any operations (such as reading an event log or subscribing to an event log) that are currently active for the Event Log service that this session object is connected to.","pos":[0,178]}]}],"pos":[10297,10476],"yaml":true},{"content":"Clears events from the specified event log.","nodes":[{"pos":[0,43],"content":"Clears events from the specified event log.","nodes":[{"content":"Clears events from the specified event log.","pos":[0,43]}]}],"pos":[11700,11744],"yaml":true},{"content":"The name of the event log to clear all the events from.","nodes":[{"pos":[0,55],"content":"The name of the event log to clear all the events from.","nodes":[{"content":"The name of the event log to clear all the events from.","pos":[0,55]}]}],"pos":[12074,12130],"yaml":true},{"content":"Clears events from the specified event log, and saves the cleared events to the specified file.","nodes":[{"pos":[0,95],"content":"Clears events from the specified event log, and saves the cleared events to the specified file.","nodes":[{"content":"Clears events from the specified event log, and saves the cleared events to the specified file.","pos":[0,95]}]}],"pos":[13323,13419],"yaml":true},{"content":"The name of the event log to clear all the events from.","nodes":[{"pos":[0,55],"content":"The name of the event log to clear all the events from.","nodes":[{"content":"The name of the event log to clear all the events from.","pos":[0,55]}]}],"pos":[13768,13824],"yaml":true},{"content":"The path to the file in which the cleared events will be saved. The file should end in .evtx.","nodes":[{"pos":[0,93],"content":"The path to the file in which the cleared events will be saved. The file should end in .evtx.","nodes":[{"content":"The path to the file in which the cleared events will be saved. The file should end in .evtx.","pos":[0,93],"nodes":[{"content":"The path to the file in which the cleared events will be saved.","pos":[0,63]},{"content":"The file should end in .evtx.","pos":[64,93]}]}]}],"pos":[13890,13984],"yaml":true},{"content":"Releases all the resources used by this object.","nodes":[{"pos":[0,47],"content":"Releases all the resources used by this object.","nodes":[{"content":"Releases all the resources used by this object.","pos":[0,47]}]}],"pos":[15042,15090],"yaml":true},{"content":"Releases the unmanaged resources used by this object, and optionally releases the managed resources.","nodes":[{"pos":[0,100],"content":"Releases the unmanaged resources used by this object, and optionally releases the managed resources.","nodes":[{"content":"Releases the unmanaged resources used by this object, and optionally releases the managed resources.","pos":[0,100]}]}],"pos":[16282,16383],"yaml":true},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[16537,16640],"yaml":true},{"content":"Exports events into an external log file. The events are stored without the event messages.","nodes":[{"pos":[0,91],"content":"Exports events into an external log file. The events are stored without the event messages.","nodes":[{"content":"Exports events into an external log file. The events are stored without the event messages.","pos":[0,91],"nodes":[{"content":"Exports events into an external log file.","pos":[0,41]},{"content":"The events are stored without the event messages.","pos":[42,91]}]}]}],"pos":[18083,18175],"yaml":true},{"content":"The name of the event log to export events from, or the path to the event log file to export events from.","nodes":[{"pos":[0,105],"content":"The name of the event log to export events from, or the path to the event log file to export events from.","nodes":[{"content":"The name of the event log to export events from, or the path to the event log file to export events from.","pos":[0,105]}]}],"pos":[18402,18508],"yaml":true},{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"pos":[0,125],"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","pos":[0,125]}]}],"pos":[18602,18728],"yaml":true},{"content":"The query used to select the events to export.  Only the events returned from the query will be exported.","nodes":[{"pos":[0,105],"content":"The query used to select the events to export.  Only the events returned from the query will be exported.","nodes":[{"content":"The query used to select the events to export.  Only the events returned from the query will be exported.","pos":[0,105],"nodes":[{"content":"The query used to select the events to export.","pos":[0,46]},{"content":"Only the events returned from the query will be exported.","pos":[48,105]}]}]}],"pos":[18789,18895],"yaml":true},{"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","nodes":[{"pos":[0,115],"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","nodes":[{"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","pos":[0,115]}]}],"pos":[18965,19081],"yaml":true},{"content":"Exports events into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The events are stored without the event messages.","nodes":[{"pos":[0,217],"content":"Exports events into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The events are stored without the event messages.","nodes":[{"content":"Exports events into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The events are stored without the event messages.","pos":[0,217],"nodes":[{"content":"Exports events into an external log file.","pos":[0,41]},{"content":"A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs.","pos":[42,167]},{"content":"The events are stored without the event messages.","pos":[168,217]}]}]}],"pos":[20581,20799],"yaml":true},{"content":"The name of the event log to export events from, or the path to the event log file to export events from.","nodes":[{"pos":[0,105],"content":"The name of the event log to export events from, or the path to the event log file to export events from.","nodes":[{"content":"The name of the event log to export events from, or the path to the event log file to export events from.","pos":[0,105]}]}],"pos":[21052,21158],"yaml":true},{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"pos":[0,125],"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","pos":[0,125]}]}],"pos":[21252,21378],"yaml":true},{"content":"The query used to select the events to export. Only the events returned from the query will be exported.","nodes":[{"pos":[0,104],"content":"The query used to select the events to export. Only the events returned from the query will be exported.","nodes":[{"content":"The query used to select the events to export. Only the events returned from the query will be exported.","pos":[0,104],"nodes":[{"content":"The query used to select the events to export.","pos":[0,46]},{"content":"Only the events returned from the query will be exported.","pos":[47,104]}]}]}],"pos":[21439,21544],"yaml":true},{"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","nodes":[{"pos":[0,115],"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","nodes":[{"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","pos":[0,115]}]}],"pos":[21614,21730],"yaml":true},{"content":"`true` indicates that the method will continue exporting events even if the specified query fails for some logs, and `false` indicates that this method will not continue to export events when the specified query fails.","nodes":[{"pos":[0,218],"content":"<ph id=\"ph1\">`true`</ph> indicates that the method will continue exporting events even if the specified query fails for some logs, and <ph id=\"ph2\">`false`</ph> indicates that this method will not continue to export events when the specified query fails.","source":"`true` indicates that the method will continue exporting events even if the specified query fails for some logs, and `false` indicates that this method will not continue to export events when the specified query fails."}],"pos":[21806,22027],"yaml":true},{"content":"Exports events and their messages into an external log file.","nodes":[{"pos":[0,60],"content":"Exports events and their messages into an external log file.","nodes":[{"content":"Exports events and their messages into an external log file.","pos":[0,60]}]}],"pos":[23521,23582],"yaml":true},{"content":"The event messages are exported in the default language.","nodes":[{"pos":[0,56],"content":"The event messages are exported in the default language.","nodes":[{"content":"The event messages are exported in the default language.","pos":[0,56]}]}],"pos":[23593,23650],"yaml":true,"extradata":"MT"},{"content":"The name of the event log to export events from, or the path to the event log file to export events from.","nodes":[{"pos":[0,105],"content":"The name of the event log to export events from, or the path to the event log file to export events from.","nodes":[{"content":"The name of the event log to export events from, or the path to the event log file to export events from.","pos":[0,105]}]}],"pos":[24043,24149],"yaml":true},{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"pos":[0,125],"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","pos":[0,125]}]}],"pos":[24243,24369],"yaml":true},{"content":"The query used to select the events to export.  Only the events returned from the query will be exported.","nodes":[{"pos":[0,105],"content":"The query used to select the events to export.  Only the events returned from the query will be exported.","nodes":[{"content":"The query used to select the events to export.  Only the events returned from the query will be exported.","pos":[0,105],"nodes":[{"content":"The query used to select the events to export.","pos":[0,46]},{"content":"Only the events returned from the query will be exported.","pos":[48,105]}]}]}],"pos":[24430,24536],"yaml":true},{"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","nodes":[{"pos":[0,115],"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","nodes":[{"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","pos":[0,115]}]}],"pos":[24606,24722],"yaml":true},{"content":"Exports events and their messages into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The event messages are exported in the specified language.","nodes":[{"pos":[0,245],"content":"Exports events and their messages into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The event messages are exported in the specified language.","nodes":[{"content":"Exports events and their messages into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The event messages are exported in the specified language.","pos":[0,245],"nodes":[{"content":"Exports events and their messages into an external log file.","pos":[0,60]},{"content":"A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs.","pos":[61,186]},{"content":"The event messages are exported in the specified language.","pos":[187,245]}]}]}],"pos":[26437,26683],"yaml":true},{"content":"The name of the event log to export events from, or the path to the event log file to export events from.","nodes":[{"pos":[0,105],"content":"The name of the event log to export events from, or the path to the event log file to export events from.","nodes":[{"content":"The name of the event log to export events from, or the path to the event log file to export events from.","pos":[0,105]}]}],"pos":[27168,27274],"yaml":true},{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"pos":[0,125],"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","pos":[0,125]}]}],"pos":[27368,27494],"yaml":true},{"content":"The query used to select the events to export.  Only the events returned from the query will be exported.","nodes":[{"pos":[0,105],"content":"The query used to select the events to export.  Only the events returned from the query will be exported.","nodes":[{"content":"The query used to select the events to export.  Only the events returned from the query will be exported.","pos":[0,105],"nodes":[{"content":"The query used to select the events to export.","pos":[0,46]},{"content":"Only the events returned from the query will be exported.","pos":[48,105]}]}]}],"pos":[27555,27661],"yaml":true},{"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","nodes":[{"pos":[0,115],"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","nodes":[{"content":"The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.","pos":[0,115]}]}],"pos":[27731,27847],"yaml":true},{"content":"`true` indicates that the method will continue exporting events even if the specified query fails for some logs, and `false` indicates that this method will not continue to export events when the specified query fails.","nodes":[{"pos":[0,218],"content":"<ph id=\"ph1\">`true`</ph> indicates that the method will continue exporting events even if the specified query fails for some logs, and <ph id=\"ph2\">`false`</ph> indicates that this method will not continue to export events when the specified query fails.","source":"`true` indicates that the method will continue exporting events even if the specified query fails for some logs, and `false` indicates that this method will not continue to export events when the specified query fails."}],"pos":[27923,28144],"yaml":true},{"content":"The culture that specifies which language that the exported event messages will be in.","nodes":[{"pos":[0,86],"content":"The culture that specifies which language that the exported event messages will be in.","nodes":[{"content":"The culture that specifies which language that the exported event messages will be in.","pos":[0,86]}]}],"pos":[28236,28323],"yaml":true},{"content":"Gets an object that contains runtime information for the specified event log.","nodes":[{"pos":[0,77],"content":"Gets an object that contains runtime information for the specified event log.","nodes":[{"content":"Gets an object that contains runtime information for the specified event log.","pos":[0,77]}]}],"pos":[29678,29756],"yaml":true},{"content":"The name of the event log to get information about, or the path to the event log file to get information about.","nodes":[{"pos":[0,111],"content":"The name of the event log to get information about, or the path to the event log file to get information about.","nodes":[{"content":"The name of the event log to get information about, or the path to the event log file to get information about.","pos":[0,111]}]}],"pos":[30010,30122],"yaml":true},{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"pos":[0,125],"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","nodes":[{"content":"Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.","pos":[0,125]}]}],"pos":[30216,30342],"yaml":true},{"content":"Returns an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogInformation\"></xref> object that contains information about the specified log.","nodes":[{"pos":[0,144],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogInformation\"&gt;&lt;/xref&gt;</ph> object that contains information about the specified log.","source":"Returns an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogInformation\"></xref> object that contains information about the specified log."}],"pos":[30440,30585],"yaml":true},{"content":"Gets an enumerable collection of all the event log names that are registered with the Event Log service.","nodes":[{"pos":[0,104],"content":"Gets an enumerable collection of all the event log names that are registered with the Event Log service.","nodes":[{"content":"Gets an enumerable collection of all the event log names that are registered with the Event Log service.","pos":[0,104]}]}],"pos":[31676,31781],"yaml":true},{"content":"Returns an enumerable collection of strings that contain the event log names.","nodes":[{"pos":[0,77],"content":"Returns an enumerable collection of strings that contain the event log names.","nodes":[{"content":"Returns an enumerable collection of strings that contain the event log names.","pos":[0,77]}]}],"pos":[32041,32119],"yaml":true},{"content":"Gets an enumerable collection of all the event provider names that are registered with the Event Log service. An event provider is an application that publishes events to an event log.","nodes":[{"pos":[0,184],"content":"Gets an enumerable collection of all the event provider names that are registered with the Event Log service. An event provider is an application that publishes events to an event log.","nodes":[{"content":"Gets an enumerable collection of all the event provider names that are registered with the Event Log service. An event provider is an application that publishes events to an event log.","pos":[0,184],"nodes":[{"content":"Gets an enumerable collection of all the event provider names that are registered with the Event Log service.","pos":[0,109]},{"content":"An event provider is an application that publishes events to an event log.","pos":[110,184]}]}]}],"pos":[33300,33485],"yaml":true},{"content":"Returns an enumerable collection of strings that contain the event provider names.","nodes":[{"pos":[0,82],"content":"Returns an enumerable collection of strings that contain the event provider names.","nodes":[{"content":"Returns an enumerable collection of strings that contain the event provider names.","pos":[0,82]}]}],"pos":[33750,33833],"yaml":true},{"content":"Gets a static predefined session object that is connected to the Event Log service on the local computer.","nodes":[{"pos":[0,105],"content":"Gets a static predefined session object that is connected to the Event Log service on the local computer.","nodes":[{"content":"Gets a static predefined session object that is connected to the Event Log service on the local computer.","pos":[0,105]}]}],"pos":[34997,35103],"yaml":true},{"content":"Returns an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object that is a predefined session object that is connected to the Event Log service on the local computer.","nodes":[{"pos":[0,191],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"&gt;&lt;/xref&gt;</ph> object that is a predefined session object that is connected to the Event Log service on the local computer.","source":"Returns an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object that is a predefined session object that is connected to the Event Log service on the local computer."}],"pos":[35308,35500],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession\n  commentId: T:System.Diagnostics.Eventing.Reader.EventLogSession\n  id: EventLogSession\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor\n  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.Dispose\n  - System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames\n  - System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames\n  - System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession\n  langs:\n  - csharp\n  name: EventLogSession\n  nameWithType: EventLogSession\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession\n  type: Class\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Used to access the Event Log service on the local computer or a remote computer so you can manage and gather information about the event logs and event providers on the computer.\n  remarks: ''\n  example:\n  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069), [How to: Retrieve Information About an Event Publisher](http://msdn.microsoft.com/en-us/2a3e897f-25a9-4dad-8541-171ac49970a3) or [How to: Configure and Read Event Log Properties](http://msdn.microsoft.com/en-us/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).'\n  syntax:\n    content: 'public class EventLogSession : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: EventLogSession()\n  nameWithType: EventLogSession.EventLogSession()\n  fullName: EventLogSession.EventLogSession()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Initializes a new <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object, establishes a connection with the local Event Log service.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public EventLogSession ();\n    parameters: []\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: EventLogSession(String)\n  nameWithType: EventLogSession.EventLogSession(String)\n  fullName: EventLogSession.EventLogSession(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Initializes a new <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object, and establishes a connection with the Event Log service on the specified computer. The credentials (user name and password) of the user who calls the method is used for the credentials to access the remote computer.\n  syntax:\n    content: public EventLogSession (string server);\n    parameters:\n    - id: server\n      type: System.String\n      description: The name of the computer on which to connect to the Event Log service.\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)\n  id: '#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: EventLogSession(String, String, String, SecureString, SessionAuthentication)\n  nameWithType: EventLogSession.EventLogSession(String, String, String, SecureString, SessionAuthentication)\n  fullName: EventLogSession.EventLogSession(String, String, String, SecureString, SessionAuthentication)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Initializes a new <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object, and establishes a connection with the Event Log service on the specified computer. The specified credentials (user name and password) are used for the credentials to access the remote computer.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public EventLogSession (string server, string domain, string user, System.Security.SecureString password, System.Diagnostics.Eventing.Reader.SessionAuthentication logOnType);\n    parameters:\n    - id: server\n      type: System.String\n      description: The name of the computer on which to connect to the Event Log service.\n    - id: domain\n      type: System.String\n      description: The domain of the specified user.\n    - id: user\n      type: System.String\n      description: The user name used to connect to the remote computer.\n    - id: password\n      type: System.Security.SecureString\n      description: The password used to connect to the remote computer.\n    - id: logOnType\n      type: System.Diagnostics.Eventing.Reader.SessionAuthentication\n      description: The type of connection to use for the connection to the remote computer.\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations\n  id: CancelCurrentOperations\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: CancelCurrentOperations()\n  nameWithType: EventLogSession.CancelCurrentOperations()\n  fullName: EventLogSession.CancelCurrentOperations()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Cancels any operations (such as reading an event log or subscribing to an event log) that are currently active for the Event Log service that this session object is connected to.\n  syntax:\n    content: public void CancelCurrentOperations ();\n    parameters: []\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)\n  id: ClearLog(System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ClearLog(String)\n  nameWithType: EventLogSession.ClearLog(String)\n  fullName: EventLogSession.ClearLog(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Clears events from the specified event log.\n  remarks: ''\n  example:\n  - 'For example code using this class, see [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/en-us/7753ff87-f402-41ac-ac64-767e04dd1773).'\n  syntax:\n    content: public void ClearLog (string logName);\n    parameters:\n    - id: logName\n      type: System.String\n      description: The name of the event log to clear all the events from.\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)\n  id: ClearLog(System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ClearLog(String, String)\n  nameWithType: EventLogSession.ClearLog(String, String)\n  fullName: EventLogSession.ClearLog(String, String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Clears events from the specified event log, and saves the cleared events to the specified file.\n  remarks: ''\n  example:\n  - 'For example code using this class, see [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/en-us/7753ff87-f402-41ac-ac64-767e04dd1773).'\n  syntax:\n    content: public void ClearLog (string logName, string backupPath);\n    parameters:\n    - id: logName\n      type: System.String\n      description: The name of the event log to clear all the events from.\n    - id: backupPath\n      type: System.String\n      description: The path to the file in which the cleared events will be saved. The file should end in .evtx.\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose\n  id: Dispose\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: EventLogSession.Dispose()\n  fullName: EventLogSession.Dispose()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Releases all the resources used by this object.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: EventLogSession.Dispose(Boolean)\n  fullName: EventLogSession.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Releases the unmanaged resources used by this object, and optionally releases the managed resources.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  id: ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ExportLog(String, PathType, String, String)\n  nameWithType: EventLogSession.ExportLog(String, PathType, String, String)\n  fullName: EventLogSession.ExportLog(String, PathType, String, String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Exports events into an external log file. The events are stored without the event messages.\n  syntax:\n    content: public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the event log to export events from, or the path to the event log file to export events from.\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.\n    - id: query\n      type: System.String\n      description: The query used to select the events to export.  Only the events returned from the query will be exported.\n    - id: targetFilePath\n      type: System.String\n      description: The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)\n  id: ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ExportLog(String, PathType, String, String, Boolean)\n  nameWithType: EventLogSession.ExportLog(String, PathType, String, String, Boolean)\n  fullName: EventLogSession.ExportLog(String, PathType, String, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Exports events into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The events are stored without the event messages.\n  syntax:\n    content: public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the event log to export events from, or the path to the event log file to export events from.\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.\n    - id: query\n      type: System.String\n      description: The query used to select the events to export. Only the events returned from the query will be exported.\n    - id: targetFilePath\n      type: System.String\n      description: The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.\n    - id: tolerateQueryErrors\n      type: System.Boolean\n      description: '`true` indicates that the method will continue exporting events even if the specified query fails for some logs, and `false` indicates that this method will not continue to export events when the specified query fails.'\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  id: ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ExportLogAndMessages(String, PathType, String, String)\n  nameWithType: EventLogSession.ExportLogAndMessages(String, PathType, String, String)\n  fullName: EventLogSession.ExportLogAndMessages(String, PathType, String, String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Exports events and their messages into an external log file.\n  remarks: The event messages are exported in the default language.\n  example:\n  - 'For example code using this class, see [How to: Export, Archive, and Clear Event Logs](https://msdn.microsoft.com/library/bb671203.aspx).'\n  syntax:\n    content: public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the event log to export events from, or the path to the event log file to export events from.\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.\n    - id: query\n      type: System.String\n      description: The query used to select the events to export.  Only the events returned from the query will be exported.\n    - id: targetFilePath\n      type: System.String\n      description: The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)\n  id: ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ExportLogAndMessages(String, PathType, String, String, Boolean, CultureInfo)\n  nameWithType: EventLogSession.ExportLogAndMessages(String, PathType, String, String, Boolean, CultureInfo)\n  fullName: EventLogSession.ExportLogAndMessages(String, PathType, String, String, Boolean, CultureInfo)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Exports events and their messages into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The event messages are exported in the specified language.\n  remarks: ''\n  example:\n  - 'For example code using this class, see [How to: Export, Archive, and Clear Event Logs](https://msdn.microsoft.com/library/bb671203.aspx).'\n  syntax:\n    content: public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors, System.Globalization.CultureInfo targetCultureInfo);\n    parameters:\n    - id: path\n      type: System.String\n      description: The name of the event log to export events from, or the path to the event log file to export events from.\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.\n    - id: query\n      type: System.String\n      description: The query used to select the events to export.  Only the events returned from the query will be exported.\n    - id: targetFilePath\n      type: System.String\n      description: The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.\n    - id: tolerateQueryErrors\n      type: System.Boolean\n      description: '`true` indicates that the method will continue exporting events even if the specified query fails for some logs, and `false` indicates that this method will not continue to export events when the specified query fails.'\n    - id: targetCultureInfo\n      type: System.Globalization.CultureInfo\n      description: The culture that specifies which language that the exported event messages will be in.\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  id: GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: GetLogInformation(String, PathType)\n  nameWithType: EventLogSession.GetLogInformation(String, PathType)\n  fullName: EventLogSession.GetLogInformation(String, PathType)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets an object that contains runtime information for the specified event log.\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventLogInformation GetLogInformation (string logName, System.Diagnostics.Eventing.Reader.PathType pathType);\n    parameters:\n    - id: logName\n      type: System.String\n      description: The name of the event log to get information about, or the path to the event log file to get information about.\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogInformation\n      description: Returns an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogInformation\"></xref> object that contains information about the specified log.\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames\n  id: GetLogNames\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: GetLogNames()\n  nameWithType: EventLogSession.GetLogNames()\n  fullName: EventLogSession.GetLogNames()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets an enumerable collection of all the event log names that are registered with the Event Log service.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public System.Collections.Generic.IEnumerable<string> GetLogNames ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: Returns an enumerable collection of strings that contain the event log names.\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames\n  commentId: M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames\n  id: GetProviderNames\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: GetProviderNames()\n  nameWithType: EventLogSession.GetProviderNames()\n  fullName: EventLogSession.GetProviderNames()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets an enumerable collection of all the event provider names that are registered with the Event Log service. An event provider is an application that publishes events to an event log.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public System.Collections.Generic.IEnumerable<string> GetProviderNames ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: Returns an enumerable collection of strings that contain the event provider names.\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession\n  commentId: P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession\n  id: GlobalSession\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: GlobalSession\n  nameWithType: EventLogSession.GlobalSession\n  fullName: EventLogSession.GlobalSession\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  summary: Gets a static predefined session object that is connected to the Event Log service on the local computer.\n  syntax:\n    content: public static System.Diagnostics.Eventing.Reader.EventLogSession GlobalSession { get; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogSession\n      description: Returns an <xref href=\"System.Diagnostics.Eventing.Reader.EventLogSession\"></xref> object that is a predefined session object that is connected to the Event Log service on the local computer.\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: jgalasyn\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: EventLogSession()\n  nameWithType: EventLogSession.EventLogSession()\n  fullName: EventLogSession.EventLogSession()\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: EventLogSession(String)\n  nameWithType: EventLogSession.EventLogSession(String)\n  fullName: EventLogSession.EventLogSession(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: EventLogSession(String, String, String, SecureString, SessionAuthentication)\n  nameWithType: EventLogSession.EventLogSession(String, String, String, SecureString, SessionAuthentication)\n  fullName: EventLogSession.EventLogSession(String, String, String, SecureString, SessionAuthentication)\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Diagnostics.Eventing.Reader.SessionAuthentication\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: SessionAuthentication\n  nameWithType: SessionAuthentication\n  fullName: System.Diagnostics.Eventing.Reader.SessionAuthentication\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: CancelCurrentOperations()\n  nameWithType: EventLogSession.CancelCurrentOperations()\n  fullName: EventLogSession.CancelCurrentOperations()\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ClearLog(String)\n  nameWithType: EventLogSession.ClearLog(String)\n  fullName: EventLogSession.ClearLog(String)\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ClearLog(String, String)\n  nameWithType: EventLogSession.ClearLog(String, String)\n  fullName: EventLogSession.ClearLog(String, String)\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: Dispose()\n  nameWithType: EventLogSession.Dispose()\n  fullName: EventLogSession.Dispose()\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: EventLogSession.Dispose(Boolean)\n  fullName: EventLogSession.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ExportLog(String, PathType, String, String)\n  nameWithType: EventLogSession.ExportLog(String, PathType, String, String)\n  fullName: EventLogSession.ExportLog(String, PathType, String, String)\n- uid: System.Diagnostics.Eventing.Reader.PathType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: PathType\n  nameWithType: PathType\n  fullName: System.Diagnostics.Eventing.Reader.PathType\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ExportLog(String, PathType, String, String, Boolean)\n  nameWithType: EventLogSession.ExportLog(String, PathType, String, String, Boolean)\n  fullName: EventLogSession.ExportLog(String, PathType, String, String, Boolean)\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ExportLogAndMessages(String, PathType, String, String)\n  nameWithType: EventLogSession.ExportLogAndMessages(String, PathType, String, String)\n  fullName: EventLogSession.ExportLogAndMessages(String, PathType, String, String)\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ExportLogAndMessages(String, PathType, String, String, Boolean, CultureInfo)\n  nameWithType: EventLogSession.ExportLogAndMessages(String, PathType, String, String, Boolean, CultureInfo)\n  fullName: EventLogSession.ExportLogAndMessages(String, PathType, String, String, Boolean, CultureInfo)\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GetLogInformation(String, PathType)\n  nameWithType: EventLogSession.GetLogInformation(String, PathType)\n  fullName: EventLogSession.GetLogInformation(String, PathType)\n- uid: System.Diagnostics.Eventing.Reader.EventLogInformation\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogInformation\n  nameWithType: EventLogInformation\n  fullName: System.Diagnostics.Eventing.Reader.EventLogInformation\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GetLogNames()\n  nameWithType: EventLogSession.GetLogNames()\n  fullName: EventLogSession.GetLogNames()\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GetProviderNames()\n  nameWithType: EventLogSession.GetProviderNames()\n  fullName: EventLogSession.GetProviderNames()\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GlobalSession\n  nameWithType: EventLogSession.GlobalSession\n  fullName: EventLogSession.GlobalSession\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogSession\n  nameWithType: EventLogSession\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ClearLog\n  nameWithType: EventLogSession.ClearLog\n  fullName: EventLogSession.ClearLog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: EventLogSession\n  nameWithType: EventLogSession.EventLogSession\n  fullName: EventLogSession.EventLogSession\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: CancelCurrentOperations\n  nameWithType: EventLogSession.CancelCurrentOperations\n  fullName: EventLogSession.CancelCurrentOperations\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: Dispose\n  nameWithType: EventLogSession.Dispose\n  fullName: EventLogSession.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ExportLog\n  nameWithType: EventLogSession.ExportLog\n  fullName: EventLogSession.ExportLog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ExportLogAndMessages\n  nameWithType: EventLogSession.ExportLogAndMessages\n  fullName: EventLogSession.ExportLogAndMessages\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GetLogInformation\n  nameWithType: EventLogSession.GetLogInformation\n  fullName: EventLogSession.GetLogInformation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GetLogNames\n  nameWithType: EventLogSession.GetLogNames\n  fullName: EventLogSession.GetLogNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GetProviderNames\n  nameWithType: EventLogSession.GetProviderNames\n  fullName: EventLogSession.GetProviderNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GlobalSession\n  nameWithType: EventLogSession.GlobalSession\n  fullName: EventLogSession.GlobalSession\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.Eventing.Reader/EventLogSession.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}