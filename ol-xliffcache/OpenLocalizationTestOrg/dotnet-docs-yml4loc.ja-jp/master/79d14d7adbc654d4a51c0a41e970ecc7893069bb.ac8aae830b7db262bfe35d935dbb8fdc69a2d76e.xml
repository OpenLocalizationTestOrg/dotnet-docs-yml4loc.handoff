{"nodes":[{"content":"Supports a value type that can be assigned `null`. This class cannot be inherited.","nodes":[{"pos":[0,82],"content":"Supports a value type that can be assigned `null`. This class cannot be inherited.","nodes":[{"content":"Supports a value type that can be assigned <ph id=\"ph1\">`null`</ph>.","pos":[0,50],"source":"Supports a value type that can be assigned `null`."},{"content":"This class cannot be inherited.","pos":[51,82]}]}],"pos":[512,595],"yaml":true},{"content":"A type is said to be nullable if it can be assigned a value or can be assigned `null`, which means the type has no value whatsoever. By default, all reference types, such as <xref:System.String>, are nullable, but all value types, such as <xref:System.Int32>, are not.  \n  \n In C# and Visual Basic, you mark a value type as nullable by using the `?` notation after the value type. For example, `int?` in C# or `Integer?` in Visual Basic declares an integer value type that can be assigned `null`.  \n  \n The <xref:System.Nullable> class provides complementary support for the <xref:System.Nullable%601> structure. The <xref:System.Nullable> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.  \n  \n## Boxing and Unboxing  \n When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <xref:System.Nullable%601> object, not the <xref:System.Nullable%601> object itself. That is, if the <xref:System.Nullable%601.HasValue%2A> property is `true`, the contents of the <xref:System.Nullable%601.Value%2A> property is boxed. If the `HasValue` property is `false`, `null` is boxed. When the underlying value of a nullable type is unboxed, the common language runtime creates a new <xref:System.Nullable%601> structure initialized to the underlying value.","nodes":[{"pos":[0,268],"content":"A type is said to be nullable if it can be assigned a value or can be assigned `null`, which means the type has no value whatsoever. By default, all reference types, such as <xref:System.String>, are nullable, but all value types, such as <xref:System.Int32>, are not.","nodes":[{"content":"A type is said to be nullable if it can be assigned a value or can be assigned <ph id=\"ph1\">`null`</ph>, which means the type has no value whatsoever.","pos":[0,132],"source":"A type is said to be nullable if it can be assigned a value or can be assigned `null`, which means the type has no value whatsoever."},{"content":"By default, all reference types, such as <ph id=\"ph1\">&lt;xref:System.String&gt;</ph>, are nullable, but all value types, such as <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph>, are not.","pos":[133,268],"source":" By default, all reference types, such as <xref:System.String>, are nullable, but all value types, such as <xref:System.Int32>, are not."}]},{"pos":[275,496],"content":"In C# and Visual Basic, you mark a value type as nullable by using the `?` notation after the value type. For example, `int?` in C# or `Integer?` in Visual Basic declares an integer value type that can be assigned `null`.","nodes":[{"content":"In C# and Visual Basic, you mark a value type as nullable by using the <ph id=\"ph1\">`?`</ph> notation after the value type.","pos":[0,105],"source":"In C# and Visual Basic, you mark a value type as nullable by using the `?` notation after the value type."},{"content":"For example, <ph id=\"ph1\">`int?`</ph> in C# or <ph id=\"ph2\">`Integer?`</ph> in Visual Basic declares an integer value type that can be assigned <ph id=\"ph3\">`null`</ph>.","pos":[106,221],"source":" For example, `int?` in C# or `Integer?` in Visual Basic declares an integer value type that can be assigned `null`."}]},{"pos":[503,859],"content":"The <xref:System.Nullable> class provides complementary support for the <xref:System.Nullable%601> structure. The <xref:System.Nullable> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.","nodes":[{"content":"The <xref:System.Nullable> class provides complementary support for the <xref:System.Nullable%601> structure. The <xref:System.Nullable> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.","pos":[0,356],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Nullable&gt;</ph> class provides complementary support for the <ph id=\"ph2\">&lt;xref:System.Nullable%601&gt;</ph> structure.","pos":[0,109],"source":"The <xref:System.Nullable> class provides complementary support for the <xref:System.Nullable%601> structure."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Nullable&gt;</ph> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.","pos":[110,356],"source":" The <xref:System.Nullable> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations."}]}]},{"pos":[868,887],"content":"Boxing and Unboxing","linkify":"Boxing and Unboxing","nodes":[{"content":"Boxing and Unboxing","pos":[0,19]}]},{"pos":[891,1461],"content":"When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <xref:System.Nullable%601> object, not the <xref:System.Nullable%601> object itself. That is, if the <xref:System.Nullable%601.HasValue%2A> property is `true`, the contents of the <xref:System.Nullable%601.Value%2A> property is boxed. If the `HasValue` property is `false`, `null` is boxed. When the underlying value of a nullable type is unboxed, the common language runtime creates a new <xref:System.Nullable%601> structure initialized to the underlying value.","nodes":[{"content":"When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <ph id=\"ph1\">&lt;xref:System.Nullable%601&gt;</ph> object, not the <ph id=\"ph2\">&lt;xref:System.Nullable%601&gt;</ph> object itself.","pos":[0,191],"source":"When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <xref:System.Nullable%601> object, not the <xref:System.Nullable%601> object itself."},{"content":"That is, if the <ph id=\"ph1\">&lt;xref:System.Nullable%601.HasValue%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, the contents of the <ph id=\"ph3\">&lt;xref:System.Nullable%601.Value%2A&gt;</ph> property is boxed.","pos":[192,341],"source":" That is, if the <xref:System.Nullable%601.HasValue%2A> property is `true`, the contents of the <xref:System.Nullable%601.Value%2A> property is boxed."},{"content":"If the <ph id=\"ph1\">`HasValue`</ph> property is <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">`null`</ph> is boxed.","pos":[342,397],"source":" If the `HasValue` property is `false`, `null` is boxed."},{"content":"When the underlying value of a nullable type is unboxed, the common language runtime creates a new <ph id=\"ph1\">&lt;xref:System.Nullable%601&gt;</ph> structure initialized to the underlying value.","pos":[398,570],"source":" When the underlying value of a nullable type is unboxed, the common language runtime creates a new <xref:System.Nullable%601> structure initialized to the underlying value."}]}],"pos":[606,2077],"yaml":true,"extradata":"MT"},{"content":"Compares the relative values of two <xref href=\"System.Nullable`1\"></xref> objects.","nodes":[{"pos":[0,83],"content":"Compares the relative values of two <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1\"&gt;&lt;/xref&gt;</ph> objects.","source":"Compares the relative values of two <xref href=\"System.Nullable`1\"></xref> objects."}],"pos":[4211,4295],"yaml":true},{"content":"A <xref href=\"System.Nullable`1\"></xref> object.","nodes":[{"pos":[0,48],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Nullable`1\"></xref> object."}],"pos":[4478,4527],"yaml":true},{"content":"A <xref href=\"System.Nullable`1\"></xref> object.","nodes":[{"pos":[0,48],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Nullable`1\"></xref> object."}],"pos":[4589,4638],"yaml":true},{"content":"The underlying value type of the <code>n1</code> and <code>n2</code> parameters.","nodes":[{"pos":[0,80],"content":"The underlying value type of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">n1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">n2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters.","source":"The underlying value type of the <code>n1</code> and <code>n2</code> parameters."}],"pos":[4689,4770],"yaml":true},{"content":"An integer that indicates the relative values of the <code>n1</code> and <code>n2</code> parameters.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n1</code> is `false`, and the <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n2</code> is `true`.  \n  \n -or-  \n  \n The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n1</code> is less than the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n2</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `false`.  \n  \n -or-  \n  \n The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n1</code> is equal to the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n2</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n1</code> is `true`, and the <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n2</code> is `false`.  \n  \n -or-  \n  \n The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n1</code> is greater than the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n2</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,100],"content":"An integer that indicates the relative values of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">n1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">n2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters.","source":"An integer that indicates the relative values of the <code>n1</code> and <code>n2</code> parameters."},{"pos":[107,430],"content":"<table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n1</code> is `false`, and the <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n2</code> is `true`.","nodes":[{"content":"Return Value","pos":[23,40],"source":" Return Value  \n  \n "},{"content":"Description","pos":[52,68],"source":" Description  \n  \n "},{"content":"Less than zero","pos":[104,123],"source":" Less than zero  \n  \n "},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> property for <ph id=\"ph2\">&lt;code&gt;n1&lt;/code&gt;</ph> is <ph id=\"ph3\">`false`</ph>, and the <ph id=\"ph4\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> property for <ph id=\"ph5\">&lt;code&gt;n2&lt;/code&gt;</ph> is <ph id=\"ph6\">`true`</ph>.","pos":[135,323],"source":" The <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n1</code> is `false`, and the <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n2</code> is `true`."}]},{"pos":[437,441],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[448,762],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> properties for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">n1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">n2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are <ph id=\"ph4\">`true`</ph>, and the value of the <ph id=\"ph5\">&lt;xref href=\"System.Nullable`1.Value\"&gt;&lt;/xref&gt;</ph> property for <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph6\">n1</ph><ept id=\"p3\">&lt;/code&gt;</ept> is less than the value of the <ph id=\"ph7\">&lt;xref href=\"System.Nullable`1.Value\"&gt;&lt;/xref&gt;</ph> property for <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph8\">n2</ph><ept id=\"p4\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n1</code> is less than the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n2</code>."},{"pos":[769,924],"content":"</td></tr><tr><td> Zero  \n  \n </td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `false`.","nodes":[{"content":"Zero","pos":[19,28],"source":" Zero  \n  \n "},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> properties for <ph id=\"ph2\">&lt;code&gt;n1&lt;/code&gt;</ph> and <ph id=\"ph3\">&lt;code&gt;n2&lt;/code&gt;</ph> are <ph id=\"ph4\">`false`</ph>.","pos":[40,155],"source":" The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `false`."}]},{"pos":[931,935],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[942,1255],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> properties for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">n1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">n2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are <ph id=\"ph4\">`true`</ph>, and the value of the <ph id=\"ph5\">&lt;xref href=\"System.Nullable`1.Value\"&gt;&lt;/xref&gt;</ph> property for <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph6\">n1</ph><ept id=\"p3\">&lt;/code&gt;</ept> is equal to the value of the <ph id=\"ph7\">&lt;xref href=\"System.Nullable`1.Value\"&gt;&lt;/xref&gt;</ph> property for <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph8\">n2</ph><ept id=\"p4\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n1</code> is equal to the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n2</code>."},{"pos":[1262,1503],"content":"</td></tr><tr><td> Greater than zero  \n  \n </td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n1</code> is `true`, and the <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n2</code> is `false`.","nodes":[{"content":"Greater than zero","pos":[19,41],"source":" Greater than zero  \n  \n "},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> property for <ph id=\"ph2\">&lt;code&gt;n1&lt;/code&gt;</ph> is <ph id=\"ph3\">`true`</ph>, and the <ph id=\"ph4\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> property for <ph id=\"ph5\">&lt;code&gt;n2&lt;/code&gt;</ph> is <ph id=\"ph6\">`false`</ph>.","pos":[53,241],"source":" The <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n1</code> is `true`, and the <xref href=\"System.Nullable`1.HasValue\"></xref> property for <code>n2</code> is `false`."}]},{"pos":[1510,1514],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[1521,1838],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> properties for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">n1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">n2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are <ph id=\"ph4\">`true`</ph>, and the value of the <ph id=\"ph5\">&lt;xref href=\"System.Nullable`1.Value\"&gt;&lt;/xref&gt;</ph> property for <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph6\">n1</ph><ept id=\"p3\">&lt;/code&gt;</ept> is greater than the value of the <ph id=\"ph7\">&lt;xref href=\"System.Nullable`1.Value\"&gt;&lt;/xref&gt;</ph> property for <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph8\">n2</ph><ept id=\"p4\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n1</code> is greater than the value of the <xref href=\"System.Nullable`1.Value\"></xref> property for <code>n2</code>."}],"pos":[4826,6758],"yaml":true},{"content":"Indicates whether two specified <xref href=\"System.Nullable`1\"></xref> objects are equal.","nodes":[{"pos":[0,89],"content":"Indicates whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1\"&gt;&lt;/xref&gt;</ph> objects are equal.","source":"Indicates whether two specified <xref href=\"System.Nullable`1\"></xref> objects are equal."}],"pos":[8406,8496],"yaml":true},{"content":"A <xref href=\"System.Nullable`1\"></xref> object.","nodes":[{"pos":[0,48],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Nullable`1\"></xref> object."}],"pos":[8679,8728],"yaml":true},{"content":"A <xref href=\"System.Nullable`1\"></xref> object.","nodes":[{"pos":[0,48],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Nullable`1\"></xref> object."}],"pos":[8790,8839],"yaml":true},{"content":"The underlying value type of the <code>n1</code> and <code>n2</code> parameters.","nodes":[{"pos":[0,80],"content":"The underlying value type of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">n1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">n2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters.","source":"The underlying value type of the <code>n1</code> and <code>n2</code> parameters."}],"pos":[8890,8971],"yaml":true},{"content":"`true` if the <code>n1</code> parameter is equal to the <code>n2</code> parameter; otherwise, `false`.  \n  \n The return value depends on the <xref href=\"System.Nullable`1.HasValue\"></xref> and <xref href=\"System.Nullable`1.Value\"></xref> properties of the two parameters that are compared.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td>`true`</td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `false`.  \n  \n -or-  \n  \n The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the <xref href=\"System.Nullable`1.Value\"></xref> properties of the parameters are equal.  \n  \n </td></tr><tr><td>`false`</td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> property is `true` for one parameter and `false` for the other parameter.  \n  \n -or-  \n  \n The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the <xref href=\"System.Nullable`1.Value\"></xref> properties of the parameters are unequal.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">n1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is equal to the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">n2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <code>n1</code> parameter is equal to the <code>n2</code> parameter; otherwise, `false`."},{"pos":[109,289],"content":"The return value depends on the <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Nullable`1.Value\"&gt;&lt;/xref&gt;</ph> properties of the two parameters that are compared.","source":"The return value depends on the <xref href=\"System.Nullable`1.HasValue\"></xref> and <xref href=\"System.Nullable`1.Value\"></xref> properties of the two parameters that are compared."},{"pos":[296,530],"content":"<table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td>`true`</td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `false`.","nodes":[{"content":"Return Value","pos":[23,40],"source":" Return Value  \n  \n "},{"content":"Description","pos":[52,68],"source":" Description  \n  \n "},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> properties for <ph id=\"ph2\">&lt;code&gt;n1&lt;/code&gt;</ph> and <ph id=\"ph3\">&lt;code&gt;n2&lt;/code&gt;</ph> are <ph id=\"ph4\">`false`</ph>.","pos":[119,234],"source":" The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `false`."}]},{"pos":[537,541],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[548,755],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> properties for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">n1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">n2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are <ph id=\"ph4\">`true`</ph>, and the <ph id=\"ph5\">&lt;xref href=\"System.Nullable`1.Value\"&gt;&lt;/xref&gt;</ph> properties of the parameters are equal.","source":"The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the <xref href=\"System.Nullable`1.Value\"></xref> properties of the parameters are equal."},{"pos":[762,922],"content":"</td></tr><tr><td>`false`</td><td> The <xref href=\"System.Nullable`1.HasValue\"></xref> property is `true` for one parameter and `false` for the other parameter.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`true`</ph> for one parameter and <ph id=\"ph3\">`false`</ph> for the other parameter.","pos":[35,160],"source":" The <xref href=\"System.Nullable`1.HasValue\"></xref> property is `true` for one parameter and `false` for the other parameter."}]},{"pos":[929,933],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[940,1149],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Nullable`1.HasValue\"&gt;&lt;/xref&gt;</ph> properties for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">n1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">n2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are <ph id=\"ph4\">`true`</ph>, and the <ph id=\"ph5\">&lt;xref href=\"System.Nullable`1.Value\"&gt;&lt;/xref&gt;</ph> properties of the parameters are unequal.","source":"The <xref href=\"System.Nullable`1.HasValue\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the <xref href=\"System.Nullable`1.Value\"></xref> properties of the parameters are unequal."}],"pos":[9029,10250],"yaml":true},{"content":"Returns the underlying type argument of the specified nullable type.","nodes":[{"pos":[0,68],"content":"Returns the underlying type argument of the specified nullable type.","nodes":[{"content":"Returns the underlying type argument of the specified nullable type.","pos":[0,68]}]}],"pos":[11795,11864],"yaml":true},{"content":"A generic type definition is a type declaration, such as <xref:System.Nullable%601>, that contains a type parameter list, and the type parameter list declares one or more type parameters. A closed generic type is a type declaration where a particular type is specified for a type parameter.  \n  \n For example, if the `nullableType` parameter is the type of `Nullable<Int32>` in C# (`Nullable(Of Int32)` in Visual Basic), the return value is the type of <xref:System.Int32> (that is, the type argument of the closed generic type).","nodes":[{"pos":[0,290],"content":"A generic type definition is a type declaration, such as <xref:System.Nullable%601>, that contains a type parameter list, and the type parameter list declares one or more type parameters. A closed generic type is a type declaration where a particular type is specified for a type parameter.","nodes":[{"content":"A generic type definition is a type declaration, such as <xref:System.Nullable%601>, that contains a type parameter list, and the type parameter list declares one or more type parameters. A closed generic type is a type declaration where a particular type is specified for a type parameter.","pos":[0,290],"nodes":[{"content":"A generic type definition is a type declaration, such as <ph id=\"ph1\">&lt;xref:System.Nullable%601&gt;</ph>, that contains a type parameter list, and the type parameter list declares one or more type parameters.","pos":[0,187],"source":"A generic type definition is a type declaration, such as <xref:System.Nullable%601>, that contains a type parameter list, and the type parameter list declares one or more type parameters."},{"content":"A closed generic type is a type declaration where a particular type is specified for a type parameter.","pos":[188,290]}]}]},{"pos":[297,529],"content":"For example, if the <ph id=\"ph1\">`nullableType`</ph> parameter is the type of <ph id=\"ph2\">`Nullable&lt;Int32&gt;`</ph> in C# (<ph id=\"ph3\">`Nullable(Of Int32)`</ph> in Visual Basic), the return value is the type of <ph id=\"ph4\">&lt;xref:System.Int32&gt;</ph> (that is, the type argument of the closed generic type).","source":"For example, if the `nullableType` parameter is the type of `Nullable<Int32>` in C# (`Nullable(Of Int32)` in Visual Basic), the return value is the type of <xref:System.Int32> (that is, the type argument of the closed generic type)."}],"pos":[11875,12409],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> object that describes a closed generic nullable type.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object that describes a closed generic nullable type.","source":"A <xref href=\"System.Type\"></xref> object that describes a closed generic nullable type."}],"pos":[13148,13237],"yaml":true},{"content":"The type argument of the <code>nullableType</code> parameter, if the <code>nullableType</code> parameter is a closed generic nullable type; otherwise, `null`.","nodes":[{"pos":[0,158],"content":"The type argument of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">nullableType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter, if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">nullableType</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is a closed generic nullable type; otherwise, <ph id=\"ph3\">`null`</ph>.","source":"The type argument of the <code>nullableType</code> parameter, if the <code>nullableType</code> parameter is a closed generic nullable type; otherwise, `null`."}],"pos":[13292,13451],"yaml":true},{"content":"<code>nullableType</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;nullableType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>nullableType</code> is `null`."}],"pos":[13614,13651],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Nullable\n  commentId: T:System.Nullable\n  id: Nullable\n  children:\n  - System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})\n  - System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})\n  - System.Nullable.GetUnderlyingType(System.Type)\n  langs:\n  - csharp\n  name: Nullable\n  nameWithType: Nullable\n  fullName: System.Nullable\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Supports a value type that can be assigned `null`. This class cannot be inherited.\n  remarks: \"A type is said to be nullable if it can be assigned a value or can be assigned `null`, which means the type has no value whatsoever. By default, all reference types, such as <xref:System.String>, are nullable, but all value types, such as <xref:System.Int32>, are not.  \\n  \\n In C# and Visual Basic, you mark a value type as nullable by using the `?` notation after the value type. For example, `int?` in C# or `Integer?` in Visual Basic declares an integer value type that can be assigned `null`.  \\n  \\n The <xref:System.Nullable> class provides complementary support for the <xref:System.Nullable%601> structure. The <xref:System.Nullable> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.  \\n  \\n## Boxing and Unboxing  \\n When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <xref:System.Nullable%601> object, not the <xref:System.Nullable%601> object itself. That is, if the <xref:System.Nullable%601.HasValue%2A> property is `true`, the contents of the <xref:System.Nullable%601.Value%2A> property is boxed. If the `HasValue` property is `false`, `null` is boxed. When the underlying value of a nullable type is unboxed, the common language runtime creates a new <xref:System.Nullable%601> structure initialized to the underlying value.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static class Nullable\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})\n  commentId: M:System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})\n  id: Compare``1(System.Nullable{``0},System.Nullable{``0})\n  parent: System.Nullable\n  langs:\n  - csharp\n  name: Compare<T>(Nullable<T>, Nullable<T>)\n  nameWithType: Nullable.Compare<T>(Nullable<T>, Nullable<T>)\n  fullName: Nullable.Compare<T>(Nullable<T>, Nullable<T>)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares the relative values of two <xref href=\"System.Nullable`1\"></xref> objects.\n  syntax:\n    content: 'public static int Compare<T> (Nullable<T> n1, Nullable<T> n2) where T : struct;'\n    parameters:\n    - id: n1\n      type: System.Nullable`1\n      description: A <xref href=\"System.Nullable`1\"></xref> object.\n    - id: n2\n      type: System.Nullable`1\n      description: A <xref href=\"System.Nullable`1\"></xref> object.\n    typeParameters:\n    - id: T\n      description: The underlying value type of the <code>n1</code> and <code>n2</code> parameters.\n    return:\n      type: System.Int32\n      description: \"An integer that indicates the relative values of the <code>n1</code> and <code>n2</code> parameters.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> The <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> property for <code>n1</code> is `false`, and the <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> property for <code>n2</code> is `true`.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\\\"System.Nullable`1.Value\\\"></xref> property for <code>n1</code> is less than the value of the <xref href=\\\"System.Nullable`1.Value\\\"></xref> property for <code>n2</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> The <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> properties for <code>n1</code> and <code>n2</code> are `false`.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\\\"System.Nullable`1.Value\\\"></xref> property for <code>n1</code> is equal to the value of the <xref href=\\\"System.Nullable`1.Value\\\"></xref> property for <code>n2</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> The <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> property for <code>n1</code> is `true`, and the <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> property for <code>n2</code> is `false`.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the value of the <xref href=\\\"System.Nullable`1.Value\\\"></xref> property for <code>n1</code> is greater than the value of the <xref href=\\\"System.Nullable`1.Value\\\"></xref> property for <code>n2</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Nullable.Compare``1*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})\n  commentId: M:System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})\n  id: Equals``1(System.Nullable{``0},System.Nullable{``0})\n  parent: System.Nullable\n  langs:\n  - csharp\n  name: Equals<T>(Nullable<T>, Nullable<T>)\n  nameWithType: Nullable.Equals<T>(Nullable<T>, Nullable<T>)\n  fullName: Nullable.Equals<T>(Nullable<T>, Nullable<T>)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether two specified <xref href=\"System.Nullable`1\"></xref> objects are equal.\n  syntax:\n    content: 'public static bool Equals<T> (Nullable<T> n1, Nullable<T> n2) where T : struct;'\n    parameters:\n    - id: n1\n      type: System.Nullable`1\n      description: A <xref href=\"System.Nullable`1\"></xref> object.\n    - id: n2\n      type: System.Nullable`1\n      description: A <xref href=\"System.Nullable`1\"></xref> object.\n    typeParameters:\n    - id: T\n      description: The underlying value type of the <code>n1</code> and <code>n2</code> parameters.\n    return:\n      type: System.Boolean\n      description: \"`true` if the <code>n1</code> parameter is equal to the <code>n2</code> parameter; otherwise, `false`.  \\n  \\n The return value depends on the <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> and <xref href=\\\"System.Nullable`1.Value\\\"></xref> properties of the two parameters that are compared.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td>`true`</td><td> The <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> properties for <code>n1</code> and <code>n2</code> are `false`.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the <xref href=\\\"System.Nullable`1.Value\\\"></xref> properties of the parameters are equal.  \\n  \\n </td></tr><tr><td>`false`</td><td> The <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> property is `true` for one parameter and `false` for the other parameter.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Nullable`1.HasValue\\\"></xref> properties for <code>n1</code> and <code>n2</code> are `true`, and the <xref href=\\\"System.Nullable`1.Value\\\"></xref> properties of the parameters are unequal.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Nullable.Equals``1*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Nullable.GetUnderlyingType(System.Type)\n  commentId: M:System.Nullable.GetUnderlyingType(System.Type)\n  id: GetUnderlyingType(System.Type)\n  parent: System.Nullable\n  langs:\n  - csharp\n  name: GetUnderlyingType(Type)\n  nameWithType: Nullable.GetUnderlyingType(Type)\n  fullName: Nullable.GetUnderlyingType(Type)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the underlying type argument of the specified nullable type.\n  remarks: \"A generic type definition is a type declaration, such as <xref:System.Nullable%601>, that contains a type parameter list, and the type parameter list declares one or more type parameters. A closed generic type is a type declaration where a particular type is specified for a type parameter.  \\n  \\n For example, if the `nullableType` parameter is the type of `Nullable<Int32>` in C# (`Nullable(Of Int32)` in Visual Basic), the return value is the type of <xref:System.Int32> (that is, the type argument of the closed generic type).\"\n  example:\n  - \"The following code example defines a method whose return value is of type <xref:System.Nullable%601> of <xref:System.Int32>. The code example uses the <xref:System.Nullable.GetUnderlyingType%2A> method to display the type argument of the return value.  \\n  \\n [!code-csharp[system.nullable_GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable_GetUnderlyingType/cs/gut.cs#1)]\\n [!code-vb[system.nullable_GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable_GetUnderlyingType/vb/gut.vb#1)]\"\n  syntax:\n    content: public static Type GetUnderlyingType (Type nullableType);\n    parameters:\n    - id: nullableType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object that describes a closed generic nullable type.\n    return:\n      type: System.Type\n      description: The type argument of the <code>nullableType</code> parameter, if the <code>nullableType</code> parameter is a closed generic nullable type; otherwise, `null`.\n  overload: System.Nullable.GetUnderlyingType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>nullableType</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})\n  parent: System.Nullable\n  isExternal: false\n  name: Compare<T>(Nullable<T>, Nullable<T>)\n  nameWithType: Nullable.Compare<T>(Nullable<T>, Nullable<T>)\n  fullName: Nullable.Compare<T>(Nullable<T>, Nullable<T>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Nullable`1\n  parent: System\n  isExternal: false\n  name: Nullable<T>\n  nameWithType: Nullable<T>\n  fullName: System.Nullable<T>\n- uid: System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})\n  parent: System.Nullable\n  isExternal: false\n  name: Equals<T>(Nullable<T>, Nullable<T>)\n  nameWithType: Nullable.Equals<T>(Nullable<T>, Nullable<T>)\n  fullName: Nullable.Equals<T>(Nullable<T>, Nullable<T>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Nullable.GetUnderlyingType(System.Type)\n  parent: System.Nullable\n  isExternal: false\n  name: GetUnderlyingType(Type)\n  nameWithType: Nullable.GetUnderlyingType(Type)\n  fullName: Nullable.GetUnderlyingType(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Nullable.Compare``1*\n  parent: System.Nullable\n  isExternal: false\n  name: Compare<T>\n  nameWithType: Nullable.Compare<T>\n  fullName: Nullable.Compare<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml\n- uid: System.Nullable.Equals``1*\n  parent: System.Nullable\n  isExternal: false\n  name: Equals<T>\n  nameWithType: Nullable.Equals<T>\n  fullName: Nullable.Equals<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml\n- uid: System.Nullable.GetUnderlyingType*\n  parent: System.Nullable\n  isExternal: false\n  name: GetUnderlyingType\n  nameWithType: Nullable.GetUnderlyingType\n  fullName: Nullable.GetUnderlyingType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Nullable.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}