{"nodes":[{"content":"Describes arguments in the dynamic binding process.","nodes":[{"pos":[0,51],"content":"Describes arguments in the dynamic binding process.","nodes":[{"content":"Describes arguments in the dynamic binding process.","pos":[0,51]}]}],"pos":[725,777],"yaml":true},{"content":"`ArgumentCount` - all inclusive number of arguments.  \n  \n `ArgumentNames` - names for those arguments that are named.  \n  \n Argument names match to the argument values in left to right order and last name corresponds to the last argument.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`ArgumentCount`</ph> - all inclusive number of arguments.","source":"`ArgumentCount` - all inclusive number of arguments."},{"pos":[59,118],"content":"<ph id=\"ph1\">`ArgumentNames`</ph> - names for those arguments that are named.","source":"`ArgumentNames` - names for those arguments that are named."},{"pos":[125,239],"content":"Argument names match to the argument values in left to right order and last name corresponds to the last argument.","nodes":[{"content":"Argument names match to the argument values in left to right order and last name corresponds to the last argument.","pos":[0,114]}]}],"pos":[788,1034],"yaml":true,"extradata":"MT"},{"content":"Creates a new CallInfo that represents arguments in the dynamic binding process.","nodes":[{"pos":[0,80],"content":"Creates a new CallInfo that represents arguments in the dynamic binding process.","nodes":[{"content":"Creates a new CallInfo that represents arguments in the dynamic binding process.","pos":[0,80]}]}],"pos":[2998,3079],"yaml":true},{"content":"The number of arguments.","nodes":[{"pos":[0,24],"content":"The number of arguments.","nodes":[{"content":"The number of arguments.","pos":[0,24]}]}],"pos":[3270,3295],"yaml":true},{"content":"The argument names.","nodes":[{"pos":[0,19],"content":"The argument names.","nodes":[{"content":"The argument names.","pos":[0,19]}]}],"pos":[3399,3419],"yaml":true},{"content":"Creates a new <code>PositionalArgumentInfo</code>.","nodes":[{"pos":[0,50],"content":"Creates a new <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">PositionalArgumentInfo</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Creates a new <code>PositionalArgumentInfo</code>."}],"pos":[4796,4847],"yaml":true},{"content":"The number of arguments.","nodes":[{"pos":[0,24],"content":"The number of arguments.","nodes":[{"content":"The number of arguments.","pos":[0,24]}]}],"pos":[5000,5025],"yaml":true},{"content":"The argument names.","nodes":[{"pos":[0,19],"content":"The argument names.","nodes":[{"content":"The argument names.","pos":[0,19]}]}],"pos":[5091,5111],"yaml":true},{"content":"The number of arguments.","nodes":[{"pos":[0,24],"content":"The number of arguments.","nodes":[{"content":"The number of arguments.","pos":[0,24]}]}],"pos":[6381,6406],"yaml":true},{"content":"The number of arguments.","nodes":[{"pos":[0,24],"content":"The number of arguments.","nodes":[{"content":"The number of arguments.","pos":[0,24]}]}],"pos":[6519,6544],"yaml":true},{"content":"The argument names.","nodes":[{"pos":[0,19],"content":"The argument names.","nodes":[{"content":"The argument names.","pos":[0,19]}]}],"pos":[7822,7842],"yaml":true},{"content":"The read-only collection of argument names.","nodes":[{"pos":[0,43],"content":"The read-only collection of argument names.","nodes":[{"content":"The read-only collection of argument names.","pos":[0,43]}]}],"pos":[8061,8105],"yaml":true},{"content":"Determines whether the specified CallInfo instance is considered equal to the current.","nodes":[{"pos":[0,86],"content":"Determines whether the specified CallInfo instance is considered equal to the current.","nodes":[{"content":"Determines whether the specified CallInfo instance is considered equal to the current.","pos":[0,86]}]}],"pos":[9408,9495],"yaml":true},{"content":"The instance of <xref href=\"System.Dynamic.CallInfo\"></xref> to compare with the current instance.","nodes":[{"pos":[0,98],"content":"The instance of <ph id=\"ph1\">&lt;xref href=\"System.Dynamic.CallInfo\"&gt;&lt;/xref&gt;</ph> to compare with the current instance.","source":"The instance of <xref href=\"System.Dynamic.CallInfo\"></xref> to compare with the current instance."}],"pos":[9635,9734],"yaml":true},{"content":"true if the specified instance is equal to the current one otherwise, false.","nodes":[{"pos":[0,76],"content":"true if the specified instance is equal to the current one otherwise, false.","nodes":[{"content":"true if the specified instance is equal to the current one otherwise, false.","pos":[0,76]}]}],"pos":[9792,9869],"yaml":true},{"content":"Serves as a hash function for the current <xref href=\"System.Dynamic.CallInfo\"></xref>.","nodes":[{"pos":[0,87],"content":"Serves as a hash function for the current <ph id=\"ph1\">&lt;xref href=\"System.Dynamic.CallInfo\"&gt;&lt;/xref&gt;</ph>.","source":"Serves as a hash function for the current <xref href=\"System.Dynamic.CallInfo\"></xref>."}],"pos":[11132,11220],"yaml":true},{"content":"A hash code for the current <xref href=\"System.Dynamic.CallInfo\"></xref>.","nodes":[{"pos":[0,73],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Dynamic.CallInfo\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the current <xref href=\"System.Dynamic.CallInfo\"></xref>."}],"pos":[11354,11428],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Dynamic.CallInfo\n  commentId: T:System.Dynamic.CallInfo\n  id: CallInfo\n  children:\n  - System.Dynamic.CallInfo.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})\n  - System.Dynamic.CallInfo.#ctor(System.Int32,System.String[])\n  - System.Dynamic.CallInfo.ArgumentCount\n  - System.Dynamic.CallInfo.ArgumentNames\n  - System.Dynamic.CallInfo.Equals(System.Object)\n  - System.Dynamic.CallInfo.GetHashCode\n  langs:\n  - csharp\n  name: CallInfo\n  nameWithType: CallInfo\n  fullName: System.Dynamic.CallInfo\n  type: Class\n  assemblies:\n  - System.Dynamic.Runtime\n  - System.Core\n  - netstandard\n  - System.Linq.Expressions\n  namespace: System.Dynamic\n  summary: Describes arguments in the dynamic binding process.\n  remarks: \"`ArgumentCount` - all inclusive number of arguments.  \\n  \\n `ArgumentNames` - names for those arguments that are named.  \\n  \\n Argument names match to the argument values in left to right order and last name corresponds to the last argument.\"\n  example:\n  - '`SampleMethod(arg1, arg2, arg3, name1 = arg4, name2 = arg5, name3 = arg6)` will correspond to `ArgumentCount: 6 ArgumentNames: {\"name1\", \"name2\", \"name3\"}`.'\n  syntax:\n    content: public sealed class CallInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Dynamic.CallInfo.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})\n  commentId: M:System.Dynamic.CallInfo.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})\n  id: '#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})'\n  parent: System.Dynamic.CallInfo\n  langs:\n  - csharp\n  name: CallInfo(Int32, IEnumerable<String>)\n  nameWithType: CallInfo.CallInfo(Int32, IEnumerable<String>)\n  fullName: CallInfo.CallInfo(Int32, IEnumerable<String>)\n  type: Constructor\n  assemblies:\n  - System.Dynamic.Runtime\n  - System.Core\n  - netstandard\n  - System.Linq.Expressions\n  namespace: System.Dynamic\n  summary: Creates a new CallInfo that represents arguments in the dynamic binding process.\n  syntax:\n    content: public CallInfo (int argCount, System.Collections.Generic.IEnumerable<string> argNames);\n    parameters:\n    - id: argCount\n      type: System.Int32\n      description: The number of arguments.\n    - id: argNames\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: The argument names.\n  overload: System.Dynamic.CallInfo.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Dynamic.CallInfo.#ctor(System.Int32,System.String[])\n  commentId: M:System.Dynamic.CallInfo.#ctor(System.Int32,System.String[])\n  id: '#ctor(System.Int32,System.String[])'\n  parent: System.Dynamic.CallInfo\n  langs:\n  - csharp\n  name: CallInfo(Int32, String[])\n  nameWithType: CallInfo.CallInfo(Int32, String[])\n  fullName: CallInfo.CallInfo(Int32, String[])\n  type: Constructor\n  assemblies:\n  - System.Dynamic.Runtime\n  - System.Core\n  - netstandard\n  - System.Linq.Expressions\n  namespace: System.Dynamic\n  summary: Creates a new <code>PositionalArgumentInfo</code>.\n  syntax:\n    content: public CallInfo (int argCount, string[] argNames);\n    parameters:\n    - id: argCount\n      type: System.Int32\n      description: The number of arguments.\n    - id: argNames\n      type: System.String[]\n      description: The argument names.\n  overload: System.Dynamic.CallInfo.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Dynamic.CallInfo.ArgumentCount\n  commentId: P:System.Dynamic.CallInfo.ArgumentCount\n  id: ArgumentCount\n  parent: System.Dynamic.CallInfo\n  langs:\n  - csharp\n  name: ArgumentCount\n  nameWithType: CallInfo.ArgumentCount\n  fullName: CallInfo.ArgumentCount\n  type: Property\n  assemblies:\n  - System.Dynamic.Runtime\n  - System.Core\n  - netstandard\n  - System.Linq.Expressions\n  namespace: System.Dynamic\n  summary: The number of arguments.\n  syntax:\n    content: public int ArgumentCount { get; }\n    return:\n      type: System.Int32\n      description: The number of arguments.\n  overload: System.Dynamic.CallInfo.ArgumentCount*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Dynamic.CallInfo.ArgumentNames\n  commentId: P:System.Dynamic.CallInfo.ArgumentNames\n  id: ArgumentNames\n  parent: System.Dynamic.CallInfo\n  langs:\n  - csharp\n  name: ArgumentNames\n  nameWithType: CallInfo.ArgumentNames\n  fullName: CallInfo.ArgumentNames\n  type: Property\n  assemblies:\n  - System.Dynamic.Runtime\n  - System.Core\n  - netstandard\n  - System.Linq.Expressions\n  namespace: System.Dynamic\n  summary: The argument names.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> ArgumentNames { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n      description: The read-only collection of argument names.\n  overload: System.Dynamic.CallInfo.ArgumentNames*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Dynamic.CallInfo.Equals(System.Object)\n  commentId: M:System.Dynamic.CallInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Dynamic.CallInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CallInfo.Equals(Object)\n  fullName: CallInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Dynamic.Runtime\n  - System.Core\n  - netstandard\n  - System.Linq.Expressions\n  namespace: System.Dynamic\n  summary: Determines whether the specified CallInfo instance is considered equal to the current.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The instance of <xref href=\"System.Dynamic.CallInfo\"></xref> to compare with the current instance.\n    return:\n      type: System.Boolean\n      description: true if the specified instance is equal to the current one otherwise, false.\n  overload: System.Dynamic.CallInfo.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Dynamic.CallInfo.GetHashCode\n  commentId: M:System.Dynamic.CallInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Dynamic.CallInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CallInfo.GetHashCode()\n  fullName: CallInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Dynamic.Runtime\n  - System.Core\n  - netstandard\n  - System.Linq.Expressions\n  namespace: System.Dynamic\n  summary: Serves as a hash function for the current <xref href=\"System.Dynamic.CallInfo\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Dynamic.CallInfo\"></xref>.\n  overload: System.Dynamic.CallInfo.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: douge\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Dynamic.CallInfo.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.Dynamic.CallInfo\n  isExternal: false\n  name: CallInfo(Int32, IEnumerable<String>)\n  nameWithType: CallInfo.CallInfo(Int32, IEnumerable<String>)\n  fullName: CallInfo.CallInfo(Int32, IEnumerable<String>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Dynamic.CallInfo.#ctor(System.Int32,System.String[])\n  parent: System.Dynamic.CallInfo\n  isExternal: false\n  name: CallInfo(Int32, String[])\n  nameWithType: CallInfo.CallInfo(Int32, String[])\n  fullName: CallInfo.CallInfo(Int32, String[])\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Dynamic.CallInfo.ArgumentCount\n  parent: System.Dynamic.CallInfo\n  isExternal: false\n  name: ArgumentCount\n  nameWithType: CallInfo.ArgumentCount\n  fullName: CallInfo.ArgumentCount\n- uid: System.Dynamic.CallInfo.ArgumentNames\n  parent: System.Dynamic.CallInfo\n  isExternal: false\n  name: ArgumentNames\n  nameWithType: CallInfo.ArgumentNames\n  fullName: CallInfo.ArgumentNames\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<String>\n  nameWithType: ReadOnlyCollection<String>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Dynamic.CallInfo.Equals(System.Object)\n  parent: System.Dynamic.CallInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CallInfo.Equals(Object)\n  fullName: CallInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Dynamic.CallInfo.GetHashCode\n  parent: System.Dynamic.CallInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CallInfo.GetHashCode()\n  fullName: CallInfo.GetHashCode()\n- uid: System.Dynamic.CallInfo.#ctor*\n  parent: System.Dynamic.CallInfo\n  isExternal: false\n  name: CallInfo\n  nameWithType: CallInfo.CallInfo\n  fullName: CallInfo.CallInfo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n- uid: System.Dynamic.CallInfo.ArgumentCount*\n  parent: System.Dynamic.CallInfo\n  isExternal: false\n  name: ArgumentCount\n  nameWithType: CallInfo.ArgumentCount\n  fullName: CallInfo.ArgumentCount\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n- uid: System.Dynamic.CallInfo.ArgumentNames*\n  parent: System.Dynamic.CallInfo\n  isExternal: false\n  name: ArgumentNames\n  nameWithType: CallInfo.ArgumentNames\n  fullName: CallInfo.ArgumentNames\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n- uid: System.Dynamic.CallInfo.Equals*\n  parent: System.Dynamic.CallInfo\n  isExternal: false\n  name: Equals\n  nameWithType: CallInfo.Equals\n  fullName: CallInfo.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n- uid: System.Dynamic.CallInfo.GetHashCode*\n  parent: System.Dynamic.CallInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CallInfo.GetHashCode\n  fullName: CallInfo.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Dynamic/CallInfo.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}