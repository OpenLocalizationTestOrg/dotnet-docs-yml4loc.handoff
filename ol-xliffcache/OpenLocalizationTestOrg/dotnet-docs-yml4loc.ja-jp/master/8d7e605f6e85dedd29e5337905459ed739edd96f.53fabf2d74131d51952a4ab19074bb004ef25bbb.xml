{"nodes":[{"content":"Abstract class that defines conversion behavior for serialization from an object representation.","nodes":[{"pos":[0,96],"content":"Abstract class that defines conversion behavior for serialization from an object representation.","nodes":[{"content":"Abstract class that defines conversion behavior for serialization from an object representation.","pos":[0,96]}]}],"pos":[1646,1743],"yaml":true},{"content":"The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.  If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared. Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type. A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.  \n  \n A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.  \n  \n> [!IMPORTANT]\n>  Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions. Any exceptions thrown could terminate serialization.  \n  \n <xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>. In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>. When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services. Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions. Failure to return a particular service from the context must also not throw any exceptions.  \n  \n In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly. For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).","nodes":[{"pos":[0,712],"content":"The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.  If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared. Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type. A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.","nodes":[{"content":"The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.","pos":[0,143]},{"content":"If a type converter (derived from <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>) does not meet these requirements in its <ph id=\"ph2\">`ConvertTo`</ph> implementations for string output, a custom <ph id=\"ph3\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> must be declared.","pos":[145,381],"source":"  If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared."},{"content":"Either the <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> should meet the requirements, or a null <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> should be associated with the type.","pos":[382,558],"source":" Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> is associated with a type by applying the <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph> attribute.","pos":[559,712],"source":" A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute."}]},{"pos":[719,874],"content":"A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.","nodes":[{"content":"A null <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> indicates the type converter should be ignored for convert-to-string conversions from the object graph.","pos":[0,155],"source":"A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph."}]},{"pos":[882,1047],"content":"[!IMPORTANT]\n Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions. Any exceptions thrown could terminate serialization.","leadings":["","> "],"nodes":[{"content":" Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions. Any exceptions thrown could terminate serialization.","pos":[13,163],"nodes":[{"content":"Implementation of <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> should avoid throwing exceptions.","pos":[1,97],"source":" Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions."},{"content":"Any exceptions thrown could terminate serialization.","pos":[98,150]}]}]},{"pos":[1054,1792],"content":"<xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>. In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>. When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services. Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions. Failure to return a particular service from the context must also not throw any exceptions.","nodes":[{"content":"<xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>. In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>. When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services. Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions. Failure to return a particular service from the context must also not throw any exceptions.","pos":[0,738],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Markup.IValueSerializerContext&gt;</ph> for a <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> and its APIs is analogous to <ph id=\"ph3\">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph> for a <ph id=\"ph4\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.","pos":[0,234],"source":"<xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>."},{"content":"In fact, <ph id=\"ph1\">&lt;xref:System.Windows.Markup.IValueSerializerContext&gt;</ph> inherits <ph id=\"ph2\">&lt;xref:System.ComponentModel.ITypeDescriptorContext&gt;</ph>.","pos":[235,358],"source":" In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>."},{"content":"When a <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.","pos":[359,535],"source":" When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services."},{"content":"Because of the general guidance that a <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> must not throw exceptions.","pos":[536,646],"source":" Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions."},{"content":"Failure to return a particular service from the context must also not throw any exceptions.","pos":[647,738]}]}]},{"pos":[1799,2182],"content":"In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly. For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).","nodes":[{"content":"In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.","pos":[0,104]},{"content":"In <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> is in the System.Xaml assembly.","pos":[105,241],"source":" In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Types Migrated from WPF to System.Xaml<ept id=\"p1\">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.","pos":[242,383],"source":" For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)."}]}],"pos":[1754,3948],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> class."}],"pos":[7443,7543],"yaml":true},{"content":"The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.","nodes":[{"pos":[0,150],"content":"The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.","nodes":[{"content":"The body of this constructor is empty; the <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> class does not contain any values that require initialization.","pos":[0,150],"source":"The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization."}]}],"pos":[7554,7705],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, determines whether the specified <xref href=\"System.String\"></xref> can be converted to an instance of the type that the implementation of <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> supports.","nodes":[{"pos":[0,243],"content":"When overridden in a derived class, determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> can be converted to an instance of the type that the implementation of <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> supports.","source":"When overridden in a derived class, determines whether the specified <xref href=\"System.String\"></xref> can be converted to an instance of the type that the implementation of <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> supports."}],"pos":[9083,9327],"yaml":true},{"content":"The base implementation always returns `false`.","nodes":[{"pos":[0,47],"content":"The base implementation always returns <ph id=\"ph1\">`false`</ph>.","source":"The base implementation always returns `false`."}],"pos":[9338,9386],"yaml":true,"extradata":"MT"},{"content":"The string to evaluate for conversion.","nodes":[{"pos":[0,38],"content":"The string to evaluate for conversion.","nodes":[{"content":"The string to evaluate for conversion.","pos":[0,38]}]}],"pos":[9598,9637],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[9732,9781],"yaml":true},{"content":"`true` if the value can be converted; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the value can be converted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value can be converted; otherwise, `false`."}],"pos":[9839,9899],"yaml":true},{"content":"When overridden in a derived class, determines whether the specified object can be converted into a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,135],"content":"When overridden in a derived class, determines whether the specified object can be converted into a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, determines whether the specified object can be converted into a <xref href=\"System.String\"></xref>."}],"pos":[11208,11344],"yaml":true},{"content":"The base implementation always returns `false`.","nodes":[{"pos":[0,47],"content":"The base implementation always returns <ph id=\"ph1\">`false`</ph>.","source":"The base implementation always returns `false`."}],"pos":[11355,11403],"yaml":true,"extradata":"MT"},{"content":"The object to evaluate for conversion.","nodes":[{"pos":[0,38],"content":"The object to evaluate for conversion.","nodes":[{"content":"The object to evaluate for conversion.","pos":[0,38]}]}],"pos":[11613,11652],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[11747,11796],"yaml":true},{"content":"`true` if the <code>value</code> can be converted into a <xref href=\"System.String\"></xref>; otherwise, `false.`","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> can be converted into a <ph id=\"ph3\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false.`</ph>","source":"`true` if the <code>value</code> can be converted into a <xref href=\"System.String\"></xref>; otherwise, `false.`"}],"pos":[11854,11969],"yaml":true},{"content":"When overridden in a derived class, converts a <xref href=\"System.String\"></xref> to an instance of the type that the implementation of <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> supports.","nodes":[{"pos":[0,204],"content":"When overridden in a derived class, converts a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> to an instance of the type that the implementation of <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> supports.","source":"When overridden in a derived class, converts a <xref href=\"System.String\"></xref> to an instance of the type that the implementation of <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> supports."}],"pos":[13270,13475],"yaml":true},{"content":"The base implementation always throws an exception.","nodes":[{"pos":[0,51],"content":"The base implementation always throws an exception.","nodes":[{"content":"The base implementation always throws an exception.","pos":[0,51]}]}],"pos":[13486,13538],"yaml":true,"extradata":"MT"},{"content":"The string to convert.","nodes":[{"pos":[0,22],"content":"The string to convert.","nodes":[{"content":"The string to convert.","pos":[0,22]}]}],"pos":[13749,13772],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[13867,13916],"yaml":true},{"content":"A new instance of the type that the implementation of <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> supports based on the supplied <code>value</code>.","nodes":[{"pos":[0,163],"content":"A new instance of the type that the implementation of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> supports based on the supplied <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A new instance of the type that the implementation of <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> supports based on the supplied <code>value</code>."}],"pos":[13973,14137],"yaml":true},{"content":"<code>value</code> cannot be converted.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> cannot be converted.","source":"<code>value</code> cannot be converted."}],"pos":[14322,14362],"yaml":true},{"content":"When overridden in a derived class, converts the specified object to a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,106],"content":"When overridden in a derived class, converts the specified object to a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"When overridden in a derived class, converts the specified object to a <xref href=\"System.String\"></xref>."}],"pos":[15564,15671],"yaml":true},{"content":"The base implementation always throws an exception.","nodes":[{"pos":[0,51],"content":"The base implementation always throws an exception.","nodes":[{"content":"The base implementation always throws an exception.","pos":[0,51]}]}],"pos":[15682,15734],"yaml":true,"extradata":"MT"},{"content":"The object to convert into a string.","nodes":[{"pos":[0,36],"content":"The object to convert into a string.","nodes":[{"content":"The object to convert into a string.","pos":[0,36]}]}],"pos":[15943,15980],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[16075,16124],"yaml":true},{"content":"A string representation of the specified object.","nodes":[{"pos":[0,48],"content":"A string representation of the specified object.","nodes":[{"content":"A string representation of the specified object.","pos":[0,48]}]}],"pos":[16181,16230],"yaml":true},{"content":"<code>value</code> cannot be converted.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> cannot be converted.","source":"<code>value</code> cannot be converted."}],"pos":[16413,16453],"yaml":true},{"content":"Returns an exception to throw when a conversion cannot be performed.","nodes":[{"pos":[0,68],"content":"Returns an exception to throw when a conversion cannot be performed.","nodes":[{"content":"Returns an exception to throw when a conversion cannot be performed.","pos":[0,68]}]}],"pos":[17490,17559],"yaml":true},{"content":"The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).  \n  \n The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message. The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.","nodes":[{"pos":[0,148],"content":"The actual <ph id=\"ph1\">`throw`</ph> keyword is not invoked by this method, therefore the typical usage is <ph id=\"ph2\">`throw GetConvertFromException`</ph> (with parameters provided).","source":"The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided)."},{"pos":[155,384],"content":"The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message. The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.","nodes":[{"content":"The specific exception returned is <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph>, with <ph id=\"ph2\">`value`</ph> passed in the exception message.","pos":[0,121],"source":"The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message."},{"content":"The pattern for usage is the same as for exception utilities in <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.","pos":[122,229],"source":" The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>."}]}],"pos":[17570,17959],"yaml":true,"extradata":"MT"},{"content":"The object that could not be converted.","nodes":[{"pos":[0,39],"content":"The object that could not be converted.","nodes":[{"content":"The object that could not be converted.","pos":[0,39]}]}],"pos":[18119,18159],"yaml":true},{"content":"An <xref href=\"System.Exception\"></xref> object for the exception to throw when a `ConvertFrom` conversion cannot be performed.","nodes":[{"pos":[0,127],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> object for the exception to throw when a <ph id=\"ph2\">`ConvertFrom`</ph> conversion cannot be performed.","source":"An <xref href=\"System.Exception\"></xref> object for the exception to throw when a `ConvertFrom` conversion cannot be performed."}],"pos":[18219,18347],"yaml":true},{"content":"Returns an exception to throw when a conversion cannot be performed.","nodes":[{"pos":[0,68],"content":"Returns an exception to throw when a conversion cannot be performed.","nodes":[{"content":"Returns an exception to throw when a conversion cannot be performed.","pos":[0,68]}]}],"pos":[19518,19587],"yaml":true},{"content":"The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).  \n  \n The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message. The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.","nodes":[{"pos":[0,153],"content":"The actual <ph id=\"ph1\">`throw`</ph> keyword is not invoked by this method, therefore the typical usage is <ph id=\"ph2\">`throw GetConvertToException`</ph> (with <ph id=\"ph3\">`value`</ph> parameter provided).","source":"The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided)."},{"pos":[160,389],"content":"The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message. The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.","nodes":[{"content":"The specific exception returned is <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph>, with <ph id=\"ph2\">`value`</ph> passed in the exception message.","pos":[0,121],"source":"The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message."},{"content":"The pattern for usage is the same as for exception utilities in <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.","pos":[122,229],"source":" The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>."}]}],"pos":[19598,19992],"yaml":true,"extradata":"MT"},{"content":"The object that could not be converted.","nodes":[{"pos":[0,39],"content":"The object that could not be converted.","nodes":[{"content":"The object that could not be converted.","pos":[0,39]}]}],"pos":[20172,20212],"yaml":true},{"content":"A type that represents the type the conversion was trying to convert to.","nodes":[{"pos":[0,72],"content":"A type that represents the type the conversion was trying to convert to.","nodes":[{"content":"A type that represents the type the conversion was trying to convert to.","pos":[0,72]}]}],"pos":[20281,20354],"yaml":true},{"content":"An <xref href=\"System.Exception\"></xref> object for the exception to throw when a `ConvertTo` conversion cannot be performed.","nodes":[{"pos":[0,125],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> object for the exception to throw when a <ph id=\"ph2\">`ConvertTo`</ph> conversion cannot be performed.","source":"An <xref href=\"System.Exception\"></xref> object for the exception to throw when a `ConvertTo` conversion cannot be performed."}],"pos":[20414,20540],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for a property, by passing a CLR property descriptor for the property.","nodes":[{"pos":[0,147],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> declared for a property, by passing a CLR property descriptor for the property.","source":"Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for a property, by passing a CLR property descriptor for the property."}],"pos":[21742,21890],"yaml":true},{"content":"A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration. The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type. `null` might be returned if no such serializer exists. `null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.  \n  \n Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>. This is done only in cases where all of the following are true:  \n  \n-   A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.  \n  \n-   The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.  \n  \n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \n  \n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \n  \n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \n  \n> [!NOTE]\n>  The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).","nodes":[{"pos":[0,753],"content":"A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration. The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type. `null` might be returned if no such serializer exists. `null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> for a property, or for a type that is used as the value for a property, is indicated by applying the <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph> attribute on the property or type declaration.","pos":[0,248],"source":"A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A&gt;</ph> method is a utility method that reads the CLR type system information and returns a new <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> class based on the attribute if found on the property, or then if found on the property's type.","pos":[249,546],"source":" The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type."},{"content":"<ph id=\"ph1\">`null`</ph> might be returned if no such serializer exists.","pos":[547,601],"source":"`null` might be returned if no such serializer exists."},{"content":"<ph id=\"ph1\">`null`</ph> might also be returned if a type or property is deliberately attributed with a null-value <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph>.","pos":[602,753],"source":"`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>."}]},{"pos":[760,1404],"content":"Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>. This is done only in cases where all of the following are true:","nodes":[{"content":"Another mode that <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A&gt;</ph> supports is returning the internal <ph id=\"ph2\">`TypeConverterValueSerializer`</ph> class, which is a <ph id=\"ph3\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> implementation that wraps a <ph id=\"ph4\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> and translates the <ph id=\"ph5\">`Convert`</ph> methods to <ph id=\"ph6\">`Convert*String`</ph> methods (for instance <ph id=\"ph7\">&lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName&gt;</ph> is called with input of the <ph id=\"ph8\">&lt;xref:System.String&gt;</ph> type, and translates to <ph id=\"ph9\">&lt;xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A&gt;</ph>.","pos":[0,580],"source":"Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>."},{"content":"This is done only in cases where all of the following are true:","pos":[581,644]}]},{"pos":[1414,1535],"content":"A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> is found on the relevant property, or the relevant property's type.","pos":[0,121],"source":"A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type."}]},{"pos":[1545,1634],"content":"The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.","nodes":[{"content":"The indicated <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> can be successfully constructed.","pos":[0,89],"source":"The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed."}]},{"pos":[1644,1841],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> returns <ph id=\"ph2\">`true`</ph> for <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName&gt;</ph>, called referencing the <ph id=\"ph4\">&lt;xref:System.String&gt;</ph> type.","source":"The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type."},{"pos":[1851,2051],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> returns <ph id=\"ph2\">`true`</ph> for <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=fullName&gt;</ph>, called referencing the <ph id=\"ph4\">&lt;xref:System.String&gt;</ph> type.","source":"The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type."},{"pos":[2061,2263],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> returns <ph id=\"ph2\">`true`</ph> for <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=fullName&gt;</ph>, called referencing the <ph id=\"ph4\">&lt;xref:System.String&gt;</ph> type.","source":"The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=fullName>, called referencing the <xref:System.String> type."},{"pos":[2271,2505],"content":"[!NOTE]\n The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).","leadings":["","> "],"nodes":[{"content":"The following are special cases: <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> types return a <ph id=\"ph2\">&lt;xref:System.Windows.Markup.DateTimeValueSerializer&gt;</ph>; <ph id=\"ph3\">&lt;xref:System.String&gt;</ph> types return an internal but functional serializer (<ph id=\"ph4\">`StringValueSerializer`</ph>).","pos":[9,232],"source":" The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`)."}]}],"pos":[21901,24424],"yaml":true,"extradata":"MT"},{"content":"The CLR property descriptor for the property to be serialized.","nodes":[{"pos":[0,62],"content":"The CLR property descriptor for the property to be serialized.","nodes":[{"content":"The CLR property descriptor for the property to be serialized.","pos":[0,62]}]}],"pos":[24680,24743],"yaml":true},{"content":"The serializer associated with the specified property. May return `null`.","nodes":[{"pos":[0,73],"content":"The serializer associated with the specified property. May return `null`.","nodes":[{"content":"The serializer associated with the specified property.","pos":[0,54]},{"content":"May return <ph id=\"ph1\">`null`</ph>.","pos":[55,73],"source":" May return `null`."}]}],"pos":[24824,24898],"yaml":true},{"content":"<code>descriptor</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;descriptor&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>descriptor</code> is `null`."}],"pos":[25082,25117],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for the specified type.","nodes":[{"pos":[0,100],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> declared for the specified type.","source":"Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for the specified type."}],"pos":[26100,26201],"yaml":true},{"content":"A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration. The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`. `null` might be returned if no such serializer exists. `null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.  \n  \n Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>. This is done only in cases where all of the following are true:  \n  \n-   A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.  \n  \n-   The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.  \n  \n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \n  \n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \n  \n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \n  \n> [!NOTE]\n>  The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).","nodes":[{"pos":[0,635],"content":"A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration. The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`. `null` might be returned if no such serializer exists. `null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> for a type is indicated by applying the <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph> attribute on the type declaration.","pos":[0,175],"source":"A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A&gt;</ph> method is a utility method that reads the CLR type system information and returns a new <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> class based on the attribute if found on the specified <ph id=\"ph3\">`type`</ph>.","pos":[176,440],"source":" The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`."},{"content":"<ph id=\"ph1\">`null`</ph> might be returned if no such serializer exists.","pos":[441,495],"source":"`null` might be returned if no such serializer exists."},{"content":"<ph id=\"ph1\">`null`</ph> might also be returned if a type is deliberately attributed with a null-value <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph>.","pos":[496,635],"source":"`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>."}]},{"pos":[642,1286],"content":"Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>. This is done only in cases where all of the following are true:","nodes":[{"content":"Another mode that <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A&gt;</ph> supports is returning the internal <ph id=\"ph2\">`TypeConverterValueSerializer`</ph> class, which is a <ph id=\"ph3\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> implementation that wraps a <ph id=\"ph4\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> and translates the <ph id=\"ph5\">`Convert`</ph> methods to <ph id=\"ph6\">`Convert*String`</ph> methods (for instance <ph id=\"ph7\">&lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName&gt;</ph> is called with input of the <ph id=\"ph8\">&lt;xref:System.String&gt;</ph> type, and translates to <ph id=\"ph9\">&lt;xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A&gt;</ph>.","pos":[0,580],"source":"Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>."},{"content":"This is done only in cases where all of the following are true:","pos":[581,644]}]},{"pos":[1296,1369],"content":"A <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> is found on <ph id=\"ph2\">`type`</ph>.","source":"A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`."},{"pos":[1379,1468],"content":"The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.","nodes":[{"content":"The indicated <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> can be successfully constructed.","pos":[0,89],"source":"The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed."}]},{"pos":[1478,1675],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> returns <ph id=\"ph2\">`true`</ph> for <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName&gt;</ph>, called referencing the <ph id=\"ph4\">&lt;xref:System.String&gt;</ph> type.","source":"The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type."},{"pos":[1685,1885],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> returns <ph id=\"ph2\">`true`</ph> for <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=fullName&gt;</ph>, called referencing the <ph id=\"ph4\">&lt;xref:System.String&gt;</ph> type.","source":"The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type."},{"pos":[1895,2097],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> returns <ph id=\"ph2\">`true`</ph> for <ph id=\"ph3\">&lt;xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=fullName&gt;</ph>, called referencing the <ph id=\"ph4\">&lt;xref:System.String&gt;</ph> type.","source":"The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=fullName>, called referencing the <xref:System.String> type."},{"pos":[2105,2339],"content":"[!NOTE]\n The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).","leadings":["","> "],"nodes":[{"content":"The following are special cases: <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> types return a <ph id=\"ph2\">&lt;xref:System.Windows.Markup.DateTimeValueSerializer&gt;</ph>; <ph id=\"ph3\">&lt;xref:System.String&gt;</ph> types return an internal but functional serializer (<ph id=\"ph4\">`StringValueSerializer`</ph>).","pos":[9,232],"source":" The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`)."}]}],"pos":[26212,28569],"yaml":true,"extradata":"MT"},{"content":"The type to get the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> for.","nodes":[{"pos":[0,83],"content":"The type to get the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> for.","source":"The type to get the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> for."}],"pos":[28748,28832],"yaml":true},{"content":"The serializer associated with the specified type. May return `null`.","nodes":[{"pos":[0,69],"content":"The serializer associated with the specified type. May return `null`.","nodes":[{"content":"The serializer associated with the specified type.","pos":[0,50]},{"content":"May return <ph id=\"ph1\">`null`</ph>.","pos":[51,69],"source":" May return `null`."}]}],"pos":[28913,28983],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[29167,29196],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for the specified property, using the specified context.","nodes":[{"pos":[0,133],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> declared for the specified property, using the specified context.","source":"Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for the specified property, using the specified context."}],"pos":[30521,30655],"yaml":true},{"content":"Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName>. The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.  \n  \n This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.  This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.  \n  \n If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.","nodes":[{"pos":[0,494],"content":"Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName>. The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.","nodes":[{"content":"Rather than relying purely on attributes reported in the CLR type system, this overload uses the <ph id=\"ph1\">`context`</ph> as a service, and calls the service's implementation of <ph id=\"ph2\">&lt;xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName&gt;</ph>.","pos":[0,266],"source":"Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName&gt;</ph> implementation would typically also rely on the <ph id=\"ph2\">`descriptor`</ph>, but might implement special behavior for certain contexts.","pos":[267,494],"source":" The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts."}]},{"pos":[501,749],"content":"This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.  This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.","nodes":[{"content":"This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.  This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.","pos":[0,248],"nodes":[{"content":"This method should be called when the caller has an available <ph id=\"ph1\">&lt;xref:System.Windows.Markup.IValueSerializerContext&gt;</ph> from a service.","pos":[0,130],"source":"This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service."},{"content":"This will ensure that the correct <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> is returned for the specific context.","pos":[132,248],"source":"  This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context."}]}]},{"pos":[756,1131],"content":"If the context returns <ph id=\"ph1\">`null`</ph> from its <ph id=\"ph2\">&lt;xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName&gt;</ph> for your specified <ph id=\"ph3\">`descriptor`</ph>, or if the context you specify is <ph id=\"ph4\">`null`</ph>, then behavior is identical to calling the <ph id=\"ph5\">&lt;xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29&gt;</ph> overload.","source":"If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload."}],"pos":[30666,31804],"yaml":true,"extradata":"MT"},{"content":"Descriptor for the property to be serialized.","nodes":[{"pos":[0,45],"content":"Descriptor for the property to be serialized.","nodes":[{"content":"Descriptor for the property to be serialized.","pos":[0,45]}]}],"pos":[32115,32161],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[32256,32305],"yaml":true},{"content":"The serializer associated with the specified property.","nodes":[{"pos":[0,54],"content":"The serializer associated with the specified property.","nodes":[{"content":"The serializer associated with the specified property.","pos":[0,54]}]}],"pos":[32386,32441],"yaml":true},{"content":"<code>descriptor</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;descriptor&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>descriptor</code> is `null`."}],"pos":[32625,32660],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for the specified type, using the specified context.","nodes":[{"pos":[0,129],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> declared for the specified type, using the specified context.","source":"Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for the specified type, using the specified context."}],"pos":[33856,33986],"yaml":true},{"content":"Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName>. The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.  \n  \n This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service. This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.  \n  \n If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.","nodes":[{"pos":[0,488],"content":"Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName>. The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.","nodes":[{"content":"Rather than relying purely on attributes reported in the CLR type system, this overload uses the <ph id=\"ph1\">`context`</ph> as a service, and calls the service's implementation of <ph id=\"ph2\">&lt;xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName&gt;</ph>.","pos":[0,266],"source":"Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName&gt;</ph> implementation would typically also rely on the <ph id=\"ph2\">`type`</ph>, but might implement special behavior for certain contexts.","pos":[267,488],"source":" The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts."}]},{"pos":[495,742],"content":"This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service. This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.","nodes":[{"content":"This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service. This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.","pos":[0,247],"nodes":[{"content":"This method should be called when the caller has an available <ph id=\"ph1\">&lt;xref:System.Windows.Markup.IValueSerializerContext&gt;</ph> from a service.","pos":[0,130],"source":"This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service."},{"content":"This will ensure that the correct <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> is returned for the specific context.","pos":[131,247],"source":" This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context."}]}]},{"pos":[749,1089],"content":"If the context returns <ph id=\"ph1\">`null`</ph> from its <ph id=\"ph2\">&lt;xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName&gt;</ph> for your specified <ph id=\"ph3\">`type`</ph>, or if the context you specify is <ph id=\"ph4\">`null`</ph>, then behavior is identical to calling the <ph id=\"ph5\">&lt;xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29&gt;</ph> overload.","source":"If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload."}],"pos":[33997,35093],"yaml":true,"extradata":"MT"},{"content":"The type to get the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> for.","nodes":[{"pos":[0,83],"content":"The type to get the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> for.","source":"The type to get the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> for."}],"pos":[35327,35411],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[35506,35555],"yaml":true},{"content":"The serializer associated with the specified type.","nodes":[{"pos":[0,50],"content":"The serializer associated with the specified type.","nodes":[{"content":"The serializer associated with the specified type.","pos":[0,50]}]}],"pos":[35636,35687],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[35871,35900],"yaml":true},{"content":"Gets an enumeration of the types referenced by the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref>.","nodes":[{"pos":[0,110],"content":"Gets an enumeration of the types referenced by the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an enumeration of the types referenced by the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref>."}],"pos":[37096,37207],"yaml":true},{"content":"Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.  This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.  \n  \n Overriding this method is an advanced scenario. Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.  \n  \n## WPF Usage Notes  \n The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expressions also have special internal handling.","nodes":[{"pos":[0,230],"content":"Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.  This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.","nodes":[{"content":"Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.  This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.","pos":[0,230],"nodes":[{"content":"Any types a <ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> converts should be included in the returned enumeration.","pos":[0,113],"source":"Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration."},{"content":"This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.","pos":[115,230]}]}]},{"pos":[237,477],"content":"Overriding this method is an advanced scenario. Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.","nodes":[{"content":"Overriding this method is an advanced scenario. Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.","pos":[0,240],"nodes":[{"content":"Overriding this method is an advanced scenario.","pos":[0,47]},{"content":"Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.","pos":[48,240]}]}]},{"pos":[486,501],"content":"WPF Usage Notes","linkify":"WPF Usage Notes","nodes":[{"content":"WPF Usage Notes","pos":[0,15]}]},{"pos":[505,910],"content":"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expressions also have special internal handling.","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system implements an internal value serializer that overrides <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A&gt;</ph> because a dependency property has a concept that it can have added owners.","pos":[0,284],"source":"The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners."},{"content":"<ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> expressions also have special internal handling.","pos":[285,405],"source":"[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expressions also have special internal handling."}]}],"pos":[37218,38136],"yaml":true,"extradata":"MT"},{"content":"The value being serialized.","nodes":[{"pos":[0,27],"content":"The value being serialized.","nodes":[{"content":"The value being serialized.","pos":[0,27]}]}],"pos":[38382,38410],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[38505,38554],"yaml":true},{"content":"The types converted by this serializer.","nodes":[{"pos":[0,39],"content":"The types converted by this serializer.","nodes":[{"content":"The types converted by this serializer.","pos":[0,39]}]}],"pos":[38649,38689],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.ValueSerializer\n  commentId: T:System.Windows.Markup.ValueSerializer\n  id: ValueSerializer\n  children:\n  - System.Windows.Markup.ValueSerializer.#ctor\n  - System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  - System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  - System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  - System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  - System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)\n  - System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)\n  - System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)\n  - System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)\n  - System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)\n  - System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)\n  - System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)\n  langs:\n  - csharp\n  name: ValueSerializer\n  nameWithType: ValueSerializer\n  fullName: System.Windows.Markup.ValueSerializer\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Abstract class that defines conversion behavior for serialization from an object representation.\n  remarks: \"The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.  If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared. Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type. A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.  \\n  \\n A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.  \\n  \\n> [!IMPORTANT]\\n>  Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions. Any exceptions thrown could terminate serialization.  \\n  \\n <xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>. In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>. When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services. Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions. Failure to return a particular service from the context must also not throw any exceptions.  \\n  \\n In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly. For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).\"\n  syntax:\n    content: public abstract class ValueSerializer\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - Microsoft.VisualBasic.Activities.XamlIntegration.VisualBasicSettingsValueSerializer\n  - System.Activities.XamlIntegration.ActivityWithResultValueSerializer\n  - System.Activities.XamlIntegration.ArgumentValueSerializer\n  - System.Windows.Converters.Int32RectValueSerializer\n  - System.Windows.Converters.PointValueSerializer\n  - System.Windows.Converters.RectValueSerializer\n  - System.Windows.Converters.SizeValueSerializer\n  - System.Windows.Converters.VectorValueSerializer\n  - System.Windows.Input.KeyGestureValueSerializer\n  - System.Windows.Input.KeyValueSerializer\n  - System.Windows.Input.ModifierKeysValueSerializer\n  - System.Windows.Input.MouseActionValueSerializer\n  - System.Windows.Input.MouseGestureValueSerializer\n  - System.Windows.Markup.DateTimeValueSerializer\n  - System.Windows.Media.FontFamilyValueSerializer\n  - System.Windows.Media.ImageSourceValueSerializer\n  - System.Windows.Media.Converters.BrushValueSerializer\n  - System.Windows.Media.Converters.CacheModeValueSerializer\n  - System.Windows.Media.Converters.DoubleCollectionValueSerializer\n  - System.Windows.Media.Converters.GeometryValueSerializer\n  - System.Windows.Media.Converters.Int32CollectionValueSerializer\n  - System.Windows.Media.Converters.MatrixValueSerializer\n  - System.Windows.Media.Converters.PathFigureCollectionValueSerializer\n  - System.Windows.Media.Converters.PointCollectionValueSerializer\n  - System.Windows.Media.Converters.TransformValueSerializer\n  - System.Windows.Media.Converters.VectorCollectionValueSerializer\n  - System.Windows.Media.Media3D.Converters.Matrix3DValueSerializer\n  - System.Windows.Media.Media3D.Converters.Point3DCollectionValueSerializer\n  - System.Windows.Media.Media3D.Converters.Point3DValueSerializer\n  - System.Windows.Media.Media3D.Converters.Point4DValueSerializer\n  - System.Windows.Media.Media3D.Converters.QuaternionValueSerializer\n  - System.Windows.Media.Media3D.Converters.Rect3DValueSerializer\n  - System.Windows.Media.Media3D.Converters.Size3DValueSerializer\n  - System.Windows.Media.Media3D.Converters.Vector3DCollectionValueSerializer\n  - System.Windows.Media.Media3D.Converters.Vector3DValueSerializer\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.#ctor\n  commentId: M:System.Windows.Markup.ValueSerializer.#ctor\n  id: '#ctor'\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: ValueSerializer()\n  nameWithType: ValueSerializer.ValueSerializer()\n  fullName: ValueSerializer.ValueSerializer()\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> class.\n  remarks: The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.\n  syntax:\n    content: protected ValueSerializer ();\n    parameters: []\n  overload: System.Windows.Markup.ValueSerializer.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  id: CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: CanConvertFromString(String, IValueSerializerContext)\n  nameWithType: ValueSerializer.CanConvertFromString(String, IValueSerializerContext)\n  fullName: ValueSerializer.CanConvertFromString(String, IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: When overridden in a derived class, determines whether the specified <xref href=\"System.String\"></xref> can be converted to an instance of the type that the implementation of <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> supports.\n  remarks: The base implementation always returns `false`.\n  syntax:\n    content: public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to evaluate for conversion.\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if the value can be converted; otherwise, `false`.'\n  overload: System.Windows.Markup.ValueSerializer.CanConvertFromString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  id: CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: CanConvertToString(Object, IValueSerializerContext)\n  nameWithType: ValueSerializer.CanConvertToString(Object, IValueSerializerContext)\n  fullName: ValueSerializer.CanConvertToString(Object, IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: When overridden in a derived class, determines whether the specified object can be converted into a <xref href=\"System.String\"></xref>.\n  remarks: The base implementation always returns `false`.\n  syntax:\n    content: public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to evaluate for conversion.\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>value</code> can be converted into a <xref href=\"System.String\"></xref>; otherwise, `false.`'\n  overload: System.Windows.Markup.ValueSerializer.CanConvertToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  id: ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: ConvertFromString(String, IValueSerializerContext)\n  nameWithType: ValueSerializer.ConvertFromString(String, IValueSerializerContext)\n  fullName: ValueSerializer.ConvertFromString(String, IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: When overridden in a derived class, converts a <xref href=\"System.String\"></xref> to an instance of the type that the implementation of <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> supports.\n  remarks: The base implementation always throws an exception.\n  syntax:\n    content: public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: value\n      type: System.String\n      description: The string to convert.\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.Object\n      description: A new instance of the type that the implementation of <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> supports based on the supplied <code>value</code>.\n  overload: System.Windows.Markup.ValueSerializer.ConvertFromString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>value</code> cannot be converted.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  id: ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: ConvertToString(Object, IValueSerializerContext)\n  nameWithType: ValueSerializer.ConvertToString(Object, IValueSerializerContext)\n  fullName: ValueSerializer.ConvertToString(Object, IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: When overridden in a derived class, converts the specified object to a <xref href=\"System.String\"></xref>.\n  remarks: The base implementation always throws an exception.\n  syntax:\n    content: public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to convert into a string.\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.String\n      description: A string representation of the specified object.\n  overload: System.Windows.Markup.ValueSerializer.ConvertToString*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>value</code> cannot be converted.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)\n  commentId: M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)\n  id: GetConvertFromException(System.Object)\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: GetConvertFromException(Object)\n  nameWithType: ValueSerializer.GetConvertFromException(Object)\n  fullName: ValueSerializer.GetConvertFromException(Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Returns an exception to throw when a conversion cannot be performed.\n  remarks: \"The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).  \\n  \\n The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message. The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.\"\n  syntax:\n    content: protected Exception GetConvertFromException (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object that could not be converted.\n    return:\n      type: System.Exception\n      description: An <xref href=\"System.Exception\"></xref> object for the exception to throw when a `ConvertFrom` conversion cannot be performed.\n  overload: System.Windows.Markup.ValueSerializer.GetConvertFromException*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)\n  commentId: M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)\n  id: GetConvertToException(System.Object,System.Type)\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: GetConvertToException(Object, Type)\n  nameWithType: ValueSerializer.GetConvertToException(Object, Type)\n  fullName: ValueSerializer.GetConvertToException(Object, Type)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Returns an exception to throw when a conversion cannot be performed.\n  remarks: \"The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).  \\n  \\n The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message. The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.\"\n  syntax:\n    content: protected Exception GetConvertToException (object value, Type destinationType);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object that could not be converted.\n    - id: destinationType\n      type: System.Type\n      description: A type that represents the type the conversion was trying to convert to.\n    return:\n      type: System.Exception\n      description: An <xref href=\"System.Exception\"></xref> object for the exception to throw when a `ConvertTo` conversion cannot be performed.\n  overload: System.Windows.Markup.ValueSerializer.GetConvertToException*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)\n  commentId: M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)\n  id: GetSerializerFor(System.ComponentModel.PropertyDescriptor)\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: GetSerializerFor(PropertyDescriptor)\n  nameWithType: ValueSerializer.GetSerializerFor(PropertyDescriptor)\n  fullName: ValueSerializer.GetSerializerFor(PropertyDescriptor)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for a property, by passing a CLR property descriptor for the property.\n  remarks: \"A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration. The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type. `null` might be returned if no such serializer exists. `null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.  \\n  \\n Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>. This is done only in cases where all of the following are true:  \\n  \\n-   A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.  \\n  \\n-   The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.  \\n  \\n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \\n  \\n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \\n  \\n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \\n  \\n> [!NOTE]\\n>  The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).\"\n  syntax:\n    content: public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);\n    parameters:\n    - id: descriptor\n      type: System.ComponentModel.PropertyDescriptor\n      description: The CLR property descriptor for the property to be serialized.\n    return:\n      type: System.Windows.Markup.ValueSerializer\n      description: The serializer associated with the specified property. May return `null`.\n  overload: System.Windows.Markup.ValueSerializer.GetSerializerFor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>descriptor</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)\n  commentId: M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)\n  id: GetSerializerFor(System.Type)\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: GetSerializerFor(Type)\n  nameWithType: ValueSerializer.GetSerializerFor(Type)\n  fullName: ValueSerializer.GetSerializerFor(Type)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for the specified type.\n  remarks: \"A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration. The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`. `null` might be returned if no such serializer exists. `null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.  \\n  \\n Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>. This is done only in cases where all of the following are true:  \\n  \\n-   A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.  \\n  \\n-   The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.  \\n  \\n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \\n  \\n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \\n  \\n-   The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=fullName>, called referencing the <xref:System.String> type.  \\n  \\n> [!NOTE]\\n>  The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).\"\n  syntax:\n    content: public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to get the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> for.\n    return:\n      type: System.Windows.Markup.ValueSerializer\n      description: The serializer associated with the specified type. May return `null`.\n  overload: System.Windows.Markup.ValueSerializer.GetSerializerFor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)\n  id: GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: GetSerializerFor(PropertyDescriptor, IValueSerializerContext)\n  nameWithType: ValueSerializer.GetSerializerFor(PropertyDescriptor, IValueSerializerContext)\n  fullName: ValueSerializer.GetSerializerFor(PropertyDescriptor, IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for the specified property, using the specified context.\n  remarks: \"Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName>. The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.  \\n  \\n This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.  This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.  \\n  \\n If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.\"\n  syntax:\n    content: public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: descriptor\n      type: System.ComponentModel.PropertyDescriptor\n      description: Descriptor for the property to be serialized.\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.Windows.Markup.ValueSerializer\n      description: The serializer associated with the specified property.\n  overload: System.Windows.Markup.ValueSerializer.GetSerializerFor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>descriptor</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)\n  id: GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: GetSerializerFor(Type, IValueSerializerContext)\n  nameWithType: ValueSerializer.GetSerializerFor(Type, IValueSerializerContext)\n  fullName: ValueSerializer.GetSerializerFor(Type, IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Gets the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> declared for the specified type, using the specified context.\n  remarks: \"Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName>. The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.  \\n  \\n This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service. This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.  \\n  \\n If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=fullName> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.\"\n  syntax:\n    content: public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to get the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> for.\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.Windows.Markup.ValueSerializer\n      description: The serializer associated with the specified type.\n  overload: System.Windows.Markup.ValueSerializer.GetSerializerFor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)\n  commentId: M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)\n  id: TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  langs:\n  - csharp\n  name: TypeReferences(Object, IValueSerializerContext)\n  nameWithType: ValueSerializer.TypeReferences(Object, IValueSerializerContext)\n  fullName: ValueSerializer.TypeReferences(Object, IValueSerializerContext)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Gets an enumeration of the types referenced by the <xref href=\"System.Windows.Markup.ValueSerializer\"></xref>.\n  remarks: \"Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.  This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.  \\n  \\n Overriding this method is an advanced scenario. Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.  \\n  \\n## WPF Usage Notes  \\n The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expressions also have special internal handling.\"\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<Type> TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value being serialized.\n    - id: context\n      type: System.Windows.Markup.IValueSerializerContext\n      description: Context information that is used for conversion.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: The types converted by this serializer.\n  overload: System.Windows.Markup.ValueSerializer.TypeReferences*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Windows.Markup.ValueSerializer.#ctor\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: ValueSerializer()\n  nameWithType: ValueSerializer.ValueSerializer()\n  fullName: ValueSerializer.ValueSerializer()\n- uid: System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: CanConvertFromString(String, IValueSerializerContext)\n  nameWithType: ValueSerializer.CanConvertFromString(String, IValueSerializerContext)\n  fullName: ValueSerializer.CanConvertFromString(String, IValueSerializerContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Markup.IValueSerializerContext\n  parent: System.Windows.Markup\n  isExternal: false\n  name: IValueSerializerContext\n  nameWithType: IValueSerializerContext\n  fullName: System.Windows.Markup.IValueSerializerContext\n- uid: System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: CanConvertToString(Object, IValueSerializerContext)\n  nameWithType: ValueSerializer.CanConvertToString(Object, IValueSerializerContext)\n  fullName: ValueSerializer.CanConvertToString(Object, IValueSerializerContext)\n- uid: System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: ConvertFromString(String, IValueSerializerContext)\n  nameWithType: ValueSerializer.ConvertFromString(String, IValueSerializerContext)\n  fullName: ValueSerializer.ConvertFromString(String, IValueSerializerContext)\n- uid: System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: ConvertToString(Object, IValueSerializerContext)\n  nameWithType: ValueSerializer.ConvertToString(Object, IValueSerializerContext)\n  fullName: ValueSerializer.ConvertToString(Object, IValueSerializerContext)\n- uid: System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: ValueSerializer.GetConvertFromException(Object)\n  fullName: ValueSerializer.GetConvertFromException(Object)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: ValueSerializer.GetConvertToException(Object, Type)\n  fullName: ValueSerializer.GetConvertToException(Object, Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetSerializerFor(PropertyDescriptor)\n  nameWithType: ValueSerializer.GetSerializerFor(PropertyDescriptor)\n  fullName: ValueSerializer.GetSerializerFor(PropertyDescriptor)\n- uid: System.Windows.Markup.ValueSerializer\n  parent: System.Windows.Markup\n  isExternal: false\n  name: ValueSerializer\n  nameWithType: ValueSerializer\n  fullName: System.Windows.Markup.ValueSerializer\n- uid: System.ComponentModel.PropertyDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptor\n  nameWithType: PropertyDescriptor\n  fullName: System.ComponentModel.PropertyDescriptor\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetSerializerFor(Type)\n  nameWithType: ValueSerializer.GetSerializerFor(Type)\n  fullName: ValueSerializer.GetSerializerFor(Type)\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetSerializerFor(PropertyDescriptor, IValueSerializerContext)\n  nameWithType: ValueSerializer.GetSerializerFor(PropertyDescriptor, IValueSerializerContext)\n  fullName: ValueSerializer.GetSerializerFor(PropertyDescriptor, IValueSerializerContext)\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetSerializerFor(Type, IValueSerializerContext)\n  nameWithType: ValueSerializer.GetSerializerFor(Type, IValueSerializerContext)\n  fullName: ValueSerializer.GetSerializerFor(Type, IValueSerializerContext)\n- uid: System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: TypeReferences(Object, IValueSerializerContext)\n  nameWithType: ValueSerializer.TypeReferences(Object, IValueSerializerContext)\n  fullName: ValueSerializer.TypeReferences(Object, IValueSerializerContext)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Type>\n  nameWithType: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Markup.ValueSerializer.#ctor*\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: ValueSerializer\n  nameWithType: ValueSerializer.ValueSerializer\n  fullName: ValueSerializer.ValueSerializer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n- uid: System.Windows.Markup.ValueSerializer.CanConvertFromString*\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: CanConvertFromString\n  nameWithType: ValueSerializer.CanConvertFromString\n  fullName: ValueSerializer.CanConvertFromString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n- uid: System.Windows.Markup.ValueSerializer.CanConvertToString*\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: CanConvertToString\n  nameWithType: ValueSerializer.CanConvertToString\n  fullName: ValueSerializer.CanConvertToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n- uid: System.Windows.Markup.ValueSerializer.ConvertFromString*\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: ConvertFromString\n  nameWithType: ValueSerializer.ConvertFromString\n  fullName: ValueSerializer.ConvertFromString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n- uid: System.Windows.Markup.ValueSerializer.ConvertToString*\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: ConvertToString\n  nameWithType: ValueSerializer.ConvertToString\n  fullName: ValueSerializer.ConvertToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n- uid: System.Windows.Markup.ValueSerializer.GetConvertFromException*\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetConvertFromException\n  nameWithType: ValueSerializer.GetConvertFromException\n  fullName: ValueSerializer.GetConvertFromException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n- uid: System.Windows.Markup.ValueSerializer.GetConvertToException*\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetConvertToException\n  nameWithType: ValueSerializer.GetConvertToException\n  fullName: ValueSerializer.GetConvertToException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n- uid: System.Windows.Markup.ValueSerializer.GetSerializerFor*\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: GetSerializerFor\n  nameWithType: ValueSerializer.GetSerializerFor\n  fullName: ValueSerializer.GetSerializerFor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n- uid: System.Windows.Markup.ValueSerializer.TypeReferences*\n  parent: System.Windows.Markup.ValueSerializer\n  isExternal: false\n  name: TypeReferences\n  nameWithType: ValueSerializer.TypeReferences\n  fullName: ValueSerializer.TypeReferences\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/ValueSerializer.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}