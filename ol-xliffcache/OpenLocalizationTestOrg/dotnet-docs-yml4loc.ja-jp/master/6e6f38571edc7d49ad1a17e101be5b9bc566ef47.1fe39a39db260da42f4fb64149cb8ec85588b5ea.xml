{"nodes":[{"content":"Converts a <xref href=\"System.Xaml.XamlType\"></xref> object to and from a string that represents the type name. This functionality is used for XAML extensibility by markup definitions, via <xref href=\"System.Windows.Markup.PropertyDefinition\"></xref>.","nodes":[{"pos":[0,251],"content":"Converts a <xref href=\"System.Xaml.XamlType\"></xref> object to and from a string that represents the type name. This functionality is used for XAML extensibility by markup definitions, via <xref href=\"System.Windows.Markup.PropertyDefinition\"></xref>.","nodes":[{"content":"Converts a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> object to and from a string that represents the type name.","pos":[0,111],"source":"Converts a <xref href=\"System.Xaml.XamlType\"></xref> object to and from a string that represents the type name."},{"content":"This functionality is used for XAML extensibility by markup definitions, via <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.PropertyDefinition\"&gt;&lt;/xref&gt;</ph>.","pos":[112,251],"source":" This functionality is used for XAML extensibility by markup definitions, via <xref href=\"System.Windows.Markup.PropertyDefinition\"></xref>."}]}],"pos":[1003,1255],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.Schema.XamlTypeTypeConverter\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlTypeTypeConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xaml.Schema.XamlTypeTypeConverter\"></xref> class."}],"pos":[5920,6023],"yaml":true},{"content":"Determines whether an object of the specified type can be converted to an instance of <xref href=\"System.Xaml.XamlType\"></xref>, using the specified context.","nodes":[{"pos":[0,157],"content":"Determines whether an object of the specified type can be converted to an instance of <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>, using the specified context.","source":"Determines whether an object of the specified type can be converted to an instance of <xref href=\"System.Xaml.XamlType\"></xref>, using the specified context."}],"pos":[7374,7532],"yaml":true},{"content":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `sourceType` inputs return `false`.","nodes":[{"pos":[0,225],"content":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `sourceType` inputs return `false`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlTypeTypeConverter&gt;</ph> class only converts an instance of <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph> to and from a <ph id=\"ph3\">&lt;xref:System.String&gt;</ph> (or <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType&gt;</ph>).","pos":[0,183],"source":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>)."},{"content":"Other <ph id=\"ph1\">`sourceType`</ph> inputs return <ph id=\"ph2\">`false`</ph>.","pos":[184,225],"source":" Other `sourceType` inputs return `false`."}]}],"pos":[7543,7769],"yaml":true,"extradata":"MT"},{"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"pos":[0,108],"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]}],"pos":[8011,8120],"yaml":true},{"content":"The type being evaluated for conversion.","nodes":[{"pos":[0,40],"content":"The type being evaluated for conversion.","nodes":[{"content":"The type being evaluated for conversion.","pos":[0,40]}]}],"pos":[8184,8225],"yaml":true},{"content":"`true` if this converter can perform the operation; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if this converter can perform the operation; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter can perform the operation; otherwise, `false`."}],"pos":[8283,8357],"yaml":true},{"content":"Determines whether an instance of <xref href=\"System.Xaml.XamlType\"></xref> can be converted to the specified type, using the specified context.","nodes":[{"pos":[0,144],"content":"Determines whether an instance of <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> can be converted to the specified type, using the specified context.","source":"Determines whether an instance of <xref href=\"System.Xaml.XamlType\"></xref> can be converted to the specified type, using the specified context."}],"pos":[9630,9775],"yaml":true},{"content":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `destinationType` inputs return `false`.","nodes":[{"pos":[0,230],"content":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `destinationType` inputs return `false`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlTypeTypeConverter&gt;</ph> class only converts an instance of <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph> to and from a <ph id=\"ph3\">&lt;xref:System.String&gt;</ph> (or <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType&gt;</ph>).","pos":[0,183],"source":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>)."},{"content":"Other <ph id=\"ph1\">`destinationType`</ph> inputs return <ph id=\"ph2\">`false`</ph>.","pos":[184,230],"source":" Other `destinationType` inputs return `false`."}]}],"pos":[9786,10017],"yaml":true,"extradata":"MT"},{"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"pos":[0,108],"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]}],"pos":[10262,10371],"yaml":true},{"content":"The type being evaluated for conversion.","nodes":[{"pos":[0,40],"content":"The type being evaluated for conversion.","nodes":[{"content":"The type being evaluated for conversion.","pos":[0,40]}]}],"pos":[10440,10481],"yaml":true},{"content":"`true` if this converter can perform the operation; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if this converter can perform the operation; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this converter can perform the operation; otherwise, `false`."}],"pos":[10539,10613],"yaml":true},{"content":"Attempts to convert the specified object to a <xref href=\"System.Xaml.XamlType\"></xref>, using the specified context.","nodes":[{"pos":[0,117],"content":"Attempts to convert the specified object to a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph>, using the specified context.","source":"Attempts to convert the specified object to a <xref href=\"System.Xaml.XamlType\"></xref>, using the specified context."}],"pos":[12028,12146],"yaml":true},{"content":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `value` types throw an exception.","nodes":[{"pos":[0,223],"content":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `value` types throw an exception.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlTypeTypeConverter&gt;</ph> class only converts an instance of <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph> to and from a <ph id=\"ph3\">&lt;xref:System.String&gt;</ph> (or <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType&gt;</ph>).","pos":[0,183],"source":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>)."},{"content":"Other <ph id=\"ph1\">`value`</ph> types throw an exception.","pos":[184,223],"source":" Other `value` types throw an exception."}]}],"pos":[12157,12381],"yaml":true,"extradata":"MT"},{"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"pos":[0,108],"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]}],"pos":[12661,12770],"yaml":true},{"content":"Culture specific information.","nodes":[{"pos":[0,29],"content":"Culture specific information.","nodes":[{"content":"Culture specific information.","pos":[0,29]}]}],"pos":[12852,12882],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[12943,12966],"yaml":true},{"content":"The converted object.","nodes":[{"pos":[0,21],"content":"The converted object.","nodes":[{"content":"The converted object.","pos":[0,21]}]}],"pos":[13023,13045],"yaml":true},{"content":"<code>value</code> cannot be converted.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> cannot be converted.","source":"<code>value</code> cannot be converted."}],"pos":[13227,13267],"yaml":true},{"content":"Attempts to convert a <xref href=\"System.Xaml.XamlType\"></xref> to the specified type, using the specified context.","nodes":[{"pos":[0,115],"content":"Attempts to convert a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> to the specified type, using the specified context.","source":"Attempts to convert a <xref href=\"System.Xaml.XamlType\"></xref> to the specified type, using the specified context."}],"pos":[14640,14756],"yaml":true},{"content":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `value` types or `destinationType` inputs throw an exception.","nodes":[{"pos":[0,251],"content":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `value` types or `destinationType` inputs throw an exception.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlTypeTypeConverter&gt;</ph> class only converts an instance of <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph> to and from a <ph id=\"ph3\">&lt;xref:System.String&gt;</ph> (or <ph id=\"ph4\">&lt;xref:System.Xaml.XamlType&gt;</ph>).","pos":[0,183],"source":"The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>)."},{"content":"Other <ph id=\"ph1\">`value`</ph> types or <ph id=\"ph2\">`destinationType`</ph> inputs throw an exception.","pos":[184,251],"source":" Other `value` types or `destinationType` inputs throw an exception."}]}],"pos":[14767,15019],"yaml":true,"extradata":"MT"},{"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"pos":[0,108],"content":"A format context that provides information about the environment from which this converter is being invoked.","nodes":[{"content":"A format context that provides information about the environment from which this converter is being invoked.","pos":[0,108]}]}],"pos":[15319,15428],"yaml":true},{"content":"Culture specific information.","nodes":[{"pos":[0,29],"content":"Culture specific information.","nodes":[{"content":"Culture specific information.","pos":[0,29]}]}],"pos":[15510,15540],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[15601,15624],"yaml":true},{"content":"The type to convert the object to.","nodes":[{"pos":[0,34],"content":"The type to convert the object to.","nodes":[{"content":"The type to convert the object to.","pos":[0,34]}]}],"pos":[15693,15728],"yaml":true},{"content":"The converted object.","nodes":[{"pos":[0,21],"content":"The converted object.","nodes":[{"content":"The converted object.","pos":[0,21]}]}],"pos":[15785,15807],"yaml":true},{"content":"<code>value</code> cannot be converted.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> cannot be converted.","source":"<code>value</code> cannot be converted."}],"pos":[15987,16027],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.Schema.XamlTypeTypeConverter\n  commentId: T:System.Xaml.Schema.XamlTypeTypeConverter\n  id: XamlTypeTypeConverter\n  children:\n  - System.Xaml.Schema.XamlTypeTypeConverter.#ctor\n  - System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: XamlTypeTypeConverter\n  nameWithType: XamlTypeTypeConverter\n  fullName: System.Xaml.Schema.XamlTypeTypeConverter\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Converts a <xref href=\"System.Xaml.XamlType\"></xref> object to and from a string that represents the type name. This functionality is used for XAML extensibility by markup definitions, via <xref href=\"System.Windows.Markup.PropertyDefinition\"></xref>.\n  syntax:\n    content: 'public class XamlTypeTypeConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeTypeConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.#ctor\n  commentId: M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor\n  id: '#ctor'\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  langs:\n  - csharp\n  name: XamlTypeTypeConverter()\n  nameWithType: XamlTypeTypeConverter.XamlTypeTypeConverter()\n  fullName: XamlTypeTypeConverter.XamlTypeTypeConverter()\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.Schema.XamlTypeTypeConverter\"></xref> class.\n  syntax:\n    content: public XamlTypeTypeConverter ();\n    parameters: []\n  overload: System.Xaml.Schema.XamlTypeTypeConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeTypeConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: XamlTypeTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: XamlTypeTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Determines whether an object of the specified type can be converted to an instance of <xref href=\"System.Xaml.XamlType\"></xref>, using the specified context.\n  remarks: The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `sourceType` inputs return `false`.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: sourceType\n      type: System.Type\n      description: The type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter can perform the operation; otherwise, `false`.'\n  overload: System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeTypeConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: XamlTypeTypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: XamlTypeTypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Determines whether an instance of <xref href=\"System.Xaml.XamlType\"></xref> can be converted to the specified type, using the specified context.\n  remarks: The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `destinationType` inputs return `false`.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: destinationType\n      type: System.Type\n      description: The type being evaluated for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if this converter can perform the operation; otherwise, `false`.'\n  overload: System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeTypeConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: XamlTypeTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: XamlTypeTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Attempts to convert the specified object to a <xref href=\"System.Xaml.XamlType\"></xref>, using the specified context.\n  remarks: The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `value` types throw an exception.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Culture specific information.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: The converted object.\n  overload: System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>value</code> cannot be converted.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeTypeConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: XamlTypeTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: XamlTypeTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml.Schema\n  summary: Attempts to convert a <xref href=\"System.Xaml.XamlType\"></xref> to the specified type, using the specified context.\n  remarks: The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>). Other `value` types or `destinationType` inputs throw an exception.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: A format context that provides information about the environment from which this converter is being invoked.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Culture specific information.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert the object to.\n    return:\n      type: System.Object\n      description: The converted object.\n  overload: System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>value</code> cannot be converted.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeTypeConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.#ctor\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  isExternal: false\n  name: XamlTypeTypeConverter()\n  nameWithType: XamlTypeTypeConverter.XamlTypeTypeConverter()\n  fullName: XamlTypeTypeConverter.XamlTypeTypeConverter()\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: XamlTypeTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: XamlTypeTypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: XamlTypeTypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: XamlTypeTypeConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: XamlTypeTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: XamlTypeTypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: XamlTypeTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: XamlTypeTypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.#ctor*\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  isExternal: false\n  name: XamlTypeTypeConverter\n  nameWithType: XamlTypeTypeConverter.XamlTypeTypeConverter\n  fullName: XamlTypeTypeConverter.XamlTypeTypeConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeTypeConverter.xml\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom*\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: XamlTypeTypeConverter.CanConvertFrom\n  fullName: XamlTypeTypeConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeTypeConverter.xml\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo*\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: XamlTypeTypeConverter.CanConvertTo\n  fullName: XamlTypeTypeConverter.CanConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeTypeConverter.xml\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom*\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: XamlTypeTypeConverter.ConvertFrom\n  fullName: XamlTypeTypeConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeTypeConverter.xml\n- uid: System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo*\n  parent: System.Xaml.Schema.XamlTypeTypeConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: XamlTypeTypeConverter.ConvertTo\n  fullName: XamlTypeTypeConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeTypeConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}