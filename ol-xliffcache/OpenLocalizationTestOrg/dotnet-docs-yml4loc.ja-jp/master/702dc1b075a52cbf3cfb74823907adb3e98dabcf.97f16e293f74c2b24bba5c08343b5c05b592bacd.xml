{"nodes":[{"content":"Specifies the type of file access requested.","nodes":[{"pos":[0,44],"content":"Specifies the type of file access requested.","nodes":[{"content":"Specifies the type of file access requested.","pos":[0,44]}]}],"pos":[859,904],"yaml":true},{"content":"This enumeration is used with the <xref:System.Security.Permissions.FileIOPermission> class.  \n  \n> [!NOTE]\n>  Although NoAccess and AllAccess are members of <xref:System.Security.Permissions.FileIOPermissionAccess.NoAccess>, they are not valid for use as the parameter for <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> because they describe no file access types or all file access types, respectively, and <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> expects a single file access type.  \n  \n> [!NOTE]\n>  Giving Write access to an assembly is similar to granting it Full Trust. If an application should not write to the file system it should not have Write access.","nodes":[{"pos":[0,92],"content":"This enumeration is used with the <xref:System.Security.Permissions.FileIOPermission> class.","nodes":[{"content":"This enumeration is used with the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> class.","pos":[0,92],"source":"This enumeration is used with the <xref:System.Security.Permissions.FileIOPermission> class."}]},{"pos":[100,529],"content":"[!NOTE]\n Although NoAccess and AllAccess are members of <xref:System.Security.Permissions.FileIOPermissionAccess.NoAccess>, they are not valid for use as the parameter for <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> because they describe no file access types or all file access types, respectively, and <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> expects a single file access type.","leadings":["","> "],"nodes":[{"content":"Although NoAccess and AllAccess are members of <ph id=\"ph1\">&lt;xref:System.Security.Permissions.FileIOPermissionAccess.NoAccess&gt;</ph>, they are not valid for use as the parameter for <ph id=\"ph2\">&lt;xref:System.Security.Permissions.FileIOPermission.GetPathList%2A&gt;</ph> because they describe no file access types or all file access types, respectively, and <ph id=\"ph3\">&lt;xref:System.Security.Permissions.FileIOPermission.GetPathList%2A&gt;</ph> expects a single file access type.","pos":[9,427],"source":" Although NoAccess and AllAccess are members of <xref:System.Security.Permissions.FileIOPermissionAccess.NoAccess>, they are not valid for use as the parameter for <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> because they describe no file access types or all file access types, respectively, and <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> expects a single file access type."}]},{"pos":[537,707],"content":"[!NOTE]\n Giving Write access to an assembly is similar to granting it Full Trust. If an application should not write to the file system it should not have Write access.","leadings":["","> "],"nodes":[{"content":" Giving Write access to an assembly is similar to granting it Full Trust. If an application should not write to the file system it should not have Write access.","pos":[8,168],"nodes":[{"content":"Giving Write access to an assembly is similar to granting it Full Trust.","pos":[1,73]},{"content":"If an application should not write to the file system it should not have Write access.","pos":[74,160]}]}]}],"pos":[915,1631],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.Security.Permissions.FileIOPermissionAccess.Append\"></xref>, <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Read\"></xref>, <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"></xref>, and <xref href=\"System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\"></xref> access to a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.AllAccess\"></xref> represents multiple <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values and causes an <xref href=\"System.ArgumentException\"></xref> when used as the <code>access</code> parameter for the <xref href=\"System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)\"></xref> method, which expects a single value.","nodes":[{"pos":[0,821],"content":"<xref href=\"System.Security.Permissions.FileIOPermissionAccess.Append\"></xref>, <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Read\"></xref>, <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"></xref>, and <xref href=\"System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\"></xref> access to a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.AllAccess\"></xref> represents multiple <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values and causes an <xref href=\"System.ArgumentException\"></xref> when used as the <code>access</code> parameter for the <xref href=\"System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)\"></xref> method, which expects a single value.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess.Append\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess.Read\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph4\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\"&gt;&lt;/xref&gt;</ph> access to a file or directory.","pos":[0,357],"source":"<xref href=\"System.Security.Permissions.FileIOPermissionAccess.Append\"></xref>, <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Read\"></xref>, <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"></xref>, and <xref href=\"System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\"></xref> access to a file or directory."},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess.AllAccess\"&gt;&lt;/xref&gt;</ph> represents multiple <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess\"&gt;&lt;/xref&gt;</ph> values and causes an <ph id=\"ph3\">&lt;xref href=\"System.ArgumentException\"&gt;&lt;/xref&gt;</ph> when used as the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">access</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter for the <ph id=\"ph5\">&lt;xref href=\"System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)\"&gt;&lt;/xref&gt;</ph> method, which expects a single value.","pos":[358,821],"source":"<xref href=\"System.Security.Permissions.FileIOPermissionAccess.AllAccess\"></xref> represents multiple <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values and causes an <xref href=\"System.ArgumentException\"></xref> when used as the <code>access</code> parameter for the <xref href=\"System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)\"></xref> method, which expects a single value."}]}],"pos":[3136,3958],"yaml":true},{"content":"Access to append material to a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Append\"></xref> access includes the ability to create a new file or directory.","nodes":[{"pos":[0,191],"content":"Access to append material to a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Append\"></xref> access includes the ability to create a new file or directory.","nodes":[{"content":"Access to append material to a file or directory.","pos":[0,49]},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess.Append\"&gt;&lt;/xref&gt;</ph> access includes the ability to create a new file or directory.","pos":[50,191],"source":"<xref href=\"System.Security.Permissions.FileIOPermissionAccess.Append\"></xref> access includes the ability to create a new file or directory."}]}],"pos":[5175,5367],"yaml":true},{"content":"> [!NOTE]\n>  To create files, code must also be granted both Append and either Write or Read access. For more detail see <xref:System.IO.FileMode>.","nodes":[{"pos":[2,147],"content":"[!NOTE]\n To create files, code must also be granted both Append and either Write or Read access. For more detail see <xref:System.IO.FileMode>.","leadings":["","> "],"nodes":[{"content":" To create files, code must also be granted both Append and either Write or Read access. For more detail see <xref:System.IO.FileMode>.","pos":[8,143],"nodes":[{"content":"To create files, code must also be granted both Append and either Write or Read access.","pos":[1,88]},{"content":"For more detail see <ph id=\"ph1\">&lt;xref:System.IO.FileMode&gt;</ph>.","pos":[89,135],"source":" For more detail see <xref:System.IO.FileMode>."}]}]}],"pos":[5378,5538],"yaml":true,"extradata":"MT"},{"content":"No access to a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.NoAccess\"></xref> represents no valid <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values and causes an <xref href=\"System.ArgumentException\"></xref> when used as the parameter for <xref href=\"System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)\"></xref>, which expects a single value.","nodes":[{"pos":[0,465],"content":"No access to a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.NoAccess\"></xref> represents no valid <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values and causes an <xref href=\"System.ArgumentException\"></xref> when used as the parameter for <xref href=\"System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)\"></xref>, which expects a single value.","nodes":[{"content":"No access to a file or directory.","pos":[0,33]},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess.NoAccess\"&gt;&lt;/xref&gt;</ph> represents no valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess\"&gt;&lt;/xref&gt;</ph> values and causes an <ph id=\"ph3\">&lt;xref href=\"System.ArgumentException\"&gt;&lt;/xref&gt;</ph> when used as the parameter for <ph id=\"ph4\">&lt;xref href=\"System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)\"&gt;&lt;/xref&gt;</ph>, which expects a single value.","pos":[34,465],"source":"<xref href=\"System.Security.Permissions.FileIOPermissionAccess.NoAccess\"></xref> represents no valid <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values and causes an <xref href=\"System.ArgumentException\"></xref> when used as the parameter for <xref href=\"System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)\"></xref>, which expects a single value."}]}],"pos":[6764,7230],"yaml":true},{"content":"Access to the information in the path itself. This helps protect sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path. This value does not grant access to files or folders represented by the path.","nodes":[{"pos":[0,272],"content":"Access to the information in the path itself. This helps protect sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path. This value does not grant access to files or folders represented by the path.","nodes":[{"content":"Access to the information in the path itself. This helps protect sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path. This value does not grant access to files or folders represented by the path.","pos":[0,272],"nodes":[{"content":"Access to the information in the path itself.","pos":[0,45]},{"content":"This helps protect sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path.","pos":[46,194]},{"content":"This value does not grant access to files or folders represented by the path.","pos":[195,272]}]}]}],"pos":[8488,8761],"yaml":true},{"content":"> [!NOTE]\n>  For performance reasons, `PathDiscovery` should only be granted to directories, not to files. For example, `PathDiscovery` permission should be granted to paths such as C:\\test and C:\\test\\\\, not C:\\test\\example.txt.","nodes":[{"pos":[2,229],"content":"[!NOTE]\n For performance reasons, `PathDiscovery` should only be granted to directories, not to files. For example, `PathDiscovery` permission should be granted to paths such as C:\\test and C:\\test\\\\, not C:\\test\\example.txt.","leadings":["","> "],"nodes":[{"content":" For performance reasons, `PathDiscovery` should only be granted to directories, not to files. For example, `PathDiscovery` permission should be granted to paths such as C:\\test and C:\\test\\\\, not C:\\test\\example.txt.","pos":[8,225],"nodes":[{"content":"For performance reasons, <ph id=\"ph1\">`PathDiscovery`</ph> should only be granted to directories, not to files.","pos":[1,94],"source":" For performance reasons, `PathDiscovery` should only be granted to directories, not to files."},{"content":"For example, <ph id=\"ph1\">`PathDiscovery`</ph> permission should be granted to paths such as C:\\test and C:\\test<ph id=\"ph2\">\\\\</ph>, not C:\\test\\example.txt.","pos":[95,217],"source":" For example, `PathDiscovery` permission should be granted to paths such as C:\\test and C:\\test\\\\, not C:\\test\\example.txt."}]}]}],"pos":[8772,9014],"yaml":true,"extradata":"MT"},{"content":"Access to read from a file or directory.","nodes":[{"pos":[0,40],"content":"Access to read from a file or directory.","nodes":[{"content":"Access to read from a file or directory.","pos":[0,40]}]}],"pos":[10223,10264],"yaml":true},{"content":"Access to write to or delete a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"></xref> access includes deleting and overwriting files or directories.","nodes":[{"pos":[0,190],"content":"Access to write to or delete a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"></xref> access includes deleting and overwriting files or directories.","nodes":[{"content":"Access to write to or delete a file or directory.","pos":[0,49]},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"&gt;&lt;/xref&gt;</ph> access includes deleting and overwriting files or directories.","pos":[50,190],"source":"<xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"></xref> access includes deleting and overwriting files or directories."}]}],"pos":[11470,11661],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.FileIOPermissionAccess\n  commentId: T:System.Security.Permissions.FileIOPermissionAccess\n  id: FileIOPermissionAccess\n  children:\n  - System.Security.Permissions.FileIOPermissionAccess.AllAccess\n  - System.Security.Permissions.FileIOPermissionAccess.Append\n  - System.Security.Permissions.FileIOPermissionAccess.NoAccess\n  - System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\n  - System.Security.Permissions.FileIOPermissionAccess.Read\n  - System.Security.Permissions.FileIOPermissionAccess.Write\n  langs:\n  - csharp\n  name: FileIOPermissionAccess\n  nameWithType: FileIOPermissionAccess\n  fullName: System.Security.Permissions.FileIOPermissionAccess\n  type: Enum\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Specifies the type of file access requested.\n  remarks: \"This enumeration is used with the <xref:System.Security.Permissions.FileIOPermission> class.  \\n  \\n> [!NOTE]\\n>  Although NoAccess and AllAccess are members of <xref:System.Security.Permissions.FileIOPermissionAccess.NoAccess>, they are not valid for use as the parameter for <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> because they describe no file access types or all file access types, respectively, and <xref:System.Security.Permissions.FileIOPermission.GetPathList%2A> expects a single file access type.  \\n  \\n> [!NOTE]\\n>  Giving Write access to an assembly is similar to granting it Full Trust. If an application should not write to the file system it should not have Write access.\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum FileIOPermissionAccess\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileIOPermissionAccess.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.FileIOPermissionAccess.AllAccess\n  commentId: F:System.Security.Permissions.FileIOPermissionAccess.AllAccess\n  id: AllAccess\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  langs:\n  - csharp\n  name: AllAccess\n  nameWithType: FileIOPermissionAccess.AllAccess\n  fullName: FileIOPermissionAccess.AllAccess\n  type: Field\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Append\"></xref>, <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Read\"></xref>, <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"></xref>, and <xref href=\"System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\"></xref> access to a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.AllAccess\"></xref> represents multiple <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values and causes an <xref href=\"System.ArgumentException\"></xref> when used as the <code>access</code> parameter for the <xref href=\"System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)\"></xref> method, which expects a single value.\n  syntax:\n    content: AllAccess\n    return:\n      type: System.Security.Permissions.FileIOPermissionAccess\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileIOPermissionAccess.xml\n- uid: System.Security.Permissions.FileIOPermissionAccess.Append\n  commentId: F:System.Security.Permissions.FileIOPermissionAccess.Append\n  id: Append\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  langs:\n  - csharp\n  name: Append\n  nameWithType: FileIOPermissionAccess.Append\n  fullName: FileIOPermissionAccess.Append\n  type: Field\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Access to append material to a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Append\"></xref> access includes the ability to create a new file or directory.\n  remarks: >-\n    > [!NOTE]\n\n    >  To create files, code must also be granted both Append and either Write or Read access. For more detail see <xref:System.IO.FileMode>.\n  syntax:\n    content: Append\n    return:\n      type: System.Security.Permissions.FileIOPermissionAccess\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileIOPermissionAccess.xml\n- uid: System.Security.Permissions.FileIOPermissionAccess.NoAccess\n  commentId: F:System.Security.Permissions.FileIOPermissionAccess.NoAccess\n  id: NoAccess\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  langs:\n  - csharp\n  name: NoAccess\n  nameWithType: FileIOPermissionAccess.NoAccess\n  fullName: FileIOPermissionAccess.NoAccess\n  type: Field\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: No access to a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.NoAccess\"></xref> represents no valid <xref href=\"System.Security.Permissions.FileIOPermissionAccess\"></xref> values and causes an <xref href=\"System.ArgumentException\"></xref> when used as the parameter for <xref href=\"System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)\"></xref>, which expects a single value.\n  syntax:\n    content: NoAccess\n    return:\n      type: System.Security.Permissions.FileIOPermissionAccess\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileIOPermissionAccess.xml\n- uid: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\n  commentId: F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\n  id: PathDiscovery\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  langs:\n  - csharp\n  name: PathDiscovery\n  nameWithType: FileIOPermissionAccess.PathDiscovery\n  fullName: FileIOPermissionAccess.PathDiscovery\n  type: Field\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Access to the information in the path itself. This helps protect sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path. This value does not grant access to files or folders represented by the path.\n  remarks: >-\n    > [!NOTE]\n\n    >  For performance reasons, `PathDiscovery` should only be granted to directories, not to files. For example, `PathDiscovery` permission should be granted to paths such as C:\\test and C:\\test\\\\, not C:\\test\\example.txt.\n  syntax:\n    content: PathDiscovery\n    return:\n      type: System.Security.Permissions.FileIOPermissionAccess\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileIOPermissionAccess.xml\n- uid: System.Security.Permissions.FileIOPermissionAccess.Read\n  commentId: F:System.Security.Permissions.FileIOPermissionAccess.Read\n  id: Read\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  langs:\n  - csharp\n  name: Read\n  nameWithType: FileIOPermissionAccess.Read\n  fullName: FileIOPermissionAccess.Read\n  type: Field\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Access to read from a file or directory.\n  syntax:\n    content: Read\n    return:\n      type: System.Security.Permissions.FileIOPermissionAccess\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileIOPermissionAccess.xml\n- uid: System.Security.Permissions.FileIOPermissionAccess.Write\n  commentId: F:System.Security.Permissions.FileIOPermissionAccess.Write\n  id: Write\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  langs:\n  - csharp\n  name: Write\n  nameWithType: FileIOPermissionAccess.Write\n  fullName: FileIOPermissionAccess.Write\n  type: Field\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Access to write to or delete a file or directory. <xref href=\"System.Security.Permissions.FileIOPermissionAccess.Write\"></xref> access includes deleting and overwriting files or directories.\n  syntax:\n    content: Write\n    return:\n      type: System.Security.Permissions.FileIOPermissionAccess\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileIOPermissionAccess.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Security.Permissions.FileIOPermissionAccess.AllAccess\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  isExternal: false\n  name: AllAccess\n  nameWithType: FileIOPermissionAccess.AllAccess\n  fullName: FileIOPermissionAccess.AllAccess\n- uid: System.Security.Permissions.FileIOPermissionAccess\n  parent: System.Security.Permissions\n  isExternal: false\n  name: FileIOPermissionAccess\n  nameWithType: FileIOPermissionAccess\n  fullName: System.Security.Permissions.FileIOPermissionAccess\n- uid: System.Security.Permissions.FileIOPermissionAccess.Append\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  isExternal: false\n  name: Append\n  nameWithType: FileIOPermissionAccess.Append\n  fullName: FileIOPermissionAccess.Append\n- uid: System.Security.Permissions.FileIOPermissionAccess.NoAccess\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  isExternal: false\n  name: NoAccess\n  nameWithType: FileIOPermissionAccess.NoAccess\n  fullName: FileIOPermissionAccess.NoAccess\n- uid: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  isExternal: false\n  name: PathDiscovery\n  nameWithType: FileIOPermissionAccess.PathDiscovery\n  fullName: FileIOPermissionAccess.PathDiscovery\n- uid: System.Security.Permissions.FileIOPermissionAccess.Read\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  isExternal: false\n  name: Read\n  nameWithType: FileIOPermissionAccess.Read\n  fullName: FileIOPermissionAccess.Read\n- uid: System.Security.Permissions.FileIOPermissionAccess.Write\n  parent: System.Security.Permissions.FileIOPermissionAccess\n  isExternal: false\n  name: Write\n  nameWithType: FileIOPermissionAccess.Write\n  fullName: FileIOPermissionAccess.Write\n"}