{"nodes":[{"content":"Defines the interface that must be implemented by channel factories that create type-specific channels.","nodes":[{"pos":[0,103],"content":"Defines the interface that must be implemented by channel factories that create type-specific channels.","nodes":[{"content":"Defines the interface that must be implemented by channel factories that create type-specific channels.","pos":[0,103]}]}],"pos":[675,779],"yaml":true},{"content":"Implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> contract allows users to create multiple channels of a given type without having to specify the channel type each time. In other words, defining the channel type as a generic parameter for the channel factory implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A> methods. If users want to create different channel types, they can create additional channel factories for each type of channel required. The <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload allows you to distinguish the address to which the message is initially sent from the ultimate destination. For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.","nodes":[{"pos":[0,996],"content":"Implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> contract allows users to create multiple channels of a given type without having to specify the channel type each time. In other words, defining the channel type as a generic parameter for the channel factory implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A> methods. If users want to create different channel types, they can create additional channel factories for each type of channel required. The <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload allows you to distinguish the address to which the message is initially sent from the ultimate destination. For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.","nodes":[{"content":"Implementing the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601&gt;</ph> contract allows users to create multiple channels of a given type without having to specify the channel type each time.","pos":[0,192],"source":"Implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> contract allows users to create multiple channels of a given type without having to specify the channel type each time."},{"content":"In other words, defining the channel type as a generic parameter for the channel factory implementing the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601&gt;</ph> interface means that it is not necessary to pass the type into the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A&gt;</ph> methods.","pos":[193,503],"source":" In other words, defining the channel type as a generic parameter for the channel factory implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A> methods."},{"content":"If users want to create different channel types, they can create additional channel factories for each type of channel required.","pos":[504,632]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29&gt;</ph> overload allows you to distinguish the address to which the message is initially sent from the ultimate destination.","pos":[633,877],"source":" The <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload allows you to distinguish the address to which the message is initially sent from the ultimate destination."},{"content":"For a discussion of addressing, see the <bpt id=\"p1\">[</bpt>Addresses<ept id=\"p1\">](~/docs/framework/wcf/feature-details/endpoint-addresses.md)</ept> topic.","pos":[878,996],"source":" For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic."}]}],"pos":[790,1787],"yaml":true,"extradata":"MT"},{"content":"The type of channel that the channel factory creates.","nodes":[{"pos":[0,53],"content":"The type of channel that the channel factory creates.","nodes":[{"content":"The type of channel that the channel factory creates.","pos":[0,53]}]}],"pos":[1960,2014],"yaml":true},{"content":"Creates a channel of a specified type to a specified endpoint address.","nodes":[{"pos":[0,70],"content":"Creates a channel of a specified type to a specified endpoint address.","nodes":[{"content":"Creates a channel of a specified type to a specified endpoint address.","pos":[0,70]}]}],"pos":[3495,3566],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing. Note that any channels created by this channel factory are closed when the channel factory is closed.","nodes":[{"pos":[0,374],"content":"Use the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing. Note that any channels created by this channel factory are closed when the channel factory is closed.","nodes":[{"content":"Use the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing. Note that any channels created by this channel factory are closed when the channel factory is closed.","pos":[0,374],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29&gt;</ph> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing.","pos":[0,272],"source":"Use the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing."},{"content":"Note that any channels created by this channel factory are closed when the channel factory is closed.","pos":[273,374]}]}]}],"pos":[3577,3952],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[4143,4247],"yaml":true},{"content":"A channel of type <code>TChannel</code> to the specified endpoint address.","nodes":[{"pos":[0,74],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the specified endpoint address.","source":"A channel of type <code>TChannel</code> to the specified endpoint address."}],"pos":[4299,4374],"yaml":true},{"content":"Creates a channel of a specified type to a specified endpoint address and transport address to which messages are sent.","nodes":[{"pos":[0,119],"content":"Creates a channel of a specified type to a specified endpoint address and transport address to which messages are sent.","nodes":[{"content":"Creates a channel of a specified type to a specified endpoint address and transport address to which messages are sent.","pos":[0,119]}]}],"pos":[5818,5938],"yaml":true},{"content":"The transport address specified by the `via` is the location to which a message should initially be sent on its way to some other remote address specified by the `to` at which the service is located. In most Internet scenarios, the `via` URI is the same as the <xref:System.ServiceModel.EndpointAddress.Uri%2A> of the final `to` address of the service. You only distinguish between these two addresses when you want to do some kind of manual routing. Note that any channels created by this channel factory are closed when the channel factory is closed. For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.","nodes":[{"pos":[0,671],"content":"The transport address specified by the `via` is the location to which a message should initially be sent on its way to some other remote address specified by the `to` at which the service is located. In most Internet scenarios, the `via` URI is the same as the <xref:System.ServiceModel.EndpointAddress.Uri%2A> of the final `to` address of the service. You only distinguish between these two addresses when you want to do some kind of manual routing. Note that any channels created by this channel factory are closed when the channel factory is closed. For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.","nodes":[{"content":"The transport address specified by the <ph id=\"ph1\">`via`</ph> is the location to which a message should initially be sent on its way to some other remote address specified by the <ph id=\"ph2\">`to`</ph> at which the service is located.","pos":[0,199],"source":"The transport address specified by the `via` is the location to which a message should initially be sent on its way to some other remote address specified by the `to` at which the service is located."},{"content":"In most Internet scenarios, the <ph id=\"ph1\">`via`</ph> URI is the same as the <ph id=\"ph2\">&lt;xref:System.ServiceModel.EndpointAddress.Uri%2A&gt;</ph> of the final <ph id=\"ph3\">`to`</ph> address of the service.","pos":[200,352],"source":" In most Internet scenarios, the `via` URI is the same as the <xref:System.ServiceModel.EndpointAddress.Uri%2A> of the final `to` address of the service."},{"content":"You only distinguish between these two addresses when you want to do some kind of manual routing.","pos":[353,450]},{"content":"Note that any channels created by this channel factory are closed when the channel factory is closed.","pos":[451,552]},{"content":"For a discussion of addressing, see the <bpt id=\"p1\">[</bpt>Addresses<ept id=\"p1\">](~/docs/framework/wcf/feature-details/endpoint-addresses.md)</ept> topic.","pos":[553,671],"source":" For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic."}]}],"pos":[5949,6621],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[6821,6925],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the message is sent.","source":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent."}],"pos":[6981,7083],"yaml":true},{"content":"A channel of type <code>TChannel</code> to the specified endpoint address and transport address.","nodes":[{"pos":[0,96],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the specified endpoint address and transport address.","source":"A channel of type <code>TChannel</code> to the specified endpoint address and transport address."}],"pos":[7135,7232],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.IChannelFactory`1\n  commentId: T:System.ServiceModel.Channels.IChannelFactory`1\n  id: IChannelFactory`1\n  children:\n  - System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  langs:\n  - csharp\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Defines the interface that must be implemented by channel factories that create type-specific channels.\n  remarks: Implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> contract allows users to create multiple channels of a given type without having to specify the channel type each time. In other words, defining the channel type as a generic parameter for the channel factory implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A> methods. If users want to create different channel types, they can create additional channel factories for each type of channel required. The <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload allows you to distinguish the address to which the message is initially sent from the ultimate destination. For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.\n  syntax:\n    content: 'public interface IChannelFactory<TChannel> : System.ServiceModel.Channels.IChannelFactory'\n    typeParameters:\n    - id: TChannel\n      description: The type of channel that the channel factory creates.\n  derivedClasses:\n  - System.ServiceModel.ChannelFactory`1\n  - System.ServiceModel.Channels.ChannelFactoryBase`1\n  implements:\n  - System.ServiceModel.Channels.IChannelFactory\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  id: CreateChannel(System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Channels.IChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(EndpointAddress)\n  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n  fullName: IChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates a channel of a specified type to a specified endpoint address.\n  remarks: Use the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing. Note that any channels created by this channel factory are closed when the channel factory is closed.\n  syntax:\n    content: public TChannel CreateChannel (System.ServiceModel.EndpointAddress to);\n    parameters:\n    - id: to\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code> to the specified endpoint address.\n  overload: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.Channels.IChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(EndpointAddress, Uri)\n  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n  fullName: IChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates a channel of a specified type to a specified endpoint address and transport address to which messages are sent.\n  remarks: The transport address specified by the `via` is the location to which a message should initially be sent on its way to some other remote address specified by the `to` at which the service is located. In most Internet scenarios, the `via` URI is the same as the <xref:System.ServiceModel.EndpointAddress.Uri%2A> of the final `to` address of the service. You only distinguish between these two addresses when you want to do some kind of manual routing. Note that any channels created by this channel factory are closed when the channel factory is closed. For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.\n  syntax:\n    content: public TChannel CreateChannel (System.ServiceModel.EndpointAddress to, Uri via);\n    parameters:\n    - id: to\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n    - id: via\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code> to the specified endpoint address and transport address.\n  overload: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.Channels.IChannelFactory`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress)\n  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n  fullName: IChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n- uid: TChannel\n  isExternal: true\n  name: TChannel\n  nameWithType: TChannel\n  fullName: TChannel\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: false\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.Channels.IChannelFactory`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress, Uri)\n  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n  fullName: IChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel*\n  parent: System.ServiceModel.Channels.IChannelFactory`1\n  isExternal: false\n  name: CreateChannel\n  nameWithType: IChannelFactory<TChannel>.CreateChannel\n  fullName: IChannelFactory<TChannel>.CreateChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelFactory`1.xml\n- uid: System.ServiceModel.Channels.IChannelFactory\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelFactory\n  nameWithType: IChannelFactory\n  fullName: System.ServiceModel.Channels.IChannelFactory\n"}