{"nodes":[{"content":"Supports simple iteration over any STL/CLR object that implements the <xref href=\"Microsoft.VisualC.StlClr.ITree`2\"></xref> interface.","nodes":[{"pos":[0,134],"content":"Supports simple iteration over any STL/CLR object that implements the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.ITree`2\"&gt;&lt;/xref&gt;</ph> interface.","source":"Supports simple iteration over any STL/CLR object that implements the <xref href=\"Microsoft.VisualC.StlClr.ITree`2\"></xref> interface."}],"pos":[829,964],"yaml":true},{"content":"[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]","nodes":[],"pos":[975,1033],"yaml":true,"extradata":"MT"},{"content":"The type of the key component of an element in the controlled sequence.","nodes":[{"pos":[0,71],"content":"The type of the key component of an element in the controlled sequence.","nodes":[{"content":"The type of the key component of an element in the controlled sequence.","pos":[0,71]}]}],"pos":[1260,1332],"yaml":true},{"content":"The type of the value component of an element in the controlled sequence.","nodes":[{"pos":[0,73],"content":"The type of the value component of an element in the controlled sequence.","nodes":[{"content":"The type of the value component of an element in the controlled sequence.","pos":[0,73]}]}],"pos":[1368,1442],"yaml":true},{"content":"Allocates and initializes a new <xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"></xref> object.","nodes":[{"pos":[0,102],"content":"Allocates and initializes a new <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"&gt;&lt;/xref&gt;</ph> object.","source":"Allocates and initializes a new <xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"></xref> object."}],"pos":[3053,3156],"yaml":true},{"content":"The first node in the container over which to iterate.","nodes":[{"pos":[0,54],"content":"The first node in the container over which to iterate.","nodes":[{"content":"The first node in the container over which to iterate.","pos":[0,54]}]}],"pos":[3502,3557],"yaml":true},{"content":"Gets or sets the current element in the collection.","nodes":[{"pos":[0,51],"content":"Gets or sets the current element in the collection.","nodes":[{"content":"Gets or sets the current element in the collection.","pos":[0,51]}]}],"pos":[4622,4674],"yaml":true},{"content":"The current element in the collection.","nodes":[{"pos":[0,38],"content":"The current element in the collection.","nodes":[{"content":"The current element in the collection.","pos":[0,38]}]}],"pos":[4791,4830],"yaml":true},{"content":"Frees, releases, or resets unmanaged resources that are used by the <xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"></xref> object.","nodes":[{"pos":[0,138],"content":"Frees, releases, or resets unmanaged resources that are used by the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"&gt;&lt;/xref&gt;</ph> object.","source":"Frees, releases, or resets unmanaged resources that are used by the <xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"></xref> object."}],"pos":[5830,5969],"yaml":true},{"content":"Frees, releases, or resets unmanaged resources that are used by the <xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"></xref> object.","nodes":[{"pos":[0,138],"content":"Frees, releases, or resets unmanaged resources that are used by the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"&gt;&lt;/xref&gt;</ph> object.","source":"Frees, releases, or resets unmanaged resources that are used by the <xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"></xref> object."}],"pos":[7120,7259],"yaml":true},{"content":"`true` to dispose of managed objects; `false` to dispose of unmanaged objects.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> to dispose of managed objects; <ph id=\"ph2\">`false`</ph> to dispose of unmanaged objects.","source":"`true` to dispose of managed objects; `false` to dispose of unmanaged objects."}],"pos":[7401,7482],"yaml":true},{"content":"Advances the enumerator to the next element in the collection.","nodes":[{"pos":[0,62],"content":"Advances the enumerator to the next element in the collection.","nodes":[{"content":"Advances the enumerator to the next element in the collection.","pos":[0,62]}]}],"pos":[8488,8551],"yaml":true},{"content":"`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.","nodes":[{"pos":[0,135],"content":"<ph id=\"ph1\">`true`</ph> if the enumerator was successfully advanced to the next element; <ph id=\"ph2\">`false`</ph> if the enumerator has passed the end of the collection.","source":"`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection."}],"pos":[8685,8823],"yaml":true},{"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","nodes":[{"pos":[0,97],"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","nodes":[{"content":"Sets the enumerator to its initial position, which is before the first element in the collection.","pos":[0,97]}]}],"pos":[9812,9910],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  commentId: T:Microsoft.VisualC.StlClr.TreeEnumerator`2\n  id: TreeEnumerator`2\n  children:\n  - Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})\n  - Microsoft.VisualC.StlClr.TreeEnumerator`2.Current\n  - Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose\n  - Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)\n  - Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext\n  - Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset\n  langs:\n  - csharp\n  name: TreeEnumerator<TKey,TValue>\n  nameWithType: TreeEnumerator<TKey,TValue>\n  fullName: Microsoft.VisualC.StlClr.TreeEnumerator<TKey,TValue>\n  type: Class\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Supports simple iteration over any STL/CLR object that implements the <xref href=\"Microsoft.VisualC.StlClr.ITree`2\"></xref> interface.\n  remarks: '[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]'\n  syntax:\n    content: 'public class TreeEnumerator<TKey,TValue> : Microsoft.VisualC.StlClr.TreeEnumeratorBase<TKey,TValue>, System.Collections.Generic.IEnumerator<TValue>'\n    typeParameters:\n    - id: TKey\n      description: The type of the key component of an element in the controlled sequence.\n    - id: TValue\n      description: The type of the value component of an element in the controlled sequence.\n  inheritance:\n  - System.Object\n  - Microsoft.VisualC.StlClr.TreeEnumeratorBase`2\n  implements:\n  - System.Collections.Generic.IEnumerator{TValue}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})\n  commentId: M:Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})'\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  langs:\n  - csharp\n  name: TreeEnumerator<TKey,TValue>(INode<TValue>)\n  nameWithType: TreeEnumerator<TKey,TValue>.TreeEnumerator<TKey,TValue>(INode<TValue>)\n  fullName: TreeEnumerator<TKey,TValue>.TreeEnumerator<TKey,TValue>(INode<TValue>)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Allocates and initializes a new <xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"></xref> object.\n  syntax:\n    content: >-\n      [System.Runtime.TargetedPatchingOptOut(\"Performance critical to inline this type of method across NGen image boundaries\")]\n\n      public TreeEnumerator (Microsoft.VisualC.StlClr.Generic.INode<TValue> _First);\n    parameters:\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.INode`1\n      description: The first node in the container over which to iterate.\n  overload: Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.TargetedPatchingOptOutAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.Current\n  commentId: P:Microsoft.VisualC.StlClr.TreeEnumerator`2.Current\n  id: Current\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  langs:\n  - csharp\n  name: Current\n  nameWithType: TreeEnumerator<TKey,TValue>.Current\n  fullName: TreeEnumerator<TKey,TValue>.Current\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Gets or sets the current element in the collection.\n  syntax:\n    content: public virtual TValue Current { get; set; }\n    return:\n      type: TValue\n      description: The current element in the collection.\n  overload: Microsoft.VisualC.StlClr.TreeEnumerator`2.Current*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose\n  commentId: M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose\n  id: Dispose\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: TreeEnumerator<TKey,TValue>.Dispose()\n  fullName: TreeEnumerator<TKey,TValue>.Dispose()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Frees, releases, or resets unmanaged resources that are used by the <xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"></xref> object.\n  syntax:\n    content: public override sealed void Dispose ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)\n  commentId: M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: TreeEnumerator<TKey,TValue>.Dispose(Boolean)\n  fullName: TreeEnumerator<TKey,TValue>.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Frees, releases, or resets unmanaged resources that are used by the <xref href=\"Microsoft.VisualC.StlClr.TreeEnumerator`2\"></xref> object.\n  syntax:\n    content: protected virtual void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: '`true` to dispose of managed objects; `false` to dispose of unmanaged objects.'\n  overload: Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext\n  commentId: M:Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext\n  id: MoveNext\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: TreeEnumerator<TKey,TValue>.MoveNext()\n  fullName: TreeEnumerator<TKey,TValue>.MoveNext()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Advances the enumerator to the next element in the collection.\n  syntax:\n    content: public override bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.'\n  overload: Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset\n  commentId: M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset\n  id: Reset\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: TreeEnumerator<TKey,TValue>.Reset()\n  fullName: TreeEnumerator<TKey,TValue>.Reset()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  summary: Sets the enumerator to its initial position, which is before the first element in the collection.\n  syntax:\n    content: public override void Reset ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n  ms.author: mblome\n  manager: ghogen\nreferences:\n- uid: Microsoft.VisualC.StlClr.TreeEnumeratorBase`2\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: TreeEnumeratorBase<TKey,TValue>\n  nameWithType: TreeEnumeratorBase<TKey,TValue>\n  fullName: Microsoft.VisualC.StlClr.TreeEnumeratorBase<TKey,TValue>\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  isExternal: false\n  name: TreeEnumerator<TKey,TValue>(INode<TValue>)\n  nameWithType: TreeEnumerator<TKey,TValue>.TreeEnumerator<TKey,TValue>(INode<TValue>)\n  fullName: TreeEnumerator<TKey,TValue>.TreeEnumerator<TKey,TValue>(INode<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: INode<TValue>\n  nameWithType: INode<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.Current\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  isExternal: false\n  name: Current\n  nameWithType: TreeEnumerator<TKey,TValue>.Current\n  fullName: TreeEnumerator<TKey,TValue>.Current\n- uid: TValue\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  isExternal: false\n  name: Dispose()\n  nameWithType: TreeEnumerator<TKey,TValue>.Dispose()\n  fullName: TreeEnumerator<TKey,TValue>.Dispose()\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: TreeEnumerator<TKey,TValue>.Dispose(Boolean)\n  fullName: TreeEnumerator<TKey,TValue>.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  isExternal: false\n  name: MoveNext()\n  nameWithType: TreeEnumerator<TKey,TValue>.MoveNext()\n  fullName: TreeEnumerator<TKey,TValue>.MoveNext()\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  isExternal: false\n  name: Reset()\n  nameWithType: TreeEnumerator<TKey,TValue>.Reset()\n  fullName: TreeEnumerator<TKey,TValue>.Reset()\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor*\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  isExternal: false\n  name: TreeEnumerator<TKey,TValue>\n  nameWithType: TreeEnumerator<TKey,TValue>.TreeEnumerator<TKey,TValue>\n  fullName: TreeEnumerator<TKey,TValue>.TreeEnumerator<TKey,TValue>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.Current*\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  isExternal: false\n  name: Current\n  nameWithType: TreeEnumerator<TKey,TValue>.Current\n  fullName: TreeEnumerator<TKey,TValue>.Current\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose*\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  isExternal: false\n  name: Dispose\n  nameWithType: TreeEnumerator<TKey,TValue>.Dispose\n  fullName: TreeEnumerator<TKey,TValue>.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext*\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  isExternal: false\n  name: MoveNext\n  nameWithType: TreeEnumerator<TKey,TValue>.MoveNext\n  fullName: TreeEnumerator<TKey,TValue>.MoveNext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n- uid: Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset*\n  parent: Microsoft.VisualC.StlClr.TreeEnumerator`2\n  isExternal: false\n  name: Reset\n  nameWithType: TreeEnumerator<TKey,TValue>.Reset\n  fullName: TreeEnumerator<TKey,TValue>.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/TreeEnumerator`2.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.IEnumerator{TValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<TValue>\n  nameWithType: IEnumerator<TValue>\n  fullName: System.Collections.Generic.IEnumerator<TValue>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TValue\n    name: TValue\n    nameWithType: TValue\n    fullName: TValue\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}