{"nodes":[{"content":"Provides the base class for several derived classes that represents the return value from a hit test.","nodes":[{"pos":[0,101],"content":"Provides the base class for several derived classes that represents the return value from a hit test.","nodes":[{"content":"Provides the base class for several derived classes that represents the return value from a hit test.","pos":[0,101]}]}],"pos":[422,524],"yaml":true},{"content":"The <xref:System.Windows.Media.PointHitTestResult>, <xref:System.Windows.Media.GeometryHitTestResult>, and <xref:System.Windows.Media.Media3D.RayHitTestResult> classes derive from <xref:System.Windows.Media.HitTestResult>.","nodes":[{"pos":[0,222],"content":"The <xref:System.Windows.Media.PointHitTestResult>, <xref:System.Windows.Media.GeometryHitTestResult>, and <xref:System.Windows.Media.Media3D.RayHitTestResult> classes derive from <xref:System.Windows.Media.HitTestResult>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.PointHitTestResult&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.GeometryHitTestResult&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph> classes derive from <ph id=\"ph4\">&lt;xref:System.Windows.Media.HitTestResult&gt;</ph>.","pos":[0,222],"source":"The <xref:System.Windows.Media.PointHitTestResult>, <xref:System.Windows.Media.GeometryHitTestResult>, and <xref:System.Windows.Media.Media3D.RayHitTestResult> classes derive from <xref:System.Windows.Media.HitTestResult>."}]}],"pos":[535,758],"yaml":true,"extradata":"MT"},{"content":"Gets the visual object that was hit.","nodes":[{"pos":[0,36],"content":"Gets the visual object that was hit.","nodes":[{"content":"Gets the visual object that was hit.","pos":[0,36]}]}],"pos":[2698,2735],"yaml":true},{"content":"<xref:System.Windows.DependencyObject> is the type rather than <xref:System.Windows.Media.Visual> so that hit testing can bridge 2D and 3D trees through a viewport.","nodes":[{"pos":[0,164],"content":"<xref:System.Windows.DependencyObject> is the type rather than <xref:System.Windows.Media.Visual> so that hit testing can bridge 2D and 3D trees through a viewport.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.DependencyObject&gt;</ph> is the type rather than <ph id=\"ph2\">&lt;xref:System.Windows.Media.Visual&gt;</ph> so that hit testing can bridge 2D and 3D trees through a viewport.","pos":[0,164],"source":"<xref:System.Windows.DependencyObject> is the type rather than <xref:System.Windows.Media.Visual> so that hit testing can bridge 2D and 3D trees through a viewport."}]}],"pos":[2746,2911],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.DependencyObject\"></xref> value that represents the visual object that was hit.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;&lt;/xref&gt;</ph> value that represents the visual object that was hit.","source":"A <xref href=\"System.Windows.DependencyObject\"></xref> value that represents the visual object that was hit."}],"pos":[3505,3614],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.HitTestResult\n  commentId: T:System.Windows.Media.HitTestResult\n  id: HitTestResult\n  children:\n  - System.Windows.Media.HitTestResult.VisualHit\n  langs:\n  - csharp\n  name: HitTestResult\n  nameWithType: HitTestResult\n  fullName: System.Windows.Media.HitTestResult\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Provides the base class for several derived classes that represents the return value from a hit test.\n  remarks: The <xref:System.Windows.Media.PointHitTestResult>, <xref:System.Windows.Media.GeometryHitTestResult>, and <xref:System.Windows.Media.Media3D.RayHitTestResult> classes derive from <xref:System.Windows.Media.HitTestResult>.\n  example:\n  - \"The following example shows how to retrieve the <xref:System.Windows.Media.HitTestResult> return value from the <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> method.  \\n  \\n [!code-csharp[HitTestingOverview#100](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#100)]\\n [!code-vb[HitTestingOverview#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#100)]\"\n  syntax:\n    content: public abstract class HitTestResult\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Windows.Media.GeometryHitTestResult\n  - System.Windows.Media.PointHitTestResult\n  - System.Windows.Media.Media3D.RayHitTestResult\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/HitTestResult.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.HitTestResult.VisualHit\n  commentId: P:System.Windows.Media.HitTestResult.VisualHit\n  id: VisualHit\n  parent: System.Windows.Media.HitTestResult\n  langs:\n  - csharp\n  name: VisualHit\n  nameWithType: HitTestResult.VisualHit\n  fullName: HitTestResult.VisualHit\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the visual object that was hit.\n  remarks: <xref:System.Windows.DependencyObject> is the type rather than <xref:System.Windows.Media.Visual> so that hit testing can bridge 2D and 3D trees through a viewport.\n  example:\n  - \"The following example shows how to retrieve the <xref:System.Windows.Media.HitTestResult.VisualHit%2A> property value in a hit test callback method.  \\n  \\n [!code-csharp[HitTestingOverview#102](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#102)]\\n [!code-vb[HitTestingOverview#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#102)]\"\n  syntax:\n    content: public System.Windows.DependencyObject VisualHit { get; }\n    return:\n      type: System.Windows.DependencyObject\n      description: A <xref href=\"System.Windows.DependencyObject\"></xref> value that represents the visual object that was hit.\n  overload: System.Windows.Media.HitTestResult.VisualHit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/HitTestResult.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.HitTestResult.VisualHit\n  parent: System.Windows.Media.HitTestResult\n  isExternal: false\n  name: VisualHit\n  nameWithType: HitTestResult.VisualHit\n  fullName: HitTestResult.VisualHit\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Media.HitTestResult.VisualHit*\n  parent: System.Windows.Media.HitTestResult\n  isExternal: false\n  name: VisualHit\n  nameWithType: HitTestResult.VisualHit\n  fullName: HitTestResult.VisualHit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/HitTestResult.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}