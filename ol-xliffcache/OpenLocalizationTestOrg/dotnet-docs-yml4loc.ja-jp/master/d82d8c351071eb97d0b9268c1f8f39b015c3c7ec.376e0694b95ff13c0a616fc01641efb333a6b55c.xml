{"nodes":[{"content":"Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <xref href=\"System.Xaml.XamlNodeType.StartMember\"></xref>) and also for general XAML type system logic.","nodes":[{"pos":[0,302],"content":"Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <xref href=\"System.Xaml.XamlNodeType.StartMember\"></xref>) and also for general XAML type system logic.","nodes":[{"content":"Provides the XAML type system identifier for members of XAML types.","pos":[0,67]},{"content":"The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlNodeType.StartMember\"&gt;&lt;/xref&gt;</ph>) and also for general XAML type system logic.","pos":[68,302],"source":" The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <xref href=\"System.Xaml.XamlNodeType.StartMember\"></xref>) and also for general XAML type system logic."}]}],"pos":[3632,3935],"yaml":true},{"content":"<xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses. For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context. The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system. This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.  \n  \n## Lookup* APIs and XamlMember Derived Classes  \n <xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override. These members have names that always start with the string `Lookup`. The remainder of the API name then references the property that the virtual method influences. For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class. You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.  \n  \n The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class. By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology. You can also use a provided XAML schema context under this scheme and still return the results you want.  \n  \n As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>. This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object. In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>). Therefore, by default, the XAML type system depends on the CLR type system. However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>. Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.  \n  \n## Constructing XamlMember Without XAML Schema Context  \n Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization. The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type. When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>. In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.  \n  \n One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>. However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \n  \n For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph. Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \n  \n You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior. For example, one or more of the  following might be true of your implementation:  \n  \n-   The XAML schema context is available later.  \n  \n-   You use a member invoker pattern.  \n  \n-   You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer.","nodes":[{"pos":[0,774],"content":"<xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses. For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context. The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system. This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the <ph id=\"ph2\">`Lookup*`</ph> API that is provided by possible <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember&gt;</ph> subclasses.","pos":[0,371],"source":"<xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses."},{"content":"For most uses of .NET Framework XAML Services APIs and the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> API, you use the default XAML schema context.","pos":[372,506],"source":" For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context."},{"content":"The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.","pos":[507,609]},{"content":"This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.","pos":[610,774]}]},{"pos":[783,826],"content":"Lookup* APIs and XamlMember Derived Classes","linkify":"Lookup* APIs and XamlMember Derived Classes","nodes":[{"content":"Lookup* APIs and XamlMember Derived Classes","pos":[0,43]}]},{"pos":[830,1508],"content":"<xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override. These members have names that always start with the string `Lookup`. The remainder of the API name then references the property that the virtual method influences. For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class. You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> defines several virtual members that derived classes might override.","pos":[0,98],"source":"<xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override."},{"content":"These members have names that always start with the string <ph id=\"ph1\">`Lookup`</ph>.","pos":[99,167],"source":" These members have names that always start with the string `Lookup`."},{"content":"The remainder of the API name then references the property that the virtual method influences.","pos":[168,262]},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class might override <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> to influence what the base-defined property <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph> returns in a derived class.","pos":[263,502],"source":" For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class."},{"content":"You can predict return values for such properties in <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> or existing derived classes by reading the documentation for the relevant <ph id=\"ph2\">`Lookup*`</ph> methods.","pos":[503,678],"source":" You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods."}]},{"pos":[1515,2025],"content":"The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class. By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology. You can also use a provided XAML schema context under this scheme and still return the results you want.","nodes":[{"content":"The purpose of the <ph id=\"ph1\">`Lookup*`</ph> methods is to provide a XAML type system extension technique that incorporates the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember&gt;</ph> base class.","pos":[0,153],"source":"The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class."},{"content":"By deriving from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> and overriding the <ph id=\"ph2\">`Lookup`</ph> virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.","pos":[154,405],"source":" By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology."},{"content":"You can also use a provided XAML schema context under this scheme and still return the results you want.","pos":[406,510]}]},{"pos":[2032,3099],"content":"As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>. This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object. In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>). Therefore, by default, the XAML type system depends on the CLR type system. However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>. Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.","nodes":[{"content":"As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>. This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object. In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>). Therefore, by default, the XAML type system depends on the CLR type system. However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>. Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.","pos":[0,1067],"nodes":[{"content":"As an example, consider the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> property <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph>.","pos":[0,114],"source":"As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>."},{"content":"This property informs callers that operations such as using a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlWriter&gt;</ph> for serialization can write a value for this member on a target object.","pos":[115,278],"source":" This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object."},{"content":"In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> and its members (the <ph id=\"ph2\">&lt;xref:System.Reflection.MemberInfo&gt;</ph>).","pos":[279,502],"source":" In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>)."},{"content":"Therefore, by default, the XAML type system depends on the CLR type system.","pos":[503,578]},{"content":"However, you can remove this dependency for your XAML type system reporting of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> by overriding the API <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph>.","pos":[579,780],"source":" However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>."},{"content":"Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.","pos":[781,1067]}]}]},{"pos":[3108,3159],"content":"Constructing XamlMember Without XAML Schema Context","linkify":"Constructing XamlMember Without XAML Schema Context","nodes":[{"content":"Constructing XamlMember Without XAML Schema Context","pos":[0,51]}]},{"pos":[3163,3859],"content":"Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization. The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type. When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>. In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.","nodes":[{"content":"Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization. The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type. When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>. In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.","pos":[0,696],"nodes":[{"content":"Most constructors of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> require a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> as part of their initialization.","pos":[0,130],"source":"Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> is also necessary for many internal <ph id=\"ph2\">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> operations, such as obtaining information that is being forwarded from the backing type.","pos":[131,333],"source":" The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type."},{"content":"When you are working with the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> API, you typically have a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> that is available from a surrounding construct such as a <ph id=\"ph3\">&lt;xref:System.Xaml.XamlWriter&gt;</ph>.","pos":[334,544],"source":" When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>."},{"content":"In this case, you can pass the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> reference through to all XAML type system calls that require a XAML schema context.","pos":[545,696],"source":" In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context."}]}]},{"pos":[3866,4286],"content":"One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>. However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.","nodes":[{"content":"One specific constructor, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph>, does not require a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph>.","pos":[0,180],"source":"One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>."},{"content":"However, a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> that is constructed with the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph> signature returns <ph id=\"ph3\">`true`</ph> for <ph id=\"ph4\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.","pos":[181,420],"source":" However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>."}]},{"pos":[4293,4723],"content":"For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph. Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.","nodes":[{"content":"For a load path that involves <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, such a member cannot be written into an object graph.","pos":[0,120],"source":"For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph."},{"content":"Using the .NET Framework XAML services implementation, the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</ph> call throws a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> when the relevant <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember&gt;</ph> reports <ph id=\"ph4\">`true`</ph> for <ph id=\"ph5\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.","pos":[121,430],"source":" Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>."}]},{"pos":[4730,5119],"content":"You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior. For example, one or more of the  following might be true of your implementation:","nodes":[{"content":"You should not construct a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> that has a value of <ph id=\"ph2\">`true`</ph> for <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> unless your implementation can handle the exceptions from <ph id=\"ph4\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, or you have other ways to adjust the <ph id=\"ph5\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> behavior.","pos":[0,308],"source":"You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior."},{"content":"For example, one or more of the  following might be true of your implementation:","pos":[309,389]}]},{"pos":[5129,5172],"content":"The XAML schema context is available later.","nodes":[{"content":"The XAML schema context is available later.","pos":[0,43]}]},{"pos":[5182,5215],"content":"You use a member invoker pattern.","nodes":[{"content":"You use a member invoker pattern.","pos":[0,33]}]},{"pos":[5225,5356],"content":"You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer.","nodes":[{"content":"You deliberately override <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</ph> in a custom XAML writer.","pos":[0,131],"source":"You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer."}]}],"pos":[3946,9327],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>.","nodes":[{"pos":[0,212],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> class using CLR type system <ph id=\"ph2\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph> and a <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>."}],"pos":[10820,11033],"yaml":true},{"content":"Use this constructor if the member represents an event (event handler connection-point property).","nodes":[{"pos":[0,97],"content":"Use this constructor if the member represents an event (event handler connection-point property).","nodes":[{"content":"Use this constructor if the member represents an event (event handler connection-point property).","pos":[0,97]}]}],"pos":[11044,11142],"yaml":true,"extradata":"MT"},{"content":"The CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> that represents the event member.","nodes":[{"pos":[0,102],"content":"The CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph> that represents the event member.","source":"The CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> that represents the event member."}],"pos":[11364,11467],"yaml":true},{"content":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph> context that qualifies the member.","source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."}],"pos":[11552,11642],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref href=\"System.Reflection.PropertyInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>.","nodes":[{"pos":[0,215],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> class using CLR type system <ph id=\"ph2\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> and a <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref href=\"System.Reflection.PropertyInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>."}],"pos":[12788,13004],"yaml":true},{"content":"Use this constructor if the member represents a property (and specifically is not an event handler connection).","nodes":[{"pos":[0,111],"content":"Use this constructor if the member represents a property (and specifically is not an event handler connection).","nodes":[{"content":"Use this constructor if the member represents a property (and specifically is not an event handler connection).","pos":[0,111]}]}],"pos":[13015,13127],"yaml":true,"extradata":"MT"},{"content":"The CLR type system <xref href=\"System.Reflection.PropertyInfo\"></xref> that represents the property member.","nodes":[{"pos":[0,108],"content":"The CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> that represents the property member.","source":"The CLR type system <xref href=\"System.Reflection.PropertyInfo\"></xref> that represents the property member."}],"pos":[13361,13470],"yaml":true},{"content":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph> context that qualifies the member.","source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."}],"pos":[13555,13645],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.","nodes":[{"pos":[0,293],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> class using CLR type system <ph id=\"ph2\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph> and a <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph>, including <ph id=\"ph4\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> information.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information."}],"pos":[14941,15235],"yaml":true},{"content":"Use this constructor if the member represents an event (or an event handler connection-point property).","nodes":[{"pos":[0,103],"content":"Use this constructor if the member represents an event (or an event handler connection-point property).","nodes":[{"content":"Use this constructor if the member represents an event (or an event handler connection-point property).","pos":[0,103]}]}],"pos":[15246,15350],"yaml":true,"extradata":"MT"},{"content":"The CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> that represents the event member.","nodes":[{"pos":[0,102],"content":"The CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph> that represents the event member.","source":"The CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> that represents the event member."}],"pos":[15618,15721],"yaml":true},{"content":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph> context that qualifies the member.","source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."}],"pos":[15806,15896],"yaml":true},{"content":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time reflection calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,172],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> implementation that handles run-time reflection calls against the <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time reflection calls against the <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[15982,16155],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using reflection <xref href=\"System.Reflection.PropertyInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.","nodes":[{"pos":[0,291],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> class using reflection <ph id=\"ph2\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> and a <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph>, including <ph id=\"ph4\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> information.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using reflection <xref href=\"System.Reflection.PropertyInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information."}],"pos":[17469,17761],"yaml":true},{"content":"Use this constructor only if the member represents a property and if it is not an event handler connection.","nodes":[{"pos":[0,107],"content":"Use this constructor only if the member represents a property and if it is not an event handler connection.","nodes":[{"content":"Use this constructor only if the member represents a property and if it is not an event handler connection.","pos":[0,107]}]}],"pos":[17772,17880],"yaml":true,"extradata":"MT"},{"content":"The CLR type system <xref href=\"System.Reflection.PropertyInfo\"></xref> that represents the property member.","nodes":[{"pos":[0,108],"content":"The CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph> that represents the property member.","source":"The CLR type system <xref href=\"System.Reflection.PropertyInfo\"></xref> that represents the property member."}],"pos":[18160,18269],"yaml":true},{"content":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph> context that qualifies the member.","source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."}],"pos":[18354,18444],"yaml":true},{"content":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,172],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> implementation that handles run-time invocation calls against the <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[18530,18703],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable event.","nodes":[{"pos":[0,170],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> class for a <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> that represents an attachable event.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable event."}],"pos":[19903,20074],"yaml":true},{"content":"Use this constructor if the member represents an attachable event member.","nodes":[{"pos":[0,73],"content":"Use this constructor if the member represents an attachable event member.","nodes":[{"content":"Use this constructor if the member represents an attachable event member.","pos":[0,73]}]}],"pos":[20085,20159],"yaml":true,"extradata":"MT"},{"content":"The string name of the attachable event.","nodes":[{"pos":[0,40],"content":"The string name of the attachable event.","nodes":[{"content":"The string name of the attachable event.","pos":[0,40]}]}],"pos":[20402,20443],"yaml":true},{"content":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the handler `Add` method of the attachable member's backing implementation.","nodes":[{"pos":[0,149],"content":"The CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> for the handler <ph id=\"ph2\">`Add`</ph> method of the attachable member's backing implementation.","source":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the handler `Add` method of the attachable member's backing implementation."}],"pos":[20519,20669],"yaml":true},{"content":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph> context that qualifies the member.","source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."}],"pos":[20754,20844],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using a string name and declaring <xref href=\"System.Xaml.XamlType\"></xref> information. A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with this signature has significant limitations.","nodes":[{"pos":[0,287],"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using a string name and declaring <xref href=\"System.Xaml.XamlType\"></xref> information. A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with this signature has significant limitations.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> class using a string name and declaring <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> information.","pos":[0,172],"source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using a string name and declaring <xref href=\"System.Xaml.XamlType\"></xref> information."},{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> that is constructed with this signature has significant limitations.","pos":[173,287],"source":" A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with this signature has significant limitations."}]}],"pos":[21939,22227],"yaml":true},{"content":"A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \n  \n For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph. Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \n  \n You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior. For example, one or more of the following might be true of your implementation:  \n  \n-   The XAML schema context is available later.  \n  \n-   You use a member invoker pattern.  \n  \n-   You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer.","nodes":[{"pos":[0,230],"content":"A <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> that is constructed with the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph> signature returns <ph id=\"ph3\">`true`</ph> for <ph id=\"ph4\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.","source":"A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>."},{"pos":[237,667],"content":"For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph. Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.","nodes":[{"content":"For a load path that involves <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, such a member cannot be written into an object graph.","pos":[0,120],"source":"For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph."},{"content":"Using the .NET Framework XAML Services implementation, the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</ph> call throws a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> when the relevant <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember&gt;</ph> reports <ph id=\"ph4\">`true`</ph> for <ph id=\"ph5\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.","pos":[121,430],"source":" Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>."}]},{"pos":[674,1042],"content":"You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior. For example, one or more of the following might be true of your implementation:","nodes":[{"content":"You should not construct a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> with <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph><ph id=\"ph3\">`true`</ph> unless your implementation can handle the exceptions from <ph id=\"ph4\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, or you have other ways to adjust the <ph id=\"ph5\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> behavior.","pos":[0,288],"source":"You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior."},{"content":"For example, one or more of the following might be true of your implementation:","pos":[289,368]}]},{"pos":[1052,1095],"content":"The XAML schema context is available later.","nodes":[{"content":"The XAML schema context is available later.","pos":[0,43]}]},{"pos":[1105,1138],"content":"You use a member invoker pattern.","nodes":[{"content":"You use a member invoker pattern.","pos":[0,33]}]},{"pos":[1148,1279],"content":"You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer.","nodes":[{"content":"You deliberately override <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</ph> in a custom XAML writer.","pos":[0,131],"source":"You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer."}]}],"pos":[22238,23530],"yaml":true,"extradata":"MT"},{"content":"The string name of the member.","nodes":[{"pos":[0,30],"content":"The string name of the member.","nodes":[{"content":"The string name of the member.","pos":[0,30]}]}],"pos":[23717,23748],"yaml":true},{"content":"The <xref href=\"System.Xaml.XamlType\"></xref> information for the declaring type.","nodes":[{"pos":[0,81],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> information for the declaring type.","source":"The <xref href=\"System.Xaml.XamlType\"></xref> information for the declaring type."}],"pos":[23824,23906],"yaml":true},{"content":"`true` to indicate that the member is attachable; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the member is attachable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to indicate that the member is attachable; otherwise, `false`."}],"pos":[23975,24047],"yaml":true},{"content":"<code>name</code> or <code>declaringType</code> is `null`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;declaringType&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>name</code> or <code>declaringType</code> is `null`."}],"pos":[24205,24264],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable property.","nodes":[{"pos":[0,173],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> class for a <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> that represents an attachable property.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable property."}],"pos":[25528,25702],"yaml":true},{"content":"Use this constructor if the member represents an attachable property.","nodes":[{"pos":[0,69],"content":"Use this constructor if the member represents an attachable property.","nodes":[{"content":"Use this constructor if the member represents an attachable property.","pos":[0,69]}]}],"pos":[25713,25783],"yaml":true,"extradata":"MT"},{"content":"The string name of the attachable property.","nodes":[{"pos":[0,43],"content":"The string name of the attachable property.","nodes":[{"content":"The string name of the attachable property.","pos":[0,43]}]}],"pos":[26070,26114],"yaml":true},{"content":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `get` accessor of the attachable member's backing implementation.","nodes":[{"pos":[0,143],"content":"The CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">`get`</ph> accessor of the attachable member's backing implementation.","source":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `get` accessor of the attachable member's backing implementation."}],"pos":[26191,26335],"yaml":true},{"content":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `set` accessor of the attachable member's backing implementation.","nodes":[{"pos":[0,143],"content":"The CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">`set`</ph> accessor of the attachable member's backing implementation.","source":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `set` accessor of the attachable member's backing implementation."}],"pos":[26412,26556],"yaml":true},{"content":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph> context that qualifies the member.","source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."}],"pos":[26641,26731],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable event, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.","nodes":[{"pos":[0,251],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> class for a <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> that represents an attachable event, including <ph id=\"ph3\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> information.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable event, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information."}],"pos":[28099,28351],"yaml":true},{"content":"Use this constructor if the member represents an attachable event member.","nodes":[{"pos":[0,73],"content":"Use this constructor if the member represents an attachable event member.","nodes":[{"content":"Use this constructor if the member represents an attachable event member.","pos":[0,73]}]}],"pos":[28362,28436],"yaml":true,"extradata":"MT"},{"content":"The string name of the attachable event.","nodes":[{"pos":[0,40],"content":"The string name of the attachable event.","nodes":[{"content":"The string name of the attachable event.","pos":[0,40]}]}],"pos":[28725,28766],"yaml":true},{"content":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the handler `Add` method of the attachable member's backing implementation.","nodes":[{"pos":[0,149],"content":"The CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> for the handler <ph id=\"ph2\">`Add`</ph> method of the attachable member's backing implementation.","source":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the handler `Add` method of the attachable member's backing implementation."}],"pos":[28842,28992],"yaml":true},{"content":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph> context that qualifies the member.","source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."}],"pos":[29077,29167],"yaml":true},{"content":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,172],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> implementation that handles run-time invocation calls against the <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[29253,29426],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable property, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.","nodes":[{"pos":[0,254],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> class for a <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> that represents an attachable property, including <ph id=\"ph3\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> information.","source":"Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable property, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information."}],"pos":[30917,31172],"yaml":true},{"content":"Use this constructor if the member represents an attachable property member.","nodes":[{"pos":[0,76],"content":"Use this constructor if the member represents an attachable property member.","nodes":[{"content":"Use this constructor if the member represents an attachable property member.","pos":[0,76]}]}],"pos":[31183,31260],"yaml":true,"extradata":"MT"},{"content":"The string name of the attachable property.","nodes":[{"pos":[0,43],"content":"The string name of the attachable property.","nodes":[{"content":"The string name of the attachable property.","pos":[0,43]}]}],"pos":[31593,31637],"yaml":true},{"content":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `get` accessor of the attachable member's backing implementation.","nodes":[{"pos":[0,143],"content":"The CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">`get`</ph> accessor of the attachable member's backing implementation.","source":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `get` accessor of the attachable member's backing implementation."}],"pos":[31714,31858],"yaml":true},{"content":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `set` accessor of the attachable member's backing implementation.","nodes":[{"pos":[0,143],"content":"The CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">`set`</ph> accessor of the attachable member's backing implementation.","source":"The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `set` accessor of the attachable member's backing implementation."}],"pos":[31935,32079],"yaml":true},{"content":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlSchemaContext\"&gt;&lt;/xref&gt;</ph> context that qualifies the member.","source":"The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member."}],"pos":[32164,32254],"yaml":true},{"content":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,172],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> implementation that handles run-time invocation calls against the <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[32340,32513],"yaml":true},{"content":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> for the type that declares the member that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,162],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> for the type that declares the member that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> for the type that declares the member that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[33402,33565],"yaml":true},{"content":"This value is typically set during initialization and is usually not `null`.  \n  \n> [!IMPORTANT]\n>  <xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization. By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class. Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration. For any security-critical checks of declaring type information, use the underlying CLR type instead.","nodes":[{"pos":[0,76],"content":"This value is typically set during initialization and is usually not <ph id=\"ph1\">`null`</ph>.","source":"This value is typically set during initialization and is usually not `null`."},{"pos":[84,719],"content":"[!IMPORTANT]\n <xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization. By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class. Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration. For any security-critical checks of declaring type information, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" <xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization. By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class. Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration. For any security-critical checks of declaring type information, use the underlying CLR type instead.","pos":[13,633],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> information can be passed in by constructors for initialization.","pos":[1,112],"source":" <xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization."},{"content":"By calling directly into base constructors, initialization for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived classes can omit some of the value-checks that are made in the base class.","pos":[113,288],"source":" By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class."},{"content":"Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.","pos":[289,519]},{"content":"For any security-critical checks of declaring type information, use the underlying CLR type instead.","pos":[520,620]}]}]}],"pos":[33576,34301],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xaml.XamlType\"></xref> for the type that declares the member that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,157],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> for the type that declares the member that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xaml.XamlType\"></xref> for the type that declares the member that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[34439,34597],"yaml":true},{"content":"Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for deferred loading of XAML declared objects.","nodes":[{"pos":[0,136],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> object, which is used for deferred loading of XAML declared objects.","source":"Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for deferred loading of XAML declared objects."}],"pos":[35506,35643],"yaml":true},{"content":"Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.","nodes":[{"pos":[0,269],"content":"Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.","nodes":[{"content":"Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.","pos":[0,269],"nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupDeferringLoader%2A&gt;</ph> or a specific override of that method.","pos":[0,158],"source":"Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method."},{"content":"This behavior occurs in cases where the initial internal reflection logic has not already set the information.","pos":[159,269]}]}]}],"pos":[35654,35924],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> with <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlDeferringLoader\"&gt;&lt;/xref&gt;</ph> constraint on the generic.","source":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic."}],"pos":[36164,36312],"yaml":true},{"content":"Gets a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects. These report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,216],"content":"Gets a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects. These report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"content":"Gets a list of <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,67],"source":"Gets a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects."},{"content":"These report the members where dependency relationships for initialization order exist relative to this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","pos":[68,216],"source":" These report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>."}]}],"pos":[37187,37404],"yaml":true},{"content":"Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.  \n  \n The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule. The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order. By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member. You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.  \n  \n The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose. Large numbers of dependencies have the potential to slow down XAML processing. Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.  \n  \n Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.","nodes":[{"pos":[0,257],"content":"Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.","nodes":[{"content":"Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.","pos":[0,257],"nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupDependsOn%2A&gt;</ph> or a specific override of that method.","pos":[0,146],"source":"Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method."},{"content":"This behavior occurs in cases where the initial internal reflection logic has not already set the information.","pos":[147,257]}]}]},{"pos":[264,853],"content":"The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule. The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order. By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member. You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.","nodes":[{"content":"The <ph id=\"ph1\">`DependsOn`</ph> pattern can be applied to object model cases that deliberately contradict a general XAML rule.","pos":[0,110],"source":"The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule."},{"content":"The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.","pos":[111,281]},{"content":"By applying a <ph id=\"ph1\">`DependsOn`</ph> pattern to a member, you can instruct XAML writers to always process the referenced member before this member.","pos":[282,418],"source":" By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member."},{"content":"You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.","pos":[419,589]}]},{"pos":[860,1182],"content":"The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose. Large numbers of dependencies have the potential to slow down XAML processing. Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.","nodes":[{"content":"The <ph id=\"ph1\">`DependsOn`</ph> pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.","pos":[0,131],"source":"The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose."},{"content":"Large numbers of dependencies have the potential to slow down XAML processing.","pos":[132,210]},{"content":"Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.","pos":[211,322]}]},{"pos":[1189,1415],"content":"Example <ph id=\"ph1\">`DependsOn`</ph> scenarios from WPF include certain properties on <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.DataTemplate&gt;</ph>, on <ph id=\"ph4\">&lt;xref:System.Windows.Trigger&gt;</ph>, and on <ph id=\"ph5\">&lt;xref:System.Windows.Setter&gt;</ph>.","source":"Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>."}],"pos":[37415,38839],"yaml":true,"extradata":"MT"},{"content":"A list of <xref href=\"System.Xaml.XamlMember\"></xref> objects.","nodes":[{"pos":[0,62],"content":"A list of <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> objects.","source":"A list of <xref href=\"System.Xaml.XamlMember\"></xref> objects."}],"pos":[39045,39108],"yaml":true},{"content":"Indicates whether the current object is equal to another object of the same type.","nodes":[{"pos":[0,81],"content":"Indicates whether the current object is equal to another object of the same type.","nodes":[{"content":"Indicates whether the current object is equal to another object of the same type.","pos":[0,81]}]}],"pos":[40065,40147],"yaml":true},{"content":"An object to compare with this object.","nodes":[{"pos":[0,38],"content":"An object to compare with this object.","nodes":[{"content":"An object to compare with this object.","pos":[0,38]}]}],"pos":[40307,40346],"yaml":true},{"content":"`true` if the current object is equal to the <code>other</code> parameter; otherwise, `false`.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">`true`</ph> if the current object is equal to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the current object is equal to the <code>other</code> parameter; otherwise, `false`."}],"pos":[40404,40501],"yaml":true},{"content":"Indicates whether the current object is equal to another object.","nodes":[{"pos":[0,64],"content":"Indicates whether the current object is equal to another object.","nodes":[{"content":"Indicates whether the current object is equal to another object.","pos":[0,64]}]}],"pos":[41416,41481],"yaml":true},{"content":"The object to compare with this object.","nodes":[{"pos":[0,39],"content":"The object to compare with this object.","nodes":[{"content":"The object to compare with this object.","pos":[0,39]}]}],"pos":[41621,41661],"yaml":true},{"content":"`true` if the current object is equal to the <code>obj</code> parameter; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if the current object is equal to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the current object is equal to the <code>obj</code> parameter; otherwise, `false`."}],"pos":[41719,41814],"yaml":true},{"content":"Returns the hash code for this object.","nodes":[{"pos":[0,38],"content":"Returns the hash code for this object.","nodes":[{"content":"Returns the hash code for this object.","pos":[0,38]}]}],"pos":[42696,42735],"yaml":true},{"content":"An integer hash code.","nodes":[{"pos":[0,21],"content":"An integer hash code.","nodes":[{"content":"An integer hash code.","pos":[0,21]}]}],"pos":[42869,42891],"yaml":true},{"content":"Returns a list of XAML namespaces where this XAML member can exist.","nodes":[{"pos":[0,67],"content":"Returns a list of XAML namespaces where this XAML member can exist.","nodes":[{"content":"Returns a list of XAML namespaces where this XAML member can exist.","pos":[0,67]}]}],"pos":[43814,43882],"yaml":true},{"content":"The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.","nodes":[{"pos":[0,240],"content":"The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.","nodes":[{"content":"The default implementation returns the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName&gt;</ph> call result from the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> that is associated with this <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember&gt;</ph>.","pos":[0,240],"source":"The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>."}]}],"pos":[43893,44134],"yaml":true,"extradata":"MT"},{"content":"A list of XAML namespace identifiers as strings.","nodes":[{"pos":[0,48],"content":"A list of XAML namespace identifiers as strings.","nodes":[{"content":"A list of XAML namespace identifiers as strings.","pos":[0,48]}]}],"pos":[44345,44394],"yaml":true},{"content":"Gets the <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,155],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> implementation that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[45259,45415],"yaml":true},{"content":"The `Invoker` pattern is an advanced XAML type system extension technique. The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.  \n  \n If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>.  \n  \n <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> is the default. This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.  \n  \n Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.","nodes":[{"pos":[0,243],"content":"The `Invoker` pattern is an advanced XAML type system extension technique. The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.","nodes":[{"content":"The <ph id=\"ph1\">`Invoker`</ph> pattern is an advanced XAML type system extension technique.","pos":[0,74],"source":"The `Invoker` pattern is an advanced XAML type system extension technique."},{"content":"The <ph id=\"ph1\">`Invoker`</ph> pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.","pos":[75,243],"source":" The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services."}]},{"pos":[250,635],"content":"If a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;</ph> override returns <ph id=\"ph2\">`null`</ph>, or if the default implementation returns <ph id=\"ph3\">`null`</ph> because it lacks the <ph id=\"ph4\">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> for this <ph id=\"ph5\">&lt;xref:System.Xaml.XamlMember&gt;</ph>, the <ph id=\"ph6\">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph> property returns <ph id=\"ph7\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;</ph>.","source":"If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>."},{"pos":[642,960],"content":"<xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> is the default. This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;</ph> is the default.","pos":[0,102],"source":"<xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> is the default."},{"content":"This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override <ph id=\"ph1\">`Invoker`</ph> patterns are passed for construction of XAML type system entities.","pos":[103,318],"source":" This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities."}]},{"pos":[967,1109],"content":"Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.","nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupInvoker%2A&gt;</ph> or a specific override of that method.","pos":[0,142],"source":"Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method."}]}],"pos":[45426,46544],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> implementation that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[46708,46859],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property.","nodes":[{"pos":[0,120],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> is reported as an ambient property.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property."}],"pos":[47726,47847],"yaml":true},{"content":"Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method. This behavior occurs in implementations where the initial internal reflection logic has not already set the information.  \n  \n Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>. The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.  \n  \n <xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>. It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.","nodes":[{"pos":[0,267],"content":"Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method. This behavior occurs in implementations where the initial internal reflection logic has not already set the information.","nodes":[{"content":"Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method. This behavior occurs in implementations where the initial internal reflection logic has not already set the information.","pos":[0,267],"nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> or a specific override of that method.","pos":[0,146],"source":"Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method."},{"content":"This behavior occurs in implementations where the initial internal reflection logic has not already set the information.","pos":[147,267]}]}]},{"pos":[274,887],"content":"Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>. The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.","nodes":[{"content":"Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.","pos":[0,187]},{"content":"The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <ph id=\"ph1\">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph>.","pos":[188,355],"source":" The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>."},{"content":"The default implementation of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> uses this existing <ph id=\"ph2\">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> technique, and it returns <ph id=\"ph3\">`true`</ph> if <ph id=\"ph4\">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> exists on a member declaration.","pos":[356,613],"source":" The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration."}]},{"pos":[894,1338],"content":"<xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>. It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.","nodes":[{"content":"<xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>. It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.","pos":[0,444],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is found on members of several WPF types, which include <ph id=\"ph2\">&lt;xref:System.Windows.Application&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Setter&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Windows.Style&gt;</ph>.","pos":[0,199],"source":"<xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>."},{"content":"It is also found on the <ph id=\"ph1\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> type, which connotes that any member that uses <ph id=\"ph2\">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> as its type should be considered ambient even if the member is not specifically attributed.","pos":[200,444],"source":" It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed."}]}]}],"pos":[47858,49203],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> is reported as an ambient property; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property; otherwise, `false`."}],"pos":[49315,49432],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is an attachable member.","nodes":[{"pos":[0,109],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> is an attachable member.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is an attachable member."}],"pos":[50319,50429],"yaml":true},{"content":"The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.","nodes":[{"pos":[0,152],"content":"The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph> value is initialized based on which constructor was used to construct a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember&gt;</ph>.","pos":[0,152],"source":"The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>."}]}],"pos":[50440,50593],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is an attachable member; otherwise, `false`.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> is an attachable member; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is an attachable member; otherwise, `false`."}],"pos":[50708,50814],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is a XAML directive.","nodes":[{"pos":[0,105],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> is a XAML directive.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is a XAML directive."}],"pos":[51698,51804],"yaml":true},{"content":"The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>. The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`. However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.  \n  \n If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.","nodes":[{"pos":[0,455],"content":"The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>. The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`. However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> value is initialized based on which constructor was used to construct a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember&gt;</ph>.","pos":[0,151],"source":"The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>."},{"content":"The base <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> constructors initialize so that <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> is <ph id=\"ph3\">`false`</ph>.","pos":[152,279],"source":" The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlDirective&gt;</ph> class (a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class) initializes so that <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> is <ph id=\"ph4\">`true`</ph>.","pos":[280,455],"source":" However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`."}]},{"pos":[462,710],"content":"If you want to report <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> as <ph id=\"ph2\">`true`</ph> to callers of a custom XAML schema class for XAML members, make sure you derive from <ph id=\"ph3\">&lt;xref:System.Xaml.XamlDirective&gt;</ph> because that is the only way to enable that behavior.","source":"If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior."}],"pos":[51815,52530],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is a XAML directive; otherwise, `false`.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> is a XAML directive; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is a XAML directive; otherwise, `false`."}],"pos":[52644,52746],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event member.","nodes":[{"pos":[0,112],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents an event member.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event member."}],"pos":[53605,53718],"yaml":true},{"content":"Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.","nodes":[{"pos":[0,142],"content":"Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.","nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupIsEvent%2A&gt;</ph> or a specific override of that method.","pos":[0,142],"source":"Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method."}]}],"pos":[53729,53872],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event; otherwise, `false`.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents an event; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event; otherwise, `false`."}],"pos":[53982,54084],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is initialized with a valid `xamlName` string as its <xref href=\"System.Xaml.XamlMember.Name\"></xref>.","nodes":[{"pos":[0,187],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> is initialized with a valid <ph id=\"ph2\">`xamlName`</ph> string as its <ph id=\"ph3\">&lt;xref href=\"System.Xaml.XamlMember.Name\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is initialized with a valid `xamlName` string as its <xref href=\"System.Xaml.XamlMember.Name\"></xref>."}],"pos":[54963,55151],"yaml":true},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is initialized with a valid `xamlName` string; otherwise, `false`.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> is initialized with a valid <ph id=\"ph3\">`xamlName`</ph> string; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is initialized with a valid `xamlName` string; otherwise, `false`."}],"pos":[55265,55393],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a read-only member.","nodes":[{"pos":[0,115],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a read-only member.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a read-only member."}],"pos":[56270,56386],"yaml":true},{"content":"Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.","nodes":[{"pos":[0,148],"content":"Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.","nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupIsReadOnly%2A&gt;</ph> or a specific override of that method.","pos":[0,148],"source":"Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method."}]}],"pos":[56397,56546],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a read-only member; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a read-only member; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a read-only member; otherwise, `false`."}],"pos":[56659,56771],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member with a callable public `get` accessor.","nodes":[{"pos":[0,143],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a member with a callable public <ph id=\"ph2\">`get`</ph> accessor.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member with a callable public `get` accessor."}],"pos":[57659,57803],"yaml":true},{"content":"The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public. If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.  \n  \n Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","nodes":[{"pos":[0,318],"content":"The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public. If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> value checks whether the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> is public.","pos":[0,132],"source":"The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> is nonpublic, the <ph id=\"ph2\">`get`</ph> accessor is not callable in a practical way, and <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> returns <ph id=\"ph4\">`false`</ph>.","pos":[133,318],"source":" If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`."}]},{"pos":[325,477],"content":"Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.","nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> or a specific override of that method.","pos":[0,152],"source":"Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method."}]},{"pos":[485,935],"content":"[!IMPORTANT]\n The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[13,448],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> method is virtual and therefore, can be overridden.","pos":[1,108],"source":" The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden."},{"content":"The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.","pos":[109,347]},{"content":"For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[348,435]}]}]}],"pos":[57814,58757],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a callable public `get` accessor; otherwise, `false`.","nodes":[{"pos":[0,123],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a callable public <ph id=\"ph3\">`get`</ph> accessor; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a callable public `get` accessor; otherwise, `false`."}],"pos":[58872,58998],"yaml":true},{"content":"Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.","nodes":[{"pos":[0,131],"content":"Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.","nodes":[{"content":"Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.","pos":[0,131]}]}],"pos":[59870,60002],"yaml":true},{"content":"A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \n  \n For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph. Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \n  \n You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.  \n  \n Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.","nodes":[{"pos":[0,230],"content":"A <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> that is constructed with the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt;</ph> signature returns <ph id=\"ph3\">`true`</ph> for <ph id=\"ph4\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.","source":"A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>."},{"pos":[237,761],"content":"For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph. Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.","nodes":[{"content":"For a load path that involves <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember&gt;</ph> with <ph id=\"ph3\">`true`</ph> for <ph id=\"ph4\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> cannot be written into an object graph.","pos":[0,197],"source":"For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph."},{"content":"Under the default implementations in .NET Framework XAML Services APIs, the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName&gt;</ph> call throws a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlObjectWriterException&gt;</ph> when the relevant <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember&gt;</ph> reports <ph id=\"ph4\">`true`</ph> for <ph id=\"ph5\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.","pos":[198,524],"source":" Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>."}]},{"pos":[768,1076],"content":"You should not construct a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> that has a value of <ph id=\"ph2\">`true`</ph> for <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> unless your implementation can handle the exceptions from <ph id=\"ph4\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>, or you have other ways to adjust the <ph id=\"ph5\">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> behavior.","source":"You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior."},{"pos":[1083,1229],"content":"Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.","nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupIsUnknown%2A&gt;</ph> or a specific override of that method.","pos":[0,146],"source":"Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method."}]}],"pos":[60013,61251],"yaml":true,"extradata":"MT"},{"content":"`true` if the member is not resolvable; `false` if the member is resolvable.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the member is not resolvable; <ph id=\"ph2\">`false`</ph> if the member is resolvable.","source":"`true` if the member is not resolvable; `false` if the member is resolvable."}],"pos":[61363,61442],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member.","nodes":[{"pos":[0,116],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a write-only member.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member."}],"pos":[62323,62440],"yaml":true},{"content":"Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.","nodes":[{"pos":[0,150],"content":"Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.","nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A&gt;</ph> or a specific override of that method.","pos":[0,150],"source":"Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method."}]}],"pos":[62451,62602],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member; otherwise, `false`.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a write-only member; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member; otherwise, `false`."}],"pos":[62716,62829],"yaml":true},{"content":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a callable public `set` accessor.","nodes":[{"pos":[0,147],"content":"Gets a value that indicates whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a member that has a callable public <ph id=\"ph2\">`set`</ph> accessor.","source":"Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a callable public `set` accessor."}],"pos":[63724,63872],"yaml":true},{"content":"The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination. If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.  \n  \n Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","nodes":[{"pos":[0,352],"content":"The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination. If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> value considers whether the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> is public as part of the determination.","pos":[0,165],"source":"The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> is nonpublic, the <ph id=\"ph2\">`set`</ph> accessor is not callable in a practical way, and <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> returns <ph id=\"ph4\">`false`</ph>.","pos":[166,352],"source":" If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`."}]},{"pos":[359,513],"content":"Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.","nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph> or a specific override of that method.","pos":[0,154],"source":"Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method."}]},{"pos":[521,972],"content":"[!IMPORTANT]\n The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[13,449],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph> method is virtual and therefore, can be overridden.","pos":[1,109],"source":" The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden."},{"content":"The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.","pos":[110,348]},{"content":"For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[349,436]}]}]}],"pos":[63883,64863],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a callable public `set` accessor; otherwise, `false`.","nodes":[{"pos":[0,123],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a callable public <ph id=\"ph3\">`set`</ph> accessor; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a callable public `set` accessor; otherwise, `false`."}],"pos":[64979,65105],"yaml":true},{"content":"When implemented in a derived class, returns an <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation.","nodes":[{"pos":[0,127],"content":"When implemented in a derived class, returns an <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ICustomAttributeProvider\"&gt;&lt;/xref&gt;</ph> implementation.","source":"When implemented in a derived class, returns an <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation."}],"pos":[66102,66230],"yaml":true},{"content":"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values. In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.  \n  \n The default implementation returns `null`.","nodes":[{"pos":[0,285],"content":"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values. In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.","nodes":[{"content":"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values. In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.","pos":[0,285],"nodes":[{"content":"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.","pos":[0,111]},{"content":"In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph>.","pos":[112,285],"source":" In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>."}]}]},{"pos":[292,334],"content":"The default implementation returns <ph id=\"ph1\">`null`</ph>.","source":"The default implementation returns `null`."}],"pos":[66241,66580],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation.","nodes":[{"pos":[0,82],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ICustomAttributeProvider\"&gt;&lt;/xref&gt;</ph> implementation.","source":"An <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation."}],"pos":[66803,66886],"yaml":true},{"content":"Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for deferred loading of XAML declared objects.","nodes":[{"pos":[0,139],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> object, which is used for deferred loading of XAML declared objects.","source":"Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for deferred loading of XAML declared objects."}],"pos":[67851,67991],"yaml":true},{"content":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.  \n  \n The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type. If neither object is available, this method might return `null`.","nodes":[{"pos":[0,387],"content":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.","nodes":[{"content":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.","pos":[0,387],"nodes":[{"content":"This method is invoked when a caller gets a value from the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> property.","pos":[0,117],"source":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property."},{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> information.","pos":[118,387],"source":" Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information."}]}]},{"pos":[394,648],"content":"The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type. If neither object is available, this method might return `null`.","nodes":[{"content":"The default implementation returns an object either by reading <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph> or using a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlDeferringLoader&gt;</ph> from the declaring type.","pos":[0,189],"source":"The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type."},{"content":"If neither object is available, this method might return <ph id=\"ph1\">`null`</ph>.","pos":[190,254],"source":" If neither object is available, this method might return `null`."}]}],"pos":[68002,68655],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic.","nodes":[{"pos":[0,153],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> that has a <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlDeferringLoader\"&gt;&lt;/xref&gt;</ph> constraint on the generic.","source":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic."}],"pos":[68926,69080],"yaml":true},{"content":"Returns a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects. Items in the list report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,231],"content":"Returns a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects. Items in the list report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"content":"Returns a list of <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,70],"source":"Returns a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects."},{"content":"Items in the list report the members where dependency relationships for initialization order exist relative to this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","pos":[71,231],"source":" Items in the list report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>."}]}],"pos":[70001,70233],"yaml":true},{"content":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.  \n  \n The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>. The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.  \n  \n Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique. If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.  \n  \n The list is read-only.","nodes":[{"pos":[0,375],"content":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.","nodes":[{"content":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.","pos":[0,375],"nodes":[{"content":"This method is invoked when a caller gets a value from the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> property.","pos":[0,111],"source":"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property."},{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> information.","pos":[112,375],"source":" Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information."}]}]},{"pos":[382,607],"content":"The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>. The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.","nodes":[{"content":"The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>. The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.","pos":[0,225],"nodes":[{"content":"The WPF XAML reader and writer implementations attribute this case with <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph>.","pos":[0,120],"source":"The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>."},{"content":"The default implementation uses this existing <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> technique.","pos":[121,225],"source":" The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique."}]}]},{"pos":[614,976],"content":"Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique. If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.","nodes":[{"content":"Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique. If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.","pos":[0,362],"nodes":[{"content":"Override this method if you are not using <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> for this purpose and intend to replace that technique for indicating property processing order with your own technique.","pos":[0,209],"source":"Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique."},{"content":"If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.","pos":[210,362]}]}]},{"pos":[983,1005],"content":"The list is read-only.","nodes":[{"content":"The list is read-only.","pos":[0,22]}]}],"pos":[70244,71258],"yaml":true,"extradata":"MT"},{"content":"A list of <xref href=\"System.Xaml.XamlMember\"></xref> objects.","nodes":[{"pos":[0,62],"content":"A list of <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> objects.","source":"A list of <xref href=\"System.Xaml.XamlMember\"></xref> objects."}],"pos":[71495,71558],"yaml":true},{"content":"Returns a <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,141],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[72461,72603],"yaml":true},{"content":"This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.  \n  \n The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>. However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.  \n  \n Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class. If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> to callers.","nodes":[{"pos":[0,76],"content":"This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.","nodes":[{"content":"This method is invoked by calls to <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph>.","pos":[0,76],"source":"This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>."}]},{"pos":[83,449],"content":"The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>. However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.","nodes":[{"content":"The default implementation does not require that a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> be constructed by using one of the constructors that pass an initial <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph>.","pos":[0,194],"source":"The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>."},{"content":"However, an <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> value must exist for the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember&gt;</ph>; otherwise, the default implementation returns <ph id=\"ph3\">`null`</ph>.","pos":[195,366],"source":" However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`."}]},{"pos":[456,754],"content":"Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class. If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> to callers.","nodes":[{"content":"Override this method if you also derive from <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> and intend to return the derived class.","pos":[0,128],"source":"Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class."},{"content":"If you return <ph id=\"ph1\">`null`</ph>, <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph> returns <ph id=\"ph3\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName&gt;</ph> to callers.","pos":[129,298],"source":" If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> to callers."}]}],"pos":[72614,73375],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information for this <xref href=\"System.Xaml.XamlMember\"></xref>; or `null`.","nodes":[{"pos":[0,138],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlMemberInvoker\"&gt;&lt;/xref&gt;</ph> information for this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>; or <ph id=\"ph3\">`null`</ph>.","source":"The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information for this <xref href=\"System.Xaml.XamlMember\"></xref>; or `null`."}],"pos":[73570,73709],"yaml":true},{"content":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property.","nodes":[{"pos":[0,100],"content":"Returns whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> is reported as an ambient property.","source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property."}],"pos":[74622,74723],"yaml":true},{"content":"This method is invoked by internal calls that check for ambient XAML property information. Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers. The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types. Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.  \n  \n Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.  \n  \n Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>.","nodes":[{"pos":[0,820],"content":"This method is invoked by internal calls that check for ambient XAML property information. Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers. The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types. Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.","nodes":[{"content":"This method is invoked by internal calls that check for ambient XAML property information.","pos":[0,90]},{"content":"Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.","pos":[91,194]},{"content":"The internal calls that reference <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.","pos":[195,430],"source":" The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly."},{"content":"The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.","pos":[431,570]},{"content":"Specifically, the default implementation checks for <ph id=\"ph1\">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> and returns <ph id=\"ph2\">`true`</ph> for <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember.LookupIsAmbient%2A&gt;</ph> if <ph id=\"ph4\">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> exists on a member definition.","pos":[571,820],"source":" Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition."}]},{"pos":[827,1032],"content":"Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.","nodes":[{"content":"Override this method if you are not using <ph id=\"ph1\">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.","pos":[0,205],"source":"Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique."}]},{"pos":[1039,1266],"content":"Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>.","nodes":[{"content":"Example APIs from WPF that attribute with <ph id=\"ph1\">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> are <ph id=\"ph2\">&lt;xref:System.Windows.Trigger.Property%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName&gt;</ph>.","pos":[0,227],"source":"Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>."}]}],"pos":[74734,76007],"yaml":true,"extradata":"MT"},{"content":"`true` to report this <xref href=\"System.Xaml.XamlMember\"></xref> as an ambient property; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> to report this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> as an ambient property; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to report this <xref href=\"System.Xaml.XamlMember\"></xref> as an ambient property; otherwise, `false`."}],"pos":[76150,76262],"yaml":true},{"content":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event.","nodes":[{"pos":[0,85],"content":"Returns whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents an event.","source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event."}],"pos":[77165,77251],"yaml":true},{"content":"The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.  \n  \n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","nodes":[{"pos":[0,168],"content":"The default implementation checks whether <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> is of type <ph id=\"ph2\">&lt;xref:System.Reflection.EventInfo&gt;</ph>, and if it is, returns <ph id=\"ph3\">`true`</ph>.","source":"The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`."},{"pos":[175,526],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","pos":[0,351],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph>.","pos":[0,96],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>."},{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","pos":[97,351],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis."}]}]}],"pos":[77262,77793],"yaml":true,"extradata":"MT"},{"content":"`true` to report that this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event; otherwise, `false`.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">`true`</ph> to report that this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents an event; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to report that this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event; otherwise, `false`."}],"pos":[77934,78048],"yaml":true},{"content":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an intended read-only property.","nodes":[{"pos":[0,107],"content":"Returns whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents an intended read-only property.","source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an intended read-only property."}],"pos":[78967,79075],"yaml":true},{"content":"The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.  \n  \n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","nodes":[{"pos":[0,191],"content":"The default implementation returns <ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> exists, but a public <ph id=\"ph3\">`set`</ph> accessor does not exist for it, as determined by internal reflection.","source":"The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection."},{"pos":[198,552],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","pos":[0,354],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph>.","pos":[0,99],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>."},{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.","pos":[100,354],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis."}]}]}],"pos":[79086,79643],"yaml":true,"extradata":"MT"},{"content":"`true` to report this <xref href=\"System.Xaml.XamlMember\"></xref> as an intended read-only property; otherwise, `false`.","nodes":[{"pos":[0,120],"content":"<ph id=\"ph1\">`true`</ph> to report this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> as an intended read-only property; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to report this <xref href=\"System.Xaml.XamlMember\"></xref> as an intended read-only property; otherwise, `false`."}],"pos":[79787,79910],"yaml":true},{"content":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a property that has a public `get` accessor.","nodes":[{"pos":[0,120],"content":"Returns whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a property that has a public <ph id=\"ph2\">`get`</ph> accessor.","source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a property that has a public `get` accessor."}],"pos":[80844,80965],"yaml":true},{"content":"The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.  \n  \n <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type. Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.  \n  \n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","nodes":[{"pos":[0,169],"content":"The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.","nodes":[{"content":"The default implementation returns results based either on internal reflection or the negation of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</ph>, processing in that order.","pos":[0,169],"source":"The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order."}]},{"pos":[176,467],"content":"<xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type. Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> returns whether the member itself is public; it returns <ph id=\"ph2\">`true`</ph> for a public member on a nonpublic declaring type.","pos":[0,165],"source":"<xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> instead, if you also want to consider the visibility of the declaring type.","pos":[166,291],"source":" Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type."}]},{"pos":[474,778],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,304],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph>.","pos":[0,101],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>."},{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[102,304],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]}]},{"pos":[786,1236],"content":"[!IMPORTANT]\n The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[13,448],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupIsReadPublic%2A&gt;</ph> method is virtual and therefore, can be overridden.","pos":[1,108],"source":" The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden."},{"content":"The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.","pos":[109,347]},{"content":"For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[348,435]}]}]}],"pos":[80976,82222],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a property that has a public `get` accessor; otherwise, `false`.","nodes":[{"pos":[0,134],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a property that has a public <ph id=\"ph3\">`get`</ph> accessor; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a property that has a public `get` accessor; otherwise, `false`."}],"pos":[82368,82505],"yaml":true},{"content":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that is not resolvable by the backing system that is used for type and member resolution.","nodes":[{"pos":[0,174],"content":"Returns whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a member that is not resolvable by the backing system that is used for type and member resolution.","source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that is not resolvable by the backing system that is used for type and member resolution."}],"pos":[83423,83598],"yaml":true},{"content":"This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>. The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.  \n  \n Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"pos":[0,301],"content":"This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>. The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.","nodes":[{"content":"This method may be invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>.","pos":[0,102],"source":"This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>."},{"content":"The default implementation returns results that are based on either internal reflection or checking for a <ph id=\"ph1\">`null`</ph> value of <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>, processing in that order.","pos":[103,301],"source":" The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order."}]},{"pos":[308,510],"content":"Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,202],"source":"Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]}],"pos":[83609,84124],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a non-resolvable member; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a non-resolvable member; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a non-resolvable member; otherwise, `false`."}],"pos":[84267,84384],"yaml":true},{"content":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a public `set` accessor but not a public `get` accessor.","nodes":[{"pos":[0,150],"content":"Returns whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a member that has a public <ph id=\"ph2\">`set`</ph> accessor but not a public <ph id=\"ph3\">`get`</ph> accessor.","source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a public `set` accessor but not a public `get` accessor."}],"pos":[85311,85462],"yaml":true},{"content":"The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.  \n  \n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"pos":[0,207],"content":"The default implementation returns <ph id=\"ph1\">`true`</ph> if an <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> exists that has a public <ph id=\"ph3\">`set`</ph> accessor and a nonpublic <ph id=\"ph4\">`get`</ph> accessor, as determined by internal reflection.","source":"The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection."},{"pos":[214,517],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,303],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsWriteOnly%2A&gt;</ph>.","pos":[0,100],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>."},{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[101,303],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]}]}],"pos":[85473,85995],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member; otherwise, `false`.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a write-only member; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member; otherwise, `false`."}],"pos":[86140,86253],"yaml":true},{"content":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a public `set` accessor.","nodes":[{"pos":[0,118],"content":"Returns whether this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a member that has a public <ph id=\"ph2\">`set`</ph> accessor.","source":"Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a public `set` accessor."}],"pos":[87194,87313],"yaml":true},{"content":"The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.  \n  \n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","nodes":[{"pos":[0,166],"content":"The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.","nodes":[{"content":"The default implementation returns results based  either internal reflection or the negation of <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph>, processing in that order.","pos":[0,166],"source":"The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order."}]},{"pos":[173,478],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,305],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph>.","pos":[0,102],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>."},{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[103,305],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]}]},{"pos":[486,937],"content":"[!IMPORTANT]\n The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[13,449],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupIsWritePublic%2A&gt;</ph> method is virtual and therefore, can be overridden.","pos":[1,109],"source":" The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden."},{"content":"The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.","pos":[110,348]},{"content":"For any security-critical checks of access levels, use the underlying CLR type instead.","pos":[349,436]}]}]}],"pos":[87324,88269],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a writable member; otherwise, `false`.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> represents a writable member; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a writable member; otherwise, `false`."}],"pos":[88416,88527],"yaml":true},{"content":"Returns the opening and closing bracket characters for a markup extension.","nodes":[{"pos":[0,74],"content":"Returns the opening and closing bracket characters for a markup extension.","nodes":[{"content":"Returns the opening and closing bracket characters for a markup extension.","pos":[0,74]}]}],"pos":[89584,89659],"yaml":true},{"content":"A collection containing the opening and closing bracket characters.","nodes":[{"pos":[0,67],"content":"A collection containing the opening and closing bracket characters.","nodes":[{"content":"A collection containing the opening and closing bracket characters.","pos":[0,67]}]}],"pos":[89935,90003],"yaml":true},{"content":"Returns the <xref href=\"System.Xaml.XamlType\"></xref> of the type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist.","nodes":[{"pos":[0,130],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> of the type where the <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> can exist.","source":"Returns the <xref href=\"System.Xaml.XamlType\"></xref> of the type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist."}],"pos":[90718,90849],"yaml":true},{"content":"The default implementation distinguishes between attachable and non-attachable members. For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.  \n  \n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"pos":[0,471],"content":"The default implementation distinguishes between attachable and non-attachable members. For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.","nodes":[{"content":"The default implementation distinguishes between attachable and non-attachable members. For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.","pos":[0,471],"nodes":[{"content":"The default implementation distinguishes between attachable and non-attachable members.","pos":[0,87]},{"content":"For non-attachable members, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> always returns <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph>.","pos":[88,228],"source":" For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>."},{"content":"For attachable members, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> returns a result based on examining the <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> accessor parameter type and interprets that type based on XAML schema context.","pos":[229,471],"source":" For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context."}]}]},{"pos":[478,780],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,302],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph>.","pos":[0,99],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>."},{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[100,302],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]}]}],"pos":[90860,91645],"yaml":true,"extradata":"MT"},{"content":"The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist.","nodes":[{"pos":[0,73],"content":"The type where the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> can exist.","source":"The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist."}],"pos":[91811,91885],"yaml":true},{"content":"Returns the <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member.","nodes":[{"pos":[0,93],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> of the type that is used by the member.","source":"Returns the <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member."}],"pos":[92771,92865],"yaml":true},{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.  \n  \n The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.  \n  \n-   For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.  \n  \n-   For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).  \n  \n-   For a method, <xref:System.Xaml.XamlType> is the return type.  \n  \n In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.  \n  \n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"pos":[0,352],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.","pos":[0,352],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph>.","pos":[0,93],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>."},{"content":"Override this method if you want <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> information.","pos":[94,352],"source":" Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information."}]}]},{"pos":[359,581],"content":"The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.","nodes":[{"content":"The default implementation uses different code paths and conceptual meanings for the returned <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> that is based on whether this <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember&gt;</ph> represents a property, method, or event.","pos":[0,222],"source":"The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event."}]},{"pos":[591,714],"content":"For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.","nodes":[{"content":"For a property, the returned <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> is the type that sets the property or is returned by the property.","pos":[0,123],"source":"For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property."}]},{"pos":[724,851],"content":"For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).","nodes":[{"content":"For an event, the returned <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> is the required event handler type (a delegate in a CLR implementation).","pos":[0,127],"source":"For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation)."}]},{"pos":[861,922],"content":"For a method, <xref:System.Xaml.XamlType> is the return type.","nodes":[{"content":"For a method, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> is the return type.","pos":[0,61],"source":"For a method, <xref:System.Xaml.XamlType> is the return type."}]},{"pos":[929,1029],"content":"In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.","nodes":[{"content":"In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.","pos":[0,100]}]},{"pos":[1036,1332],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,296],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph>.","pos":[0,93],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>."},{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[94,296],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]}]}],"pos":[92876,94223],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> of the type that is used by the member.","source":"The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member."}],"pos":[94383,94469],"yaml":true},{"content":"Returns a type converter implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,113],"content":"Returns a type converter implementation that is associated with this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a type converter implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[95403,95517],"yaml":true},{"content":"The default implementation uses the following logic and processing order:  \n  \n-   If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.  \n  \n-   If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.  \n  \n-   If the member is an event, an event-specific type converter is returned.  \n  \n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"pos":[0,73],"content":"The default implementation uses the following logic and processing order:","nodes":[{"content":"The default implementation uses the following logic and processing order:","pos":[0,73]}]},{"pos":[83,318],"content":"If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.","nodes":[{"content":"If attributing exists at the member level (<ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph>), the attribute information is used for a call to <ph id=\"ph2\">&lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt;</ph> against the XAML schema context.","pos":[0,235],"source":"If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context."}]},{"pos":[328,441],"content":"If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> is valid, a type converter that is associated with the type is returned.","pos":[0,113],"source":"If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned."}]},{"pos":[451,523],"content":"If the member is an event, an event-specific type converter is returned.","nodes":[{"content":"If the member is an event, an event-specific type converter is returned.","pos":[0,72]}]},{"pos":[530,835],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,305],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph>.","pos":[0,102],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>."},{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[103,305],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]}]}],"pos":[95528,96374],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> instance with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint; or `null`.","nodes":[{"pos":[0,156],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> instance with <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;&lt;/xref&gt;</ph> constraint; or <ph id=\"ph3\">`null`</ph>.","source":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> instance with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint; or `null`."}],"pos":[96651,96808],"yaml":true},{"content":"Returns a `get` accessor that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,98],"content":"Returns a <ph id=\"ph1\">`get`</ph> accessor that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a `get` accessor that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[97769,97868],"yaml":true},{"content":"The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic. This behavior can result in `null` for certain cases. including cases where no associated accessor exists or the member is not a property.  \n  \n This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.","nodes":[{"pos":[0,475],"content":"The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic. This behavior can result in `null` for certain cases. including cases where no associated accessor exists or the member is not a property.","nodes":[{"content":"The default implementation interprets the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> property as <ph id=\"ph2\">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> and returns the value of <ph id=\"ph3\">&lt;xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName&gt;</ph> (with the parameter set to <ph id=\"ph4\">`true`</ph>), which means that the returned method can be nonpublic.","pos":[0,336],"source":"The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic."},{"content":"This behavior can result in <ph id=\"ph1\">`null`</ph> for certain cases.","pos":[337,390],"source":" This behavior can result in `null` for certain cases."},{"content":"including cases where no associated accessor exists or the member is not a property.","pos":[391,475]}]},{"pos":[482,1119],"content":"This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.","nodes":[{"content":"This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.","pos":[0,637],"nodes":[{"content":"This method is invoked when a caller gets a value from the <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;</ph> property on an associated <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph>.","pos":[0,193],"source":"This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>."},{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[194,396],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."},{"content":"Make sure to implement <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> so that they all return correlated results.","pos":[397,637],"source":" Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results."}]}]}],"pos":[97879,99003],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Reflection.MethodInfo\"></xref> for the associated `get` accessor; or `null`.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> for the associated <ph id=\"ph2\">`get`</ph> accessor; or <ph id=\"ph3\">`null`</ph>.","source":"The <xref href=\"System.Reflection.MethodInfo\"></xref> for the associated `get` accessor; or `null`."}],"pos":[99191,99291],"yaml":true},{"content":"Returns a CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,149],"content":"Returns a CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[100255,100405],"yaml":true},{"content":"The default implementation returns the underlying member information, which is based on construction. If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.  \n  \n If an underlying member was set during construction, you should not need to call this method.  \n  \n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.","nodes":[{"pos":[0,282],"content":"The default implementation returns the underlying member information, which is based on construction. If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.","nodes":[{"content":"The default implementation returns the underlying member information, which is based on construction.","pos":[0,101]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Reflection.MemberInfo&gt;</ph> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns <ph id=\"ph2\">`null`</ph>.","pos":[102,282],"source":" If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`."}]},{"pos":[289,382],"content":"If an underlying member was set during construction, you should not need to call this method.","nodes":[{"content":"If an underlying member was set during construction, you should not need to call this method.","pos":[0,93]}]},{"pos":[389,938],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.","pos":[0,549],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>.","pos":[0,105],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>."},{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[106,308],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."},{"content":"Make sure to implement <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> so that they all return correlated results.","pos":[309,549],"source":" Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results."}]}]}],"pos":[100416,101361],"yaml":true,"extradata":"MT"},{"content":"A CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> object that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>; or `null`.","nodes":[{"pos":[0,159],"content":"A CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> object that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>; or <ph id=\"ph3\">`null`</ph>.","source":"A CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> object that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>; or `null`."}],"pos":[101549,101709],"yaml":true},{"content":"Returns a `set` accessor that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,98],"content":"Returns a <ph id=\"ph1\">`set`</ph> accessor that is associated with this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a `set` accessor that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[102673,102772],"yaml":true},{"content":"The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic. This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.  \n  \n This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.","nodes":[{"pos":[0,450],"content":"The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic. This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.","nodes":[{"content":"The default implementation interprets <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> as <ph id=\"ph2\">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> and returns the value of <ph id=\"ph3\">&lt;xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName&gt;</ph> (with the parameter set to <ph id=\"ph4\">`true`</ph>), which means that the returned method can be nonpublic.","pos":[0,323],"source":"The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic."},{"content":"This can result in <ph id=\"ph1\">`null`</ph> for certain cases, including cases where there is no such accessor, or the member is not a property.","pos":[324,450],"source":" This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property."}]},{"pos":[457,1080],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.","pos":[0,623],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;</ph> on an associated <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph>.Override this method if you want to report uniform results for an entire <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,382],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."},{"content":"Make sure to implement <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> so that they all return correlated results.","pos":[383,623],"source":" Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results."}]}]}],"pos":[102783,103868],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Reflection.MethodInfo\"></xref> for the associated `set` accessor; or `null`.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph> for the associated <ph id=\"ph2\">`set`</ph> accessor; or <ph id=\"ph3\">`null`</ph>.","source":"The <xref href=\"System.Reflection.MethodInfo\"></xref> for the associated `set` accessor; or `null`."}],"pos":[104056,104156],"yaml":true},{"content":"Returns a value serializer implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,115],"content":"Returns a value serializer implementation that is associated with this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a value serializer implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[105114,105230],"yaml":true},{"content":"The default implementation uses the following logic and processing order:  \n  \n-   If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.  \n  \n-   If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.  \n  \n-   If the previous conditions do not apply, `null` is returned.  \n  \n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"pos":[0,73],"content":"The default implementation uses the following logic and processing order:","nodes":[{"content":"The default implementation uses the following logic and processing order:","pos":[0,73]}]},{"pos":[83,320],"content":"If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.","nodes":[{"content":"If attributing exists at the member level (<ph id=\"ph1\">&lt;xref:System.Windows.Markup.ValueSerializerAttribute&gt;</ph>), the attribute information is used for a call to <ph id=\"ph2\">&lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt;</ph> against the XAML schema context.","pos":[0,237],"source":"If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context."}]},{"pos":[330,444],"content":"If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> is valid, a value converter that is associated with the type is returned.","pos":[0,114],"source":"If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned."}]},{"pos":[454,514],"content":"If the previous conditions do not apply, <ph id=\"ph1\">`null`</ph> is returned.","source":"If the previous conditions do not apply, `null` is returned."},{"pos":[521,828],"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","nodes":[{"content":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[0,307],"nodes":[{"content":"This method is invoked when a caller gets a value from <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph>.","pos":[0,104],"source":"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>."},{"content":"Override this method if you want to report uniform results for an entire <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> derived class, or if you have specialized metadata available to determine this on a per-case basis.","pos":[105,307],"source":" Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis."}]}]}],"pos":[105241,106080],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> instance with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint, or `null`.","nodes":[{"pos":[0,158],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> instance with <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> constraint, or <ph id=\"ph3\">`null`</ph>.","source":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> instance with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint, or `null`."}],"pos":[106363,106522],"yaml":true},{"content":"Defines the opening and closing bracket characters for a markup extension.","nodes":[{"pos":[0,74],"content":"Defines the opening and closing bracket characters for a markup extension.","nodes":[{"content":"Defines the opening and closing bracket characters for a markup extension.","pos":[0,74]}]}],"pos":[107541,107616],"yaml":true},{"content":"A collection containing the opening and closing bracket characters.","nodes":[{"pos":[0,67],"content":"A collection containing the opening and closing bracket characters.","nodes":[{"content":"A collection containing the opening and closing bracket characters.","pos":[0,67]}]}],"pos":[107861,107929],"yaml":true},{"content":"Gets the `xamlName` name string that declares this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,95],"content":"Gets the <ph id=\"ph1\">`xamlName`</ph> name string that declares this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the `xamlName` name string that declares this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[108562,108658],"yaml":true},{"content":"This value is always set during construction. The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.  \n  \n [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect. It is possible to declare a member name that is legal under CLR but not valid under XAML naming. You should avoid this situation if possible.","nodes":[{"pos":[0,325],"content":"This value is always set during construction. The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.","nodes":[{"content":"This value is always set during construction.","pos":[0,45]},{"content":"The constructors that are implemented by <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be <ph id=\"ph2\">`null`</ph> or an empty string, if you are using default .NET Framework XAML Services implementations.","pos":[46,325],"source":" The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations."}]},{"pos":[332,614],"content":"[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect. It is possible to declare a member name that is legal under CLR but not valid under XAML naming. You should avoid this situation if possible.","nodes":[{"content":"<bpt id=\"p1\">[</bpt>XamlName Grammar<ept id=\"p1\">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept> and naming rules for CLR type and members are not an exact intersect.","pos":[0,140],"source":"[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect."},{"content":"It is possible to declare a member name that is legal under CLR but not valid under XAML naming.","pos":[141,237]},{"content":"You should avoid this situation if possible.","pos":[238,282]}]}],"pos":[108669,109288],"yaml":true,"extradata":"MT"},{"content":"The `xamlName` name string that declares this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">`xamlName`</ph> name string that declares this <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"The `xamlName` name string that declares this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[109396,109487],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.Xaml.XamlMember\"></xref> objects have the same value.","nodes":[{"pos":[0,105],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> objects have the same value.","source":"Determines whether two specified <xref href=\"System.Xaml.XamlMember\"></xref> objects have the same value."}],"pos":[110576,110682],"yaml":true},{"content":"A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`.","nodes":[{"pos":[0,56],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`."}],"pos":[110902,110959],"yaml":true},{"content":"A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`.","nodes":[{"pos":[0,56],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`."}],"pos":[111035,111092],"yaml":true},{"content":"`true` if the value of <code>xamlMember1</code> is the same as the value of <code>xamlMember2</code>; otherwise, `false`.","nodes":[{"pos":[0,121],"content":"<ph id=\"ph1\">`true`</ph> if the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">xamlMember1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is the same as the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">xamlMember2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the value of <code>xamlMember1</code> is the same as the value of <code>xamlMember2</code>; otherwise, `false`."}],"pos":[111150,111274],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.Xaml.XamlMember\"></xref> objects have different values.","nodes":[{"pos":[0,107],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> objects have different values.","source":"Determines whether two specified <xref href=\"System.Xaml.XamlMember\"></xref> objects have different values."}],"pos":[112382,112490],"yaml":true},{"content":"A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`.","nodes":[{"pos":[0,56],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`."}],"pos":[112712,112769],"yaml":true},{"content":"A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`.","nodes":[{"pos":[0,56],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`."}],"pos":[112845,112902],"yaml":true},{"content":"`true` if the value of <code>xamlMember1</code> differs from the value of <code>xamlMember2</code>; otherwise, `false`.","nodes":[{"pos":[0,119],"content":"<ph id=\"ph1\">`true`</ph> if the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">xamlMember1</ph><ept id=\"p1\">&lt;/code&gt;</ept> differs from the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">xamlMember2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the value of <code>xamlMember1</code> differs from the value of <code>xamlMember2</code>; otherwise, `false`."}],"pos":[112960,113082],"yaml":true},{"content":"Gets the single XAML namespace URI that identifies the primary XAML namespace for this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,131],"content":"Gets the single XAML namespace URI that identifies the primary XAML namespace for this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the single XAML namespace URI that identifies the primary XAML namespace for this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[114033,114165],"yaml":true},{"content":"The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list. The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.","nodes":[{"pos":[0,366],"content":"The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list. The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.","nodes":[{"content":"The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list. The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.","pos":[0,366],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;</ph> property provides the same value as calling <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.GetXamlNamespaces%2A&gt;</ph> and then getting the first value string from the returned list.","pos":[0,218],"source":"The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list."},{"content":"The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.","pos":[219,366]}]}]}],"pos":[114176,114543],"yaml":true,"extradata":"MT"},{"content":"The identifier for the primary XAML namespace for this <xref href=\"System.Xaml.XamlMember\"></xref>, as a string.","nodes":[{"pos":[0,112],"content":"The identifier for the primary XAML namespace for this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>, as a string.","source":"The identifier for the primary XAML namespace for this <xref href=\"System.Xaml.XamlMember\"></xref>, as a string."}],"pos":[114669,114782],"yaml":true},{"content":"Gets a <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> value, which indicates how a visual designer should process the member.","nodes":[{"pos":[0,153],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignerSerializationVisibility\"&gt;&lt;/xref&gt;</ph> value, which indicates how a visual designer should process the member.","source":"Gets a <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> value, which indicates how a visual designer should process the member."}],"pos":[115748,115902],"yaml":true},{"content":"A value of the <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> enumeration. The default is <xref href=\"System.ComponentModel.DesignerSerializationVisibility.Visible\"></xref>.","nodes":[{"pos":[0,201],"content":"A value of the <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> enumeration. The default is <xref href=\"System.ComponentModel.DesignerSerializationVisibility.Visible\"></xref>.","nodes":[{"content":"A value of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignerSerializationVisibility\"&gt;&lt;/xref&gt;</ph> enumeration.","pos":[0,102],"source":"A value of the <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> enumeration."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignerSerializationVisibility.Visible\"&gt;&lt;/xref&gt;</ph>.","pos":[103,201],"source":" The default is <xref href=\"System.ComponentModel.DesignerSerializationVisibility.Visible\"></xref>."}]}],"pos":[116116,116318],"yaml":true},{"content":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist.","nodes":[{"pos":[0,127],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> of the type where the <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> can exist.","source":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist."}],"pos":[117207,117335],"yaml":true},{"content":"The returned value is different for attachable and non-attachable members. For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:  \n  \n-   If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.  \n  \n-   If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called. The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors. A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.","nodes":[{"pos":[0,322],"content":"The returned value is different for attachable and non-attachable members. For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:","nodes":[{"content":"The returned value is different for attachable and non-attachable members. For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:","pos":[0,322],"nodes":[{"content":"The returned value is different for attachable and non-attachable members.","pos":[0,74]},{"content":"For non-attachable members, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.TargetType%2A&gt;</ph> returns <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph>.","pos":[75,202],"source":" For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>."},{"content":"For attachable members, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> returns a result that is based on this logic:","pos":[203,322],"source":" For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:"}]}]},{"pos":[332,503],"content":"If reflection cannot resolve a backing (<ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> <ph id=\"ph2\">`true`</ph>), this method returns an internal constant that represents a generic object type.","source":"If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type."},{"pos":[513,950],"content":"If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called. The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors. A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.","nodes":[{"content":"If the previous condition does not apply, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> is called.","pos":[0,102],"source":"If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called."},{"content":"The default implementation returns a <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> that is based on examining the methods that implement the <ph id=\"ph2\">`get`</ph> and <ph id=\"ph3\">`set`</ph> accessors.","pos":[103,252],"source":" The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors."},{"content":"A class might override <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupTargetType%2A&gt;</ph> to use a different behavior such as other metadata forms that might report target types for attachable members.","pos":[253,437],"source":" A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members."}]}],"pos":[117346,118303],"yaml":true,"extradata":"MT"},{"content":"The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist.","nodes":[{"pos":[0,73],"content":"The type where the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> can exist.","source":"The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist."}],"pos":[118438,118512],"yaml":true},{"content":"Returns a string representation of this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,84],"content":"Returns a string representation of this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a string representation of this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[119380,119465],"yaml":true},{"content":"This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.","nodes":[{"pos":[0,66],"content":"This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.","nodes":[{"content":"This implementation returns <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.","pos":[0,66],"source":"This implementation returns <xref:System.Xaml.XamlMember.Name%2A>."}]}],"pos":[119476,119543],"yaml":true,"extradata":"MT"},{"content":"A string representation of this <xref href=\"System.Xaml.XamlMember\"></xref>.","nodes":[{"pos":[0,76],"content":"A string representation of this <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph>.","source":"A string representation of this <xref href=\"System.Xaml.XamlMember\"></xref>."}],"pos":[119678,119755],"yaml":true},{"content":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member.","nodes":[{"pos":[0,90],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> of the type that is used by the member.","source":"Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member."}],"pos":[120593,120684],"yaml":true},{"content":"Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method. This occurs when the initial internal reflection logic has not already set the information.  \n  \n In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings. Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:  \n  \n-   For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.  \n  \n-   For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).  \n  \n-   For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.  \n  \n In each case, the XAML schema context is used to evaluate the XAML type from the backing type.","nodes":[{"pos":[0,228],"content":"Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method. This occurs when the initial internal reflection logic has not already set the information.","nodes":[{"content":"Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method. This occurs when the initial internal reflection logic has not already set the information.","pos":[0,228],"nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupType%2A&gt;</ph> or a specific override of that method.","pos":[0,136],"source":"Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method."},{"content":"This occurs when the initial internal reflection logic has not already set the information.","pos":[137,228]}]}]},{"pos":[235,544],"content":"In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings. Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:","nodes":[{"content":"In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings. Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:","pos":[0,309],"nodes":[{"content":"In the default behavior (no <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.LookupType%2A&gt;</ph> override), the returned <ph id=\"ph2\">&lt;xref:System.Xaml.XamlType&gt;</ph> can have different conceptual meanings.","pos":[0,163],"source":"In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings."},{"content":"Which meaning applies depends on whether this <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> represents a property, method, or event, as the following list shows:","pos":[164,309],"source":" Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:"}]}]},{"pos":[554,677],"content":"For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.","nodes":[{"content":"For a property, the returned <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> is the type that sets the property or is returned by the property.","pos":[0,123],"source":"For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property."}]},{"pos":[687,814],"content":"For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).","nodes":[{"content":"For an event, the returned <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> is the required event handler type (a delegate in a CLR implementation).","pos":[0,127],"source":"For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation)."}]},{"pos":[824,921],"content":"For a method, <ph id=\"ph1\">&lt;xref:System.Xaml.XamlType&gt;</ph> is the return type of that method, which may be <ph id=\"ph2\">`null`</ph>.","source":"For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`."},{"pos":[928,1022],"content":"In each case, the XAML schema context is used to evaluate the XAML type from the backing type.","nodes":[{"content":"In each case, the XAML schema context is used to evaluate the XAML type from the backing type.","pos":[0,94]}]}],"pos":[120695,121730],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlType\"&gt;&lt;/xref&gt;</ph> of the type that is used by the member.","source":"The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member."}],"pos":[121859,121945],"yaml":true},{"content":"Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which can be used for type conversion construction of XAML declared objects.","nodes":[{"pos":[0,152],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> object, which can be used for type conversion construction of XAML declared objects.","source":"Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which can be used for type conversion construction of XAML declared objects."}],"pos":[122833,122986],"yaml":true},{"content":"Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.  \n  \n Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>. The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:  \n  \n-   The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter. This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.  \n  \n-   The return value reports a built-in value converter. These converters exist for certain internal operations that are performed by a XAML writer. In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives. For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly. For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.  \n  \n-   The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>. In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> is {`Object}`. However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion. Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.  \n  \n If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods. However, many conversion methods rely on service context. If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.","nodes":[{"pos":[0,255],"content":"Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.","nodes":[{"content":"Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.","pos":[0,255],"nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A&gt;</ph> or a specific override of that method.","pos":[0,154],"source":"Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method."},{"content":"This behavior occurs when the initial internal reflection logic has not already set the information.","pos":[155,255]}]}]},{"pos":[262,583],"content":"Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>. The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:","nodes":[{"content":"Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>. The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:","pos":[0,321],"nodes":[{"content":"Implementations that return a non-null property value for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> are not necessarily a working <ph id=\"ph2\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.","pos":[0,178],"source":"Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>."},{"content":"The following is a list of possible non-null return values for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> and what these values represent:","pos":[179,321],"source":" The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:"}]}]},{"pos":[593,885],"content":"The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter. This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.","nodes":[{"content":"The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter. This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.","pos":[0,292],"nodes":[{"content":"The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.","pos":[0,143]},{"content":"This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.","pos":[144,292]}]}]},{"pos":[895,1565],"content":"The return value reports a built-in value converter. These converters exist for certain internal operations that are performed by a XAML writer. In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives. For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly. For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.","nodes":[{"content":"The return value reports a built-in value converter. These converters exist for certain internal operations that are performed by a XAML writer. In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives. For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly. For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.","pos":[0,670],"nodes":[{"content":"The return value reports a built-in value converter.","pos":[0,52]},{"content":"These converters exist for certain internal operations that are performed by a XAML writer.","pos":[53,144]},{"content":"In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.","pos":[145,270]},{"content":"For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.","pos":[271,429]},{"content":"For example, a conversion for an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> value has built-in forwarded conversion, and therefore, the <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A&gt;</ph> value references <ph id=\"ph3\">&lt;xref:System.ComponentModel.Int32Converter&gt;</ph>.","pos":[430,670],"source":" For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>."}]}]},{"pos":[1575,2275],"content":"The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>. In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> is {`Object}`. However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion. Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.","nodes":[{"content":"The return value reports the special case of an unconstrained object model; that is, the <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember&gt;</ph> has a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> value of <ph id=\"ph3\">&lt;xref:System.Object&gt;</ph>.","pos":[0,193],"source":"The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>."},{"content":"In this case, the <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> reports that the <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName&gt;</ph> is {<ph id=\"ph3\">`Object}`</ph>.","pos":[194,374],"source":" In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> is {`Object}`."},{"content":"However, <ph id=\"ph1\">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph> is <ph id=\"ph2\">`null`</ph> because no actual type or instance is available to perform this conversion.","pos":[375,539],"source":" However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion."},{"content":"Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.","pos":[540,700]}]},{"pos":[2282,2714],"content":"If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods. However, many conversion methods rely on service context. If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.","nodes":[{"content":"If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods. However, many conversion methods rely on service context. If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.","pos":[0,432],"nodes":[{"content":"If you can access a working <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> from <ph id=\"ph2\">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>, you can invoke its conversion methods.","pos":[0,185],"source":"If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods."},{"content":"However, many conversion methods rely on service context.","pos":[186,243]},{"content":"If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.","pos":[244,432]}]}]}],"pos":[122997,125724],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> value, with a <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint on the generic.","nodes":[{"pos":[0,160],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> value, with a <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.TypeConverter\"&gt;&lt;/xref&gt;</ph> constraint on the generic.","source":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> value, with a <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint on the generic."}],"pos":[125970,126131],"yaml":true},{"content":"Gets the CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> that is available for a member that is constructed by <xref href=\"System.Reflection.PropertyInfo\"></xref>, <xref href=\"System.Reflection.MethodInfo\"></xref>, or <xref href=\"System.Reflection.EventInfo\"></xref>.","nodes":[{"pos":[0,285],"content":"Gets the CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> that is available for a member that is constructed by <ph id=\"ph2\">&lt;xref href=\"System.Reflection.PropertyInfo\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Reflection.MethodInfo\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph4\">&lt;xref href=\"System.Reflection.EventInfo\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> that is available for a member that is constructed by <xref href=\"System.Reflection.PropertyInfo\"></xref>, <xref href=\"System.Reflection.MethodInfo\"></xref>, or <xref href=\"System.Reflection.EventInfo\"></xref>."}],"pos":[127046,127332],"yaml":true},{"content":"Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.","nodes":[{"pos":[0,160],"content":"Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.","nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A&gt;</ph> or a specific override of that method.","pos":[0,160],"source":"Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method."}]}],"pos":[127343,127504],"yaml":true,"extradata":"MT"},{"content":"CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> information, as cast from the initial constructor parameters. A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with the <xref href=\"System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\"></xref> signature returns `null`.","nodes":[{"pos":[0,329],"content":"CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> information, as cast from the initial constructor parameters. A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with the <xref href=\"System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\"></xref> signature returns `null`.","nodes":[{"content":"CLR type system <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> information, as cast from the initial constructor parameters.","pos":[0,127],"source":"CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> information, as cast from the initial constructor parameters."},{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.XamlMember\"&gt;&lt;/xref&gt;</ph> that is constructed with the <ph id=\"ph2\">&lt;xref href=\"System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\"&gt;&lt;/xref&gt;</ph> signature returns <ph id=\"ph3\">`null`</ph>.","pos":[128,329],"source":" A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with the <xref href=\"System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\"></xref> signature returns `null`."}]}],"pos":[127721,128051],"yaml":true},{"content":"Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for value serialization of XAML declared objects.","nodes":[{"pos":[0,139],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> object, which is used for value serialization of XAML declared objects.","source":"Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for value serialization of XAML declared objects."}],"pos":[129031,129171],"yaml":true},{"content":"Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.  \n  \n Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>. See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.","nodes":[{"pos":[0,259],"content":"Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.","nodes":[{"content":"Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.","pos":[0,259],"nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph> invokes <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.LookupValueSerializer%2A&gt;</ph> or a specific override of that method.","pos":[0,158],"source":"Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method."},{"content":"This behavior occurs when the initial internal reflection logic has not already set the information.","pos":[159,259]}]}]},{"pos":[266,577],"content":"Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>. See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.","nodes":[{"content":"Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>. See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.","pos":[0,311],"nodes":[{"content":"Not all cases that return a non-null property value for <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph> are necessarily a working <ph id=\"ph2\">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.","pos":[0,176],"source":"Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>."},{"content":"See <ph id=\"ph1\">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph>; the same considerations apply to <ph id=\"ph2\">&lt;xref:System.Xaml.XamlMember.ValueSerializer%2A&gt;</ph>.","pos":[177,311],"source":" See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>."}]}]}],"pos":[129182,129764],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint on the generic.","nodes":[{"pos":[0,153],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Xaml.Schema.XamlValueConverter`1\"&gt;&lt;/xref&gt;</ph> with <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.ValueSerializer\"&gt;&lt;/xref&gt;</ph> constraint on the generic.","source":"A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint on the generic."}],"pos":[130016,130170],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xaml.XamlMember\n  commentId: T:System.Xaml.XamlMember\n  id: XamlMember\n  children:\n  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\n  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  - System.Xaml.XamlMember.DeclaringType\n  - System.Xaml.XamlMember.DeferringLoader\n  - System.Xaml.XamlMember.DependsOn\n  - System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)\n  - System.Xaml.XamlMember.Equals(System.Object)\n  - System.Xaml.XamlMember.GetHashCode\n  - System.Xaml.XamlMember.GetXamlNamespaces\n  - System.Xaml.XamlMember.Invoker\n  - System.Xaml.XamlMember.IsAmbient\n  - System.Xaml.XamlMember.IsAttachable\n  - System.Xaml.XamlMember.IsDirective\n  - System.Xaml.XamlMember.IsEvent\n  - System.Xaml.XamlMember.IsNameValid\n  - System.Xaml.XamlMember.IsReadOnly\n  - System.Xaml.XamlMember.IsReadPublic\n  - System.Xaml.XamlMember.IsUnknown\n  - System.Xaml.XamlMember.IsWriteOnly\n  - System.Xaml.XamlMember.IsWritePublic\n  - System.Xaml.XamlMember.LookupCustomAttributeProvider\n  - System.Xaml.XamlMember.LookupDeferringLoader\n  - System.Xaml.XamlMember.LookupDependsOn\n  - System.Xaml.XamlMember.LookupInvoker\n  - System.Xaml.XamlMember.LookupIsAmbient\n  - System.Xaml.XamlMember.LookupIsEvent\n  - System.Xaml.XamlMember.LookupIsReadOnly\n  - System.Xaml.XamlMember.LookupIsReadPublic\n  - System.Xaml.XamlMember.LookupIsUnknown\n  - System.Xaml.XamlMember.LookupIsWriteOnly\n  - System.Xaml.XamlMember.LookupIsWritePublic\n  - System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters\n  - System.Xaml.XamlMember.LookupTargetType\n  - System.Xaml.XamlMember.LookupType\n  - System.Xaml.XamlMember.LookupTypeConverter\n  - System.Xaml.XamlMember.LookupUnderlyingGetter\n  - System.Xaml.XamlMember.LookupUnderlyingMember\n  - System.Xaml.XamlMember.LookupUnderlyingSetter\n  - System.Xaml.XamlMember.LookupValueSerializer\n  - System.Xaml.XamlMember.MarkupExtensionBracketCharacters\n  - System.Xaml.XamlMember.Name\n  - System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  - System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  - System.Xaml.XamlMember.PreferredXamlNamespace\n  - System.Xaml.XamlMember.SerializationVisibility\n  - System.Xaml.XamlMember.TargetType\n  - System.Xaml.XamlMember.ToString\n  - System.Xaml.XamlMember.Type\n  - System.Xaml.XamlMember.TypeConverter\n  - System.Xaml.XamlMember.UnderlyingMember\n  - System.Xaml.XamlMember.ValueSerializer\n  langs:\n  - csharp\n  name: XamlMember\n  nameWithType: XamlMember\n  fullName: System.Xaml.XamlMember\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <xref href=\"System.Xaml.XamlNodeType.StartMember\"></xref>) and also for general XAML type system logic.\n  remarks: \"<xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses. For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context. The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system. This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.  \\n  \\n## Lookup* APIs and XamlMember Derived Classes  \\n <xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override. These members have names that always start with the string `Lookup`. The remainder of the API name then references the property that the virtual method influences. For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class. You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.  \\n  \\n The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class. By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology. You can also use a provided XAML schema context under this scheme and still return the results you want.  \\n  \\n As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>. This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object. In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>). Therefore, by default, the XAML type system depends on the CLR type system. However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>. Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.  \\n  \\n## Constructing XamlMember Without XAML Schema Context  \\n Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization. The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type. When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>. In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.  \\n  \\n One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>. However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \\n  \\n For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph. Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \\n  \\n You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior. For example, one or more of the  following might be true of your implementation:  \\n  \\n-   The XAML schema context is available later.  \\n  \\n-   You use a member invoker pattern.  \\n  \\n-   You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer.\"\n  syntax:\n    content: 'public class XamlMember : IEquatable<System.Xaml.XamlMember>'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Xaml.XamlDirective\n  implements:\n  - System.IEquatable{System.Xaml.XamlMember}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)\n  commentId: M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(EventInfo, XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(EventInfo, XamlSchemaContext)\n  fullName: XamlMember.XamlMember(EventInfo, XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>.\n  remarks: Use this constructor if the member represents an event (event handler connection-point property).\n  syntax:\n    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: eventInfo\n      type: System.Reflection.EventInfo\n      description: The CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> that represents the event member.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)\n  commentId: M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(PropertyInfo, XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(PropertyInfo, XamlSchemaContext)\n  fullName: XamlMember.XamlMember(PropertyInfo, XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref href=\"System.Reflection.PropertyInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>.\n  remarks: Use this constructor if the member represents a property (and specifically is not an event handler connection).\n  syntax:\n    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: propertyInfo\n      type: System.Reflection.PropertyInfo\n      description: The CLR type system <xref href=\"System.Reflection.PropertyInfo\"></xref> that represents the property member.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  commentId: M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(EventInfo, XamlSchemaContext, XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(EventInfo, XamlSchemaContext, XamlMemberInvoker)\n  fullName: XamlMember.XamlMember(EventInfo, XamlSchemaContext, XamlMemberInvoker)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.\n  remarks: Use this constructor if the member represents an event (or an event handler connection-point property).\n  syntax:\n    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);\n    parameters:\n    - id: eventInfo\n      type: System.Reflection.EventInfo\n      description: The CLR type system <xref href=\"System.Reflection.EventInfo\"></xref> that represents the event member.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n    - id: invoker\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time reflection calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  commentId: M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(PropertyInfo, XamlSchemaContext, XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(PropertyInfo, XamlSchemaContext, XamlMemberInvoker)\n  fullName: XamlMember.XamlMember(PropertyInfo, XamlSchemaContext, XamlMemberInvoker)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using reflection <xref href=\"System.Reflection.PropertyInfo\"></xref> and a <xref href=\"System.Xaml.XamlSchemaContext\"></xref>, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.\n  remarks: Use this constructor only if the member represents a property and if it is not an event handler connection.\n  syntax:\n    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);\n    parameters:\n    - id: propertyInfo\n      type: System.Reflection.PropertyInfo\n      description: The CLR type system <xref href=\"System.Reflection.PropertyInfo\"></xref> that represents the property member.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n    - id: invoker\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  commentId: M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(String, MethodInfo, XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(String, MethodInfo, XamlSchemaContext)\n  fullName: XamlMember.XamlMember(String, MethodInfo, XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable event.\n  remarks: Use this constructor if the member represents an attachable event member.\n  syntax:\n    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: attachableEventName\n      type: System.String\n      description: The string name of the attachable event.\n    - id: adder\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the handler `Add` method of the attachable member's backing implementation.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\n  commentId: M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\n  id: '#ctor(System.String,System.Xaml.XamlType,System.Boolean)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(String, XamlType, Boolean)\n  nameWithType: XamlMember.XamlMember(String, XamlType, Boolean)\n  fullName: XamlMember.XamlMember(String, XamlType, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class using a string name and declaring <xref href=\"System.Xaml.XamlType\"></xref> information. A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with this signature has significant limitations.\n  remarks: \"A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \\n  \\n For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph. Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \\n  \\n You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior. For example, one or more of the following might be true of your implementation:  \\n  \\n-   The XAML schema context is available later.  \\n  \\n-   You use a member invoker pattern.  \\n  \\n-   You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> in a custom XAML writer.\"\n  syntax:\n    content: public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);\n    parameters:\n    - id: name\n      type: System.String\n      description: The string name of the member.\n    - id: declaringType\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> information for the declaring type.\n    - id: isAttachable\n      type: System.Boolean\n      description: '`true` to indicate that the member is attachable; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>declaringType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  commentId: M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext)\n  fullName: XamlMember.XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable property.\n  remarks: Use this constructor if the member represents an attachable property.\n  syntax:\n    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);\n    parameters:\n    - id: attachablePropertyName\n      type: System.String\n      description: The string name of the attachable property.\n    - id: getter\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `get` accessor of the attachable member's backing implementation.\n    - id: setter\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `set` accessor of the attachable member's backing implementation.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  commentId: M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(String, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(String, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n  fullName: XamlMember.XamlMember(String, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable event, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.\n  remarks: Use this constructor if the member represents an attachable event member.\n  syntax:\n    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);\n    parameters:\n    - id: attachableEventName\n      type: System.String\n      description: The string name of the attachable event.\n    - id: adder\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the handler `Add` method of the attachable member's backing implementation.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n    - id: invoker\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  commentId: M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n  fullName: XamlMember.XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Initializes a new instance of the <xref href=\"System.Xaml.XamlMember\"></xref> class for a <xref href=\"System.Xaml.XamlMember\"></xref> that represents an attachable property, including <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information.\n  remarks: Use this constructor if the member represents an attachable property member.\n  syntax:\n    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);\n    parameters:\n    - id: attachablePropertyName\n      type: System.String\n      description: The string name of the attachable property.\n    - id: getter\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `get` accessor of the attachable member's backing implementation.\n    - id: setter\n      type: System.Reflection.MethodInfo\n      description: The CLR type system <xref href=\"System.Reflection.MethodInfo\"></xref> for the `set` accessor of the attachable member's backing implementation.\n    - id: schemaContext\n      type: System.Xaml.XamlSchemaContext\n      description: The <xref href=\"System.Xaml.XamlSchemaContext\"></xref> context that qualifies the member.\n    - id: invoker\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that handles run-time invocation calls against the <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.DeclaringType\n  commentId: P:System.Xaml.XamlMember.DeclaringType\n  id: DeclaringType\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: DeclaringType\n  nameWithType: XamlMember.DeclaringType\n  fullName: XamlMember.DeclaringType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.XamlType\"></xref> for the type that declares the member that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"This value is typically set during initialization and is usually not `null`.  \\n  \\n> [!IMPORTANT]\\n>  <xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization. By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class. Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration. For any security-critical checks of declaring type information, use the underlying CLR type instead.\"\n  syntax:\n    content: public System.Xaml.XamlType DeclaringType { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> for the type that declares the member that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.DeclaringType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.DeferringLoader\n  commentId: P:System.Xaml.XamlMember.DeferringLoader\n  id: DeferringLoader\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: DeferringLoader\n  nameWithType: XamlMember.DeferringLoader\n  fullName: XamlMember.DeferringLoader\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for deferred loading of XAML declared objects.\n  remarks: Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.\n  syntax:\n    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}\n      description: A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic.\n  overload: System.Xaml.XamlMember.DeferringLoader*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.DependsOn\n  commentId: P:System.Xaml.XamlMember.DependsOn\n  id: DependsOn\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: DependsOn\n  nameWithType: XamlMember.DependsOn\n  fullName: XamlMember.DependsOn\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects. These report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.  \\n  \\n The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule. The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order. By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member. You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.  \\n  \\n The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose. Large numbers of dependencies have the potential to slow down XAML processing. Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.  \\n  \\n Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.\"\n  syntax:\n    content: public System.Collections.Generic.IList<System.Xaml.XamlMember> DependsOn { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.XamlMember}\n      description: A list of <xref href=\"System.Xaml.XamlMember\"></xref> objects.\n  overload: System.Xaml.XamlMember.DependsOn*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)\n  commentId: M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)\n  id: Equals(System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: Equals(XamlMember)\n  nameWithType: XamlMember.Equals(XamlMember)\n  fullName: XamlMember.Equals(XamlMember)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Indicates whether the current object is equal to another object of the same type.\n  syntax:\n    content: public bool Equals (System.Xaml.XamlMember other);\n    parameters:\n    - id: other\n      type: System.Xaml.XamlMember\n      description: An object to compare with this object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current object is equal to the <code>other</code> parameter; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.Equals(System.Object)\n  commentId: M:System.Xaml.XamlMember.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: XamlMember.Equals(Object)\n  fullName: XamlMember.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Indicates whether the current object is equal to another object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with this object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current object is equal to the <code>obj</code> parameter; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.GetHashCode\n  commentId: M:System.Xaml.XamlMember.GetHashCode\n  id: GetHashCode\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: XamlMember.GetHashCode()\n  fullName: XamlMember.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the hash code for this object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer hash code.\n  overload: System.Xaml.XamlMember.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.GetXamlNamespaces\n  commentId: M:System.Xaml.XamlMember.GetXamlNamespaces\n  id: GetXamlNamespaces\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: GetXamlNamespaces()\n  nameWithType: XamlMember.GetXamlNamespaces()\n  fullName: XamlMember.GetXamlNamespaces()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a list of XAML namespaces where this XAML member can exist.\n  remarks: The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.\n  syntax:\n    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.String}\n      description: A list of XAML namespace identifiers as strings.\n  overload: System.Xaml.XamlMember.GetXamlNamespaces*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.Invoker\n  commentId: P:System.Xaml.XamlMember.Invoker\n  id: Invoker\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: Invoker\n  nameWithType: XamlMember.Invoker\n  fullName: XamlMember.Invoker\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The `Invoker` pattern is an advanced XAML type system extension technique. The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.  \\n  \\n If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>.  \\n  \\n <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> is the default. This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.  \\n  \\n Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.\"\n  syntax:\n    content: public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }\n    return:\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.Invoker*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.IsAmbient\n  commentId: P:System.Xaml.XamlMember.IsAmbient\n  id: IsAmbient\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsAmbient\n  nameWithType: XamlMember.IsAmbient\n  fullName: XamlMember.IsAmbient\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property.\n  remarks: \"Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method. This behavior occurs in implementations where the initial internal reflection logic has not already set the information.  \\n  \\n Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>. The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.  \\n  \\n <xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>. It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.\"\n  syntax:\n    content: public bool IsAmbient { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.IsAmbient*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.IsAttachable\n  commentId: P:System.Xaml.XamlMember.IsAttachable\n  id: IsAttachable\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsAttachable\n  nameWithType: XamlMember.IsAttachable\n  fullName: XamlMember.IsAttachable\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is an attachable member.\n  remarks: The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.\n  syntax:\n    content: public bool IsAttachable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is an attachable member; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.IsAttachable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.IsDirective\n  commentId: P:System.Xaml.XamlMember.IsDirective\n  id: IsDirective\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsDirective\n  nameWithType: XamlMember.IsDirective\n  fullName: XamlMember.IsDirective\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is a XAML directive.\n  remarks: \"The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>. The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`. However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.  \\n  \\n If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.\"\n  syntax:\n    content: public bool IsDirective { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is a XAML directive; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.IsDirective*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.IsEvent\n  commentId: P:System.Xaml.XamlMember.IsEvent\n  id: IsEvent\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsEvent\n  nameWithType: XamlMember.IsEvent\n  fullName: XamlMember.IsEvent\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event member.\n  remarks: Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.\n  syntax:\n    content: public bool IsEvent { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.IsEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.IsNameValid\n  commentId: P:System.Xaml.XamlMember.IsNameValid\n  id: IsNameValid\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsNameValid\n  nameWithType: XamlMember.IsNameValid\n  fullName: XamlMember.IsNameValid\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> is initialized with a valid `xamlName` string as its <xref href=\"System.Xaml.XamlMember.Name\"></xref>.\n  syntax:\n    content: public bool IsNameValid { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> is initialized with a valid `xamlName` string; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.IsNameValid*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.IsReadOnly\n  commentId: P:System.Xaml.XamlMember.IsReadOnly\n  id: IsReadOnly\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: XamlMember.IsReadOnly\n  fullName: XamlMember.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a read-only member.\n  remarks: Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a read-only member; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.IsReadPublic\n  commentId: P:System.Xaml.XamlMember.IsReadPublic\n  id: IsReadPublic\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsReadPublic\n  nameWithType: XamlMember.IsReadPublic\n  fullName: XamlMember.IsReadPublic\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member with a callable public `get` accessor.\n  remarks: \"The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public. If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.  \\n  \\n Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.\"\n  syntax:\n    content: public bool IsReadPublic { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a callable public `get` accessor; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.IsReadPublic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.IsUnknown\n  commentId: P:System.Xaml.XamlMember.IsUnknown\n  id: IsUnknown\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsUnknown\n  nameWithType: XamlMember.IsUnknown\n  fullName: XamlMember.IsUnknown\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.\n  remarks: \"A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \\n  \\n For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph. Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.  \\n  \\n You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.  \\n  \\n Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.\"\n  syntax:\n    content: public bool IsUnknown { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the member is not resolvable; `false` if the member is resolvable.'\n  overload: System.Xaml.XamlMember.IsUnknown*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.IsWriteOnly\n  commentId: P:System.Xaml.XamlMember.IsWriteOnly\n  id: IsWriteOnly\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsWriteOnly\n  nameWithType: XamlMember.IsWriteOnly\n  fullName: XamlMember.IsWriteOnly\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member.\n  remarks: Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.\n  syntax:\n    content: public bool IsWriteOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.IsWriteOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.IsWritePublic\n  commentId: P:System.Xaml.XamlMember.IsWritePublic\n  id: IsWritePublic\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: IsWritePublic\n  nameWithType: XamlMember.IsWritePublic\n  fullName: XamlMember.IsWritePublic\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a value that indicates whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a callable public `set` accessor.\n  remarks: \"The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination. If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.  \\n  \\n Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.\"\n  syntax:\n    content: public bool IsWritePublic { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a callable public `set` accessor; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.IsWritePublic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider\n  commentId: M:System.Xaml.XamlMember.LookupCustomAttributeProvider\n  id: LookupCustomAttributeProvider\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupCustomAttributeProvider()\n  nameWithType: XamlMember.LookupCustomAttributeProvider()\n  fullName: XamlMember.LookupCustomAttributeProvider()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: When implemented in a derived class, returns an <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation.\n  remarks: \"Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values. In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.  \\n  \\n The default implementation returns `null`.\"\n  syntax:\n    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();\n    parameters: []\n    return:\n      type: System.Reflection.ICustomAttributeProvider\n      description: An <xref href=\"System.Reflection.ICustomAttributeProvider\"></xref> implementation.\n  overload: System.Xaml.XamlMember.LookupCustomAttributeProvider*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupDeferringLoader\n  commentId: M:System.Xaml.XamlMember.LookupDeferringLoader\n  id: LookupDeferringLoader\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupDeferringLoader()\n  nameWithType: XamlMember.LookupDeferringLoader()\n  fullName: XamlMember.LookupDeferringLoader()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for deferred loading of XAML declared objects.\n  remarks: \"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.  \\n  \\n The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type. If neither object is available, this method might return `null`.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}\n      description: A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> that has a <xref href=\"System.Xaml.XamlDeferringLoader\"></xref> constraint on the generic.\n  overload: System.Xaml.XamlMember.LookupDeferringLoader*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupDependsOn\n  commentId: M:System.Xaml.XamlMember.LookupDependsOn\n  id: LookupDependsOn\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupDependsOn()\n  nameWithType: XamlMember.LookupDependsOn()\n  fullName: XamlMember.LookupDependsOn()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a list of <xref href=\"System.Xaml.XamlMember\"></xref> objects. Items in the list report the members where dependency relationships for initialization order exist relative to this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property. Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.  \\n  \\n The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>. The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.  \\n  \\n Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique. If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.  \\n  \\n The list is read-only.\"\n  syntax:\n    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlMember> LookupDependsOn ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Xaml.XamlMember}\n      description: A list of <xref href=\"System.Xaml.XamlMember\"></xref> objects.\n  overload: System.Xaml.XamlMember.LookupDependsOn*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupInvoker\n  commentId: M:System.Xaml.XamlMember.LookupInvoker\n  id: LookupInvoker\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupInvoker()\n  nameWithType: XamlMember.LookupInvoker()\n  fullName: XamlMember.LookupInvoker()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.  \\n  \\n The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>. However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.  \\n  \\n Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class. If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> to callers.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlMemberInvoker\n      description: The <xref href=\"System.Xaml.Schema.XamlMemberInvoker\"></xref> information for this <xref href=\"System.Xaml.XamlMember\"></xref>; or `null`.\n  overload: System.Xaml.XamlMember.LookupInvoker*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupIsAmbient\n  commentId: M:System.Xaml.XamlMember.LookupIsAmbient\n  id: LookupIsAmbient\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsAmbient()\n  nameWithType: XamlMember.LookupIsAmbient()\n  fullName: XamlMember.LookupIsAmbient()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> is reported as an ambient property.\n  remarks: \"This method is invoked by internal calls that check for ambient XAML property information. Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers. The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types. Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.  \\n  \\n Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.  \\n  \\n Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>.\"\n  syntax:\n    content: protected virtual bool LookupIsAmbient ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` to report this <xref href=\"System.Xaml.XamlMember\"></xref> as an ambient property; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.LookupIsAmbient*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupIsEvent\n  commentId: M:System.Xaml.XamlMember.LookupIsEvent\n  id: LookupIsEvent\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsEvent()\n  nameWithType: XamlMember.LookupIsEvent()\n  fullName: XamlMember.LookupIsEvent()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event.\n  remarks: \"The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.\"\n  syntax:\n    content: protected virtual bool LookupIsEvent ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` to report that this <xref href=\"System.Xaml.XamlMember\"></xref> represents an event; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.LookupIsEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupIsReadOnly\n  commentId: M:System.Xaml.XamlMember.LookupIsReadOnly\n  id: LookupIsReadOnly\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsReadOnly()\n  nameWithType: XamlMember.LookupIsReadOnly()\n  fullName: XamlMember.LookupIsReadOnly()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents an intended read-only property.\n  remarks: \"The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.\"\n  syntax:\n    content: protected virtual bool LookupIsReadOnly ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` to report this <xref href=\"System.Xaml.XamlMember\"></xref> as an intended read-only property; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.LookupIsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupIsReadPublic\n  commentId: M:System.Xaml.XamlMember.LookupIsReadPublic\n  id: LookupIsReadPublic\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsReadPublic()\n  nameWithType: XamlMember.LookupIsReadPublic()\n  fullName: XamlMember.LookupIsReadPublic()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a property that has a public `get` accessor.\n  remarks: \"The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.  \\n  \\n <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type. Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.\"\n  syntax:\n    content: protected virtual bool LookupIsReadPublic ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a property that has a public `get` accessor; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.LookupIsReadPublic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupIsUnknown\n  commentId: M:System.Xaml.XamlMember.LookupIsUnknown\n  id: LookupIsUnknown\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsUnknown()\n  nameWithType: XamlMember.LookupIsUnknown()\n  fullName: XamlMember.LookupIsUnknown()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that is not resolvable by the backing system that is used for type and member resolution.\n  remarks: \"This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>. The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.  \\n  \\n Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual bool LookupIsUnknown ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a non-resolvable member; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.LookupIsUnknown*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupIsWriteOnly\n  commentId: M:System.Xaml.XamlMember.LookupIsWriteOnly\n  id: LookupIsWriteOnly\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsWriteOnly()\n  nameWithType: XamlMember.LookupIsWriteOnly()\n  fullName: XamlMember.LookupIsWriteOnly()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a public `set` accessor but not a public `get` accessor.\n  remarks: \"The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual bool LookupIsWriteOnly ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a write-only member; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.LookupIsWriteOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupIsWritePublic\n  commentId: M:System.Xaml.XamlMember.LookupIsWritePublic\n  id: LookupIsWritePublic\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupIsWritePublic()\n  nameWithType: XamlMember.LookupIsWritePublic()\n  fullName: XamlMember.LookupIsWritePublic()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns whether this <xref href=\"System.Xaml.XamlMember\"></xref> represents a member that has a public `set` accessor.\n  remarks: \"The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.\"\n  syntax:\n    content: protected virtual bool LookupIsWritePublic ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.Xaml.XamlMember\"></xref> represents a writable member; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.LookupIsWritePublic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters\n  commentId: M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters\n  id: LookupMarkupExtensionBracketCharacters\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupMarkupExtensionBracketCharacters()\n  nameWithType: XamlMember.LookupMarkupExtensionBracketCharacters()\n  fullName: XamlMember.LookupMarkupExtensionBracketCharacters()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the opening and closing bracket characters for a markup extension.\n  syntax:\n    content: protected virtual System.Collections.Generic.IReadOnlyDictionary<char,char> LookupMarkupExtensionBracketCharacters ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IReadOnlyDictionary{System.Char,System.Char}\n      description: A collection containing the opening and closing bracket characters.\n  overload: System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Xaml.XamlMember.LookupTargetType\n  commentId: M:System.Xaml.XamlMember.LookupTargetType\n  id: LookupTargetType\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupTargetType()\n  nameWithType: XamlMember.LookupTargetType()\n  fullName: XamlMember.LookupTargetType()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the <xref href=\"System.Xaml.XamlType\"></xref> of the type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist.\n  remarks: \"The default implementation distinguishes between attachable and non-attachable members. For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlType LookupTargetType ();\n    parameters: []\n    return:\n      type: System.Xaml.XamlType\n      description: The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist.\n  overload: System.Xaml.XamlMember.LookupTargetType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupType\n  commentId: M:System.Xaml.XamlMember.LookupType\n  id: LookupType\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupType()\n  nameWithType: XamlMember.LookupType()\n  fullName: XamlMember.LookupType()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns the <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member.\n  remarks: \"This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.  \\n  \\n The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.  \\n  \\n-   For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.  \\n  \\n-   For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).  \\n  \\n-   For a method, <xref:System.Xaml.XamlType> is the return type.  \\n  \\n In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual System.Xaml.XamlType LookupType ();\n    parameters: []\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member.\n  overload: System.Xaml.XamlMember.LookupType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupTypeConverter\n  commentId: M:System.Xaml.XamlMember.LookupTypeConverter\n  id: LookupTypeConverter\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupTypeConverter()\n  nameWithType: XamlMember.LookupTypeConverter()\n  fullName: XamlMember.LookupTypeConverter()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a type converter implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The default implementation uses the following logic and processing order:  \\n  \\n-   If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.  \\n  \\n-   If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.  \\n  \\n-   If the member is an event, an event-specific type converter is returned.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}\n      description: A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> instance with <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint; or `null`.\n  overload: System.Xaml.XamlMember.LookupTypeConverter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupUnderlyingGetter\n  commentId: M:System.Xaml.XamlMember.LookupUnderlyingGetter\n  id: LookupUnderlyingGetter\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupUnderlyingGetter()\n  nameWithType: XamlMember.LookupUnderlyingGetter()\n  fullName: XamlMember.LookupUnderlyingGetter()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a `get` accessor that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic. This behavior can result in `null` for certain cases. including cases where no associated accessor exists or the member is not a property.  \\n  \\n This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.\"\n  syntax:\n    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: The <xref href=\"System.Reflection.MethodInfo\"></xref> for the associated `get` accessor; or `null`.\n  overload: System.Xaml.XamlMember.LookupUnderlyingGetter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupUnderlyingMember\n  commentId: M:System.Xaml.XamlMember.LookupUnderlyingMember\n  id: LookupUnderlyingMember\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupUnderlyingMember()\n  nameWithType: XamlMember.LookupUnderlyingMember()\n  fullName: XamlMember.LookupUnderlyingMember()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The default implementation returns the underlying member information, which is based on construction. If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.  \\n  \\n If an underlying member was set during construction, you should not need to call this method.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.\"\n  syntax:\n    content: protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();\n    parameters: []\n    return:\n      type: System.Reflection.MemberInfo\n      description: A CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> object that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>; or `null`.\n  overload: System.Xaml.XamlMember.LookupUnderlyingMember*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupUnderlyingSetter\n  commentId: M:System.Xaml.XamlMember.LookupUnderlyingSetter\n  id: LookupUnderlyingSetter\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupUnderlyingSetter()\n  nameWithType: XamlMember.LookupUnderlyingSetter()\n  fullName: XamlMember.LookupUnderlyingSetter()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a `set` accessor that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> (with the parameter set to `true`), which means that the returned method can be nonpublic. This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.\"\n  syntax:\n    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: The <xref href=\"System.Reflection.MethodInfo\"></xref> for the associated `set` accessor; or `null`.\n  overload: System.Xaml.XamlMember.LookupUnderlyingSetter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.LookupValueSerializer\n  commentId: M:System.Xaml.XamlMember.LookupValueSerializer\n  id: LookupValueSerializer\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: LookupValueSerializer()\n  nameWithType: XamlMember.LookupValueSerializer()\n  fullName: XamlMember.LookupValueSerializer()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a value serializer implementation that is associated with this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"The default implementation uses the following logic and processing order:  \\n  \\n-   If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.  \\n  \\n-   If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.  \\n  \\n-   If the previous conditions do not apply, `null` is returned.  \\n  \\n This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>. Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.\"\n  syntax:\n    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();\n    parameters: []\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}\n      description: A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> instance with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint, or `null`.\n  overload: System.Xaml.XamlMember.LookupValueSerializer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.MarkupExtensionBracketCharacters\n  commentId: P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters\n  id: MarkupExtensionBracketCharacters\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: MarkupExtensionBracketCharacters\n  nameWithType: XamlMember.MarkupExtensionBracketCharacters\n  fullName: XamlMember.MarkupExtensionBracketCharacters\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Defines the opening and closing bracket characters for a markup extension.\n  syntax:\n    content: public System.Collections.Generic.IReadOnlyDictionary<char,char> MarkupExtensionBracketCharacters { get; }\n    return:\n      type: System.Collections.Generic.IReadOnlyDictionary{System.Char,System.Char}\n      description: A collection containing the opening and closing bracket characters.\n  overload: System.Xaml.XamlMember.MarkupExtensionBracketCharacters*\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Xaml.XamlMember.Name\n  commentId: P:System.Xaml.XamlMember.Name\n  id: Name\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: Name\n  nameWithType: XamlMember.Name\n  fullName: XamlMember.Name\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the `xamlName` name string that declares this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: \"This value is always set during construction. The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.  \\n  \\n [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect. It is possible to declare a member name that is legal under CLR but not valid under XAML naming. You should avoid this situation if possible.\"\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The `xamlName` name string that declares this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  commentId: M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  id: op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: op_Equality(XamlMember, XamlMember)\n  nameWithType: XamlMember.op_Equality(XamlMember, XamlMember)\n  fullName: XamlMember.op_Equality(XamlMember, XamlMember)\n  type: Operator\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Determines whether two specified <xref href=\"System.Xaml.XamlMember\"></xref> objects have the same value.\n  syntax:\n    content: public static bool op_Equality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);\n    parameters:\n    - id: xamlMember1\n      type: System.Xaml.XamlMember\n      description: A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`.\n    - id: xamlMember2\n      type: System.Xaml.XamlMember\n      description: A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of <code>xamlMember1</code> is the same as the value of <code>xamlMember2</code>; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  commentId: M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  id: op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: op_Inequality(XamlMember, XamlMember)\n  nameWithType: XamlMember.op_Inequality(XamlMember, XamlMember)\n  fullName: XamlMember.op_Inequality(XamlMember, XamlMember)\n  type: Operator\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Determines whether two specified <xref href=\"System.Xaml.XamlMember\"></xref> objects have different values.\n  syntax:\n    content: public static bool op_Inequality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);\n    parameters:\n    - id: xamlMember1\n      type: System.Xaml.XamlMember\n      description: A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`.\n    - id: xamlMember2\n      type: System.Xaml.XamlMember\n      description: A <xref href=\"System.Xaml.XamlMember\"></xref> or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of <code>xamlMember1</code> differs from the value of <code>xamlMember2</code>; otherwise, `false`.'\n  overload: System.Xaml.XamlMember.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.PreferredXamlNamespace\n  commentId: P:System.Xaml.XamlMember.PreferredXamlNamespace\n  id: PreferredXamlNamespace\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: PreferredXamlNamespace\n  nameWithType: XamlMember.PreferredXamlNamespace\n  fullName: XamlMember.PreferredXamlNamespace\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the single XAML namespace URI that identifies the primary XAML namespace for this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list. The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.\n  syntax:\n    content: public string PreferredXamlNamespace { get; }\n    return:\n      type: System.String\n      description: The identifier for the primary XAML namespace for this <xref href=\"System.Xaml.XamlMember\"></xref>, as a string.\n  overload: System.Xaml.XamlMember.PreferredXamlNamespace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.SerializationVisibility\n  commentId: P:System.Xaml.XamlMember.SerializationVisibility\n  id: SerializationVisibility\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: SerializationVisibility\n  nameWithType: XamlMember.SerializationVisibility\n  fullName: XamlMember.SerializationVisibility\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> value, which indicates how a visual designer should process the member.\n  syntax:\n    content: public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }\n    return:\n      type: System.ComponentModel.DesignerSerializationVisibility\n      description: A value of the <xref href=\"System.ComponentModel.DesignerSerializationVisibility\"></xref> enumeration. The default is <xref href=\"System.ComponentModel.DesignerSerializationVisibility.Visible\"></xref>.\n  overload: System.Xaml.XamlMember.SerializationVisibility*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.TargetType\n  commentId: P:System.Xaml.XamlMember.TargetType\n  id: TargetType\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: TargetType\n  nameWithType: XamlMember.TargetType\n  fullName: XamlMember.TargetType\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist.\n  remarks: \"The returned value is different for attachable and non-attachable members. For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>. For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:  \\n  \\n-   If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.  \\n  \\n-   If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called. The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors. A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.\"\n  syntax:\n    content: public System.Xaml.XamlType TargetType { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: The type where the <xref href=\"System.Xaml.XamlMember\"></xref> can exist.\n  overload: System.Xaml.XamlMember.TargetType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.ToString\n  commentId: M:System.Xaml.XamlMember.ToString\n  id: ToString\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: XamlMember.ToString()\n  fullName: XamlMember.ToString()\n  type: Method\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Returns a string representation of this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  remarks: This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of this <xref href=\"System.Xaml.XamlMember\"></xref>.\n  overload: System.Xaml.XamlMember.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.Type\n  commentId: P:System.Xaml.XamlMember.Type\n  id: Type\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: Type\n  nameWithType: XamlMember.Type\n  fullName: XamlMember.Type\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member.\n  remarks: \"Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method. This occurs when the initial internal reflection logic has not already set the information.  \\n  \\n In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings. Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:  \\n  \\n-   For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.  \\n  \\n-   For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).  \\n  \\n-   For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.  \\n  \\n In each case, the XAML schema context is used to evaluate the XAML type from the backing type.\"\n  syntax:\n    content: public System.Xaml.XamlType Type { get; }\n    return:\n      type: System.Xaml.XamlType\n      description: The <xref href=\"System.Xaml.XamlType\"></xref> of the type that is used by the member.\n  overload: System.Xaml.XamlMember.Type*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.TypeConverter\n  commentId: P:System.Xaml.XamlMember.TypeConverter\n  id: TypeConverter\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: TypeConverter\n  nameWithType: XamlMember.TypeConverter\n  fullName: XamlMember.TypeConverter\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which can be used for type conversion construction of XAML declared objects.\n  remarks: \"Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.  \\n  \\n Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>. The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:  \\n  \\n-   The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter. This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.  \\n  \\n-   The return value reports a built-in value converter. These converters exist for certain internal operations that are performed by a XAML writer. In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives. For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly. For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.  \\n  \\n-   The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>. In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> is {`Object}`. However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion. Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.  \\n  \\n If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods. However, many conversion methods rely on service context. If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.\"\n  syntax:\n    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}\n      description: A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> value, with a <xref href=\"System.ComponentModel.TypeConverter\"></xref> constraint on the generic.\n  overload: System.Xaml.XamlMember.TypeConverter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.UnderlyingMember\n  commentId: P:System.Xaml.XamlMember.UnderlyingMember\n  id: UnderlyingMember\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: UnderlyingMember\n  nameWithType: XamlMember.UnderlyingMember\n  fullName: XamlMember.UnderlyingMember\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets the CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> that is available for a member that is constructed by <xref href=\"System.Reflection.PropertyInfo\"></xref>, <xref href=\"System.Reflection.MethodInfo\"></xref>, or <xref href=\"System.Reflection.EventInfo\"></xref>.\n  remarks: Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public System.Reflection.MemberInfo UnderlyingMember { get; }\n    return:\n      type: System.Reflection.MemberInfo\n      description: CLR type system <xref href=\"System.Reflection.MemberInfo\"></xref> information, as cast from the initial constructor parameters. A <xref href=\"System.Xaml.XamlMember\"></xref> that is constructed with the <xref href=\"System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\"></xref> signature returns `null`.\n  overload: System.Xaml.XamlMember.UnderlyingMember*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Xaml.XamlMember.ValueSerializer\n  commentId: P:System.Xaml.XamlMember.ValueSerializer\n  id: ValueSerializer\n  parent: System.Xaml.XamlMember\n  langs:\n  - csharp\n  name: ValueSerializer\n  nameWithType: XamlMember.ValueSerializer\n  fullName: XamlMember.ValueSerializer\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Xaml\n  summary: Gets a <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> object, which is used for value serialization of XAML declared objects.\n  remarks: \"Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.  \\n  \\n Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>. See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.\"\n  syntax:\n    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }\n    return:\n      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}\n      description: A <xref href=\"System.Xaml.Schema.XamlValueConverter`1\"></xref> with <xref href=\"System.Windows.Markup.ValueSerializer\"></xref> constraint on the generic.\n  overload: System.Xaml.XamlMember.ValueSerializer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(EventInfo, XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(EventInfo, XamlSchemaContext)\n  fullName: XamlMember.XamlMember(EventInfo, XamlSchemaContext)\n- uid: System.Reflection.EventInfo\n  parent: System.Reflection\n  isExternal: false\n  name: EventInfo\n  nameWithType: EventInfo\n  fullName: System.Reflection.EventInfo\n- uid: System.Xaml.XamlSchemaContext\n  parent: System.Xaml\n  isExternal: false\n  name: XamlSchemaContext\n  nameWithType: XamlSchemaContext\n  fullName: System.Xaml.XamlSchemaContext\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(PropertyInfo, XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(PropertyInfo, XamlSchemaContext)\n  fullName: XamlMember.XamlMember(PropertyInfo, XamlSchemaContext)\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(EventInfo, XamlSchemaContext, XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(EventInfo, XamlSchemaContext, XamlMemberInvoker)\n  fullName: XamlMember.XamlMember(EventInfo, XamlSchemaContext, XamlMemberInvoker)\n- uid: System.Xaml.Schema.XamlMemberInvoker\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlMemberInvoker\n  nameWithType: XamlMemberInvoker\n  fullName: System.Xaml.Schema.XamlMemberInvoker\n- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(PropertyInfo, XamlSchemaContext, XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(PropertyInfo, XamlSchemaContext, XamlMemberInvoker)\n  fullName: XamlMember.XamlMember(PropertyInfo, XamlSchemaContext, XamlMemberInvoker)\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(String, MethodInfo, XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(String, MethodInfo, XamlSchemaContext)\n  fullName: XamlMember.XamlMember(String, MethodInfo, XamlSchemaContext)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(String, XamlType, Boolean)\n  nameWithType: XamlMember.XamlMember(String, XamlType, Boolean)\n  fullName: XamlMember.XamlMember(String, XamlType, Boolean)\n- uid: System.Xaml.XamlType\n  parent: System.Xaml\n  isExternal: false\n  name: XamlType\n  nameWithType: XamlType\n  fullName: System.Xaml.XamlType\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext)\n  nameWithType: XamlMember.XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext)\n  fullName: XamlMember.XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext)\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(String, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(String, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n  fullName: XamlMember.XamlMember(String, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n  nameWithType: XamlMember.XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n  fullName: XamlMember.XamlMember(String, MethodInfo, MethodInfo, XamlSchemaContext, XamlMemberInvoker)\n- uid: System.Xaml.XamlMember.DeclaringType\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DeclaringType\n  nameWithType: XamlMember.DeclaringType\n  fullName: XamlMember.DeclaringType\n- uid: System.Xaml.XamlMember.DeferringLoader\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DeferringLoader\n  nameWithType: XamlMember.DeferringLoader\n  fullName: XamlMember.DeferringLoader\n- uid: System.Xaml.Schema.XamlValueConverter`1\n  name: XamlValueConverter<TConverterBase>\n  nameWithType: XamlValueConverter<TConverterBase>\n  fullName: System.Xaml.Schema.XamlValueConverter<TConverterBase>\n- uid: System.Xaml.XamlDeferringLoader\n  name: XamlDeferringLoader\n  nameWithType: XamlDeferringLoader\n  fullName: System.Xaml.XamlDeferringLoader\n- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlValueConverter<XamlDeferringLoader>\n  nameWithType: XamlValueConverter<XamlDeferringLoader>\n  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>\n  spec.csharp:\n  - uid: System.Xaml.Schema.XamlValueConverter`1\n    name: XamlValueConverter\n    nameWithType: XamlValueConverter\n    fullName: System.Xaml.Schema.XamlValueConverter\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.XamlDeferringLoader\n    name: XamlDeferringLoader\n    nameWithType: XamlDeferringLoader\n    fullName: System.Xaml.XamlDeferringLoader\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlMember.DependsOn\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DependsOn\n  nameWithType: XamlMember.DependsOn\n  fullName: XamlMember.DependsOn\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Xaml.XamlMember\n  name: XamlMember\n  nameWithType: XamlMember\n  fullName: System.Xaml.XamlMember\n- uid: System.Collections.Generic.IList{System.Xaml.XamlMember}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<XamlMember>\n  nameWithType: IList<XamlMember>\n  fullName: System.Collections.Generic.IList<System.Xaml.XamlMember>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.XamlMember\n    name: XamlMember\n    nameWithType: XamlMember\n    fullName: System.Xaml.XamlMember\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Equals(XamlMember)\n  nameWithType: XamlMember.Equals(XamlMember)\n  fullName: XamlMember.Equals(XamlMember)\n- uid: System.Xaml.XamlMember.Equals(System.Object)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: XamlMember.Equals(Object)\n  fullName: XamlMember.Equals(Object)\n- uid: System.Xaml.XamlMember.GetHashCode\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: XamlMember.GetHashCode()\n  fullName: XamlMember.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xaml.XamlMember.GetXamlNamespaces\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: GetXamlNamespaces()\n  nameWithType: XamlMember.GetXamlNamespaces()\n  fullName: XamlMember.GetXamlNamespaces()\n- uid: System.Collections.Generic.IList{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<String>\n  nameWithType: IList<String>\n  fullName: System.Collections.Generic.IList<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlMember.Invoker\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Invoker\n  nameWithType: XamlMember.Invoker\n  fullName: XamlMember.Invoker\n- uid: System.Xaml.XamlMember.IsAmbient\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsAmbient\n  nameWithType: XamlMember.IsAmbient\n  fullName: XamlMember.IsAmbient\n- uid: System.Xaml.XamlMember.IsAttachable\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsAttachable\n  nameWithType: XamlMember.IsAttachable\n  fullName: XamlMember.IsAttachable\n- uid: System.Xaml.XamlMember.IsDirective\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsDirective\n  nameWithType: XamlMember.IsDirective\n  fullName: XamlMember.IsDirective\n- uid: System.Xaml.XamlMember.IsEvent\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsEvent\n  nameWithType: XamlMember.IsEvent\n  fullName: XamlMember.IsEvent\n- uid: System.Xaml.XamlMember.IsNameValid\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsNameValid\n  nameWithType: XamlMember.IsNameValid\n  fullName: XamlMember.IsNameValid\n- uid: System.Xaml.XamlMember.IsReadOnly\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XamlMember.IsReadOnly\n  fullName: XamlMember.IsReadOnly\n- uid: System.Xaml.XamlMember.IsReadPublic\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsReadPublic\n  nameWithType: XamlMember.IsReadPublic\n  fullName: XamlMember.IsReadPublic\n- uid: System.Xaml.XamlMember.IsUnknown\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsUnknown\n  nameWithType: XamlMember.IsUnknown\n  fullName: XamlMember.IsUnknown\n- uid: System.Xaml.XamlMember.IsWriteOnly\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsWriteOnly\n  nameWithType: XamlMember.IsWriteOnly\n  fullName: XamlMember.IsWriteOnly\n- uid: System.Xaml.XamlMember.IsWritePublic\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsWritePublic\n  nameWithType: XamlMember.IsWritePublic\n  fullName: XamlMember.IsWritePublic\n- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupCustomAttributeProvider()\n  nameWithType: XamlMember.LookupCustomAttributeProvider()\n  fullName: XamlMember.LookupCustomAttributeProvider()\n- uid: System.Reflection.ICustomAttributeProvider\n  parent: System.Reflection\n  isExternal: false\n  name: ICustomAttributeProvider\n  nameWithType: ICustomAttributeProvider\n  fullName: System.Reflection.ICustomAttributeProvider\n- uid: System.Xaml.XamlMember.LookupDeferringLoader\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupDeferringLoader()\n  nameWithType: XamlMember.LookupDeferringLoader()\n  fullName: XamlMember.LookupDeferringLoader()\n- uid: System.Xaml.XamlMember.LookupDependsOn\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupDependsOn()\n  nameWithType: XamlMember.LookupDependsOn()\n  fullName: XamlMember.LookupDependsOn()\n- uid: System.Xaml.XamlMember.LookupInvoker\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupInvoker()\n  nameWithType: XamlMember.LookupInvoker()\n  fullName: XamlMember.LookupInvoker()\n- uid: System.Xaml.XamlMember.LookupIsAmbient\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsAmbient()\n  nameWithType: XamlMember.LookupIsAmbient()\n  fullName: XamlMember.LookupIsAmbient()\n- uid: System.Xaml.XamlMember.LookupIsEvent\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsEvent()\n  nameWithType: XamlMember.LookupIsEvent()\n  fullName: XamlMember.LookupIsEvent()\n- uid: System.Xaml.XamlMember.LookupIsReadOnly\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsReadOnly()\n  nameWithType: XamlMember.LookupIsReadOnly()\n  fullName: XamlMember.LookupIsReadOnly()\n- uid: System.Xaml.XamlMember.LookupIsReadPublic\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsReadPublic()\n  nameWithType: XamlMember.LookupIsReadPublic()\n  fullName: XamlMember.LookupIsReadPublic()\n- uid: System.Xaml.XamlMember.LookupIsUnknown\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsUnknown()\n  nameWithType: XamlMember.LookupIsUnknown()\n  fullName: XamlMember.LookupIsUnknown()\n- uid: System.Xaml.XamlMember.LookupIsWriteOnly\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsWriteOnly()\n  nameWithType: XamlMember.LookupIsWriteOnly()\n  fullName: XamlMember.LookupIsWriteOnly()\n- uid: System.Xaml.XamlMember.LookupIsWritePublic\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsWritePublic()\n  nameWithType: XamlMember.LookupIsWritePublic()\n  fullName: XamlMember.LookupIsWritePublic()\n- uid: System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupMarkupExtensionBracketCharacters()\n  nameWithType: XamlMember.LookupMarkupExtensionBracketCharacters()\n  fullName: XamlMember.LookupMarkupExtensionBracketCharacters()\n- uid: System.Collections.Generic.IReadOnlyDictionary`2\n  name: IReadOnlyDictionary<TKey,TValue>\n  nameWithType: IReadOnlyDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>\n- uid: System.Char\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Collections.Generic.IReadOnlyDictionary{System.Char,System.Char}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IReadOnlyDictionary<Char,Char>\n  nameWithType: IReadOnlyDictionary<Char,Char>\n  fullName: System.Collections.Generic.IReadOnlyDictionary<System.Char,System.Char>\n  spec.csharp:\n  - uid: System.Collections.Generic.IReadOnlyDictionary`2\n    name: IReadOnlyDictionary\n    nameWithType: IReadOnlyDictionary\n    fullName: System.Collections.Generic.IReadOnlyDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlMember.LookupTargetType\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupTargetType()\n  nameWithType: XamlMember.LookupTargetType()\n  fullName: XamlMember.LookupTargetType()\n- uid: System.Xaml.XamlMember.LookupType\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupType()\n  nameWithType: XamlMember.LookupType()\n  fullName: XamlMember.LookupType()\n- uid: System.Xaml.XamlMember.LookupTypeConverter\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupTypeConverter()\n  nameWithType: XamlMember.LookupTypeConverter()\n  fullName: XamlMember.LookupTypeConverter()\n- uid: System.ComponentModel.TypeConverter\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlValueConverter<TypeConverter>\n  nameWithType: XamlValueConverter<TypeConverter>\n  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>\n  spec.csharp:\n  - uid: System.Xaml.Schema.XamlValueConverter`1\n    name: XamlValueConverter\n    nameWithType: XamlValueConverter\n    fullName: System.Xaml.Schema.XamlValueConverter\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.TypeConverter\n    name: TypeConverter\n    nameWithType: TypeConverter\n    fullName: System.ComponentModel.TypeConverter\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlMember.LookupUnderlyingGetter\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingGetter()\n  nameWithType: XamlMember.LookupUnderlyingGetter()\n  fullName: XamlMember.LookupUnderlyingGetter()\n- uid: System.Xaml.XamlMember.LookupUnderlyingMember\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingMember()\n  nameWithType: XamlMember.LookupUnderlyingMember()\n  fullName: XamlMember.LookupUnderlyingMember()\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Xaml.XamlMember.LookupUnderlyingSetter\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingSetter()\n  nameWithType: XamlMember.LookupUnderlyingSetter()\n  fullName: XamlMember.LookupUnderlyingSetter()\n- uid: System.Xaml.XamlMember.LookupValueSerializer\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupValueSerializer()\n  nameWithType: XamlMember.LookupValueSerializer()\n  fullName: XamlMember.LookupValueSerializer()\n- uid: System.Windows.Markup.ValueSerializer\n  name: ValueSerializer\n  nameWithType: ValueSerializer\n  fullName: System.Windows.Markup.ValueSerializer\n- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}\n  parent: System.Xaml.Schema\n  isExternal: false\n  name: XamlValueConverter<ValueSerializer>\n  nameWithType: XamlValueConverter<ValueSerializer>\n  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>\n  spec.csharp:\n  - uid: System.Xaml.Schema.XamlValueConverter`1\n    name: XamlValueConverter\n    nameWithType: XamlValueConverter\n    fullName: System.Xaml.Schema.XamlValueConverter\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Markup.ValueSerializer\n    name: ValueSerializer\n    nameWithType: ValueSerializer\n    fullName: System.Windows.Markup.ValueSerializer\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xaml.XamlMember.MarkupExtensionBracketCharacters\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: MarkupExtensionBracketCharacters\n  nameWithType: XamlMember.MarkupExtensionBracketCharacters\n  fullName: XamlMember.MarkupExtensionBracketCharacters\n- uid: System.Xaml.XamlMember.Name\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Name\n  nameWithType: XamlMember.Name\n  fullName: XamlMember.Name\n- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: op_Equality(XamlMember, XamlMember)\n  nameWithType: XamlMember.op_Equality(XamlMember, XamlMember)\n  fullName: XamlMember.op_Equality(XamlMember, XamlMember)\n- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: op_Inequality(XamlMember, XamlMember)\n  nameWithType: XamlMember.op_Inequality(XamlMember, XamlMember)\n  fullName: XamlMember.op_Inequality(XamlMember, XamlMember)\n- uid: System.Xaml.XamlMember.PreferredXamlNamespace\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: PreferredXamlNamespace\n  nameWithType: XamlMember.PreferredXamlNamespace\n  fullName: XamlMember.PreferredXamlNamespace\n- uid: System.Xaml.XamlMember.SerializationVisibility\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: SerializationVisibility\n  nameWithType: XamlMember.SerializationVisibility\n  fullName: XamlMember.SerializationVisibility\n- uid: System.ComponentModel.DesignerSerializationVisibility\n  parent: System.ComponentModel\n  isExternal: false\n  name: DesignerSerializationVisibility\n  nameWithType: DesignerSerializationVisibility\n  fullName: System.ComponentModel.DesignerSerializationVisibility\n- uid: System.Xaml.XamlMember.TargetType\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: TargetType\n  nameWithType: XamlMember.TargetType\n  fullName: XamlMember.TargetType\n- uid: System.Xaml.XamlMember.ToString\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: ToString()\n  nameWithType: XamlMember.ToString()\n  fullName: XamlMember.ToString()\n- uid: System.Xaml.XamlMember.Type\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Type\n  nameWithType: XamlMember.Type\n  fullName: XamlMember.Type\n- uid: System.Xaml.XamlMember.TypeConverter\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: TypeConverter\n  nameWithType: XamlMember.TypeConverter\n  fullName: XamlMember.TypeConverter\n- uid: System.Xaml.XamlMember.UnderlyingMember\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: UnderlyingMember\n  nameWithType: XamlMember.UnderlyingMember\n  fullName: XamlMember.UnderlyingMember\n- uid: System.Xaml.XamlMember.ValueSerializer\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: ValueSerializer\n  nameWithType: XamlMember.ValueSerializer\n  fullName: XamlMember.ValueSerializer\n- uid: System.Xaml.XamlMember.#ctor*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: XamlMember\n  nameWithType: XamlMember.XamlMember\n  fullName: XamlMember.XamlMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.DeclaringType*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DeclaringType\n  nameWithType: XamlMember.DeclaringType\n  fullName: XamlMember.DeclaringType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.DeferringLoader*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DeferringLoader\n  nameWithType: XamlMember.DeferringLoader\n  fullName: XamlMember.DeferringLoader\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.DependsOn*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: DependsOn\n  nameWithType: XamlMember.DependsOn\n  fullName: XamlMember.DependsOn\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.Equals*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Equals\n  nameWithType: XamlMember.Equals\n  fullName: XamlMember.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.GetHashCode*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: GetHashCode\n  nameWithType: XamlMember.GetHashCode\n  fullName: XamlMember.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.GetXamlNamespaces*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: GetXamlNamespaces\n  nameWithType: XamlMember.GetXamlNamespaces\n  fullName: XamlMember.GetXamlNamespaces\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.Invoker*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Invoker\n  nameWithType: XamlMember.Invoker\n  fullName: XamlMember.Invoker\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.IsAmbient*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsAmbient\n  nameWithType: XamlMember.IsAmbient\n  fullName: XamlMember.IsAmbient\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.IsAttachable*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsAttachable\n  nameWithType: XamlMember.IsAttachable\n  fullName: XamlMember.IsAttachable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.IsDirective*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsDirective\n  nameWithType: XamlMember.IsDirective\n  fullName: XamlMember.IsDirective\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.IsEvent*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsEvent\n  nameWithType: XamlMember.IsEvent\n  fullName: XamlMember.IsEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.IsNameValid*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsNameValid\n  nameWithType: XamlMember.IsNameValid\n  fullName: XamlMember.IsNameValid\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.IsReadOnly*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: XamlMember.IsReadOnly\n  fullName: XamlMember.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.IsReadPublic*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsReadPublic\n  nameWithType: XamlMember.IsReadPublic\n  fullName: XamlMember.IsReadPublic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.IsUnknown*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsUnknown\n  nameWithType: XamlMember.IsUnknown\n  fullName: XamlMember.IsUnknown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.IsWriteOnly*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsWriteOnly\n  nameWithType: XamlMember.IsWriteOnly\n  fullName: XamlMember.IsWriteOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.IsWritePublic*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: IsWritePublic\n  nameWithType: XamlMember.IsWritePublic\n  fullName: XamlMember.IsWritePublic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupCustomAttributeProvider\n  nameWithType: XamlMember.LookupCustomAttributeProvider\n  fullName: XamlMember.LookupCustomAttributeProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupDeferringLoader*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupDeferringLoader\n  nameWithType: XamlMember.LookupDeferringLoader\n  fullName: XamlMember.LookupDeferringLoader\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupDependsOn*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupDependsOn\n  nameWithType: XamlMember.LookupDependsOn\n  fullName: XamlMember.LookupDependsOn\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupInvoker*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupInvoker\n  nameWithType: XamlMember.LookupInvoker\n  fullName: XamlMember.LookupInvoker\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupIsAmbient*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsAmbient\n  nameWithType: XamlMember.LookupIsAmbient\n  fullName: XamlMember.LookupIsAmbient\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupIsEvent*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsEvent\n  nameWithType: XamlMember.LookupIsEvent\n  fullName: XamlMember.LookupIsEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupIsReadOnly*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsReadOnly\n  nameWithType: XamlMember.LookupIsReadOnly\n  fullName: XamlMember.LookupIsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupIsReadPublic*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsReadPublic\n  nameWithType: XamlMember.LookupIsReadPublic\n  fullName: XamlMember.LookupIsReadPublic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupIsUnknown*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsUnknown\n  nameWithType: XamlMember.LookupIsUnknown\n  fullName: XamlMember.LookupIsUnknown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupIsWriteOnly*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsWriteOnly\n  nameWithType: XamlMember.LookupIsWriteOnly\n  fullName: XamlMember.LookupIsWriteOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupIsWritePublic*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupIsWritePublic\n  nameWithType: XamlMember.LookupIsWritePublic\n  fullName: XamlMember.LookupIsWritePublic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupMarkupExtensionBracketCharacters\n  nameWithType: XamlMember.LookupMarkupExtensionBracketCharacters\n  fullName: XamlMember.LookupMarkupExtensionBracketCharacters\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupTargetType*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupTargetType\n  nameWithType: XamlMember.LookupTargetType\n  fullName: XamlMember.LookupTargetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupType*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupType\n  nameWithType: XamlMember.LookupType\n  fullName: XamlMember.LookupType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupTypeConverter*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupTypeConverter\n  nameWithType: XamlMember.LookupTypeConverter\n  fullName: XamlMember.LookupTypeConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupUnderlyingGetter*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingGetter\n  nameWithType: XamlMember.LookupUnderlyingGetter\n  fullName: XamlMember.LookupUnderlyingGetter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupUnderlyingMember*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingMember\n  nameWithType: XamlMember.LookupUnderlyingMember\n  fullName: XamlMember.LookupUnderlyingMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupUnderlyingSetter*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupUnderlyingSetter\n  nameWithType: XamlMember.LookupUnderlyingSetter\n  fullName: XamlMember.LookupUnderlyingSetter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.LookupValueSerializer*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: LookupValueSerializer\n  nameWithType: XamlMember.LookupValueSerializer\n  fullName: XamlMember.LookupValueSerializer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.MarkupExtensionBracketCharacters*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: MarkupExtensionBracketCharacters\n  nameWithType: XamlMember.MarkupExtensionBracketCharacters\n  fullName: XamlMember.MarkupExtensionBracketCharacters\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.Name*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Name\n  nameWithType: XamlMember.Name\n  fullName: XamlMember.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.op_Equality*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: op_Equality\n  nameWithType: XamlMember.op_Equality\n  fullName: XamlMember.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.op_Inequality*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: op_Inequality\n  nameWithType: XamlMember.op_Inequality\n  fullName: XamlMember.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.PreferredXamlNamespace*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: PreferredXamlNamespace\n  nameWithType: XamlMember.PreferredXamlNamespace\n  fullName: XamlMember.PreferredXamlNamespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.SerializationVisibility*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: SerializationVisibility\n  nameWithType: XamlMember.SerializationVisibility\n  fullName: XamlMember.SerializationVisibility\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.TargetType*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: TargetType\n  nameWithType: XamlMember.TargetType\n  fullName: XamlMember.TargetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.ToString*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: ToString\n  nameWithType: XamlMember.ToString\n  fullName: XamlMember.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.Type*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: Type\n  nameWithType: XamlMember.Type\n  fullName: XamlMember.Type\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.TypeConverter*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: TypeConverter\n  nameWithType: XamlMember.TypeConverter\n  fullName: XamlMember.TypeConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.UnderlyingMember*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: UnderlyingMember\n  nameWithType: XamlMember.UnderlyingMember\n  fullName: XamlMember.UnderlyingMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Xaml.XamlMember.ValueSerializer*\n  parent: System.Xaml.XamlMember\n  isExternal: false\n  name: ValueSerializer\n  nameWithType: XamlMember.ValueSerializer\n  fullName: XamlMember.ValueSerializer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml/XamlMember.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Xaml.XamlMember}\n  parent: System\n  isExternal: false\n  name: IEquatable<XamlMember>\n  nameWithType: IEquatable<XamlMember>\n  fullName: System.IEquatable<System.Xaml.XamlMember>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xaml.XamlMember\n    name: XamlMember\n    nameWithType: XamlMember\n    fullName: System.Xaml.XamlMember\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}