{"nodes":[{"content":"Represents a converter for implementation versions.","nodes":[{"pos":[0,51],"content":"Represents a converter for implementation versions.","nodes":[{"content":"Represents a converter for implementation versions.","pos":[0,51]}]}],"pos":[1243,1295],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.XamlIntegration.ImplementationVersionConverter\"></xref> class.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.XamlIntegration.ImplementationVersionConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.XamlIntegration.ImplementationVersionConverter\"></xref> class."}],"pos":[6171,6298],"yaml":true},{"content":"Determines whether the specified type can be converted from.","nodes":[{"pos":[0,60],"content":"Determines whether the specified type can be converted from.","nodes":[{"content":"Determines whether the specified type can be converted from.","pos":[0,60]}]}],"pos":[7857,7918],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[8160,8209],"yaml":true},{"content":"The type to convert from.","nodes":[{"pos":[0,25],"content":"The type to convert from.","nodes":[{"content":"The type to convert from.","pos":[0,25]}]}],"pos":[8273,8299],"yaml":true},{"content":"`True` if the specified type can be converted from; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`True`</ph> if the specified type can be converted from; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`True` if the specified type can be converted from; otherwise, `false`."}],"pos":[8357,8431],"yaml":true},{"content":"Determines whether the specified type can be converted to.","nodes":[{"pos":[0,58],"content":"Determines whether the specified type can be converted to.","nodes":[{"content":"Determines whether the specified type can be converted to.","pos":[0,58]}]}],"pos":[9903,9962],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[10207,10256],"yaml":true},{"content":"The type to convert to.","nodes":[{"pos":[0,23],"content":"The type to convert to.","nodes":[{"content":"The type to convert to.","pos":[0,23]}]}],"pos":[10325,10349],"yaml":true},{"content":"`True` if the specified type can be converted to; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`True`</ph> if the specified type can be converted to; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`True` if the specified type can be converted to; otherwise, `false`."}],"pos":[10407,10479],"yaml":true},{"content":"Converts the specified value to a new representation specified by the derived class.","nodes":[{"pos":[0,84],"content":"Converts the specified value to a new representation specified by the derived class.","nodes":[{"content":"Converts the specified value to a new representation specified by the derived class.","pos":[0,84]}]}],"pos":[12093,12178],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[12458,12507],"yaml":true},{"content":"An optional culture information.","nodes":[{"pos":[0,32],"content":"An optional culture information.","nodes":[{"content":"An optional culture information.","pos":[0,32]}]}],"pos":[12589,12622],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[12683,12706],"yaml":true},{"content":"`True` if the specified value to a new representation is converted; otherwise, `false`.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">`True`</ph> if the specified value to a new representation is converted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`True` if the specified value to a new representation is converted; otherwise, `false`."}],"pos":[12763,12853],"yaml":true},{"content":"Converts the specified value to the specified representation.","nodes":[{"pos":[0,61],"content":"Converts the specified value to the specified representation.","nodes":[{"content":"Converts the specified value to the specified representation.","pos":[0,61]}]}],"pos":[14508,14570],"yaml":true},{"content":"Context information that is used for conversion.","nodes":[{"pos":[0,48],"content":"Context information that is used for conversion.","nodes":[{"content":"Context information that is used for conversion.","pos":[0,48]}]}],"pos":[14870,14919],"yaml":true},{"content":"An optional culture information.","nodes":[{"pos":[0,32],"content":"An optional culture information.","nodes":[{"content":"An optional culture information.","pos":[0,32]}]}],"pos":[15001,15034],"yaml":true},{"content":"The object to convert.","nodes":[{"pos":[0,22],"content":"The object to convert.","nodes":[{"content":"The object to convert.","pos":[0,22]}]}],"pos":[15095,15118],"yaml":true},{"content":"The type to convert to.","nodes":[{"pos":[0,23],"content":"The type to convert to.","nodes":[{"content":"The type to convert to.","pos":[0,23]}]}],"pos":[15187,15211],"yaml":true},{"content":"`True` if the specified value to the specified representation is converted; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`True`</ph> if the specified value to the specified representation is converted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`True` if the specified value to the specified representation is converted; otherwise, `false`."}],"pos":[15268,15366],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter\n  commentId: T:System.Activities.XamlIntegration.ImplementationVersionConverter\n  id: ImplementationVersionConverter\n  children:\n  - System.Activities.XamlIntegration.ImplementationVersionConverter.#ctor\n  - System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: ImplementationVersionConverter\n  nameWithType: ImplementationVersionConverter\n  fullName: System.Activities.XamlIntegration.ImplementationVersionConverter\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Represents a converter for implementation versions.\n  syntax:\n    content: 'public class ImplementationVersionConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ImplementationVersionConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.#ctor\n  commentId: M:System.Activities.XamlIntegration.ImplementationVersionConverter.#ctor\n  id: '#ctor'\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  langs:\n  - csharp\n  name: ImplementationVersionConverter()\n  nameWithType: ImplementationVersionConverter.ImplementationVersionConverter()\n  fullName: ImplementationVersionConverter.ImplementationVersionConverter()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Initializes a new instance of the <xref href=\"System.Activities.XamlIntegration.ImplementationVersionConverter\"></xref> class.\n  syntax:\n    content: public ImplementationVersionConverter ();\n    parameters: []\n  overload: System.Activities.XamlIntegration.ImplementationVersionConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ImplementationVersionConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: ImplementationVersionConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: ImplementationVersionConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Determines whether the specified type can be converted from.\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Context information that is used for conversion.\n    - id: sourceType\n      type: System.Type\n      description: The type to convert from.\n    return:\n      type: System.Boolean\n      description: '`True` if the specified type can be converted from; otherwise, `false`.'\n  overload: System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ImplementationVersionConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: ImplementationVersionConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: ImplementationVersionConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Determines whether the specified type can be converted to.\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Context information that is used for conversion.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert to.\n    return:\n      type: System.Boolean\n      description: '`True` if the specified type can be converted to; otherwise, `false`.'\n  overload: System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ImplementationVersionConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: ImplementationVersionConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: ImplementationVersionConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Converts the specified value to a new representation specified by the derived class.\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Context information that is used for conversion.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An optional culture information.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    return:\n      type: System.Object\n      description: '`True` if the specified value to a new representation is converted; otherwise, `false`.'\n  overload: System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ImplementationVersionConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: ImplementationVersionConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: ImplementationVersionConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Converts the specified value to the specified representation.\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Context information that is used for conversion.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: An optional culture information.\n    - id: value\n      type: System.Object\n      description: The object to convert.\n    - id: destinationType\n      type: System.Type\n      description: The type to convert to.\n    return:\n      type: System.Object\n      description: '`True` if the specified value to the specified representation is converted; otherwise, `false`.'\n  overload: System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ImplementationVersionConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.#ctor\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  isExternal: false\n  name: ImplementationVersionConverter()\n  nameWithType: ImplementationVersionConverter.ImplementationVersionConverter()\n  fullName: ImplementationVersionConverter.ImplementationVersionConverter()\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: ImplementationVersionConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: ImplementationVersionConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: ImplementationVersionConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: ImplementationVersionConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: ImplementationVersionConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: ImplementationVersionConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: ImplementationVersionConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: ImplementationVersionConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.#ctor*\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  isExternal: false\n  name: ImplementationVersionConverter\n  nameWithType: ImplementationVersionConverter.ImplementationVersionConverter\n  fullName: ImplementationVersionConverter.ImplementationVersionConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ImplementationVersionConverter.xml\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertFrom*\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: ImplementationVersionConverter.CanConvertFrom\n  fullName: ImplementationVersionConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ImplementationVersionConverter.xml\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertTo*\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: ImplementationVersionConverter.CanConvertTo\n  fullName: ImplementationVersionConverter.CanConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ImplementationVersionConverter.xml\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertFrom*\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: ImplementationVersionConverter.ConvertFrom\n  fullName: ImplementationVersionConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ImplementationVersionConverter.xml\n- uid: System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertTo*\n  parent: System.Activities.XamlIntegration.ImplementationVersionConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: ImplementationVersionConverter.ConvertTo\n  fullName: ImplementationVersionConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ImplementationVersionConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}