{"nodes":[{"content":"Specifies the class used to implement design-time services for a component.","nodes":[{"pos":[0,75],"content":"Specifies the class used to implement design-time services for a component.","nodes":[{"content":"Specifies the class used to implement design-time services for a component.","pos":[0,75]}]}],"pos":[1105,1181],"yaml":true},{"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \n  \n Use the <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> property to find the designer's base type. Use the <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A> property to get the name of the type of designer associated with this member.  \n  \n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,122],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.","nodes":[{"content":"The class you use for the design-time services must implement the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."}]},{"pos":[129,403],"content":"Use the <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> property to find the designer's base type. Use the <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A> property to get the name of the type of designer associated with this member.","nodes":[{"content":"Use the <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> property to find the designer's base type. Use the <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A> property to get the name of the type of designer associated with this member.","pos":[0,274],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A&gt;</ph> property to find the designer's base type.","pos":[0,121],"source":"Use the <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> property to find the designer's base type."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A&gt;</ph> property to get the name of the type of designer associated with this member.","pos":[122,274],"source":" Use the <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A> property to get the name of the type of designer associated with this member."}]}]},{"pos":[410,521],"content":"For more information, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}],"pos":[1192,1720],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the name of the type that provides design-time services.","nodes":[{"pos":[0,163],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;&lt;/xref&gt;</ph> class using the name of the type that provides design-time services.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the name of the type that provides design-time services."}],"pos":[8372,8536],"yaml":true},{"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.","nodes":[{"pos":[0,122],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.","nodes":[{"content":"The class you use for the design-time services must implement the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."}]}],"pos":[8547,8670],"yaml":true,"extradata":"MT"},{"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","nodes":[{"pos":[0,189],"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","nodes":[{"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","pos":[0,189]}]}],"pos":[8833,9023],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the type that provides design-time services.","nodes":[{"pos":[0,151],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;&lt;/xref&gt;</ph> class using the type that provides design-time services.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the type that provides design-time services."}],"pos":[10362,10514],"yaml":true},{"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.","nodes":[{"pos":[0,122],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.","nodes":[{"content":"The class you use for the design-time services must implement the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."}]}],"pos":[10525,10648],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> that represents the class that provides design-time services for the component this attribute is bound to.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the class that provides design-time services for the component this attribute is bound to.","source":"A <xref href=\"System.Type\"></xref> that represents the class that provides design-time services for the component this attribute is bound to."}],"pos":[10799,10941],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the designer type and the base class for the designer.","nodes":[{"pos":[0,161],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;&lt;/xref&gt;</ph> class using the designer type and the base class for the designer.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the designer type and the base class for the designer."}],"pos":[12358,12520],"yaml":true},{"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \n  \n The `designerBaseTypeName` parameter allows you to attach more than one type of designer for a given class.","nodes":[{"pos":[0,122],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.","nodes":[{"content":"The class you use for the design-time services must implement the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."}]},{"pos":[129,236],"content":"The <ph id=\"ph1\">`designerBaseTypeName`</ph> parameter allows you to attach more than one type of designer for a given class.","source":"The `designerBaseTypeName` parameter allows you to attach more than one type of designer for a given class."}],"pos":[12531,12772],"yaml":true,"extradata":"MT"},{"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","nodes":[{"pos":[0,189],"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","nodes":[{"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","pos":[0,189]}]}],"pos":[12964,13154],"yaml":true},{"content":"The fully qualified name of the base class to associate with the designer class.","nodes":[{"pos":[0,80],"content":"The fully qualified name of the base class to associate with the designer class.","nodes":[{"content":"The fully qualified name of the base class to associate with the designer class.","pos":[0,80]}]}],"pos":[13230,13311],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class, using the name of the designer class and the base class for the designer.","nodes":[{"pos":[0,175],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;&lt;/xref&gt;</ph> class, using the name of the designer class and the base class for the designer.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class, using the name of the designer class and the base class for the designer."}],"pos":[14716,14892],"yaml":true},{"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \n  \n The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.","nodes":[{"pos":[0,122],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.","nodes":[{"content":"The class you use for the design-time services must implement the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."}]},{"pos":[129,232],"content":"The <ph id=\"ph1\">`designerBaseType`</ph> parameter allows you to attach more than one type of designer for a given class.","source":"The `designerBaseType` parameter allows you to attach more than one type of designer for a given class."}],"pos":[14903,15140],"yaml":true,"extradata":"MT"},{"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","nodes":[{"pos":[0,189],"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","nodes":[{"content":"The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.","pos":[0,189]}]}],"pos":[15326,15516],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the base class to associate with the <code>designerTypeName</code>.","nodes":[{"pos":[0,118],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the base class to associate with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">designerTypeName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Type\"></xref> that represents the base class to associate with the <code>designerTypeName</code>."}],"pos":[15586,15705],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the types of the designer and designer base class.","nodes":[{"pos":[0,157],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;&lt;/xref&gt;</ph> class using the types of the designer and designer base class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the types of the designer and designer base class."}],"pos":[17098,17256],"yaml":true},{"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \n  \n The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.","nodes":[{"pos":[0,122],"content":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.","nodes":[{"content":"The class you use for the design-time services must implement the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> interface.","pos":[0,122],"source":"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface."}]},{"pos":[129,232],"content":"The <ph id=\"ph1\">`designerBaseType`</ph> parameter allows you to attach more than one type of designer for a given class.","source":"The `designerBaseType` parameter allows you to attach more than one type of designer for a given class."}],"pos":[17267,17504],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> that represents the class that provides design-time services for the component this attribute is bound to.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the class that provides design-time services for the component this attribute is bound to.","source":"A <xref href=\"System.Type\"></xref> that represents the class that provides design-time services for the component this attribute is bound to."}],"pos":[17678,17820],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> that represents the base class to associate with the <code>designerType</code>.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that represents the base class to associate with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">designerType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Type\"></xref> that represents the base class to associate with the <code>designerType</code>."}],"pos":[17890,18005],"yaml":true},{"content":"Gets the name of the base type of this designer.","nodes":[{"pos":[0,48],"content":"Gets the name of the base type of this designer.","nodes":[{"content":"Gets the name of the base type of this designer.","pos":[0,48]}]}],"pos":[19336,19385],"yaml":true},{"content":"The name of the base type of this designer.","nodes":[{"pos":[0,43],"content":"The name of the base type of this designer.","nodes":[{"content":"The name of the base type of this designer.","pos":[0,43]}]}],"pos":[19509,19553],"yaml":true},{"content":"Gets the name of the designer type associated with this designer attribute.","nodes":[{"pos":[0,75],"content":"Gets the name of the designer type associated with this designer attribute.","nodes":[{"content":"Gets the name of the designer type associated with this designer attribute.","pos":[0,75]}]}],"pos":[20875,20951],"yaml":true},{"content":"The name of the designer type associated with this designer attribute.","nodes":[{"pos":[0,70],"content":"The name of the designer type associated with this designer attribute.","nodes":[{"content":"The name of the designer type associated with this designer attribute.","pos":[0,70]}]}],"pos":[21071,21142],"yaml":true},{"content":"Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.DesignerAttribute\"></xref>.","nodes":[{"pos":[0,131],"content":"Returns whether the value of the given object is equal to the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DesignerAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.DesignerAttribute\"></xref>."}],"pos":[22467,22599],"yaml":true},{"content":"The object to test the value equality of.","nodes":[{"pos":[0,41],"content":"The object to test the value equality of.","nodes":[{"content":"The object to test the value equality of.","pos":[0,41]}]}],"pos":[22739,22781],"yaml":true},{"content":"`true` if the value of the given object is equal to that of the current; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if the value of the given object is equal to that of the current; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value of the given object is equal to that of the current; otherwise, `false`."}],"pos":[22839,22934],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[24216,24257],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[24391,24426],"yaml":true},{"content":"Gets a unique ID for this attribute type.","nodes":[{"pos":[0,41],"content":"Gets a unique ID for this attribute type.","nodes":[{"content":"Gets a unique ID for this attribute type.","pos":[0,41]}]}],"pos":[25679,25721],"yaml":true},{"content":"It is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.DesignerAttribute> overrides this to include the type of the designer base type.","nodes":[{"pos":[0,284],"content":"It is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.DesignerAttribute> overrides this to include the type of the designer base type.","nodes":[{"content":"It is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.DesignerAttribute> overrides this to include the type of the designer base type.","pos":[0,284],"nodes":[{"content":"It is used by filtering algorithms to identify two attributes that are the same type.","pos":[0,85]},{"content":"For most attributes, this just returns the <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> instance for the attribute.","pos":[86,175],"source":" For most attributes, this just returns the <xref:System.Type> instance for the attribute."},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.DesignerAttribute&gt;</ph> overrides this to include the type of the designer base type.","pos":[176,284],"source":" <xref:System.ComponentModel.DesignerAttribute> overrides this to include the type of the designer base type."}]}]}],"pos":[25732,26017],"yaml":true,"extradata":"MT"},{"content":"A unique ID for this attribute type.","nodes":[{"pos":[0,36],"content":"A unique ID for this attribute type.","nodes":[{"content":"A unique ID for this attribute type.","pos":[0,36]}]}],"pos":[26136,26173],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.DesignerAttribute\n  commentId: T:System.ComponentModel.DesignerAttribute\n  id: DesignerAttribute\n  children:\n  - System.ComponentModel.DesignerAttribute.#ctor(System.String)\n  - System.ComponentModel.DesignerAttribute.#ctor(System.Type)\n  - System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)\n  - System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)\n  - System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)\n  - System.ComponentModel.DesignerAttribute.DesignerBaseTypeName\n  - System.ComponentModel.DesignerAttribute.DesignerTypeName\n  - System.ComponentModel.DesignerAttribute.Equals(System.Object)\n  - System.ComponentModel.DesignerAttribute.GetHashCode\n  - System.ComponentModel.DesignerAttribute.TypeId\n  langs:\n  - csharp\n  name: DesignerAttribute\n  nameWithType: DesignerAttribute\n  fullName: System.ComponentModel.DesignerAttribute\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies the class used to implement design-time services for a component.\n  remarks: \"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \\n  \\n Use the <xref:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName%2A> property to find the designer's base type. Use the <xref:System.ComponentModel.DesignerAttribute.DesignerTypeName%2A> property to get the name of the type of designer associated with this member.  \\n  \\n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  example:\n  - \"The following example creates a class called `MyForm`. `MyForm` has two attributes, a <xref:System.ComponentModel.DesignerAttribute> that specifies this class uses the <xref:System.Windows.Forms.Design.DocumentDesigner>, and a <xref:System.ComponentModel.DesignerCategoryAttribute> that specifies the <xref:System.ComponentModel.DesignerCategoryAttribute.Form> category.  \\n  \\n [!code-cpp[Classic DesignerAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic DesignerAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CS/source.cs#1)]\\n [!code-vb[Classic DesignerAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DesignerAttribute Example/VB/source.vb#1)]  \\n  \\n The next example creates an instance of `MyForm`. Then it gets the attributes for the class, extracts the <xref:System.ComponentModel.DesignerAttribute>, and prints the name of the designer.  \\n  \\n [!code-cpp[Classic DesignerAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CPP/source.cpp#2)]\\n [!code-csharp[Classic DesignerAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DesignerAttribute Example/CS/source.cs#2)]\\n [!code-vb[Classic DesignerAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DesignerAttribute Example/VB/source.vb#2)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)]\n\n      public sealed class DesignerAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String)\n  commentId: M:System.ComponentModel.DesignerAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerAttribute(String)\n  nameWithType: DesignerAttribute.DesignerAttribute(String)\n  fullName: DesignerAttribute.DesignerAttribute(String)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the name of the type that provides design-time services.\n  remarks: The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.\n  syntax:\n    content: public DesignerAttribute (string designerTypeName);\n    parameters:\n    - id: designerTypeName\n      type: System.String\n      description: The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.\n  overload: System.ComponentModel.DesignerAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type)\n  commentId: M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerAttribute(Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(Type)\n  fullName: DesignerAttribute.DesignerAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the type that provides design-time services.\n  remarks: The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.\n  syntax:\n    content: public DesignerAttribute (Type designerType);\n    parameters:\n    - id: designerType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the class that provides design-time services for the component this attribute is bound to.\n  overload: System.ComponentModel.DesignerAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)\n  commentId: M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerAttribute(String, String)\n  nameWithType: DesignerAttribute.DesignerAttribute(String, String)\n  fullName: DesignerAttribute.DesignerAttribute(String, String)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the designer type and the base class for the designer.\n  remarks: \"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \\n  \\n The `designerBaseTypeName` parameter allows you to attach more than one type of designer for a given class.\"\n  syntax:\n    content: public DesignerAttribute (string designerTypeName, string designerBaseTypeName);\n    parameters:\n    - id: designerTypeName\n      type: System.String\n      description: The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.\n    - id: designerBaseTypeName\n      type: System.String\n      description: The fully qualified name of the base class to associate with the designer class.\n  overload: System.ComponentModel.DesignerAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)\n  commentId: M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)\n  id: '#ctor(System.String,System.Type)'\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerAttribute(String, Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(String, Type)\n  fullName: DesignerAttribute.DesignerAttribute(String, Type)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class, using the name of the designer class and the base class for the designer.\n  remarks: \"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \\n  \\n The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.\"\n  syntax:\n    content: public DesignerAttribute (string designerTypeName, Type designerBaseType);\n    parameters:\n    - id: designerTypeName\n      type: System.String\n      description: The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.\n    - id: designerBaseType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the base class to associate with the <code>designerTypeName</code>.\n  overload: System.ComponentModel.DesignerAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)\n  commentId: M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)\n  id: '#ctor(System.Type,System.Type)'\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerAttribute(Type, Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(Type, Type)\n  fullName: DesignerAttribute.DesignerAttribute(Type, Type)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DesignerAttribute\"></xref> class using the types of the designer and designer base class.\n  remarks: \"The class you use for the design-time services must implement the <xref:System.ComponentModel.Design.IDesigner> interface.  \\n  \\n The `designerBaseType` parameter allows you to attach more than one type of designer for a given class.\"\n  syntax:\n    content: public DesignerAttribute (Type designerType, Type designerBaseType);\n    parameters:\n    - id: designerType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the class that provides design-time services for the component this attribute is bound to.\n    - id: designerBaseType\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> that represents the base class to associate with the <code>designerType</code>.\n  overload: System.ComponentModel.DesignerAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName\n  commentId: P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName\n  id: DesignerBaseTypeName\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerBaseTypeName\n  nameWithType: DesignerAttribute.DesignerBaseTypeName\n  fullName: DesignerAttribute.DesignerBaseTypeName\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the name of the base type of this designer.\n  syntax:\n    content: public string DesignerBaseTypeName { get; }\n    return:\n      type: System.String\n      description: The name of the base type of this designer.\n  overload: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName\n  commentId: P:System.ComponentModel.DesignerAttribute.DesignerTypeName\n  id: DesignerTypeName\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: DesignerTypeName\n  nameWithType: DesignerAttribute.DesignerTypeName\n  fullName: DesignerAttribute.DesignerTypeName\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the name of the designer type associated with this designer attribute.\n  syntax:\n    content: public string DesignerTypeName { get; }\n    return:\n      type: System.String\n      description: The name of the designer type associated with this designer attribute.\n  overload: System.ComponentModel.DesignerAttribute.DesignerTypeName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignerAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.DesignerAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DesignerAttribute.Equals(Object)\n  fullName: DesignerAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.DesignerAttribute\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to test the value equality of.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of the given object is equal to that of the current; otherwise, `false`.'\n  overload: System.ComponentModel.DesignerAttribute.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignerAttribute.GetHashCode\n  commentId: M:System.ComponentModel.DesignerAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DesignerAttribute.GetHashCode()\n  fullName: DesignerAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.ComponentModel.DesignerAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.DesignerAttribute.TypeId\n  commentId: P:System.ComponentModel.DesignerAttribute.TypeId\n  id: TypeId\n  parent: System.ComponentModel.DesignerAttribute\n  langs:\n  - csharp\n  name: TypeId\n  nameWithType: DesignerAttribute.TypeId\n  fullName: DesignerAttribute.TypeId\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a unique ID for this attribute type.\n  remarks: It is used by filtering algorithms to identify two attributes that are the same type. For most attributes, this just returns the <xref:System.Type> instance for the attribute. <xref:System.ComponentModel.DesignerAttribute> overrides this to include the type of the designer base type.\n  syntax:\n    content: public override object TypeId { get; }\n    return:\n      type: System.Object\n      description: A unique ID for this attribute type.\n  overload: System.ComponentModel.DesignerAttribute.TypeId*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute(String)\n  nameWithType: DesignerAttribute.DesignerAttribute(String)\n  fullName: DesignerAttribute.DesignerAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute(Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(Type)\n  fullName: DesignerAttribute.DesignerAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute(String, String)\n  nameWithType: DesignerAttribute.DesignerAttribute(String, String)\n  fullName: DesignerAttribute.DesignerAttribute(String, String)\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute(String, Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(String, Type)\n  fullName: DesignerAttribute.DesignerAttribute(String, Type)\n- uid: System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute(Type, Type)\n  nameWithType: DesignerAttribute.DesignerAttribute(Type, Type)\n  fullName: DesignerAttribute.DesignerAttribute(Type, Type)\n- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerBaseTypeName\n  nameWithType: DesignerAttribute.DesignerBaseTypeName\n  fullName: DesignerAttribute.DesignerBaseTypeName\n- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerTypeName\n  nameWithType: DesignerAttribute.DesignerTypeName\n  fullName: DesignerAttribute.DesignerTypeName\n- uid: System.ComponentModel.DesignerAttribute.Equals(System.Object)\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DesignerAttribute.Equals(Object)\n  fullName: DesignerAttribute.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.DesignerAttribute.GetHashCode\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DesignerAttribute.GetHashCode()\n  fullName: DesignerAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.DesignerAttribute.TypeId\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: DesignerAttribute.TypeId\n  fullName: DesignerAttribute.TypeId\n- uid: System.ComponentModel.DesignerAttribute.#ctor*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerAttribute\n  nameWithType: DesignerAttribute.DesignerAttribute\n  fullName: DesignerAttribute.DesignerAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n- uid: System.ComponentModel.DesignerAttribute.DesignerBaseTypeName*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerBaseTypeName\n  nameWithType: DesignerAttribute.DesignerBaseTypeName\n  fullName: DesignerAttribute.DesignerBaseTypeName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n- uid: System.ComponentModel.DesignerAttribute.DesignerTypeName*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: DesignerTypeName\n  nameWithType: DesignerAttribute.DesignerTypeName\n  fullName: DesignerAttribute.DesignerTypeName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n- uid: System.ComponentModel.DesignerAttribute.Equals*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: DesignerAttribute.Equals\n  fullName: DesignerAttribute.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n- uid: System.ComponentModel.DesignerAttribute.GetHashCode*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DesignerAttribute.GetHashCode\n  fullName: DesignerAttribute.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n- uid: System.ComponentModel.DesignerAttribute.TypeId*\n  parent: System.ComponentModel.DesignerAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: DesignerAttribute.TypeId\n  fullName: DesignerAttribute.TypeId\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/DesignerAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}