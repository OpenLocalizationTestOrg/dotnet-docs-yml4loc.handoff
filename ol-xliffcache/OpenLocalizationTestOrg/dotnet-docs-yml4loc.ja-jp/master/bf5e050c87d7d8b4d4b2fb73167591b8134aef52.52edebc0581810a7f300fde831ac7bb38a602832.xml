{"nodes":[{"content":"Calls a public method of a specified object or type.","nodes":[{"pos":[0,52],"content":"Calls a public method of a specified object or type.","nodes":[{"content":"Calls a public method of a specified object or type.","pos":[0,52]}]}],"pos":[1239,1292],"yaml":true},{"content":"The type of value returned by the activity.","nodes":[{"pos":[0,43],"content":"The type of value returned by the activity.","nodes":[{"content":"The type of value returned by the activity.","pos":[0,43]}]}],"pos":[1531,1575],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.InvokeMethod`1\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.InvokeMethod`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.Expressions.InvokeMethod`1\"></xref> class."}],"pos":[4450,4557],"yaml":true},{"content":"The generic type arguments of the contained method.","nodes":[{"pos":[0,51],"content":"The generic type arguments of the contained method.","nodes":[{"content":"The generic type arguments of the contained method.","pos":[0,51]}]}],"pos":[10635,10687],"yaml":true},{"content":"The generic type arguments must only be set if the called method is generic.","nodes":[{"pos":[0,76],"content":"The generic type arguments must only be set if the called method is generic.","nodes":[{"content":"The generic type arguments must only be set if the called method is generic.","pos":[0,76]}]}],"pos":[10698,10775],"yaml":true,"extradata":"MT"},{"content":"The arguments.","nodes":[{"pos":[0,14],"content":"The arguments.","nodes":[{"content":"The arguments.","pos":[0,14]}]}],"pos":[10981,10996],"yaml":true},{"content":"The name of the method to be invoked when the activity executes.","nodes":[{"pos":[0,64],"content":"The name of the method to be invoked when the activity executes.","nodes":[{"content":"The name of the method to be invoked when the activity executes.","pos":[0,64]}]}],"pos":[12078,12143],"yaml":true},{"content":"The invoked method must be declared as public.","nodes":[{"pos":[0,46],"content":"The invoked method must be declared as public.","nodes":[{"content":"The invoked method must be declared as public.","pos":[0,46]}]}],"pos":[12154,12201],"yaml":true,"extradata":"MT"},{"content":"The method name.","nodes":[{"pos":[0,16],"content":"The method name.","nodes":[{"content":"The method name.","pos":[0,16]}]}],"pos":[12320,12337],"yaml":true},{"content":"The parameter collection of the method to be invoked.","nodes":[{"pos":[0,53],"content":"The parameter collection of the method to be invoked.","nodes":[{"content":"The parameter collection of the method to be invoked.","pos":[0,53]}]}],"pos":[13409,13463],"yaml":true},{"content":"The parameters must be added to the collection in the same order that they appear in the method signature. Parameters cannot be named `TargetObject` or `Result`.","nodes":[{"pos":[0,161],"content":"The parameters must be added to the collection in the same order that they appear in the method signature. Parameters cannot be named `TargetObject` or `Result`.","nodes":[{"content":"The parameters must be added to the collection in the same order that they appear in the method signature.","pos":[0,106]},{"content":"Parameters cannot be named <ph id=\"ph1\">`TargetObject`</ph> or <ph id=\"ph2\">`Result`</ph>.","pos":[107,161],"source":" Parameters cannot be named `TargetObject` or `Result`."}]}],"pos":[13474,13636],"yaml":true,"extradata":"MT"},{"content":"The parameter collection.","nodes":[{"pos":[0,25],"content":"The parameter collection.","nodes":[{"content":"The parameter collection.","pos":[0,25]}]}],"pos":[13869,13895],"yaml":true},{"content":"Gets or sets a value that indicates whether the activity’s method is invoked asynchronously.","nodes":[{"pos":[0,92],"content":"Gets or sets a value that indicates whether the activity’s method is invoked asynchronously.","nodes":[{"content":"Gets or sets a value that indicates whether the activity’s method is invoked asynchronously.","pos":[0,92]}]}],"pos":[15009,15102],"yaml":true},{"content":"`true` if the method executes asynchronously; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the method executes asynchronously; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the method executes asynchronously; otherwise, `false`."}],"pos":[15227,15295],"yaml":true},{"content":"Gets or sets the object that contains the method to invoke.","nodes":[{"pos":[0,59],"content":"Gets or sets the object that contains the method to invoke.","nodes":[{"content":"Gets or sets the object that contains the method to invoke.","pos":[0,59]}]}],"pos":[16403,16463],"yaml":true},{"content":"The method to invoke.","nodes":[{"pos":[0,21],"content":"The method to invoke.","nodes":[{"content":"The method to invoke.","pos":[0,21]}]}],"pos":[16621,16643],"yaml":true},{"content":"Gets or sets the type of the <xref href=\"System.Activities.Expressions.InvokeMethod`1.TargetObject\"></xref>.","nodes":[{"pos":[0,108],"content":"Gets or sets the type of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Expressions.InvokeMethod`1.TargetObject\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the type of the <xref href=\"System.Activities.Expressions.InvokeMethod`1.TargetObject\"></xref>."}],"pos":[17734,17843],"yaml":true},{"content":"This parameter must only be set if the invoked method is static.","nodes":[{"pos":[0,64],"content":"This parameter must only be set if the invoked method is static.","nodes":[{"content":"This parameter must only be set if the invoked method is static.","pos":[0,64]}]}],"pos":[17854,17919],"yaml":true,"extradata":"MT"},{"content":"The target object type.","nodes":[{"pos":[0,23],"content":"The target object type.","nodes":[{"content":"The target object type.","pos":[0,23]}]}],"pos":[18034,18058],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Expressions.InvokeMethod`1\n  commentId: T:System.Activities.Expressions.InvokeMethod`1\n  id: InvokeMethod`1\n  children:\n  - System.Activities.Expressions.InvokeMethod`1.#ctor\n  - System.Activities.Expressions.InvokeMethod`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  - System.Activities.Expressions.InvokeMethod`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Expressions.InvokeMethod`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  - System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments\n  - System.Activities.Expressions.InvokeMethod`1.MethodName\n  - System.Activities.Expressions.InvokeMethod`1.Parameters\n  - System.Activities.Expressions.InvokeMethod`1.RunAsynchronously\n  - System.Activities.Expressions.InvokeMethod`1.TargetObject\n  - System.Activities.Expressions.InvokeMethod`1.TargetType\n  langs:\n  - csharp\n  name: InvokeMethod<TResult>\n  nameWithType: InvokeMethod<TResult>\n  fullName: System.Activities.Expressions.InvokeMethod<TResult>\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Calls a public method of a specified object or type.\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Parameters\")]\n\n      public sealed class InvokeMethod<TResult> : System.Activities.AsyncCodeActivity<TResult>\n    typeParameters:\n    - id: TResult\n      description: The type of value returned by the activity.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.AsyncCodeActivity`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.AsyncCodeActivity`1.Cancel(System.Activities.AsyncCodeActivityContext)\n  - System.Activities.AsyncCodeActivity`1.Implementation\n  - System.Activities.AsyncCodeActivity`1.ImplementationVersion\n  - System.Activities.AsyncCodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.InvokeMethod`1.#ctor\n  commentId: M:System.Activities.Expressions.InvokeMethod`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: InvokeMethod<TResult>()\n  nameWithType: InvokeMethod<TResult>.InvokeMethod<TResult>()\n  fullName: InvokeMethod<TResult>.InvokeMethod<TResult>()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Expressions.InvokeMethod`1\"></xref> class.\n  syntax:\n    content: public InvokeMethod ();\n    parameters: []\n  overload: System.Activities.Expressions.InvokeMethod`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.InvokeMethod`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  commentId: M:System.Activities.Expressions.InvokeMethod`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  id: BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: BeginExecute(AsyncCodeActivityContext, AsyncCallback, Object)\n  nameWithType: InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext, AsyncCallback, Object)\n  fullName: InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override IAsyncResult BeginExecute (System.Activities.AsyncCodeActivityContext context, AsyncCallback callback, object state);\n    parameters:\n    - id: context\n      type: System.Activities.AsyncCodeActivityContext\n      description: ''\n    - id: callback\n      type: System.AsyncCallback\n      description: ''\n    - id: state\n      type: System.Object\n      description: ''\n    return:\n      type: System.IAsyncResult\n      description: ''\n  overload: System.Activities.Expressions.InvokeMethod`1.BeginExecute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  commentId: M:System.Activities.Expressions.InvokeMethod`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: ''\n  overload: System.Activities.Expressions.InvokeMethod`1.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  commentId: M:System.Activities.Expressions.InvokeMethod`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  id: EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: EndExecute(AsyncCodeActivityContext, IAsyncResult)\n  nameWithType: InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext, IAsyncResult)\n  fullName: InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext, IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  syntax:\n    content: protected override TResult EndExecute (System.Activities.AsyncCodeActivityContext context, IAsyncResult result);\n    parameters:\n    - id: context\n      type: System.Activities.AsyncCodeActivityContext\n      description: ''\n    - id: result\n      type: System.IAsyncResult\n      description: ''\n    return:\n      type: TResult\n      description: ''\n  overload: System.Activities.Expressions.InvokeMethod`1.EndExecute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments\n  commentId: P:System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments\n  id: GenericTypeArguments\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: GenericTypeArguments\n  nameWithType: InvokeMethod<TResult>.GenericTypeArguments\n  fullName: InvokeMethod<TResult>.GenericTypeArguments\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: The generic type arguments of the contained method.\n  remarks: The generic type arguments must only be set if the called method is generic.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<Type> GenericTypeArguments { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Type}\n      description: The arguments.\n  overload: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.InvokeMethod`1.MethodName\n  commentId: P:System.Activities.Expressions.InvokeMethod`1.MethodName\n  id: MethodName\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: InvokeMethod<TResult>.MethodName\n  fullName: InvokeMethod<TResult>.MethodName\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: The name of the method to be invoked when the activity executes.\n  remarks: The invoked method must be declared as public.\n  syntax:\n    content: public string MethodName { get; set; }\n    return:\n      type: System.String\n      description: The method name.\n  overload: System.Activities.Expressions.InvokeMethod`1.MethodName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.InvokeMethod`1.Parameters\n  commentId: P:System.Activities.Expressions.InvokeMethod`1.Parameters\n  id: Parameters\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: InvokeMethod<TResult>.Parameters\n  fullName: InvokeMethod<TResult>.Parameters\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: The parameter collection of the method to be invoked.\n  remarks: The parameters must be added to the collection in the same order that they appear in the method signature. Parameters cannot be named `TargetObject` or `Result`.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Argument> Parameters { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Argument}\n      description: The parameter collection.\n  overload: System.Activities.Expressions.InvokeMethod`1.Parameters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously\n  commentId: P:System.Activities.Expressions.InvokeMethod`1.RunAsynchronously\n  id: RunAsynchronously\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: RunAsynchronously\n  nameWithType: InvokeMethod<TResult>.RunAsynchronously\n  fullName: InvokeMethod<TResult>.RunAsynchronously\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Gets or sets a value that indicates whether the activity’s method is invoked asynchronously.\n  syntax:\n    content: public bool RunAsynchronously { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the method executes asynchronously; otherwise, `false`.'\n  overload: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetObject\n  commentId: P:System.Activities.Expressions.InvokeMethod`1.TargetObject\n  id: TargetObject\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: TargetObject\n  nameWithType: InvokeMethod<TResult>.TargetObject\n  fullName: InvokeMethod<TResult>.TargetObject\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Gets or sets the object that contains the method to invoke.\n  syntax:\n    content: public System.Activities.InArgument TargetObject { get; set; }\n    return:\n      type: System.Activities.InArgument\n      description: The method to invoke.\n  overload: System.Activities.Expressions.InvokeMethod`1.TargetObject*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetType\n  commentId: P:System.Activities.Expressions.InvokeMethod`1.TargetType\n  id: TargetType\n  parent: System.Activities.Expressions.InvokeMethod`1\n  langs:\n  - csharp\n  name: TargetType\n  nameWithType: InvokeMethod<TResult>.TargetType\n  fullName: InvokeMethod<TResult>.TargetType\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Expressions\n  summary: Gets or sets the type of the <xref href=\"System.Activities.Expressions.InvokeMethod`1.TargetObject\"></xref>.\n  remarks: This parameter must only be set if the invoked method is static.\n  syntax:\n    content: public Type TargetType { get; set; }\n    return:\n      type: System.Type\n      description: The target object type.\n  overload: System.Activities.Expressions.InvokeMethod`1.TargetType*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.AsyncCodeActivity`1\n  parent: System.Activities\n  isExternal: false\n  name: AsyncCodeActivity<TResult>\n  nameWithType: AsyncCodeActivity<TResult>\n  fullName: System.Activities.AsyncCodeActivity<TResult>\n- uid: System.Activities.Expressions.InvokeMethod`1.#ctor\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: InvokeMethod<TResult>()\n  nameWithType: InvokeMethod<TResult>.InvokeMethod<TResult>()\n  fullName: InvokeMethod<TResult>.InvokeMethod<TResult>()\n- uid: System.Activities.Expressions.InvokeMethod`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: BeginExecute(AsyncCodeActivityContext, AsyncCallback, Object)\n  nameWithType: InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext, AsyncCallback, Object)\n  fullName: InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Activities.AsyncCodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: AsyncCodeActivityContext\n  nameWithType: AsyncCodeActivityContext\n  fullName: System.Activities.AsyncCodeActivityContext\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Expressions.InvokeMethod`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Expressions.InvokeMethod`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: EndExecute(AsyncCodeActivityContext, IAsyncResult)\n  nameWithType: InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext, IAsyncResult)\n  fullName: InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext, IAsyncResult)\n- uid: TResult\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: GenericTypeArguments\n  nameWithType: InvokeMethod<TResult>.GenericTypeArguments\n  fullName: InvokeMethod<TResult>.GenericTypeArguments\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Type\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Collections.ObjectModel.Collection{System.Type}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Type>\n  nameWithType: Collection<Type>\n  fullName: System.Collections.ObjectModel.Collection<System.Type>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeMethod`1.MethodName\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: MethodName\n  nameWithType: InvokeMethod<TResult>.MethodName\n  fullName: InvokeMethod<TResult>.MethodName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Expressions.InvokeMethod`1.Parameters\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: Parameters\n  nameWithType: InvokeMethod<TResult>.Parameters\n  fullName: InvokeMethod<TResult>.Parameters\n- uid: System.Activities.Argument\n  name: Argument\n  nameWithType: Argument\n  fullName: System.Activities.Argument\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Argument}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Argument>\n  nameWithType: Collection<Argument>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Argument>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Argument\n    name: Argument\n    nameWithType: Argument\n    fullName: System.Activities.Argument\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: RunAsynchronously\n  nameWithType: InvokeMethod<TResult>.RunAsynchronously\n  fullName: InvokeMethod<TResult>.RunAsynchronously\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetObject\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: TargetObject\n  nameWithType: InvokeMethod<TResult>.TargetObject\n  fullName: InvokeMethod<TResult>.TargetObject\n- uid: System.Activities.InArgument\n  parent: System.Activities\n  isExternal: false\n  name: InArgument\n  nameWithType: InArgument\n  fullName: System.Activities.InArgument\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetType\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: TargetType\n  nameWithType: InvokeMethod<TResult>.TargetType\n  fullName: InvokeMethod<TResult>.TargetType\n- uid: System.Activities.Expressions.InvokeMethod`1.#ctor*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: InvokeMethod<TResult>\n  nameWithType: InvokeMethod<TResult>.InvokeMethod<TResult>\n  fullName: InvokeMethod<TResult>.InvokeMethod<TResult>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.BeginExecute*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: BeginExecute\n  nameWithType: InvokeMethod<TResult>.BeginExecute\n  fullName: InvokeMethod<TResult>.BeginExecute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.CacheMetadata*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: InvokeMethod<TResult>.CacheMetadata\n  fullName: InvokeMethod<TResult>.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.EndExecute*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: EndExecute\n  nameWithType: InvokeMethod<TResult>.EndExecute\n  fullName: InvokeMethod<TResult>.EndExecute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: GenericTypeArguments\n  nameWithType: InvokeMethod<TResult>.GenericTypeArguments\n  fullName: InvokeMethod<TResult>.GenericTypeArguments\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.MethodName*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: MethodName\n  nameWithType: InvokeMethod<TResult>.MethodName\n  fullName: InvokeMethod<TResult>.MethodName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.Parameters*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: Parameters\n  nameWithType: InvokeMethod<TResult>.Parameters\n  fullName: InvokeMethod<TResult>.Parameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: RunAsynchronously\n  nameWithType: InvokeMethod<TResult>.RunAsynchronously\n  fullName: InvokeMethod<TResult>.RunAsynchronously\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetObject*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: TargetObject\n  nameWithType: InvokeMethod<TResult>.TargetObject\n  fullName: InvokeMethod<TResult>.TargetObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Activities.Expressions.InvokeMethod`1.TargetType*\n  parent: System.Activities.Expressions.InvokeMethod`1\n  isExternal: false\n  name: TargetType\n  nameWithType: InvokeMethod<TResult>.TargetType\n  fullName: InvokeMethod<TResult>.TargetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Expressions/InvokeMethod`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.AsyncCodeActivity`1\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: AsyncCodeActivity<TResult>.CacheMetadata(ActivityMetadata)\n  fullName: AsyncCodeActivity<TResult>.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.AsyncCodeActivity`1.Implementation\n  parent: System.Activities.AsyncCodeActivity`1\n  isExternal: false\n  name: Implementation\n  nameWithType: AsyncCodeActivity<TResult>.Implementation\n  fullName: AsyncCodeActivity<TResult>.Implementation\n- uid: System.Activities.AsyncCodeActivity`1.ImplementationVersion\n  parent: System.Activities.AsyncCodeActivity`1\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: AsyncCodeActivity<TResult>.ImplementationVersion\n  fullName: AsyncCodeActivity<TResult>.ImplementationVersion\n- uid: System.Activities.AsyncCodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.AsyncCodeActivity`1\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: AsyncCodeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: AsyncCodeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.Activity`1.Result\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: Result\n  nameWithType: Activity<TResult>.Result\n  fullName: Activity<TResult>.Result\n- uid: System.Activities.ActivityWithResult.ResultType\n  parent: System.Activities.ActivityWithResult\n  isExternal: false\n  name: ResultType\n  nameWithType: ActivityWithResult.ResultType\n  fullName: ActivityWithResult.ResultType\n- uid: System.Activities.Activity`1.FromValue(`0)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromValue(TResult)\n  nameWithType: Activity<TResult>.FromValue(TResult)\n  fullName: Activity<TResult>.FromValue(TResult)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable)\n  nameWithType: Activity<TResult>.FromVariable(Variable)\n  fullName: Activity<TResult>.FromVariable(Variable)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable<TResult>)\n  nameWithType: Activity<TResult>.FromVariable(Variable<TResult>)\n  fullName: Activity<TResult>.FromVariable(Variable<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable<TResult> to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(TResult to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n- uid: System.Activities.AsyncCodeActivity`1.Cancel(System.Activities.AsyncCodeActivityContext)\n  parent: System.Activities.AsyncCodeActivity`1\n  isExternal: false\n  name: Cancel(AsyncCodeActivityContext)\n  nameWithType: AsyncCodeActivity<TResult>.Cancel(AsyncCodeActivityContext)\n  fullName: AsyncCodeActivity<TResult>.Cancel(AsyncCodeActivityContext)\n"}