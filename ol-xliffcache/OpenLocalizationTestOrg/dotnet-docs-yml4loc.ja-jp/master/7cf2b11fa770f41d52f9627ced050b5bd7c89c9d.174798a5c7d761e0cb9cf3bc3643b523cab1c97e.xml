{"nodes":[{"content":"Represents type declarations for class types, interface types, array types, value types, enumeration types, type parameters, generic type definitions, and open or closed constructed generic types.","nodes":[{"pos":[0,196],"content":"Represents type declarations for class types, interface types, array types, value types, enumeration types, type parameters, generic type definitions, and open or closed constructed generic types.","nodes":[{"content":"Represents type declarations for class types, interface types, array types, value types, enumeration types, type parameters, generic type definitions, and open or closed constructed generic types.","pos":[0,196]}]}],"pos":[7597,7794],"yaml":true},{"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Reflection.TypeInfo> class is included in the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] subset for use in creating Windows Store apps. <xref:System.Reflection.TypeInfo> is available in the full .NET Framework as well. For more information about reflection for Windows Store apps, see [System.Reflection namespaces](http://msdn.microsoft.com/library/windows/apps/hh441595\\(v=vs.110\\).aspx) in the Windows Dev Center and [Reflection in the .NET Framework for Windows Store Apps](~/docs/framework/reflection-and-codedom/reflection-for-windows-store-apps.md) in the MSDN Library.  \n  \n <xref:System.Reflection.TypeInfo> contains many of the members available in the <xref:System.Type> class, and many of the reflection properties in the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] return collections of <xref:System.Reflection.TypeInfo> objects. To get a <xref:System.Reflection.TypeInfo> object from a <xref:System.Type> object, use the <xref:System.Reflection.IntrospectionExtensions.GetTypeInfo%28System.Type%29?displayProperty=fullName> extension method.  \n  \n A <xref:System.Reflection.TypeInfo> object represents the type definition itself, whereas a <xref:System.Type> object represents a reference to the type definition. Getting a <xref:System.Reflection.TypeInfo> object forces the assembly that contains that type to load. In comparison, you can manipulate <xref:System.Type> objects without necessarily requiring the runtime to load the assembly they reference.  \n  \n In the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)], you use the reflection properties of <xref:System.Reflection.TypeInfo> that return <xref:System.Collections.Generic.IEnumerable%601> collections instead of methods that return arrays. For example, use the <xref:System.Reflection.TypeInfo.DeclaredMembers%2A> property to get all declared members, or the <xref:System.Reflection.TypeInfo.DeclaredProperties%2A> property to get all declared properties. Reflection contexts can implement lazy traversal of these collections for large assemblies or types. To get specific members, use methods such as <xref:System.Reflection.TypeInfo.GetDeclaredMethod%2A> and <xref:System.Reflection.TypeInfo.GetDeclaredProperty%2A>, and pass the name of the method or property you would like to retrieve.  \n  \n To filter the results of <xref:System.Reflection.TypeInfo> properties, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"pos":[0,679],"content":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Reflection.TypeInfo> class is included in the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] subset for use in creating Windows Store apps. <xref:System.Reflection.TypeInfo> is available in the full .NET Framework as well. For more information about reflection for Windows Store apps, see [System.Reflection namespaces](http://msdn.microsoft.com/library/windows/apps/hh441595\\(v=vs.110\\).aspx) in the Windows Dev Center and [Reflection in the .NET Framework for Windows Store Apps](~/docs/framework/reflection-and-codedom/reflection-for-windows-store-apps.md) in the MSDN Library.","nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id=\"ph2\">&lt;xref:System.Reflection.TypeInfo&gt;</ph> class is included in the <ph id=\"ph3\">[!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)]</ph> subset for use in creating Windows Store apps.","pos":[0,238],"source":"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Reflection.TypeInfo> class is included in the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] subset for use in creating Windows Store apps."},{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo&gt;</ph> is available in the full .NET Framework as well.","pos":[239,321],"source":" <xref:System.Reflection.TypeInfo> is available in the full .NET Framework as well."},{"content":"For more information about reflection for Windows Store apps, see <bpt id=\"p1\">[</bpt>System.Reflection namespaces<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/apps/hh441595\\(v=vs.110\\).aspx)</ept> in the Windows Dev Center and <bpt id=\"p2\">[</bpt>Reflection in the .NET Framework for Windows Store Apps<ept id=\"p2\">](~/docs/framework/reflection-and-codedom/reflection-for-windows-store-apps.md)</ept> in the MSDN Library.","pos":[322,679],"source":" For more information about reflection for Windows Store apps, see [System.Reflection namespaces](http://msdn.microsoft.com/library/windows/apps/hh441595\\(v=vs.110\\).aspx) in the Windows Dev Center and [Reflection in the .NET Framework for Windows Store Apps](~/docs/framework/reflection-and-codedom/reflection-for-windows-store-apps.md) in the MSDN Library."}]},{"pos":[686,1178],"content":"<xref:System.Reflection.TypeInfo> contains many of the members available in the <xref:System.Type> class, and many of the reflection properties in the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] return collections of <xref:System.Reflection.TypeInfo> objects. To get a <xref:System.Reflection.TypeInfo> object from a <xref:System.Type> object, use the <xref:System.Reflection.IntrospectionExtensions.GetTypeInfo%28System.Type%29?displayProperty=fullName> extension method.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo&gt;</ph> contains many of the members available in the <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> class, and many of the reflection properties in the <ph id=\"ph3\">[!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)]</ph> return collections of <ph id=\"ph4\">&lt;xref:System.Reflection.TypeInfo&gt;</ph> objects.","pos":[0,279],"source":"<xref:System.Reflection.TypeInfo> contains many of the members available in the <xref:System.Type> class, and many of the reflection properties in the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] return collections of <xref:System.Reflection.TypeInfo> objects."},{"content":"To get a <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo&gt;</ph> object from a <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> object, use the <ph id=\"ph3\">&lt;xref:System.Reflection.IntrospectionExtensions.GetTypeInfo%28System.Type%29?displayProperty=fullName&gt;</ph> extension method.","pos":[280,492],"source":" To get a <xref:System.Reflection.TypeInfo> object from a <xref:System.Type> object, use the <xref:System.Reflection.IntrospectionExtensions.GetTypeInfo%28System.Type%29?displayProperty=fullName> extension method."}]},{"pos":[1185,1593],"content":"A <xref:System.Reflection.TypeInfo> object represents the type definition itself, whereas a <xref:System.Type> object represents a reference to the type definition. Getting a <xref:System.Reflection.TypeInfo> object forces the assembly that contains that type to load. In comparison, you can manipulate <xref:System.Type> objects without necessarily requiring the runtime to load the assembly they reference.","nodes":[{"content":"A <xref:System.Reflection.TypeInfo> object represents the type definition itself, whereas a <xref:System.Type> object represents a reference to the type definition. Getting a <xref:System.Reflection.TypeInfo> object forces the assembly that contains that type to load. In comparison, you can manipulate <xref:System.Type> objects without necessarily requiring the runtime to load the assembly they reference.","pos":[0,408],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo&gt;</ph> object represents the type definition itself, whereas a <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> object represents a reference to the type definition.","pos":[0,164],"source":"A <xref:System.Reflection.TypeInfo> object represents the type definition itself, whereas a <xref:System.Type> object represents a reference to the type definition."},{"content":"Getting a <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo&gt;</ph> object forces the assembly that contains that type to load.","pos":[165,268],"source":" Getting a <xref:System.Reflection.TypeInfo> object forces the assembly that contains that type to load."},{"content":"In comparison, you can manipulate <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> objects without necessarily requiring the runtime to load the assembly they reference.","pos":[269,408],"source":" In comparison, you can manipulate <xref:System.Type> objects without necessarily requiring the runtime to load the assembly they reference."}]}]},{"pos":[1600,2406],"content":"In the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)], you use the reflection properties of <xref:System.Reflection.TypeInfo> that return <xref:System.Collections.Generic.IEnumerable%601> collections instead of methods that return arrays. For example, use the <xref:System.Reflection.TypeInfo.DeclaredMembers%2A> property to get all declared members, or the <xref:System.Reflection.TypeInfo.DeclaredProperties%2A> property to get all declared properties. Reflection contexts can implement lazy traversal of these collections for large assemblies or types. To get specific members, use methods such as <xref:System.Reflection.TypeInfo.GetDeclaredMethod%2A> and <xref:System.Reflection.TypeInfo.GetDeclaredProperty%2A>, and pass the name of the method or property you would like to retrieve.","nodes":[{"content":"In the <ph id=\"ph1\">[!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)]</ph>, you use the reflection properties of <ph id=\"ph2\">&lt;xref:System.Reflection.TypeInfo&gt;</ph> that return <ph id=\"ph3\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collections instead of methods that return arrays.","pos":[0,255],"source":"In the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)], you use the reflection properties of <xref:System.Reflection.TypeInfo> that return <xref:System.Collections.Generic.IEnumerable%601> collections instead of methods that return arrays."},{"content":"For example, use the <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo.DeclaredMembers%2A&gt;</ph> property to get all declared members, or the <ph id=\"ph2\">&lt;xref:System.Reflection.TypeInfo.DeclaredProperties%2A&gt;</ph> property to get all declared properties.","pos":[256,471],"source":" For example, use the <xref:System.Reflection.TypeInfo.DeclaredMembers%2A> property to get all declared members, or the <xref:System.Reflection.TypeInfo.DeclaredProperties%2A> property to get all declared properties."},{"content":"Reflection contexts can implement lazy traversal of these collections for large assemblies or types.","pos":[472,572]},{"content":"To get specific members, use methods such as <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo.GetDeclaredMethod%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Reflection.TypeInfo.GetDeclaredProperty%2A&gt;</ph>, and pass the name of the method or property you would like to retrieve.","pos":[573,806],"source":" To get specific members, use methods such as <xref:System.Reflection.TypeInfo.GetDeclaredMethod%2A> and <xref:System.Reflection.TypeInfo.GetDeclaredProperty%2A>, and pass the name of the method or property you would like to retrieve."}]},{"pos":[2413,2865],"content":"To filter the results of <xref:System.Reflection.TypeInfo> properties, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"content":"To filter the results of <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo&gt;</ph> properties, use LINQ queries.","pos":[0,88],"source":"To filter the results of <xref:System.Reflection.TypeInfo> properties, use LINQ queries."},{"content":"For reflection objects that originate with the runtime (for example, as the result of <ph id=\"ph1\">`typeof(Object)`</ph>), you can traverse the inheritance tree by using the methods in the <ph id=\"ph2\">&lt;xref:System.Reflection.RuntimeReflectionExtensions&gt;</ph> class.","pos":[89,319],"source":" For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class."},{"content":"Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","pos":[320,452]}]}],"pos":[7805,10683],"yaml":true,"extradata":"MT"},{"content":"Returns the current type as a <xref href=\"System.Type\"></xref> object.","nodes":[{"pos":[0,70],"content":"Returns the current type as a <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the current type as a <xref href=\"System.Type\"></xref> object."}],"pos":[19410,19481],"yaml":true},{"content":"The current type.","nodes":[{"pos":[0,17],"content":"The current type.","nodes":[{"content":"The current type.","pos":[0,17]}]}],"pos":[19609,19627],"yaml":true},{"content":"Gets a collection of the constructors declared by the current type.","nodes":[{"pos":[0,67],"content":"Gets a collection of the constructors declared by the current type.","nodes":[{"content":"Gets a collection of the constructors declared by the current type.","pos":[0,67]}]}],"pos":[24364,24432],"yaml":true},{"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredConstructors%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"pos":[0,478],"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredConstructors%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"content":"To filter the results of the <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo.DeclaredConstructors%2A&gt;</ph> property, use LINQ queries.","pos":[0,114],"source":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredConstructors%2A> property, use LINQ queries."},{"content":"For reflection objects that originate with the runtime (for example, as the result of <ph id=\"ph1\">`typeof(Object)`</ph>), you can traverse the inheritance tree by using the methods in the <ph id=\"ph2\">&lt;xref:System.Reflection.RuntimeReflectionExtensions&gt;</ph> class.","pos":[115,345],"source":" For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class."},{"content":"Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","pos":[346,478]}]}],"pos":[24443,24922],"yaml":true,"extradata":"MT"},{"content":"A collection of the constructors declared by the current type.","nodes":[{"pos":[0,62],"content":"A collection of the constructors declared by the current type.","nodes":[{"content":"A collection of the constructors declared by the current type.","pos":[0,62]}]}],"pos":[25181,25244],"yaml":true},{"content":"Gets a collection of the events defined by the current type.","nodes":[{"pos":[0,60],"content":"Gets a collection of the events defined by the current type.","nodes":[{"content":"Gets a collection of the events defined by the current type.","pos":[0,60]}]}],"pos":[26812,26873],"yaml":true},{"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredEvents%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"pos":[0,472],"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredEvents%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"content":"To filter the results of the <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo.DeclaredEvents%2A&gt;</ph> property, use LINQ queries.","pos":[0,108],"source":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredEvents%2A> property, use LINQ queries."},{"content":"For reflection objects that originate with the runtime (for example, as the result of <ph id=\"ph1\">`typeof(Object)`</ph>), you can traverse the inheritance tree by using the methods in the <ph id=\"ph2\">&lt;xref:System.Reflection.RuntimeReflectionExtensions&gt;</ph> class.","pos":[109,339],"source":" For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class."},{"content":"Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","pos":[340,472]}]}],"pos":[26884,27357],"yaml":true,"extradata":"MT"},{"content":"A collection of the events defined by the current type.","nodes":[{"pos":[0,55],"content":"A collection of the events defined by the current type.","nodes":[{"content":"A collection of the events defined by the current type.","pos":[0,55]}]}],"pos":[27598,27654],"yaml":true},{"content":"Gets a collection of the fields defined by the current type.","nodes":[{"pos":[0,60],"content":"Gets a collection of the fields defined by the current type.","nodes":[{"content":"Gets a collection of the fields defined by the current type.","pos":[0,60]}]}],"pos":[29216,29277],"yaml":true},{"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredFields%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"pos":[0,472],"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredFields%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"content":"To filter the results of the <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo.DeclaredFields%2A&gt;</ph> property, use LINQ queries.","pos":[0,108],"source":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredFields%2A> property, use LINQ queries."},{"content":"For reflection objects that originate with the runtime (for example, as the result of <ph id=\"ph1\">`typeof(Object)`</ph>), you can traverse the inheritance tree by using the methods in the <ph id=\"ph2\">&lt;xref:System.Reflection.RuntimeReflectionExtensions&gt;</ph> class.","pos":[109,339],"source":" For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class."},{"content":"Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","pos":[340,472]}]}],"pos":[29288,29761],"yaml":true,"extradata":"MT"},{"content":"A collection of the fields defined by the current type.","nodes":[{"pos":[0,55],"content":"A collection of the fields defined by the current type.","nodes":[{"content":"A collection of the fields defined by the current type.","pos":[0,55]}]}],"pos":[30002,30058],"yaml":true},{"content":"Gets a collection of the members defined by the current type.","nodes":[{"pos":[0,61],"content":"Gets a collection of the members defined by the current type.","nodes":[{"content":"Gets a collection of the members defined by the current type.","pos":[0,61]}]}],"pos":[31626,31688],"yaml":true},{"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredMembers%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"pos":[0,473],"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredMembers%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"content":"To filter the results of the <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo.DeclaredMembers%2A&gt;</ph> property, use LINQ queries.","pos":[0,109],"source":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredMembers%2A> property, use LINQ queries."},{"content":"For reflection objects that originate with the runtime (for example, as the result of <ph id=\"ph1\">`typeof(Object)`</ph>), you can traverse the inheritance tree by using the methods in the <ph id=\"ph2\">&lt;xref:System.Reflection.RuntimeReflectionExtensions&gt;</ph> class.","pos":[110,340],"source":" For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class."},{"content":"Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","pos":[341,473]}]}],"pos":[31699,32173],"yaml":true,"extradata":"MT"},{"content":"A collection of the members defined by the current type.","nodes":[{"pos":[0,56],"content":"A collection of the members defined by the current type.","nodes":[{"content":"A collection of the members defined by the current type.","pos":[0,56]}]}],"pos":[32417,32474],"yaml":true},{"content":"Gets a collection of the methods defined by the current type.","nodes":[{"pos":[0,61],"content":"Gets a collection of the methods defined by the current type.","nodes":[{"content":"Gets a collection of the methods defined by the current type.","pos":[0,61]}]}],"pos":[34043,34105],"yaml":true},{"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredMethods%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"pos":[0,473],"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredMethods%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"content":"To filter the results of the <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo.DeclaredMethods%2A&gt;</ph> property, use LINQ queries.","pos":[0,109],"source":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredMethods%2A> property, use LINQ queries."},{"content":"For reflection objects that originate with the runtime (for example, as the result of <ph id=\"ph1\">`typeof(Object)`</ph>), you can traverse the inheritance tree by using the methods in the <ph id=\"ph2\">&lt;xref:System.Reflection.RuntimeReflectionExtensions&gt;</ph> class.","pos":[110,340],"source":" For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class."},{"content":"Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","pos":[341,473]}]}],"pos":[34116,34590],"yaml":true,"extradata":"MT"},{"content":"A collection of the methods defined by the current type.","nodes":[{"pos":[0,56],"content":"A collection of the methods defined by the current type.","nodes":[{"content":"A collection of the methods defined by the current type.","pos":[0,56]}]}],"pos":[35716,35773],"yaml":true},{"content":"Gets a collection of the nested types defined by the current type.","nodes":[{"pos":[0,66],"content":"Gets a collection of the nested types defined by the current type.","nodes":[{"content":"Gets a collection of the nested types defined by the current type.","pos":[0,66]}]}],"pos":[37366,37433],"yaml":true},{"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredNestedTypes%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"pos":[0,477],"content":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredNestedTypes%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","nodes":[{"content":"To filter the results of the <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo.DeclaredNestedTypes%2A&gt;</ph> property, use LINQ queries.","pos":[0,113],"source":"To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredNestedTypes%2A> property, use LINQ queries."},{"content":"For reflection objects that originate with the runtime (for example, as the result of <ph id=\"ph1\">`typeof(Object)`</ph>), you can traverse the inheritance tree by using the methods in the <ph id=\"ph2\">&lt;xref:System.Reflection.RuntimeReflectionExtensions&gt;</ph> class.","pos":[114,344],"source":" For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class."},{"content":"Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.","pos":[345,477]}]}],"pos":[37444,37922],"yaml":true,"extradata":"MT"},{"content":"A collection of nested types defined by the current type.","nodes":[{"pos":[0,57],"content":"A collection of nested types defined by the current type.","nodes":[{"content":"A collection of nested types defined by the current type.","pos":[0,57]}]}],"pos":[38166,38224],"yaml":true},{"content":"Gets a collection of the properties defined by the current type.","nodes":[{"pos":[0,64],"content":"Gets a collection of the properties defined by the current type.","nodes":[{"content":"Gets a collection of the properties defined by the current type.","pos":[0,64]}]}],"pos":[39815,39880],"yaml":true},{"content":"A collection of the properties defined by the current type.","nodes":[{"pos":[0,59],"content":"A collection of the properties defined by the current type.","nodes":[{"content":"A collection of the properties defined by the current type.","pos":[0,59]}]}],"pos":[41027,41087],"yaml":true},{"content":"Gets an array of the generic type parameters of the current instance.","nodes":[{"pos":[0,69],"content":"Gets an array of the generic type parameters of the current instance.","nodes":[{"content":"Gets an array of the generic type parameters of the current instance.","pos":[0,69]}]}],"pos":[51189,51259],"yaml":true},{"content":"An array that contains the current instance's generic type parameters, or an array of <xref href=\"System.Array.Length\"></xref> zero if the current instance has no generic type parameters.","nodes":[{"pos":[0,187],"content":"An array that contains the current instance's generic type parameters, or an array of <ph id=\"ph1\">&lt;xref href=\"System.Array.Length\"&gt;&lt;/xref&gt;</ph> zero if the current instance has no generic type parameters.","source":"An array that contains the current instance's generic type parameters, or an array of <xref href=\"System.Array.Length\"></xref> zero if the current instance has no generic type parameters."}],"pos":[51392,51580],"yaml":true},{"content":"Returns an object that represents the specified public event declared by the current type.","nodes":[{"pos":[0,90],"content":"Returns an object that represents the specified public event declared by the current type.","nodes":[{"content":"Returns an object that represents the specified public event declared by the current type.","pos":[0,90]}]}],"pos":[57407,57498],"yaml":true},{"content":"The name of the event.","nodes":[{"pos":[0,22],"content":"The name of the event.","nodes":[{"content":"The name of the event.","pos":[0,22]}]}],"pos":[57672,57695],"yaml":true},{"content":"An object that represents the specified event, if found; otherwise, `null`.","nodes":[{"pos":[0,75],"content":"An object that represents the specified event, if found; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"An object that represents the specified event, if found; otherwise, `null`."}],"pos":[57766,57842],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[58015,58044],"yaml":true},{"content":"Returns an object that represents the specified public field declared by the current type.","nodes":[{"pos":[0,90],"content":"Returns an object that represents the specified public field declared by the current type.","nodes":[{"content":"Returns an object that represents the specified public field declared by the current type.","pos":[0,90]}]}],"pos":[59613,59704],"yaml":true},{"content":"The name of the field.","nodes":[{"pos":[0,22],"content":"The name of the field.","nodes":[{"content":"The name of the field.","pos":[0,22]}]}],"pos":[59878,59901],"yaml":true},{"content":"An object that represents the specified field, if found; otherwise, `null`.","nodes":[{"pos":[0,75],"content":"An object that represents the specified field, if found; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"An object that represents the specified field, if found; otherwise, `null`."}],"pos":[59972,60048],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[60221,60250],"yaml":true},{"content":"Returns an object that represents the specified public method declared by the current type.","nodes":[{"pos":[0,91],"content":"Returns an object that represents the specified public method declared by the current type.","nodes":[{"content":"Returns an object that represents the specified public method declared by the current type.","pos":[0,91]}]}],"pos":[61825,61917],"yaml":true},{"content":"The name of the method.","nodes":[{"pos":[0,23],"content":"The name of the method.","nodes":[{"content":"The name of the method.","pos":[0,23]}]}],"pos":[62093,62117],"yaml":true},{"content":"An object that represents the specified method, if found; otherwise, `null`.","nodes":[{"pos":[0,76],"content":"An object that represents the specified method, if found; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"An object that represents the specified method, if found; otherwise, `null`."}],"pos":[62189,62266],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[62440,62469],"yaml":true},{"content":"Returns a collection that contains all public methods declared on the current type that match the specified name.","nodes":[{"pos":[0,113],"content":"Returns a collection that contains all public methods declared on the current type that match the specified name.","nodes":[{"content":"Returns a collection that contains all public methods declared on the current type that match the specified name.","pos":[0,113]}]}],"pos":[64050,64164],"yaml":true},{"content":"The method name to search for.","nodes":[{"pos":[0,30],"content":"The method name to search for.","nodes":[{"content":"The method name to search for.","pos":[0,30]}]}],"pos":[64381,64412],"yaml":true},{"content":"A collection that contains methods that match <code>name</code>.","nodes":[{"pos":[0,64],"content":"A collection that contains methods that match <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A collection that contains methods that match <code>name</code>."}],"pos":[64524,64589],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[64764,64793],"yaml":true},{"content":"Returns an object that represents the specified public nested type declared by the current type.","nodes":[{"pos":[0,96],"content":"Returns an object that represents the specified public nested type declared by the current type.","nodes":[{"content":"Returns an object that represents the specified public nested type declared by the current type.","pos":[0,96]}]}],"pos":[66392,66489],"yaml":true},{"content":"The name of the nested type.","nodes":[{"pos":[0,28],"content":"The name of the nested type.","nodes":[{"content":"The name of the nested type.","pos":[0,28]}]}],"pos":[66667,66696],"yaml":true},{"content":"An object that represents the specified nested type, if found; otherwise, `null`.","nodes":[{"pos":[0,81],"content":"An object that represents the specified nested type, if found; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"An object that represents the specified nested type, if found; otherwise, `null`."}],"pos":[66766,66848],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[67026,67055],"yaml":true},{"content":"Returns an object that represents the specified public property declared by the current type.","nodes":[{"pos":[0,93],"content":"Returns an object that represents the specified public property declared by the current type.","nodes":[{"content":"Returns an object that represents the specified public property declared by the current type.","pos":[0,93]}]}],"pos":[68642,68736],"yaml":true},{"content":"The name of the property.","nodes":[{"pos":[0,25],"content":"The name of the property.","nodes":[{"content":"The name of the property.","pos":[0,25]}]}],"pos":[68916,68942],"yaml":true},{"content":"An object that represents the specified property, if found; otherwise, `null`.","nodes":[{"pos":[0,78],"content":"An object that represents the specified property, if found; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"An object that represents the specified property, if found; otherwise, `null`."}],"pos":[69016,69095],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[69271,69300],"yaml":true},{"content":"Gets a collection of the interfaces implemented by the current type.","nodes":[{"pos":[0,68],"content":"Gets a collection of the interfaces implemented by the current type.","nodes":[{"content":"Gets a collection of the interfaces implemented by the current type.","pos":[0,68]}]}],"pos":[119046,119115],"yaml":true},{"content":"A collection of the interfaces implemented by the current type.","nodes":[{"pos":[0,63],"content":"A collection of the interfaces implemented by the current type.","nodes":[{"content":"A collection of the interfaces implemented by the current type.","pos":[0,63]}]}],"pos":[119324,119388],"yaml":true},{"content":"Returns a value that indicates whether the specified type can be assigned to the current type.","nodes":[{"pos":[0,94],"content":"Returns a value that indicates whether the specified type can be assigned to the current type.","nodes":[{"content":"Returns a value that indicates whether the specified type can be assigned to the current type.","pos":[0,94]}]}],"pos":[124038,124133],"yaml":true},{"content":"The type to check.","nodes":[{"pos":[0,18],"content":"The type to check.","nodes":[{"content":"The type to check.","pos":[0,18]}]}],"pos":[124325,124344],"yaml":true},{"content":"`true` if the specified type can be assigned to this type; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the specified type can be assigned to this type; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified type can be assigned to this type; otherwise, `false`."}],"pos":[124402,124483],"yaml":true},{"content":"Returns a representation of the current type as a <xref href=\"System.Reflection.TypeInfo\"></xref> object.","nodes":[{"pos":[0,105],"content":"Returns a representation of the current type as a <ph id=\"ph1\">&lt;xref href=\"System.Reflection.TypeInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a representation of the current type as a <xref href=\"System.Reflection.TypeInfo\"></xref> object."}],"pos":[172589,172695],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.TypeInfo> instance is cast to an <xref:System.Reflection.IReflectableType> interface.","nodes":[{"pos":[0,198],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.TypeInfo> instance is cast to an <xref:System.Reflection.IReflectableType> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.TypeInfo> instance is cast to an <xref:System.Reflection.IReflectableType> interface.","pos":[0,198],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Reflection.TypeInfo&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Reflection.IReflectableType&gt;</ph> interface.","pos":[60,198],"source":" It can be used only when the <xref:System.Reflection.TypeInfo> instance is cast to an <xref:System.Reflection.IReflectableType> interface."}]}]}],"pos":[172706,172905],"yaml":true,"extradata":"MT"},{"content":"A reference to the current type.","nodes":[{"pos":[0,32],"content":"A reference to the current type.","nodes":[{"content":"A reference to the current type.","pos":[0,32]}]}],"pos":[173077,173110],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.TypeInfo\n  commentId: T:System.Reflection.TypeInfo\n  id: TypeInfo\n  children:\n  - System.Reflection.TypeInfo.Assembly\n  - System.Reflection.TypeInfo.AssemblyQualifiedName\n  - System.Reflection.TypeInfo.AsType\n  - System.Reflection.TypeInfo.Attributes\n  - System.Reflection.TypeInfo.BaseType\n  - System.Reflection.TypeInfo.ContainsGenericParameters\n  - System.Reflection.TypeInfo.DeclaredConstructors\n  - System.Reflection.TypeInfo.DeclaredEvents\n  - System.Reflection.TypeInfo.DeclaredFields\n  - System.Reflection.TypeInfo.DeclaredMembers\n  - System.Reflection.TypeInfo.DeclaredMethods\n  - System.Reflection.TypeInfo.DeclaredNestedTypes\n  - System.Reflection.TypeInfo.DeclaredProperties\n  - System.Reflection.TypeInfo.DeclaringMethod\n  - System.Reflection.TypeInfo.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  - System.Reflection.TypeInfo.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  - System.Reflection.TypeInfo.FullName\n  - System.Reflection.TypeInfo.GenericParameterAttributes\n  - System.Reflection.TypeInfo.GenericParameterPosition\n  - System.Reflection.TypeInfo.GenericTypeArguments\n  - System.Reflection.TypeInfo.GenericTypeParameters\n  - System.Reflection.TypeInfo.GetArrayRank\n  - System.Reflection.TypeInfo.GetConstructor(System.Type[])\n  - System.Reflection.TypeInfo.GetConstructors\n  - System.Reflection.TypeInfo.GetConstructors(System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredField(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n  - System.Reflection.TypeInfo.GetDefaultMembers\n  - System.Reflection.TypeInfo.GetElementType\n  - System.Reflection.TypeInfo.GetEnumName(System.Object)\n  - System.Reflection.TypeInfo.GetEnumNames\n  - System.Reflection.TypeInfo.GetEnumUnderlyingType\n  - System.Reflection.TypeInfo.GetEnumValues\n  - System.Reflection.TypeInfo.GetEvent(System.String)\n  - System.Reflection.TypeInfo.GetEvent(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetEvents\n  - System.Reflection.TypeInfo.GetEvents(System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetField(System.String)\n  - System.Reflection.TypeInfo.GetField(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetFields\n  - System.Reflection.TypeInfo.GetFields(System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetGenericArguments\n  - System.Reflection.TypeInfo.GetGenericParameterConstraints\n  - System.Reflection.TypeInfo.GetGenericTypeDefinition\n  - System.Reflection.TypeInfo.GetInterface(System.String)\n  - System.Reflection.TypeInfo.GetInterface(System.String,System.Boolean)\n  - System.Reflection.TypeInfo.GetInterfaces\n  - System.Reflection.TypeInfo.GetMember(System.String)\n  - System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetMembers\n  - System.Reflection.TypeInfo.GetMembers(System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetMethod(System.String)\n  - System.Reflection.TypeInfo.GetMethod(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetMethod(System.String,System.Type[])\n  - System.Reflection.TypeInfo.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.TypeInfo.GetMethods\n  - System.Reflection.TypeInfo.GetMethods(System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetNestedType(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetNestedType(System.String)\n  - System.Reflection.TypeInfo.GetNestedTypes\n  - System.Reflection.TypeInfo.GetNestedTypes(System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetProperties\n  - System.Reflection.TypeInfo.GetProperties(System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetProperty(System.String)\n  - System.Reflection.TypeInfo.GetProperty(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type)\n  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type[])\n  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[])\n  - System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.TypeInfo.GUID\n  - System.Reflection.TypeInfo.HasElementType\n  - System.Reflection.TypeInfo.ImplementedInterfaces\n  - System.Reflection.TypeInfo.IsAbstract\n  - System.Reflection.TypeInfo.IsAnsiClass\n  - System.Reflection.TypeInfo.IsArray\n  - System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n  - System.Reflection.TypeInfo.IsAssignableFrom(System.Type)\n  - System.Reflection.TypeInfo.IsAutoClass\n  - System.Reflection.TypeInfo.IsAutoLayout\n  - System.Reflection.TypeInfo.IsByRef\n  - System.Reflection.TypeInfo.IsClass\n  - System.Reflection.TypeInfo.IsCOMObject\n  - System.Reflection.TypeInfo.IsEnum\n  - System.Reflection.TypeInfo.IsEnumDefined(System.Object)\n  - System.Reflection.TypeInfo.IsEquivalentTo(System.Type)\n  - System.Reflection.TypeInfo.IsExplicitLayout\n  - System.Reflection.TypeInfo.IsGenericParameter\n  - System.Reflection.TypeInfo.IsGenericType\n  - System.Reflection.TypeInfo.IsGenericTypeDefinition\n  - System.Reflection.TypeInfo.IsImport\n  - System.Reflection.TypeInfo.IsInstanceOfType(System.Object)\n  - System.Reflection.TypeInfo.IsInterface\n  - System.Reflection.TypeInfo.IsLayoutSequential\n  - System.Reflection.TypeInfo.IsMarshalByRef\n  - System.Reflection.TypeInfo.IsNested\n  - System.Reflection.TypeInfo.IsNestedAssembly\n  - System.Reflection.TypeInfo.IsNestedFamANDAssem\n  - System.Reflection.TypeInfo.IsNestedFamily\n  - System.Reflection.TypeInfo.IsNestedFamORAssem\n  - System.Reflection.TypeInfo.IsNestedPrivate\n  - System.Reflection.TypeInfo.IsNestedPublic\n  - System.Reflection.TypeInfo.IsNotPublic\n  - System.Reflection.TypeInfo.IsPointer\n  - System.Reflection.TypeInfo.IsPrimitive\n  - System.Reflection.TypeInfo.IsPublic\n  - System.Reflection.TypeInfo.IsSealed\n  - System.Reflection.TypeInfo.IsSerializable\n  - System.Reflection.TypeInfo.IsSpecialName\n  - System.Reflection.TypeInfo.IsSubclassOf(System.Type)\n  - System.Reflection.TypeInfo.IsUnicodeClass\n  - System.Reflection.TypeInfo.IsValueType\n  - System.Reflection.TypeInfo.IsVisible\n  - System.Reflection.TypeInfo.MakeArrayType\n  - System.Reflection.TypeInfo.MakeArrayType(System.Int32)\n  - System.Reflection.TypeInfo.MakeByRefType\n  - System.Reflection.TypeInfo.MakeGenericType(System.Type[])\n  - System.Reflection.TypeInfo.MakePointerType\n  - System.Reflection.TypeInfo.MemberType\n  - System.Reflection.TypeInfo.Namespace\n  - System.Reflection.TypeInfo.StructLayoutAttribute\n  - System.Reflection.TypeInfo.TypeInitializer\n  - System.Reflection.TypeInfo.UnderlyingSystemType\n  - System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n  langs:\n  - csharp\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n  type: Class\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Represents type declarations for class types, interface types, array types, value types, enumeration types, type parameters, generic type definitions, and open or closed constructed generic types.\n  remarks: \"Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Reflection.TypeInfo> class is included in the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] subset for use in creating Windows Store apps. <xref:System.Reflection.TypeInfo> is available in the full .NET Framework as well. For more information about reflection for Windows Store apps, see [System.Reflection namespaces](http://msdn.microsoft.com/library/windows/apps/hh441595\\\\(v=vs.110\\\\).aspx) in the Windows Dev Center and [Reflection in the .NET Framework for Windows Store Apps](~/docs/framework/reflection-and-codedom/reflection-for-windows-store-apps.md) in the MSDN Library.  \\n  \\n <xref:System.Reflection.TypeInfo> contains many of the members available in the <xref:System.Type> class, and many of the reflection properties in the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] return collections of <xref:System.Reflection.TypeInfo> objects. To get a <xref:System.Reflection.TypeInfo> object from a <xref:System.Type> object, use the <xref:System.Reflection.IntrospectionExtensions.GetTypeInfo%28System.Type%29?displayProperty=fullName> extension method.  \\n  \\n A <xref:System.Reflection.TypeInfo> object represents the type definition itself, whereas a <xref:System.Type> object represents a reference to the type definition. Getting a <xref:System.Reflection.TypeInfo> object forces the assembly that contains that type to load. In comparison, you can manipulate <xref:System.Type> objects without necessarily requiring the runtime to load the assembly they reference.  \\n  \\n In the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)], you use the reflection properties of <xref:System.Reflection.TypeInfo> that return <xref:System.Collections.Generic.IEnumerable%601> collections instead of methods that return arrays. For example, use the <xref:System.Reflection.TypeInfo.DeclaredMembers%2A> property to get all declared members, or the <xref:System.Reflection.TypeInfo.DeclaredProperties%2A> property to get all declared properties. Reflection contexts can implement lazy traversal of these collections for large assemblies or types. To get specific members, use methods such as <xref:System.Reflection.TypeInfo.GetDeclaredMethod%2A> and <xref:System.Reflection.TypeInfo.GetDeclaredProperty%2A>, and pass the name of the method or property you would like to retrieve.  \\n  \\n To filter the results of <xref:System.Reflection.TypeInfo> properties, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.\"\n  example:\n  - \"This example uses the reflection types and members in the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] subset to retrieve the methods and properties of the <xref:System.Globalization.Calendar> type, including inherited methods and properties. To run this code, paste it into the code file for a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] XAML app that contains a [Windows.UI.Xaml.Controls.Textblock](http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.textblock.aspx) control named `textblock1`.  \\n  \\n [!code-csharp[System.ReflectionWinStoreApp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflectionwinstoreapp/cs/mainpage.xaml.cs#1)]\\n [!code-vb[System.ReflectionWinStoreApp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflectionwinstoreapp/vb/mainpage.xaml.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class TypeInfo : Type, System.Reflection.IReflectableType\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  derivedClasses:\n  - System.Reflection.TypeDelegator\n  - System.Reflection.Emit.EnumBuilder\n  - System.Reflection.Emit.GenericTypeParameterBuilder\n  - System.Reflection.Emit.TypeBuilder\n  implements:\n  - System.Reflection.IReflectableType\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.DeclaringType\n  - System.Reflection.MemberInfo.Equals(System.Object)\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.GetHashCode\n  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.Module\n  - System.Reflection.MemberInfo.Name\n  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.ReflectedType\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  extensionMethods:\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  - System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.Assembly\n  commentId: P:System.Reflection.TypeInfo.Assembly\n  id: Assembly\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: TypeInfo.Assembly\n  fullName: TypeInfo.Assembly\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.Assembly Assembly { get; }\n    return:\n      type: System.Reflection.Assembly\n      description: ''\n  overload: System.Reflection.TypeInfo.Assembly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.AssemblyQualifiedName\n  commentId: P:System.Reflection.TypeInfo.AssemblyQualifiedName\n  id: AssemblyQualifiedName\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: AssemblyQualifiedName\n  nameWithType: TypeInfo.AssemblyQualifiedName\n  fullName: TypeInfo.AssemblyQualifiedName\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract string AssemblyQualifiedName { get; }\n    return:\n      type: System.String\n      description: ''\n  overload: System.Reflection.TypeInfo.AssemblyQualifiedName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.AsType\n  commentId: M:System.Reflection.TypeInfo.AsType\n  id: AsType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: AsType()\n  nameWithType: TypeInfo.AsType()\n  fullName: TypeInfo.AsType()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns the current type as a <xref href=\"System.Type\"></xref> object.\n  syntax:\n    content: public virtual Type AsType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: The current type.\n  overload: System.Reflection.TypeInfo.AsType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.Attributes\n  commentId: P:System.Reflection.TypeInfo.Attributes\n  id: Attributes\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: TypeInfo.Attributes\n  fullName: TypeInfo.Attributes\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.TypeAttributes Attributes { get; }\n    return:\n      type: System.Reflection.TypeAttributes\n      description: ''\n  overload: System.Reflection.TypeInfo.Attributes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.BaseType\n  commentId: P:System.Reflection.TypeInfo.BaseType\n  id: BaseType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: BaseType\n  nameWithType: TypeInfo.BaseType\n  fullName: TypeInfo.BaseType\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Type BaseType { get; }\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.BaseType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.ContainsGenericParameters\n  commentId: P:System.Reflection.TypeInfo.ContainsGenericParameters\n  id: ContainsGenericParameters\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: ContainsGenericParameters\n  nameWithType: TypeInfo.ContainsGenericParameters\n  fullName: TypeInfo.ContainsGenericParameters\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract bool ContainsGenericParameters { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.ContainsGenericParameters*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.DeclaredConstructors\n  commentId: P:System.Reflection.TypeInfo.DeclaredConstructors\n  id: DeclaredConstructors\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredConstructors\n  nameWithType: TypeInfo.DeclaredConstructors\n  fullName: TypeInfo.DeclaredConstructors\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a collection of the constructors declared by the current type.\n  remarks: To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredConstructors%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.ConstructorInfo> DeclaredConstructors { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo}\n      description: A collection of the constructors declared by the current type.\n  overload: System.Reflection.TypeInfo.DeclaredConstructors*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.DeclaredEvents\n  commentId: P:System.Reflection.TypeInfo.DeclaredEvents\n  id: DeclaredEvents\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredEvents\n  nameWithType: TypeInfo.DeclaredEvents\n  fullName: TypeInfo.DeclaredEvents\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a collection of the events defined by the current type.\n  remarks: To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredEvents%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.EventInfo> DeclaredEvents { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.EventInfo}\n      description: A collection of the events defined by the current type.\n  overload: System.Reflection.TypeInfo.DeclaredEvents*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.DeclaredFields\n  commentId: P:System.Reflection.TypeInfo.DeclaredFields\n  id: DeclaredFields\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredFields\n  nameWithType: TypeInfo.DeclaredFields\n  fullName: TypeInfo.DeclaredFields\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a collection of the fields defined by the current type.\n  remarks: To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredFields%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.FieldInfo> DeclaredFields { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.FieldInfo}\n      description: A collection of the fields defined by the current type.\n  overload: System.Reflection.TypeInfo.DeclaredFields*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.DeclaredMembers\n  commentId: P:System.Reflection.TypeInfo.DeclaredMembers\n  id: DeclaredMembers\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredMembers\n  nameWithType: TypeInfo.DeclaredMembers\n  fullName: TypeInfo.DeclaredMembers\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a collection of the members defined by the current type.\n  remarks: To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredMembers%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo> DeclaredMembers { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}\n      description: A collection of the members defined by the current type.\n  overload: System.Reflection.TypeInfo.DeclaredMembers*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.DeclaredMethods\n  commentId: P:System.Reflection.TypeInfo.DeclaredMethods\n  id: DeclaredMethods\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredMethods\n  nameWithType: TypeInfo.DeclaredMethods\n  fullName: TypeInfo.DeclaredMethods\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a collection of the methods defined by the current type.\n  remarks: To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredMethods%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.\n  example:\n  - \"This example uses the reflection types and members in the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] subset to retrieve the methods and properties of the <xref:System.Globalization.Calendar> type, including inherited methods and properties. To run this code, paste it into the code file for a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] XAML app that contains a [Windows.UI.Xaml.Controls.Textblock](http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.textblock.aspx) control named `textblock1`.  \\n  \\n [!code-csharp[System.ReflectionWinStoreApp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflectionwinstoreapp/cs/mainpage.xaml.cs#1)]\\n [!code-vb[System.ReflectionWinStoreApp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflectionwinstoreapp/vb/mainpage.xaml.vb#1)]\"\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo> DeclaredMethods { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo}\n      description: A collection of the methods defined by the current type.\n  overload: System.Reflection.TypeInfo.DeclaredMethods*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.DeclaredNestedTypes\n  commentId: P:System.Reflection.TypeInfo.DeclaredNestedTypes\n  id: DeclaredNestedTypes\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredNestedTypes\n  nameWithType: TypeInfo.DeclaredNestedTypes\n  fullName: TypeInfo.DeclaredNestedTypes\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a collection of the nested types defined by the current type.\n  remarks: To filter the results of the <xref:System.Reflection.TypeInfo.DeclaredNestedTypes%2A> property, use LINQ queries. For reflection objects that originate with the runtime (for example, as the result of `typeof(Object)`), you can traverse the inheritance tree by using the methods in the <xref:System.Reflection.RuntimeReflectionExtensions> class. Consumers of objects from customized reflection contexts cannot use these methods and must traverse the inheritance tree themselves.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo> DeclaredNestedTypes { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}\n      description: A collection of nested types defined by the current type.\n  overload: System.Reflection.TypeInfo.DeclaredNestedTypes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.DeclaredProperties\n  commentId: P:System.Reflection.TypeInfo.DeclaredProperties\n  id: DeclaredProperties\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaredProperties\n  nameWithType: TypeInfo.DeclaredProperties\n  fullName: TypeInfo.DeclaredProperties\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a collection of the properties defined by the current type.\n  remarks: ''\n  example:\n  - \"This example uses the reflection types and members in the [!INCLUDE[net_win8_profile](~/includes/net-win8-profile-md.md)] subset to retrieve the methods and properties of the <xref:System.Globalization.Calendar> type, including inherited methods and properties. To run this code, paste it into the code file for a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] XAML app that contains a [Windows.UI.Xaml.Controls.Textblock](http://msdn.microsoft.com/library/windows/apps/windows.ui.xaml.controls.textblock.aspx) control named `textblock1`.  \\n  \\n [!code-csharp[System.ReflectionWinStoreApp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflectionwinstoreapp/cs/mainpage.xaml.cs#1)]\\n [!code-vb[System.ReflectionWinStoreApp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflectionwinstoreapp/vb/mainpage.xaml.vb#1)]\"\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo> DeclaredProperties { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}\n      description: A collection of the properties defined by the current type.\n  overload: System.Reflection.TypeInfo.DeclaredProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.DeclaringMethod\n  commentId: P:System.Reflection.TypeInfo.DeclaringMethod\n  id: DeclaringMethod\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: DeclaringMethod\n  nameWithType: TypeInfo.DeclaringMethod\n  fullName: TypeInfo.DeclaringMethod\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.MethodBase DeclaringMethod { get; }\n    return:\n      type: System.Reflection.MethodBase\n      description: ''\n  overload: System.Reflection.TypeInfo.DeclaringMethod*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  commentId: M:System.Reflection.TypeInfo.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  id: FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: FindInterfaces(TypeFilter, Object)\n  nameWithType: TypeInfo.FindInterfaces(TypeFilter, Object)\n  fullName: TypeInfo.FindInterfaces(TypeFilter, Object)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] FindInterfaces (System.Reflection.TypeFilter filter, object filterCriteria);\n    parameters:\n    - id: filter\n      type: System.Reflection.TypeFilter\n      description: ''\n    - id: filterCriteria\n      type: System.Object\n      description: ''\n    return:\n      type: System.Type[]\n      description: ''\n  overload: System.Reflection.TypeInfo.FindInterfaces*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  commentId: M:System.Reflection.TypeInfo.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  id: FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  nameWithType: TypeInfo.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  fullName: TypeInfo.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MemberInfo[] FindMembers (System.Reflection.MemberTypes memberType, System.Reflection.BindingFlags bindingAttr, System.Reflection.MemberFilter filter, object filterCriteria);\n    parameters:\n    - id: memberType\n      type: System.Reflection.MemberTypes\n      description: ''\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    - id: filter\n      type: System.Reflection.MemberFilter\n      description: ''\n    - id: filterCriteria\n      type: System.Object\n      description: ''\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.FindMembers*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.FullName\n  commentId: P:System.Reflection.TypeInfo.FullName\n  id: FullName\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: FullName\n  nameWithType: TypeInfo.FullName\n  fullName: TypeInfo.FullName\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract string FullName { get; }\n    return:\n      type: System.String\n      description: ''\n  overload: System.Reflection.TypeInfo.FullName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GenericParameterAttributes\n  commentId: P:System.Reflection.TypeInfo.GenericParameterAttributes\n  id: GenericParameterAttributes\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GenericParameterAttributes\n  nameWithType: TypeInfo.GenericParameterAttributes\n  fullName: TypeInfo.GenericParameterAttributes\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.GenericParameterAttributes GenericParameterAttributes { get; }\n    return:\n      type: System.Reflection.GenericParameterAttributes\n      description: ''\n  overload: System.Reflection.TypeInfo.GenericParameterAttributes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GenericParameterPosition\n  commentId: P:System.Reflection.TypeInfo.GenericParameterPosition\n  id: GenericParameterPosition\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GenericParameterPosition\n  nameWithType: TypeInfo.GenericParameterPosition\n  fullName: TypeInfo.GenericParameterPosition\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract int GenericParameterPosition { get; }\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Reflection.TypeInfo.GenericParameterPosition*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GenericTypeArguments\n  commentId: P:System.Reflection.TypeInfo.GenericTypeArguments\n  id: GenericTypeArguments\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GenericTypeArguments\n  nameWithType: TypeInfo.GenericTypeArguments\n  fullName: TypeInfo.GenericTypeArguments\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Type[] GenericTypeArguments { get; }\n    return:\n      type: System.Type[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GenericTypeArguments*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GenericTypeParameters\n  commentId: P:System.Reflection.TypeInfo.GenericTypeParameters\n  id: GenericTypeParameters\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GenericTypeParameters\n  nameWithType: TypeInfo.GenericTypeParameters\n  fullName: TypeInfo.GenericTypeParameters\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets an array of the generic type parameters of the current instance.\n  syntax:\n    content: public virtual Type[] GenericTypeParameters { get; }\n    return:\n      type: System.Type[]\n      description: An array that contains the current instance's generic type parameters, or an array of <xref href=\"System.Array.Length\"></xref> zero if the current instance has no generic type parameters.\n  overload: System.Reflection.TypeInfo.GenericTypeParameters*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.GetArrayRank\n  commentId: M:System.Reflection.TypeInfo.GetArrayRank\n  id: GetArrayRank\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetArrayRank()\n  nameWithType: TypeInfo.GetArrayRank()\n  fullName: TypeInfo.GetArrayRank()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract int GetArrayRank ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Reflection.TypeInfo.GetArrayRank*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetConstructor(System.Type[])\n  commentId: M:System.Reflection.TypeInfo.GetConstructor(System.Type[])\n  id: GetConstructor(System.Type[])\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetConstructor(Type[])\n  nameWithType: TypeInfo.GetConstructor(Type[])\n  fullName: TypeInfo.GetConstructor(Type[])\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.ConstructorInfo GetConstructor (Type[] types);\n    parameters:\n    - id: types\n      type: System.Type[]\n      description: ''\n    return:\n      type: System.Reflection.ConstructorInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetConstructor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetConstructors\n  commentId: M:System.Reflection.TypeInfo.GetConstructors\n  id: GetConstructors\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetConstructors()\n  nameWithType: TypeInfo.GetConstructors()\n  fullName: TypeInfo.GetConstructors()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.ConstructorInfo[] GetConstructors ();\n    parameters: []\n    return:\n      type: System.Reflection.ConstructorInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetConstructors*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Reflection.TypeInfo.GetConstructors(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetConstructors(System.Reflection.BindingFlags)\n  id: GetConstructors(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetConstructors(BindingFlags)\n  nameWithType: TypeInfo.GetConstructors(BindingFlags)\n  fullName: TypeInfo.GetConstructors(BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.ConstructorInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetConstructors*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n  id: GetDeclaredEvent(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredEvent(String)\n  nameWithType: TypeInfo.GetDeclaredEvent(String)\n  fullName: TypeInfo.GetDeclaredEvent(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns an object that represents the specified public event declared by the current type.\n  syntax:\n    content: public virtual System.Reflection.EventInfo GetDeclaredEvent (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the event.\n    return:\n      type: System.Reflection.EventInfo\n      description: An object that represents the specified event, if found; otherwise, `null`.\n  overload: System.Reflection.TypeInfo.GetDeclaredEvent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredField(System.String)\n  id: GetDeclaredField(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredField(String)\n  nameWithType: TypeInfo.GetDeclaredField(String)\n  fullName: TypeInfo.GetDeclaredField(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns an object that represents the specified public field declared by the current type.\n  syntax:\n    content: public virtual System.Reflection.FieldInfo GetDeclaredField (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the field.\n    return:\n      type: System.Reflection.FieldInfo\n      description: An object that represents the specified field, if found; otherwise, `null`.\n  overload: System.Reflection.TypeInfo.GetDeclaredField*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n  id: GetDeclaredMethod(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredMethod(String)\n  nameWithType: TypeInfo.GetDeclaredMethod(String)\n  fullName: TypeInfo.GetDeclaredMethod(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns an object that represents the specified public method declared by the current type.\n  syntax:\n    content: public virtual System.Reflection.MethodInfo GetDeclaredMethod (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the method.\n    return:\n      type: System.Reflection.MethodInfo\n      description: An object that represents the specified method, if found; otherwise, `null`.\n  overload: System.Reflection.TypeInfo.GetDeclaredMethod*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n  id: GetDeclaredMethods(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredMethods(String)\n  nameWithType: TypeInfo.GetDeclaredMethods(String)\n  fullName: TypeInfo.GetDeclaredMethods(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns a collection that contains all public methods declared on the current type that match the specified name.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo> GetDeclaredMethods (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The method name to search for.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo}\n      description: A collection that contains methods that match <code>name</code>.\n  overload: System.Reflection.TypeInfo.GetDeclaredMethods*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n  id: GetDeclaredNestedType(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredNestedType(String)\n  nameWithType: TypeInfo.GetDeclaredNestedType(String)\n  fullName: TypeInfo.GetDeclaredNestedType(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns an object that represents the specified public nested type declared by the current type.\n  syntax:\n    content: public virtual System.Reflection.TypeInfo GetDeclaredNestedType (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the nested type.\n    return:\n      type: System.Reflection.TypeInfo\n      description: An object that represents the specified nested type, if found; otherwise, `null`.\n  overload: System.Reflection.TypeInfo.GetDeclaredNestedType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n  id: GetDeclaredProperty(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDeclaredProperty(String)\n  nameWithType: TypeInfo.GetDeclaredProperty(String)\n  fullName: TypeInfo.GetDeclaredProperty(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns an object that represents the specified public property declared by the current type.\n  syntax:\n    content: public virtual System.Reflection.PropertyInfo GetDeclaredProperty (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the property.\n    return:\n      type: System.Reflection.PropertyInfo\n      description: An object that represents the specified property, if found; otherwise, `null`.\n  overload: System.Reflection.TypeInfo.GetDeclaredProperty*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.GetDefaultMembers\n  commentId: M:System.Reflection.TypeInfo.GetDefaultMembers\n  id: GetDefaultMembers\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetDefaultMembers()\n  nameWithType: TypeInfo.GetDefaultMembers()\n  fullName: TypeInfo.GetDefaultMembers()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MemberInfo[] GetDefaultMembers ();\n    parameters: []\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetDefaultMembers*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetElementType\n  commentId: M:System.Reflection.TypeInfo.GetElementType\n  id: GetElementType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetElementType()\n  nameWithType: TypeInfo.GetElementType()\n  fullName: TypeInfo.GetElementType()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Type GetElementType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.GetElementType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEnumName(System.Object)\n  commentId: M:System.Reflection.TypeInfo.GetEnumName(System.Object)\n  id: GetEnumName(System.Object)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetEnumName(Object)\n  nameWithType: TypeInfo.GetEnumName(Object)\n  fullName: TypeInfo.GetEnumName(Object)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string GetEnumName (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: ''\n    return:\n      type: System.String\n      description: ''\n  overload: System.Reflection.TypeInfo.GetEnumName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEnumNames\n  commentId: M:System.Reflection.TypeInfo.GetEnumNames\n  id: GetEnumNames\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetEnumNames()\n  nameWithType: TypeInfo.GetEnumNames()\n  fullName: TypeInfo.GetEnumNames()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string[] GetEnumNames ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetEnumNames*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEnumUnderlyingType\n  commentId: M:System.Reflection.TypeInfo.GetEnumUnderlyingType\n  id: GetEnumUnderlyingType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetEnumUnderlyingType()\n  nameWithType: TypeInfo.GetEnumUnderlyingType()\n  fullName: TypeInfo.GetEnumUnderlyingType()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type GetEnumUnderlyingType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.GetEnumUnderlyingType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEnumValues\n  commentId: M:System.Reflection.TypeInfo.GetEnumValues\n  id: GetEnumValues\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetEnumValues()\n  nameWithType: TypeInfo.GetEnumValues()\n  fullName: TypeInfo.GetEnumValues()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Array GetEnumValues ();\n    parameters: []\n    return:\n      type: System.Array\n      description: ''\n  overload: System.Reflection.TypeInfo.GetEnumValues*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEvent(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetEvent(System.String)\n  id: GetEvent(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetEvent(String)\n  nameWithType: TypeInfo.GetEvent(String)\n  fullName: TypeInfo.GetEvent(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.EventInfo GetEvent (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    return:\n      type: System.Reflection.EventInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetEvent*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEvent(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetEvent(System.String,System.Reflection.BindingFlags)\n  id: GetEvent(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetEvent(String, BindingFlags)\n  nameWithType: TypeInfo.GetEvent(String, BindingFlags)\n  fullName: TypeInfo.GetEvent(String, BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.EventInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetEvent*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEvents\n  commentId: M:System.Reflection.TypeInfo.GetEvents\n  id: GetEvents\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetEvents()\n  nameWithType: TypeInfo.GetEvents()\n  fullName: TypeInfo.GetEvents()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.EventInfo[] GetEvents ();\n    parameters: []\n    return:\n      type: System.Reflection.EventInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetEvents*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Reflection.TypeInfo.GetEvents(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetEvents(System.Reflection.BindingFlags)\n  id: GetEvents(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetEvents(BindingFlags)\n  nameWithType: TypeInfo.GetEvents(BindingFlags)\n  fullName: TypeInfo.GetEvents(BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.EventInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetEvents*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetField(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetField(System.String)\n  id: GetField(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetField(String)\n  nameWithType: TypeInfo.GetField(String)\n  fullName: TypeInfo.GetField(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.FieldInfo GetField (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    return:\n      type: System.Reflection.FieldInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetField*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetField(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetField(System.String,System.Reflection.BindingFlags)\n  id: GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetField(String, BindingFlags)\n  nameWithType: TypeInfo.GetField(String, BindingFlags)\n  fullName: TypeInfo.GetField(String, BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.FieldInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetField*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetFields\n  commentId: M:System.Reflection.TypeInfo.GetFields\n  id: GetFields\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetFields()\n  nameWithType: TypeInfo.GetFields()\n  fullName: TypeInfo.GetFields()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.FieldInfo[] GetFields ();\n    parameters: []\n    return:\n      type: System.Reflection.FieldInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetFields*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Reflection.TypeInfo.GetFields(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetFields(System.Reflection.BindingFlags)\n  id: GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetFields(BindingFlags)\n  nameWithType: TypeInfo.GetFields(BindingFlags)\n  fullName: TypeInfo.GetFields(BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.FieldInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetFields*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetGenericArguments\n  commentId: M:System.Reflection.TypeInfo.GetGenericArguments\n  id: GetGenericArguments\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetGenericArguments()\n  nameWithType: TypeInfo.GetGenericArguments()\n  fullName: TypeInfo.GetGenericArguments()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] GetGenericArguments ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetGenericArguments*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetGenericParameterConstraints\n  commentId: M:System.Reflection.TypeInfo.GetGenericParameterConstraints\n  id: GetGenericParameterConstraints\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetGenericParameterConstraints()\n  nameWithType: TypeInfo.GetGenericParameterConstraints()\n  fullName: TypeInfo.GetGenericParameterConstraints()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Type[] GetGenericParameterConstraints ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetGenericParameterConstraints*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetGenericTypeDefinition\n  commentId: M:System.Reflection.TypeInfo.GetGenericTypeDefinition\n  id: GetGenericTypeDefinition\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetGenericTypeDefinition()\n  nameWithType: TypeInfo.GetGenericTypeDefinition()\n  fullName: TypeInfo.GetGenericTypeDefinition()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Type GetGenericTypeDefinition ();\n    parameters: []\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.GetGenericTypeDefinition*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetInterface(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetInterface(System.String)\n  id: GetInterface(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetInterface(String)\n  nameWithType: TypeInfo.GetInterface(String)\n  fullName: TypeInfo.GetInterface(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public Type GetInterface (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.GetInterface*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetInterface(System.String,System.Boolean)\n  commentId: M:System.Reflection.TypeInfo.GetInterface(System.String,System.Boolean)\n  id: GetInterface(System.String,System.Boolean)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetInterface(String, Boolean)\n  nameWithType: TypeInfo.GetInterface(String, Boolean)\n  fullName: TypeInfo.GetInterface(String, Boolean)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type GetInterface (string name, bool ignoreCase);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: ignoreCase\n      type: System.Boolean\n      description: ''\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.GetInterface*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetInterfaces\n  commentId: M:System.Reflection.TypeInfo.GetInterfaces\n  id: GetInterfaces\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetInterfaces()\n  nameWithType: TypeInfo.GetInterfaces()\n  fullName: TypeInfo.GetInterfaces()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] GetInterfaces ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetInterfaces*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMember(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetMember(System.String)\n  id: GetMember(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetMember(String)\n  nameWithType: TypeInfo.GetMember(String)\n  fullName: TypeInfo.GetMember(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MemberInfo[] GetMember (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetMember*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.BindingFlags)\n  id: GetMember(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetMember(String, BindingFlags)\n  nameWithType: TypeInfo.GetMember(String, BindingFlags)\n  fullName: TypeInfo.GetMember(String, BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetMember*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetMember(String, MemberTypes, BindingFlags)\n  nameWithType: TypeInfo.GetMember(String, MemberTypes, BindingFlags)\n  fullName: TypeInfo.GetMember(String, MemberTypes, BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: type\n      type: System.Reflection.MemberTypes\n      description: ''\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetMember*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMembers\n  commentId: M:System.Reflection.TypeInfo.GetMembers\n  id: GetMembers\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetMembers()\n  nameWithType: TypeInfo.GetMembers()\n  fullName: TypeInfo.GetMembers()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MemberInfo[] GetMembers ();\n    parameters: []\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetMembers*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Reflection.TypeInfo.GetMembers(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetMembers(System.Reflection.BindingFlags)\n  id: GetMembers(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetMembers(BindingFlags)\n  nameWithType: TypeInfo.GetMembers(BindingFlags)\n  fullName: TypeInfo.GetMembers(BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetMembers*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMethod(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetMethod(System.String)\n  id: GetMethod(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetMethod(String)\n  nameWithType: TypeInfo.GetMethod(String)\n  fullName: TypeInfo.GetMethod(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    return:\n      type: System.Reflection.MethodInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetMethod*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetMethod(System.String,System.Reflection.BindingFlags)\n  id: GetMethod(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetMethod(String, BindingFlags)\n  nameWithType: TypeInfo.GetMethod(String, BindingFlags)\n  fullName: TypeInfo.GetMethod(String, BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.MethodInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetMethod*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Type[])\n  commentId: M:System.Reflection.TypeInfo.GetMethod(System.String,System.Type[])\n  id: GetMethod(System.String,System.Type[])\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetMethod(String, Type[])\n  nameWithType: TypeInfo.GetMethod(String, Type[])\n  fullName: TypeInfo.GetMethod(String, Type[])\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: types\n      type: System.Type[]\n      description: ''\n    return:\n      type: System.Reflection.MethodInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetMethod*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Reflection.TypeInfo.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetMethod(String, Type[], ParameterModifier[])\n  nameWithType: TypeInfo.GetMethod(String, Type[], ParameterModifier[])\n  fullName: TypeInfo.GetMethod(String, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: types\n      type: System.Type[]\n      description: ''\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: ''\n    return:\n      type: System.Reflection.MethodInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetMethod*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMethods\n  commentId: M:System.Reflection.TypeInfo.GetMethods\n  id: GetMethods\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetMethods()\n  nameWithType: TypeInfo.GetMethods()\n  fullName: TypeInfo.GetMethods()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MethodInfo[] GetMethods ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetMethods*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Reflection.TypeInfo.GetMethods(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetMethods(System.Reflection.BindingFlags)\n  id: GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetMethods(BindingFlags)\n  nameWithType: TypeInfo.GetMethods(BindingFlags)\n  fullName: TypeInfo.GetMethods(BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetMethods*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetNestedType(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetNestedType(System.String,System.Reflection.BindingFlags)\n  id: GetNestedType(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetNestedType(String, BindingFlags)\n  nameWithType: TypeInfo.GetNestedType(String, BindingFlags)\n  fullName: TypeInfo.GetNestedType(String, BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.GetNestedType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetNestedType(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetNestedType(System.String)\n  id: GetNestedType(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetNestedType(String)\n  nameWithType: TypeInfo.GetNestedType(String)\n  fullName: TypeInfo.GetNestedType(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public Type GetNestedType (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.GetNestedType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetNestedTypes\n  commentId: M:System.Reflection.TypeInfo.GetNestedTypes\n  id: GetNestedTypes\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetNestedTypes()\n  nameWithType: TypeInfo.GetNestedTypes()\n  fullName: TypeInfo.GetNestedTypes()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public Type[] GetNestedTypes ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetNestedTypes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Reflection.TypeInfo.GetNestedTypes(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetNestedTypes(System.Reflection.BindingFlags)\n  id: GetNestedTypes(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetNestedTypes(BindingFlags)\n  nameWithType: TypeInfo.GetNestedTypes(BindingFlags)\n  fullName: TypeInfo.GetNestedTypes(BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Type[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetNestedTypes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetProperties\n  commentId: M:System.Reflection.TypeInfo.GetProperties\n  id: GetProperties\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetProperties()\n  nameWithType: TypeInfo.GetProperties()\n  fullName: TypeInfo.GetProperties()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.PropertyInfo[] GetProperties ();\n    parameters: []\n    return:\n      type: System.Reflection.PropertyInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Reflection.TypeInfo.GetProperties(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetProperties(System.Reflection.BindingFlags)\n  id: GetProperties(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetProperties(BindingFlags)\n  nameWithType: TypeInfo.GetProperties(BindingFlags)\n  fullName: TypeInfo.GetProperties(BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.PropertyInfo[]\n      description: ''\n  overload: System.Reflection.TypeInfo.GetProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetProperty(System.String)\n  commentId: M:System.Reflection.TypeInfo.GetProperty(System.String)\n  id: GetProperty(System.String)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetProperty(String)\n  nameWithType: TypeInfo.GetProperty(String)\n  fullName: TypeInfo.GetProperty(String)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    return:\n      type: System.Reflection.PropertyInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetProperty*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.TypeInfo.GetProperty(System.String,System.Reflection.BindingFlags)\n  id: GetProperty(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetProperty(String, BindingFlags)\n  nameWithType: TypeInfo.GetProperty(String, BindingFlags)\n  fullName: TypeInfo.GetProperty(String, BindingFlags)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: ''\n    return:\n      type: System.Reflection.PropertyInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetProperty*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type)\n  commentId: M:System.Reflection.TypeInfo.GetProperty(System.String,System.Type)\n  id: GetProperty(System.String,System.Type)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetProperty(String, Type)\n  nameWithType: TypeInfo.GetProperty(String, Type)\n  fullName: TypeInfo.GetProperty(String, Type)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: returnType\n      type: System.Type\n      description: ''\n    return:\n      type: System.Reflection.PropertyInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetProperty*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type[])\n  commentId: M:System.Reflection.TypeInfo.GetProperty(System.String,System.Type[])\n  id: GetProperty(System.String,System.Type[])\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetProperty(String, Type[])\n  nameWithType: TypeInfo.GetProperty(String, Type[])\n  fullName: TypeInfo.GetProperty(String, Type[])\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, Type[] types);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: types\n      type: System.Type[]\n      description: ''\n    return:\n      type: System.Reflection.PropertyInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetProperty*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[])\n  commentId: M:System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[])\n  id: GetProperty(System.String,System.Type,System.Type[])\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetProperty(String, Type, Type[])\n  nameWithType: TypeInfo.GetProperty(String, Type, Type[])\n  fullName: TypeInfo.GetProperty(String, Type, Type[])\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: returnType\n      type: System.Type\n      description: ''\n    - id: types\n      type: System.Type[]\n      description: ''\n    return:\n      type: System.Reflection.PropertyInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetProperty*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GetProperty(String, Type, Type[], ParameterModifier[])\n  nameWithType: TypeInfo.GetProperty(String, Type, Type[], ParameterModifier[])\n  fullName: TypeInfo.GetProperty(String, Type, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: ''\n    - id: returnType\n      type: System.Type\n      description: ''\n    - id: types\n      type: System.Type[]\n      description: ''\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: ''\n    return:\n      type: System.Reflection.PropertyInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.GetProperty*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GUID\n  commentId: P:System.Reflection.TypeInfo.GUID\n  id: GUID\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: GUID\n  nameWithType: TypeInfo.GUID\n  fullName: TypeInfo.GUID\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Guid GUID { get; }\n    return:\n      type: System.Guid\n      description: ''\n  overload: System.Reflection.TypeInfo.GUID*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.HasElementType\n  commentId: P:System.Reflection.TypeInfo.HasElementType\n  id: HasElementType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: HasElementType\n  nameWithType: TypeInfo.HasElementType\n  fullName: TypeInfo.HasElementType\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool HasElementType { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.HasElementType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.ImplementedInterfaces\n  commentId: P:System.Reflection.TypeInfo.ImplementedInterfaces\n  id: ImplementedInterfaces\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: ImplementedInterfaces\n  nameWithType: TypeInfo.ImplementedInterfaces\n  fullName: TypeInfo.ImplementedInterfaces\n  type: Property\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Gets a collection of the interfaces implemented by the current type.\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<Type> ImplementedInterfaces { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: A collection of the interfaces implemented by the current type.\n  overload: System.Reflection.TypeInfo.ImplementedInterfaces*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.IsAbstract\n  commentId: P:System.Reflection.TypeInfo.IsAbstract\n  id: IsAbstract\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsAbstract\n  nameWithType: TypeInfo.IsAbstract\n  fullName: TypeInfo.IsAbstract\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsAbstract { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsAbstract*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsAnsiClass\n  commentId: P:System.Reflection.TypeInfo.IsAnsiClass\n  id: IsAnsiClass\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsAnsiClass\n  nameWithType: TypeInfo.IsAnsiClass\n  fullName: TypeInfo.IsAnsiClass\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsAnsiClass { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsAnsiClass*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsArray\n  commentId: P:System.Reflection.TypeInfo.IsArray\n  id: IsArray\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsArray\n  nameWithType: TypeInfo.IsArray\n  fullName: TypeInfo.IsArray\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsArray { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsArray*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n  commentId: M:System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n  id: IsAssignableFrom(System.Reflection.TypeInfo)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsAssignableFrom(TypeInfo)\n  nameWithType: TypeInfo.IsAssignableFrom(TypeInfo)\n  fullName: TypeInfo.IsAssignableFrom(TypeInfo)\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns a value that indicates whether the specified type can be assigned to the current type.\n  syntax:\n    content: public virtual bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);\n    parameters:\n    - id: typeInfo\n      type: System.Reflection.TypeInfo\n      description: The type to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified type can be assigned to this type; otherwise, `false`.'\n  overload: System.Reflection.TypeInfo.IsAssignableFrom*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Type)\n  commentId: M:System.Reflection.TypeInfo.IsAssignableFrom(System.Type)\n  id: IsAssignableFrom(System.Type)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsAssignableFrom(Type)\n  nameWithType: TypeInfo.IsAssignableFrom(Type)\n  fullName: TypeInfo.IsAssignableFrom(Type)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsAssignableFrom (Type c);\n    parameters:\n    - id: c\n      type: System.Type\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsAssignableFrom*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsAutoClass\n  commentId: P:System.Reflection.TypeInfo.IsAutoClass\n  id: IsAutoClass\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsAutoClass\n  nameWithType: TypeInfo.IsAutoClass\n  fullName: TypeInfo.IsAutoClass\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsAutoClass { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsAutoClass*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsAutoLayout\n  commentId: P:System.Reflection.TypeInfo.IsAutoLayout\n  id: IsAutoLayout\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsAutoLayout\n  nameWithType: TypeInfo.IsAutoLayout\n  fullName: TypeInfo.IsAutoLayout\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsAutoLayout { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsAutoLayout*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsByRef\n  commentId: P:System.Reflection.TypeInfo.IsByRef\n  id: IsByRef\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsByRef\n  nameWithType: TypeInfo.IsByRef\n  fullName: TypeInfo.IsByRef\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsByRef { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsByRef*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsClass\n  commentId: P:System.Reflection.TypeInfo.IsClass\n  id: IsClass\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsClass\n  nameWithType: TypeInfo.IsClass\n  fullName: TypeInfo.IsClass\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsClass { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsClass*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsCOMObject\n  commentId: P:System.Reflection.TypeInfo.IsCOMObject\n  id: IsCOMObject\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsCOMObject\n  nameWithType: TypeInfo.IsCOMObject\n  fullName: TypeInfo.IsCOMObject\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsCOMObject { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsCOMObject*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsEnum\n  commentId: P:System.Reflection.TypeInfo.IsEnum\n  id: IsEnum\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsEnum\n  nameWithType: TypeInfo.IsEnum\n  fullName: TypeInfo.IsEnum\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract bool IsEnum { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsEnum*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsEnumDefined(System.Object)\n  commentId: M:System.Reflection.TypeInfo.IsEnumDefined(System.Object)\n  id: IsEnumDefined(System.Object)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsEnumDefined(Object)\n  nameWithType: TypeInfo.IsEnumDefined(Object)\n  fullName: TypeInfo.IsEnumDefined(Object)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsEnumDefined (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsEnumDefined*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsEquivalentTo(System.Type)\n  commentId: M:System.Reflection.TypeInfo.IsEquivalentTo(System.Type)\n  id: IsEquivalentTo(System.Type)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsEquivalentTo(Type)\n  nameWithType: TypeInfo.IsEquivalentTo(Type)\n  fullName: TypeInfo.IsEquivalentTo(Type)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsEquivalentTo (Type other);\n    parameters:\n    - id: other\n      type: System.Type\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsEquivalentTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsExplicitLayout\n  commentId: P:System.Reflection.TypeInfo.IsExplicitLayout\n  id: IsExplicitLayout\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsExplicitLayout\n  nameWithType: TypeInfo.IsExplicitLayout\n  fullName: TypeInfo.IsExplicitLayout\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsExplicitLayout { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsExplicitLayout*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsGenericParameter\n  commentId: P:System.Reflection.TypeInfo.IsGenericParameter\n  id: IsGenericParameter\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsGenericParameter\n  nameWithType: TypeInfo.IsGenericParameter\n  fullName: TypeInfo.IsGenericParameter\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract bool IsGenericParameter { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsGenericParameter*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsGenericType\n  commentId: P:System.Reflection.TypeInfo.IsGenericType\n  id: IsGenericType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsGenericType\n  nameWithType: TypeInfo.IsGenericType\n  fullName: TypeInfo.IsGenericType\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract bool IsGenericType { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsGenericType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsGenericTypeDefinition\n  commentId: P:System.Reflection.TypeInfo.IsGenericTypeDefinition\n  id: IsGenericTypeDefinition\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsGenericTypeDefinition\n  nameWithType: TypeInfo.IsGenericTypeDefinition\n  fullName: TypeInfo.IsGenericTypeDefinition\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract bool IsGenericTypeDefinition { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsGenericTypeDefinition*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsImport\n  commentId: P:System.Reflection.TypeInfo.IsImport\n  id: IsImport\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsImport\n  nameWithType: TypeInfo.IsImport\n  fullName: TypeInfo.IsImport\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsImport { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsImport*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsInstanceOfType(System.Object)\n  commentId: M:System.Reflection.TypeInfo.IsInstanceOfType(System.Object)\n  id: IsInstanceOfType(System.Object)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsInstanceOfType(Object)\n  nameWithType: TypeInfo.IsInstanceOfType(Object)\n  fullName: TypeInfo.IsInstanceOfType(Object)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsInstanceOfType (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsInstanceOfType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsInterface\n  commentId: P:System.Reflection.TypeInfo.IsInterface\n  id: IsInterface\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsInterface\n  nameWithType: TypeInfo.IsInterface\n  fullName: TypeInfo.IsInterface\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsInterface { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsInterface*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsLayoutSequential\n  commentId: P:System.Reflection.TypeInfo.IsLayoutSequential\n  id: IsLayoutSequential\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsLayoutSequential\n  nameWithType: TypeInfo.IsLayoutSequential\n  fullName: TypeInfo.IsLayoutSequential\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsLayoutSequential { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsLayoutSequential*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsMarshalByRef\n  commentId: P:System.Reflection.TypeInfo.IsMarshalByRef\n  id: IsMarshalByRef\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsMarshalByRef\n  nameWithType: TypeInfo.IsMarshalByRef\n  fullName: TypeInfo.IsMarshalByRef\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsMarshalByRef { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsMarshalByRef*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNested\n  commentId: P:System.Reflection.TypeInfo.IsNested\n  id: IsNested\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsNested\n  nameWithType: TypeInfo.IsNested\n  fullName: TypeInfo.IsNested\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsNested { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsNested*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedAssembly\n  commentId: P:System.Reflection.TypeInfo.IsNestedAssembly\n  id: IsNestedAssembly\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsNestedAssembly\n  nameWithType: TypeInfo.IsNestedAssembly\n  fullName: TypeInfo.IsNestedAssembly\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsNestedAssembly { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsNestedAssembly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedFamANDAssem\n  commentId: P:System.Reflection.TypeInfo.IsNestedFamANDAssem\n  id: IsNestedFamANDAssem\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsNestedFamANDAssem\n  nameWithType: TypeInfo.IsNestedFamANDAssem\n  fullName: TypeInfo.IsNestedFamANDAssem\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsNestedFamANDAssem { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsNestedFamANDAssem*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedFamily\n  commentId: P:System.Reflection.TypeInfo.IsNestedFamily\n  id: IsNestedFamily\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsNestedFamily\n  nameWithType: TypeInfo.IsNestedFamily\n  fullName: TypeInfo.IsNestedFamily\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsNestedFamily { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsNestedFamily*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedFamORAssem\n  commentId: P:System.Reflection.TypeInfo.IsNestedFamORAssem\n  id: IsNestedFamORAssem\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsNestedFamORAssem\n  nameWithType: TypeInfo.IsNestedFamORAssem\n  fullName: TypeInfo.IsNestedFamORAssem\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsNestedFamORAssem { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsNestedFamORAssem*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedPrivate\n  commentId: P:System.Reflection.TypeInfo.IsNestedPrivate\n  id: IsNestedPrivate\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsNestedPrivate\n  nameWithType: TypeInfo.IsNestedPrivate\n  fullName: TypeInfo.IsNestedPrivate\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsNestedPrivate { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsNestedPrivate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedPublic\n  commentId: P:System.Reflection.TypeInfo.IsNestedPublic\n  id: IsNestedPublic\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsNestedPublic\n  nameWithType: TypeInfo.IsNestedPublic\n  fullName: TypeInfo.IsNestedPublic\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsNestedPublic { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsNestedPublic*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNotPublic\n  commentId: P:System.Reflection.TypeInfo.IsNotPublic\n  id: IsNotPublic\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsNotPublic\n  nameWithType: TypeInfo.IsNotPublic\n  fullName: TypeInfo.IsNotPublic\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsNotPublic { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsNotPublic*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsPointer\n  commentId: P:System.Reflection.TypeInfo.IsPointer\n  id: IsPointer\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsPointer\n  nameWithType: TypeInfo.IsPointer\n  fullName: TypeInfo.IsPointer\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsPointer { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsPointer*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsPrimitive\n  commentId: P:System.Reflection.TypeInfo.IsPrimitive\n  id: IsPrimitive\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsPrimitive\n  nameWithType: TypeInfo.IsPrimitive\n  fullName: TypeInfo.IsPrimitive\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsPrimitive { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsPrimitive*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsPublic\n  commentId: P:System.Reflection.TypeInfo.IsPublic\n  id: IsPublic\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsPublic\n  nameWithType: TypeInfo.IsPublic\n  fullName: TypeInfo.IsPublic\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsPublic { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsPublic*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsSealed\n  commentId: P:System.Reflection.TypeInfo.IsSealed\n  id: IsSealed\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsSealed\n  nameWithType: TypeInfo.IsSealed\n  fullName: TypeInfo.IsSealed\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsSealed { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsSealed*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsSerializable\n  commentId: P:System.Reflection.TypeInfo.IsSerializable\n  id: IsSerializable\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsSerializable\n  nameWithType: TypeInfo.IsSerializable\n  fullName: TypeInfo.IsSerializable\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract bool IsSerializable { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsSerializable*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsSpecialName\n  commentId: P:System.Reflection.TypeInfo.IsSpecialName\n  id: IsSpecialName\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsSpecialName\n  nameWithType: TypeInfo.IsSpecialName\n  fullName: TypeInfo.IsSpecialName\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsSpecialName { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsSpecialName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsSubclassOf(System.Type)\n  commentId: M:System.Reflection.TypeInfo.IsSubclassOf(System.Type)\n  id: IsSubclassOf(System.Type)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsSubclassOf(Type)\n  nameWithType: TypeInfo.IsSubclassOf(Type)\n  fullName: TypeInfo.IsSubclassOf(Type)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsSubclassOf (Type c);\n    parameters:\n    - id: c\n      type: System.Type\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsSubclassOf*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsUnicodeClass\n  commentId: P:System.Reflection.TypeInfo.IsUnicodeClass\n  id: IsUnicodeClass\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsUnicodeClass\n  nameWithType: TypeInfo.IsUnicodeClass\n  fullName: TypeInfo.IsUnicodeClass\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsUnicodeClass { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsUnicodeClass*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsValueType\n  commentId: P:System.Reflection.TypeInfo.IsValueType\n  id: IsValueType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsValueType\n  nameWithType: TypeInfo.IsValueType\n  fullName: TypeInfo.IsValueType\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsValueType { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsValueType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsVisible\n  commentId: P:System.Reflection.TypeInfo.IsVisible\n  id: IsVisible\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IsVisible\n  nameWithType: TypeInfo.IsVisible\n  fullName: TypeInfo.IsVisible\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsVisible { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Reflection.TypeInfo.IsVisible*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.MakeArrayType\n  commentId: M:System.Reflection.TypeInfo.MakeArrayType\n  id: MakeArrayType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: MakeArrayType()\n  nameWithType: TypeInfo.MakeArrayType()\n  fullName: TypeInfo.MakeArrayType()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Type MakeArrayType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.MakeArrayType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Reflection.TypeInfo.MakeArrayType(System.Int32)\n  commentId: M:System.Reflection.TypeInfo.MakeArrayType(System.Int32)\n  id: MakeArrayType(System.Int32)\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: MakeArrayType(Int32)\n  nameWithType: TypeInfo.MakeArrayType(Int32)\n  fullName: TypeInfo.MakeArrayType(Int32)\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Type MakeArrayType (int rank);\n    parameters:\n    - id: rank\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.MakeArrayType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.MakeByRefType\n  commentId: M:System.Reflection.TypeInfo.MakeByRefType\n  id: MakeByRefType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: MakeByRefType()\n  nameWithType: TypeInfo.MakeByRefType()\n  fullName: TypeInfo.MakeByRefType()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Type MakeByRefType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.MakeByRefType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.MakeGenericType(System.Type[])\n  commentId: M:System.Reflection.TypeInfo.MakeGenericType(System.Type[])\n  id: MakeGenericType(System.Type[])\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: MakeGenericType(Type[])\n  nameWithType: TypeInfo.MakeGenericType(Type[])\n  fullName: TypeInfo.MakeGenericType(Type[])\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Type MakeGenericType (Type[] typeArguments);\n    parameters:\n    - id: typeArguments\n      type: System.Type[]\n      description: ''\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.MakeGenericType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.MakePointerType\n  commentId: M:System.Reflection.TypeInfo.MakePointerType\n  id: MakePointerType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: MakePointerType()\n  nameWithType: TypeInfo.MakePointerType()\n  fullName: TypeInfo.MakePointerType()\n  type: Method\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract Type MakePointerType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.MakePointerType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.MemberType\n  commentId: P:System.Reflection.TypeInfo.MemberType\n  id: MemberType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: MemberType\n  nameWithType: TypeInfo.MemberType\n  fullName: TypeInfo.MemberType\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.MemberTypes MemberType { get; }\n    return:\n      type: System.Reflection.MemberTypes\n      description: ''\n  overload: System.Reflection.TypeInfo.MemberType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.Namespace\n  commentId: P:System.Reflection.TypeInfo.Namespace\n  id: Namespace\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: TypeInfo.Namespace\n  fullName: TypeInfo.Namespace\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public abstract string Namespace { get; }\n    return:\n      type: System.String\n      description: ''\n  overload: System.Reflection.TypeInfo.Namespace*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.StructLayoutAttribute\n  commentId: P:System.Reflection.TypeInfo.StructLayoutAttribute\n  id: StructLayoutAttribute\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: StructLayoutAttribute\n  nameWithType: TypeInfo.StructLayoutAttribute\n  fullName: TypeInfo.StructLayoutAttribute\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Runtime.InteropServices.StructLayoutAttribute StructLayoutAttribute { get; }\n    return:\n      type: System.Runtime.InteropServices.StructLayoutAttribute\n      description: ''\n  overload: System.Reflection.TypeInfo.StructLayoutAttribute*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.TypeInitializer\n  commentId: P:System.Reflection.TypeInfo.TypeInitializer\n  id: TypeInitializer\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: TypeInitializer\n  nameWithType: TypeInfo.TypeInitializer\n  fullName: TypeInfo.TypeInitializer\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.ConstructorInfo TypeInitializer { get; }\n    return:\n      type: System.Reflection.ConstructorInfo\n      description: ''\n  overload: System.Reflection.TypeInfo.TypeInitializer*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.UnderlyingSystemType\n  commentId: P:System.Reflection.TypeInfo.UnderlyingSystemType\n  id: UnderlyingSystemType\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: UnderlyingSystemType\n  nameWithType: TypeInfo.UnderlyingSystemType\n  fullName: TypeInfo.UnderlyingSystemType\n  type: Property\n  assemblies:\n  - System.Reflection\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type UnderlyingSystemType { get; }\n    return:\n      type: System.Type\n      description: ''\n  overload: System.Reflection.TypeInfo.UnderlyingSystemType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n  commentId: M:System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n  id: System#Reflection#IReflectableType#GetTypeInfo\n  isEii: true\n  parent: System.Reflection.TypeInfo\n  langs:\n  - csharp\n  name: IReflectableType.GetTypeInfo()\n  nameWithType: TypeInfo.IReflectableType.GetTypeInfo()\n  fullName: TypeInfo.IReflectableType.GetTypeInfo()\n  type: Method\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns a representation of the current type as a <xref href=\"System.Reflection.TypeInfo\"></xref> object.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.TypeInfo> instance is cast to an <xref:System.Reflection.IReflectableType> interface.\n  syntax:\n    content: System.Reflection.TypeInfo IReflectableType.GetTypeInfo ();\n    parameters: []\n    return:\n      type: System.Reflection.TypeInfo\n      description: A reference to the current type.\n  overload: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Reflection.TypeInfo.Assembly\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: Assembly\n  nameWithType: TypeInfo.Assembly\n  fullName: TypeInfo.Assembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.TypeInfo.AssemblyQualifiedName\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: AssemblyQualifiedName\n  nameWithType: TypeInfo.AssemblyQualifiedName\n  fullName: TypeInfo.AssemblyQualifiedName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.TypeInfo.AsType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: AsType()\n  nameWithType: TypeInfo.AsType()\n  fullName: TypeInfo.AsType()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.TypeInfo.Attributes\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: TypeInfo.Attributes\n  fullName: TypeInfo.Attributes\n- uid: System.Reflection.TypeAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: TypeAttributes\n  nameWithType: TypeAttributes\n  fullName: System.Reflection.TypeAttributes\n- uid: System.Reflection.TypeInfo.BaseType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: BaseType\n  nameWithType: TypeInfo.BaseType\n  fullName: TypeInfo.BaseType\n- uid: System.Reflection.TypeInfo.ContainsGenericParameters\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: ContainsGenericParameters\n  nameWithType: TypeInfo.ContainsGenericParameters\n  fullName: TypeInfo.ContainsGenericParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeInfo.DeclaredConstructors\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredConstructors\n  nameWithType: TypeInfo.DeclaredConstructors\n  fullName: TypeInfo.DeclaredConstructors\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Reflection.ConstructorInfo\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ConstructorInfo>\n  nameWithType: IEnumerable<ConstructorInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.ConstructorInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    nameWithType: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.TypeInfo.DeclaredEvents\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredEvents\n  nameWithType: TypeInfo.DeclaredEvents\n  fullName: TypeInfo.DeclaredEvents\n- uid: System.Reflection.EventInfo\n  name: EventInfo\n  nameWithType: EventInfo\n  fullName: System.Reflection.EventInfo\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.EventInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<EventInfo>\n  nameWithType: IEnumerable<EventInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.EventInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.EventInfo\n    name: EventInfo\n    nameWithType: EventInfo\n    fullName: System.Reflection.EventInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.TypeInfo.DeclaredFields\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredFields\n  nameWithType: TypeInfo.DeclaredFields\n  fullName: TypeInfo.DeclaredFields\n- uid: System.Reflection.FieldInfo\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.FieldInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<FieldInfo>\n  nameWithType: IEnumerable<FieldInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.FieldInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    nameWithType: FieldInfo\n    fullName: System.Reflection.FieldInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.TypeInfo.DeclaredMembers\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredMembers\n  nameWithType: TypeInfo.DeclaredMembers\n  fullName: TypeInfo.DeclaredMembers\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<MemberInfo>\n  nameWithType: IEnumerable<MemberInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    nameWithType: MemberInfo\n    fullName: System.Reflection.MemberInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.TypeInfo.DeclaredMethods\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredMethods\n  nameWithType: TypeInfo.DeclaredMethods\n  fullName: TypeInfo.DeclaredMethods\n- uid: System.Reflection.MethodInfo\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<MethodInfo>\n  nameWithType: IEnumerable<MethodInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.MethodInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    nameWithType: MethodInfo\n    fullName: System.Reflection.MethodInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.TypeInfo.DeclaredNestedTypes\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredNestedTypes\n  nameWithType: TypeInfo.DeclaredNestedTypes\n  fullName: TypeInfo.DeclaredNestedTypes\n- uid: System.Reflection.TypeInfo\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TypeInfo>\n  nameWithType: IEnumerable<TypeInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.TypeInfo\n    name: TypeInfo\n    nameWithType: TypeInfo\n    fullName: System.Reflection.TypeInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.TypeInfo.DeclaredProperties\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredProperties\n  nameWithType: TypeInfo.DeclaredProperties\n  fullName: TypeInfo.DeclaredProperties\n- uid: System.Reflection.PropertyInfo\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<PropertyInfo>\n  nameWithType: IEnumerable<PropertyInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.TypeInfo.DeclaringMethod\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaringMethod\n  nameWithType: TypeInfo.DeclaringMethod\n  fullName: TypeInfo.DeclaringMethod\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Reflection.TypeInfo.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: FindInterfaces(TypeFilter, Object)\n  nameWithType: TypeInfo.FindInterfaces(TypeFilter, Object)\n  fullName: TypeInfo.FindInterfaces(TypeFilter, Object)\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.TypeFilter\n  parent: System.Reflection\n  isExternal: false\n  name: TypeFilter\n  nameWithType: TypeFilter\n  fullName: System.Reflection.TypeFilter\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.TypeInfo.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  nameWithType: TypeInfo.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n  fullName: TypeInfo.FindMembers(MemberTypes, BindingFlags, MemberFilter, Object)\n- uid: System.Reflection.MemberInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo[]\n  nameWithType: MemberInfo[]\n  fullName: System.Reflection.MemberInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MemberInfo\n    name: MemberInfo\n    nameWithType: MemberInfo\n    fullName: System.Reflection.MemberInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.MemberFilter\n  parent: System.Reflection\n  isExternal: false\n  name: MemberFilter\n  nameWithType: MemberFilter\n  fullName: System.Reflection.MemberFilter\n- uid: System.Reflection.TypeInfo.FullName\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: FullName\n  nameWithType: TypeInfo.FullName\n  fullName: TypeInfo.FullName\n- uid: System.Reflection.TypeInfo.GenericParameterAttributes\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GenericParameterAttributes\n  nameWithType: TypeInfo.GenericParameterAttributes\n  fullName: TypeInfo.GenericParameterAttributes\n- uid: System.Reflection.GenericParameterAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: GenericParameterAttributes\n  nameWithType: GenericParameterAttributes\n  fullName: System.Reflection.GenericParameterAttributes\n- uid: System.Reflection.TypeInfo.GenericParameterPosition\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GenericParameterPosition\n  nameWithType: TypeInfo.GenericParameterPosition\n  fullName: TypeInfo.GenericParameterPosition\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.TypeInfo.GenericTypeArguments\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GenericTypeArguments\n  nameWithType: TypeInfo.GenericTypeArguments\n  fullName: TypeInfo.GenericTypeArguments\n- uid: System.Reflection.TypeInfo.GenericTypeParameters\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GenericTypeParameters\n  nameWithType: TypeInfo.GenericTypeParameters\n  fullName: TypeInfo.GenericTypeParameters\n- uid: System.Reflection.TypeInfo.GetArrayRank\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetArrayRank()\n  nameWithType: TypeInfo.GetArrayRank()\n  fullName: TypeInfo.GetArrayRank()\n- uid: System.Reflection.TypeInfo.GetConstructor(System.Type[])\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetConstructor(Type[])\n  nameWithType: TypeInfo.GetConstructor(Type[])\n  fullName: TypeInfo.GetConstructor(Type[])\n- uid: System.Reflection.TypeInfo.GetConstructors\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetConstructors()\n  nameWithType: TypeInfo.GetConstructors()\n  fullName: TypeInfo.GetConstructors()\n- uid: System.Reflection.ConstructorInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo[]\n  nameWithType: ConstructorInfo[]\n  fullName: System.Reflection.ConstructorInfo[]\n  spec.csharp:\n  - uid: System.Reflection.ConstructorInfo\n    name: ConstructorInfo\n    nameWithType: ConstructorInfo\n    fullName: System.Reflection.ConstructorInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.TypeInfo.GetConstructors(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetConstructors(BindingFlags)\n  nameWithType: TypeInfo.GetConstructors(BindingFlags)\n  fullName: TypeInfo.GetConstructors(BindingFlags)\n- uid: System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredEvent(String)\n  nameWithType: TypeInfo.GetDeclaredEvent(String)\n  fullName: TypeInfo.GetDeclaredEvent(String)\n- uid: System.Reflection.TypeInfo.GetDeclaredField(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredField(String)\n  nameWithType: TypeInfo.GetDeclaredField(String)\n  fullName: TypeInfo.GetDeclaredField(String)\n- uid: System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredMethod(String)\n  nameWithType: TypeInfo.GetDeclaredMethod(String)\n  fullName: TypeInfo.GetDeclaredMethod(String)\n- uid: System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredMethods(String)\n  nameWithType: TypeInfo.GetDeclaredMethods(String)\n  fullName: TypeInfo.GetDeclaredMethods(String)\n- uid: System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredNestedType(String)\n  nameWithType: TypeInfo.GetDeclaredNestedType(String)\n  fullName: TypeInfo.GetDeclaredNestedType(String)\n- uid: System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredProperty(String)\n  nameWithType: TypeInfo.GetDeclaredProperty(String)\n  fullName: TypeInfo.GetDeclaredProperty(String)\n- uid: System.Reflection.TypeInfo.GetDefaultMembers\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDefaultMembers()\n  nameWithType: TypeInfo.GetDefaultMembers()\n  fullName: TypeInfo.GetDefaultMembers()\n- uid: System.Reflection.TypeInfo.GetElementType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetElementType()\n  nameWithType: TypeInfo.GetElementType()\n  fullName: TypeInfo.GetElementType()\n- uid: System.Reflection.TypeInfo.GetEnumName(System.Object)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEnumName(Object)\n  nameWithType: TypeInfo.GetEnumName(Object)\n  fullName: TypeInfo.GetEnumName(Object)\n- uid: System.Reflection.TypeInfo.GetEnumNames\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEnumNames()\n  nameWithType: TypeInfo.GetEnumNames()\n  fullName: TypeInfo.GetEnumNames()\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.TypeInfo.GetEnumUnderlyingType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEnumUnderlyingType()\n  nameWithType: TypeInfo.GetEnumUnderlyingType()\n  fullName: TypeInfo.GetEnumUnderlyingType()\n- uid: System.Reflection.TypeInfo.GetEnumValues\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEnumValues()\n  nameWithType: TypeInfo.GetEnumValues()\n  fullName: TypeInfo.GetEnumValues()\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Reflection.TypeInfo.GetEvent(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEvent(String)\n  nameWithType: TypeInfo.GetEvent(String)\n  fullName: TypeInfo.GetEvent(String)\n- uid: System.Reflection.TypeInfo.GetEvent(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEvent(String, BindingFlags)\n  nameWithType: TypeInfo.GetEvent(String, BindingFlags)\n  fullName: TypeInfo.GetEvent(String, BindingFlags)\n- uid: System.Reflection.TypeInfo.GetEvents\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEvents()\n  nameWithType: TypeInfo.GetEvents()\n  fullName: TypeInfo.GetEvents()\n- uid: System.Reflection.EventInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: EventInfo[]\n  nameWithType: EventInfo[]\n  fullName: System.Reflection.EventInfo[]\n  spec.csharp:\n  - uid: System.Reflection.EventInfo\n    name: EventInfo\n    nameWithType: EventInfo\n    fullName: System.Reflection.EventInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.TypeInfo.GetEvents(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEvents(BindingFlags)\n  nameWithType: TypeInfo.GetEvents(BindingFlags)\n  fullName: TypeInfo.GetEvents(BindingFlags)\n- uid: System.Reflection.TypeInfo.GetField(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetField(String)\n  nameWithType: TypeInfo.GetField(String)\n  fullName: TypeInfo.GetField(String)\n- uid: System.Reflection.TypeInfo.GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetField(String, BindingFlags)\n  nameWithType: TypeInfo.GetField(String, BindingFlags)\n  fullName: TypeInfo.GetField(String, BindingFlags)\n- uid: System.Reflection.TypeInfo.GetFields\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetFields()\n  nameWithType: TypeInfo.GetFields()\n  fullName: TypeInfo.GetFields()\n- uid: System.Reflection.FieldInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo[]\n  nameWithType: FieldInfo[]\n  fullName: System.Reflection.FieldInfo[]\n  spec.csharp:\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    nameWithType: FieldInfo\n    fullName: System.Reflection.FieldInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.TypeInfo.GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetFields(BindingFlags)\n  nameWithType: TypeInfo.GetFields(BindingFlags)\n  fullName: TypeInfo.GetFields(BindingFlags)\n- uid: System.Reflection.TypeInfo.GetGenericArguments\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetGenericArguments()\n  nameWithType: TypeInfo.GetGenericArguments()\n  fullName: TypeInfo.GetGenericArguments()\n- uid: System.Reflection.TypeInfo.GetGenericParameterConstraints\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetGenericParameterConstraints()\n  nameWithType: TypeInfo.GetGenericParameterConstraints()\n  fullName: TypeInfo.GetGenericParameterConstraints()\n- uid: System.Reflection.TypeInfo.GetGenericTypeDefinition\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetGenericTypeDefinition()\n  nameWithType: TypeInfo.GetGenericTypeDefinition()\n  fullName: TypeInfo.GetGenericTypeDefinition()\n- uid: System.Reflection.TypeInfo.GetInterface(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetInterface(String)\n  nameWithType: TypeInfo.GetInterface(String)\n  fullName: TypeInfo.GetInterface(String)\n- uid: System.Reflection.TypeInfo.GetInterface(System.String,System.Boolean)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetInterface(String, Boolean)\n  nameWithType: TypeInfo.GetInterface(String, Boolean)\n  fullName: TypeInfo.GetInterface(String, Boolean)\n- uid: System.Reflection.TypeInfo.GetInterfaces\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetInterfaces()\n  nameWithType: TypeInfo.GetInterfaces()\n  fullName: TypeInfo.GetInterfaces()\n- uid: System.Reflection.TypeInfo.GetMember(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMember(String)\n  nameWithType: TypeInfo.GetMember(String)\n  fullName: TypeInfo.GetMember(String)\n- uid: System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMember(String, BindingFlags)\n  nameWithType: TypeInfo.GetMember(String, BindingFlags)\n  fullName: TypeInfo.GetMember(String, BindingFlags)\n- uid: System.Reflection.TypeInfo.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMember(String, MemberTypes, BindingFlags)\n  nameWithType: TypeInfo.GetMember(String, MemberTypes, BindingFlags)\n  fullName: TypeInfo.GetMember(String, MemberTypes, BindingFlags)\n- uid: System.Reflection.TypeInfo.GetMembers\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMembers()\n  nameWithType: TypeInfo.GetMembers()\n  fullName: TypeInfo.GetMembers()\n- uid: System.Reflection.TypeInfo.GetMembers(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMembers(BindingFlags)\n  nameWithType: TypeInfo.GetMembers(BindingFlags)\n  fullName: TypeInfo.GetMembers(BindingFlags)\n- uid: System.Reflection.TypeInfo.GetMethod(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMethod(String)\n  nameWithType: TypeInfo.GetMethod(String)\n  fullName: TypeInfo.GetMethod(String)\n- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMethod(String, BindingFlags)\n  nameWithType: TypeInfo.GetMethod(String, BindingFlags)\n  fullName: TypeInfo.GetMethod(String, BindingFlags)\n- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Type[])\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMethod(String, Type[])\n  nameWithType: TypeInfo.GetMethod(String, Type[])\n  fullName: TypeInfo.GetMethod(String, Type[])\n- uid: System.Reflection.TypeInfo.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMethod(String, Type[], ParameterModifier[])\n  nameWithType: TypeInfo.GetMethod(String, Type[], ParameterModifier[])\n  fullName: TypeInfo.GetMethod(String, Type[], ParameterModifier[])\n- uid: System.Reflection.ParameterModifier\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier\n- uid: System.Reflection.ParameterModifier[]\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier[]\n  nameWithType: ParameterModifier[]\n  fullName: System.Reflection.ParameterModifier[]\n  spec.csharp:\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    nameWithType: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.TypeInfo.GetMethods\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMethods()\n  nameWithType: TypeInfo.GetMethods()\n  fullName: TypeInfo.GetMethods()\n- uid: System.Reflection.MethodInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo[]\n  nameWithType: MethodInfo[]\n  fullName: System.Reflection.MethodInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    nameWithType: MethodInfo\n    fullName: System.Reflection.MethodInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.TypeInfo.GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMethods(BindingFlags)\n  nameWithType: TypeInfo.GetMethods(BindingFlags)\n  fullName: TypeInfo.GetMethods(BindingFlags)\n- uid: System.Reflection.TypeInfo.GetNestedType(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetNestedType(String, BindingFlags)\n  nameWithType: TypeInfo.GetNestedType(String, BindingFlags)\n  fullName: TypeInfo.GetNestedType(String, BindingFlags)\n- uid: System.Reflection.TypeInfo.GetNestedType(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetNestedType(String)\n  nameWithType: TypeInfo.GetNestedType(String)\n  fullName: TypeInfo.GetNestedType(String)\n- uid: System.Reflection.TypeInfo.GetNestedTypes\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetNestedTypes()\n  nameWithType: TypeInfo.GetNestedTypes()\n  fullName: TypeInfo.GetNestedTypes()\n- uid: System.Reflection.TypeInfo.GetNestedTypes(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetNestedTypes(BindingFlags)\n  nameWithType: TypeInfo.GetNestedTypes(BindingFlags)\n  fullName: TypeInfo.GetNestedTypes(BindingFlags)\n- uid: System.Reflection.TypeInfo.GetProperties\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetProperties()\n  nameWithType: TypeInfo.GetProperties()\n  fullName: TypeInfo.GetProperties()\n- uid: System.Reflection.PropertyInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyInfo[]\n  nameWithType: PropertyInfo[]\n  fullName: System.Reflection.PropertyInfo[]\n  spec.csharp:\n  - uid: System.Reflection.PropertyInfo\n    name: PropertyInfo\n    nameWithType: PropertyInfo\n    fullName: System.Reflection.PropertyInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.TypeInfo.GetProperties(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetProperties(BindingFlags)\n  nameWithType: TypeInfo.GetProperties(BindingFlags)\n  fullName: TypeInfo.GetProperties(BindingFlags)\n- uid: System.Reflection.TypeInfo.GetProperty(System.String)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetProperty(String)\n  nameWithType: TypeInfo.GetProperty(String)\n  fullName: TypeInfo.GetProperty(String)\n- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetProperty(String, BindingFlags)\n  nameWithType: TypeInfo.GetProperty(String, BindingFlags)\n  fullName: TypeInfo.GetProperty(String, BindingFlags)\n- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetProperty(String, Type)\n  nameWithType: TypeInfo.GetProperty(String, Type)\n  fullName: TypeInfo.GetProperty(String, Type)\n- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type[])\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetProperty(String, Type[])\n  nameWithType: TypeInfo.GetProperty(String, Type[])\n  fullName: TypeInfo.GetProperty(String, Type[])\n- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[])\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetProperty(String, Type, Type[])\n  nameWithType: TypeInfo.GetProperty(String, Type, Type[])\n  fullName: TypeInfo.GetProperty(String, Type, Type[])\n- uid: System.Reflection.TypeInfo.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetProperty(String, Type, Type[], ParameterModifier[])\n  nameWithType: TypeInfo.GetProperty(String, Type, Type[], ParameterModifier[])\n  fullName: TypeInfo.GetProperty(String, Type, Type[], ParameterModifier[])\n- uid: System.Reflection.TypeInfo.GUID\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GUID\n  nameWithType: TypeInfo.GUID\n  fullName: TypeInfo.GUID\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Reflection.TypeInfo.HasElementType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: HasElementType\n  nameWithType: TypeInfo.HasElementType\n  fullName: TypeInfo.HasElementType\n- uid: System.Reflection.TypeInfo.ImplementedInterfaces\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: ImplementedInterfaces\n  nameWithType: TypeInfo.ImplementedInterfaces\n  fullName: TypeInfo.ImplementedInterfaces\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Type>\n  nameWithType: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.TypeInfo.IsAbstract\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAbstract\n  nameWithType: TypeInfo.IsAbstract\n  fullName: TypeInfo.IsAbstract\n- uid: System.Reflection.TypeInfo.IsAnsiClass\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAnsiClass\n  nameWithType: TypeInfo.IsAnsiClass\n  fullName: TypeInfo.IsAnsiClass\n- uid: System.Reflection.TypeInfo.IsArray\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsArray\n  nameWithType: TypeInfo.IsArray\n  fullName: TypeInfo.IsArray\n- uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAssignableFrom(TypeInfo)\n  nameWithType: TypeInfo.IsAssignableFrom(TypeInfo)\n  fullName: TypeInfo.IsAssignableFrom(TypeInfo)\n- uid: System.Reflection.TypeInfo.IsAssignableFrom(System.Type)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAssignableFrom(Type)\n  nameWithType: TypeInfo.IsAssignableFrom(Type)\n  fullName: TypeInfo.IsAssignableFrom(Type)\n- uid: System.Reflection.TypeInfo.IsAutoClass\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAutoClass\n  nameWithType: TypeInfo.IsAutoClass\n  fullName: TypeInfo.IsAutoClass\n- uid: System.Reflection.TypeInfo.IsAutoLayout\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAutoLayout\n  nameWithType: TypeInfo.IsAutoLayout\n  fullName: TypeInfo.IsAutoLayout\n- uid: System.Reflection.TypeInfo.IsByRef\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsByRef\n  nameWithType: TypeInfo.IsByRef\n  fullName: TypeInfo.IsByRef\n- uid: System.Reflection.TypeInfo.IsClass\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsClass\n  nameWithType: TypeInfo.IsClass\n  fullName: TypeInfo.IsClass\n- uid: System.Reflection.TypeInfo.IsCOMObject\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsCOMObject\n  nameWithType: TypeInfo.IsCOMObject\n  fullName: TypeInfo.IsCOMObject\n- uid: System.Reflection.TypeInfo.IsEnum\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsEnum\n  nameWithType: TypeInfo.IsEnum\n  fullName: TypeInfo.IsEnum\n- uid: System.Reflection.TypeInfo.IsEnumDefined(System.Object)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsEnumDefined(Object)\n  nameWithType: TypeInfo.IsEnumDefined(Object)\n  fullName: TypeInfo.IsEnumDefined(Object)\n- uid: System.Reflection.TypeInfo.IsEquivalentTo(System.Type)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsEquivalentTo(Type)\n  nameWithType: TypeInfo.IsEquivalentTo(Type)\n  fullName: TypeInfo.IsEquivalentTo(Type)\n- uid: System.Reflection.TypeInfo.IsExplicitLayout\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsExplicitLayout\n  nameWithType: TypeInfo.IsExplicitLayout\n  fullName: TypeInfo.IsExplicitLayout\n- uid: System.Reflection.TypeInfo.IsGenericParameter\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsGenericParameter\n  nameWithType: TypeInfo.IsGenericParameter\n  fullName: TypeInfo.IsGenericParameter\n- uid: System.Reflection.TypeInfo.IsGenericType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsGenericType\n  nameWithType: TypeInfo.IsGenericType\n  fullName: TypeInfo.IsGenericType\n- uid: System.Reflection.TypeInfo.IsGenericTypeDefinition\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsGenericTypeDefinition\n  nameWithType: TypeInfo.IsGenericTypeDefinition\n  fullName: TypeInfo.IsGenericTypeDefinition\n- uid: System.Reflection.TypeInfo.IsImport\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsImport\n  nameWithType: TypeInfo.IsImport\n  fullName: TypeInfo.IsImport\n- uid: System.Reflection.TypeInfo.IsInstanceOfType(System.Object)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsInstanceOfType(Object)\n  nameWithType: TypeInfo.IsInstanceOfType(Object)\n  fullName: TypeInfo.IsInstanceOfType(Object)\n- uid: System.Reflection.TypeInfo.IsInterface\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsInterface\n  nameWithType: TypeInfo.IsInterface\n  fullName: TypeInfo.IsInterface\n- uid: System.Reflection.TypeInfo.IsLayoutSequential\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsLayoutSequential\n  nameWithType: TypeInfo.IsLayoutSequential\n  fullName: TypeInfo.IsLayoutSequential\n- uid: System.Reflection.TypeInfo.IsMarshalByRef\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsMarshalByRef\n  nameWithType: TypeInfo.IsMarshalByRef\n  fullName: TypeInfo.IsMarshalByRef\n- uid: System.Reflection.TypeInfo.IsNested\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNested\n  nameWithType: TypeInfo.IsNested\n  fullName: TypeInfo.IsNested\n- uid: System.Reflection.TypeInfo.IsNestedAssembly\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedAssembly\n  nameWithType: TypeInfo.IsNestedAssembly\n  fullName: TypeInfo.IsNestedAssembly\n- uid: System.Reflection.TypeInfo.IsNestedFamANDAssem\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedFamANDAssem\n  nameWithType: TypeInfo.IsNestedFamANDAssem\n  fullName: TypeInfo.IsNestedFamANDAssem\n- uid: System.Reflection.TypeInfo.IsNestedFamily\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedFamily\n  nameWithType: TypeInfo.IsNestedFamily\n  fullName: TypeInfo.IsNestedFamily\n- uid: System.Reflection.TypeInfo.IsNestedFamORAssem\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedFamORAssem\n  nameWithType: TypeInfo.IsNestedFamORAssem\n  fullName: TypeInfo.IsNestedFamORAssem\n- uid: System.Reflection.TypeInfo.IsNestedPrivate\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedPrivate\n  nameWithType: TypeInfo.IsNestedPrivate\n  fullName: TypeInfo.IsNestedPrivate\n- uid: System.Reflection.TypeInfo.IsNestedPublic\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedPublic\n  nameWithType: TypeInfo.IsNestedPublic\n  fullName: TypeInfo.IsNestedPublic\n- uid: System.Reflection.TypeInfo.IsNotPublic\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNotPublic\n  nameWithType: TypeInfo.IsNotPublic\n  fullName: TypeInfo.IsNotPublic\n- uid: System.Reflection.TypeInfo.IsPointer\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsPointer\n  nameWithType: TypeInfo.IsPointer\n  fullName: TypeInfo.IsPointer\n- uid: System.Reflection.TypeInfo.IsPrimitive\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsPrimitive\n  nameWithType: TypeInfo.IsPrimitive\n  fullName: TypeInfo.IsPrimitive\n- uid: System.Reflection.TypeInfo.IsPublic\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsPublic\n  nameWithType: TypeInfo.IsPublic\n  fullName: TypeInfo.IsPublic\n- uid: System.Reflection.TypeInfo.IsSealed\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsSealed\n  nameWithType: TypeInfo.IsSealed\n  fullName: TypeInfo.IsSealed\n- uid: System.Reflection.TypeInfo.IsSerializable\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsSerializable\n  nameWithType: TypeInfo.IsSerializable\n  fullName: TypeInfo.IsSerializable\n- uid: System.Reflection.TypeInfo.IsSpecialName\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: TypeInfo.IsSpecialName\n  fullName: TypeInfo.IsSpecialName\n- uid: System.Reflection.TypeInfo.IsSubclassOf(System.Type)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsSubclassOf(Type)\n  nameWithType: TypeInfo.IsSubclassOf(Type)\n  fullName: TypeInfo.IsSubclassOf(Type)\n- uid: System.Reflection.TypeInfo.IsUnicodeClass\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsUnicodeClass\n  nameWithType: TypeInfo.IsUnicodeClass\n  fullName: TypeInfo.IsUnicodeClass\n- uid: System.Reflection.TypeInfo.IsValueType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsValueType\n  nameWithType: TypeInfo.IsValueType\n  fullName: TypeInfo.IsValueType\n- uid: System.Reflection.TypeInfo.IsVisible\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsVisible\n  nameWithType: TypeInfo.IsVisible\n  fullName: TypeInfo.IsVisible\n- uid: System.Reflection.TypeInfo.MakeArrayType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: MakeArrayType()\n  nameWithType: TypeInfo.MakeArrayType()\n  fullName: TypeInfo.MakeArrayType()\n- uid: System.Reflection.TypeInfo.MakeArrayType(System.Int32)\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: MakeArrayType(Int32)\n  nameWithType: TypeInfo.MakeArrayType(Int32)\n  fullName: TypeInfo.MakeArrayType(Int32)\n- uid: System.Reflection.TypeInfo.MakeByRefType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: MakeByRefType()\n  nameWithType: TypeInfo.MakeByRefType()\n  fullName: TypeInfo.MakeByRefType()\n- uid: System.Reflection.TypeInfo.MakeGenericType(System.Type[])\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: MakeGenericType(Type[])\n  nameWithType: TypeInfo.MakeGenericType(Type[])\n  fullName: TypeInfo.MakeGenericType(Type[])\n- uid: System.Reflection.TypeInfo.MakePointerType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: MakePointerType()\n  nameWithType: TypeInfo.MakePointerType()\n  fullName: TypeInfo.MakePointerType()\n- uid: System.Reflection.TypeInfo.MemberType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: TypeInfo.MemberType\n  fullName: TypeInfo.MemberType\n- uid: System.Reflection.TypeInfo.Namespace\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: Namespace\n  nameWithType: TypeInfo.Namespace\n  fullName: TypeInfo.Namespace\n- uid: System.Reflection.TypeInfo.StructLayoutAttribute\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: StructLayoutAttribute\n  nameWithType: TypeInfo.StructLayoutAttribute\n  fullName: TypeInfo.StructLayoutAttribute\n- uid: System.Runtime.InteropServices.StructLayoutAttribute\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: StructLayoutAttribute\n  nameWithType: StructLayoutAttribute\n  fullName: System.Runtime.InteropServices.StructLayoutAttribute\n- uid: System.Reflection.TypeInfo.TypeInitializer\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: TypeInitializer\n  nameWithType: TypeInfo.TypeInitializer\n  fullName: TypeInfo.TypeInitializer\n- uid: System.Reflection.TypeInfo.UnderlyingSystemType\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: UnderlyingSystemType\n  nameWithType: TypeInfo.UnderlyingSystemType\n  fullName: TypeInfo.UnderlyingSystemType\n- uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IReflectableType.GetTypeInfo()\n  nameWithType: TypeInfo.IReflectableType.GetTypeInfo()\n  fullName: TypeInfo.IReflectableType.GetTypeInfo()\n- uid: System.Reflection.TypeInfo.Assembly*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: Assembly\n  nameWithType: TypeInfo.Assembly\n  fullName: TypeInfo.Assembly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.AssemblyQualifiedName*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: AssemblyQualifiedName\n  nameWithType: TypeInfo.AssemblyQualifiedName\n  fullName: TypeInfo.AssemblyQualifiedName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.AsType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: AsType\n  nameWithType: TypeInfo.AsType\n  fullName: TypeInfo.AsType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.Attributes*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: Attributes\n  nameWithType: TypeInfo.Attributes\n  fullName: TypeInfo.Attributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.BaseType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: BaseType\n  nameWithType: TypeInfo.BaseType\n  fullName: TypeInfo.BaseType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.ContainsGenericParameters*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: ContainsGenericParameters\n  nameWithType: TypeInfo.ContainsGenericParameters\n  fullName: TypeInfo.ContainsGenericParameters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.DeclaredConstructors*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredConstructors\n  nameWithType: TypeInfo.DeclaredConstructors\n  fullName: TypeInfo.DeclaredConstructors\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.DeclaredEvents*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredEvents\n  nameWithType: TypeInfo.DeclaredEvents\n  fullName: TypeInfo.DeclaredEvents\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.DeclaredFields*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredFields\n  nameWithType: TypeInfo.DeclaredFields\n  fullName: TypeInfo.DeclaredFields\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.DeclaredMembers*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredMembers\n  nameWithType: TypeInfo.DeclaredMembers\n  fullName: TypeInfo.DeclaredMembers\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.DeclaredMethods*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredMethods\n  nameWithType: TypeInfo.DeclaredMethods\n  fullName: TypeInfo.DeclaredMethods\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.DeclaredNestedTypes*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredNestedTypes\n  nameWithType: TypeInfo.DeclaredNestedTypes\n  fullName: TypeInfo.DeclaredNestedTypes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.DeclaredProperties*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaredProperties\n  nameWithType: TypeInfo.DeclaredProperties\n  fullName: TypeInfo.DeclaredProperties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.DeclaringMethod*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: DeclaringMethod\n  nameWithType: TypeInfo.DeclaringMethod\n  fullName: TypeInfo.DeclaringMethod\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.FindInterfaces*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: FindInterfaces\n  nameWithType: TypeInfo.FindInterfaces\n  fullName: TypeInfo.FindInterfaces\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.FindMembers*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: FindMembers\n  nameWithType: TypeInfo.FindMembers\n  fullName: TypeInfo.FindMembers\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.FullName*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: FullName\n  nameWithType: TypeInfo.FullName\n  fullName: TypeInfo.FullName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GenericParameterAttributes*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GenericParameterAttributes\n  nameWithType: TypeInfo.GenericParameterAttributes\n  fullName: TypeInfo.GenericParameterAttributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GenericParameterPosition*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GenericParameterPosition\n  nameWithType: TypeInfo.GenericParameterPosition\n  fullName: TypeInfo.GenericParameterPosition\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GenericTypeArguments*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GenericTypeArguments\n  nameWithType: TypeInfo.GenericTypeArguments\n  fullName: TypeInfo.GenericTypeArguments\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GenericTypeParameters*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GenericTypeParameters\n  nameWithType: TypeInfo.GenericTypeParameters\n  fullName: TypeInfo.GenericTypeParameters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetArrayRank*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetArrayRank\n  nameWithType: TypeInfo.GetArrayRank\n  fullName: TypeInfo.GetArrayRank\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetConstructor*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetConstructor\n  nameWithType: TypeInfo.GetConstructor\n  fullName: TypeInfo.GetConstructor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetConstructors*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetConstructors\n  nameWithType: TypeInfo.GetConstructors\n  fullName: TypeInfo.GetConstructors\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetDeclaredEvent*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredEvent\n  nameWithType: TypeInfo.GetDeclaredEvent\n  fullName: TypeInfo.GetDeclaredEvent\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetDeclaredField*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredField\n  nameWithType: TypeInfo.GetDeclaredField\n  fullName: TypeInfo.GetDeclaredField\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetDeclaredMethod*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredMethod\n  nameWithType: TypeInfo.GetDeclaredMethod\n  fullName: TypeInfo.GetDeclaredMethod\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetDeclaredMethods*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredMethods\n  nameWithType: TypeInfo.GetDeclaredMethods\n  fullName: TypeInfo.GetDeclaredMethods\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetDeclaredNestedType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredNestedType\n  nameWithType: TypeInfo.GetDeclaredNestedType\n  fullName: TypeInfo.GetDeclaredNestedType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetDeclaredProperty*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDeclaredProperty\n  nameWithType: TypeInfo.GetDeclaredProperty\n  fullName: TypeInfo.GetDeclaredProperty\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetDefaultMembers*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetDefaultMembers\n  nameWithType: TypeInfo.GetDefaultMembers\n  fullName: TypeInfo.GetDefaultMembers\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetElementType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetElementType\n  nameWithType: TypeInfo.GetElementType\n  fullName: TypeInfo.GetElementType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEnumName*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEnumName\n  nameWithType: TypeInfo.GetEnumName\n  fullName: TypeInfo.GetEnumName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEnumNames*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEnumNames\n  nameWithType: TypeInfo.GetEnumNames\n  fullName: TypeInfo.GetEnumNames\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEnumUnderlyingType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEnumUnderlyingType\n  nameWithType: TypeInfo.GetEnumUnderlyingType\n  fullName: TypeInfo.GetEnumUnderlyingType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEnumValues*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEnumValues\n  nameWithType: TypeInfo.GetEnumValues\n  fullName: TypeInfo.GetEnumValues\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEvent*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEvent\n  nameWithType: TypeInfo.GetEvent\n  fullName: TypeInfo.GetEvent\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetEvents*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetEvents\n  nameWithType: TypeInfo.GetEvents\n  fullName: TypeInfo.GetEvents\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetField*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetField\n  nameWithType: TypeInfo.GetField\n  fullName: TypeInfo.GetField\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetFields*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetFields\n  nameWithType: TypeInfo.GetFields\n  fullName: TypeInfo.GetFields\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetGenericArguments*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetGenericArguments\n  nameWithType: TypeInfo.GetGenericArguments\n  fullName: TypeInfo.GetGenericArguments\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetGenericParameterConstraints*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetGenericParameterConstraints\n  nameWithType: TypeInfo.GetGenericParameterConstraints\n  fullName: TypeInfo.GetGenericParameterConstraints\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetGenericTypeDefinition*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetGenericTypeDefinition\n  nameWithType: TypeInfo.GetGenericTypeDefinition\n  fullName: TypeInfo.GetGenericTypeDefinition\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetInterface*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetInterface\n  nameWithType: TypeInfo.GetInterface\n  fullName: TypeInfo.GetInterface\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetInterfaces*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetInterfaces\n  nameWithType: TypeInfo.GetInterfaces\n  fullName: TypeInfo.GetInterfaces\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMember*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMember\n  nameWithType: TypeInfo.GetMember\n  fullName: TypeInfo.GetMember\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMembers*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMembers\n  nameWithType: TypeInfo.GetMembers\n  fullName: TypeInfo.GetMembers\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMethod*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMethod\n  nameWithType: TypeInfo.GetMethod\n  fullName: TypeInfo.GetMethod\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetMethods*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetMethods\n  nameWithType: TypeInfo.GetMethods\n  fullName: TypeInfo.GetMethods\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetNestedType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetNestedType\n  nameWithType: TypeInfo.GetNestedType\n  fullName: TypeInfo.GetNestedType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetNestedTypes*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetNestedTypes\n  nameWithType: TypeInfo.GetNestedTypes\n  fullName: TypeInfo.GetNestedTypes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetProperties*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetProperties\n  nameWithType: TypeInfo.GetProperties\n  fullName: TypeInfo.GetProperties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GetProperty*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GetProperty\n  nameWithType: TypeInfo.GetProperty\n  fullName: TypeInfo.GetProperty\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.GUID*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: GUID\n  nameWithType: TypeInfo.GUID\n  fullName: TypeInfo.GUID\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.HasElementType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: HasElementType\n  nameWithType: TypeInfo.HasElementType\n  fullName: TypeInfo.HasElementType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.ImplementedInterfaces*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: ImplementedInterfaces\n  nameWithType: TypeInfo.ImplementedInterfaces\n  fullName: TypeInfo.ImplementedInterfaces\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsAbstract*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAbstract\n  nameWithType: TypeInfo.IsAbstract\n  fullName: TypeInfo.IsAbstract\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsAnsiClass*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAnsiClass\n  nameWithType: TypeInfo.IsAnsiClass\n  fullName: TypeInfo.IsAnsiClass\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsArray*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsArray\n  nameWithType: TypeInfo.IsArray\n  fullName: TypeInfo.IsArray\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsAssignableFrom*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAssignableFrom\n  nameWithType: TypeInfo.IsAssignableFrom\n  fullName: TypeInfo.IsAssignableFrom\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsAutoClass*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAutoClass\n  nameWithType: TypeInfo.IsAutoClass\n  fullName: TypeInfo.IsAutoClass\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsAutoLayout*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsAutoLayout\n  nameWithType: TypeInfo.IsAutoLayout\n  fullName: TypeInfo.IsAutoLayout\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsByRef*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsByRef\n  nameWithType: TypeInfo.IsByRef\n  fullName: TypeInfo.IsByRef\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsClass*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsClass\n  nameWithType: TypeInfo.IsClass\n  fullName: TypeInfo.IsClass\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsCOMObject*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsCOMObject\n  nameWithType: TypeInfo.IsCOMObject\n  fullName: TypeInfo.IsCOMObject\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsEnum*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsEnum\n  nameWithType: TypeInfo.IsEnum\n  fullName: TypeInfo.IsEnum\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsEnumDefined*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsEnumDefined\n  nameWithType: TypeInfo.IsEnumDefined\n  fullName: TypeInfo.IsEnumDefined\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsEquivalentTo*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsEquivalentTo\n  nameWithType: TypeInfo.IsEquivalentTo\n  fullName: TypeInfo.IsEquivalentTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsExplicitLayout*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsExplicitLayout\n  nameWithType: TypeInfo.IsExplicitLayout\n  fullName: TypeInfo.IsExplicitLayout\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsGenericParameter*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsGenericParameter\n  nameWithType: TypeInfo.IsGenericParameter\n  fullName: TypeInfo.IsGenericParameter\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsGenericType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsGenericType\n  nameWithType: TypeInfo.IsGenericType\n  fullName: TypeInfo.IsGenericType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsGenericTypeDefinition*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsGenericTypeDefinition\n  nameWithType: TypeInfo.IsGenericTypeDefinition\n  fullName: TypeInfo.IsGenericTypeDefinition\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsImport*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsImport\n  nameWithType: TypeInfo.IsImport\n  fullName: TypeInfo.IsImport\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsInstanceOfType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsInstanceOfType\n  nameWithType: TypeInfo.IsInstanceOfType\n  fullName: TypeInfo.IsInstanceOfType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsInterface*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsInterface\n  nameWithType: TypeInfo.IsInterface\n  fullName: TypeInfo.IsInterface\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsLayoutSequential*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsLayoutSequential\n  nameWithType: TypeInfo.IsLayoutSequential\n  fullName: TypeInfo.IsLayoutSequential\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsMarshalByRef*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsMarshalByRef\n  nameWithType: TypeInfo.IsMarshalByRef\n  fullName: TypeInfo.IsMarshalByRef\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNested*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNested\n  nameWithType: TypeInfo.IsNested\n  fullName: TypeInfo.IsNested\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedAssembly*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedAssembly\n  nameWithType: TypeInfo.IsNestedAssembly\n  fullName: TypeInfo.IsNestedAssembly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedFamANDAssem*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedFamANDAssem\n  nameWithType: TypeInfo.IsNestedFamANDAssem\n  fullName: TypeInfo.IsNestedFamANDAssem\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedFamily*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedFamily\n  nameWithType: TypeInfo.IsNestedFamily\n  fullName: TypeInfo.IsNestedFamily\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedFamORAssem*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedFamORAssem\n  nameWithType: TypeInfo.IsNestedFamORAssem\n  fullName: TypeInfo.IsNestedFamORAssem\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedPrivate*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedPrivate\n  nameWithType: TypeInfo.IsNestedPrivate\n  fullName: TypeInfo.IsNestedPrivate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNestedPublic*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNestedPublic\n  nameWithType: TypeInfo.IsNestedPublic\n  fullName: TypeInfo.IsNestedPublic\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsNotPublic*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsNotPublic\n  nameWithType: TypeInfo.IsNotPublic\n  fullName: TypeInfo.IsNotPublic\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsPointer*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsPointer\n  nameWithType: TypeInfo.IsPointer\n  fullName: TypeInfo.IsPointer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsPrimitive*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsPrimitive\n  nameWithType: TypeInfo.IsPrimitive\n  fullName: TypeInfo.IsPrimitive\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsPublic*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsPublic\n  nameWithType: TypeInfo.IsPublic\n  fullName: TypeInfo.IsPublic\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsSealed*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsSealed\n  nameWithType: TypeInfo.IsSealed\n  fullName: TypeInfo.IsSealed\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsSerializable*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsSerializable\n  nameWithType: TypeInfo.IsSerializable\n  fullName: TypeInfo.IsSerializable\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsSpecialName*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: TypeInfo.IsSpecialName\n  fullName: TypeInfo.IsSpecialName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsSubclassOf*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsSubclassOf\n  nameWithType: TypeInfo.IsSubclassOf\n  fullName: TypeInfo.IsSubclassOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsUnicodeClass*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsUnicodeClass\n  nameWithType: TypeInfo.IsUnicodeClass\n  fullName: TypeInfo.IsUnicodeClass\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsValueType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsValueType\n  nameWithType: TypeInfo.IsValueType\n  fullName: TypeInfo.IsValueType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.IsVisible*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: IsVisible\n  nameWithType: TypeInfo.IsVisible\n  fullName: TypeInfo.IsVisible\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.MakeArrayType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: MakeArrayType\n  nameWithType: TypeInfo.MakeArrayType\n  fullName: TypeInfo.MakeArrayType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.MakeByRefType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: MakeByRefType\n  nameWithType: TypeInfo.MakeByRefType\n  fullName: TypeInfo.MakeByRefType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.MakeGenericType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: MakeGenericType\n  nameWithType: TypeInfo.MakeGenericType\n  fullName: TypeInfo.MakeGenericType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.MakePointerType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: MakePointerType\n  nameWithType: TypeInfo.MakePointerType\n  fullName: TypeInfo.MakePointerType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.MemberType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: MemberType\n  nameWithType: TypeInfo.MemberType\n  fullName: TypeInfo.MemberType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.Namespace*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: Namespace\n  nameWithType: TypeInfo.Namespace\n  fullName: TypeInfo.Namespace\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.StructLayoutAttribute*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: StructLayoutAttribute\n  nameWithType: TypeInfo.StructLayoutAttribute\n  fullName: TypeInfo.StructLayoutAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.TypeInitializer*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: TypeInitializer\n  nameWithType: TypeInfo.TypeInitializer\n  fullName: TypeInfo.TypeInitializer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.UnderlyingSystemType*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: UnderlyingSystemType\n  nameWithType: TypeInfo.UnderlyingSystemType\n  fullName: TypeInfo.UnderlyingSystemType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo*\n  parent: System.Reflection.TypeInfo\n  isExternal: false\n  name: System.Reflection.IReflectableType.GetTypeInfo\n  nameWithType: TypeInfo.System.Reflection.IReflectableType.GetTypeInfo\n  fullName: TypeInfo.System.Reflection.IReflectableType.GetTypeInfo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeInfo.xml\n- uid: System.Reflection.MemberInfo.Equals(System.Object)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: MemberInfo.Equals(Object)\n  fullName: MemberInfo.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Reflection.MemberInfo.GetHashCode\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: MemberInfo.GetHashCode()\n  fullName: MemberInfo.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Reflection.MemberInfo.CustomAttributes\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: MemberInfo.CustomAttributes\n  fullName: MemberInfo.CustomAttributes\n- uid: System.Reflection.MemberInfo.DeclaringType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: DeclaringType\n  nameWithType: MemberInfo.DeclaringType\n  fullName: MemberInfo.DeclaringType\n- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: MemberInfo.GetCustomAttributes(Boolean)\n  fullName: MemberInfo.GetCustomAttributes(Boolean)\n- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: MemberInfo.GetCustomAttributes(Type, Boolean)\n  fullName: MemberInfo.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.MemberInfo.GetCustomAttributesData\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: GetCustomAttributesData()\n  nameWithType: MemberInfo.GetCustomAttributesData()\n  fullName: MemberInfo.GetCustomAttributesData()\n- uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: IsDefined(Type, Boolean)\n  nameWithType: MemberInfo.IsDefined(Type, Boolean)\n  fullName: MemberInfo.IsDefined(Type, Boolean)\n- uid: System.Reflection.MemberInfo.MetadataToken\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: MetadataToken\n  nameWithType: MemberInfo.MetadataToken\n  fullName: MemberInfo.MetadataToken\n- uid: System.Reflection.MemberInfo.Module\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Module\n  nameWithType: MemberInfo.Module\n  fullName: MemberInfo.Module\n- uid: System.Reflection.MemberInfo.Name\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: Name\n  nameWithType: MemberInfo.Name\n  fullName: MemberInfo.Name\n- uid: System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: op_Equality(MemberInfo, MemberInfo)\n  nameWithType: MemberInfo.op_Equality(MemberInfo, MemberInfo)\n  fullName: MemberInfo.op_Equality(MemberInfo, MemberInfo)\n- uid: System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: op_Inequality(MemberInfo, MemberInfo)\n  nameWithType: MemberInfo.op_Inequality(MemberInfo, MemberInfo)\n  fullName: MemberInfo.op_Inequality(MemberInfo, MemberInfo)\n- uid: System.Reflection.MemberInfo.ReflectedType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ReflectedType\n  nameWithType: MemberInfo.ReflectedType\n  fullName: MemberInfo.ReflectedType\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: ICustomAttributeProvider.IsDefined(Type, Boolean)\n  nameWithType: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  fullName: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetType()\n  nameWithType: MemberInfo._MemberInfo.GetType()\n  fullName: MemberInfo._MemberInfo.GetType()\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.GetTypeInfoCount(UInt32)\n  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)\n  fullName: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MemberInfo\n  isExternal: false\n  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(MemberInfo)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(MemberInfo, Boolean)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)\n  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)\n  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfoExtensions\n  isExternal: false\n  name: GetMetadataToken(MemberInfo)\n  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)\n  fullName: MemberInfoExtensions.GetMetadataToken(MemberInfo)\n- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)\n  parent: System.Reflection.MemberInfoExtensions\n  isExternal: false\n  name: HasMetadataToken(MemberInfo)\n  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)\n  fullName: MemberInfoExtensions.HasMetadataToken(MemberInfo)\n- uid: System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetRuntimeInterfaceMap(TypeInfo, Type)\n  nameWithType: RuntimeReflectionExtensions.GetRuntimeInterfaceMap(TypeInfo, Type)\n  fullName: RuntimeReflectionExtensions.GetRuntimeInterfaceMap(TypeInfo, Type)\n- uid: System.Reflection.IReflectableType\n  parent: System.Reflection\n  isExternal: false\n  name: IReflectableType\n  nameWithType: IReflectableType\n  fullName: System.Reflection.IReflectableType\n"}