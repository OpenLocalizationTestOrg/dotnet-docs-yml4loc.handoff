{"nodes":[{"content":"Represents the method that will handle the `MouseDown`, `MouseUp`, or `MouseMove` event of a form, control, or other component.","nodes":[{"pos":[0,127],"content":"Represents the method that will handle the <ph id=\"ph1\">`MouseDown`</ph>, <ph id=\"ph2\">`MouseUp`</ph>, or <ph id=\"ph3\">`MouseMove`</ph> event of a form, control, or other component.","source":"Represents the method that will handle the `MouseDown`, `MouseUp`, or `MouseMove` event of a form, control, or other component."}],"pos":[392,520],"yaml":true},{"content":"When you create a <xref:System.Windows.Forms.MouseEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about handling events with delegates, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,451],"content":"When you create a <xref:System.Windows.Forms.MouseEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about handling events with delegates, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"When you create a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MouseEventHandler&gt;</ph> delegate, you identify the method that will handle the event.","pos":[0,125],"source":"When you create a <xref:System.Windows.Forms.MouseEventHandler> delegate, you identify the method that will handle the event."},{"content":"To associate the event with your event handler, add an instance of the delegate to the event.","pos":[126,219]},{"content":"The event handler is called whenever the event occurs, unless you remove the delegate.","pos":[220,306]},{"content":"For more information about handling events with delegates, see <bpt id=\"p1\">[</bpt>Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[307,451],"source":" For more information about handling events with delegates, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]}],"pos":[531,983],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.MouseEventHandler\n  commentId: T:System.Windows.Forms.MouseEventHandler\n  id: MouseEventHandler\n  langs:\n  - csharp\n  name: MouseEventHandler\n  nameWithType: MouseEventHandler\n  fullName: System.Windows.Forms.MouseEventHandler\n  type: Delegate\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Represents the method that will handle the `MouseDown`, `MouseUp`, or `MouseMove` event of a form, control, or other component.\n  remarks: When you create a <xref:System.Windows.Forms.MouseEventHandler> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about handling events with delegates, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \\n  \\n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]\\n [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]\\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]\"\n  syntax:\n    content: public delegate void MouseEventHandler(object sender, MouseEventArgs e);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/MouseEventHandler.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}