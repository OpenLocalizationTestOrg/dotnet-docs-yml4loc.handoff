### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ListViewInsertionMark
  commentId: T:System.Windows.Forms.ListViewInsertionMark
  id: ListViewInsertionMark
  children:
  - System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  - System.Windows.Forms.ListViewInsertionMark.Bounds
  - System.Windows.Forms.ListViewInsertionMark.Color
  - System.Windows.Forms.ListViewInsertionMark.Index
  - System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)
  langs:
  - csharp
  name: ListViewInsertionMark
  nameWithType: ListViewInsertionMark
  fullName: System.Windows.Forms.ListViewInsertionMark
  type: Class
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Used to indicate the expected drop location when an item is dragged to a new position in a <xref href="System.Windows.Forms.ListView"></xref> control. This functionality is available only on Windows XP and later.
  remarks: "You can retrieve a <xref:System.Windows.Forms.ListViewInsertionMark> from the <xref:System.Windows.Forms.ListView.InsertionMark%2A> property of a <xref:System.Windows.Forms.ListView> control and use it to visually indicate the expected drop location in a drag-and-drop operation when an item is dragged to a new position.  \n  \n This feature works only when the <xref:System.Windows.Forms.ListView.AutoArrange%2A?displayProperty=fullName> property is set to `true` and when the <xref:System.Windows.Forms.ListView> control does not sort the items automatically. To prevent automatic sorting, the <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=fullName> property must be set to <xref:System.Windows.Forms.SortOrder?displayProperty=fullName> and the <xref:System.Windows.Forms.ListView.View%2A?displayProperty=fullName> property must be set to <xref:System.Windows.Forms.View?displayProperty=fullName>, <xref:System.Windows.Forms.View?displayProperty=fullName>, or <xref:System.Windows.Forms.View?displayProperty=fullName>. Additionally, the insertion mark feature cannot be used with the <xref:System.Windows.Forms.ListView> grouping feature because the grouping feature orders the items by group membership.  \n  \n The <xref:System.Windows.Forms.ListViewInsertionMark> class is typically used in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> or <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event to update the position of the insertion mark as an item is dragged. It is also used in a handler for the <xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName> or <xref:System.Windows.Forms.Control.MouseUp?displayProperty=fullName> event to insert a dragged item at the correct location.  \n  \n To update the position of the insertion mark, follow these steps:  \n  \n1.  In a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> or <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> event, use the <xref:System.Windows.Forms.ListView.InsertionMark%2A?displayProperty=fullName> property to access the <xref:System.Windows.Forms.ListViewInsertionMark> object associated with the <xref:System.Windows.Forms.ListView> control.  \n  \n2.  Use the <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method to retrieve the index of the item closest to the mouse pointer.  \n  \n3.  Pass the index value to the <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=fullName> method to retrieve the bounding rectangle of the item.  \n  \n4.  If the mouse pointer is located to the left of the midpoint of the bounding rectangle, set the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property to `false`; otherwise, set it to `true`.  \n  \n5.  Set the <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> property to the index value retrieved from the <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method. The insertion mark appears next to item with the specified index, either to the left or the right, depending on the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property value. If an item is dragged over itself, the index is -1 and the insertion mark is hidden.  \n  \n To insert the dragged item at the correct location, follow these steps:  \n  \n1.  In a handler for the <xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName> or <xref:System.Windows.Forms.Control.MouseUp?displayProperty=fullName> event, use the <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> property to determine the current location of the insertion mark. Store this value to be used later as the insertion index.  \n  \n2.  If the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property is set to `true`, increment the stored insertion index value.  \n  \n3.  Use the <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A?displayProperty=fullName> method to insert a clone of the dragged item into the <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName> collection at the stored insertion index.  \n  \n4.  Use the <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A?displayProperty=fullName> method to remove the original copy of the dragged item.  \n  \n You must insert a clone of the dragged item before the original copy is removed so the index values in the <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName> collection are not altered before the insertion.  \n  \n To ensure that the items are displayed in the same order as their index values, you must set the <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A?displayProperty=fullName> property to an implementation of the <xref:System.Collections.IComparer> interface that sorts items by index value. For more information, see the Example section.  \n  \n You can modify the color of the insertion mark by using the <xref:System.Windows.Forms.ListViewInsertionMark.Color%2A> property. If you need the size or position of the insertion mark, you can get its bounding rectangle through the <xref:System.Windows.Forms.ListViewInsertionMark.Bounds%2A> property.  \n  \n> [!NOTE]\n>  The insertion mark feature is available only on Windows XP and the Windows Server 2003 family when your application calls the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName> method. On earlier operating systems, any code relating to the insertion mark will be ignored and the insertion mark will not appear. As a result, any code that depends on the insertion mark feature may not work correctly. You may want to include a test that determines whether the insertion mark feature is available, and provide alternate functionality when it is unavailable. For example, you may want to bypass all code that implements drag-and-drop item repositioning when running on operating systems that do not support insertion marks.  \n>   \n>  The insertion mark feature is provided by the same library that provides the operating system themes feature. To check for the availability of this library, call the <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=fullName> method overload and pass in the <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=fullName> value."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]\n [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]"
  syntax:
    content: public sealed class ListViewInsertionMark
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ListViewInsertionMark.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  commentId: P:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  id: AppearsAfterItem
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: AppearsAfterItem
  nameWithType: ListViewInsertionMark.AppearsAfterItem
  fullName: ListViewInsertionMark.AppearsAfterItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets or sets a value indicating whether the insertion mark appears to the right of the item with the index specified by the <xref href="System.Windows.Forms.ListViewInsertionMark.Index"></xref> property.
  remarks: "The <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method lets you find the item closest to the mouse pointer, but you must do your own calculations to determine whether the insertion mark should appear before or after this item.  \n  \n To calculate the value needed for the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property, follow these steps:  \n  \n1.  Use the <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method to retrieve the index of the item closest to the mouse pointer.  \n  \n2.  Pass the index value to the <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=fullName> method to retrieve the bounding rectangle of the item.  \n  \n3.  If the mouse pointer is located to the left of the midpoint of the bounding rectangle, set the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property to `false`; otherwise, set it to `true`.  \n  \n For more information, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]\n [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]"
  syntax:
    content: public bool AppearsAfterItem { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the insertion mark appears to the right of the item with the index specified by the <xref href="System.Windows.Forms.ListViewInsertionMark.Index"></xref> property; otherwise, `false`. The default is `false`.'
  overload: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ListViewInsertionMark.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.ListViewInsertionMark.Bounds
  commentId: P:System.Windows.Forms.ListViewInsertionMark.Bounds
  id: Bounds
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: Bounds
  nameWithType: ListViewInsertionMark.Bounds
  fullName: ListViewInsertionMark.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets the bounding rectangle of the insertion mark.
  remarks: The coordinates in the insertion mark bounding rectangle are relative to the upper-left corner of the <xref:System.Windows.Forms.ListView> control.
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: A <xref href="System.Drawing.Rectangle"></xref> that represents the position and size of the insertion mark.
  overload: System.Windows.Forms.ListViewInsertionMark.Bounds*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ListViewInsertionMark.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.ListViewInsertionMark.Color
  commentId: P:System.Windows.Forms.ListViewInsertionMark.Color
  id: Color
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: Color
  nameWithType: ListViewInsertionMark.Color
  fullName: ListViewInsertionMark.Color
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets or sets the color of the insertion mark.
  remarks: Use this property to set the insertion mark color to a value other than the foreground color of the <xref:System.Windows.Forms.ListView> control.
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#2)]\n [!code-csharp[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#2)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#2)]"
  syntax:
    content: public System.Drawing.Color Color { get; set; }
    return:
      type: System.Drawing.Color
      description: A <xref href="System.Drawing.Color"></xref> value that represents the color of the insertion mark. The default value is the value of the <xref href="System.Windows.Forms.ListView.ForeColor"></xref> property.
  overload: System.Windows.Forms.ListViewInsertionMark.Color*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ListViewInsertionMark.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.ListViewInsertionMark.Index
  commentId: P:System.Windows.Forms.ListViewInsertionMark.Index
  id: Index
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: Index
  nameWithType: ListViewInsertionMark.Index
  fullName: ListViewInsertionMark.Index
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets or sets the index of the item next to which the insertion mark appears.
  remarks: "The insertion mark appears to the left of the item with the specified index if the <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> property is set to `false`; otherwise, it appears to the right of the item. The insertion mark disappears automatically when a dragged item is inserted into the <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName> collection. To remove the insertion mark manually, for example, when an item is dragged onto itself or dragged outside the control, set the <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> value to -1.  \n  \n Use the <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method to retrieve the index of the item closest to a specified location, such as the location of the mouse pointer when positioning an item in a drag-and-drop operation."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]\n [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]"
  syntax:
    content: public int Index { get; set; }
    return:
      type: System.Int32
      description: The index of the item next to which the insertion mark appears or -1 when the insertion mark is hidden.
  overload: System.Windows.Forms.ListViewInsertionMark.Index*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ListViewInsertionMark.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)
  commentId: M:System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)
  id: NearestIndex(System.Drawing.Point)
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: NearestIndex(Point)
  nameWithType: ListViewInsertionMark.NearestIndex(Point)
  fullName: ListViewInsertionMark.NearestIndex(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Retrieves the index of the item closest to the specified point.
  remarks: "This method lets you locate the item closest to the mouse pointer when doing a drag-and-drop operation. Use the index value returned to set the <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> property. When the item closest to the mouse pointer is the item being dragged, the return value of this method is -1. In this case, setting the <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> property to this value hides the insertion mark.  \n  \n This method finds the closest item regardless of where the mouse pointer is located, while the <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=fullName> method returns the item at the specified location only, or `null` if there is no item at that location. The <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=fullName> method returns `null`, for example, when the mouse pointer is located between two items. For this reason, you should always use the <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> method when using a drag-and-drop operation to position items."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]\n [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]"
  syntax:
    content: public int NearestIndex (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: A <xref href="System.Drawing.Point"></xref> representing the location from which to find the nearest item.
    return:
      type: System.Int32
      description: The index of the item closest to the specified point or -1 if the closest item is the item currently being dragged.
  overload: System.Windows.Forms.ListViewInsertionMark.NearestIndex*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ListViewInsertionMark.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: AppearsAfterItem
  nameWithType: ListViewInsertionMark.AppearsAfterItem
  fullName: ListViewInsertionMark.AppearsAfterItem
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ListViewInsertionMark.Bounds
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Bounds
  nameWithType: ListViewInsertionMark.Bounds
  fullName: ListViewInsertionMark.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.ListViewInsertionMark.Color
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Color
  nameWithType: ListViewInsertionMark.Color
  fullName: ListViewInsertionMark.Color
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.ListViewInsertionMark.Index
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Index
  nameWithType: ListViewInsertionMark.Index
  fullName: ListViewInsertionMark.Index
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: NearestIndex(Point)
  nameWithType: ListViewInsertionMark.NearestIndex(Point)
  fullName: ListViewInsertionMark.NearestIndex(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: AppearsAfterItem
  nameWithType: ListViewInsertionMark.AppearsAfterItem
  fullName: ListViewInsertionMark.AppearsAfterItem
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ListViewInsertionMark.xml
- uid: System.Windows.Forms.ListViewInsertionMark.Bounds*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Bounds
  nameWithType: ListViewInsertionMark.Bounds
  fullName: ListViewInsertionMark.Bounds
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ListViewInsertionMark.xml
- uid: System.Windows.Forms.ListViewInsertionMark.Color*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Color
  nameWithType: ListViewInsertionMark.Color
  fullName: ListViewInsertionMark.Color
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ListViewInsertionMark.xml
- uid: System.Windows.Forms.ListViewInsertionMark.Index*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Index
  nameWithType: ListViewInsertionMark.Index
  fullName: ListViewInsertionMark.Index
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ListViewInsertionMark.xml
- uid: System.Windows.Forms.ListViewInsertionMark.NearestIndex*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: NearestIndex
  nameWithType: ListViewInsertionMark.NearestIndex
  fullName: ListViewInsertionMark.NearestIndex
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/ListViewInsertionMark.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
