{"nodes":[{"content":"Returns data from <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechDetected\"></xref> events.","nodes":[{"pos":[0,193],"content":"Returns data from <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechDetected\"&gt;&lt;/xref&gt;</ph> events.","source":"Returns data from <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechDetected\"></xref> events."}],"pos":[518,712],"yaml":true},{"content":"A `SpeechDetected` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.  \n  \n **SpeechDetected** events are generated when a recognition engine can identify audio input as human speech.  \n  \n <xref:System.Speech.Recognition.SpeechDetectedEventArgs> derives from <xref:System.EventArgs>.","nodes":[{"pos":[0,161],"content":"A <ph id=\"ph1\">`SpeechDetected`</ph> event is raised by the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SpeechRecognizer&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt;</ph> classes.","source":"A `SpeechDetected` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes."},{"pos":[168,275],"content":"<bpt id=\"p1\">**</bpt>SpeechDetected<ept id=\"p1\">**</ept> events are generated when a recognition engine can identify audio input as human speech.","source":"**SpeechDetected** events are generated when a recognition engine can identify audio input as human speech."},{"pos":[282,376],"content":"<xref:System.Speech.Recognition.SpeechDetectedEventArgs> derives from <xref:System.EventArgs>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Speech.Recognition.SpeechDetectedEventArgs&gt;</ph> derives from <ph id=\"ph2\">&lt;xref:System.EventArgs&gt;</ph>.","pos":[0,94],"source":"<xref:System.Speech.Recognition.SpeechDetectedEventArgs> derives from <xref:System.EventArgs>."}]}],"pos":[723,1106],"yaml":true,"extradata":"MT"},{"content":"Gets the position in the audio stream where speech was detected.","nodes":[{"pos":[0,64],"content":"Gets the position in the audio stream where speech was detected.","nodes":[{"content":"Gets the position in the audio stream where speech was detected.","pos":[0,64]}]}],"pos":[3464,3529],"yaml":true},{"content":"Returns the location of a detected phrase within a recognition engine’s speech buffer.","nodes":[{"pos":[0,86],"content":"Returns the location of a detected phrase within a recognition engine’s speech buffer.","nodes":[{"content":"Returns the location of a detected phrase within a recognition engine’s speech buffer.","pos":[0,86]}]}],"pos":[4551,4638],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.SpeechDetectedEventArgs\n  commentId: T:System.Speech.Recognition.SpeechDetectedEventArgs\n  id: SpeechDetectedEventArgs\n  children:\n  - System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition\n  langs:\n  - csharp\n  name: SpeechDetectedEventArgs\n  nameWithType: SpeechDetectedEventArgs\n  fullName: System.Speech.Recognition.SpeechDetectedEventArgs\n  type: Class\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Returns data from <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechDetected\"></xref> events.\n  remarks: \"A `SpeechDetected` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.  \\n  \\n **SpeechDetected** events are generated when a recognition engine can identify audio input as human speech.  \\n  \\n <xref:System.Speech.Recognition.SpeechDetectedEventArgs> derives from <xref:System.EventArgs>.\"\n  example:\n  - \"The example below creates a handler for <xref:System.Speech.Recognition.SpeechRecognizer.SpeechDetected?displayProperty=fullName> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected?displayProperty=fullName> events. The handler initializes a display every time speech is detected and displays status information, including audio position.  \\n  \\n```  \\n_recognizer.SpeechDetected +=  \\n  delegate(object sender, SpeechDetectedEventArgs eventArgs)   \\n  {  \\n  \\n    // Clear previous recognition information.  \\n    _audioDeviceStatusLabel.Enabled = true;  \\n    _audioDeviceStatusLabel.Visible = true;  \\n    Utils.DisplayAudioInputFormat(_audioStateLabel, _recognizer);  \\n    Utils.DisplayRecognizerState(_recognizerStateLabel, _recognizer.State);  \\n    Utils.DisplaySpeechDetected(_speechDetectedLabel, eventArgs.AudioPosition);  \\n  };  \\n```\"\n  syntax:\n    content: 'public class SpeechDetectedEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SpeechDetectedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\n- uid: System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition\n  commentId: P:System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition\n  id: AudioPosition\n  parent: System.Speech.Recognition.SpeechDetectedEventArgs\n  langs:\n  - csharp\n  name: AudioPosition\n  nameWithType: SpeechDetectedEventArgs.AudioPosition\n  fullName: SpeechDetectedEventArgs.AudioPosition\n  type: Property\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: Gets the position in the audio stream where speech was detected.\n  remarks: ''\n  example:\n  - \"The example below creates a handler for <xref:System.Speech.Recognition.SpeechRecognizer.SpeechDetected?displayProperty=fullName> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected?displayProperty=fullName> events. The handler initializes a display each time speech is detected and displays status information, including audio position.  \\n  \\n```  \\n_recognizer.SpeechDetected +=  \\n  delegate(object sender, SpeechDetectedEventArgs eventArgs)   \\n  {  \\n  \\n    // Clear previous recognition information.  \\n    _audioDeviceStatusLabel.Enabled = true;  \\n    _audioDeviceStatusLabel.Visible = true;  \\n    Utils.DisplayAudioInputFormat(_audioStateLabel, _recognizer);  \\n    Utils.DisplayRecognizerState(_recognizerStateLabel, _recognizer.State);  \\n    Utils.DisplaySpeechDetected(_speechDetectedLabel, eventArgs.AudioPosition);  \\n  };  \\n```\"\n  syntax:\n    content: public TimeSpan AudioPosition { get; }\n    return:\n      type: System.TimeSpan\n      description: Returns the location of a detected phrase within a recognition engine’s speech buffer.\n  overload: System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SpeechDetectedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition\n  parent: System.Speech.Recognition.SpeechDetectedEventArgs\n  isExternal: false\n  name: AudioPosition\n  nameWithType: SpeechDetectedEventArgs.AudioPosition\n  fullName: SpeechDetectedEventArgs.AudioPosition\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition*\n  parent: System.Speech.Recognition.SpeechDetectedEventArgs\n  isExternal: false\n  name: AudioPosition\n  nameWithType: SpeechDetectedEventArgs.AudioPosition\n  fullName: SpeechDetectedEventArgs.AudioPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SpeechDetectedEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}