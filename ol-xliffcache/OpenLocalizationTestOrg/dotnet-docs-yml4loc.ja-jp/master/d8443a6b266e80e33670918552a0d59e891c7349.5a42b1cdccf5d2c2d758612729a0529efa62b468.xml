{"nodes":[{"content":"Provides access to the application domain and process of an add-in.","nodes":[{"pos":[0,67],"content":"Provides access to the application domain and process of an add-in.","nodes":[{"content":"Provides access to the application domain and process of an add-in.","pos":[0,67]}]}],"pos":[503,571],"yaml":true},{"content":"Use this class to load add-ins into a desired environment, which can be one of the following:  \n  \n-   An existing application domain for which you have the <xref:System.AppDomain> object.  \n  \n-   An application domain that was automatically generated to activate an add-in.  \n  \n-   An existing external process.  \n  \n To obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in, pass the add-in's application domain to the <xref:System.AddIn.Hosting.AddInEnvironment> class constructor. Alternatively, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object.  \n  \n After you obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object, you can do the following:  \n  \n-   Pass that <xref:System.AddIn.Hosting.AddInEnvironment> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the application domain and process that is represented by the <xref:System.AddIn.Hosting.AddInEnvironment> object.  \n  \n-   Use the <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> property to obtain an <xref:System.AddIn.Hosting.AddInProcess> object. Then pass that object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the process that is represented by the <xref:System.AddIn.Hosting.AddInProcess> object but in a new application domain.","nodes":[{"pos":[0,93],"content":"Use this class to load add-ins into a desired environment, which can be one of the following:","nodes":[{"content":"Use this class to load add-ins into a desired environment, which can be one of the following:","pos":[0,93]}]},{"pos":[103,188],"content":"An existing application domain for which you have the <xref:System.AppDomain> object.","nodes":[{"content":"An existing application domain for which you have the <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> object.","pos":[0,85],"source":"An existing application domain for which you have the <xref:System.AppDomain> object."}]},{"pos":[198,275],"content":"An application domain that was automatically generated to activate an add-in.","nodes":[{"content":"An application domain that was automatically generated to activate an add-in.","pos":[0,77]}]},{"pos":[285,314],"content":"An existing external process.","nodes":[{"content":"An existing external process.","pos":[0,29]}]},{"pos":[321,746],"content":"To obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in, pass the add-in's application domain to the <xref:System.AddIn.Hosting.AddInEnvironment> class constructor. Alternatively, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object.","nodes":[{"content":"To obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in, pass the add-in's application domain to the <xref:System.AddIn.Hosting.AddInEnvironment> class constructor. Alternatively, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object.","pos":[0,425],"nodes":[{"content":"To obtain the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object for an add-in, pass the add-in's application domain to the <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> class constructor.","pos":[0,188],"source":"To obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in, pass the add-in's application domain to the <xref:System.AddIn.Hosting.AddInEnvironment> class constructor."},{"content":"Alternatively, you can use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInController&gt;</ph> class to obtain the add-in's <ph id=\"ph3\">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object.","pos":[189,425],"source":" Alternatively, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object."}]}]},{"pos":[753,852],"content":"After you obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object, you can do the following:","nodes":[{"content":"After you obtain the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object, you can do the following:","pos":[0,99],"source":"After you obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object, you can do the following:"}]},{"pos":[862,1157],"content":"Pass that <xref:System.AddIn.Hosting.AddInEnvironment> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the application domain and process that is represented by the <xref:System.AddIn.Hosting.AddInEnvironment> object.","nodes":[{"content":"Pass that <xref:System.AddIn.Hosting.AddInEnvironment> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the application domain and process that is represented by the <xref:System.AddIn.Hosting.AddInEnvironment> object.","pos":[0,295],"nodes":[{"content":"Pass that <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object to the appropriate <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt;</ph> method overload.","pos":[0,148],"source":"Pass that <xref:System.AddIn.Hosting.AddInEnvironment> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload."},{"content":"The add-in will be activated in the application domain and process that is represented by the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object.","pos":[149,295],"source":" The add-in will be activated in the application domain and process that is represented by the <xref:System.AddIn.Hosting.AddInEnvironment> object."}]}]},{"pos":[1167,1562],"content":"Use the <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> property to obtain an <xref:System.AddIn.Hosting.AddInProcess> object. Then pass that object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the process that is represented by the <xref:System.AddIn.Hosting.AddInProcess> object but in a new application domain.","nodes":[{"content":"Use the <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> property to obtain an <xref:System.AddIn.Hosting.AddInProcess> object. Then pass that object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the process that is represented by the <xref:System.AddIn.Hosting.AddInProcess> object but in a new application domain.","pos":[0,395],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInEnvironment.Process%2A&gt;</ph> property to obtain an <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInProcess&gt;</ph> object.","pos":[0,134],"source":"Use the <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> property to obtain an <xref:System.AddIn.Hosting.AddInProcess> object."},{"content":"Then pass that object to the appropriate <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt;</ph> method overload.","pos":[135,243],"source":" Then pass that object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload."},{"content":"The add-in will be activated in the process that is represented by the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInProcess&gt;</ph> object but in a new application domain.","pos":[244,395],"source":" The add-in will be activated in the process that is represented by the <xref:System.AddIn.Hosting.AddInProcess> object but in a new application domain."}]}]}],"pos":[582,2161],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.AddIn.Hosting.AddInEnvironment\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Hosting.AddInEnvironment\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.AddIn.Hosting.AddInEnvironment\"></xref> class."}],"pos":[3599,3699],"yaml":true},{"content":"If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object. Otherwise, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object.","nodes":[{"pos":[0,408],"content":"If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object. Otherwise, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object.","nodes":[{"content":"If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object. Otherwise, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object.","pos":[0,408],"nodes":[{"content":"If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object.","pos":[0,184],"source":"If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object."},{"content":"Otherwise, you can use the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInController&gt;</ph> class to obtain the <ph id=\"ph3\">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object.","pos":[185,408],"source":" Otherwise, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object."}]}]}],"pos":[3710,4119],"yaml":true,"extradata":"MT"},{"content":"The application domain that contains the add-in.","nodes":[{"pos":[0,48],"content":"The application domain that contains the add-in.","nodes":[{"content":"The application domain that contains the add-in.","pos":[0,48]}]}],"pos":[4273,4322],"yaml":true},{"content":"<code>appDomain</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;appDomain&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>appDomain</code> is `null`."}],"pos":[4495,4529],"yaml":true},{"content":"Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.","nodes":[{"pos":[0,98],"content":"Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.","nodes":[{"content":"Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.","pos":[0,98],"nodes":[{"content":"Full-trust permission is demanded.","pos":[0,34]},{"content":"A caller in the call chain does not have sufficient permission.","pos":[35,98]}]}]}],"pos":[4641,4740],"yaml":true},{"content":"Gets the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object that represents the process in which the add-in is running.","nodes":[{"pos":[0,130],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Hosting.AddInProcess\"&gt;&lt;/xref&gt;</ph> object that represents the process in which the add-in is running.","source":"Gets the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object that represents the process in which the add-in is running."}],"pos":[5661,5792],"yaml":true},{"content":"You can use this property to activate multiple add-ins in the same process but in different domains.  \n  \n Pass the <xref:System.AddIn.Hosting.AddInProcess> object obtained with this property to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload.  \n  \n If you want to activate them in the same domain in an external process you should pass the <xref:System.AddIn.Hosting.AddInEnvironment> object directly to the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> method overload.","nodes":[{"pos":[0,100],"content":"You can use this property to activate multiple add-ins in the same process but in different domains.","nodes":[{"content":"You can use this property to activate multiple add-ins in the same process but in different domains.","pos":[0,100]}]},{"pos":[107,278],"content":"Pass the <xref:System.AddIn.Hosting.AddInProcess> object obtained with this property to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload.","nodes":[{"content":"Pass the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInProcess&gt;</ph> object obtained with this property to the appropriate <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt;</ph> method overload.","pos":[0,171],"source":"Pass the <xref:System.AddIn.Hosting.AddInProcess> object obtained with this property to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload."}]},{"pos":[285,583],"content":"If you want to activate them in the same domain in an external process you should pass the <xref:System.AddIn.Hosting.AddInEnvironment> object directly to the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> method overload.","nodes":[{"content":"If you want to activate them in the same domain in an external process you should pass the <ph id=\"ph1\">&lt;xref:System.AddIn.Hosting.AddInEnvironment&gt;</ph> object directly to the <ph id=\"ph2\">&lt;xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName&gt;</ph> method overload.","pos":[0,298],"source":"If you want to activate them in the same domain in an external process you should pass the <xref:System.AddIn.Hosting.AddInEnvironment> object directly to the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> method overload."}]}],"pos":[5803,6393],"yaml":true,"extradata":"MT"},{"content":"The process in which the add-in is running.","nodes":[{"pos":[0,43],"content":"The process in which the add-in is running.","nodes":[{"content":"The process in which the add-in is running.","pos":[0,43]}]}],"pos":[6551,6595],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Hosting.AddInEnvironment\n  commentId: T:System.AddIn.Hosting.AddInEnvironment\n  id: AddInEnvironment\n  children:\n  - System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)\n  - System.AddIn.Hosting.AddInEnvironment.Process\n  langs:\n  - csharp\n  name: AddInEnvironment\n  nameWithType: AddInEnvironment\n  fullName: System.AddIn.Hosting.AddInEnvironment\n  type: Class\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Provides access to the application domain and process of an add-in.\n  remarks: \"Use this class to load add-ins into a desired environment, which can be one of the following:  \\n  \\n-   An existing application domain for which you have the <xref:System.AppDomain> object.  \\n  \\n-   An application domain that was automatically generated to activate an add-in.  \\n  \\n-   An existing external process.  \\n  \\n To obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object for an add-in, pass the add-in's application domain to the <xref:System.AddIn.Hosting.AddInEnvironment> class constructor. Alternatively, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object.  \\n  \\n After you obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object, you can do the following:  \\n  \\n-   Pass that <xref:System.AddIn.Hosting.AddInEnvironment> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the application domain and process that is represented by the <xref:System.AddIn.Hosting.AddInEnvironment> object.  \\n  \\n-   Use the <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> property to obtain an <xref:System.AddIn.Hosting.AddInProcess> object. Then pass that object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload. The add-in will be activated in the process that is represented by the <xref:System.AddIn.Hosting.AddInProcess> object but in a new application domain.\"\n  syntax:\n    content: public sealed class AddInEnvironment\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)\n  commentId: M:System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)\n  id: '#ctor(System.AppDomain)'\n  parent: System.AddIn.Hosting.AddInEnvironment\n  langs:\n  - csharp\n  name: AddInEnvironment(AppDomain)\n  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)\n  fullName: AddInEnvironment.AddInEnvironment(AppDomain)\n  type: Constructor\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.AddIn.Hosting.AddInEnvironment\"></xref> class.\n  remarks: If you have access to the application domain that contains the add-in you need, you can use this constructor to obtain the add-in's <xref:System.AddIn.Hosting.AddInEnvironment> object. Otherwise, you can use the <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> property of the <xref:System.AddIn.Hosting.AddInController> class to obtain the <xref:System.AddIn.Hosting.AddInEnvironment> object.\n  syntax:\n    content: public AddInEnvironment (AppDomain appDomain);\n    parameters:\n    - id: appDomain\n      type: System.AppDomain\n      description: The application domain that contains the add-in.\n  overload: System.AddIn.Hosting.AddInEnvironment.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>appDomain</code> is `null`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Hosting.AddInEnvironment.Process\n  commentId: P:System.AddIn.Hosting.AddInEnvironment.Process\n  id: Process\n  parent: System.AddIn.Hosting.AddInEnvironment\n  langs:\n  - csharp\n  name: Process\n  nameWithType: AddInEnvironment.Process\n  fullName: AddInEnvironment.Process\n  type: Property\n  assemblies:\n  - System.AddIn\n  namespace: System.AddIn.Hosting\n  summary: Gets the <xref href=\"System.AddIn.Hosting.AddInProcess\"></xref> object that represents the process in which the add-in is running.\n  remarks: \"You can use this property to activate multiple add-ins in the same process but in different domains.  \\n  \\n Pass the <xref:System.AddIn.Hosting.AddInProcess> object obtained with this property to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method overload.  \\n  \\n If you want to activate them in the same domain in an external process you should pass the <xref:System.AddIn.Hosting.AddInEnvironment> object directly to the <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> method overload.\"\n  syntax:\n    content: public System.AddIn.Hosting.AddInProcess Process { get; }\n    return:\n      type: System.AddIn.Hosting.AddInProcess\n      description: The process in which the add-in is running.\n  overload: System.AddIn.Hosting.AddInEnvironment.Process*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInEnvironment.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)\n  parent: System.AddIn.Hosting.AddInEnvironment\n  isExternal: false\n  name: AddInEnvironment(AppDomain)\n  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)\n  fullName: AddInEnvironment.AddInEnvironment(AppDomain)\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.AddIn.Hosting.AddInEnvironment.Process\n  parent: System.AddIn.Hosting.AddInEnvironment\n  isExternal: false\n  name: Process\n  nameWithType: AddInEnvironment.Process\n  fullName: AddInEnvironment.Process\n- uid: System.AddIn.Hosting.AddInProcess\n  parent: System.AddIn.Hosting\n  isExternal: false\n  name: AddInProcess\n  nameWithType: AddInProcess\n  fullName: System.AddIn.Hosting.AddInProcess\n- uid: System.AddIn.Hosting.AddInEnvironment.#ctor*\n  parent: System.AddIn.Hosting.AddInEnvironment\n  isExternal: false\n  name: AddInEnvironment\n  nameWithType: AddInEnvironment.AddInEnvironment\n  fullName: AddInEnvironment.AddInEnvironment\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInEnvironment.xml\n- uid: System.AddIn.Hosting.AddInEnvironment.Process*\n  parent: System.AddIn.Hosting.AddInEnvironment\n  isExternal: false\n  name: Process\n  nameWithType: AddInEnvironment.Process\n  fullName: AddInEnvironment.Process\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInEnvironment.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}