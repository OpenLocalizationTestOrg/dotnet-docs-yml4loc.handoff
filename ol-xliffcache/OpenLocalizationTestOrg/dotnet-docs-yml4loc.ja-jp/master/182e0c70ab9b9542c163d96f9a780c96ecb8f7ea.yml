### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlTypeInvoker
  commentId: T:System.Xaml.Schema.XamlTypeInvoker
  id: XamlTypeInvoker
  children:
  - System.Xaml.Schema.XamlTypeInvoker.#ctor
  - System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  - System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  - System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  - System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  - System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  - System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  langs:
  - csharp
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
  type: Class
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.
  remarks: "The purpose of <xref:System.Xaml.Schema.XamlTypeInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on. Subclasses of <xref:System.Xaml.Schema.XamlTypeInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlType>. You subclass <xref:System.Xaml.XamlType> and pass the <xref:System.Xaml.Schema.XamlTypeInvoker> through to the base constructor. Along with defining a <xref:System.Xaml.Schema.XamlTypeInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlType>.  \n  \n <xref:System.Xaml.Schema.XamlTypeInvoker> has a default implementation. The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.  \n  \n <xref:System.Xaml.Schema.XamlTypeInvoker> provides methods for basic instantiation (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) and methods that are relevant for types where the <xref:System.Xaml.XamlType> represents a collection, dictionary or array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>)."
  syntax:
    content: public class XamlTypeInvoker
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: XamlTypeInvoker()
  nameWithType: XamlTypeInvoker.XamlTypeInvoker()
  fullName: XamlTypeInvoker.XamlTypeInvoker()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Initializes a new instance of the <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref> class.
  remarks: "The default implementation is empty.  \n  \n This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>. For a <xref:System.Xaml.Schema.XamlTypeInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> as base. Providing the <xref:System.Xaml.XamlType> implements a default pattern where <xref:System.Xaml.Schema.XamlTypeInvoker> is immutable."
  syntax:
    content: protected XamlTypeInvoker ();
    parameters: []
  overload: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  id: '#ctor(System.Xaml.XamlType)'
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: XamlTypeInvoker(XamlType)
  nameWithType: XamlTypeInvoker.XamlTypeInvoker(XamlType)
  fullName: XamlTypeInvoker.XamlTypeInvoker(XamlType)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Initializes a new instance of the <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref> class, based on a provided <xref href="System.Xaml.XamlType"></xref>.
  remarks: This constructor is called internally based on the <xref:System.Xaml.XamlType> where the <xref:System.Xaml.Schema.XamlTypeInvoker> is used for construction. The `type` provided here is relevant to all other method calls for <xref:System.Xaml.Schema.XamlTypeInvoker>.
  syntax:
    content: public XamlTypeInvoker (System.Xaml.XamlType type);
    parameters:
    - id: type
      type: System.Xaml.XamlType
      description: The <xref href="System.Xaml.XamlType"></xref> value for the specific XAML type relevant to this <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref>.
  overload: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>type</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  id: AddToCollection(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: AddToCollection(Object, Object)
  nameWithType: XamlTypeInvoker.AddToCollection(Object, Object)
  fullName: XamlTypeInvoker.AddToCollection(Object, Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Adds the provided item to an instance of the type that is relevant to this <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref>.
  remarks: You should only call this method on a <xref:System.Xaml.XamlType> that represents a collection.
  syntax:
    content: public virtual void AddToCollection (object instance, object item);
    parameters:
    - id: instance
      type: System.Object
      description: An instance of the type specified by the <xref href="System.Xaml.XamlType"></xref> used for constructing this <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref>.
    - id: item
      type: System.Object
      description: The item to add.
  overload: System.Xaml.Schema.XamlTypeInvoker.AddToCollection*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Invoked this method on a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> that is based on an unknown <xref href=\"System.Xaml.XamlType\"></xref>.  \n  \n **-or-**  \n  \n Invoked this method on a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> where the relevant type is not a collection."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>instance</code> is `null`.
  - type: System.Xaml.XamlSchemaException
    commentId: T:System.Xaml.XamlSchemaException
    description: <xref href="System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)"></xref> for this <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref> returns `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  id: AddToDictionary(System.Object,System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: AddToDictionary(Object, Object, Object)
  nameWithType: XamlTypeInvoker.AddToDictionary(Object, Object, Object)
  fullName: XamlTypeInvoker.AddToDictionary(Object, Object, Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Adds the provided key and item value to an instance of the type that is relevant to this <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref>.
  remarks: You should only call this method on a <xref:System.Xaml.XamlType> that represents a dictionary.
  syntax:
    content: public virtual void AddToDictionary (object instance, object key, object item);
    parameters:
    - id: instance
      type: System.Object
      description: An instance of the type specified by the <xref href="System.Xaml.XamlType"></xref> used for constructing this <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref>.
    - id: key
      type: System.Object
      description: Dictionary key for the item to add.
    - id: item
      type: System.Object
      description: The item value to add.
  overload: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Invoked this method on a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> that is based on an unknown <xref href=\"System.Xaml.XamlType\"></xref>.  \n  \n **-or-**  \n  \n Invoked this method on a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> where the relevant type is not a dictionary."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>instance</code> is `null`.
  - type: System.Xaml.XamlSchemaException
    commentId: T:System.Xaml.XamlSchemaException
    description: <xref href="System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)"></xref> for this <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref> returns `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  id: CreateInstance(System.Object[])
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: CreateInstance(Object[])
  nameWithType: XamlTypeInvoker.CreateInstance(Object[])
  fullName: XamlTypeInvoker.CreateInstance(Object[])
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Creates an object instance based on the construction-initiated <xref href="System.Xaml.XamlType"></xref> for this <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref>.
  syntax:
    content: public virtual object CreateInstance (object[] arguments);
    parameters:
    - id: arguments
      type: System.Object[]
      description: An array of objects that supply the `x:ConstructorArgs` for the instance. May be `null` for types that do not require or use `x:ConstructorArgs`.
    return:
      type: System.Object
      description: The created instance based on the construction-initiated <xref href="System.Xaml.XamlType"></xref> for this <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref>.
  overload: System.Xaml.Schema.XamlTypeInvoker.CreateInstance*
  exceptions:
  - type: System.MissingMethodException
    commentId: T:System.MissingMethodException
    description: Could not resolve a constructor.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  id: GetAddMethod(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetAddMethod(XamlType)
  nameWithType: XamlTypeInvoker.GetAddMethod(XamlType)
  fullName: XamlTypeInvoker.GetAddMethod(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Returns the relevant `Add` method for a <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref> that is relevant to a collection or dictionary.
  remarks: "This method should return `null` for cases where the <xref:System.Xaml.XamlType> for this <xref:System.Xaml.Schema.XamlTypeInvoker> is not a writeable collection or dictionary. Specifically, should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName> returns `None`.  \n  \n> [!IMPORTANT]\n>  If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers."
  syntax:
    content: public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);
    parameters:
    - id: contentType
      type: System.Xaml.XamlType
      description: <xref href="System.Xaml.XamlType"></xref> for the item type that is used by the `Add` method.
    return:
      type: System.Reflection.MethodInfo
      description: CLR <xref href="System.Reflection.MethodInfo"></xref> information for the `Add` method, or null.
  overload: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>contentType</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  id: GetEnumeratorMethod
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetEnumeratorMethod()
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod()
  fullName: XamlTypeInvoker.GetEnumeratorMethod()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Returns an object representing a method that can enumerate over items.
  remarks: "Should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=fullName> returns `None`.  \n  \n> [!IMPORTANT]\n>  If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers."
  syntax:
    content: public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: <xref href="System.Reflection.MethodInfo"></xref> for an enumerator method, or `null`.
  overload: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  commentId: M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  id: GetItems(System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: GetItems(Object)
  nameWithType: XamlTypeInvoker.GetItems(Object)
  fullName: XamlTypeInvoker.GetItems(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Returns an <xref href="System.Collections.IEnumerator"></xref> object representing the set of items.
  syntax:
    content: public virtual System.Collections.IEnumerator GetItems (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: An instance of the type specified by the <xref href="System.Xaml.XamlType"></xref> used for constructing this <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref>.
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator"></xref> object, or `null`.
  overload: System.Xaml.Schema.XamlTypeInvoker.GetItems*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Invoked this method on a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> that is based on an unknown <xref href=\"System.Xaml.XamlType\"></xref>.  \n  \n **-or-**  \n  \n Invoked this method on a <xref href=\"System.Xaml.Schema.XamlTypeInvoker\"></xref> where the relevant type is not a collection or dictionary."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>instance</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  commentId: P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  id: SetMarkupExtensionHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
  fullName: XamlTypeInvoker.SetMarkupExtensionHandler
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Gets the handler to use when a <xref href="System.Xaml.XamlObjectWriter"></xref> calls into an implemented <xref href="System.Windows.Markup.MarkupExtension"></xref>.
  remarks: "The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.  \n  \n The value returned invokes the <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.  \n  \n The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>."
  syntax:
    content: public EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs> SetMarkupExtensionHandler { get; }
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
      description: A handler implementation that handles this case.
  overload: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  commentId: P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  id: SetTypeConverterHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
  fullName: XamlTypeInvoker.SetTypeConverterHandler
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Gets the handler to use when a <xref href="System.Xaml.XamlObjectWriter"></xref> calls into a CLR-implemented <xref href="System.ComponentModel.TypeConverter"></xref>.
  remarks: "The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.  \n  \n The value returned invokes the <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.  \n  \n The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>."
  syntax:
    content: public EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs> SetTypeConverterHandler { get; }
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
      description: A handler implementation that handles this case.
  overload: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  commentId: P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  id: UnknownInvoker
  parent: System.Xaml.Schema.XamlTypeInvoker
  langs:
  - csharp
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
  fullName: XamlTypeInvoker.UnknownInvoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: Provides a static value that represents an unknown, not fully implemented <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref>.
  remarks: Supplying this value for a <xref:System.Xaml.Schema.XamlTypeInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.
  syntax:
    content: public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: A static value that represents an unknown, not fully implemented <xref href="System.Xaml.Schema.XamlTypeInvoker"></xref>.
  overload: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
  ms.technology:
  - dotnet-wpf
  manager: martinek
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Xaml.XamlSchemaException
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaException
  nameWithType: XamlSchemaException
  fullName: System.Xaml.XamlSchemaException
- uid: System.MissingMethodException
  parent: System
  isExternal: false
  name: MissingMethodException
  nameWithType: MissingMethodException
  fullName: System.MissingMethodException
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker()
  nameWithType: XamlTypeInvoker.XamlTypeInvoker()
  fullName: XamlTypeInvoker.XamlTypeInvoker()
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker(XamlType)
  nameWithType: XamlTypeInvoker.XamlTypeInvoker(XamlType)
  fullName: XamlTypeInvoker.XamlTypeInvoker(XamlType)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToCollection(Object, Object)
  nameWithType: XamlTypeInvoker.AddToCollection(Object, Object)
  fullName: XamlTypeInvoker.AddToCollection(Object, Object)
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToDictionary(Object, Object, Object)
  nameWithType: XamlTypeInvoker.AddToDictionary(Object, Object, Object)
  fullName: XamlTypeInvoker.AddToDictionary(Object, Object, Object)
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: CreateInstance(Object[])
  nameWithType: XamlTypeInvoker.CreateInstance(Object[])
  fullName: XamlTypeInvoker.CreateInstance(Object[])
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetAddMethod(XamlType)
  nameWithType: XamlTypeInvoker.GetAddMethod(XamlType)
  fullName: XamlTypeInvoker.GetAddMethod(XamlType)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetEnumeratorMethod()
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod()
  fullName: XamlTypeInvoker.GetEnumeratorMethod()
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetItems(Object)
  nameWithType: XamlTypeInvoker.GetItems(Object)
  fullName: XamlTypeInvoker.GetItems(Object)
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
  fullName: XamlTypeInvoker.SetMarkupExtensionHandler
- uid: System.EventHandler`1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
- uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
  name: XamlSetMarkupExtensionEventArgs
  nameWithType: XamlSetMarkupExtensionEventArgs
  fullName: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
- uid: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<XamlSetMarkupExtensionEventArgs>
  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
  fullName: XamlTypeInvoker.SetTypeConverterHandler
- uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
  name: XamlSetTypeConverterEventArgs
  nameWithType: XamlSetTypeConverterEventArgs
  fullName: System.Windows.Markup.XamlSetTypeConverterEventArgs
- uid: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<XamlSetTypeConverterEventArgs>
  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: System.Windows.Markup.XamlSetTypeConverterEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
  fullName: XamlTypeInvoker.UnknownInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
- uid: System.Xaml.Schema.XamlTypeInvoker.#ctor*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker.XamlTypeInvoker
  fullName: XamlTypeInvoker.XamlTypeInvoker
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToCollection*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToCollection
  nameWithType: XamlTypeInvoker.AddToCollection
  fullName: XamlTypeInvoker.AddToCollection
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
- uid: System.Xaml.Schema.XamlTypeInvoker.AddToDictionary*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: AddToDictionary
  nameWithType: XamlTypeInvoker.AddToDictionary
  fullName: XamlTypeInvoker.AddToDictionary
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
- uid: System.Xaml.Schema.XamlTypeInvoker.CreateInstance*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: CreateInstance
  nameWithType: XamlTypeInvoker.CreateInstance
  fullName: XamlTypeInvoker.CreateInstance
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
- uid: System.Xaml.Schema.XamlTypeInvoker.GetAddMethod*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetAddMethod
  nameWithType: XamlTypeInvoker.GetAddMethod
  fullName: XamlTypeInvoker.GetAddMethod
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
- uid: System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetEnumeratorMethod
  nameWithType: XamlTypeInvoker.GetEnumeratorMethod
  fullName: XamlTypeInvoker.GetEnumeratorMethod
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
- uid: System.Xaml.Schema.XamlTypeInvoker.GetItems*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: GetItems
  nameWithType: XamlTypeInvoker.GetItems
  fullName: XamlTypeInvoker.GetItems
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
- uid: System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetMarkupExtensionHandler
  nameWithType: XamlTypeInvoker.SetMarkupExtensionHandler
  fullName: XamlTypeInvoker.SetMarkupExtensionHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
- uid: System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: SetTypeConverterHandler
  nameWithType: XamlTypeInvoker.SetTypeConverterHandler
  fullName: XamlTypeInvoker.SetTypeConverterHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
- uid: System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker*
  parent: System.Xaml.Schema.XamlTypeInvoker
  isExternal: false
  name: UnknownInvoker
  nameWithType: XamlTypeInvoker.UnknownInvoker
  fullName: XamlTypeInvoker.UnknownInvoker
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xaml.Schema/XamlTypeInvoker.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
