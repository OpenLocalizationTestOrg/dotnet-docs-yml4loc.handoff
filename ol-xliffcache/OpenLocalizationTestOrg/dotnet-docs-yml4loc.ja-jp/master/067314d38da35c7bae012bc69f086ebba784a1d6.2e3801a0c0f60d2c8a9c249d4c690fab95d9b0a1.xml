{"nodes":[{"content":"The exception that is thrown when SQL Server returns a warning or error. This class cannot be inherited.","nodes":[{"pos":[0,104],"content":"The exception that is thrown when SQL Server returns a warning or error. This class cannot be inherited.","nodes":[{"content":"The exception that is thrown when SQL Server returns a warning or error. This class cannot be inherited.","pos":[0,104],"nodes":[{"content":"The exception that is thrown when SQL Server returns a warning or error.","pos":[0,72]},{"content":"This class cannot be inherited.","pos":[73,104]}]}]}],"pos":[1081,1186],"yaml":true},{"content":"This class is created whenever the .NET Framework Data Provider for SQL Server encounters an error generated from the server. (Client side errors are thrown as standard common language runtime exceptions.) <xref:System.Data.SqlClient.SqlException> always contains at least one instance of <xref:System.Data.SqlClient.SqlError>.  \n  \n Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered. Severity levels from 11 through 16 are generated by the user, and can be corrected by the user. Severity levels from 17 through 25 indicate software or hardware errors. When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.  \n  \n The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue. In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command.  \n  \n For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of SQL Server Books Online. The <xref:System.Data.SqlClient.SqlException> class maps to SQL Server severity.  \n  \n The following is general information on handling exceptions. Your code should catch exceptions to prevent the application from crashing and to allow displaying a relevant error message to the user.  You can use database transactions to ensure that the data is consistent regardless of what happens in the client application (including a crash). Features like System.Transaction.TransactionScope or the BeginTransaction method (in System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection, and System.Data.SqlClient.SqlConnection) ensure consistent data regardless of exceptions raised by a provider. Transactions can fail, so catch failures and retry the transaction.  \n  \n Note that beginning with  .NET Framework 4.5, <xref:System.Data.SqlClient.SqlException> can return an inner <xref:System.ComponentModel.Win32Exception>.  \n  \n The exception class of a .Net Framework data provider reports provider-specific errors. For example System.Data.Odbc has OdbcException, System.Data.OleDb has OleDbException, and System.Data.SqlClient has SqlException. For the best level of error detail, catch these exceptions and use the members of these exception classes to get details of the error.  \n  \n In addition to the provider-specific errors, .NET Framework data provider types can raise .NET Framework exceptions such as System.OutOfMemoryException and System.Threading.ThreadAbortException. Recovery from these exceptions may not be possible.  \n  \n Bad input can cause a .NET Framework data provider type to raise an exception such as System.ArgumentException or System.IndexOutOfRangeException.  Calling a method at the wrong time can raise System.InvalidOperationException.  \n  \n So, in general, write an exception handler that catches any provider specific exceptions as well as exceptions from the common language runtime.  These can be layered as follows:  \n  \n```  \nTry {  \n   // code here  \n}  \ncatch (SqlException odbcEx) {  \n   // Handle more specific SqlException exception here.  \n}  \ncatch (Exception ex) {  \n   // Handle generic ones here.  \n}  \n  \n```  \n  \n Or:  \n  \n```  \nTry {  \n   // code here  \n}  \ncatch (Exception ex) {  \n   if (ex is SqlException) {  \n      // Handle more specific SqlException exception here.  \n   }  \n   Else {  \n      // Handle generic ones here.  \n   }  \n}  \n  \n```  \n  \n It is also possible for a .NET Framework data provider method call to fail on a thread pool thread with no user code on the stack. In this case, and when using asynchronous method calls, you must register the <xref:System.AppDomain.UnhandledException> event to handle those exceptions and avoid application crash.","nodes":[{"pos":[0,327],"content":"This class is created whenever the .NET Framework Data Provider for SQL Server encounters an error generated from the server. (Client side errors are thrown as standard common language runtime exceptions.) <xref:System.Data.SqlClient.SqlException> always contains at least one instance of <xref:System.Data.SqlClient.SqlError>.","nodes":[{"content":"This class is created whenever the .NET Framework Data Provider for SQL Server encounters an error generated from the server. (Client side errors are thrown as standard common language runtime exceptions.) <xref:System.Data.SqlClient.SqlException> always contains at least one instance of <xref:System.Data.SqlClient.SqlError>.","pos":[0,327],"nodes":[{"content":"This class is created whenever the .NET Framework Data Provider for SQL Server encounters an error generated from the server.","pos":[0,125]},{"content":"(Client side errors are thrown as standard common language runtime exceptions.) <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> always contains at least one instance of <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph>.","pos":[126,327],"source":" (Client side errors are thrown as standard common language runtime exceptions.) <xref:System.Data.SqlClient.SqlException> always contains at least one instance of <xref:System.Data.SqlClient.SqlError>."}]}]},{"pos":[334,784],"content":"Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered. Severity levels from 11 through 16 are generated by the user, and can be corrected by the user. Severity levels from 17 through 25 indicate software or hardware errors. When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.","nodes":[{"content":"Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered. Severity levels from 11 through 16 are generated by the user, and can be corrected by the user. Severity levels from 17 through 25 indicate software or hardware errors. When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.","pos":[0,450],"nodes":[{"content":"Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered.","pos":[0,148]},{"content":"Severity levels from 11 through 16 are generated by the user, and can be corrected by the user.","pos":[149,244]},{"content":"Severity levels from 17 through 25 indicate software or hardware errors.","pos":[245,317]},{"content":"When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.","pos":[318,450]}]}]},{"pos":[791,1175],"content":"The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue. In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command.","nodes":[{"content":"The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue. In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command.","pos":[0,384],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> remains open when the severity level is 19 or less.","pos":[0,98],"source":"The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less."},{"content":"When the severity level is 20 or greater, the server ordinarily closes the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.","pos":[99,217],"source":" When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>."},{"content":"However, the user can reopen the connection and continue.","pos":[218,275]},{"content":"In both cases, a <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is generated by the method executing the command.","pos":[276,384],"source":" In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command."}]}]},{"pos":[1182,1403],"content":"For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of SQL Server Books Online. The <xref:System.Data.SqlClient.SqlException> class maps to SQL Server severity.","nodes":[{"content":"For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of SQL Server Books Online. The <xref:System.Data.SqlClient.SqlException> class maps to SQL Server severity.","pos":[0,221],"nodes":[{"content":"For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of SQL Server Books Online.","pos":[0,140]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> class maps to SQL Server severity.","pos":[141,221],"source":" The <xref:System.Data.SqlClient.SqlException> class maps to SQL Server severity."}]}]},{"pos":[1410,2086],"content":"The following is general information on handling exceptions. Your code should catch exceptions to prevent the application from crashing and to allow displaying a relevant error message to the user.  You can use database transactions to ensure that the data is consistent regardless of what happens in the client application (including a crash). Features like System.Transaction.TransactionScope or the BeginTransaction method (in System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection, and System.Data.SqlClient.SqlConnection) ensure consistent data regardless of exceptions raised by a provider. Transactions can fail, so catch failures and retry the transaction.","nodes":[{"content":"The following is general information on handling exceptions. Your code should catch exceptions to prevent the application from crashing and to allow displaying a relevant error message to the user.  You can use database transactions to ensure that the data is consistent regardless of what happens in the client application (including a crash). Features like System.Transaction.TransactionScope or the BeginTransaction method (in System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection, and System.Data.SqlClient.SqlConnection) ensure consistent data regardless of exceptions raised by a provider. Transactions can fail, so catch failures and retry the transaction.","pos":[0,676],"nodes":[{"content":"The following is general information on handling exceptions.","pos":[0,60]},{"content":"Your code should catch exceptions to prevent the application from crashing and to allow displaying a relevant error message to the user.","pos":[61,197]},{"content":"You can use database transactions to ensure that the data is consistent regardless of what happens in the client application (including a crash).","pos":[199,344]},{"content":"Features like System.Transaction.TransactionScope or the BeginTransaction method (in System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection, and System.Data.SqlClient.SqlConnection) ensure consistent data regardless of exceptions raised by a provider.","pos":[345,608]},{"content":"Transactions can fail, so catch failures and retry the transaction.","pos":[609,676]}]}]},{"pos":[2093,2245],"content":"Note that beginning with  .NET Framework 4.5, <xref:System.Data.SqlClient.SqlException> can return an inner <xref:System.ComponentModel.Win32Exception>.","nodes":[{"content":"Note that beginning with  .NET Framework 4.5, <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> can return an inner <ph id=\"ph2\">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph>.","pos":[0,152],"source":"Note that beginning with  .NET Framework 4.5, <xref:System.Data.SqlClient.SqlException> can return an inner <xref:System.ComponentModel.Win32Exception>."}]},{"pos":[2252,2604],"content":"The exception class of a .Net Framework data provider reports provider-specific errors. For example System.Data.Odbc has OdbcException, System.Data.OleDb has OleDbException, and System.Data.SqlClient has SqlException. For the best level of error detail, catch these exceptions and use the members of these exception classes to get details of the error.","nodes":[{"content":"The exception class of a .Net Framework data provider reports provider-specific errors. For example System.Data.Odbc has OdbcException, System.Data.OleDb has OleDbException, and System.Data.SqlClient has SqlException. For the best level of error detail, catch these exceptions and use the members of these exception classes to get details of the error.","pos":[0,352],"nodes":[{"content":"The exception class of a .Net Framework data provider reports provider-specific errors.","pos":[0,87]},{"content":"For example System.Data.Odbc has OdbcException, System.Data.OleDb has OleDbException, and System.Data.SqlClient has SqlException.","pos":[88,217]},{"content":"For the best level of error detail, catch these exceptions and use the members of these exception classes to get details of the error.","pos":[218,352]}]}]},{"pos":[2611,2857],"content":"In addition to the provider-specific errors, .NET Framework data provider types can raise .NET Framework exceptions such as System.OutOfMemoryException and System.Threading.ThreadAbortException. Recovery from these exceptions may not be possible.","nodes":[{"content":"In addition to the provider-specific errors, .NET Framework data provider types can raise .NET Framework exceptions such as System.OutOfMemoryException and System.Threading.ThreadAbortException. Recovery from these exceptions may not be possible.","pos":[0,246],"nodes":[{"content":"In addition to the provider-specific errors, .NET Framework data provider types can raise .NET Framework exceptions such as System.OutOfMemoryException and System.Threading.ThreadAbortException.","pos":[0,194]},{"content":"Recovery from these exceptions may not be possible.","pos":[195,246]}]}]},{"pos":[2864,3090],"content":"Bad input can cause a .NET Framework data provider type to raise an exception such as System.ArgumentException or System.IndexOutOfRangeException.  Calling a method at the wrong time can raise System.InvalidOperationException.","nodes":[{"content":"Bad input can cause a .NET Framework data provider type to raise an exception such as System.ArgumentException or System.IndexOutOfRangeException.  Calling a method at the wrong time can raise System.InvalidOperationException.","pos":[0,226],"nodes":[{"content":"Bad input can cause a .NET Framework data provider type to raise an exception such as System.ArgumentException or System.IndexOutOfRangeException.","pos":[0,146]},{"content":"Calling a method at the wrong time can raise System.InvalidOperationException.","pos":[148,226]}]}]},{"pos":[3097,3275],"content":"So, in general, write an exception handler that catches any provider specific exceptions as well as exceptions from the common language runtime.  These can be layered as follows:","nodes":[{"content":"So, in general, write an exception handler that catches any provider specific exceptions as well as exceptions from the common language runtime.  These can be layered as follows:","pos":[0,178],"nodes":[{"content":"So, in general, write an exception handler that catches any provider specific exceptions as well as exceptions from the common language runtime.","pos":[0,144]},{"content":"These can be layered as follows:","pos":[146,178]}]}]},{"pos":[3487,3490],"content":"Or:","nodes":[{"content":"Or:","pos":[0,3]}]},{"pos":[3729,4042],"content":"It is also possible for a .NET Framework data provider method call to fail on a thread pool thread with no user code on the stack. In this case, and when using asynchronous method calls, you must register the <xref:System.AppDomain.UnhandledException> event to handle those exceptions and avoid application crash.","nodes":[{"content":"It is also possible for a .NET Framework data provider method call to fail on a thread pool thread with no user code on the stack. In this case, and when using asynchronous method calls, you must register the <xref:System.AppDomain.UnhandledException> event to handle those exceptions and avoid application crash.","pos":[0,313],"nodes":[{"content":"It is also possible for a .NET Framework data provider method call to fail on a thread pool thread with no user code on the stack.","pos":[0,130]},{"content":"In this case, and when using asynchronous method calls, you must register the <ph id=\"ph1\">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle those exceptions and avoid application crash.","pos":[131,313],"source":" In this case, and when using asynchronous method calls, you must register the <xref:System.AppDomain.UnhandledException> event to handle those exceptions and avoid application crash."}]}]}],"pos":[1197,5292],"yaml":true,"extradata":"MT"},{"content":"Gets the severity level of the error returned from the .NET Framework Data Provider for SQL Server.","nodes":[{"pos":[0,99],"content":"Gets the severity level of the error returned from the .NET Framework Data Provider for SQL Server.","nodes":[{"content":"Gets the severity level of the error returned from the .NET Framework Data Provider for SQL Server.","pos":[0,99]}]}],"pos":[7621,7721],"yaml":true},{"content":"Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered. Severity levels from 11 through 16 are generated by the user, and can be corrected by the user. Severity levels from 17 through 25 indicate software or hardware errors. When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.  \n  \n The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue. In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command.  \n  \n For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of the SQL Server documentation.  \n  \n This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Class%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"pos":[0,450],"content":"Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered. Severity levels from 11 through 16 are generated by the user, and can be corrected by the user. Severity levels from 17 through 25 indicate software or hardware errors. When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.","nodes":[{"content":"Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered. Severity levels from 11 through 16 are generated by the user, and can be corrected by the user. Severity levels from 17 through 25 indicate software or hardware errors. When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.","pos":[0,450],"nodes":[{"content":"Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered.","pos":[0,148]},{"content":"Severity levels from 11 through 16 are generated by the user, and can be corrected by the user.","pos":[149,244]},{"content":"Severity levels from 17 through 25 indicate software or hardware errors.","pos":[245,317]},{"content":"When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.","pos":[318,450]}]}]},{"pos":[457,841],"content":"The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue. In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command.","nodes":[{"content":"The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue. In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command.","pos":[0,384],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> remains open when the severity level is 19 or less.","pos":[0,98],"source":"The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less."},{"content":"When the severity level is 20 or greater, the server ordinarily closes the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.","pos":[99,217],"source":" When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>."},{"content":"However, the user can reopen the connection and continue.","pos":[218,275]},{"content":"In both cases, a <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is generated by the method executing the command.","pos":[276,384],"source":" In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command."}]}]},{"pos":[848,993],"content":"For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of the SQL Server documentation.","nodes":[{"content":"For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of the SQL Server documentation.","pos":[0,145]}]},{"pos":[1000,1201],"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Class%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"content":"This is a wrapper for the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlError.Class%2A&gt;</ph> property of the first <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.","pos":[0,201],"source":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Class%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property."}]}],"pos":[7732,8942],"yaml":true,"extradata":"MT"},{"content":"A value from 1 to 25 that indicates the severity level of the error.","nodes":[{"pos":[0,68],"content":"A value from 1 to 25 that indicates the severity level of the error.","nodes":[{"content":"A value from 1 to 25 that indicates the severity level of the error.","pos":[0,68]}]}],"pos":[9552,9621],"yaml":true},{"content":"Represents the client connection ID. For more information, see [Data Tracing in ADO.NET](~/docs/framework/data/adonet/data-tracing.md).","nodes":[{"pos":[0,135],"content":"Represents the client connection ID. For more information, see [Data Tracing in ADO.NET](~/docs/framework/data/adonet/data-tracing.md).","nodes":[{"content":"Represents the client connection ID.","pos":[0,36]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Data Tracing in ADO.NET<ept id=\"p1\">](~/docs/framework/data/adonet/data-tracing.md)</ept>.","pos":[37,135],"source":" For more information, see [Data Tracing in ADO.NET](~/docs/framework/data/adonet/data-tracing.md)."}]}],"pos":[10922,11058],"yaml":true},{"content":"For a code sample, see <xref:System.Data.SqlClient.SqlException.ToString%2A>.","nodes":[{"pos":[0,77],"content":"For a code sample, see <xref:System.Data.SqlClient.SqlException.ToString%2A>.","nodes":[{"content":"For a code sample, see <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlException.ToString%2A&gt;</ph>.","pos":[0,77],"source":"For a code sample, see <xref:System.Data.SqlClient.SqlException.ToString%2A>."}]}],"pos":[11069,11147],"yaml":true,"extradata":"MT"},{"content":"Returns the client connection ID.","nodes":[{"pos":[0,33],"content":"Returns the client connection ID.","nodes":[{"content":"Returns the client connection ID.","pos":[0,33]}]}],"pos":[11265,11299],"yaml":true},{"content":"Gets a collection of one or more <xref href=\"System.Data.SqlClient.SqlError\"></xref> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for SQL Server.","nodes":[{"pos":[0,202],"content":"Gets a collection of one or more <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlError\"&gt;&lt;/xref&gt;</ph> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for SQL Server.","source":"Gets a collection of one or more <xref href=\"System.Data.SqlClient.SqlError\"></xref> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for SQL Server."}],"pos":[12541,12744],"yaml":true},{"content":"The <xref:System.Data.SqlClient.SqlErrorCollection> class always contains at least one instance of the <xref:System.Data.SqlClient.SqlError> class.  \n  \n This is a wrapper for <xref:System.Data.SqlClient.SqlErrorCollection>. For more information on SQL Server engine errors, see SQL Server Books Online.","nodes":[{"pos":[0,147],"content":"The <xref:System.Data.SqlClient.SqlErrorCollection> class always contains at least one instance of the <xref:System.Data.SqlClient.SqlError> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> class always contains at least one instance of the <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> class.","pos":[0,147],"source":"The <xref:System.Data.SqlClient.SqlErrorCollection> class always contains at least one instance of the <xref:System.Data.SqlClient.SqlError> class."}]},{"pos":[154,303],"content":"This is a wrapper for <xref:System.Data.SqlClient.SqlErrorCollection>. For more information on SQL Server engine errors, see SQL Server Books Online.","nodes":[{"content":"This is a wrapper for <xref:System.Data.SqlClient.SqlErrorCollection>. For more information on SQL Server engine errors, see SQL Server Books Online.","pos":[0,149],"nodes":[{"content":"This is a wrapper for <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph>.","pos":[0,70],"source":"This is a wrapper for <xref:System.Data.SqlClient.SqlErrorCollection>."},{"content":"For more information on SQL Server engine errors, see SQL Server Books Online.","pos":[71,149]}]}]}],"pos":[12755,13063],"yaml":true,"extradata":"MT"},{"content":"The collected instances of the <xref href=\"System.Data.SqlClient.SqlError\"></xref> class.","nodes":[{"pos":[0,89],"content":"The collected instances of the <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlError\"&gt;&lt;/xref&gt;</ph> class.","source":"The collected instances of the <xref href=\"System.Data.SqlClient.SqlError\"></xref> class."}],"pos":[13699,13789],"yaml":true},{"content":"Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with information about the exception.","nodes":[{"pos":[0,114],"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> with information about the exception.","source":"Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with information about the exception."}],"pos":[15453,15568],"yaml":true},{"content":"`GetObjectData` sets a `SerializationInfo` with all the exception object data targeted for serialization. During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.","nodes":[{"pos":[0,218],"content":"`GetObjectData` sets a `SerializationInfo` with all the exception object data targeted for serialization. During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.","nodes":[{"content":"<ph id=\"ph1\">`GetObjectData`</ph> sets a <ph id=\"ph2\">`SerializationInfo`</ph> with all the exception object data targeted for serialization.","pos":[0,105],"source":"`GetObjectData` sets a `SerializationInfo` with all the exception object data targeted for serialization."},{"content":"During deserialization, the exception is reconstituted from the <ph id=\"ph1\">`SerializationInfo`</ph> transmitted over the stream.","pos":[106,218],"source":" During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream."}]}],"pos":[15579,15800],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.","nodes":[{"pos":[0,143],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> that holds the serialized object data about the exception being thrown.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown."}],"pos":[16073,16217],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.","nodes":[{"pos":[0,140],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> that contains contextual information about the source or destination.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination."}],"pos":[16312,16453],"yaml":true},{"content":"The <code>si</code> parameter is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,78],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">si</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"The <code>si</code> parameter is a null reference (`Nothing` in Visual Basic)."}],"pos":[16631,16710],"yaml":true},{"content":"Gets the line number within the Transact-SQL command batch or stored procedure that generated the error.","nodes":[{"pos":[0,104],"content":"Gets the line number within the Transact-SQL command batch or stored procedure that generated the error.","nodes":[{"content":"Gets the line number within the Transact-SQL command batch or stored procedure that generated the error.","pos":[0,104]}]}],"pos":[17828,17933],"yaml":true},{"content":"The line numbering starts at 1; if 0 is returned, the line number is not applicable.  \n  \n This is a wrapper for the <xref:System.Data.SqlClient.SqlError.LineNumber%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"pos":[0,84],"content":"The line numbering starts at 1; if 0 is returned, the line number is not applicable.","nodes":[{"content":"The line numbering starts at 1; if 0 is returned, the line number is not applicable.","pos":[0,84]}]},{"pos":[91,297],"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.LineNumber%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"content":"This is a wrapper for the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlError.LineNumber%2A&gt;</ph> property of the first <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.","pos":[0,206],"source":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.LineNumber%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property."}]}],"pos":[17944,18246],"yaml":true,"extradata":"MT"},{"content":"The line number within the Transact-SQL command batch or stored procedure that generated the error.","nodes":[{"pos":[0,99],"content":"The line number within the Transact-SQL command batch or stored procedure that generated the error.","nodes":[{"content":"The line number within the Transact-SQL command batch or stored procedure that generated the error.","pos":[0,99]}]}],"pos":[18861,18961],"yaml":true},{"content":"Gets a number that identifies the type of error.","nodes":[{"pos":[0,48],"content":"Gets a number that identifies the type of error.","nodes":[{"content":"Gets a number that identifies the type of error.","pos":[0,48]}]}],"pos":[20998,21047],"yaml":true},{"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Number%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property. For more information on SQL Server engine errors, see SQL Server Books Online.","nodes":[{"pos":[0,281],"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Number%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property. For more information on SQL Server engine errors, see SQL Server Books Online.","nodes":[{"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Number%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property. For more information on SQL Server engine errors, see SQL Server Books Online.","pos":[0,281],"nodes":[{"content":"This is a wrapper for the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlError.Number%2A&gt;</ph> property of the first <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.","pos":[0,202],"source":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Number%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property."},{"content":"For more information on SQL Server engine errors, see SQL Server Books Online.","pos":[203,281]}]}]}],"pos":[21058,21340],"yaml":true,"extradata":"MT"},{"content":"The number that identifies the type of error.","nodes":[{"pos":[0,45],"content":"The number that identifies the type of error.","nodes":[{"content":"The number that identifies the type of error.","pos":[0,45]}]}],"pos":[21951,21997],"yaml":true},{"content":"Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.","nodes":[{"pos":[0,94],"content":"Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.","nodes":[{"content":"Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.","pos":[0,94]}]}],"pos":[23245,23340],"yaml":true},{"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Procedure%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"pos":[0,205],"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Procedure%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"content":"This is a wrapper for the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlError.Procedure%2A&gt;</ph> property of the first <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.","pos":[0,205],"source":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Procedure%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property."}]}],"pos":[23351,23557],"yaml":true,"extradata":"MT"},{"content":"The name of the stored procedure or RPC.","nodes":[{"pos":[0,40],"content":"The name of the stored procedure or RPC.","nodes":[{"content":"The name of the stored procedure or RPC.","pos":[0,40]}]}],"pos":[24175,24216],"yaml":true},{"content":"Gets the name of the computer that is running an instance of SQL Server that generated the error.","nodes":[{"pos":[0,97],"content":"Gets the name of the computer that is running an instance of SQL Server that generated the error.","nodes":[{"content":"Gets the name of the computer that is running an instance of SQL Server that generated the error.","pos":[0,97]}]}],"pos":[25449,25547],"yaml":true},{"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Server%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"pos":[0,202],"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Server%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"content":"This is a wrapper for the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlError.Server%2A&gt;</ph> property of the first <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.","pos":[0,202],"source":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Server%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property."}]}],"pos":[25558,25761],"yaml":true,"extradata":"MT"},{"content":"The name of the computer running an instance of SQL Server.","nodes":[{"pos":[0,59],"content":"The name of the computer running an instance of SQL Server.","nodes":[{"content":"The name of the computer running an instance of SQL Server.","pos":[0,59]}]}],"pos":[26376,26436],"yaml":true},{"content":"Gets the name of the provider that generated the error.","nodes":[{"pos":[0,55],"content":"Gets the name of the provider that generated the error.","nodes":[{"content":"Gets the name of the provider that generated the error.","pos":[0,55]}]}],"pos":[27666,27722],"yaml":true},{"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Source%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"pos":[0,202],"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Source%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"content":"This is a wrapper for the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlError.Source%2A&gt;</ph> property of the first <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.","pos":[0,202],"source":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Source%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property."}]}],"pos":[27733,27936],"yaml":true,"extradata":"MT"},{"content":"The name of the provider that generated the error.","nodes":[{"pos":[0,50],"content":"The name of the provider that generated the error.","nodes":[{"content":"The name of the provider that generated the error.","pos":[0,50]}]}],"pos":[28560,28611],"yaml":true},{"content":"Gets a numeric error code from SQL Server that represents an error, warning or \"no data found\" message. For more information about how to decode these values, see SQL Server Books Online.","nodes":[{"pos":[0,187],"content":"Gets a numeric error code from SQL Server that represents an error, warning or \"no data found\" message. For more information about how to decode these values, see SQL Server Books Online.","nodes":[{"content":"Gets a numeric error code from SQL Server that represents an error, warning or \"no data found\" message. For more information about how to decode these values, see SQL Server Books Online.","pos":[0,187],"nodes":[{"content":"Gets a numeric error code from SQL Server that represents an error, warning or \"no data found\" message.","pos":[0,103]},{"content":"For more information about how to decode these values, see SQL Server Books Online.","pos":[104,187]}]}]}],"pos":[29835,30023],"yaml":true},{"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.State%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"pos":[0,201],"content":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.State%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.","nodes":[{"content":"This is a wrapper for the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlError.State%2A&gt;</ph> property of the first <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.","pos":[0,201],"source":"This is a wrapper for the <xref:System.Data.SqlClient.SqlError.State%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property."}]}],"pos":[30034,30236],"yaml":true,"extradata":"MT"},{"content":"The number representing the error code.","nodes":[{"pos":[0,39],"content":"The number representing the error code.","nodes":[{"content":"The number representing the error code.","pos":[0,39]}]}],"pos":[30846,30886],"yaml":true},{"content":"Returns a string that represents the current <xref href=\"System.Data.SqlClient.SqlException\"></xref> object, and includes the client connection ID (for more information, see <xref href=\"System.Data.SqlClient.SqlException.ClientConnectionId\"></xref>).","nodes":[{"pos":[0,250],"content":"Returns a string that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlException\"&gt;&lt;/xref&gt;</ph> object, and includes the client connection ID (for more information, see <ph id=\"ph2\">&lt;xref href=\"System.Data.SqlClient.SqlException.ClientConnectionId\"&gt;&lt;/xref&gt;</ph>).","source":"Returns a string that represents the current <xref href=\"System.Data.SqlClient.SqlException\"></xref> object, and includes the client connection ID (for more information, see <xref href=\"System.Data.SqlClient.SqlException.ClientConnectionId\"></xref>)."}],"pos":[32131,32382],"yaml":true},{"content":"A string that represents the current <xref href=\"System.Data.SqlClient.SqlException\"></xref> object.<xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,135],"content":"A string that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Data.SqlClient.SqlException\"&gt;&lt;/xref&gt;</ph> object.<ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"A string that represents the current <xref href=\"System.Data.SqlClient.SqlException\"></xref> object.<xref href=\"System.String\"></xref>."}],"pos":[33975,34111],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.SqlClient.SqlException\n  commentId: T:System.Data.SqlClient.SqlException\n  id: SqlException\n  children:\n  - System.Data.SqlClient.SqlException.Class\n  - System.Data.SqlClient.SqlException.ClientConnectionId\n  - System.Data.SqlClient.SqlException.Errors\n  - System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Data.SqlClient.SqlException.LineNumber\n  - System.Data.SqlClient.SqlException.Message\n  - System.Data.SqlClient.SqlException.Number\n  - System.Data.SqlClient.SqlException.Procedure\n  - System.Data.SqlClient.SqlException.Server\n  - System.Data.SqlClient.SqlException.Source\n  - System.Data.SqlClient.SqlException.State\n  - System.Data.SqlClient.SqlException.ToString\n  langs:\n  - csharp\n  name: SqlException\n  nameWithType: SqlException\n  fullName: System.Data.SqlClient.SqlException\n  type: Class\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: The exception that is thrown when SQL Server returns a warning or error. This class cannot be inherited.\n  remarks: \"This class is created whenever the .NET Framework Data Provider for SQL Server encounters an error generated from the server. (Client side errors are thrown as standard common language runtime exceptions.) <xref:System.Data.SqlClient.SqlException> always contains at least one instance of <xref:System.Data.SqlClient.SqlError>.  \\n  \\n Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered. Severity levels from 11 through 16 are generated by the user, and can be corrected by the user. Severity levels from 17 through 25 indicate software or hardware errors. When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.  \\n  \\n The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue. In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command.  \\n  \\n For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of SQL Server Books Online. The <xref:System.Data.SqlClient.SqlException> class maps to SQL Server severity.  \\n  \\n The following is general information on handling exceptions. Your code should catch exceptions to prevent the application from crashing and to allow displaying a relevant error message to the user.  You can use database transactions to ensure that the data is consistent regardless of what happens in the client application (including a crash). Features like System.Transaction.TransactionScope or the BeginTransaction method (in System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection, and System.Data.SqlClient.SqlConnection) ensure consistent data regardless of exceptions raised by a provider. Transactions can fail, so catch failures and retry the transaction.  \\n  \\n Note that beginning with  .NET Framework 4.5, <xref:System.Data.SqlClient.SqlException> can return an inner <xref:System.ComponentModel.Win32Exception>.  \\n  \\n The exception class of a .Net Framework data provider reports provider-specific errors. For example System.Data.Odbc has OdbcException, System.Data.OleDb has OleDbException, and System.Data.SqlClient has SqlException. For the best level of error detail, catch these exceptions and use the members of these exception classes to get details of the error.  \\n  \\n In addition to the provider-specific errors, .NET Framework data provider types can raise .NET Framework exceptions such as System.OutOfMemoryException and System.Threading.ThreadAbortException. Recovery from these exceptions may not be possible.  \\n  \\n Bad input can cause a .NET Framework data provider type to raise an exception such as System.ArgumentException or System.IndexOutOfRangeException.  Calling a method at the wrong time can raise System.InvalidOperationException.  \\n  \\n So, in general, write an exception handler that catches any provider specific exceptions as well as exceptions from the common language runtime.  These can be layered as follows:  \\n  \\n```  \\nTry {  \\n   // code here  \\n}  \\ncatch (SqlException odbcEx) {  \\n   // Handle more specific SqlException exception here.  \\n}  \\ncatch (Exception ex) {  \\n   // Handle generic ones here.  \\n}  \\n  \\n```  \\n  \\n Or:  \\n  \\n```  \\nTry {  \\n   // code here  \\n}  \\ncatch (Exception ex) {  \\n   if (ex is SqlException) {  \\n      // Handle more specific SqlException exception here.  \\n   }  \\n   Else {  \\n      // Handle generic ones here.  \\n   }  \\n}  \\n  \\n```  \\n  \\n It is also possible for a .NET Framework data provider method call to fail on a thread pool thread with no user code on the stack. In this case, and when using asynchronous method calls, you must register the <xref:System.AppDomain.UnhandledException> event to handle those exceptions and avoid application crash.\"\n  example:\n  - \"The following example generates a <xref:System.Data.SqlClient.SqlException> and then displays the exception.  \\n  \\n [!code-csharp[Classic WebData SqlException Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlException Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public sealed class SqlException : System.Data.Common.DbException'\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.Data.Common.DbException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.SerializeObjectState\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlException.Class\n  commentId: P:System.Data.SqlClient.SqlException.Class\n  id: Class\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: Class\n  nameWithType: SqlException.Class\n  fullName: SqlException.Class\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the severity level of the error returned from the .NET Framework Data Provider for SQL Server.\n  remarks: \"Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered. Severity levels from 11 through 16 are generated by the user, and can be corrected by the user. Severity levels from 17 through 25 indicate software or hardware errors. When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.  \\n  \\n The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue. In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command.  \\n  \\n For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of the SQL Server documentation.  \\n  \\n This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Class%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.\"\n  example:\n  - \"The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \\n  \\n [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]\"\n  syntax:\n    content: public byte Class { get; }\n    return:\n      type: System.Byte\n      description: A value from 1 to 25 that indicates the severity level of the error.\n  overload: System.Data.SqlClient.SqlException.Class*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlException.ClientConnectionId\n  commentId: P:System.Data.SqlClient.SqlException.ClientConnectionId\n  id: ClientConnectionId\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: ClientConnectionId\n  nameWithType: SqlException.ClientConnectionId\n  fullName: SqlException.ClientConnectionId\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Represents the client connection ID. For more information, see [Data Tracing in ADO.NET](~/docs/framework/data/adonet/data-tracing.md).\n  remarks: For a code sample, see <xref:System.Data.SqlClient.SqlException.ToString%2A>.\n  syntax:\n    content: public Guid ClientConnectionId { get; }\n    return:\n      type: System.Guid\n      description: Returns the client connection ID.\n  overload: System.Data.SqlClient.SqlException.ClientConnectionId*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlException.Errors\n  commentId: P:System.Data.SqlClient.SqlException.Errors\n  id: Errors\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: Errors\n  nameWithType: SqlException.Errors\n  fullName: SqlException.Errors\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets a collection of one or more <xref href=\"System.Data.SqlClient.SqlError\"></xref> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for SQL Server.\n  remarks: \"The <xref:System.Data.SqlClient.SqlErrorCollection> class always contains at least one instance of the <xref:System.Data.SqlClient.SqlError> class.  \\n  \\n This is a wrapper for <xref:System.Data.SqlClient.SqlErrorCollection>. For more information on SQL Server engine errors, see SQL Server Books Online.\"\n  example:\n  - \"The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \\n  \\n [!code-csharp[Classic WebData SqlError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlError Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlError Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.SqlClient.SqlErrorCollection Errors { get; }\n    return:\n      type: System.Data.SqlClient.SqlErrorCollection\n      description: The collected instances of the <xref href=\"System.Data.SqlClient.SqlError\"></xref> class.\n  overload: System.Data.SqlClient.SqlException.Errors*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: SqlException.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: SqlException.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - System.Data\n  - System.Data.SqlClient\n  namespace: System.Data.SqlClient\n  summary: Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> with information about the exception.\n  remarks: '`GetObjectData` sets a `SerializationInfo` with all the exception object data targeted for serialization. During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.'\n  syntax:\n    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: si\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.\n  overload: System.Data.SqlClient.SqlException.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>si</code> parameter is a null reference (`Nothing` in Visual Basic).\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlException.LineNumber\n  commentId: P:System.Data.SqlClient.SqlException.LineNumber\n  id: LineNumber\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: LineNumber\n  nameWithType: SqlException.LineNumber\n  fullName: SqlException.LineNumber\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the line number within the Transact-SQL command batch or stored procedure that generated the error.\n  remarks: \"The line numbering starts at 1; if 0 is returned, the line number is not applicable.  \\n  \\n This is a wrapper for the <xref:System.Data.SqlClient.SqlError.LineNumber%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.\"\n  example:\n  - \"The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \\n  \\n [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]\"\n  syntax:\n    content: public int LineNumber { get; }\n    return:\n      type: System.Int32\n      description: The line number within the Transact-SQL command batch or stored procedure that generated the error.\n  overload: System.Data.SqlClient.SqlException.LineNumber*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlException.Message\n  commentId: P:System.Data.SqlClient.SqlException.Message\n  id: Message\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: Message\n  nameWithType: SqlException.Message\n  fullName: SqlException.Message\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.SqlClient\n  syntax:\n    content: public override string Message { get; }\n    return:\n      type: System.String\n      description: ''\n  overload: System.Data.SqlClient.SqlException.Message*\n  exceptions: []\n  version:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.Number\n  commentId: P:System.Data.SqlClient.SqlException.Number\n  id: Number\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: Number\n  nameWithType: SqlException.Number\n  fullName: SqlException.Number\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets a number that identifies the type of error.\n  remarks: This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Number%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property. For more information on SQL Server engine errors, see SQL Server Books Online.\n  example:\n  - \"The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \\n  \\n [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]\"\n  syntax:\n    content: public int Number { get; }\n    return:\n      type: System.Int32\n      description: The number that identifies the type of error.\n  overload: System.Data.SqlClient.SqlException.Number*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlException.Procedure\n  commentId: P:System.Data.SqlClient.SqlException.Procedure\n  id: Procedure\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: Procedure\n  nameWithType: SqlException.Procedure\n  fullName: SqlException.Procedure\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.\n  remarks: This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Procedure%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.\n  example:\n  - \"The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \\n  \\n [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]\"\n  syntax:\n    content: public string Procedure { get; }\n    return:\n      type: System.String\n      description: The name of the stored procedure or RPC.\n  overload: System.Data.SqlClient.SqlException.Procedure*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlException.Server\n  commentId: P:System.Data.SqlClient.SqlException.Server\n  id: Server\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: Server\n  nameWithType: SqlException.Server\n  fullName: SqlException.Server\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the name of the computer that is running an instance of SQL Server that generated the error.\n  remarks: This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Server%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.\n  example:\n  - \"The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \\n  \\n [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]\"\n  syntax:\n    content: public string Server { get; }\n    return:\n      type: System.String\n      description: The name of the computer running an instance of SQL Server.\n  overload: System.Data.SqlClient.SqlException.Server*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlException.Source\n  commentId: P:System.Data.SqlClient.SqlException.Source\n  id: Source\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: Source\n  nameWithType: SqlException.Source\n  fullName: SqlException.Source\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets the name of the provider that generated the error.\n  remarks: This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Source%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.\n  example:\n  - \"The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \\n  \\n [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override string Source { get; }\n    return:\n      type: System.String\n      description: The name of the provider that generated the error.\n  overload: System.Data.SqlClient.SqlException.Source*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlException.State\n  commentId: P:System.Data.SqlClient.SqlException.State\n  id: State\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: State\n  nameWithType: SqlException.State\n  fullName: SqlException.State\n  type: Property\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Gets a numeric error code from SQL Server that represents an error, warning or \"no data found\" message. For more information about how to decode these values, see SQL Server Books Online.\n  remarks: This is a wrapper for the <xref:System.Data.SqlClient.SqlError.State%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.\n  example:\n  - \"The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.  \\n  \\n [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]\"\n  syntax:\n    content: public byte State { get; }\n    return:\n      type: System.Byte\n      description: The number representing the error code.\n  overload: System.Data.SqlClient.SqlException.State*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.SqlClient.SqlException.ToString\n  commentId: M:System.Data.SqlClient.SqlException.ToString\n  id: ToString\n  parent: System.Data.SqlClient.SqlException\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SqlException.ToString()\n  fullName: SqlException.ToString()\n  type: Method\n  assemblies:\n  - System.Data.SqlClient\n  - System.Data\n  - netstandard\n  namespace: System.Data.SqlClient\n  summary: Returns a string that represents the current <xref href=\"System.Data.SqlClient.SqlException\"></xref> object, and includes the client connection ID (for more information, see <xref href=\"System.Data.SqlClient.SqlException.ClientConnectionId\"></xref>).\n  remarks: ''\n  example:\n  - \"The following C# example shows how a connection attempt to a valid server but non-existent database causes a <xref:System.Data.SqlClient.SqlException>, which includes the client connection ID:  \\n  \\n```  \\nusing System.Data.SqlClient;  \\nusing System;  \\n  \\npublic class A {  \\n   public static void Main() {  \\n      SqlConnection connection = new SqlConnection();  \\n      connection.ConnectionString = \\\"Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true\\\";  \\n      try {  \\n         connection.Open();  \\n      }  \\n      catch (SqlException p) {  \\n         Console.WriteLine(\\\"{0}\\\", p.ClientConnectionId);  \\n         Console.WriteLine(\\\"{0}\\\", p.ToString());  \\n      }  \\n      connection.Close();  \\n   }  \\n}  \\n```  \\n  \\n The following Visual Basic sample is functionally equivalent to the previous (C#) sample:  \\n  \\n```  \\nImports System.Data.SqlClient  \\nImports System  \\n  \\nModule Module1  \\n  \\n    Sub Main()  \\n        Dim connection As New SqlConnection()  \\n        connection.ConnectionString = \\\"Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true\\\"  \\n        Try  \\n            connection.Open()  \\n        Catch p As SqlException  \\n            Console.WriteLine(\\\"{0}\\\", p.ClientConnectionId)  \\n            Console.WriteLine(\\\"{0}\\\", p.ToString())  \\n        End Try  \\n        connection.Close()  \\n    End Sub  \\n  \\nEnd Module  \\n```\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref href=\"System.Data.SqlClient.SqlException\"></xref> object.<xref href=\"System.String\"></xref>.\n  overload: System.Data.SqlClient.SqlException.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Common.DbException\n  parent: System.Data.Common\n  isExternal: false\n  name: DbException\n  nameWithType: DbException\n  fullName: System.Data.Common.DbException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Data.SqlClient.SqlException.Class\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Class\n  nameWithType: SqlException.Class\n  fullName: SqlException.Class\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Data.SqlClient.SqlException.ClientConnectionId\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: ClientConnectionId\n  nameWithType: SqlException.ClientConnectionId\n  fullName: SqlException.ClientConnectionId\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Data.SqlClient.SqlException.Errors\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Errors\n  nameWithType: SqlException.Errors\n  fullName: SqlException.Errors\n- uid: System.Data.SqlClient.SqlErrorCollection\n  parent: System.Data.SqlClient\n  isExternal: false\n  name: SqlErrorCollection\n  nameWithType: SqlErrorCollection\n  fullName: System.Data.SqlClient.SqlErrorCollection\n- uid: System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: SqlException.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: SqlException.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Data.SqlClient.SqlException.LineNumber\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: LineNumber\n  nameWithType: SqlException.LineNumber\n  fullName: SqlException.LineNumber\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.SqlClient.SqlException.Message\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Message\n  nameWithType: SqlException.Message\n  fullName: SqlException.Message\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.SqlClient.SqlException.Number\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Number\n  nameWithType: SqlException.Number\n  fullName: SqlException.Number\n- uid: System.Data.SqlClient.SqlException.Procedure\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Procedure\n  nameWithType: SqlException.Procedure\n  fullName: SqlException.Procedure\n- uid: System.Data.SqlClient.SqlException.Server\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Server\n  nameWithType: SqlException.Server\n  fullName: SqlException.Server\n- uid: System.Data.SqlClient.SqlException.Source\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Source\n  nameWithType: SqlException.Source\n  fullName: SqlException.Source\n- uid: System.Data.SqlClient.SqlException.State\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: State\n  nameWithType: SqlException.State\n  fullName: SqlException.State\n- uid: System.Data.SqlClient.SqlException.ToString\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: ToString()\n  nameWithType: SqlException.ToString()\n  fullName: SqlException.ToString()\n- uid: System.Data.SqlClient.SqlException.Class*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Class\n  nameWithType: SqlException.Class\n  fullName: SqlException.Class\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.ClientConnectionId*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: ClientConnectionId\n  nameWithType: SqlException.ClientConnectionId\n  fullName: SqlException.ClientConnectionId\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.Errors*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Errors\n  nameWithType: SqlException.Errors\n  fullName: SqlException.Errors\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.GetObjectData*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: GetObjectData\n  nameWithType: SqlException.GetObjectData\n  fullName: SqlException.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.LineNumber*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: LineNumber\n  nameWithType: SqlException.LineNumber\n  fullName: SqlException.LineNumber\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.Message*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Message\n  nameWithType: SqlException.Message\n  fullName: SqlException.Message\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.Number*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Number\n  nameWithType: SqlException.Number\n  fullName: SqlException.Number\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.Procedure*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Procedure\n  nameWithType: SqlException.Procedure\n  fullName: SqlException.Procedure\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.Server*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Server\n  nameWithType: SqlException.Server\n  fullName: SqlException.Server\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.Source*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: Source\n  nameWithType: SqlException.Source\n  fullName: SqlException.Source\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.State*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: State\n  nameWithType: SqlException.State\n  fullName: SqlException.State\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Data.SqlClient.SqlException.ToString*\n  parent: System.Data.SqlClient.SqlException\n  isExternal: false\n  name: ToString\n  nameWithType: SqlException.ToString\n  fullName: SqlException.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}