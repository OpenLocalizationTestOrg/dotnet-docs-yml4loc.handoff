{"nodes":[{"content":"Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs); also grants the ability to type-cast access rights.","nodes":[{"pos":[0,161],"content":"Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs); also grants the ability to type-cast access rights.","nodes":[{"content":"Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs); also grants the ability to type-cast access rights.","pos":[0,161]}]}],"pos":[3719,3881],"yaml":true},{"content":"Access rights (permissions) are type T, which you can type-cast to or from an int. For example, you can cast a <xref:System.Security.AccessControl.FileSystemRights> as the access rights type, and then use the instance normally. In contrast, <xref:System.Security.AccessControl.ObjectSecurity> always takes access rights of type int.","nodes":[{"pos":[0,332],"content":"Access rights (permissions) are type T, which you can type-cast to or from an int. For example, you can cast a <xref:System.Security.AccessControl.FileSystemRights> as the access rights type, and then use the instance normally. In contrast, <xref:System.Security.AccessControl.ObjectSecurity> always takes access rights of type int.","nodes":[{"content":"Access rights (permissions) are type T, which you can type-cast to or from an int. For example, you can cast a <xref:System.Security.AccessControl.FileSystemRights> as the access rights type, and then use the instance normally. In contrast, <xref:System.Security.AccessControl.ObjectSecurity> always takes access rights of type int.","pos":[0,332],"nodes":[{"content":"Access rights (permissions) are type T, which you can type-cast to or from an int.","pos":[0,82]},{"content":"For example, you can cast a <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.FileSystemRights&gt;</ph> as the access rights type, and then use the instance normally.","pos":[83,227],"source":" For example, you can cast a <xref:System.Security.AccessControl.FileSystemRights> as the access rights type, and then use the instance normally."},{"content":"In contrast, <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> always takes access rights of type int.","pos":[228,332],"source":" In contrast, <xref:System.Security.AccessControl.ObjectSecurity> always takes access rights of type int."}]}]}],"pos":[3892,4225],"yaml":true,"extradata":"MT"},{"content":"The access rights for the object.","nodes":[{"pos":[0,33],"content":"The access rights for the object.","nodes":[{"content":"The access rights for the object.","pos":[0,33]}]}],"pos":[4411,4445],"yaml":true},{"content":"Initializes a new instance of the ObjectSecurity`1 class.","nodes":[{"pos":[0,57],"content":"Initializes a new instance of the ObjectSecurity`1 class.","nodes":[{"content":"Initializes a new instance of the ObjectSecurity`1 class.","pos":[0,57]}]}],"pos":[11908,11966],"yaml":true},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity`1\"&gt;&lt;/xref&gt;</ph> object is a container object.","source":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object."}],"pos":[12175,12293],"yaml":true},{"content":"The type of resource.","nodes":[{"pos":[0,21],"content":"The type of resource.","nodes":[{"content":"The type of resource.","pos":[0,21]}]}],"pos":[12390,12412],"yaml":true},{"content":"Initializes a new instance of the ObjectSecurity`1 class.","nodes":[{"pos":[0,57],"content":"Initializes a new instance of the ObjectSecurity`1 class.","nodes":[{"content":"Initializes a new instance of the ObjectSecurity`1 class.","pos":[0,57]}]}],"pos":[14372,14430],"yaml":true},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity`1\"&gt;&lt;/xref&gt;</ph> object is a container object.","source":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object."}],"pos":[14762,14880],"yaml":true},{"content":"The type of resource.","nodes":[{"pos":[0,21],"content":"The type of resource.","nodes":[{"content":"The type of resource.","pos":[0,21]}]}],"pos":[14977,14999],"yaml":true},{"content":"A handle.","nodes":[{"pos":[0,9],"content":"A handle.","nodes":[{"content":"A handle.","pos":[0,9]}]}],"pos":[15093,15103],"yaml":true},{"content":"The sections to include.","nodes":[{"pos":[0,24],"content":"The sections to include.","nodes":[{"content":"The sections to include.","pos":[0,24]}]}],"pos":[15212,15237],"yaml":true},{"content":"Initializes a new instance of the ObjectSecurity`1 class.","nodes":[{"pos":[0,57],"content":"Initializes a new instance of the ObjectSecurity`1 class.","nodes":[{"content":"Initializes a new instance of the ObjectSecurity`1 class.","pos":[0,57]}]}],"pos":[17101,17159],"yaml":true},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity`1\"&gt;&lt;/xref&gt;</ph> object is a container object.","source":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object."}],"pos":[17450,17568],"yaml":true},{"content":"The type of resource.","nodes":[{"pos":[0,21],"content":"The type of resource.","nodes":[{"content":"The type of resource.","pos":[0,21]}]}],"pos":[17665,17687],"yaml":true},{"content":"The name of the securable object with which the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is associated.","nodes":[{"pos":[0,141],"content":"The name of the securable object with which the new <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity`1\"&gt;&lt;/xref&gt;</ph> object is associated.","source":"The name of the securable object with which the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is associated."}],"pos":[17747,17889],"yaml":true},{"content":"The sections to include.","nodes":[{"pos":[0,24],"content":"The sections to include.","nodes":[{"content":"The sections to include.","pos":[0,24]}]}],"pos":[17998,18023],"yaml":true},{"content":"Initializes a new instance of the ObjectSecurity`1 class.","nodes":[{"pos":[0,57],"content":"Initializes a new instance of the ObjectSecurity`1 class.","nodes":[{"content":"Initializes a new instance of the ObjectSecurity`1 class.","pos":[0,57]}]}],"pos":[20406,20464],"yaml":true},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity`1\"&gt;&lt;/xref&gt;</ph> object is a container object.","source":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object."}],"pos":[20919,21037],"yaml":true},{"content":"The type of resource.","nodes":[{"pos":[0,21],"content":"The type of resource.","nodes":[{"content":"The type of resource.","pos":[0,21]}]}],"pos":[21134,21156],"yaml":true},{"content":"A handle.","nodes":[{"pos":[0,9],"content":"A handle.","nodes":[{"content":"A handle.","pos":[0,9]}]}],"pos":[21250,21260],"yaml":true},{"content":"The sections to include.","nodes":[{"pos":[0,24],"content":"The sections to include.","nodes":[{"content":"The sections to include.","pos":[0,24]}]}],"pos":[21369,21394],"yaml":true},{"content":"A delegate implemented by integrators that provides custom exceptions.","nodes":[{"pos":[0,70],"content":"A delegate implemented by integrators that provides custom exceptions.","nodes":[{"content":"A delegate implemented by integrators that provides custom exceptions.","pos":[0,70]}]}],"pos":[21532,21603],"yaml":true},{"content":"An object that contains contextual information about the source or destination of the exception.","nodes":[{"pos":[0,96],"content":"An object that contains contextual information about the source or destination of the exception.","nodes":[{"content":"An object that contains contextual information about the source or destination of the exception.","pos":[0,96]}]}],"pos":[21675,21772],"yaml":true},{"content":"Initializes a new instance of the ObjectSecurity`1 class.","nodes":[{"pos":[0,57],"content":"Initializes a new instance of the ObjectSecurity`1 class.","nodes":[{"content":"Initializes a new instance of the ObjectSecurity`1 class.","pos":[0,57]}]}],"pos":[24059,24117],"yaml":true},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity`1\"&gt;&lt;/xref&gt;</ph> object is a container object.","source":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object."}],"pos":[24531,24649],"yaml":true},{"content":"The type of resource.","nodes":[{"pos":[0,21],"content":"The type of resource.","nodes":[{"content":"The type of resource.","pos":[0,21]}]}],"pos":[24746,24768],"yaml":true},{"content":"The name of the securable object with which the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is associated.","nodes":[{"pos":[0,141],"content":"The name of the securable object with which the new <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity`1\"&gt;&lt;/xref&gt;</ph> object is associated.","source":"The name of the securable object with which the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is associated."}],"pos":[24828,24970],"yaml":true},{"content":"The sections to include.","nodes":[{"pos":[0,24],"content":"The sections to include.","nodes":[{"content":"The sections to include.","pos":[0,24]}]}],"pos":[25079,25104],"yaml":true},{"content":"A delegate implemented by integrators that provides custom exceptions.","nodes":[{"pos":[0,70],"content":"A delegate implemented by integrators that provides custom exceptions.","nodes":[{"content":"A delegate implemented by integrators that provides custom exceptions.","pos":[0,70]}]}],"pos":[25242,25313],"yaml":true},{"content":"An object that contains contextual information about the source or destination of the exception.","nodes":[{"pos":[0,96],"content":"An object that contains contextual information about the source or destination of the exception.","nodes":[{"content":"An object that contains contextual information about the source or destination of the exception.","pos":[0,96]}]}],"pos":[25385,25482],"yaml":true},{"content":"Gets the Type of the securable object associated with this ObjectSecurity`1 object.","nodes":[{"pos":[0,83],"content":"Gets the Type of the securable object associated with this ObjectSecurity`1 object.","nodes":[{"content":"Gets the Type of the securable object associated with this ObjectSecurity`1 object.","pos":[0,83]}]}],"pos":[26828,26912],"yaml":true},{"content":"The type of the securable object associated with the current instance.","nodes":[{"pos":[0,70],"content":"The type of the securable object associated with the current instance.","nodes":[{"content":"The type of the securable object associated with the current instance.","pos":[0,70]}]}],"pos":[27036,27107],"yaml":true},{"content":"Initializes a new instance of the ObjectAccessRule class that represents a new access control rule for the associated security object.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the ObjectAccessRule class that represents a new access control rule for the associated security object.","nodes":[{"content":"Initializes a new instance of the ObjectAccessRule class that represents a new access control rule for the associated security object.","pos":[0,134]}]}],"pos":[29388,29523],"yaml":true},{"content":"Represents a user account.","nodes":[{"pos":[0,26],"content":"Represents a user account.","nodes":[{"content":"Represents a user account.","pos":[0,26]}]}],"pos":[30023,30050],"yaml":true},{"content":"The access type.","nodes":[{"pos":[0,16],"content":"The access type.","nodes":[{"content":"The access type.","pos":[0,16]}]}],"pos":[30115,30132],"yaml":true},{"content":"``\n    `true` if the access rule is inherited; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">``\n</ph><ph id=\"ph2\">    `true`</ph> if the access rule is inherited; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"``\n    `true` if the access rule is inherited; otherwise, `false`."}],"pos":[30200,30286],"yaml":true},{"content":"Specifies how to propagate access masks to child objects.","nodes":[{"pos":[0,57],"content":"Specifies how to propagate access masks to child objects.","nodes":[{"content":"Specifies how to propagate access masks to child objects.","pos":[0,57]}]}],"pos":[30391,30449],"yaml":true},{"content":"Specifies how to propagate Access Control Entries (ACEs) to child objects.","nodes":[{"pos":[0,74],"content":"Specifies how to propagate Access Control Entries (ACEs) to child objects.","nodes":[{"content":"Specifies how to propagate Access Control Entries (ACEs) to child objects.","pos":[0,74]}]}],"pos":[30554,30629],"yaml":true},{"content":"Specifies whether access is allowed or denied.","nodes":[{"pos":[0,46],"content":"Specifies whether access is allowed or denied.","nodes":[{"content":"Specifies whether access is allowed or denied.","pos":[0,46]}]}],"pos":[30723,30770],"yaml":true},{"content":"Represents a new access control rule for the specified user, with the specified access rights, access control, and flags.","nodes":[{"pos":[0,121],"content":"Represents a new access control rule for the specified user, with the specified access rights, access control, and flags.","nodes":[{"content":"Represents a new access control rule for the specified user, with the specified access rights, access control, and flags.","pos":[0,121]}]}],"pos":[30854,30976],"yaml":true},{"content":"Gets the Type of the object associated with the access rules of this ObjectSecurity`1 object.","nodes":[{"pos":[0,93],"content":"Gets the Type of the object associated with the access rules of this ObjectSecurity`1 object.","nodes":[{"content":"Gets the Type of the object associated with the access rules of this ObjectSecurity`1 object.","pos":[0,93]}]}],"pos":[32328,32422],"yaml":true},{"content":"The Type of the object associated with the access rules of the current instance.","nodes":[{"pos":[0,80],"content":"The Type of the object associated with the access rules of the current instance.","nodes":[{"content":"The Type of the object associated with the access rules of the current instance.","pos":[0,80]}]}],"pos":[32545,32626],"yaml":true},{"content":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.","nodes":[{"pos":[0,124],"content":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.","nodes":[{"content":"Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.","pos":[0,124]}]}],"pos":[34150,34275],"yaml":true},{"content":"The rule to add.","nodes":[{"pos":[0,16],"content":"The rule to add.","nodes":[{"content":"The rule to add.","pos":[0,16]}]}],"pos":[34489,34506],"yaml":true},{"content":"Adds the specified audit rule to the System Access Control List (SACL) associated with this ObjectSecurity`1 object.","nodes":[{"pos":[0,116],"content":"Adds the specified audit rule to the System Access Control List (SACL) associated with this ObjectSecurity`1 object.","nodes":[{"content":"Adds the specified audit rule to the System Access Control List (SACL) associated with this ObjectSecurity`1 object.","pos":[0,116]}]}],"pos":[36017,36134],"yaml":true},{"content":"The audit rule to add.","nodes":[{"pos":[0,22],"content":"The audit rule to add.","nodes":[{"content":"The audit rule to add.","pos":[0,22]}]}],"pos":[36345,36368],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class representing the specified audit rule for the specified user.","nodes":[{"pos":[0,162],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> class representing the specified audit rule for the specified user.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class representing the specified audit rule for the specified user."}],"pos":[38598,38761],"yaml":true},{"content":"Represents a user account.","nodes":[{"pos":[0,26],"content":"Represents a user account.","nodes":[{"content":"Represents a user account.","pos":[0,26]}]}],"pos":[39253,39280],"yaml":true},{"content":"An integer that specifies an access type.","nodes":[{"pos":[0,41],"content":"An integer that specifies an access type.","nodes":[{"content":"An integer that specifies an access type.","pos":[0,41]}]}],"pos":[39345,39387],"yaml":true},{"content":"`true` if the access rule is inherited; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the access rule is inherited; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the access rule is inherited; otherwise, `false`."}],"pos":[39455,39517],"yaml":true},{"content":"Specifies how to propagate access masks to child objects.","nodes":[{"pos":[0,57],"content":"Specifies how to propagate access masks to child objects.","nodes":[{"content":"Specifies how to propagate access masks to child objects.","pos":[0,57]}]}],"pos":[39622,39680],"yaml":true},{"content":"Specifies how to propagate Access Control Entries (ACEs) to child objects.","nodes":[{"pos":[0,74],"content":"Specifies how to propagate Access Control Entries (ACEs) to child objects.","nodes":[{"content":"Specifies how to propagate Access Control Entries (ACEs) to child objects.","pos":[0,74]}]}],"pos":[39785,39860],"yaml":true},{"content":"Describes the type of auditing to perform.","nodes":[{"pos":[0,42],"content":"Describes the type of auditing to perform.","nodes":[{"content":"Describes the type of auditing to perform.","pos":[0,42]}]}],"pos":[39948,39991],"yaml":true},{"content":"Returns the specified audit rule for the specified user.","nodes":[{"pos":[0,56],"content":"Returns the specified audit rule for the specified user.","nodes":[{"content":"Returns the specified audit rule for the specified user.","pos":[0,56]}]}],"pos":[40074,40131],"yaml":true},{"content":"Gets the Type object associated with the audit rules of this ObjectSecurity`1 object.","nodes":[{"pos":[0,85],"content":"Gets the Type object associated with the audit rules of this ObjectSecurity`1 object.","nodes":[{"content":"Gets the Type object associated with the audit rules of this ObjectSecurity`1 object.","pos":[0,85]}]}],"pos":[41476,41562],"yaml":true},{"content":"The Type object associated with the audit rules of the current instance.","nodes":[{"pos":[0,72],"content":"The Type object associated with the audit rules of the current instance.","nodes":[{"content":"The Type object associated with the audit rules of the current instance.","pos":[0,72]}]}],"pos":[41684,41757],"yaml":true},{"content":"Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified handle.","nodes":[{"pos":[0,124],"content":"Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified handle.","nodes":[{"content":"Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified handle.","pos":[0,124]}]}],"pos":[43226,43351],"yaml":true},{"content":"The handle of the securable object with which this ObjectSecurity`1 object is associated.","nodes":[{"pos":[0,89],"content":"The handle of the securable object with which this ObjectSecurity`1 object is associated.","nodes":[{"content":"The handle of the securable object with which this ObjectSecurity`1 object is associated.","pos":[0,89]}]}],"pos":[43555,43645],"yaml":true},{"content":"Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified name.","nodes":[{"pos":[0,122],"content":"Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified name.","nodes":[{"content":"Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified name.","pos":[0,122]}]}],"pos":[45012,45135],"yaml":true},{"content":"The name of the securable object with which this ObjectSecurity`1 object is associated.","nodes":[{"pos":[0,87],"content":"The name of the securable object with which this ObjectSecurity`1 object is associated.","nodes":[{"content":"The name of the securable object with which this ObjectSecurity`1 object is associated.","pos":[0,87]}]}],"pos":[45272,45360],"yaml":true},{"content":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.","nodes":[{"pos":[0,203],"content":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.","nodes":[{"content":"Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.","pos":[0,203]}]}],"pos":[46895,47099],"yaml":true},{"content":"The rule to remove.","nodes":[{"pos":[0,19],"content":"The rule to remove.","nodes":[{"content":"The rule to remove.","pos":[0,19]}]}],"pos":[47316,47336],"yaml":true},{"content":"Returns `true` if the access rule was successfully removed; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"Returns <ph id=\"ph1\">`true`</ph> if the access rule was successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"Returns `true` if the access rule was successfully removed; otherwise, `false`."}],"pos":[47394,47474],"yaml":true},{"content":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.","nodes":[{"pos":[0,188],"content":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.","nodes":[{"content":"Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.","pos":[0,188]}]}],"pos":[49036,49225],"yaml":true},{"content":"The access rule to remove.","nodes":[{"pos":[0,26],"content":"The access rule to remove.","nodes":[{"content":"The access rule to remove.","pos":[0,26]}]}],"pos":[49445,49472],"yaml":true},{"content":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object","nodes":[{"pos":[0,164],"content":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object","nodes":[{"content":"Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object","pos":[0,164]}]}],"pos":[51067,51232],"yaml":true},{"content":"The access rule to remove.","nodes":[{"pos":[0,26],"content":"The access rule to remove.","nodes":[{"content":"The access rule to remove.","pos":[0,26]}]}],"pos":[51457,51484],"yaml":true},{"content":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.","nodes":[{"pos":[0,194],"content":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.","nodes":[{"content":"Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.","pos":[0,194]}]}],"pos":[53024,53219],"yaml":true},{"content":"The audit rule to remove","nodes":[{"pos":[0,24],"content":"The audit rule to remove","nodes":[{"content":"The audit rule to remove","pos":[0,24]}]}],"pos":[53433,53458],"yaml":true},{"content":"Returns `true` if the object was removed; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"Returns <ph id=\"ph1\">`true`</ph> if the object was removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"Returns `true` if the object was removed; otherwise, `false`."}],"pos":[53516,53578],"yaml":true},{"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.","nodes":[{"pos":[0,179],"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.","nodes":[{"content":"Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.","pos":[0,179]}]}],"pos":[55127,55307],"yaml":true},{"content":"The audit rule to remove.","nodes":[{"pos":[0,25],"content":"The audit rule to remove.","nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]}],"pos":[55524,55550],"yaml":true},{"content":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object","nodes":[{"pos":[0,155],"content":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object","nodes":[{"content":"Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object","pos":[0,155]}]}],"pos":[57132,57288],"yaml":true},{"content":"The audit rule to remove.","nodes":[{"pos":[0,25],"content":"The audit rule to remove.","nodes":[{"content":"The audit rule to remove.","pos":[0,25]}]}],"pos":[57510,57536],"yaml":true},{"content":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.","nodes":[{"pos":[0,158],"content":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.","nodes":[{"content":"Removes all access rules in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.","pos":[0,158]}]}],"pos":[59081,59240],"yaml":true},{"content":"The access rule to reset.","nodes":[{"pos":[0,25],"content":"The access rule to reset.","nodes":[{"content":"The access rule to reset.","pos":[0,25]}]}],"pos":[59456,59482],"yaml":true},{"content":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.","nodes":[{"pos":[0,243],"content":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.","nodes":[{"content":"Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.","pos":[0,243]}]}],"pos":[61007,61251],"yaml":true},{"content":"The access rule to set.","nodes":[{"pos":[0,23],"content":"The access rule to set.","nodes":[{"content":"The access rule to set.","pos":[0,23]}]}],"pos":[61465,61489],"yaml":true},{"content":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this ObjectSecurity`1 object and then adds the specified audit rule.","nodes":[{"pos":[0,233],"content":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this ObjectSecurity`1 object and then adds the specified audit rule.","nodes":[{"content":"Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this ObjectSecurity`1 object and then adds the specified audit rule.","pos":[0,233]}]}],"pos":[63000,63234],"yaml":true},{"content":"The audit rule to set.","nodes":[{"pos":[0,22],"content":"The audit rule to set.","nodes":[{"content":"The audit rule to set.","pos":[0,22]}]}],"pos":[63445,63468],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.ObjectSecurity`1\n  commentId: T:System.Security.AccessControl.ObjectSecurity`1\n  id: ObjectSecurity`1\n  children:\n  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)\n  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  - System.Security.AccessControl.ObjectSecurity`1.AccessRightType\n  - System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.ObjectSecurity`1.AccessRuleType\n  - System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.ObjectSecurity`1.AuditRuleType\n  - System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)\n  - System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  - System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})\n  langs:\n  - csharp\n  name: ObjectSecurity<T>\n  nameWithType: ObjectSecurity<T>\n  fullName: System.Security.AccessControl.ObjectSecurity<T>\n  type: Class\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs); also grants the ability to type-cast access rights.\n  remarks: Access rights (permissions) are type T, which you can type-cast to or from an int. For example, you can cast a <xref:System.Security.AccessControl.FileSystemRights> as the access rights type, and then use the instance normally. In contrast, <xref:System.Security.AccessControl.ObjectSecurity> always takes access rights of type int.\n  syntax:\n    content: 'public abstract class ObjectSecurity<T> : System.Security.AccessControl.NativeObjectSecurity where T : struct'\n    typeParameters:\n    - id: T\n      description: The access rights for the object.\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.CommonObjectSecurity\n  - System.Security.AccessControl.NativeObjectSecurity\n  derivedClasses:\n  - System.IO.MemoryMappedFiles.MemoryMappedFileSecurity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)\n  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType)'\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: ObjectSecurity<T>(Boolean, ResourceType)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType)\n  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the ObjectSecurity`1 class.\n  syntax:\n    content: protected ObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object.'\n    - id: resourceType\n      type: System.Security.AccessControl.ResourceType\n      description: The type of resource.\n  overload: System.Security.AccessControl.ObjectSecurity`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)'\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)\n  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the ObjectSecurity`1 class.\n  syntax:\n    content: protected ObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Runtime.InteropServices.SafeHandle safeHandle, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object.'\n    - id: resourceType\n      type: System.Security.AccessControl.ResourceType\n      description: The type of resource.\n    - id: safeHandle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: A handle.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: The sections to include.\n  overload: System.Security.AccessControl.ObjectSecurity`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)\n  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)'\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)\n  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the ObjectSecurity`1 class.\n  syntax:\n    content: protected ObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, string name, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object.'\n    - id: resourceType\n      type: System.Security.AccessControl.ResourceType\n      description: The type of resource.\n    - id: name\n      type: System.String\n      description: The name of the securable object with which the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is associated.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: The sections to include.\n  overload: System.Security.AccessControl.ObjectSecurity`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the ObjectSecurity`1 class.\n  syntax:\n    content: protected ObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Runtime.InteropServices.SafeHandle safeHandle, System.Security.AccessControl.AccessControlSections includeSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object.'\n    - id: resourceType\n      type: System.Security.AccessControl.ResourceType\n      description: The type of resource.\n    - id: safeHandle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: A handle.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: The sections to include.\n    - id: exceptionFromErrorCode\n      type: System.Security.AccessControl.NativeObjectSecurity+ExceptionFromErrorCode\n      description: A delegate implemented by integrators that provides custom exceptions.\n    - id: exceptionContext\n      type: System.Object\n      description: An object that contains contextual information about the source or destination of the exception.\n  overload: System.Security.AccessControl.ObjectSecurity`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the ObjectSecurity`1 class.\n  syntax:\n    content: protected ObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, string name, System.Security.AccessControl.AccessControlSections includeSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is a container object.'\n    - id: resourceType\n      type: System.Security.AccessControl.ResourceType\n      description: The type of resource.\n    - id: name\n      type: System.String\n      description: The name of the securable object with which the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\"></xref> object is associated.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: The sections to include.\n    - id: exceptionFromErrorCode\n      type: System.Security.AccessControl.NativeObjectSecurity+ExceptionFromErrorCode\n      description: A delegate implemented by integrators that provides custom exceptions.\n    - id: exceptionContext\n      type: System.Object\n      description: An object that contains contextual information about the source or destination of the exception.\n  overload: System.Security.AccessControl.ObjectSecurity`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRightType\n  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AccessRightType\n  id: AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: AccessRightType\n  nameWithType: ObjectSecurity<T>.AccessRightType\n  fullName: ObjectSecurity<T>.AccessRightType\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the Type of the securable object associated with this ObjectSecurity`1 object.\n  syntax:\n    content: public override Type AccessRightType { get; }\n    return:\n      type: System.Type\n      description: The type of the securable object associated with the current instance.\n  overload: System.Security.AccessControl.ObjectSecurity`1.AccessRightType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: ObjectSecurity<T>.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: ObjectSecurity<T>.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the ObjectAccessRule class that represents a new access control rule for the associated security object.\n  syntax:\n    content: public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: Represents a user account.\n    - id: accessMask\n      type: System.Int32\n      description: The access type.\n    - id: isInherited\n      type: System.Boolean\n      description: >-\n        ``\n            `true` if the access rule is inherited; otherwise, `false`.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies how to propagate access masks to child objects.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies how to propagate Access Control Entries (ACEs) to child objects.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Specifies whether access is allowed or denied.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: Represents a new access control rule for the specified user, with the specified access rights, access control, and flags.\n  overload: System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AccessRuleType\n  id: AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: AccessRuleType\n  nameWithType: ObjectSecurity<T>.AccessRuleType\n  fullName: ObjectSecurity<T>.AccessRuleType\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the Type of the object associated with the access rules of this ObjectSecurity`1 object.\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    return:\n      type: System.Type\n      description: The Type of the object associated with the access rules of the current instance.\n  overload: System.Security.AccessControl.ObjectSecurity`1.AccessRuleType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})\n  id: AddAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: AddAccessRule(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.AddAccessRule(AccessRule<T>)\n  fullName: ObjectSecurity<T>.AddAccessRule(AccessRule<T>)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.\n  syntax:\n    content: public virtual void AddAccessRule (System.Security.AccessControl.AccessRule<T> rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule`1\n      description: The rule to add.\n  overload: System.Security.AccessControl.ObjectSecurity`1.AddAccessRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})\n  id: AddAuditRule(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: AddAuditRule(AuditRule<T>)\n  nameWithType: ObjectSecurity<T>.AddAuditRule(AuditRule<T>)\n  fullName: ObjectSecurity<T>.AddAuditRule(AuditRule<T>)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Adds the specified audit rule to the System Access Control List (SACL) associated with this ObjectSecurity`1 object.\n  syntax:\n    content: public virtual void AddAuditRule (System.Security.AccessControl.AuditRule<T> rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule`1\n      description: The audit rule to add.\n  overload: System.Security.AccessControl.ObjectSecurity`1.AddAuditRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: ObjectSecurity<T>.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: ObjectSecurity<T>.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class representing the specified audit rule for the specified user.\n  syntax:\n    content: public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: Represents a user account.\n    - id: accessMask\n      type: System.Int32\n      description: An integer that specifies an access type.\n    - id: isInherited\n      type: System.Boolean\n      description: '`true` if the access rule is inherited; otherwise, `false`.'\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies how to propagate access masks to child objects.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies how to propagate Access Control Entries (ACEs) to child objects.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Describes the type of auditing to perform.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: Returns the specified audit rule for the specified user.\n  overload: System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AuditRuleType\n  id: AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: AuditRuleType\n  nameWithType: ObjectSecurity<T>.AuditRuleType\n  fullName: ObjectSecurity<T>.AuditRuleType\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the Type object associated with the audit rules of this ObjectSecurity`1 object.\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    return:\n      type: System.Type\n      description: The Type object associated with the audit rules of the current instance.\n  overload: System.Security.AccessControl.ObjectSecurity`1.AuditRuleType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)\n  id: Persist(System.Runtime.InteropServices.SafeHandle)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: Persist(SafeHandle)\n  nameWithType: ObjectSecurity<T>.Persist(SafeHandle)\n  fullName: ObjectSecurity<T>.Persist(SafeHandle)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified handle.\n  syntax:\n    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle);\n    parameters:\n    - id: handle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: The handle of the securable object with which this ObjectSecurity`1 object is associated.\n  overload: System.Security.AccessControl.ObjectSecurity`1.Persist*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)\n  id: Persist(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: Persist(String)\n  nameWithType: ObjectSecurity<T>.Persist(String)\n  fullName: ObjectSecurity<T>.Persist(String)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified name.\n  syntax:\n    content: protected void Persist (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the securable object with which this ObjectSecurity`1 object is associated.\n  overload: System.Security.AccessControl.ObjectSecurity`1.Persist*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})\n  id: RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: RemoveAccessRule(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAccessRule(AccessRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAccessRule(AccessRule<T>)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.\n  syntax:\n    content: public virtual bool RemoveAccessRule (System.Security.AccessControl.AccessRule<T> rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule`1\n      description: The rule to remove.\n    return:\n      type: System.Boolean\n      description: Returns `true` if the access rule was successfully removed; otherwise, `false`.\n  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})\n  id: RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: RemoveAccessRuleAll(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAccessRuleAll(AccessRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAccessRuleAll(AccessRule<T>)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.\n  syntax:\n    content: public virtual void RemoveAccessRuleAll (System.Security.AccessControl.AccessRule<T> rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule`1\n      description: The access rule to remove.\n  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})\n  id: RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: RemoveAccessRuleSpecific(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAccessRuleSpecific(AccessRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAccessRuleSpecific(AccessRule<T>)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object\n  syntax:\n    content: public virtual void RemoveAccessRuleSpecific (System.Security.AccessControl.AccessRule<T> rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule`1\n      description: The access rule to remove.\n  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})\n  id: RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: RemoveAuditRule(AuditRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAuditRule(AuditRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAuditRule(AuditRule<T>)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.\n  syntax:\n    content: public virtual bool RemoveAuditRule (System.Security.AccessControl.AuditRule<T> rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule`1\n      description: The audit rule to remove\n    return:\n      type: System.Boolean\n      description: Returns `true` if the object was removed; otherwise, `false`.\n  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})\n  id: RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: RemoveAuditRuleAll(AuditRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAuditRuleAll(AuditRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAuditRuleAll(AuditRule<T>)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.\n  syntax:\n    content: public virtual void RemoveAuditRuleAll (System.Security.AccessControl.AuditRule<T> rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule`1\n      description: The audit rule to remove.\n  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})\n  id: RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: RemoveAuditRuleSpecific(AuditRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAuditRuleSpecific(AuditRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAuditRuleSpecific(AuditRule<T>)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object\n  syntax:\n    content: public virtual void RemoveAuditRuleSpecific (System.Security.AccessControl.AuditRule<T> rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule`1\n      description: The audit rule to remove.\n  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  id: ResetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: ResetAccessRule(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.ResetAccessRule(AccessRule<T>)\n  fullName: ObjectSecurity<T>.ResetAccessRule(AccessRule<T>)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.\n  syntax:\n    content: public virtual void ResetAccessRule (System.Security.AccessControl.AccessRule<T> rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule`1\n      description: The access rule to reset.\n  overload: System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  id: SetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: SetAccessRule(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.SetAccessRule(AccessRule<T>)\n  fullName: ObjectSecurity<T>.SetAccessRule(AccessRule<T>)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.\n  syntax:\n    content: public virtual void SetAccessRule (System.Security.AccessControl.AccessRule<T> rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AccessRule`1\n      description: The access rule to set.\n  overload: System.Security.AccessControl.ObjectSecurity`1.SetAccessRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})\n  commentId: M:System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})\n  id: SetAuditRule(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  langs:\n  - csharp\n  name: SetAuditRule(AuditRule<T>)\n  nameWithType: ObjectSecurity<T>.SetAuditRule(AuditRule<T>)\n  fullName: ObjectSecurity<T>.SetAuditRule(AuditRule<T>)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this ObjectSecurity`1 object and then adds the specified audit rule.\n  syntax:\n    content: public virtual void SetAuditRule (System.Security.AccessControl.AuditRule<T> rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.AuditRule`1\n      description: The audit rule to set.\n  overload: System.Security.AccessControl.ObjectSecurity`1.SetAuditRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.NativeObjectSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: NativeObjectSecurity\n  nameWithType: NativeObjectSecurity\n  fullName: System.Security.AccessControl.NativeObjectSecurity\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: ObjectSecurity<T>(Boolean, ResourceType)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType)\n  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.ResourceType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ResourceType\n  nameWithType: ResourceType\n  fullName: System.Security.AccessControl.ResourceType\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)\n  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.Security.AccessControl.AccessControlSections\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlSections\n  nameWithType: AccessControlSections\n  fullName: System.Security.AccessControl.AccessControlSections\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)\n  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AccessRightType\n  nameWithType: ObjectSecurity<T>.AccessRightType\n  fullName: ObjectSecurity<T>.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: ObjectSecurity<T>.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: ObjectSecurity<T>.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: ObjectSecurity<T>.AccessRuleType\n  fullName: ObjectSecurity<T>.AccessRuleType\n- uid: System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AddAccessRule(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.AddAccessRule(AccessRule<T>)\n  fullName: ObjectSecurity<T>.AddAccessRule(AccessRule<T>)\n- uid: System.Security.AccessControl.AccessRule`1\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule<T>\n  nameWithType: AccessRule<T>\n  fullName: System.Security.AccessControl.AccessRule<T>\n- uid: System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AddAuditRule(AuditRule<T>)\n  nameWithType: ObjectSecurity<T>.AddAuditRule(AuditRule<T>)\n  fullName: ObjectSecurity<T>.AddAuditRule(AuditRule<T>)\n- uid: System.Security.AccessControl.AuditRule`1\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule<T>\n  nameWithType: AuditRule<T>\n  fullName: System.Security.AccessControl.AuditRule<T>\n- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: ObjectSecurity<T>.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: ObjectSecurity<T>.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: ObjectSecurity<T>.AuditRuleType\n  fullName: ObjectSecurity<T>.AuditRuleType\n- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: Persist(SafeHandle)\n  nameWithType: ObjectSecurity<T>.Persist(SafeHandle)\n  fullName: ObjectSecurity<T>.Persist(SafeHandle)\n- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: Persist(String)\n  nameWithType: ObjectSecurity<T>.Persist(String)\n  fullName: ObjectSecurity<T>.Persist(String)\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAccessRule(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAccessRule(AccessRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAccessRule(AccessRule<T>)\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAccessRuleAll(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAccessRuleAll(AccessRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAccessRuleAll(AccessRule<T>)\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAccessRuleSpecific(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAccessRuleSpecific(AccessRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAccessRuleSpecific(AccessRule<T>)\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAuditRule(AuditRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAuditRule(AuditRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAuditRule(AuditRule<T>)\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAuditRuleAll(AuditRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAuditRuleAll(AuditRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAuditRuleAll(AuditRule<T>)\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAuditRuleSpecific(AuditRule<T>)\n  nameWithType: ObjectSecurity<T>.RemoveAuditRuleSpecific(AuditRule<T>)\n  fullName: ObjectSecurity<T>.RemoveAuditRuleSpecific(AuditRule<T>)\n- uid: System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: ResetAccessRule(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.ResetAccessRule(AccessRule<T>)\n  fullName: ObjectSecurity<T>.ResetAccessRule(AccessRule<T>)\n- uid: System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: SetAccessRule(AccessRule<T>)\n  nameWithType: ObjectSecurity<T>.SetAccessRule(AccessRule<T>)\n  fullName: ObjectSecurity<T>.SetAccessRule(AccessRule<T>)\n- uid: System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: SetAuditRule(AuditRule<T>)\n  nameWithType: ObjectSecurity<T>.SetAuditRule(AuditRule<T>)\n  fullName: ObjectSecurity<T>.SetAuditRule(AuditRule<T>)\n- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: ObjectSecurity<T>\n  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>\n  fullName: ObjectSecurity<T>.ObjectSecurity<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRightType*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AccessRightType\n  nameWithType: ObjectSecurity<T>.AccessRightType\n  fullName: ObjectSecurity<T>.AccessRightType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AccessRuleFactory\n  nameWithType: ObjectSecurity<T>.AccessRuleFactory\n  fullName: ObjectSecurity<T>.AccessRuleFactory\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleType*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: ObjectSecurity<T>.AccessRuleType\n  fullName: ObjectSecurity<T>.AccessRuleType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.AddAccessRule*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AddAccessRule\n  nameWithType: ObjectSecurity<T>.AddAccessRule\n  fullName: ObjectSecurity<T>.AddAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.AddAuditRule*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AddAuditRule\n  nameWithType: ObjectSecurity<T>.AddAuditRule\n  fullName: ObjectSecurity<T>.AddAuditRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AuditRuleFactory\n  nameWithType: ObjectSecurity<T>.AuditRuleFactory\n  fullName: ObjectSecurity<T>.AuditRuleFactory\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleType*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: ObjectSecurity<T>.AuditRuleType\n  fullName: ObjectSecurity<T>.AuditRuleType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.Persist*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: Persist\n  nameWithType: ObjectSecurity<T>.Persist\n  fullName: ObjectSecurity<T>.Persist\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAccessRule\n  nameWithType: ObjectSecurity<T>.RemoveAccessRule\n  fullName: ObjectSecurity<T>.RemoveAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAccessRuleAll\n  nameWithType: ObjectSecurity<T>.RemoveAccessRuleAll\n  fullName: ObjectSecurity<T>.RemoveAccessRuleAll\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAccessRuleSpecific\n  nameWithType: ObjectSecurity<T>.RemoveAccessRuleSpecific\n  fullName: ObjectSecurity<T>.RemoveAccessRuleSpecific\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAuditRule\n  nameWithType: ObjectSecurity<T>.RemoveAuditRule\n  fullName: ObjectSecurity<T>.RemoveAuditRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAuditRuleAll\n  nameWithType: ObjectSecurity<T>.RemoveAuditRuleAll\n  fullName: ObjectSecurity<T>.RemoveAuditRuleAll\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: RemoveAuditRuleSpecific\n  nameWithType: ObjectSecurity<T>.RemoveAuditRuleSpecific\n  fullName: ObjectSecurity<T>.RemoveAuditRuleSpecific\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: ResetAccessRule\n  nameWithType: ObjectSecurity<T>.ResetAccessRule\n  fullName: ObjectSecurity<T>.ResetAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.SetAccessRule*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: SetAccessRule\n  nameWithType: ObjectSecurity<T>.SetAccessRule\n  fullName: ObjectSecurity<T>.SetAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Security.AccessControl.ObjectSecurity`1.SetAuditRule*\n  parent: System.Security.AccessControl.ObjectSecurity`1\n  isExternal: false\n  name: SetAuditRule\n  nameWithType: ObjectSecurity<T>.SetAuditRule\n  fullName: ObjectSecurity<T>.SetAuditRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n  fullName: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n  fullName: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n  fullName: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n  fullName: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n  fullName: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n  fullName: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetGroup(Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n  fullName: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetOwner(Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n  fullName: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n  fullName: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n  fullName: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n  fullName: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n  fullName: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: CommonObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: CommonObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n  fullName: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle, AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n  fullName: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(String, AccessControlSections)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections)\n  fullName: NativeObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(Boolean, String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  nameWithType: ObjectSecurity.ReadLock()\n  fullName: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  nameWithType: ObjectSecurity.ReadUnlock()\n  fullName: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetGroup(IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n  fullName: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetOwner(IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n  fullName: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  nameWithType: ObjectSecurity.WriteLock()\n  fullName: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  nameWithType: ObjectSecurity.WriteUnlock()\n  fullName: ObjectSecurity.WriteUnlock()\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.AddAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: AddAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.AddAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAccessRules(Boolean, Boolean, Type)\n  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n  fullName: CommonObjectSecurity.GetAccessRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: GetAuditRules(Boolean, Boolean, Type)\n  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n  fullName: CommonObjectSecurity.GetAuditRules(Boolean, Boolean, Type)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(AccessRule)\n  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n  fullName: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRule(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(AuditRule)\n  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n  fullName: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: ResetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.ResetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAccessRule(AccessRule)\n  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)\n  fullName: CommonObjectSecurity.SetAccessRule(AccessRule)\n- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  parent: System.Security.AccessControl.CommonObjectSecurity\n  isExternal: false\n  name: SetAuditRule(AuditRule)\n  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)\n  fullName: CommonObjectSecurity.SetAuditRule(AuditRule)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle, AccessControlSections, Object)\n  nameWithType: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n  fullName: NativeObjectSecurity.Persist(SafeHandle, AccessControlSections, Object)\n- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  parent: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: Persist(String, AccessControlSections, Object)\n  nameWithType: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n  fullName: NativeObjectSecurity.Persist(String, AccessControlSections, Object)\n"}