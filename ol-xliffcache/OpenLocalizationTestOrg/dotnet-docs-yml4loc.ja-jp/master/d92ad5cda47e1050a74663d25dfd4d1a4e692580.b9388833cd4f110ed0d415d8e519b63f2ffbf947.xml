{"nodes":[{"content":"Contains methods to get and update information about a manipulation.","nodes":[{"pos":[0,68],"content":"Contains methods to get and update information about a manipulation.","nodes":[{"content":"Contains methods to get and update information about a manipulation.","pos":[0,68]}]}],"pos":[1615,1684],"yaml":true},{"content":"A manipulation occurs when touch is interpreted as a physical action that is applied to an object. In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], manipulation events interpret input as a translation, expansion, or rotation manipulation. You usually interact with manipulations through the manipulation events that are defined on the <xref:System.Windows.UIElement>. However, the <xref:System.Windows.Input.Manipulation> class defines static methods that you can use to interact with manipulations.  \n  \n For more information about manipulations, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md). For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"pos":[0,526],"content":"A manipulation occurs when touch is interpreted as a physical action that is applied to an object. In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], manipulation events interpret input as a translation, expansion, or rotation manipulation. You usually interact with manipulations through the manipulation events that are defined on the <xref:System.Windows.UIElement>. However, the <xref:System.Windows.Input.Manipulation> class defines static methods that you can use to interact with manipulations.","nodes":[{"content":"A manipulation occurs when touch is interpreted as a physical action that is applied to an object.","pos":[0,98]},{"content":"In <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, manipulation events interpret input as a translation, expansion, or rotation manipulation.","pos":[99,265],"source":" In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], manipulation events interpret input as a translation, expansion, or rotation manipulation."},{"content":"You usually interact with manipulations through the manipulation events that are defined on the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph>.","pos":[266,394],"source":" You usually interact with manipulations through the manipulation events that are defined on the <xref:System.Windows.UIElement>."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Windows.Input.Manipulation&gt;</ph> class defines static methods that you can use to interact with manipulations.","pos":[395,526],"source":" However, the <xref:System.Windows.Input.Manipulation> class defines static methods that you can use to interact with manipulations."}]},{"pos":[533,852],"content":"For more information about manipulations, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md). For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).","nodes":[{"content":"For more information about manipulations, see <bpt id=\"p1\">[</bpt>Input Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.","pos":[0,112],"source":"For more information about manipulations, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md)."},{"content":"For an example of an application that responds to manipulations, see <bpt id=\"p1\">[</bpt>Walkthrough: Creating Your First Touch Application<ept id=\"p1\">](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)</ept>.","pos":[113,319],"source":" For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)."}]}],"pos":[1695,2552],"yaml":true,"extradata":"MT"},{"content":"Associates a <xref href=\"System.Windows.Input.IManipulator\"></xref> object with the specified element.","nodes":[{"pos":[0,102],"content":"Associates a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.IManipulator\"&gt;&lt;/xref&gt;</ph> object with the specified element.","source":"Associates a <xref href=\"System.Windows.Input.IManipulator\"></xref> object with the specified element."}],"pos":[4142,4245],"yaml":true},{"content":"If `element` already has a manipulation associated with it, `manipulator` is added to the existing manipulation. Otherwise, a new manipulation is created.","nodes":[{"pos":[0,154],"content":"If `element` already has a manipulation associated with it, `manipulator` is added to the existing manipulation. Otherwise, a new manipulation is created.","nodes":[{"content":"If <ph id=\"ph1\">`element`</ph> already has a manipulation associated with it, <ph id=\"ph2\">`manipulator`</ph> is added to the existing manipulation.","pos":[0,112],"source":"If `element` already has a manipulation associated with it, `manipulator` is added to the existing manipulation."},{"content":"Otherwise, a new manipulation is created.","pos":[113,154]}]}],"pos":[4256,4411],"yaml":true,"extradata":"MT"},{"content":"The element to associate the manipulator with.","nodes":[{"pos":[0,46],"content":"The element to associate the manipulator with.","nodes":[{"content":"The element to associate the manipulator with.","pos":[0,46]}]}],"pos":[4641,4688],"yaml":true},{"content":"The object that provides the position of the input that creates or is added to a manipulation.","nodes":[{"pos":[0,94],"content":"The object that provides the position of the input that creates or is added to a manipulation.","nodes":[{"content":"The object that provides the position of the input that creates or is added to a manipulation.","pos":[0,94]}]}],"pos":[4775,4870],"yaml":true},{"content":"<code>element</code> is `null`.  \n  \n -or-  \n  \n <code>manipulator</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>element</code> is `null`."},{"pos":[38,42],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[49,84],"content":"<ph id=\"ph1\">&lt;code&gt;manipulator&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>manipulator</code> is `null`."}],"pos":[5048,5139],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement.IsManipulationEnabled\"></xref> property on element is `false`.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.IsManipulationEnabled\"&gt;&lt;/xref&gt;</ph> property on element is <ph id=\"ph2\">`false`</ph>.","source":"The <xref href=\"System.Windows.UIElement.IsManipulationEnabled\"></xref> property on element is `false`."}],"pos":[5249,5353],"yaml":true},{"content":"Completes the active manipulation on the specified element. When called, manipulation input is no longer tracked and inertia on the specified element stops.","nodes":[{"pos":[0,156],"content":"Completes the active manipulation on the specified element. When called, manipulation input is no longer tracked and inertia on the specified element stops.","nodes":[{"content":"Completes the active manipulation on the specified element. When called, manipulation input is no longer tracked and inertia on the specified element stops.","pos":[0,156],"nodes":[{"content":"Completes the active manipulation on the specified element.","pos":[0,59]},{"content":"When called, manipulation input is no longer tracked and inertia on the specified element stops.","pos":[60,156]}]}]}],"pos":[6435,6592],"yaml":true},{"content":"When the <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> method is called, the <xref:System.Windows.UIElement.ManipulationCompleted> event is raised.","nodes":[{"pos":[0,166],"content":"When the <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> method is called, the <xref:System.Windows.UIElement.ManipulationCompleted> event is raised.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Input.Manipulation.CompleteManipulation%2A&gt;</ph> method is called, the <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.ManipulationCompleted&gt;</ph> event is raised.","pos":[0,166],"source":"When the <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> method is called, the <xref:System.Windows.UIElement.ManipulationCompleted> event is raised."}]}],"pos":[6603,6770],"yaml":true,"extradata":"MT"},{"content":"The element on which to complete manipulation.","nodes":[{"pos":[0,46],"content":"The element on which to complete manipulation.","nodes":[{"content":"The element on which to complete manipulation.","pos":[0,46]}]}],"pos":[6959,7006],"yaml":true},{"content":"Gets the container that defines the coordinates for the manipulation.","nodes":[{"pos":[0,69],"content":"Gets the container that defines the coordinates for the manipulation.","nodes":[{"content":"Gets the container that defines the coordinates for the manipulation.","pos":[0,69]}]}],"pos":[8197,8267],"yaml":true},{"content":"The element on which there is an active manipulation.","nodes":[{"pos":[0,53],"content":"The element on which there is an active manipulation.","nodes":[{"content":"The element on which there is an active manipulation.","pos":[0,53]}]}],"pos":[8484,8538],"yaml":true},{"content":"The container that defines the coordinate space.","nodes":[{"pos":[0,48],"content":"The container that defines the coordinate space.","nodes":[{"content":"The container that defines the coordinate space.","pos":[0,48]}]}],"pos":[8610,8659],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.Input.ManipulationModes\"></xref> for the specified element.","nodes":[{"pos":[0,95],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ManipulationModes\"&gt;&lt;/xref&gt;</ph> for the specified element.","source":"Gets the <xref href=\"System.Windows.Input.ManipulationModes\"></xref> for the specified element."}],"pos":[9824,9920],"yaml":true},{"content":"The element for which to get the manipulation mode.","nodes":[{"pos":[0,51],"content":"The element for which to get the manipulation mode.","nodes":[{"content":"The element for which to get the manipulation mode.","pos":[0,51]}]}],"pos":[10142,10194],"yaml":true},{"content":"One of the enumeration values.","nodes":[{"pos":[0,30],"content":"One of the enumeration values.","nodes":[{"content":"One of the enumeration values.","pos":[0,30]}]}],"pos":[10276,10307],"yaml":true},{"content":"Returns an object that describes how a rotation occurs with one point of user input.","nodes":[{"pos":[0,84],"content":"Returns an object that describes how a rotation occurs with one point of user input.","nodes":[{"content":"Returns an object that describes how a rotation occurs with one point of user input.","pos":[0,84]}]}],"pos":[11473,11558],"yaml":true},{"content":"The element on which there is a manipulation.","nodes":[{"pos":[0,45],"content":"The element on which there is a manipulation.","nodes":[{"content":"The element on which there is a manipulation.","pos":[0,45]}]}],"pos":[11781,11827],"yaml":true},{"content":"An object that describes how a rotation occurs with one point of user input.","nodes":[{"pos":[0,76],"content":"An object that describes how a rotation occurs with one point of user input.","nodes":[{"content":"An object that describes how a rotation occurs with one point of user input.","pos":[0,76]}]}],"pos":[11909,11986],"yaml":true},{"content":"Gets a value that indicates whether a manipulation is associated with the specified element.","nodes":[{"pos":[0,92],"content":"Gets a value that indicates whether a manipulation is associated with the specified element.","nodes":[{"content":"Gets a value that indicates whether a manipulation is associated with the specified element.","pos":[0,92]}]}],"pos":[13153,13246],"yaml":true},{"content":"The element to check.","nodes":[{"pos":[0,21],"content":"The element to check.","nodes":[{"content":"The element to check.","pos":[0,21]}]}],"pos":[13435,13457],"yaml":true},{"content":"`true` if a manipulation is associated with the specified element; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if a manipulation is associated with the specified element; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a manipulation is associated with the specified element; otherwise, `false`."}],"pos":[13515,13604],"yaml":true},{"content":"Removes the association between the specified <xref href=\"System.Windows.Input.IManipulator\"></xref> object and the element.","nodes":[{"pos":[0,124],"content":"Removes the association between the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.IManipulator\"&gt;&lt;/xref&gt;</ph> object and the element.","source":"Removes the association between the specified <xref href=\"System.Windows.Input.IManipulator\"></xref> object and the element."}],"pos":[14897,15022],"yaml":true},{"content":"The element to remove the associated manipulator from.","nodes":[{"pos":[0,54],"content":"The element to remove the associated manipulator from.","nodes":[{"content":"The element to remove the associated manipulator from.","pos":[0,54]}]}],"pos":[15255,15310],"yaml":true},{"content":"The object that provides the position of the input.","nodes":[{"pos":[0,51],"content":"The object that provides the position of the input.","nodes":[{"content":"The object that provides the position of the input.","pos":[0,51]}]}],"pos":[15397,15449],"yaml":true},{"content":"Sets the element that defines the coordinates for the manipulation of the specified element.","nodes":[{"pos":[0,92],"content":"Sets the element that defines the coordinates for the manipulation of the specified element.","nodes":[{"content":"Sets the element that defines the coordinates for the manipulation of the specified element.","pos":[0,92]}]}],"pos":[16769,16862],"yaml":true},{"content":"The element with which the manipulation is associated.","nodes":[{"pos":[0,54],"content":"The element with which the manipulation is associated.","nodes":[{"content":"The element with which the manipulation is associated.","pos":[0,54]}]}],"pos":[17095,17150],"yaml":true},{"content":"The container that defines the coordinate space.","nodes":[{"pos":[0,48],"content":"The container that defines the coordinate space.","nodes":[{"content":"The container that defines the coordinate space.","pos":[0,48]}]}],"pos":[17230,17279],"yaml":true},{"content":"Sets the mode of manipulation for the specified element.","nodes":[{"pos":[0,56],"content":"Sets the mode of manipulation for the specified element.","nodes":[{"content":"Sets the mode of manipulation for the specified element.","pos":[0,56]}]}],"pos":[18596,18653],"yaml":true},{"content":"The element on which to set the manipulation mode.","nodes":[{"pos":[0,50],"content":"The element on which to set the manipulation mode.","nodes":[{"content":"The element on which to set the manipulation mode.","pos":[0,50]}]}],"pos":[18886,18937],"yaml":true},{"content":"The new manipulation mode.","nodes":[{"pos":[0,26],"content":"The new manipulation mode.","nodes":[{"content":"The new manipulation mode.","pos":[0,26]}]}],"pos":[19022,19049],"yaml":true},{"content":"Adds parameters to the manipulation of the specified element.","nodes":[{"pos":[0,61],"content":"Adds parameters to the manipulation of the specified element.","nodes":[{"content":"Adds parameters to the manipulation of the specified element.","pos":[0,61]}]}],"pos":[20497,20559],"yaml":true},{"content":"The element that has the manipulation that the parameter is added to.","nodes":[{"pos":[0,69],"content":"The element that has the manipulation that the parameter is added to.","nodes":[{"content":"The element that has the manipulation that the parameter is added to.","pos":[0,69]}]}],"pos":[20880,20950],"yaml":true},{"content":"The parameter to add.","nodes":[{"pos":[0,21],"content":"The parameter to add.","nodes":[{"content":"The parameter to add.","pos":[0,21]}]}],"pos":[21061,21083],"yaml":true},{"content":"Sets the pivot of the single-point manipulation of the specified element.","nodes":[{"pos":[0,73],"content":"Sets the pivot of the single-point manipulation of the specified element.","nodes":[{"content":"Sets the pivot of the single-point manipulation of the specified element.","pos":[0,73]}]}],"pos":[22471,22545],"yaml":true},{"content":"The element that has an active manipulation.","nodes":[{"pos":[0,44],"content":"The element that has an active manipulation.","nodes":[{"content":"The element that has an active manipulation.","pos":[0,44]}]}],"pos":[22780,22825],"yaml":true},{"content":"An object that describes the pivot.","nodes":[{"pos":[0,35],"content":"An object that describes the pivot.","nodes":[{"content":"An object that describes the pivot.","pos":[0,35]}]}],"pos":[22911,22947],"yaml":true},{"content":"Stops the manipulation and begins inertia on the specified element.","nodes":[{"pos":[0,67],"content":"Stops the manipulation and begins inertia on the specified element.","nodes":[{"content":"Stops the manipulation and begins inertia on the specified element.","pos":[0,67]}]}],"pos":[24066,24134],"yaml":true},{"content":"The element on which to begin inertia.","nodes":[{"pos":[0,38],"content":"The element on which to begin inertia.","nodes":[{"content":"The element on which to begin inertia.","pos":[0,38]}]}],"pos":[24315,24354],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.Manipulation\n  commentId: T:System.Windows.Input.Manipulation\n  id: Manipulation\n  children:\n  - System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)\n  - System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)\n  - System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)\n  - System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)\n  - System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)\n  - System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)\n  - System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)\n  - System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)\n  - System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)\n  - System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)\n  - System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)\n  - System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)\n  langs:\n  - csharp\n  name: Manipulation\n  nameWithType: Manipulation\n  fullName: System.Windows.Input.Manipulation\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Contains methods to get and update information about a manipulation.\n  remarks: \"A manipulation occurs when touch is interpreted as a physical action that is applied to an object. In [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], manipulation events interpret input as a translation, expansion, or rotation manipulation. You usually interact with manipulations through the manipulation events that are defined on the <xref:System.Windows.UIElement>. However, the <xref:System.Windows.Input.Manipulation> class defines static methods that you can use to interact with manipulations.  \\n  \\n For more information about manipulations, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md). For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).\"\n  syntax:\n    content: public static class Manipulation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)\n  commentId: M:System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)\n  id: AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: AddManipulator(UIElement, IManipulator)\n  nameWithType: Manipulation.AddManipulator(UIElement, IManipulator)\n  fullName: Manipulation.AddManipulator(UIElement, IManipulator)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Associates a <xref href=\"System.Windows.Input.IManipulator\"></xref> object with the specified element.\n  remarks: If `element` already has a manipulation associated with it, `manipulator` is added to the existing manipulation. Otherwise, a new manipulation is created.\n  syntax:\n    content: public static void AddManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to associate the manipulator with.\n    - id: manipulator\n      type: System.Windows.Input.IManipulator\n      description: The object that provides the position of the input that creates or is added to a manipulation.\n  overload: System.Windows.Input.Manipulation.AddManipulator*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>element</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>manipulator</code> is `null`.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Windows.UIElement.IsManipulationEnabled\"></xref> property on element is `false`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)\n  commentId: M:System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)\n  id: CompleteManipulation(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: CompleteManipulation(UIElement)\n  nameWithType: Manipulation.CompleteManipulation(UIElement)\n  fullName: Manipulation.CompleteManipulation(UIElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Completes the active manipulation on the specified element. When called, manipulation input is no longer tracked and inertia on the specified element stops.\n  remarks: When the <xref:System.Windows.Input.Manipulation.CompleteManipulation%2A> method is called, the <xref:System.Windows.UIElement.ManipulationCompleted> event is raised.\n  syntax:\n    content: public static void CompleteManipulation (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element on which to complete manipulation.\n  overload: System.Windows.Input.Manipulation.CompleteManipulation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)\n  commentId: M:System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)\n  id: GetManipulationContainer(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: GetManipulationContainer(UIElement)\n  nameWithType: Manipulation.GetManipulationContainer(UIElement)\n  fullName: Manipulation.GetManipulationContainer(UIElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the container that defines the coordinates for the manipulation.\n  syntax:\n    content: public static System.Windows.IInputElement GetManipulationContainer (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element on which there is an active manipulation.\n    return:\n      type: System.Windows.IInputElement\n      description: The container that defines the coordinate space.\n  overload: System.Windows.Input.Manipulation.GetManipulationContainer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)\n  commentId: M:System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)\n  id: GetManipulationMode(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: GetManipulationMode(UIElement)\n  nameWithType: Manipulation.GetManipulationMode(UIElement)\n  fullName: Manipulation.GetManipulationMode(UIElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the <xref href=\"System.Windows.Input.ManipulationModes\"></xref> for the specified element.\n  syntax:\n    content: public static System.Windows.Input.ManipulationModes GetManipulationMode (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element for which to get the manipulation mode.\n    return:\n      type: System.Windows.Input.ManipulationModes\n      description: One of the enumeration values.\n  overload: System.Windows.Input.Manipulation.GetManipulationMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)\n  commentId: M:System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)\n  id: GetManipulationPivot(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: GetManipulationPivot(UIElement)\n  nameWithType: Manipulation.GetManipulationPivot(UIElement)\n  fullName: Manipulation.GetManipulationPivot(UIElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Returns an object that describes how a rotation occurs with one point of user input.\n  syntax:\n    content: public static System.Windows.Input.ManipulationPivot GetManipulationPivot (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element on which there is a manipulation.\n    return:\n      type: System.Windows.Input.ManipulationPivot\n      description: An object that describes how a rotation occurs with one point of user input.\n  overload: System.Windows.Input.Manipulation.GetManipulationPivot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)\n  commentId: M:System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)\n  id: IsManipulationActive(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: IsManipulationActive(UIElement)\n  nameWithType: Manipulation.IsManipulationActive(UIElement)\n  fullName: Manipulation.IsManipulationActive(UIElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets a value that indicates whether a manipulation is associated with the specified element.\n  syntax:\n    content: public static bool IsManipulationActive (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to check.\n    return:\n      type: System.Boolean\n      description: '`true` if a manipulation is associated with the specified element; otherwise, `false`.'\n  overload: System.Windows.Input.Manipulation.IsManipulationActive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)\n  commentId: M:System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)\n  id: RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: RemoveManipulator(UIElement, IManipulator)\n  nameWithType: Manipulation.RemoveManipulator(UIElement, IManipulator)\n  fullName: Manipulation.RemoveManipulator(UIElement, IManipulator)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes the association between the specified <xref href=\"System.Windows.Input.IManipulator\"></xref> object and the element.\n  syntax:\n    content: public static void RemoveManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to remove the associated manipulator from.\n    - id: manipulator\n      type: System.Windows.Input.IManipulator\n      description: The object that provides the position of the input.\n  overload: System.Windows.Input.Manipulation.RemoveManipulator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)\n  commentId: M:System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)\n  id: SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: SetManipulationContainer(UIElement, IInputElement)\n  nameWithType: Manipulation.SetManipulationContainer(UIElement, IInputElement)\n  fullName: Manipulation.SetManipulationContainer(UIElement, IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Sets the element that defines the coordinates for the manipulation of the specified element.\n  syntax:\n    content: public static void SetManipulationContainer (System.Windows.UIElement element, System.Windows.IInputElement container);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element with which the manipulation is associated.\n    - id: container\n      type: System.Windows.IInputElement\n      description: The container that defines the coordinate space.\n  overload: System.Windows.Input.Manipulation.SetManipulationContainer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)\n  commentId: M:System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)\n  id: SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: SetManipulationMode(UIElement, ManipulationModes)\n  nameWithType: Manipulation.SetManipulationMode(UIElement, ManipulationModes)\n  fullName: Manipulation.SetManipulationMode(UIElement, ManipulationModes)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Sets the mode of manipulation for the specified element.\n  syntax:\n    content: public static void SetManipulationMode (System.Windows.UIElement element, System.Windows.Input.ManipulationModes mode);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element on which to set the manipulation mode.\n    - id: mode\n      type: System.Windows.Input.ManipulationModes\n      description: The new manipulation mode.\n  overload: System.Windows.Input.Manipulation.SetManipulationMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)\n  commentId: M:System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)\n  id: SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: SetManipulationParameter(UIElement, ManipulationParameters2D)\n  nameWithType: Manipulation.SetManipulationParameter(UIElement, ManipulationParameters2D)\n  fullName: Manipulation.SetManipulationParameter(UIElement, ManipulationParameters2D)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds parameters to the manipulation of the specified element.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public static void SetManipulationParameter (System.Windows.UIElement element, System.Windows.Input.Manipulations.ManipulationParameters2D parameter);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element that has the manipulation that the parameter is added to.\n    - id: parameter\n      type: System.Windows.Input.Manipulations.ManipulationParameters2D\n      description: The parameter to add.\n  overload: System.Windows.Input.Manipulation.SetManipulationParameter*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)\n  commentId: M:System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)\n  id: SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: SetManipulationPivot(UIElement, ManipulationPivot)\n  nameWithType: Manipulation.SetManipulationPivot(UIElement, ManipulationPivot)\n  fullName: Manipulation.SetManipulationPivot(UIElement, ManipulationPivot)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Sets the pivot of the single-point manipulation of the specified element.\n  syntax:\n    content: public static void SetManipulationPivot (System.Windows.UIElement element, System.Windows.Input.ManipulationPivot pivot);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element that has an active manipulation.\n    - id: pivot\n      type: System.Windows.Input.ManipulationPivot\n      description: An object that describes the pivot.\n  overload: System.Windows.Input.Manipulation.SetManipulationPivot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)\n  commentId: M:System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)\n  id: StartInertia(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  langs:\n  - csharp\n  name: StartInertia(UIElement)\n  nameWithType: Manipulation.StartInertia(UIElement)\n  fullName: Manipulation.StartInertia(UIElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Stops the manipulation and begins inertia on the specified element.\n  syntax:\n    content: public static void StartInertia (System.Windows.UIElement element);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element on which to begin inertia.\n  overload: System.Windows.Input.Manipulation.StartInertia*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: AddManipulator(UIElement, IManipulator)\n  nameWithType: Manipulation.AddManipulator(UIElement, IManipulator)\n  fullName: Manipulation.AddManipulator(UIElement, IManipulator)\n- uid: System.Windows.UIElement\n  parent: System.Windows\n  isExternal: false\n  name: UIElement\n  nameWithType: UIElement\n  fullName: System.Windows.UIElement\n- uid: System.Windows.Input.IManipulator\n  parent: System.Windows.Input\n  isExternal: false\n  name: IManipulator\n  nameWithType: IManipulator\n  fullName: System.Windows.Input.IManipulator\n- uid: System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: CompleteManipulation(UIElement)\n  nameWithType: Manipulation.CompleteManipulation(UIElement)\n  fullName: Manipulation.CompleteManipulation(UIElement)\n- uid: System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: GetManipulationContainer(UIElement)\n  nameWithType: Manipulation.GetManipulationContainer(UIElement)\n  fullName: Manipulation.GetManipulationContainer(UIElement)\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: GetManipulationMode(UIElement)\n  nameWithType: Manipulation.GetManipulationMode(UIElement)\n  fullName: Manipulation.GetManipulationMode(UIElement)\n- uid: System.Windows.Input.ManipulationModes\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationModes\n  nameWithType: ManipulationModes\n  fullName: System.Windows.Input.ManipulationModes\n- uid: System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: GetManipulationPivot(UIElement)\n  nameWithType: Manipulation.GetManipulationPivot(UIElement)\n  fullName: Manipulation.GetManipulationPivot(UIElement)\n- uid: System.Windows.Input.ManipulationPivot\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationPivot\n  nameWithType: ManipulationPivot\n  fullName: System.Windows.Input.ManipulationPivot\n- uid: System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: IsManipulationActive(UIElement)\n  nameWithType: Manipulation.IsManipulationActive(UIElement)\n  fullName: Manipulation.IsManipulationActive(UIElement)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: RemoveManipulator(UIElement, IManipulator)\n  nameWithType: Manipulation.RemoveManipulator(UIElement, IManipulator)\n  fullName: Manipulation.RemoveManipulator(UIElement, IManipulator)\n- uid: System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: SetManipulationContainer(UIElement, IInputElement)\n  nameWithType: Manipulation.SetManipulationContainer(UIElement, IInputElement)\n  fullName: Manipulation.SetManipulationContainer(UIElement, IInputElement)\n- uid: System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: SetManipulationMode(UIElement, ManipulationModes)\n  nameWithType: Manipulation.SetManipulationMode(UIElement, ManipulationModes)\n  fullName: Manipulation.SetManipulationMode(UIElement, ManipulationModes)\n- uid: System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: SetManipulationParameter(UIElement, ManipulationParameters2D)\n  nameWithType: Manipulation.SetManipulationParameter(UIElement, ManipulationParameters2D)\n  fullName: Manipulation.SetManipulationParameter(UIElement, ManipulationParameters2D)\n- uid: System.Windows.Input.Manipulations.ManipulationParameters2D\n  parent: System.Windows.Input.Manipulations\n  isExternal: false\n  name: ManipulationParameters2D\n  nameWithType: ManipulationParameters2D\n  fullName: System.Windows.Input.Manipulations.ManipulationParameters2D\n- uid: System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: SetManipulationPivot(UIElement, ManipulationPivot)\n  nameWithType: Manipulation.SetManipulationPivot(UIElement, ManipulationPivot)\n  fullName: Manipulation.SetManipulationPivot(UIElement, ManipulationPivot)\n- uid: System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: StartInertia(UIElement)\n  nameWithType: Manipulation.StartInertia(UIElement)\n  fullName: Manipulation.StartInertia(UIElement)\n- uid: System.Windows.Input.Manipulation.AddManipulator*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: AddManipulator\n  nameWithType: Manipulation.AddManipulator\n  fullName: Manipulation.AddManipulator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Windows.Input.Manipulation.CompleteManipulation*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: CompleteManipulation\n  nameWithType: Manipulation.CompleteManipulation\n  fullName: Manipulation.CompleteManipulation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Windows.Input.Manipulation.GetManipulationContainer*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: GetManipulationContainer\n  nameWithType: Manipulation.GetManipulationContainer\n  fullName: Manipulation.GetManipulationContainer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Windows.Input.Manipulation.GetManipulationMode*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: GetManipulationMode\n  nameWithType: Manipulation.GetManipulationMode\n  fullName: Manipulation.GetManipulationMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Windows.Input.Manipulation.GetManipulationPivot*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: GetManipulationPivot\n  nameWithType: Manipulation.GetManipulationPivot\n  fullName: Manipulation.GetManipulationPivot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Windows.Input.Manipulation.IsManipulationActive*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: IsManipulationActive\n  nameWithType: Manipulation.IsManipulationActive\n  fullName: Manipulation.IsManipulationActive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Windows.Input.Manipulation.RemoveManipulator*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: RemoveManipulator\n  nameWithType: Manipulation.RemoveManipulator\n  fullName: Manipulation.RemoveManipulator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Windows.Input.Manipulation.SetManipulationContainer*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: SetManipulationContainer\n  nameWithType: Manipulation.SetManipulationContainer\n  fullName: Manipulation.SetManipulationContainer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Windows.Input.Manipulation.SetManipulationMode*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: SetManipulationMode\n  nameWithType: Manipulation.SetManipulationMode\n  fullName: Manipulation.SetManipulationMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Windows.Input.Manipulation.SetManipulationParameter*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: SetManipulationParameter\n  nameWithType: Manipulation.SetManipulationParameter\n  fullName: Manipulation.SetManipulationParameter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Windows.Input.Manipulation.SetManipulationPivot*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: SetManipulationPivot\n  nameWithType: Manipulation.SetManipulationPivot\n  fullName: Manipulation.SetManipulationPivot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Windows.Input.Manipulation.StartInertia*\n  parent: System.Windows.Input.Manipulation\n  isExternal: false\n  name: StartInertia\n  nameWithType: Manipulation.StartInertia\n  fullName: Manipulation.StartInertia\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/Manipulation.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}