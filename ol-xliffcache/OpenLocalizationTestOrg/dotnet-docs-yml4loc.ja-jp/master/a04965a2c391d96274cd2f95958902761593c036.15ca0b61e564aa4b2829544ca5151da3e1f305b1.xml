{"nodes":[{"content":"Provides data for touch input events.","nodes":[{"pos":[0,37],"content":"Provides data for touch input events.","nodes":[{"content":"Provides data for touch input events.","pos":[0,37]}]}],"pos":[795,833],"yaml":true},{"content":"The following events use <xref:System.Windows.Input.TouchEventArgs>.  \n  \n-   <xref:System.Windows.UIElement.TouchUp?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement.TouchDown?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement.TouchEnter?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement.TouchLeave?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement.TouchMove?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement3D.TouchUp?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement3D.TouchDown?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement3D.TouchEnter?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement3D.TouchLeave?displayProperty=fullName>  \n  \n-   <xref:System.Windows.UIElement3D.TouchMove?displayProperty=fullName>  \n  \n-   <xref:System.Windows.ContentElement.TouchUp?displayProperty=fullName>  \n  \n-   <xref:System.Windows.ContentElement.TouchDown?displayProperty=fullName>  \n  \n-   <xref:System.Windows.ContentElement.TouchEnter?displayProperty=fullName>  \n  \n-   <xref:System.Windows.ContentElement.TouchLeave?displayProperty=fullName>  \n  \n-   <xref:System.Windows.ContentElement.TouchMove?displayProperty=fullName>","nodes":[{"pos":[0,68],"content":"The following events use <xref:System.Windows.Input.TouchEventArgs>.","nodes":[{"content":"The following events use <ph id=\"ph1\">&lt;xref:System.Windows.Input.TouchEventArgs&gt;</ph>.","pos":[0,68],"source":"The following events use <xref:System.Windows.Input.TouchEventArgs>."}]},{"pos":[78,142],"content":"<xref:System.Windows.UIElement.TouchUp?displayProperty=fullName>","nodes":[]},{"pos":[152,218],"content":"<xref:System.Windows.UIElement.TouchDown?displayProperty=fullName>","nodes":[]},{"pos":[228,295],"content":"<xref:System.Windows.UIElement.TouchEnter?displayProperty=fullName>","nodes":[]},{"pos":[305,372],"content":"<xref:System.Windows.UIElement.TouchLeave?displayProperty=fullName>","nodes":[]},{"pos":[382,448],"content":"<xref:System.Windows.UIElement.TouchMove?displayProperty=fullName>","nodes":[]},{"pos":[458,524],"content":"<xref:System.Windows.UIElement3D.TouchUp?displayProperty=fullName>","nodes":[]},{"pos":[534,602],"content":"<xref:System.Windows.UIElement3D.TouchDown?displayProperty=fullName>","nodes":[]},{"pos":[612,681],"content":"<xref:System.Windows.UIElement3D.TouchEnter?displayProperty=fullName>","nodes":[]},{"pos":[691,760],"content":"<xref:System.Windows.UIElement3D.TouchLeave?displayProperty=fullName>","nodes":[]},{"pos":[770,838],"content":"<xref:System.Windows.UIElement3D.TouchMove?displayProperty=fullName>","nodes":[]},{"pos":[848,917],"content":"<xref:System.Windows.ContentElement.TouchUp?displayProperty=fullName>","nodes":[]},{"pos":[927,998],"content":"<xref:System.Windows.ContentElement.TouchDown?displayProperty=fullName>","nodes":[]},{"pos":[1008,1080],"content":"<xref:System.Windows.ContentElement.TouchEnter?displayProperty=fullName>","nodes":[]},{"pos":[1090,1162],"content":"<xref:System.Windows.ContentElement.TouchLeave?displayProperty=fullName>","nodes":[]},{"pos":[1172,1243],"content":"<xref:System.Windows.ContentElement.TouchMove?displayProperty=fullName>","nodes":[]}],"pos":[844,2120],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.TouchEventArgs\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> class."}],"pos":[4939,5037],"yaml":true},{"content":"The input device to associate with this event.","nodes":[{"pos":[0,46],"content":"The input device to associate with this event.","nodes":[{"content":"The input device to associate with this event.","pos":[0,46]}]}],"pos":[5247,5294],"yaml":true},{"content":"The time when the input occurred.","nodes":[{"pos":[0,33],"content":"The time when the input occurred.","nodes":[{"content":"The time when the input occurred.","pos":[0,33]}]}],"pos":[5358,5392],"yaml":true},{"content":"Returns all touch points that were collected between the most recent and previous touch events.","nodes":[{"pos":[0,95],"content":"Returns all touch points that were collected between the most recent and previous touch events.","nodes":[{"content":"Returns all touch points that were collected between the most recent and previous touch events.","pos":[0,95]}]}],"pos":[6618,6714],"yaml":true},{"content":"The element that defines the coordinate space.","nodes":[{"pos":[0,46],"content":"The element that defines the coordinate space.","nodes":[{"content":"The element that defines the coordinate space.","pos":[0,46]}]}],"pos":[6953,7000],"yaml":true},{"content":"All touch points that were collected between the most recent and previous touch events.","nodes":[{"pos":[0,87],"content":"All touch points that were collected between the most recent and previous touch events.","nodes":[{"content":"All touch points that were collected between the most recent and previous touch events.","pos":[0,87]}]}],"pos":[7085,7173],"yaml":true},{"content":"Returns the current position of the touch device relative to the specified element.","nodes":[{"pos":[0,83],"content":"Returns the current position of the touch device relative to the specified element.","nodes":[{"content":"Returns the current position of the touch device relative to the specified element.","pos":[0,83]}]}],"pos":[8342,8426],"yaml":true},{"content":"The element that defines the coordinate space.","nodes":[{"pos":[0,46],"content":"The element that defines the coordinate space.","nodes":[{"content":"The element that defines the coordinate space.","pos":[0,46]}]}],"pos":[8642,8689],"yaml":true},{"content":"The current position of the touch device relative to the specified element.","nodes":[{"pos":[0,75],"content":"The current position of the touch device relative to the specified element.","nodes":[{"content":"The current position of the touch device relative to the specified element.","pos":[0,75]}]}],"pos":[8764,8840],"yaml":true},{"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","nodes":[{"pos":[0,90],"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","nodes":[{"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","pos":[0,90]}]}],"pos":[10038,10129],"yaml":true},{"content":"This implementation casts the generic handler as an <xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs> and then invokes it. For more information about this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"pos":[0,384],"content":"This implementation casts the generic handler as an <xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs> and then invokes it. For more information about this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"content":"This implementation casts the generic handler as an <ph id=\"ph1\">&lt;xref:System.EventHandler%601&gt;</ph> of type <ph id=\"ph2\">&lt;xref:System.Windows.Input.TouchEventArgs&gt;</ph> and then invokes it.","pos":[0,154],"source":"This implementation casts the generic handler as an <xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs> and then invokes it."},{"content":"For more information about this implementation pattern and the reasons for it, see <ph id=\"ph1\">&lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt;</ph> and <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.","pos":[155,384],"source":" For more information about this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md)."}]}],"pos":[10140,10525],"yaml":true,"extradata":"MT"},{"content":"The generic handler to call in a type-specific way.","nodes":[{"pos":[0,51],"content":"The generic handler to call in a type-specific way.","nodes":[{"content":"The generic handler to call in a type-specific way.","pos":[0,51]}]}],"pos":[10728,10780],"yaml":true},{"content":"The target on which to call the handler.","nodes":[{"pos":[0,40],"content":"The target on which to call the handler.","nodes":[{"content":"The target on which to call the handler.","pos":[0,40]}]}],"pos":[10849,10890],"yaml":true},{"content":"Gets the touch that generated the event.","nodes":[{"pos":[0,40],"content":"Gets the touch that generated the event.","nodes":[{"content":"Gets the touch that generated the event.","pos":[0,40]}]}],"pos":[11906,11947],"yaml":true},{"content":"The touch that generated the event.","nodes":[{"pos":[0,35],"content":"The touch that generated the event.","nodes":[{"content":"The touch that generated the event.","pos":[0,35]}]}],"pos":[12913,12949],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.TouchEventArgs\n  commentId: T:System.Windows.Input.TouchEventArgs\n  id: TouchEventArgs\n  children:\n  - System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)\n  - System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  - System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)\n  - System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Input.TouchEventArgs.TouchDevice\n  langs:\n  - csharp\n  name: TouchEventArgs\n  nameWithType: TouchEventArgs\n  fullName: System.Windows.Input.TouchEventArgs\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Provides data for touch input events.\n  remarks: \"The following events use <xref:System.Windows.Input.TouchEventArgs>.  \\n  \\n-   <xref:System.Windows.UIElement.TouchUp?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement.TouchDown?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement.TouchEnter?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement.TouchLeave?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement.TouchMove?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement3D.TouchUp?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement3D.TouchDown?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement3D.TouchEnter?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement3D.TouchLeave?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.UIElement3D.TouchMove?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.TouchUp?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.TouchDown?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.TouchEnter?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.TouchLeave?displayProperty=fullName>  \\n  \\n-   <xref:System.Windows.ContentElement.TouchMove?displayProperty=fullName>\"\n  example:\n  - \"The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>. It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>. If it is, the <xref:System.Windows.Input.TouchDevice> is released.  \\n  \\n This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.  \\n  \\n [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]\\n [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]\"\n  syntax:\n    content: 'public class TouchEventArgs : System.Windows.Input.InputEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  - System.Windows.Input.InputEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Input.InputEventArgs.Device\n  - System.Windows.Input.InputEventArgs.Timestamp\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TouchEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)\n  commentId: M:System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)\n  id: '#ctor(System.Windows.Input.TouchDevice,System.Int32)'\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: TouchEventArgs(TouchDevice, Int32)\n  nameWithType: TouchEventArgs.TouchEventArgs(TouchDevice, Int32)\n  fullName: TouchEventArgs.TouchEventArgs(TouchDevice, Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Input.TouchEventArgs\"></xref> class.\n  syntax:\n    content: public TouchEventArgs (System.Windows.Input.TouchDevice touchDevice, int timestamp);\n    parameters:\n    - id: touchDevice\n      type: System.Windows.Input.TouchDevice\n      description: The input device to associate with this event.\n    - id: timestamp\n      type: System.Int32\n      description: The time when the input occurred.\n  overload: System.Windows.Input.TouchEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TouchEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  commentId: M:System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  id: GetIntermediateTouchPoints(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: GetIntermediateTouchPoints(IInputElement)\n  nameWithType: TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n  fullName: TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Returns all touch points that were collected between the most recent and previous touch events.\n  syntax:\n    content: public System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: The element that defines the coordinate space.\n    return:\n      type: System.Windows.Input.TouchPointCollection\n      description: All touch points that were collected between the most recent and previous touch events.\n  overload: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TouchEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)\n  commentId: M:System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)\n  id: GetTouchPoint(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: GetTouchPoint(IInputElement)\n  nameWithType: TouchEventArgs.GetTouchPoint(IInputElement)\n  fullName: TouchEventArgs.GetTouchPoint(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Returns the current position of the touch device relative to the specified element.\n  syntax:\n    content: public System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: The element that defines the coordinate space.\n    return:\n      type: System.Windows.Input.TouchPoint\n      description: The current position of the touch device relative to the specified element.\n  overload: System.Windows.Input.TouchEventArgs.GetTouchPoint*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TouchEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  commentId: M:System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: TouchEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: TouchEventArgs.InvokeEventHandler(Delegate, Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Invokes event handlers in a type-specific way, which can increase event system efficiency.\n  remarks: This implementation casts the generic handler as an <xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs> and then invokes it. For more information about this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: The generic handler to call in a type-specific way.\n    - id: genericTarget\n      type: System.Object\n      description: The target on which to call the handler.\n  overload: System.Windows.Input.TouchEventArgs.InvokeEventHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TouchEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.TouchEventArgs.TouchDevice\n  commentId: P:System.Windows.Input.TouchEventArgs.TouchDevice\n  id: TouchDevice\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: TouchDevice\n  nameWithType: TouchEventArgs.TouchDevice\n  fullName: TouchEventArgs.TouchDevice\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Gets the touch that generated the event.\n  remarks: ''\n  example:\n  - \"The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>. It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>. If it is, the <xref:System.Windows.Input.TouchDevice> is released.  \\n  \\n This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.  \\n  \\n [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]\\n [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]\"\n  syntax:\n    content: public System.Windows.Input.TouchDevice TouchDevice { get; }\n    return:\n      type: System.Windows.Input.TouchDevice\n      description: The touch that generated the event.\n  overload: System.Windows.Input.TouchEventArgs.TouchDevice*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TouchEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Input.InputEventArgs\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputEventArgs\n  nameWithType: InputEventArgs\n  fullName: System.Windows.Input.InputEventArgs\n- uid: System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: TouchEventArgs(TouchDevice, Int32)\n  nameWithType: TouchEventArgs.TouchEventArgs(TouchDevice, Int32)\n  fullName: TouchEventArgs.TouchEventArgs(TouchDevice, Int32)\n- uid: System.Windows.Input.TouchDevice\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchDevice\n  nameWithType: TouchDevice\n  fullName: System.Windows.Input.TouchDevice\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: GetIntermediateTouchPoints(IInputElement)\n  nameWithType: TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n  fullName: TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n- uid: System.Windows.Input.TouchPointCollection\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchPointCollection\n  nameWithType: TouchPointCollection\n  fullName: System.Windows.Input.TouchPointCollection\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: GetTouchPoint(IInputElement)\n  nameWithType: TouchEventArgs.GetTouchPoint(IInputElement)\n  fullName: TouchEventArgs.GetTouchPoint(IInputElement)\n- uid: System.Windows.Input.TouchPoint\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchPoint\n  nameWithType: TouchPoint\n  fullName: System.Windows.Input.TouchPoint\n- uid: System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: TouchEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: TouchEventArgs.InvokeEventHandler(Delegate, Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.TouchEventArgs.TouchDevice\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: TouchDevice\n  nameWithType: TouchEventArgs.TouchDevice\n  fullName: TouchEventArgs.TouchDevice\n- uid: System.Windows.Input.TouchEventArgs.#ctor*\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: TouchEventArgs\n  nameWithType: TouchEventArgs.TouchEventArgs\n  fullName: TouchEventArgs.TouchEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TouchEventArgs.xml\n- uid: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints*\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: GetIntermediateTouchPoints\n  nameWithType: TouchEventArgs.GetIntermediateTouchPoints\n  fullName: TouchEventArgs.GetIntermediateTouchPoints\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TouchEventArgs.xml\n- uid: System.Windows.Input.TouchEventArgs.GetTouchPoint*\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: GetTouchPoint\n  nameWithType: TouchEventArgs.GetTouchPoint\n  fullName: TouchEventArgs.GetTouchPoint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TouchEventArgs.xml\n- uid: System.Windows.Input.TouchEventArgs.InvokeEventHandler*\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: TouchEventArgs.InvokeEventHandler\n  fullName: TouchEventArgs.InvokeEventHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TouchEventArgs.xml\n- uid: System.Windows.Input.TouchEventArgs.TouchDevice*\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: TouchDevice\n  nameWithType: TouchEventArgs.TouchDevice\n  fullName: TouchEventArgs.TouchDevice\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/TouchEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.Windows.RoutedEventArgs.Handled\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Handled\n  nameWithType: RoutedEventArgs.Handled\n  fullName: RoutedEventArgs.Handled\n- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OnSetSource(Object)\n  nameWithType: RoutedEventArgs.OnSetSource(Object)\n  fullName: RoutedEventArgs.OnSetSource(Object)\n- uid: System.Windows.RoutedEventArgs.OriginalSource\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OriginalSource\n  nameWithType: RoutedEventArgs.OriginalSource\n  fullName: RoutedEventArgs.OriginalSource\n- uid: System.Windows.RoutedEventArgs.RoutedEvent\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEventArgs.RoutedEvent\n  fullName: RoutedEventArgs.RoutedEvent\n- uid: System.Windows.RoutedEventArgs.Source\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Source\n  nameWithType: RoutedEventArgs.Source\n  fullName: RoutedEventArgs.Source\n- uid: System.Windows.Input.InputEventArgs.Device\n  parent: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: Device\n  nameWithType: InputEventArgs.Device\n  fullName: InputEventArgs.Device\n- uid: System.Windows.Input.InputEventArgs.Timestamp\n  parent: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: Timestamp\n  nameWithType: InputEventArgs.Timestamp\n  fullName: InputEventArgs.Timestamp\n"}