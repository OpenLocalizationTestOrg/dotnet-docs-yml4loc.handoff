{"nodes":[{"content":"Represents the producer side of a <xref href=\"System.Threading.Tasks.Task`1\"></xref> unbound to a delegate, providing access to the consumer side through the <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> property.","nodes":[{"pos":[0,239],"content":"Represents the producer side of a <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> unbound to a delegate, providing access to the consumer side through the <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the producer side of a <xref href=\"System.Threading.Tasks.Task`1\"></xref> unbound to a delegate, providing access to the consumer side through the <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> property."}],"pos":[1656,1896],"yaml":true},{"content":"In many scenarios, it is useful to enable a <xref:System.Threading.Tasks.Task%601> to represent an external asynchronous operation. <xref:System.Threading.Tasks.TaskCompletionSource%601> is provided for this purpose. It enables the creation of a task that can be handed out to consumers, and those consumers can use the members of the task as they would any other. However, unlike most tasks, the state of a task created by a TaskCompletionSource is controlled explicitly by the methods on TaskCompletionSource. This enables the completion of the external asynchronous operation to be propagated to the underlying Task. The separation also ensures that consumers are not able to transition the state without access to the corresponding TaskCompletionSource. For more information, see the entry [The Nature of TaskCompletionSource\\<TResult>](http://blogs.msdn.com/b/pfxteam/archive/2009/06/02/9685804.aspx) in the Parallel Programming with .NET blog.  \n  \n The [Parallel Extensions samples](http://go.microsoft.com/fwlink/?LinkID=165717) also contain examples of how to use <xref:System.Threading.Tasks.TaskCompletionSource%601>.","nodes":[{"pos":[0,949],"content":"In many scenarios, it is useful to enable a <xref:System.Threading.Tasks.Task%601> to represent an external asynchronous operation. <xref:System.Threading.Tasks.TaskCompletionSource%601> is provided for this purpose. It enables the creation of a task that can be handed out to consumers, and those consumers can use the members of the task as they would any other. However, unlike most tasks, the state of a task created by a TaskCompletionSource is controlled explicitly by the methods on TaskCompletionSource. This enables the completion of the external asynchronous operation to be propagated to the underlying Task. The separation also ensures that consumers are not able to transition the state without access to the corresponding TaskCompletionSource. For more information, see the entry [The Nature of TaskCompletionSource\\<TResult>](http://blogs.msdn.com/b/pfxteam/archive/2009/06/02/9685804.aspx) in the Parallel Programming with .NET blog.","nodes":[{"content":"In many scenarios, it is useful to enable a <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> to represent an external asynchronous operation.","pos":[0,131],"source":"In many scenarios, it is useful to enable a <xref:System.Threading.Tasks.Task%601> to represent an external asynchronous operation."},{"content":"<ph id=\"ph1\">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601&gt;</ph> is provided for this purpose.","pos":[132,216],"source":" <xref:System.Threading.Tasks.TaskCompletionSource%601> is provided for this purpose."},{"content":"It enables the creation of a task that can be handed out to consumers, and those consumers can use the members of the task as they would any other.","pos":[217,364]},{"content":"However, unlike most tasks, the state of a task created by a TaskCompletionSource is controlled explicitly by the methods on TaskCompletionSource.","pos":[365,511]},{"content":"This enables the completion of the external asynchronous operation to be propagated to the underlying Task.","pos":[512,619]},{"content":"The separation also ensures that consumers are not able to transition the state without access to the corresponding TaskCompletionSource.","pos":[620,757]},{"content":"For more information, see the entry <bpt id=\"p1\">[</bpt>The Nature of TaskCompletionSource<ph id=\"ph1\">\\&lt;</ph>TResult&gt;<ept id=\"p1\">](http://blogs.msdn.com/b/pfxteam/archive/2009/06/02/9685804.aspx)</ept> in the Parallel Programming with .NET blog.","pos":[758,949],"source":" For more information, see the entry [The Nature of TaskCompletionSource\\<TResult>](http://blogs.msdn.com/b/pfxteam/archive/2009/06/02/9685804.aspx) in the Parallel Programming with .NET blog."}]},{"pos":[956,1128],"content":"The <bpt id=\"p1\">[</bpt>Parallel Extensions samples<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=165717)</ept> also contain examples of how to use <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601&gt;</ph>.","source":"The [Parallel Extensions samples](http://go.microsoft.com/fwlink/?LinkID=165717) also contain examples of how to use <xref:System.Threading.Tasks.TaskCompletionSource%601>."}],"pos":[1907,3041],"yaml":true,"extradata":"MT"},{"content":"The type of the result value assocatied with this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.","nodes":[{"pos":[0,117],"content":"The type of the result value assocatied with this <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the result value assocatied with this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>."}],"pos":[3663,3781],"yaml":true},{"content":"Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.","nodes":[{"pos":[0,77],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>."}],"pos":[5716,5794],"yaml":true},{"content":"Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref> with the specified state.","nodes":[{"pos":[0,102],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"&gt;&lt;/xref&gt;</ph> with the specified state.","source":"Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref> with the specified state."}],"pos":[7604,7707],"yaml":true},{"content":"The state to use as the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>'s AsyncState.","nodes":[{"pos":[0,99],"content":"The state to use as the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>'s AsyncState.","source":"The state to use as the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>'s AsyncState."}],"pos":[7851,7951],"yaml":true},{"content":"Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref> with the specified options.","nodes":[{"pos":[0,104],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"&gt;&lt;/xref&gt;</ph> with the specified options.","source":"Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref> with the specified options."}],"pos":[9813,9918],"yaml":true},{"content":"The <xref:System.Threading.Tasks.Task%601> created by this instance and accessible through its <xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A> property will be instantiated using the specified `creationOptions`.","nodes":[{"pos":[0,226],"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> created by this instance and accessible through its <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A&gt;</ph> property will be instantiated using the specified <ph id=\"ph3\">`creationOptions`</ph>.","source":"The <xref:System.Threading.Tasks.Task%601> created by this instance and accessible through its <xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A> property will be instantiated using the specified `creationOptions`."}],"pos":[9929,10156],"yaml":true,"extradata":"MT"},{"content":"The options to use when creating the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>.","nodes":[{"pos":[0,99],"content":"The options to use when creating the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"The options to use when creating the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>."}],"pos":[10385,10485],"yaml":true},{"content":"The <code>creationOptions</code> represent options invalid for use with a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.","nodes":[{"pos":[0,141],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">creationOptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> represent options invalid for use with a <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>creationOptions</code> represent options invalid for use with a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>."}],"pos":[10678,10820],"yaml":true},{"content":"Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref> with the specified state and options.","nodes":[{"pos":[0,114],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"&gt;&lt;/xref&gt;</ph> with the specified state and options.","source":"Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref> with the specified state and options."}],"pos":[12666,12781],"yaml":true},{"content":"The state to use as the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>'s AsyncState.","nodes":[{"pos":[0,99],"content":"The state to use as the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>'s AsyncState.","source":"The state to use as the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>'s AsyncState."}],"pos":[12985,13085],"yaml":true},{"content":"The options to use when creating the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>.","nodes":[{"pos":[0,99],"content":"The options to use when creating the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"The options to use when creating the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>."}],"pos":[13185,13285],"yaml":true},{"content":"The <code>creationOptions</code> represent options invalid for use with a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.","nodes":[{"pos":[0,141],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">creationOptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> represent options invalid for use with a <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>creationOptions</code> represent options invalid for use with a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>."}],"pos":[13478,13620],"yaml":true},{"content":"Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref> state.","nodes":[{"pos":[0,157],"content":"Transitions the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"&gt;&lt;/xref&gt;</ph> state.","source":"Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref> state."}],"pos":[15168,15326],"yaml":true},{"content":"The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>, or if the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> has already been disposed.","nodes":[{"pos":[0,413],"content":"The underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> is already in one of the three final states: <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph4\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"&gt;&lt;/xref&gt;</ph>, or if the underlying <ph id=\"ph5\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> has already been disposed.","source":"The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>, or if the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> has already been disposed."}],"pos":[15591,16007],"yaml":true},{"content":"Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds a collection of exception objects to it.","nodes":[{"pos":[0,206],"content":"Transitions the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"&gt;&lt;/xref&gt;</ph> state and binds a collection of exception objects to it.","source":"Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds a collection of exception objects to it."}],"pos":[17801,18008],"yaml":true},{"content":"The collection of exceptions to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.","nodes":[{"pos":[0,96],"content":"The collection of exceptions to bind to this <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"The collection of exceptions to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>."}],"pos":[18245,18342],"yaml":true},{"content":"The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"&gt;&lt;/xref&gt;</ph> was disposed.","source":"The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed."}],"pos":[18534,18624],"yaml":true},{"content":"The <code>exceptions</code> argument is null.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">exceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>exceptions</code> argument is null."}],"pos":[18726,18772],"yaml":true},{"content":"There are one or more null elements in <code>exceptions</code>.","nodes":[{"pos":[0,63],"content":"There are one or more null elements in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">exceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"There are one or more null elements in <code>exceptions</code>."}],"pos":[18866,18930],"yaml":true},{"content":"The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>.","nodes":[{"pos":[0,314],"content":"The underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> is already in one of the three final states: <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph4\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"&gt;&lt;/xref&gt;</ph>.","source":"The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>."}],"pos":[19040,19357],"yaml":true},{"content":"Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds it to a specified exception.","nodes":[{"pos":[0,194],"content":"Transitions the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"&gt;&lt;/xref&gt;</ph> state and binds it to a specified exception.","source":"Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds it to a specified exception."}],"pos":[20992,21187],"yaml":true},{"content":"The exception to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.","nodes":[{"pos":[0,81],"content":"The exception to bind to this <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"The exception to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>."}],"pos":[21342,21424],"yaml":true},{"content":"The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"&gt;&lt;/xref&gt;</ph> was disposed.","source":"The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed."}],"pos":[21616,21706],"yaml":true},{"content":"The <code>exception</code> argument is null.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">exception</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>exception</code> argument is null."}],"pos":[21808,21853],"yaml":true},{"content":"The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>.","nodes":[{"pos":[0,314],"content":"The underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> is already in one of the three final states: <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph4\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"&gt;&lt;/xref&gt;</ph>.","source":"The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>."}],"pos":[21963,22280],"yaml":true},{"content":"Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref> state.","nodes":[{"pos":[0,164],"content":"Transitions the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"&gt;&lt;/xref&gt;</ph> state.","source":"Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref> state."}],"pos":[23849,24014],"yaml":true},{"content":"The result value to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.","nodes":[{"pos":[0,84],"content":"The result value to bind to this <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"The result value to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>."}],"pos":[24149,24234],"yaml":true},{"content":"The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"&gt;&lt;/xref&gt;</ph> was disposed.","source":"The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed."}],"pos":[24423,24513],"yaml":true},{"content":"The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>.","nodes":[{"pos":[0,314],"content":"The underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> is already in one of the three final states: <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph4\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"&gt;&lt;/xref&gt;</ph>.","source":"The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>."}],"pos":[24623,24940],"yaml":true},{"content":"Gets the <xref href=\"System.Threading.Tasks.Task`1\"></xref> created by this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.","nodes":[{"pos":[0,143],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> created by this <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Threading.Tasks.Task`1\"></xref> created by this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>."}],"pos":[26442,26586],"yaml":true},{"content":"This property enables a consumer to access the <xref:System.Threading.Tasks.Task%601> that is controlled by this instance. When you create a <xref:System.Threading.Tasks.TaskCompletionSource%601> object, the <xref:System.Threading.Tasks.Task.Status%2A> property of this <xref:System.Threading.Tasks.Task%601> object returns <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation>  \n  \n The <xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, and <xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A> methods (and their \"Try\" variants) on this instance all result in the relevant state transitions on this underlying Task.","nodes":[{"pos":[0,385],"content":"This property enables a consumer to access the <xref:System.Threading.Tasks.Task%601> that is controlled by this instance. When you create a <xref:System.Threading.Tasks.TaskCompletionSource%601> object, the <xref:System.Threading.Tasks.Task.Status%2A> property of this <xref:System.Threading.Tasks.Task%601> object returns <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation>","nodes":[{"content":"This property enables a consumer to access the <xref:System.Threading.Tasks.Task%601> that is controlled by this instance. When you create a <xref:System.Threading.Tasks.TaskCompletionSource%601> object, the <xref:System.Threading.Tasks.Task.Status%2A> property of this <xref:System.Threading.Tasks.Task%601> object returns <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation>","pos":[0,385],"nodes":[{"content":"This property enables a consumer to access the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> that is controlled by this instance.","pos":[0,122],"source":"This property enables a consumer to access the <xref:System.Threading.Tasks.Task%601> that is controlled by this instance."},{"content":"When you create a <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601&gt;</ph> object, the <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property of this <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object returns <ph id=\"ph4\">&lt;xref:System.Threading.Tasks.TaskStatus.WaitingForActivation&gt;</ph>","pos":[123,385],"source":" When you create a <xref:System.Threading.Tasks.TaskCompletionSource%601> object, the <xref:System.Threading.Tasks.Task.Status%2A> property of this <xref:System.Threading.Tasks.Task%601> object returns <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation>"}]}]},{"pos":[392,804],"content":"The <xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, and <xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A> methods (and their \"Try\" variants) on this instance all result in the relevant state transitions on this underlying Task.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A&gt;</ph> methods (and their \"Try\" variants) on this instance all result in the relevant state transitions on this underlying Task.","pos":[0,412],"source":"The <xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, and <xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A> methods (and their \"Try\" variants) on this instance all result in the relevant state transitions on this underlying Task."}]}],"pos":[26597,27408],"yaml":true,"extradata":"MT"},{"content":"Returns the <xref href=\"System.Threading.Tasks.Task`1\"></xref> created by this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.","nodes":[{"pos":[0,146],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> created by this <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the <xref href=\"System.Threading.Tasks.Task`1\"></xref> created by this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>."}],"pos":[27562,27709],"yaml":true},{"content":"Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref> state.","nodes":[{"pos":[0,168],"content":"Attempts to transition the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"&gt;&lt;/xref&gt;</ph> state.","source":"Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref> state."}],"pos":[29356,29525],"yaml":true},{"content":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.  \n  \n This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.","nodes":[{"pos":[0,285],"content":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.","nodes":[{"content":"This operation will return false if the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> is already in one of the three final states: <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph>.","pos":[0,285],"source":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>."}]},{"pos":[292,406],"content":"This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.","nodes":[{"content":"This method also returns false if the underlying <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> has already been disposed.","pos":[0,114],"source":"This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed."}]}],"pos":[29536,29947],"yaml":true,"extradata":"MT"},{"content":"True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.","nodes":[{"pos":[0,118],"content":"True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.","nodes":[{"content":"True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.","pos":[0,118]}]}],"pos":[30078,30197],"yaml":true},{"content":"Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref> state and enables a cancellation token to be stored in the canceled task.","nodes":[{"pos":[0,235],"content":"Attempts to transition the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"&gt;&lt;/xref&gt;</ph> state and enables a cancellation token to be stored in the canceled task.","source":"Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref> state and enables a cancellation token to be stored in the canceled task."}],"pos":[32013,32249],"yaml":true},{"content":"The method returns false if the underlying <xref:System.Threading.Tasks.Task%601> object is already in one of the following three final states.  \n  \n-   <xref:System.Threading.Tasks.TaskStatus?displayProperty=fullName>  \n  \n-   <xref:System.Threading.Tasks.TaskStatus?displayProperty=fullName>  \n  \n-   <xref:System.Threading.Tasks.TaskStatus?displayProperty=fullName>  \n  \n This method also returns `false` if the underlying <xref:System.Threading.Tasks.Task%601> object has already been disposed.","nodes":[{"pos":[0,143],"content":"The method returns false if the underlying <xref:System.Threading.Tasks.Task%601> object is already in one of the following three final states.","nodes":[{"content":"The method returns false if the underlying <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object is already in one of the following three final states.","pos":[0,143],"source":"The method returns false if the underlying <xref:System.Threading.Tasks.Task%601> object is already in one of the following three final states."}]},{"pos":[153,218],"content":"<xref:System.Threading.Tasks.TaskStatus?displayProperty=fullName>","nodes":[]},{"pos":[228,293],"content":"<xref:System.Threading.Tasks.TaskStatus?displayProperty=fullName>","nodes":[]},{"pos":[303,368],"content":"<xref:System.Threading.Tasks.TaskStatus?displayProperty=fullName>","nodes":[]},{"pos":[375,498],"content":"This method also returns <ph id=\"ph1\">`false`</ph> if the underlying <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object has already been disposed.","source":"This method also returns `false` if the underlying <xref:System.Threading.Tasks.Task%601> object has already been disposed."}],"pos":[32260,32769],"yaml":true,"extradata":"MT"},{"content":"A cancellation token.","nodes":[{"pos":[0,21],"content":"A cancellation token.","nodes":[{"content":"A cancellation token.","pos":[0,21]}]}],"pos":[32985,33007],"yaml":true},{"content":"`true` if the operation is successful; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the operation is successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the operation is successful; otherwise, `false`."}],"pos":[33065,33126],"yaml":true},{"content":"Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds a collection of exception objects to it.","nodes":[{"pos":[0,217],"content":"Attempts to transition the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"&gt;&lt;/xref&gt;</ph> state and binds a collection of exception objects to it.","source":"Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds a collection of exception objects to it."}],"pos":[34775,34993],"yaml":true},{"content":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.","nodes":[{"pos":[0,285],"content":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.","nodes":[{"content":"This operation will return false if the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> is already in one of the three final states: <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph>.","pos":[0,285],"source":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>."}]}],"pos":[35004,35292],"yaml":true,"extradata":"MT"},{"content":"The collection of exceptions to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.","nodes":[{"pos":[0,96],"content":"The collection of exceptions to bind to this <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"The collection of exceptions to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>."}],"pos":[35532,35629],"yaml":true},{"content":"True if the operation was successful; otherwise, false.","nodes":[{"pos":[0,55],"content":"True if the operation was successful; otherwise, false.","nodes":[{"content":"True if the operation was successful; otherwise, false.","pos":[0,55]}]}],"pos":[35687,35743],"yaml":true},{"content":"The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"&gt;&lt;/xref&gt;</ph> was disposed.","source":"The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed."}],"pos":[35938,36028],"yaml":true},{"content":"The <code>exceptions</code> argument is null.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">exceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>exceptions</code> argument is null."}],"pos":[36130,36176],"yaml":true},{"content":"There are one or more null elements in <code>exceptions</code>.  \n  \n -or-  \n  \n The <code>exceptions</code> collection is empty.","nodes":[{"pos":[0,63],"content":"There are one or more null elements in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">exceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"There are one or more null elements in <code>exceptions</code>."},{"pos":[70,74],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[81,129],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">exceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> collection is empty.","source":"The <code>exceptions</code> collection is empty."}],"pos":[36270,36406],"yaml":true},{"content":"Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds it to a specified exception.","nodes":[{"pos":[0,205],"content":"Attempts to transition the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"&gt;&lt;/xref&gt;</ph> state and binds it to a specified exception.","source":"Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds it to a specified exception."}],"pos":[38059,38265],"yaml":true},{"content":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.","nodes":[{"pos":[0,285],"content":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.","nodes":[{"content":"This operation will return false if the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> is already in one of the three final states: <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph>.","pos":[0,285],"source":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>."}]}],"pos":[38276,38564],"yaml":true,"extradata":"MT"},{"content":"The exception to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.","nodes":[{"pos":[0,81],"content":"The exception to bind to this <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"The exception to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>."}],"pos":[38722,38804],"yaml":true},{"content":"True if the operation was successful; otherwise, false.","nodes":[{"pos":[0,55],"content":"True if the operation was successful; otherwise, false.","nodes":[{"content":"True if the operation was successful; otherwise, false.","pos":[0,55]}]}],"pos":[38862,38918],"yaml":true},{"content":"The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"&gt;&lt;/xref&gt;</ph> was disposed.","source":"The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed."}],"pos":[39113,39203],"yaml":true},{"content":"The <code>exception</code> argument is null.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">exception</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>exception</code> argument is null."}],"pos":[39305,39350],"yaml":true},{"content":"Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref> state.","nodes":[{"pos":[0,175],"content":"Attempts to transition the underlying <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"&gt;&lt;/xref&gt;</ph> state.","source":"Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref> state."}],"pos":[40937,41113],"yaml":true},{"content":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.  \n  \n This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.","nodes":[{"pos":[0,285],"content":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.","nodes":[{"content":"This operation will return false if the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> is already in one of the three final states: <ph id=\"ph2\">&lt;xref:System.Threading.Tasks.TaskStatus.RanToCompletion&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.TaskStatus.Faulted&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph>.","pos":[0,285],"source":"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>."}]},{"pos":[292,406],"content":"This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.","nodes":[{"content":"This method also returns false if the underlying <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> has already been disposed.","pos":[0,114],"source":"This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed."}]}],"pos":[41124,41535],"yaml":true,"extradata":"MT"},{"content":"The result value to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.","nodes":[{"pos":[0,84],"content":"The result value to bind to this <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"The result value to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>."}],"pos":[41673,41758],"yaml":true},{"content":"True if the operation was successful; otherwise, false.","nodes":[{"pos":[0,55],"content":"True if the operation was successful; otherwise, false.","nodes":[{"content":"True if the operation was successful; otherwise, false.","pos":[0,55]}]}],"pos":[41816,41872],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Tasks.TaskCompletionSource`1\n  commentId: T:System.Threading.Tasks.TaskCompletionSource`1\n  id: TaskCompletionSource`1\n  children:\n  - System.Threading.Tasks.TaskCompletionSource`1.#ctor\n  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)\n  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskCompletionSource`1.SetCanceled\n  - System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})\n  - System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)\n  - System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)\n  - System.Threading.Tasks.TaskCompletionSource`1.Task\n  - System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled\n  - System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})\n  - System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)\n  - System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)\n  langs:\n  - csharp\n  name: TaskCompletionSource<TResult>\n  nameWithType: TaskCompletionSource<TResult>\n  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>\n  type: Class\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Represents the producer side of a <xref href=\"System.Threading.Tasks.Task`1\"></xref> unbound to a delegate, providing access to the consumer side through the <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> property.\n  remarks: \"In many scenarios, it is useful to enable a <xref:System.Threading.Tasks.Task%601> to represent an external asynchronous operation. <xref:System.Threading.Tasks.TaskCompletionSource%601> is provided for this purpose. It enables the creation of a task that can be handed out to consumers, and those consumers can use the members of the task as they would any other. However, unlike most tasks, the state of a task created by a TaskCompletionSource is controlled explicitly by the methods on TaskCompletionSource. This enables the completion of the external asynchronous operation to be propagated to the underlying Task. The separation also ensures that consumers are not able to transition the state without access to the corresponding TaskCompletionSource. For more information, see the entry [The Nature of TaskCompletionSource\\\\<TResult>](http://blogs.msdn.com/b/pfxteam/archive/2009/06/02/9685804.aspx) in the Parallel Programming with .NET blog.  \\n  \\n The [Parallel Extensions samples](http://go.microsoft.com/fwlink/?LinkID=165717) also contain examples of how to use <xref:System.Threading.Tasks.TaskCompletionSource%601>.\"\n  example:\n  - \"The following example shows how to use a <xref:System.Threading.Tasks.TaskCompletionSource%601>:  \\n  \\n [!code-csharp[System.Threading.Tasks.TaskCompletionSource#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskcompletionsource/cs/taskcompletionsource.cs#01)]\\n [!code-vb[System.Threading.Tasks.TaskCompletionSource#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskcompletionsource/vb/taskcompletionsource.vb#01)]\"\n  syntax:\n    content: public class TaskCompletionSource<TResult>\n    typeParameters:\n    - id: TResult\n      description: The type of the result value assocatied with this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor\n  id: '#ctor'\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: TaskCompletionSource<TResult>()\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>()\n  fullName: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>()\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.\n  syntax:\n    content: public TaskCompletionSource ();\n    parameters: []\n  overload: System.Threading.Tasks.TaskCompletionSource`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: TaskCompletionSource<TResult>(Object)\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(Object)\n  fullName: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(Object)\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref> with the specified state.\n  syntax:\n    content: public TaskCompletionSource (object state);\n    parameters:\n    - id: state\n      type: System.Object\n      description: The state to use as the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>'s AsyncState.\n  overload: System.Threading.Tasks.TaskCompletionSource`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: TaskCompletionSource<TResult>(TaskCreationOptions)\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(TaskCreationOptions)\n  fullName: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(TaskCreationOptions)\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref> with the specified options.\n  remarks: The <xref:System.Threading.Tasks.Task%601> created by this instance and accessible through its <xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A> property will be instantiated using the specified `creationOptions`.\n  syntax:\n    content: public TaskCompletionSource (System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: The options to use when creating the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>.\n  overload: System.Threading.Tasks.TaskCompletionSource`1.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>creationOptions</code> represent options invalid for use with a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: TaskCompletionSource<TResult>(Object, TaskCreationOptions)\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(Object, TaskCreationOptions)\n  fullName: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(Object, TaskCreationOptions)\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Creates a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref> with the specified state and options.\n  syntax:\n    content: public TaskCompletionSource (object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: state\n      type: System.Object\n      description: The state to use as the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>'s AsyncState.\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: The options to use when creating the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref>.\n  overload: System.Threading.Tasks.TaskCompletionSource`1.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>creationOptions</code> represent options invalid for use with a <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetCanceled\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetCanceled\n  id: SetCanceled\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: SetCanceled()\n  nameWithType: TaskCompletionSource<TResult>.SetCanceled()\n  fullName: TaskCompletionSource<TResult>.SetCanceled()\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref> state.\n  syntax:\n    content: public void SetCanceled ();\n    parameters: []\n  overload: System.Threading.Tasks.TaskCompletionSource`1.SetCanceled*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: 'The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>, or if the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> has already been disposed.'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})\n  id: SetException(System.Collections.Generic.IEnumerable{System.Exception})\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: SetException(IEnumerable<Exception>)\n  nameWithType: TaskCompletionSource<TResult>.SetException(IEnumerable<Exception>)\n  fullName: TaskCompletionSource<TResult>.SetException(IEnumerable<Exception>)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds a collection of exception objects to it.\n  syntax:\n    content: public void SetException (System.Collections.Generic.IEnumerable<Exception> exceptions);\n    parameters:\n    - id: exceptions\n      type: System.Collections.Generic.IEnumerable{System.Exception}\n      description: The collection of exceptions to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.\n  overload: System.Threading.Tasks.TaskCompletionSource`1.SetException*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>exceptions</code> argument is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: There are one or more null elements in <code>exceptions</code>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: 'The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>.'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)\n  id: SetException(System.Exception)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: SetException(Exception)\n  nameWithType: TaskCompletionSource<TResult>.SetException(Exception)\n  fullName: TaskCompletionSource<TResult>.SetException(Exception)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds it to a specified exception.\n  syntax:\n    content: public void SetException (Exception exception);\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: The exception to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.\n  overload: System.Threading.Tasks.TaskCompletionSource`1.SetException*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>exception</code> argument is null.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: 'The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>.'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)\n  id: SetResult(`0)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: SetResult(TResult)\n  nameWithType: TaskCompletionSource<TResult>.SetResult(TResult)\n  fullName: TaskCompletionSource<TResult>.SetResult(TResult)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Transitions the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref> state.\n  syntax:\n    content: public void SetResult (TResult result);\n    parameters:\n    - id: result\n      type: TResult\n      description: The result value to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.\n  overload: System.Threading.Tasks.TaskCompletionSource`1.SetResult*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: 'The underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> is already in one of the three final states: <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref>, <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref>, or <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref>.'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.Task\n  commentId: P:System.Threading.Tasks.TaskCompletionSource`1.Task\n  id: Task\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: Task\n  nameWithType: TaskCompletionSource<TResult>.Task\n  fullName: TaskCompletionSource<TResult>.Task\n  type: Property\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Gets the <xref href=\"System.Threading.Tasks.Task`1\"></xref> created by this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.\n  remarks: \"This property enables a consumer to access the <xref:System.Threading.Tasks.Task%601> that is controlled by this instance. When you create a <xref:System.Threading.Tasks.TaskCompletionSource%601> object, the <xref:System.Threading.Tasks.Task.Status%2A> property of this <xref:System.Threading.Tasks.Task%601> object returns <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation>  \\n  \\n The <xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, and <xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A> methods (and their \\\"Try\\\" variants) on this instance all result in the relevant state transitions on this underlying Task.\"\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> Task { get; }\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Returns the <xref href=\"System.Threading.Tasks.Task`1\"></xref> created by this <xref href=\"System.Threading.Tasks.TaskCompletionSource`1\"></xref>.\n  overload: System.Threading.Tasks.TaskCompletionSource`1.Task*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled\n  id: TrySetCanceled\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: TrySetCanceled()\n  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled()\n  fullName: TaskCompletionSource<TResult>.TrySetCanceled()\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref> state.\n  remarks: \"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.  \\n  \\n This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.\"\n  syntax:\n    content: public bool TrySetCanceled ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.\n  overload: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)\n  id: TrySetCanceled(System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: TrySetCanceled(CancellationToken)\n  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled(CancellationToken)\n  fullName: TaskCompletionSource<TResult>.TrySetCanceled(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Canceled\"></xref> state and enables a cancellation token to be stored in the canceled task.\n  remarks: \"The method returns false if the underlying <xref:System.Threading.Tasks.Task%601> object is already in one of the following three final states.  \\n  \\n-   <xref:System.Threading.Tasks.TaskStatus?displayProperty=fullName>  \\n  \\n-   <xref:System.Threading.Tasks.TaskStatus?displayProperty=fullName>  \\n  \\n-   <xref:System.Threading.Tasks.TaskStatus?displayProperty=fullName>  \\n  \\n This method also returns `false` if the underlying <xref:System.Threading.Tasks.Task%601> object has already been disposed.\"\n  syntax:\n    content: public bool TrySetCanceled (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: A cancellation token.\n    return:\n      type: System.Boolean\n      description: '`true` if the operation is successful; otherwise, `false`.'\n  overload: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})\n  id: TrySetException(System.Collections.Generic.IEnumerable{System.Exception})\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: TrySetException(IEnumerable<Exception>)\n  nameWithType: TaskCompletionSource<TResult>.TrySetException(IEnumerable<Exception>)\n  fullName: TaskCompletionSource<TResult>.TrySetException(IEnumerable<Exception>)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds a collection of exception objects to it.\n  remarks: 'This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.'\n  syntax:\n    content: public bool TrySetException (System.Collections.Generic.IEnumerable<Exception> exceptions);\n    parameters:\n    - id: exceptions\n      type: System.Collections.Generic.IEnumerable{System.Exception}\n      description: The collection of exceptions to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.\n    return:\n      type: System.Boolean\n      description: True if the operation was successful; otherwise, false.\n  overload: System.Threading.Tasks.TaskCompletionSource`1.TrySetException*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>exceptions</code> argument is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"There are one or more null elements in <code>exceptions</code>.  \\n  \\n -or-  \\n  \\n The <code>exceptions</code> collection is empty.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)\n  id: TrySetException(System.Exception)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: TrySetException(Exception)\n  nameWithType: TaskCompletionSource<TResult>.TrySetException(Exception)\n  fullName: TaskCompletionSource<TResult>.TrySetException(Exception)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state and binds it to a specified exception.\n  remarks: 'This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.'\n  syntax:\n    content: public bool TrySetException (Exception exception);\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: The exception to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.\n    return:\n      type: System.Boolean\n      description: True if the operation was successful; otherwise, false.\n  overload: System.Threading.Tasks.TaskCompletionSource`1.TrySetException*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Threading.Tasks.TaskCompletionSource`1.Task\"></xref> was disposed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>exception</code> argument is null.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)\n  commentId: M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)\n  id: TrySetResult(`0)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  langs:\n  - csharp\n  name: TrySetResult(TResult)\n  nameWithType: TaskCompletionSource<TResult>.TrySetResult(TResult)\n  fullName: TaskCompletionSource<TResult>.TrySetResult(TResult)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Attempts to transition the underlying <xref href=\"System.Threading.Tasks.Task`1\"></xref> into the <xref href=\"System.Threading.Tasks.TaskStatus.RanToCompletion\"></xref> state.\n  remarks: \"This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.  \\n  \\n This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.\"\n  syntax:\n    content: public bool TrySetResult (TResult result);\n    parameters:\n    - id: result\n      type: TResult\n      description: The result value to bind to this <xref href=\"System.Threading.Tasks.Task`1\"></xref>.\n    return:\n      type: System.Boolean\n      description: True if the operation was successful; otherwise, false.\n  overload: System.Threading.Tasks.TaskCompletionSource`1.TrySetResult*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TaskCompletionSource<TResult>()\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>()\n  fullName: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>()\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TaskCompletionSource<TResult>(Object)\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(Object)\n  fullName: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(Object)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TaskCompletionSource<TResult>(TaskCreationOptions)\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(TaskCreationOptions)\n  fullName: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(TaskCreationOptions)\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TaskCompletionSource<TResult>(Object, TaskCreationOptions)\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(Object, TaskCreationOptions)\n  fullName: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>(Object, TaskCreationOptions)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetCanceled\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: SetCanceled()\n  nameWithType: TaskCompletionSource<TResult>.SetCanceled()\n  fullName: TaskCompletionSource<TResult>.SetCanceled()\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: SetException(IEnumerable<Exception>)\n  nameWithType: TaskCompletionSource<TResult>.SetException(IEnumerable<Exception>)\n  fullName: TaskCompletionSource<TResult>.SetException(IEnumerable<Exception>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Exception\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Collections.Generic.IEnumerable{System.Exception}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Exception>\n  nameWithType: IEnumerable<Exception>\n  fullName: System.Collections.Generic.IEnumerable<System.Exception>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Exception\n    name: Exception\n    nameWithType: Exception\n    fullName: System.Exception\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: SetException(Exception)\n  nameWithType: TaskCompletionSource<TResult>.SetException(Exception)\n  fullName: TaskCompletionSource<TResult>.SetException(Exception)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: SetResult(TResult)\n  nameWithType: TaskCompletionSource<TResult>.SetResult(TResult)\n  fullName: TaskCompletionSource<TResult>.SetResult(TResult)\n- uid: TResult\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Threading.Tasks.TaskCompletionSource`1.Task\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: Task\n  nameWithType: TaskCompletionSource<TResult>.Task\n  fullName: TaskCompletionSource<TResult>.Task\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TrySetCanceled()\n  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled()\n  fullName: TaskCompletionSource<TResult>.TrySetCanceled()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TrySetCanceled(CancellationToken)\n  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled(CancellationToken)\n  fullName: TaskCompletionSource<TResult>.TrySetCanceled(CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TrySetException(IEnumerable<Exception>)\n  nameWithType: TaskCompletionSource<TResult>.TrySetException(IEnumerable<Exception>)\n  fullName: TaskCompletionSource<TResult>.TrySetException(IEnumerable<Exception>)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TrySetException(Exception)\n  nameWithType: TaskCompletionSource<TResult>.TrySetException(Exception)\n  fullName: TaskCompletionSource<TResult>.TrySetException(Exception)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TrySetResult(TResult)\n  nameWithType: TaskCompletionSource<TResult>.TrySetResult(TResult)\n  fullName: TaskCompletionSource<TResult>.TrySetResult(TResult)\n- uid: System.Threading.Tasks.TaskCompletionSource`1.#ctor*\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TaskCompletionSource<TResult>\n  nameWithType: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>\n  fullName: TaskCompletionSource<TResult>.TaskCompletionSource<TResult>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetCanceled*\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: SetCanceled\n  nameWithType: TaskCompletionSource<TResult>.SetCanceled\n  fullName: TaskCompletionSource<TResult>.SetCanceled\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetException*\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: SetException\n  nameWithType: TaskCompletionSource<TResult>.SetException\n  fullName: TaskCompletionSource<TResult>.SetException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n- uid: System.Threading.Tasks.TaskCompletionSource`1.SetResult*\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: SetResult\n  nameWithType: TaskCompletionSource<TResult>.SetResult\n  fullName: TaskCompletionSource<TResult>.SetResult\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n- uid: System.Threading.Tasks.TaskCompletionSource`1.Task*\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: Task\n  nameWithType: TaskCompletionSource<TResult>.Task\n  fullName: TaskCompletionSource<TResult>.Task\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled*\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TrySetCanceled\n  nameWithType: TaskCompletionSource<TResult>.TrySetCanceled\n  fullName: TaskCompletionSource<TResult>.TrySetCanceled\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetException*\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TrySetException\n  nameWithType: TaskCompletionSource<TResult>.TrySetException\n  fullName: TaskCompletionSource<TResult>.TrySetException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n- uid: System.Threading.Tasks.TaskCompletionSource`1.TrySetResult*\n  parent: System.Threading.Tasks.TaskCompletionSource`1\n  isExternal: false\n  name: TrySetResult\n  nameWithType: TaskCompletionSource<TResult>.TrySetResult\n  fullName: TaskCompletionSource<TResult>.TrySetResult\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/TaskCompletionSource`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}