{"nodes":[{"content":"A specialized <xref href=\"System.Activities.Statements.FlowNode\"></xref> that provides the ability to model a conditional node with two outcomes.","nodes":[{"pos":[0,145],"content":"A specialized <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowNode\"&gt;&lt;/xref&gt;</ph> that provides the ability to model a conditional node with two outcomes.","source":"A specialized <xref href=\"System.Activities.Statements.FlowNode\"></xref> that provides the ability to model a conditional node with two outcomes."}],"pos":[916,1062],"yaml":true},{"content":"<xref:System.Activities.Statements.FlowDecision> uses a condition and defines actions to take if the condition is `true` or `false`.","nodes":[{"pos":[0,132],"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowDecision&gt;</ph> uses a condition and defines actions to take if the condition is <ph id=\"ph2\">`true`</ph> or <ph id=\"ph3\">`false`</ph>.","source":"<xref:System.Activities.Statements.FlowDecision> uses a condition and defines actions to take if the condition is `true` or `false`."}],"pos":[1073,1206],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class.","nodes":[{"pos":[0,99],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class."}],"pos":[3116,3216],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class with the specified condition.","nodes":[{"pos":[0,128],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;&lt;/xref&gt;</ph> class with the specified condition.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class with the specified condition."}],"pos":[4983,5112],"yaml":true},{"content":"The condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing.","nodes":[{"pos":[0,92],"content":"The condition the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;&lt;/xref&gt;</ph> is testing.","source":"The condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing."}],"pos":[5794,5887],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class with the specified condition.","nodes":[{"pos":[0,128],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;&lt;/xref&gt;</ph> class with the specified condition.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class with the specified condition."}],"pos":[7342,7471],"yaml":true},{"content":"The condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing.","nodes":[{"pos":[0,92],"content":"The condition the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;&lt;/xref&gt;</ph> is testing.","source":"The condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing."}],"pos":[8256,8349],"yaml":true},{"content":"Specifies the condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing.","nodes":[{"pos":[0,102],"content":"Specifies the condition the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowDecision\"&gt;&lt;/xref&gt;</ph> is testing.","source":"Specifies the condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing."}],"pos":[9376,9479],"yaml":true},{"content":"If the condition evaluates to `true`, the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.True%2A> property is executed. Otherwise the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.False%2A> property is executed.","nodes":[{"pos":[0,318],"content":"If the condition evaluates to `true`, the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.True%2A> property is executed. Otherwise the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.False%2A> property is executed.","nodes":[{"content":"If the condition evaluates to <ph id=\"ph1\">`true`</ph>, the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.FlowNode&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Activities.Statements.FlowDecision.True%2A&gt;</ph> property is executed.","pos":[0,172],"source":"If the condition evaluates to `true`, the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.True%2A> property is executed."},{"content":"Otherwise the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.FlowNode&gt;</ph> in the <ph id=\"ph2\">&lt;xref:System.Activities.Statements.FlowDecision.False%2A&gt;</ph> property is executed.","pos":[173,318],"source":" Otherwise the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.False%2A> property is executed."}]}],"pos":[9490,9809],"yaml":true,"extradata":"MT"},{"content":"A value expression that represents the condition.","nodes":[{"pos":[0,49],"content":"A value expression that represents the condition.","nodes":[{"content":"A value expression that represents the condition.","pos":[0,49]}]}],"pos":[10474,10524],"yaml":true},{"content":"The name of this flow decision to be displayed in the activity designer.","nodes":[{"pos":[0,72],"content":"The name of this flow decision to be displayed in the activity designer.","nodes":[{"content":"The name of this flow decision to be displayed in the activity designer.","pos":[0,72]}]}],"pos":[11584,11657],"yaml":true},{"content":"The name of the flow decision.","nodes":[{"pos":[0,30],"content":"The name of the flow decision.","nodes":[{"content":"The name of the flow decision.","pos":[0,30]}]}],"pos":[11777,11808],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> that is executed when the condition evaluates to `false`.","nodes":[{"pos":[0,133],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowNode\"&gt;&lt;/xref&gt;</ph> that is executed when the condition evaluates to <ph id=\"ph2\">`false`</ph>.","source":"Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> that is executed when the condition evaluates to `false`."}],"pos":[12838,12972],"yaml":true},{"content":"The activity that is executed when the condition evaluates to `false`.","nodes":[{"pos":[0,70],"content":"The activity that is executed when the condition evaluates to <ph id=\"ph1\">`false`</ph>.","source":"The activity that is executed when the condition evaluates to `false`."}],"pos":[13703,13774],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> that is executed when the condition evaluates to `true`.","nodes":[{"pos":[0,132],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.FlowNode\"&gt;&lt;/xref&gt;</ph> that is executed when the condition evaluates to <ph id=\"ph2\">`true`</ph>.","source":"Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> that is executed when the condition evaluates to `true`."}],"pos":[14840,14973],"yaml":true},{"content":"The activity to execute when the condition evaluates to `true`.","nodes":[{"pos":[0,63],"content":"The activity to execute when the condition evaluates to <ph id=\"ph1\">`true`</ph>.","source":"The activity to execute when the condition evaluates to `true`."}],"pos":[15707,15771],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.FlowDecision\n  commentId: T:System.Activities.Statements.FlowDecision\n  id: FlowDecision\n  children:\n  - System.Activities.Statements.FlowDecision.#ctor\n  - System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})\n  - System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  - System.Activities.Statements.FlowDecision.Condition\n  - System.Activities.Statements.FlowDecision.DisplayName\n  - System.Activities.Statements.FlowDecision.False\n  - System.Activities.Statements.FlowDecision.True\n  langs:\n  - csharp\n  name: FlowDecision\n  nameWithType: FlowDecision\n  fullName: System.Activities.Statements.FlowDecision\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: A specialized <xref href=\"System.Activities.Statements.FlowNode\"></xref> that provides the ability to model a conditional node with two outcomes.\n  remarks: <xref:System.Activities.Statements.FlowDecision> uses a condition and defines actions to take if the condition is `true` or `false`.\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]\"\n  syntax:\n    content: 'public sealed class FlowDecision : System.Activities.Statements.FlowNode'\n  inheritance:\n  - System.Object\n  - System.Activities.Statements.FlowNode\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.FlowDecision.#ctor\n  commentId: M:System.Activities.Statements.FlowDecision.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: FlowDecision()\n  nameWithType: FlowDecision.FlowDecision()\n  fullName: FlowDecision.FlowDecision()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]\"\n  syntax:\n    content: public FlowDecision ();\n    parameters: []\n  overload: System.Activities.Statements.FlowDecision.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})\n  commentId: M:System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})\n  id: '#ctor(System.Activities.Activity{System.Boolean})'\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: FlowDecision(Activity<Boolean>)\n  nameWithType: FlowDecision.FlowDecision(Activity<Boolean>)\n  fullName: FlowDecision.FlowDecision(Activity<Boolean>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class with the specified condition.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]\"\n  syntax:\n    content: public FlowDecision (System.Activities.Activity<bool> condition);\n    parameters:\n    - id: condition\n      type: System.Activities.Activity{System.Boolean}\n      description: The condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing.\n  overload: System.Activities.Statements.FlowDecision.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  commentId: M:System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})'\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n  nameWithType: FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n  fullName: FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> class with the specified condition.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]\"\n  syntax:\n    content: public FlowDecision (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,bool>> condition);\n    parameters:\n    - id: condition\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}}\n      description: The condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing.\n  overload: System.Activities.Statements.FlowDecision.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.FlowDecision.Condition\n  commentId: P:System.Activities.Statements.FlowDecision.Condition\n  id: Condition\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: Condition\n  nameWithType: FlowDecision.Condition\n  fullName: FlowDecision.Condition\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Specifies the condition the <xref href=\"System.Activities.Statements.FlowDecision\"></xref> is testing.\n  remarks: If the condition evaluates to `true`, the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.True%2A> property is executed. Otherwise the <xref:System.Activities.Statements.FlowNode> in the <xref:System.Activities.Statements.FlowDecision.False%2A> property is executed.\n  example:\n  - \"The following code sample demonstrates using the Condition property of a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]\"\n  syntax:\n    content: public System.Activities.Activity<bool> Condition { get; set; }\n    return:\n      type: System.Activities.Activity{System.Boolean}\n      description: A value expression that represents the condition.\n  overload: System.Activities.Statements.FlowDecision.Condition*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.FlowDecision.DisplayName\n  commentId: P:System.Activities.Statements.FlowDecision.DisplayName\n  id: DisplayName\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: FlowDecision.DisplayName\n  fullName: FlowDecision.DisplayName\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The name of this flow decision to be displayed in the activity designer.\n  syntax:\n    content: public string DisplayName { get; set; }\n    return:\n      type: System.String\n      description: The name of the flow decision.\n  overload: System.Activities.Statements.FlowDecision.DisplayName*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.FlowDecision.False\n  commentId: P:System.Activities.Statements.FlowDecision.False\n  id: \"False\"\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: \"False\"\n  nameWithType: FlowDecision.False\n  fullName: FlowDecision.False\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> that is executed when the condition evaluates to `false`.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates setting the False property of a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"True\")]\n\n      public System.Activities.Statements.FlowNode False { get; set; }\n    return:\n      type: System.Activities.Statements.FlowNode\n      description: The activity that is executed when the condition evaluates to `false`.\n  overload: System.Activities.Statements.FlowDecision.False*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.FlowDecision.True\n  commentId: P:System.Activities.Statements.FlowDecision.True\n  id: \"True\"\n  parent: System.Activities.Statements.FlowDecision\n  langs:\n  - csharp\n  name: \"True\"\n  nameWithType: FlowDecision.True\n  fullName: FlowDecision.True\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Gets or sets the <xref href=\"System.Activities.Statements.FlowNode\"></xref> that is executed when the condition evaluates to `true`.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates setting the True property of a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.  \\n  \\n [!code-csharp[wfs_FlowChartWithFaultHandling#3](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#3)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.DependsOn(\"Condition\")]\n\n      public System.Activities.Statements.FlowNode True { get; set; }\n    return:\n      type: System.Activities.Statements.FlowNode\n      description: The activity to execute when the condition evaluates to `true`.\n  overload: System.Activities.Statements.FlowDecision.True*\n  exceptions: []\n  attributes:\n  - type: System.Windows.Markup.DependsOnAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.Statements.FlowNode\n  parent: System.Activities.Statements\n  isExternal: false\n  name: FlowNode\n  nameWithType: FlowNode\n  fullName: System.Activities.Statements.FlowNode\n- uid: System.Activities.Statements.FlowDecision.#ctor\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: FlowDecision()\n  nameWithType: FlowDecision.FlowDecision()\n  fullName: FlowDecision.FlowDecision()\n- uid: System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: FlowDecision(Activity<Boolean>)\n  nameWithType: FlowDecision.FlowDecision(Activity<Boolean>)\n  fullName: FlowDecision.FlowDecision(Activity<Boolean>)\n- uid: System.Activities.Activity`1\n  name: Activity<TResult>\n  nameWithType: Activity<TResult>\n  fullName: System.Activities.Activity<TResult>\n- uid: System.Boolean\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Activity{System.Boolean}\n  parent: System.Activities\n  isExternal: false\n  name: Activity<Boolean>\n  nameWithType: Activity<Boolean>\n  fullName: System.Activities.Activity<System.Boolean>\n  spec.csharp:\n  - uid: System.Activities.Activity`1\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Activities.Activity\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n  nameWithType: FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n  fullName: FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)\n- uid: System.Linq.Expressions.Expression`1\n  name: Expression<TDelegate>\n  nameWithType: Expression<TDelegate>\n  fullName: System.Linq.Expressions.Expression<TDelegate>\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: System.Activities.ActivityContext\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<ActivityContext,Boolean>>\n  nameWithType: Expression<Func<ActivityContext,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,System.Boolean>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityContext\n    name: ActivityContext\n    nameWithType: ActivityContext\n    fullName: System.Activities.ActivityContext\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.FlowDecision.Condition\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: Condition\n  nameWithType: FlowDecision.Condition\n  fullName: FlowDecision.Condition\n- uid: System.Activities.Statements.FlowDecision.DisplayName\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: DisplayName\n  nameWithType: FlowDecision.DisplayName\n  fullName: FlowDecision.DisplayName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Statements.FlowDecision.False\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: \"False\"\n  nameWithType: FlowDecision.False\n  fullName: FlowDecision.False\n- uid: System.Activities.Statements.FlowDecision.True\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: \"True\"\n  nameWithType: FlowDecision.True\n  fullName: FlowDecision.True\n- uid: System.Activities.Statements.FlowDecision.#ctor*\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: FlowDecision\n  nameWithType: FlowDecision.FlowDecision\n  fullName: FlowDecision.FlowDecision\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n- uid: System.Activities.Statements.FlowDecision.Condition*\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: Condition\n  nameWithType: FlowDecision.Condition\n  fullName: FlowDecision.Condition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n- uid: System.Activities.Statements.FlowDecision.DisplayName*\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: DisplayName\n  nameWithType: FlowDecision.DisplayName\n  fullName: FlowDecision.DisplayName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n- uid: System.Activities.Statements.FlowDecision.False*\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: \"False\"\n  nameWithType: FlowDecision.False\n  fullName: FlowDecision.False\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n- uid: System.Activities.Statements.FlowDecision.True*\n  parent: System.Activities.Statements.FlowDecision\n  isExternal: false\n  name: \"True\"\n  nameWithType: FlowDecision.True\n  fullName: FlowDecision.True\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/FlowDecision.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}