{"nodes":[{"content":"Represents the set of arguments, child activities, variables, and delegates that a configured <xref href=\"System.Activities.Activity\"></xref> introduces to the execution environment.","nodes":[{"pos":[0,182],"content":"Represents the set of arguments, child activities, variables, and delegates that a configured <ph id=\"ph1\">&lt;xref href=\"System.Activities.Activity\"&gt;&lt;/xref&gt;</ph> introduces to the execution environment.","source":"Represents the set of arguments, child activities, variables, and delegates that a configured <xref href=\"System.Activities.Activity\"></xref> introduces to the execution environment."}],"pos":[2985,3168],"yaml":true},{"content":"Adds an argument to the collection of arguments of an activity.","nodes":[{"pos":[0,63],"content":"Adds an argument to the collection of arguments of an activity.","nodes":[{"content":"Adds an argument to the collection of arguments of an activity.","pos":[0,63]}]}],"pos":[4377,4441],"yaml":true},{"content":"The argument to add to the collection.","nodes":[{"pos":[0,38],"content":"The argument to add to the collection.","nodes":[{"content":"The argument to add to the collection.","pos":[0,38]}]}],"pos":[4634,4673],"yaml":true},{"content":"Adds the specified extension provider to the collection of default extension providers for the activity.","nodes":[{"pos":[0,104],"content":"Adds the specified extension provider to the collection of default extension providers for the activity.","nodes":[{"content":"Adds the specified extension provider to the collection of default extension providers for the activity.","pos":[0,104]}]}],"pos":[5873,5978],"yaml":true},{"content":"If the host does not provide an extension of type `T`, then this extension provider is evaluated to provide one.","nodes":[{"pos":[0,112],"content":"If the host does not provide an extension of type <ph id=\"ph1\">`T`</ph>, then this extension provider is evaluated to provide one.","source":"If the host does not provide an extension of type `T`, then this extension provider is evaluated to provide one."}],"pos":[5989,6102],"yaml":true,"extradata":"MT"},{"content":"The function that returns the extension.","nodes":[{"pos":[0,40],"content":"The function that returns the extension.","nodes":[{"content":"The function that returns the extension.","pos":[0,40]}]}],"pos":[6305,6346],"yaml":true},{"content":"The type of the extension provider.","nodes":[{"pos":[0,35],"content":"The type of the extension provider.","nodes":[{"content":"The type of the extension provider.","pos":[0,35]}]}],"pos":[6397,6433],"yaml":true},{"content":"Adds the specified activity to the metadata’s list of imported child activities.","nodes":[{"pos":[0,80],"content":"Adds the specified activity to the metadata’s list of imported child activities.","nodes":[{"content":"Adds the specified activity to the metadata’s list of imported child activities.","pos":[0,80]}]}],"pos":[7601,7682],"yaml":true},{"content":"An imported child activity is a child activity that the parent activity does not schedule directly. Rather, then parent uses this activity to configure some other child activity.","nodes":[{"pos":[0,178],"content":"An imported child activity is a child activity that the parent activity does not schedule directly. Rather, then parent uses this activity to configure some other child activity.","nodes":[{"content":"An imported child activity is a child activity that the parent activity does not schedule directly. Rather, then parent uses this activity to configure some other child activity.","pos":[0,178],"nodes":[{"content":"An imported child activity is a child activity that the parent activity does not schedule directly.","pos":[0,99]},{"content":"Rather, then parent uses this activity to configure some other child activity.","pos":[100,178]}]}]}],"pos":[7693,7872],"yaml":true,"extradata":"MT"},{"content":"The activity to add.","nodes":[{"pos":[0,20],"content":"The activity to add.","nodes":[{"content":"The activity to add.","pos":[0,20]}]}],"pos":[8066,8087],"yaml":true},{"content":"Adds the specified activity to the metadata’s list of imported child activities.","nodes":[{"pos":[0,80],"content":"Adds the specified activity to the metadata’s list of imported child activities.","nodes":[{"content":"Adds the specified activity to the metadata’s list of imported child activities.","pos":[0,80]}]}],"pos":[9307,9388],"yaml":true},{"content":"The activity to add.","nodes":[{"pos":[0,20],"content":"The activity to add.","nodes":[{"content":"The activity to add.","pos":[0,20]}]}],"pos":[9597,9618],"yaml":true},{"content":"The origin.","nodes":[{"pos":[0,11],"content":"The origin.","nodes":[{"content":"The origin.","pos":[0,11]}]}],"pos":[9680,9692],"yaml":true},{"content":"Adds the specified delegate to the metadata’s list of imported delegates.","nodes":[{"pos":[0,73],"content":"Adds the specified delegate to the metadata’s list of imported delegates.","nodes":[{"content":"Adds the specified delegate to the metadata’s list of imported delegates.","pos":[0,73]}]}],"pos":[10912,10986],"yaml":true},{"content":"An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly. Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity.","nodes":[{"pos":[0,263],"content":"An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly. Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity.","nodes":[{"content":"An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly. Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity.","pos":[0,263],"nodes":[{"content":"An imported <ph id=\"ph1\">&lt;xref:System.Activities.ActivityDelegate&gt;</ph> is an <ph id=\"ph2\">&lt;xref:System.Activities.ActivityDelegate&gt;</ph> that the parent activity does not invoke directly.","pos":[0,152],"source":"An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly."},{"content":"Rather, the parent uses this <ph id=\"ph1\">&lt;xref:System.Activities.ActivityDelegate&gt;</ph> to configure some other child activity.","pos":[153,263],"source":" Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity."}]}]}],"pos":[10997,11261],"yaml":true,"extradata":"MT"},{"content":"The delegate to add.","nodes":[{"pos":[0,20],"content":"The delegate to add.","nodes":[{"content":"The delegate to add.","pos":[0,20]}]}],"pos":[11480,11501],"yaml":true},{"content":"Adds the specified delegate to the metadata’s list of imported delegates.","nodes":[{"pos":[0,73],"content":"Adds the specified delegate to the metadata’s list of imported delegates.","nodes":[{"content":"Adds the specified delegate to the metadata’s list of imported delegates.","pos":[0,73]}]}],"pos":[12790,12864],"yaml":true},{"content":"The delegate to add.","nodes":[{"pos":[0,20],"content":"The delegate to add.","nodes":[{"content":"The delegate to add.","pos":[0,20]}]}],"pos":[13098,13119],"yaml":true},{"content":"The origin.","nodes":[{"pos":[0,11],"content":"The origin.","nodes":[{"content":"The origin.","pos":[0,11]}]}],"pos":[13181,13193],"yaml":true},{"content":"Adds the specified validation error to the metadata’s collection of validation errors.","nodes":[{"pos":[0,86],"content":"Adds the specified validation error to the metadata’s collection of validation errors.","nodes":[{"content":"Adds the specified validation error to the metadata’s collection of validation errors.","pos":[0,86]}]}],"pos":[14437,14524],"yaml":true},{"content":"[!INCLUDE[crdefault](~/includes/crdefault-md.md)] [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).","nodes":[{"pos":[0,167],"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id=\"p1\">[</bpt>Imperative Code-Based Validation<ept id=\"p1\">](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md)</ept>.","source":"[!INCLUDE[crdefault](~/includes/crdefault-md.md)] [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md)."}],"pos":[14535,14705],"yaml":true,"extradata":"MT"},{"content":"The validation error to add.","nodes":[{"pos":[0,28],"content":"The validation error to add.","nodes":[{"content":"The validation error to add.","pos":[0,28]}]}],"pos":[14941,14970],"yaml":true},{"content":"Adds a validation error to the metadata’s collection of validation errors using the specified description.","nodes":[{"pos":[0,106],"content":"Adds a validation error to the metadata’s collection of validation errors using the specified description.","nodes":[{"content":"Adds a validation error to the metadata’s collection of validation errors using the specified description.","pos":[0,106]}]}],"pos":[16093,16200],"yaml":true},{"content":"[!INCLUDE[crdefault](~/includes/crdefault-md.md)] [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).","nodes":[{"pos":[0,167],"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id=\"p1\">[</bpt>Imperative Code-Based Validation<ept id=\"p1\">](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md)</ept>.","source":"[!INCLUDE[crdefault](~/includes/crdefault-md.md)] [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md)."}],"pos":[16211,16381],"yaml":true,"extradata":"MT"},{"content":"A message that describes the validation error.","nodes":[{"pos":[0,46],"content":"A message that describes the validation error.","nodes":[{"content":"A message that describes the validation error.","pos":[0,46]}]}],"pos":[16562,16609],"yaml":true},{"content":"Adds the specified variable to the metadata’s collection of variables.","nodes":[{"pos":[0,70],"content":"Adds the specified variable to the metadata’s collection of variables.","nodes":[{"content":"Adds the specified variable to the metadata’s collection of variables.","pos":[0,70]}]}],"pos":[17735,17806],"yaml":true},{"content":"Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity. For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method. An activity’s implementation cannot access variables added using this method. Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method. For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner.","nodes":[{"pos":[0,759],"content":"Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity. For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method. An activity’s implementation cannot access variables added using this method. Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method. For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner.","nodes":[{"content":"Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity. For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method. An activity’s implementation cannot access variables added using this method. Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method. For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner.","pos":[0,759],"nodes":[{"content":"Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity.","pos":[0,168]},{"content":"For example, <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Sequence&gt;</ph> adds the variables in its <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Sequence.Variables%2A&gt;</ph> collection using this method.","pos":[169,340],"source":" For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method."},{"content":"An activity’s implementation cannot access variables added using this method.","pos":[341,418]},{"content":"Activities added through <ph id=\"ph1\">&lt;xref:System.Activities.ActivityMetadata.AddImportedChild%2A&gt;</ph> (and any of their non-implementation child activities) can access variables added using this method.","pos":[419,606],"source":" Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method."},{"content":"For example, <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Sequence&gt;</ph> adds its <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Sequence.Activities%2A&gt;</ph> collection in this manner.","pos":[607,759],"source":" For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner."}]}]}],"pos":[17817,18577],"yaml":true,"extradata":"MT"},{"content":"The variable to add.","nodes":[{"pos":[0,20],"content":"The variable to add.","nodes":[{"content":"The variable to add.","pos":[0,20]}]}],"pos":[18756,18777],"yaml":true},{"content":"Adds the specified variable to the metadata’s collection of variables.","nodes":[{"pos":[0,70],"content":"Adds the specified variable to the metadata’s collection of variables.","nodes":[{"content":"Adds the specified variable to the metadata’s collection of variables.","pos":[0,70]}]}],"pos":[19962,20033],"yaml":true},{"content":"The variable to add.","nodes":[{"pos":[0,20],"content":"The variable to add.","nodes":[{"content":"The variable to add.","pos":[0,20]}]}],"pos":[20227,20248],"yaml":true},{"content":"The origin.","nodes":[{"pos":[0,11],"content":"The origin.","nodes":[{"content":"The origin.","pos":[0,11]}]}],"pos":[20310,20322],"yaml":true},{"content":"Binds the specified <xref href=\"System.Activities.Argument\"></xref> to the specified <xref href=\"System.Activities.RuntimeArgument\"></xref>.","nodes":[{"pos":[0,140],"content":"Binds the specified <ph id=\"ph1\">&lt;xref href=\"System.Activities.Argument\"&gt;&lt;/xref&gt;</ph> to the specified <ph id=\"ph2\">&lt;xref href=\"System.Activities.RuntimeArgument\"&gt;&lt;/xref&gt;</ph>.","source":"Binds the specified <xref href=\"System.Activities.Argument\"></xref> to the specified <xref href=\"System.Activities.RuntimeArgument\"></xref>."}],"pos":[21552,21693],"yaml":true},{"content":"The <xref href=\"System.Activities.Argument\"></xref> to bind.","nodes":[{"pos":[0,60],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Activities.Argument\"&gt;&lt;/xref&gt;</ph> to bind.","source":"The <xref href=\"System.Activities.Argument\"></xref> to bind."}],"pos":[21907,21968],"yaml":true},{"content":"The <xref href=\"System.Activities.RuntimeArgument\"></xref> to bind.","nodes":[{"pos":[0,67],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Activities.RuntimeArgument\"&gt;&lt;/xref&gt;</ph> to bind.","source":"The <xref href=\"System.Activities.RuntimeArgument\"></xref> to bind."}],"pos":[22052,22120],"yaml":true},{"content":"Gets the activity’s <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref> of arguments, variables, delegate arguments, or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>.","nodes":[{"pos":[0,222],"content":"Gets the activity’s <ph id=\"ph1\">&lt;xref href=\"System.Activities.LocationReferenceEnvironment\"&gt;&lt;/xref&gt;</ph> of arguments, variables, delegate arguments, or symbols introduced by a <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.SymbolResolver\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the activity’s <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref> of arguments, variables, delegate arguments, or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>."}],"pos":[23120,23343],"yaml":true},{"content":"The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>.","nodes":[{"pos":[0,180],"content":"The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.SymbolResolver\"&gt;&lt;/xref&gt;</ph>.","source":"The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>."}],"pos":[23531,23712],"yaml":true},{"content":"Determines whether the specified object is equal to this metadata instance.","nodes":[{"pos":[0,75],"content":"Determines whether the specified object is equal to this metadata instance.","nodes":[{"content":"Determines whether the specified object is equal to this metadata instance.","pos":[0,75]}]}],"pos":[24756,24832],"yaml":true},{"content":"The object to compare.","nodes":[{"pos":[0,22],"content":"The object to compare.","nodes":[{"content":"The object to compare.","pos":[0,22]}]}],"pos":[24972,24995],"yaml":true},{"content":"`true` if the specified object is equal to this metadata instance; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the specified object is equal to this metadata instance; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified object is equal to this metadata instance; otherwise, `false`."}],"pos":[25053,25142],"yaml":true},{"content":"Returns a collection of arguments obtained by using reflection.","nodes":[{"pos":[0,63],"content":"Returns a collection of arguments obtained by using reflection.","nodes":[{"content":"Returns a collection of arguments obtained by using reflection.","pos":[0,63]}]}],"pos":[26238,26302],"yaml":true},{"content":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection.","nodes":[{"pos":[0,183],"content":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection.","nodes":[{"content":"This method uses an activity’s <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> to examine all public properties of type <ph id=\"ph2\">&lt;xref:System.Activities.Argument&gt;</ph> and returns them in a collection.","pos":[0,183],"source":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection."}]}],"pos":[26313,26497],"yaml":true,"extradata":"MT"},{"content":"A collection of arguments.","nodes":[{"pos":[0,26],"content":"A collection of arguments.","nodes":[{"content":"A collection of arguments.","pos":[0,26]}]}],"pos":[26774,26801],"yaml":true},{"content":"Returns a unique identifier for this metadata instance.","nodes":[{"pos":[0,55],"content":"Returns a unique identifier for this metadata instance.","nodes":[{"content":"Returns a unique identifier for this metadata instance.","pos":[0,55]}]}],"pos":[27827,27883],"yaml":true},{"content":"An integer that uniquely identifies this metadata instance.","nodes":[{"pos":[0,59],"content":"An integer that uniquely identifies this metadata instance.","nodes":[{"content":"An integer that uniquely identifies this metadata instance.","pos":[0,59]}]}],"pos":[28017,28077],"yaml":true},{"content":"Returns a collection of imported child activities using reflection.","nodes":[{"pos":[0,67],"content":"Returns a collection of imported child activities using reflection.","nodes":[{"content":"Returns a collection of imported child activities using reflection.","pos":[0,67]}]}],"pos":[29220,29288],"yaml":true},{"content":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Activity>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Activity>, and returns them in a collection.","nodes":[{"pos":[0,276],"content":"This method uses an activity’s <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> to examine all public properties of type <ph id=\"ph2\">&lt;xref:System.Activities.Activity&gt;</ph>, or <ph id=\"ph3\">`IList&lt;T&gt;`</ph> or <ph id=\"ph4\">`ICollection&lt;T&gt;`</ph> where <ph id=\"ph5\">`T`</ph> derives from <ph id=\"ph6\">&lt;xref:System.Activities.Activity&gt;</ph>, and returns them in a collection.","source":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Activity>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Activity>, and returns them in a collection."}],"pos":[29299,29576],"yaml":true,"extradata":"MT"},{"content":"A collection of imported child activities.","nodes":[{"pos":[0,42],"content":"A collection of imported child activities.","nodes":[{"content":"A collection of imported child activities.","pos":[0,42]}]}],"pos":[29846,29889],"yaml":true},{"content":"Returns a collection of delegates using reflection.","nodes":[{"pos":[0,51],"content":"Returns a collection of delegates using reflection.","nodes":[{"content":"Returns a collection of delegates using reflection.","pos":[0,51]}]}],"pos":[31060,31112],"yaml":true},{"content":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.ActivityDelegate>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.ActivityDelegate>, and returns them in a collection.","nodes":[{"pos":[0,292],"content":"This method uses an activity’s <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> to examine all public properties of type <ph id=\"ph2\">&lt;xref:System.Activities.ActivityDelegate&gt;</ph>, or <ph id=\"ph3\">`IList&lt;T&gt;`</ph> or <ph id=\"ph4\">`ICollection&lt;T&gt;`</ph> where <ph id=\"ph5\">`T`</ph> derives from <ph id=\"ph6\">&lt;xref:System.Activities.ActivityDelegate&gt;</ph>, and returns them in a collection.","source":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.ActivityDelegate>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.ActivityDelegate>, and returns them in a collection."}],"pos":[31123,31416],"yaml":true,"extradata":"MT"},{"content":"A collection of delegates.","nodes":[{"pos":[0,26],"content":"A collection of delegates.","nodes":[{"content":"A collection of delegates.","pos":[0,26]}]}],"pos":[31703,31730],"yaml":true},{"content":"Returns a collection of variables using reflection.","nodes":[{"pos":[0,51],"content":"Returns a collection of variables using reflection.","nodes":[{"content":"Returns a collection of variables using reflection.","pos":[0,51]}]}],"pos":[32854,32906],"yaml":true},{"content":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Variable>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Variable>, and returns them in a collection.","nodes":[{"pos":[0,276],"content":"This method uses an activity’s <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> to examine all public properties of type <ph id=\"ph2\">&lt;xref:System.Activities.Variable&gt;</ph>, or <ph id=\"ph3\">`IList&lt;T&gt;`</ph> or <ph id=\"ph4\">`ICollection&lt;T&gt;`</ph> where <ph id=\"ph5\">`T`</ph> derives from <ph id=\"ph6\">&lt;xref:System.Activities.Variable&gt;</ph>, and returns them in a collection.","source":"This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Variable>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Variable>, and returns them in a collection."}],"pos":[32917,33194],"yaml":true,"extradata":"MT"},{"content":"A collection of variables.","nodes":[{"pos":[0,26],"content":"A collection of variables.","nodes":[{"content":"A collection of variables.","pos":[0,26]}]}],"pos":[33457,33484],"yaml":true},{"content":"Gets a value that indicates whether there are any validation errors in the metadata.","nodes":[{"pos":[0,84],"content":"Gets a value that indicates whether there are any validation errors in the metadata.","nodes":[{"content":"Gets a value that indicates whether there are any validation errors in the metadata.","pos":[0,84]}]}],"pos":[34518,34603],"yaml":true},{"content":"`true` if validation errors are present; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if validation errors are present; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if validation errors are present; otherwise, `false`."}],"pos":[34719,34782],"yaml":true},{"content":"Returns a value that indicates whether the two specified metadata instances are equal.","nodes":[{"pos":[0,86],"content":"Returns a value that indicates whether the two specified metadata instances are equal.","nodes":[{"content":"Returns a value that indicates whether the two specified metadata instances are equal.","pos":[0,86]}]}],"pos":[36112,36199],"yaml":true},{"content":"The first item to compare.","nodes":[{"pos":[0,26],"content":"The first item to compare.","nodes":[{"content":"The first item to compare.","pos":[0,26]}]}],"pos":[36435,36462],"yaml":true},{"content":"The second item to compare.","nodes":[{"pos":[0,27],"content":"The second item to compare.","nodes":[{"content":"The second item to compare.","pos":[0,27]}]}],"pos":[36544,36572],"yaml":true},{"content":"`true` if the two items are equal; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the two items are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two items are equal; otherwise, `false`."}],"pos":[36630,36687],"yaml":true},{"content":"Returns a value that indicates whether the two specified metadata instances are not equal.","nodes":[{"pos":[0,90],"content":"Returns a value that indicates whether the two specified metadata instances are not equal.","nodes":[{"content":"Returns a value that indicates whether the two specified metadata instances are not equal.","pos":[0,90]}]}],"pos":[38027,38118],"yaml":true},{"content":"The first item to compare.","nodes":[{"pos":[0,26],"content":"The first item to compare.","nodes":[{"content":"The first item to compare.","pos":[0,26]}]}],"pos":[38356,38383],"yaml":true},{"content":"The second item to compare.","nodes":[{"pos":[0,27],"content":"The second item to compare.","nodes":[{"content":"The second item to compare.","pos":[0,27]}]}],"pos":[38465,38493],"yaml":true},{"content":"`true` if the two items are not equal; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the two items are not equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two items are not equal; otherwise, `false`."}],"pos":[38551,38612],"yaml":true},{"content":"Specifies that the activity requires an extension of the specified type at runtime.","nodes":[{"pos":[0,83],"content":"Specifies that the activity requires an extension of the specified type at runtime.","nodes":[{"content":"Specifies that the activity requires an extension of the specified type at runtime.","pos":[0,83]}]}],"pos":[39706,39790],"yaml":true},{"content":"If the host fails to provide an extension of the specified type, validation fails.","nodes":[{"pos":[0,82],"content":"If the host fails to provide an extension of the specified type, validation fails.","nodes":[{"content":"If the host fails to provide an extension of the specified type, validation fails.","pos":[0,82]}]}],"pos":[39801,39884],"yaml":true,"extradata":"MT"},{"content":"The type of the extension.","nodes":[{"pos":[0,26],"content":"The type of the extension.","nodes":[{"content":"The type of the extension.","pos":[0,26]}]}],"pos":[40041,40068],"yaml":true},{"content":"Specifies that the activity requires an extension of the specified generic type at runtime.","nodes":[{"pos":[0,91],"content":"Specifies that the activity requires an extension of the specified generic type at runtime.","nodes":[{"content":"Specifies that the activity requires an extension of the specified generic type at runtime.","pos":[0,91]}]}],"pos":[41132,41224],"yaml":true},{"content":"If the host fails to provide an extension of the specified type, validation fails.","nodes":[{"pos":[0,82],"content":"If the host fails to provide an extension of the specified type, validation fails.","nodes":[{"content":"If the host fails to provide an extension of the specified type, validation fails.","pos":[0,82]}]}],"pos":[41235,41318],"yaml":true,"extradata":"MT"},{"content":"The type of the extension.","nodes":[{"pos":[0,26],"content":"The type of the extension.","nodes":[{"content":"The type of the extension.","pos":[0,26]}]}],"pos":[41465,41492],"yaml":true},{"content":"Adds the specified collection of arguments to the activity’s arguments.","nodes":[{"pos":[0,71],"content":"Adds the specified collection of arguments to the activity’s arguments.","nodes":[{"content":"Adds the specified collection of arguments to the activity’s arguments.","pos":[0,71]}]}],"pos":[42892,42964],"yaml":true},{"content":"The arguments to add.","nodes":[{"pos":[0,21],"content":"The arguments to add.","nodes":[{"content":"The arguments to add.","pos":[0,21]}]}],"pos":[43256,43278],"yaml":true},{"content":"Adds the specified collection as imported child activities of the activity.","nodes":[{"pos":[0,75],"content":"Adds the specified collection as imported child activities of the activity.","nodes":[{"content":"Adds the specified collection as imported child activities of the activity.","pos":[0,75]}]}],"pos":[44681,44757],"yaml":true},{"content":"This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> for each item in the collection.","nodes":[{"pos":[0,128],"content":"This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> for each item in the collection.","nodes":[{"content":"This is the equivalent of calling <ph id=\"ph1\">&lt;xref:System.Activities.ActivityMetadata.AddImportedChild%2A&gt;</ph> for each item in the collection.","pos":[0,128],"source":"This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> for each item in the collection."}]}],"pos":[44768,44897],"yaml":true,"extradata":"MT"},{"content":"The activities to add.","nodes":[{"pos":[0,22],"content":"The activities to add.","nodes":[{"content":"The activities to add.","pos":[0,22]}]}],"pos":[45196,45219],"yaml":true},{"content":"Adds the specified collection as imported delegates of the activity.","nodes":[{"pos":[0,68],"content":"Adds the specified collection as imported delegates of the activity.","nodes":[{"content":"Adds the specified collection as imported delegates of the activity.","pos":[0,68]}]}],"pos":[46683,46752],"yaml":true},{"content":"This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A> for each item in the collection.","nodes":[{"pos":[0,131],"content":"This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A> for each item in the collection.","nodes":[{"content":"This is the equivalent of calling <ph id=\"ph1\">&lt;xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A&gt;</ph> for each item in the collection.","pos":[0,131],"source":"This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A> for each item in the collection."}]}],"pos":[46763,46895],"yaml":true,"extradata":"MT"},{"content":"The delegates to add.","nodes":[{"pos":[0,21],"content":"The delegates to add.","nodes":[{"content":"The delegates to add.","pos":[0,21]}]}],"pos":[47213,47235],"yaml":true},{"content":"Adds the specified collection of validation errors to the metadata’s collection of validation errors.","nodes":[{"pos":[0,101],"content":"Adds the specified collection of validation errors to the metadata’s collection of validation errors.","nodes":[{"content":"Adds the specified collection of validation errors to the metadata’s collection of validation errors.","pos":[0,101]}]}],"pos":[48721,48823],"yaml":true},{"content":"The validation errors to add.","nodes":[{"pos":[0,29],"content":"The validation errors to add.","nodes":[{"content":"The validation errors to add.","pos":[0,29]}]}],"pos":[49158,49188],"yaml":true},{"content":"Adds the specified collection of variables to the activity’s variables.","nodes":[{"pos":[0,71],"content":"Adds the specified collection of variables to the activity’s variables.","nodes":[{"content":"Adds the specified collection of variables to the activity’s variables.","pos":[0,71]}]}],"pos":[50556,50628],"yaml":true},{"content":"The variables to add.","nodes":[{"pos":[0,21],"content":"The variables to add.","nodes":[{"content":"The variables to add.","pos":[0,21]}]}],"pos":[50906,50928],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.ActivityMetadata\n  commentId: T:System.Activities.ActivityMetadata\n  id: ActivityMetadata\n  children:\n  - System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)\n  - System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})\n  - System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)\n  - System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)\n  - System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)\n  - System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)\n  - System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)\n  - System.Activities.ActivityMetadata.AddValidationError(System.String)\n  - System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)\n  - System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)\n  - System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  - System.Activities.ActivityMetadata.Environment\n  - System.Activities.ActivityMetadata.Equals(System.Object)\n  - System.Activities.ActivityMetadata.GetArgumentsWithReflection\n  - System.Activities.ActivityMetadata.GetHashCode\n  - System.Activities.ActivityMetadata.GetImportedChildrenWithReflection\n  - System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection\n  - System.Activities.ActivityMetadata.GetVariablesWithReflection\n  - System.Activities.ActivityMetadata.HasViolations\n  - System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  - System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  - System.Activities.ActivityMetadata.RequireExtension(System.Type)\n  - System.Activities.ActivityMetadata.RequireExtension``1\n  - System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  - System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})\n  - System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})\n  - System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  - System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})\n  langs:\n  - csharp\n  name: ActivityMetadata\n  nameWithType: ActivityMetadata\n  fullName: System.Activities.ActivityMetadata\n  type: Struct\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Represents the set of arguments, child activities, variables, and delegates that a configured <xref href=\"System.Activities.Activity\"></xref> introduces to the execution environment.\n  syntax:\n    content: public struct ActivityMetadata\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)\n  commentId: M:System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)\n  id: AddArgument(System.Activities.RuntimeArgument)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddArgument(RuntimeArgument)\n  nameWithType: ActivityMetadata.AddArgument(RuntimeArgument)\n  fullName: ActivityMetadata.AddArgument(RuntimeArgument)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds an argument to the collection of arguments of an activity.\n  syntax:\n    content: public void AddArgument (System.Activities.RuntimeArgument argument);\n    parameters:\n    - id: argument\n      type: System.Activities.RuntimeArgument\n      description: The argument to add to the collection.\n  overload: System.Activities.ActivityMetadata.AddArgument*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})\n  commentId: M:System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})\n  id: AddDefaultExtensionProvider``1(System.Func{``0})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddDefaultExtensionProvider<T>(Func<T>)\n  nameWithType: ActivityMetadata.AddDefaultExtensionProvider<T>(Func<T>)\n  fullName: ActivityMetadata.AddDefaultExtensionProvider<T>(Func<T>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified extension provider to the collection of default extension providers for the activity.\n  remarks: If the host does not provide an extension of type `T`, then this extension provider is evaluated to provide one.\n  syntax:\n    content: 'public void AddDefaultExtensionProvider<T> (Func<T> extensionProvider) where T : class;'\n    parameters:\n    - id: extensionProvider\n      type: System.Func{T}\n      description: The function that returns the extension.\n    typeParameters:\n    - id: T\n      description: The type of the extension provider.\n  overload: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)\n  commentId: M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)\n  id: AddImportedChild(System.Activities.Activity)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddImportedChild(Activity)\n  nameWithType: ActivityMetadata.AddImportedChild(Activity)\n  fullName: ActivityMetadata.AddImportedChild(Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified activity to the metadata’s list of imported child activities.\n  remarks: An imported child activity is a child activity that the parent activity does not schedule directly. Rather, then parent uses this activity to configure some other child activity.\n  syntax:\n    content: public void AddImportedChild (System.Activities.Activity importedChild);\n    parameters:\n    - id: importedChild\n      type: System.Activities.Activity\n      description: The activity to add.\n  overload: System.Activities.ActivityMetadata.AddImportedChild*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)\n  commentId: M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)\n  id: AddImportedChild(System.Activities.Activity,System.Object)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddImportedChild(Activity, Object)\n  nameWithType: ActivityMetadata.AddImportedChild(Activity, Object)\n  fullName: ActivityMetadata.AddImportedChild(Activity, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified activity to the metadata’s list of imported child activities.\n  syntax:\n    content: public void AddImportedChild (System.Activities.Activity importedChild, object origin);\n    parameters:\n    - id: importedChild\n      type: System.Activities.Activity\n      description: The activity to add.\n    - id: origin\n      type: System.Object\n      description: The origin.\n  overload: System.Activities.ActivityMetadata.AddImportedChild*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)\n  commentId: M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)\n  id: AddImportedDelegate(System.Activities.ActivityDelegate)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddImportedDelegate(ActivityDelegate)\n  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate)\n  fullName: ActivityMetadata.AddImportedDelegate(ActivityDelegate)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified delegate to the metadata’s list of imported delegates.\n  remarks: An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly. Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity.\n  syntax:\n    content: public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate);\n    parameters:\n    - id: importedDelegate\n      type: System.Activities.ActivityDelegate\n      description: The delegate to add.\n  overload: System.Activities.ActivityMetadata.AddImportedDelegate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)\n  commentId: M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)\n  id: AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddImportedDelegate(ActivityDelegate, Object)\n  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate, Object)\n  fullName: ActivityMetadata.AddImportedDelegate(ActivityDelegate, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified delegate to the metadata’s list of imported delegates.\n  syntax:\n    content: public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate, object origin);\n    parameters:\n    - id: importedDelegate\n      type: System.Activities.ActivityDelegate\n      description: The delegate to add.\n    - id: origin\n      type: System.Object\n      description: The origin.\n  overload: System.Activities.ActivityMetadata.AddImportedDelegate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)\n  commentId: M:System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)\n  id: AddValidationError(System.Activities.Validation.ValidationError)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddValidationError(ValidationError)\n  nameWithType: ActivityMetadata.AddValidationError(ValidationError)\n  fullName: ActivityMetadata.AddValidationError(ValidationError)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified validation error to the metadata’s collection of validation errors.\n  remarks: '[!INCLUDE[crdefault](~/includes/crdefault-md.md)] [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).'\n  syntax:\n    content: public void AddValidationError (System.Activities.Validation.ValidationError validationError);\n    parameters:\n    - id: validationError\n      type: System.Activities.Validation.ValidationError\n      description: The validation error to add.\n  overload: System.Activities.ActivityMetadata.AddValidationError*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.AddValidationError(System.String)\n  commentId: M:System.Activities.ActivityMetadata.AddValidationError(System.String)\n  id: AddValidationError(System.String)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddValidationError(String)\n  nameWithType: ActivityMetadata.AddValidationError(String)\n  fullName: ActivityMetadata.AddValidationError(String)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds a validation error to the metadata’s collection of validation errors using the specified description.\n  remarks: '[!INCLUDE[crdefault](~/includes/crdefault-md.md)] [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).'\n  syntax:\n    content: public void AddValidationError (string validationErrorMessage);\n    parameters:\n    - id: validationErrorMessage\n      type: System.String\n      description: A message that describes the validation error.\n  overload: System.Activities.ActivityMetadata.AddValidationError*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)\n  commentId: M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)\n  id: AddVariable(System.Activities.Variable)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddVariable(Variable)\n  nameWithType: ActivityMetadata.AddVariable(Variable)\n  fullName: ActivityMetadata.AddVariable(Variable)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified variable to the metadata’s collection of variables.\n  remarks: Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity. For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method. An activity’s implementation cannot access variables added using this method. Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method. For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner.\n  syntax:\n    content: public void AddVariable (System.Activities.Variable variable);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: The variable to add.\n  overload: System.Activities.ActivityMetadata.AddVariable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)\n  commentId: M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)\n  id: AddVariable(System.Activities.Variable,System.Object)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: AddVariable(Variable, Object)\n  nameWithType: ActivityMetadata.AddVariable(Variable, Object)\n  fullName: ActivityMetadata.AddVariable(Variable, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified variable to the metadata’s collection of variables.\n  syntax:\n    content: public void AddVariable (System.Activities.Variable variable, object origin);\n    parameters:\n    - id: variable\n      type: System.Activities.Variable\n      description: The variable to add.\n    - id: origin\n      type: System.Object\n      description: The origin.\n  overload: System.Activities.ActivityMetadata.AddVariable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  commentId: M:System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  id: Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: Bind(Argument, RuntimeArgument)\n  nameWithType: ActivityMetadata.Bind(Argument, RuntimeArgument)\n  fullName: ActivityMetadata.Bind(Argument, RuntimeArgument)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Binds the specified <xref href=\"System.Activities.Argument\"></xref> to the specified <xref href=\"System.Activities.RuntimeArgument\"></xref>.\n  syntax:\n    content: public void Bind (System.Activities.Argument binding, System.Activities.RuntimeArgument argument);\n    parameters:\n    - id: binding\n      type: System.Activities.Argument\n      description: The <xref href=\"System.Activities.Argument\"></xref> to bind.\n    - id: argument\n      type: System.Activities.RuntimeArgument\n      description: The <xref href=\"System.Activities.RuntimeArgument\"></xref> to bind.\n  overload: System.Activities.ActivityMetadata.Bind*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.Environment\n  commentId: P:System.Activities.ActivityMetadata.Environment\n  id: Environment\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: Environment\n  nameWithType: ActivityMetadata.Environment\n  fullName: ActivityMetadata.Environment\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets the activity’s <xref href=\"System.Activities.LocationReferenceEnvironment\"></xref> of arguments, variables, delegate arguments, or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>.\n  syntax:\n    content: public System.Activities.LocationReferenceEnvironment Environment { get; }\n    return:\n      type: System.Activities.LocationReferenceEnvironment\n      description: The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <xref href=\"System.Activities.Hosting.SymbolResolver\"></xref>.\n  overload: System.Activities.ActivityMetadata.Environment*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.Equals(System.Object)\n  commentId: M:System.Activities.ActivityMetadata.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ActivityMetadata.Equals(Object)\n  fullName: ActivityMetadata.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Determines whether the specified object is equal to this metadata instance.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified object is equal to this metadata instance; otherwise, `false`.'\n  overload: System.Activities.ActivityMetadata.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection\n  commentId: M:System.Activities.ActivityMetadata.GetArgumentsWithReflection\n  id: GetArgumentsWithReflection\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: GetArgumentsWithReflection()\n  nameWithType: ActivityMetadata.GetArgumentsWithReflection()\n  fullName: ActivityMetadata.GetArgumentsWithReflection()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a collection of arguments obtained by using reflection.\n  remarks: This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> GetArgumentsWithReflection ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}\n      description: A collection of arguments.\n  overload: System.Activities.ActivityMetadata.GetArgumentsWithReflection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.GetHashCode\n  commentId: M:System.Activities.ActivityMetadata.GetHashCode\n  id: GetHashCode\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ActivityMetadata.GetHashCode()\n  fullName: ActivityMetadata.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a unique identifier for this metadata instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An integer that uniquely identifies this metadata instance.\n  overload: System.Activities.ActivityMetadata.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection\n  commentId: M:System.Activities.ActivityMetadata.GetImportedChildrenWithReflection\n  id: GetImportedChildrenWithReflection\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: GetImportedChildrenWithReflection()\n  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection()\n  fullName: ActivityMetadata.GetImportedChildrenWithReflection()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a collection of imported child activities using reflection.\n  remarks: This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Activity>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Activity>, and returns them in a collection.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Activity> GetImportedChildrenWithReflection ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}\n      description: A collection of imported child activities.\n  overload: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection\n  commentId: M:System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection\n  id: GetImportedDelegatesWithReflection\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: GetImportedDelegatesWithReflection()\n  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection()\n  fullName: ActivityMetadata.GetImportedDelegatesWithReflection()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a collection of delegates using reflection.\n  remarks: This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.ActivityDelegate>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.ActivityDelegate>, and returns them in a collection.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate> GetImportedDelegatesWithReflection ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}\n      description: A collection of delegates.\n  overload: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection\n  commentId: M:System.Activities.ActivityMetadata.GetVariablesWithReflection\n  id: GetVariablesWithReflection\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: GetVariablesWithReflection()\n  nameWithType: ActivityMetadata.GetVariablesWithReflection()\n  fullName: ActivityMetadata.GetVariablesWithReflection()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a collection of variables using reflection.\n  remarks: This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Variable>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Variable>, and returns them in a collection.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> GetVariablesWithReflection ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: A collection of variables.\n  overload: System.Activities.ActivityMetadata.GetVariablesWithReflection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.HasViolations\n  commentId: P:System.Activities.ActivityMetadata.HasViolations\n  id: HasViolations\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: HasViolations\n  nameWithType: ActivityMetadata.HasViolations\n  fullName: ActivityMetadata.HasViolations\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets a value that indicates whether there are any validation errors in the metadata.\n  syntax:\n    content: public bool HasViolations { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if validation errors are present; otherwise, `false`.'\n  overload: System.Activities.ActivityMetadata.HasViolations*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  commentId: M:System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  id: op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: op_Equality(ActivityMetadata, ActivityMetadata)\n  nameWithType: ActivityMetadata.op_Equality(ActivityMetadata, ActivityMetadata)\n  fullName: ActivityMetadata.op_Equality(ActivityMetadata, ActivityMetadata)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a value that indicates whether the two specified metadata instances are equal.\n  syntax:\n    content: public static bool op_Equality (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);\n    parameters:\n    - id: left\n      type: System.Activities.ActivityMetadata\n      description: The first item to compare.\n    - id: right\n      type: System.Activities.ActivityMetadata\n      description: The second item to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two items are equal; otherwise, `false`.'\n  overload: System.Activities.ActivityMetadata.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  commentId: M:System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  id: op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: op_Inequality(ActivityMetadata, ActivityMetadata)\n  nameWithType: ActivityMetadata.op_Inequality(ActivityMetadata, ActivityMetadata)\n  fullName: ActivityMetadata.op_Inequality(ActivityMetadata, ActivityMetadata)\n  type: Operator\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Returns a value that indicates whether the two specified metadata instances are not equal.\n  syntax:\n    content: public static bool op_Inequality (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);\n    parameters:\n    - id: left\n      type: System.Activities.ActivityMetadata\n      description: The first item to compare.\n    - id: right\n      type: System.Activities.ActivityMetadata\n      description: The second item to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two items are not equal; otherwise, `false`.'\n  overload: System.Activities.ActivityMetadata.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.RequireExtension(System.Type)\n  commentId: M:System.Activities.ActivityMetadata.RequireExtension(System.Type)\n  id: RequireExtension(System.Type)\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: RequireExtension(Type)\n  nameWithType: ActivityMetadata.RequireExtension(Type)\n  fullName: ActivityMetadata.RequireExtension(Type)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Specifies that the activity requires an extension of the specified type at runtime.\n  remarks: If the host fails to provide an extension of the specified type, validation fails.\n  syntax:\n    content: public void RequireExtension (Type extensionType);\n    parameters:\n    - id: extensionType\n      type: System.Type\n      description: The type of the extension.\n  overload: System.Activities.ActivityMetadata.RequireExtension*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.RequireExtension``1\n  commentId: M:System.Activities.ActivityMetadata.RequireExtension``1\n  id: RequireExtension``1\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: RequireExtension<T>()\n  nameWithType: ActivityMetadata.RequireExtension<T>()\n  fullName: ActivityMetadata.RequireExtension<T>()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Specifies that the activity requires an extension of the specified generic type at runtime.\n  remarks: If the host fails to provide an extension of the specified type, validation fails.\n  syntax:\n    content: 'public void RequireExtension<T> () where T : class;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The type of the extension.\n  overload: System.Activities.ActivityMetadata.RequireExtension``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  commentId: M:System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  id: SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: SetArgumentsCollection(Collection<RuntimeArgument>)\n  nameWithType: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n  fullName: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection of arguments to the activity’s arguments.\n  syntax:\n    content: public void SetArgumentsCollection (System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> arguments);\n    parameters:\n    - id: arguments\n      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}\n      description: The arguments to add.\n  overload: System.Activities.ActivityMetadata.SetArgumentsCollection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})\n  commentId: M:System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})\n  id: SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: SetImportedChildrenCollection(Collection<Activity>)\n  nameWithType: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)\n  fullName: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection as imported child activities of the activity.\n  remarks: This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> for each item in the collection.\n  syntax:\n    content: public void SetImportedChildrenCollection (System.Collections.ObjectModel.Collection<System.Activities.Activity> importedChildren);\n    parameters:\n    - id: importedChildren\n      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}\n      description: The activities to add.\n  overload: System.Activities.ActivityMetadata.SetImportedChildrenCollection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})\n  commentId: M:System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})\n  id: SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n  nameWithType: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n  fullName: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection as imported delegates of the activity.\n  remarks: This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A> for each item in the collection.\n  syntax:\n    content: public void SetImportedDelegatesCollection (System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate> importedDelegates);\n    parameters:\n    - id: importedDelegates\n      type: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}\n      description: The delegates to add.\n  overload: System.Activities.ActivityMetadata.SetImportedDelegatesCollection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  commentId: M:System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  id: SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: SetValidationErrorsCollection(Collection<ValidationError>)\n  nameWithType: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n  fullName: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection of validation errors to the metadata’s collection of validation errors.\n  syntax:\n    content: public void SetValidationErrorsCollection (System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError> validationErrors);\n    parameters:\n    - id: validationErrors\n      type: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}\n      description: The validation errors to add.\n  overload: System.Activities.ActivityMetadata.SetValidationErrorsCollection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})\n  commentId: M:System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})\n  id: SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})\n  parent: System.Activities.ActivityMetadata\n  langs:\n  - csharp\n  name: SetVariablesCollection(Collection<Variable>)\n  nameWithType: ActivityMetadata.SetVariablesCollection(Collection<Variable>)\n  fullName: ActivityMetadata.SetVariablesCollection(Collection<Variable>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Adds the specified collection of variables to the activity’s variables.\n  syntax:\n    content: public void SetVariablesCollection (System.Collections.ObjectModel.Collection<System.Activities.Variable> variables);\n    parameters:\n    - id: variables\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: The variables to add.\n  overload: System.Activities.ActivityMetadata.SetVariablesCollection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddArgument(RuntimeArgument)\n  nameWithType: ActivityMetadata.AddArgument(RuntimeArgument)\n  fullName: ActivityMetadata.AddArgument(RuntimeArgument)\n- uid: System.Activities.RuntimeArgument\n  parent: System.Activities\n  isExternal: false\n  name: RuntimeArgument\n  nameWithType: RuntimeArgument\n  fullName: System.Activities.RuntimeArgument\n- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddDefaultExtensionProvider<T>(Func<T>)\n  nameWithType: ActivityMetadata.AddDefaultExtensionProvider<T>(Func<T>)\n  fullName: ActivityMetadata.AddDefaultExtensionProvider<T>(Func<T>)\n- uid: System.Func`1\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Func{T}\n  parent: System\n  isExternal: false\n  name: Func<T>\n  nameWithType: Func<T>\n  fullName: System.Func<T>\n  spec.csharp:\n  - uid: System.Func`1\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedChild(Activity)\n  nameWithType: ActivityMetadata.AddImportedChild(Activity)\n  fullName: ActivityMetadata.AddImportedChild(Activity)\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedChild(Activity, Object)\n  nameWithType: ActivityMetadata.AddImportedChild(Activity, Object)\n  fullName: ActivityMetadata.AddImportedChild(Activity, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedDelegate(ActivityDelegate)\n  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate)\n  fullName: ActivityMetadata.AddImportedDelegate(ActivityDelegate)\n- uid: System.Activities.ActivityDelegate\n  parent: System.Activities\n  isExternal: false\n  name: ActivityDelegate\n  nameWithType: ActivityDelegate\n  fullName: System.Activities.ActivityDelegate\n- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedDelegate(ActivityDelegate, Object)\n  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate, Object)\n  fullName: ActivityMetadata.AddImportedDelegate(ActivityDelegate, Object)\n- uid: System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddValidationError(ValidationError)\n  nameWithType: ActivityMetadata.AddValidationError(ValidationError)\n  fullName: ActivityMetadata.AddValidationError(ValidationError)\n- uid: System.Activities.Validation.ValidationError\n  parent: System.Activities.Validation\n  isExternal: false\n  name: ValidationError\n  nameWithType: ValidationError\n  fullName: System.Activities.Validation.ValidationError\n- uid: System.Activities.ActivityMetadata.AddValidationError(System.String)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddValidationError(String)\n  nameWithType: ActivityMetadata.AddValidationError(String)\n  fullName: ActivityMetadata.AddValidationError(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddVariable(Variable)\n  nameWithType: ActivityMetadata.AddVariable(Variable)\n  fullName: ActivityMetadata.AddVariable(Variable)\n- uid: System.Activities.Variable\n  parent: System.Activities\n  isExternal: false\n  name: Variable\n  nameWithType: Variable\n  fullName: System.Activities.Variable\n- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddVariable(Variable, Object)\n  nameWithType: ActivityMetadata.AddVariable(Variable, Object)\n  fullName: ActivityMetadata.AddVariable(Variable, Object)\n- uid: System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Bind(Argument, RuntimeArgument)\n  nameWithType: ActivityMetadata.Bind(Argument, RuntimeArgument)\n  fullName: ActivityMetadata.Bind(Argument, RuntimeArgument)\n- uid: System.Activities.Argument\n  parent: System.Activities\n  isExternal: false\n  name: Argument\n  nameWithType: Argument\n  fullName: System.Activities.Argument\n- uid: System.Activities.ActivityMetadata.Environment\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Environment\n  nameWithType: ActivityMetadata.Environment\n  fullName: ActivityMetadata.Environment\n- uid: System.Activities.LocationReferenceEnvironment\n  parent: System.Activities\n  isExternal: false\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment\n  fullName: System.Activities.LocationReferenceEnvironment\n- uid: System.Activities.ActivityMetadata.Equals(System.Object)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ActivityMetadata.Equals(Object)\n  fullName: ActivityMetadata.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetArgumentsWithReflection()\n  nameWithType: ActivityMetadata.GetArgumentsWithReflection()\n  fullName: ActivityMetadata.GetArgumentsWithReflection()\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<RuntimeArgument>\n  nameWithType: Collection<RuntimeArgument>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.RuntimeArgument\n    name: RuntimeArgument\n    nameWithType: RuntimeArgument\n    fullName: System.Activities.RuntimeArgument\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.GetHashCode\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ActivityMetadata.GetHashCode()\n  fullName: ActivityMetadata.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetImportedChildrenWithReflection()\n  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection()\n  fullName: ActivityMetadata.GetImportedChildrenWithReflection()\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Activity}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Activity>\n  nameWithType: Collection<Activity>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Activity>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Activities.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetImportedDelegatesWithReflection()\n  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection()\n  fullName: ActivityMetadata.GetImportedDelegatesWithReflection()\n- uid: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<ActivityDelegate>\n  nameWithType: Collection<ActivityDelegate>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.ActivityDelegate\n    name: ActivityDelegate\n    nameWithType: ActivityDelegate\n    fullName: System.Activities.ActivityDelegate\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetVariablesWithReflection()\n  nameWithType: ActivityMetadata.GetVariablesWithReflection()\n  fullName: ActivityMetadata.GetVariablesWithReflection()\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Variable\n    name: Variable\n    nameWithType: Variable\n    fullName: System.Activities.Variable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.HasViolations\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: HasViolations\n  nameWithType: ActivityMetadata.HasViolations\n  fullName: ActivityMetadata.HasViolations\n- uid: System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: op_Equality(ActivityMetadata, ActivityMetadata)\n  nameWithType: ActivityMetadata.op_Equality(ActivityMetadata, ActivityMetadata)\n  fullName: ActivityMetadata.op_Equality(ActivityMetadata, ActivityMetadata)\n- uid: System.Activities.ActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: ActivityMetadata\n  nameWithType: ActivityMetadata\n  fullName: System.Activities.ActivityMetadata\n- uid: System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: op_Inequality(ActivityMetadata, ActivityMetadata)\n  nameWithType: ActivityMetadata.op_Inequality(ActivityMetadata, ActivityMetadata)\n  fullName: ActivityMetadata.op_Inequality(ActivityMetadata, ActivityMetadata)\n- uid: System.Activities.ActivityMetadata.RequireExtension(System.Type)\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: RequireExtension(Type)\n  nameWithType: ActivityMetadata.RequireExtension(Type)\n  fullName: ActivityMetadata.RequireExtension(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.ActivityMetadata.RequireExtension``1\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: RequireExtension<T>()\n  nameWithType: ActivityMetadata.RequireExtension<T>()\n  fullName: ActivityMetadata.RequireExtension<T>()\n- uid: System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetArgumentsCollection(Collection<RuntimeArgument>)\n  nameWithType: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n  fullName: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)\n- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetImportedChildrenCollection(Collection<Activity>)\n  nameWithType: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)\n  fullName: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)\n- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n  nameWithType: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n  fullName: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)\n- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetValidationErrorsCollection(Collection<ValidationError>)\n  nameWithType: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n  fullName: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<ValidationError>\n  nameWithType: Collection<ValidationError>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Validation.ValidationError\n    name: ValidationError\n    nameWithType: ValidationError\n    fullName: System.Activities.Validation.ValidationError\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetVariablesCollection(Collection<Variable>)\n  nameWithType: ActivityMetadata.SetVariablesCollection(Collection<Variable>)\n  fullName: ActivityMetadata.SetVariablesCollection(Collection<Variable>)\n- uid: System.Activities.ActivityMetadata.AddValidationError*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddValidationError\n  nameWithType: ActivityMetadata.AddValidationError\n  fullName: ActivityMetadata.AddValidationError\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.AddArgument*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddArgument\n  nameWithType: ActivityMetadata.AddArgument\n  fullName: ActivityMetadata.AddArgument\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddDefaultExtensionProvider<T>\n  nameWithType: ActivityMetadata.AddDefaultExtensionProvider<T>\n  fullName: ActivityMetadata.AddDefaultExtensionProvider<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.AddImportedChild*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedChild\n  nameWithType: ActivityMetadata.AddImportedChild\n  fullName: ActivityMetadata.AddImportedChild\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.AddImportedDelegate*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddImportedDelegate\n  nameWithType: ActivityMetadata.AddImportedDelegate\n  fullName: ActivityMetadata.AddImportedDelegate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.AddVariable*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: AddVariable\n  nameWithType: ActivityMetadata.AddVariable\n  fullName: ActivityMetadata.AddVariable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.Bind*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Bind\n  nameWithType: ActivityMetadata.Bind\n  fullName: ActivityMetadata.Bind\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.Environment*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Environment\n  nameWithType: ActivityMetadata.Environment\n  fullName: ActivityMetadata.Environment\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.Equals*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: Equals\n  nameWithType: ActivityMetadata.Equals\n  fullName: ActivityMetadata.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetArgumentsWithReflection\n  nameWithType: ActivityMetadata.GetArgumentsWithReflection\n  fullName: ActivityMetadata.GetArgumentsWithReflection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.GetHashCode*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ActivityMetadata.GetHashCode\n  fullName: ActivityMetadata.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetImportedChildrenWithReflection\n  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection\n  fullName: ActivityMetadata.GetImportedChildrenWithReflection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetImportedDelegatesWithReflection\n  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection\n  fullName: ActivityMetadata.GetImportedDelegatesWithReflection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: GetVariablesWithReflection\n  nameWithType: ActivityMetadata.GetVariablesWithReflection\n  fullName: ActivityMetadata.GetVariablesWithReflection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.HasViolations*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: HasViolations\n  nameWithType: ActivityMetadata.HasViolations\n  fullName: ActivityMetadata.HasViolations\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.op_Equality*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: op_Equality\n  nameWithType: ActivityMetadata.op_Equality\n  fullName: ActivityMetadata.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.op_Inequality*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: op_Inequality\n  nameWithType: ActivityMetadata.op_Inequality\n  fullName: ActivityMetadata.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.RequireExtension*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: RequireExtension\n  nameWithType: ActivityMetadata.RequireExtension\n  fullName: ActivityMetadata.RequireExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.RequireExtension``1*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: RequireExtension<T>\n  nameWithType: ActivityMetadata.RequireExtension<T>\n  fullName: ActivityMetadata.RequireExtension<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.SetArgumentsCollection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetArgumentsCollection\n  nameWithType: ActivityMetadata.SetArgumentsCollection\n  fullName: ActivityMetadata.SetArgumentsCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetImportedChildrenCollection\n  nameWithType: ActivityMetadata.SetImportedChildrenCollection\n  fullName: ActivityMetadata.SetImportedChildrenCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetImportedDelegatesCollection\n  nameWithType: ActivityMetadata.SetImportedDelegatesCollection\n  fullName: ActivityMetadata.SetImportedDelegatesCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetValidationErrorsCollection\n  nameWithType: ActivityMetadata.SetValidationErrorsCollection\n  fullName: ActivityMetadata.SetValidationErrorsCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n- uid: System.Activities.ActivityMetadata.SetVariablesCollection*\n  parent: System.Activities.ActivityMetadata\n  isExternal: false\n  name: SetVariablesCollection\n  nameWithType: ActivityMetadata.SetVariablesCollection\n  fullName: ActivityMetadata.SetVariablesCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/ActivityMetadata.xml\n"}