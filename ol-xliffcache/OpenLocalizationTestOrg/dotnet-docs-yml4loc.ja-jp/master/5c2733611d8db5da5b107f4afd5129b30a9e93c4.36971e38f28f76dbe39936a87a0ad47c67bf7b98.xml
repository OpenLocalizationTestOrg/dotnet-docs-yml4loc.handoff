{"nodes":[{"content":"The timeout manager to use for an <xref href=\"System.Net.HttpListener\"></xref> object.","nodes":[{"pos":[0,86],"content":"The timeout manager to use for an <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListener\"&gt;&lt;/xref&gt;</ph> object.","source":"The timeout manager to use for an <xref href=\"System.Net.HttpListener\"></xref> object."}],"pos":[833,920],"yaml":true},{"content":"The timeout manager defines the connection timeout limits for a  <xref:System.Net.HttpListener> instance.","nodes":[{"pos":[0,105],"content":"The timeout manager defines the connection timeout limits for a  <xref:System.Net.HttpListener> instance.","nodes":[{"content":"The timeout manager defines the connection timeout limits for a  <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> instance.","pos":[0,105],"source":"The timeout manager defines the connection timeout limits for a  <xref:System.Net.HttpListener> instance."}]}],"pos":[931,1037],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to drain the entity body on a Keep-Alive connection.","nodes":[{"pos":[0,148],"content":"Gets or sets the time, in seconds, allowed for the <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListener\"&gt;&lt;/xref&gt;</ph> to drain the entity body on a Keep-Alive connection.","source":"Gets or sets the time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to drain the entity body on a Keep-Alive connection."}],"pos":[3444,3593],"yaml":true},{"content":"The default value for this property is 2 minutes.  \n  \n On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the <xref:System.Net.HttpListener> starts draining the remainder of the entity body to reach another potentially pipelined request from the client. If the time to drain the remaining entity body exceeds the allowed period the connection is timed out.","nodes":[{"pos":[0,49],"content":"The default value for this property is 2 minutes.","nodes":[{"content":"The default value for this property is 2 minutes.","pos":[0,49]}]},{"pos":[56,441],"content":"On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the <xref:System.Net.HttpListener> starts draining the remainder of the entity body to reach another potentially pipelined request from the client. If the time to drain the remaining entity body exceeds the allowed period the connection is timed out.","nodes":[{"content":"On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the <xref:System.Net.HttpListener> starts draining the remainder of the entity body to reach another potentially pipelined request from the client. If the time to drain the remaining entity body exceeds the allowed period the connection is timed out.","pos":[0,385],"nodes":[{"content":"On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> starts draining the remainder of the entity body to reach another potentially pipelined request from the client.","pos":[0,282],"source":"On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the <xref:System.Net.HttpListener> starts draining the remainder of the entity body to reach another potentially pipelined request from the client."},{"content":"If the time to drain the remaining entity body exceeds the allowed period the connection is timed out.","pos":[283,385]}]}]}],"pos":[3604,4050],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.TimeSpan\"></xref>.  \n  \n The time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to drain the entity body on a Keep-Alive connection.","nodes":[{"pos":[0,45],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.TimeSpan\"></xref>."},{"pos":[52,187],"content":"The time, in seconds, allowed for the <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListener\"&gt;&lt;/xref&gt;</ph> to drain the entity body on a Keep-Alive connection.","source":"The time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to drain the entity body on a Keep-Alive connection."}],"pos":[4212,4408],"yaml":true},{"content":"Gets or sets the time, in seconds, allowed for the request entity body to arrive.","nodes":[{"pos":[0,81],"content":"Gets or sets the time, in seconds, allowed for the request entity body to arrive.","nodes":[{"content":"Gets or sets the time, in seconds, allowed for the request entity body to arrive.","pos":[0,81]}]}],"pos":[5655,5737],"yaml":true},{"content":"The default value for this property is 2 minutes.  \n  \n The <xref:System.Net.HttpListener> turns on this timer when the request has an entity body. The timer expiration is initially set to the configured value. When the <xref:System.Net.HttpListener> receives additional data indications on the request, it resets the timer to give the connection another interval.","nodes":[{"pos":[0,49],"content":"The default value for this property is 2 minutes.","nodes":[{"content":"The default value for this property is 2 minutes.","pos":[0,49]}]},{"pos":[56,364],"content":"The <xref:System.Net.HttpListener> turns on this timer when the request has an entity body. The timer expiration is initially set to the configured value. When the <xref:System.Net.HttpListener> receives additional data indications on the request, it resets the timer to give the connection another interval.","nodes":[{"content":"The <xref:System.Net.HttpListener> turns on this timer when the request has an entity body. The timer expiration is initially set to the configured value. When the <xref:System.Net.HttpListener> receives additional data indications on the request, it resets the timer to give the connection another interval.","pos":[0,308],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> turns on this timer when the request has an entity body.","pos":[0,91],"source":"The <xref:System.Net.HttpListener> turns on this timer when the request has an entity body."},{"content":"The timer expiration is initially set to the configured value.","pos":[92,154]},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> receives additional data indications on the request, it resets the timer to give the connection another interval.","pos":[155,308],"source":" When the <xref:System.Net.HttpListener> receives additional data indications on the request, it resets the timer to give the connection another interval."}]}]}],"pos":[5748,6117],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.TimeSpan\"></xref>.  \n  \n The time, in seconds, allowed for the request entity body to arrive.","nodes":[{"pos":[0,45],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.TimeSpan\"></xref>."},{"pos":[52,120],"content":"The time, in seconds, allowed for the request entity body to arrive.","nodes":[{"content":"The time, in seconds, allowed for the request entity body to arrive.","pos":[0,68]}]}],"pos":[6274,6401],"yaml":true},{"content":"Gets or sets the time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to parse the request header.","nodes":[{"pos":[0,124],"content":"Gets or sets the time, in seconds, allowed for the <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListener\"&gt;&lt;/xref&gt;</ph> to parse the request header.","source":"Gets or sets the time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to parse the request header."}],"pos":[7643,7768],"yaml":true},{"content":"The default value for this property is 2 minutes.  \n  \n This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.  \n  \n The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.","nodes":[{"pos":[0,49],"content":"The default value for this property is 2 minutes.","nodes":[{"content":"The default value for this property is 2 minutes.","pos":[0,49]}]},{"pos":[56,176],"content":"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.","nodes":[{"content":"This timeout is only enforced after the first request on the connection is routed to the <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph>.","pos":[0,120],"source":"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>."}]},{"pos":[183,572],"content":"The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.","nodes":[{"content":"The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.","pos":[0,389],"nodes":[{"content":"The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed.","pos":[0,130]},{"content":"Therefore, the <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> enforces the default <ph id=\"ph2\">&lt;xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A&gt;</ph> timer for the first request on a connection.","pos":[131,301],"source":" Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> timer for the first request on a connection."},{"content":"Subsequent requests on a Keep-Alive connection will use the value set on this property.","pos":[302,389]}]}]}],"pos":[7779,8358],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.TimeSpan\"></xref>.  \n  \n The time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to parse the request header.","nodes":[{"pos":[0,45],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.TimeSpan\"></xref>."},{"pos":[52,163],"content":"The time, in seconds, allowed for the <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListener\"&gt;&lt;/xref&gt;</ph> to parse the request header.","source":"The time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to parse the request header."}],"pos":[8515,8687],"yaml":true},{"content":"Gets or sets the time, in seconds, allowed for an idle connection.","nodes":[{"pos":[0,66],"content":"Gets or sets the time, in seconds, allowed for an idle connection.","nodes":[{"content":"Gets or sets the time, in seconds, allowed for an idle connection.","pos":[0,66]}]}],"pos":[9953,10020],"yaml":true},{"content":"The default value for this property is 2 minutes.  \n  \n This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.  \n  \n The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.","nodes":[{"pos":[0,49],"content":"The default value for this property is 2 minutes.","nodes":[{"content":"The default value for this property is 2 minutes.","pos":[0,49]}]},{"pos":[56,176],"content":"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.","nodes":[{"content":"This timeout is only enforced after the first request on the connection is routed to the <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph>.","pos":[0,120],"source":"This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>."}]},{"pos":[183,576],"content":"The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.","nodes":[{"content":"The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.","pos":[0,393],"nodes":[{"content":"The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed.","pos":[0,130]},{"content":"Therefore, the <ph id=\"ph1\">&lt;xref:System.Net.HttpListener&gt;</ph> enforces the default <ph id=\"ph2\">&lt;xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A&gt;</ph> timer for the first request on a connection.","pos":[131,305],"source":" Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> timer for the first request on a connection."},{"content":"Subsequent requests on a Keep-Alive connection will use the value set on this property.","pos":[306,393]}]}]}],"pos":[10031,10614],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.TimeSpan\"></xref>.  \n  \n The time, in seconds, allowed for an idle connection.","nodes":[{"pos":[0,45],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.TimeSpan\"></xref>."},{"pos":[52,105],"content":"The time, in seconds, allowed for an idle connection.","nodes":[{"content":"The time, in seconds, allowed for an idle connection.","pos":[0,53]}]}],"pos":[10775,10887],"yaml":true},{"content":"Gets or sets the minimum send rate, in bytes-per-second, for the response.","nodes":[{"pos":[0,74],"content":"Gets or sets the minimum send rate, in bytes-per-second, for the response.","nodes":[{"content":"Gets or sets the minimum send rate, in bytes-per-second, for the response.","pos":[0,74]}]}],"pos":[12199,12274],"yaml":true},{"content":"The default response send rate is 150 bytes-per-second.  \n  \n To disable this timer, set <xref:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond%2A> to MAXULONG.","nodes":[{"pos":[0,55],"content":"The default response send rate is 150 bytes-per-second.","nodes":[{"content":"The default response send rate is 150 bytes-per-second.","pos":[0,55]}]},{"pos":[62,171],"content":"To disable this timer, set <xref:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond%2A> to MAXULONG.","nodes":[{"content":"To disable this timer, set <ph id=\"ph1\">&lt;xref:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond%2A&gt;</ph> to MAXULONG.","pos":[0,109],"source":"To disable this timer, set <xref:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond%2A> to MAXULONG."}]}],"pos":[12285,12461],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Int64\"></xref>.  \n  \n The minimum send rate, in bytes-per-second, for the response.","nodes":[{"pos":[0,42],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Int64\"></xref>."},{"pos":[49,110],"content":"The minimum send rate, in bytes-per-second, for the response.","nodes":[{"content":"The minimum send rate, in bytes-per-second, for the response.","pos":[0,61]}]}],"pos":[12622,12739],"yaml":true},{"content":"Gets or sets the time, in seconds, allowed for the request to remain in the request queue before the <xref href=\"System.Net.HttpListener\"></xref> picks it up.","nodes":[{"pos":[0,158],"content":"Gets or sets the time, in seconds, allowed for the request to remain in the request queue before the <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListener\"&gt;&lt;/xref&gt;</ph> picks it up.","source":"Gets or sets the time, in seconds, allowed for the request to remain in the request queue before the <xref href=\"System.Net.HttpListener\"></xref> picks it up."}],"pos":[14004,14163],"yaml":true},{"content":"The default value for this property is 2 minutes.","nodes":[{"pos":[0,49],"content":"The default value for this property is 2 minutes.","nodes":[{"content":"The default value for this property is 2 minutes.","pos":[0,49]}]}],"pos":[14174,14224],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.TimeSpan\"></xref>.  \n  \n The time, in seconds, allowed for the request to remain in the request queue before the <xref href=\"System.Net.HttpListener\"></xref> picks it up.","nodes":[{"pos":[0,45],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.TimeSpan\"></xref>."},{"pos":[52,197],"content":"The time, in seconds, allowed for the request to remain in the request queue before the <ph id=\"ph1\">&lt;xref href=\"System.Net.HttpListener\"&gt;&lt;/xref&gt;</ph> picks it up.","source":"The time, in seconds, allowed for the request to remain in the request queue before the <xref href=\"System.Net.HttpListener\"></xref> picks it up."}],"pos":[14383,14589],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.HttpListenerTimeoutManager\n  commentId: T:System.Net.HttpListenerTimeoutManager\n  id: HttpListenerTimeoutManager\n  children:\n  - System.Net.HttpListenerTimeoutManager.#ctor\n  - System.Net.HttpListenerTimeoutManager.DrainEntityBody\n  - System.Net.HttpListenerTimeoutManager.EntityBody\n  - System.Net.HttpListenerTimeoutManager.HeaderWait\n  - System.Net.HttpListenerTimeoutManager.IdleConnection\n  - System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond\n  - System.Net.HttpListenerTimeoutManager.RequestQueue\n  langs:\n  - csharp\n  name: HttpListenerTimeoutManager\n  nameWithType: HttpListenerTimeoutManager\n  fullName: System.Net.HttpListenerTimeoutManager\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: The timeout manager to use for an <xref href=\"System.Net.HttpListener\"></xref> object.\n  remarks: The timeout manager defines the connection timeout limits for a  <xref:System.Net.HttpListener> instance.\n  syntax:\n    content: public class HttpListenerTimeoutManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerTimeoutManager.#ctor\n  commentId: M:System.Net.HttpListenerTimeoutManager.#ctor\n  id: '#ctor'\n  parent: System.Net.HttpListenerTimeoutManager\n  langs:\n  - csharp\n  name: HttpListenerTimeoutManager()\n  nameWithType: HttpListenerTimeoutManager.HttpListenerTimeoutManager()\n  fullName: HttpListenerTimeoutManager.HttpListenerTimeoutManager()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net\n  syntax:\n    content: public HttpListenerTimeoutManager ();\n    parameters: []\n  overload: System.Net.HttpListenerTimeoutManager.#ctor*\n  exceptions: []\n  version:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody\n  commentId: P:System.Net.HttpListenerTimeoutManager.DrainEntityBody\n  id: DrainEntityBody\n  parent: System.Net.HttpListenerTimeoutManager\n  langs:\n  - csharp\n  name: DrainEntityBody\n  nameWithType: HttpListenerTimeoutManager.DrainEntityBody\n  fullName: HttpListenerTimeoutManager.DrainEntityBody\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets or sets the time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to drain the entity body on a Keep-Alive connection.\n  remarks: \"The default value for this property is 2 minutes.  \\n  \\n On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the <xref:System.Net.HttpListener> starts draining the remainder of the entity body to reach another potentially pipelined request from the client. If the time to drain the remaining entity body exceeds the allowed period the connection is timed out.\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public TimeSpan DrainEntityBody { get; set; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref href=\\\"System.TimeSpan\\\"></xref>.  \\n  \\n The time, in seconds, allowed for the <xref href=\\\"System.Net.HttpListener\\\"></xref> to drain the entity body on a Keep-Alive connection.\"\n  overload: System.Net.HttpListenerTimeoutManager.DrainEntityBody*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerTimeoutManager.EntityBody\n  commentId: P:System.Net.HttpListenerTimeoutManager.EntityBody\n  id: EntityBody\n  parent: System.Net.HttpListenerTimeoutManager\n  langs:\n  - csharp\n  name: EntityBody\n  nameWithType: HttpListenerTimeoutManager.EntityBody\n  fullName: HttpListenerTimeoutManager.EntityBody\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets or sets the time, in seconds, allowed for the request entity body to arrive.\n  remarks: \"The default value for this property is 2 minutes.  \\n  \\n The <xref:System.Net.HttpListener> turns on this timer when the request has an entity body. The timer expiration is initially set to the configured value. When the <xref:System.Net.HttpListener> receives additional data indications on the request, it resets the timer to give the connection another interval.\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public TimeSpan EntityBody { get; set; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref href=\\\"System.TimeSpan\\\"></xref>.  \\n  \\n The time, in seconds, allowed for the request entity body to arrive.\"\n  overload: System.Net.HttpListenerTimeoutManager.EntityBody*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerTimeoutManager.HeaderWait\n  commentId: P:System.Net.HttpListenerTimeoutManager.HeaderWait\n  id: HeaderWait\n  parent: System.Net.HttpListenerTimeoutManager\n  langs:\n  - csharp\n  name: HeaderWait\n  nameWithType: HttpListenerTimeoutManager.HeaderWait\n  fullName: HttpListenerTimeoutManager.HeaderWait\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets or sets the time, in seconds, allowed for the <xref href=\"System.Net.HttpListener\"></xref> to parse the request header.\n  remarks: \"The default value for this property is 2 minutes.  \\n  \\n This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.  \\n  \\n The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public TimeSpan HeaderWait { get; set; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref href=\\\"System.TimeSpan\\\"></xref>.  \\n  \\n The time, in seconds, allowed for the <xref href=\\\"System.Net.HttpListener\\\"></xref> to parse the request header.\"\n  overload: System.Net.HttpListenerTimeoutManager.HeaderWait*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerTimeoutManager.IdleConnection\n  commentId: P:System.Net.HttpListenerTimeoutManager.IdleConnection\n  id: IdleConnection\n  parent: System.Net.HttpListenerTimeoutManager\n  langs:\n  - csharp\n  name: IdleConnection\n  nameWithType: HttpListenerTimeoutManager.IdleConnection\n  fullName: HttpListenerTimeoutManager.IdleConnection\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets or sets the time, in seconds, allowed for an idle connection.\n  remarks: \"The default value for this property is 2 minutes.  \\n  \\n This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.  \\n  \\n The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed. Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> timer for the first request on a connection. Subsequent requests on a Keep-Alive connection will use the value set on this property.\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public TimeSpan IdleConnection { get; set; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref href=\\\"System.TimeSpan\\\"></xref>.  \\n  \\n The time, in seconds, allowed for an idle connection.\"\n  overload: System.Net.HttpListenerTimeoutManager.IdleConnection*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond\n  commentId: P:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond\n  id: MinSendBytesPerSecond\n  parent: System.Net.HttpListenerTimeoutManager\n  langs:\n  - csharp\n  name: MinSendBytesPerSecond\n  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond\n  fullName: HttpListenerTimeoutManager.MinSendBytesPerSecond\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets or sets the minimum send rate, in bytes-per-second, for the response.\n  remarks: \"The default response send rate is 150 bytes-per-second.  \\n  \\n To disable this timer, set <xref:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond%2A> to MAXULONG.\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public long MinSendBytesPerSecond { get; set; }\n    return:\n      type: System.Int64\n      description: \"Returns <xref href=\\\"System.Int64\\\"></xref>.  \\n  \\n The minimum send rate, in bytes-per-second, for the response.\"\n  overload: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.HttpListenerTimeoutManager.RequestQueue\n  commentId: P:System.Net.HttpListenerTimeoutManager.RequestQueue\n  id: RequestQueue\n  parent: System.Net.HttpListenerTimeoutManager\n  langs:\n  - csharp\n  name: RequestQueue\n  nameWithType: HttpListenerTimeoutManager.RequestQueue\n  fullName: HttpListenerTimeoutManager.RequestQueue\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.HttpListener\n  namespace: System.Net\n  summary: Gets or sets the time, in seconds, allowed for the request to remain in the request queue before the <xref href=\"System.Net.HttpListener\"></xref> picks it up.\n  remarks: The default value for this property is 2 minutes.\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public TimeSpan RequestQueue { get; set; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref href=\\\"System.TimeSpan\\\"></xref>.  \\n  \\n The time, in seconds, allowed for the request to remain in the request queue before the <xref href=\\\"System.Net.HttpListener\\\"></xref> picks it up.\"\n  overload: System.Net.HttpListenerTimeoutManager.RequestQueue*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.HttpListenerTimeoutManager.#ctor\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: HttpListenerTimeoutManager()\n  nameWithType: HttpListenerTimeoutManager.HttpListenerTimeoutManager()\n  fullName: HttpListenerTimeoutManager.HttpListenerTimeoutManager()\n- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: DrainEntityBody\n  nameWithType: HttpListenerTimeoutManager.DrainEntityBody\n  fullName: HttpListenerTimeoutManager.DrainEntityBody\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Net.HttpListenerTimeoutManager.EntityBody\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: EntityBody\n  nameWithType: HttpListenerTimeoutManager.EntityBody\n  fullName: HttpListenerTimeoutManager.EntityBody\n- uid: System.Net.HttpListenerTimeoutManager.HeaderWait\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: HeaderWait\n  nameWithType: HttpListenerTimeoutManager.HeaderWait\n  fullName: HttpListenerTimeoutManager.HeaderWait\n- uid: System.Net.HttpListenerTimeoutManager.IdleConnection\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: IdleConnection\n  nameWithType: HttpListenerTimeoutManager.IdleConnection\n  fullName: HttpListenerTimeoutManager.IdleConnection\n- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: MinSendBytesPerSecond\n  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond\n  fullName: HttpListenerTimeoutManager.MinSendBytesPerSecond\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.HttpListenerTimeoutManager.RequestQueue\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: RequestQueue\n  nameWithType: HttpListenerTimeoutManager.RequestQueue\n  fullName: HttpListenerTimeoutManager.RequestQueue\n- uid: System.Net.HttpListenerTimeoutManager.#ctor*\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: HttpListenerTimeoutManager\n  nameWithType: HttpListenerTimeoutManager.HttpListenerTimeoutManager\n  fullName: HttpListenerTimeoutManager.HttpListenerTimeoutManager\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody*\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: DrainEntityBody\n  nameWithType: HttpListenerTimeoutManager.DrainEntityBody\n  fullName: HttpListenerTimeoutManager.DrainEntityBody\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n- uid: System.Net.HttpListenerTimeoutManager.EntityBody*\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: EntityBody\n  nameWithType: HttpListenerTimeoutManager.EntityBody\n  fullName: HttpListenerTimeoutManager.EntityBody\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n- uid: System.Net.HttpListenerTimeoutManager.HeaderWait*\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: HeaderWait\n  nameWithType: HttpListenerTimeoutManager.HeaderWait\n  fullName: HttpListenerTimeoutManager.HeaderWait\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n- uid: System.Net.HttpListenerTimeoutManager.IdleConnection*\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: IdleConnection\n  nameWithType: HttpListenerTimeoutManager.IdleConnection\n  fullName: HttpListenerTimeoutManager.IdleConnection\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond*\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: MinSendBytesPerSecond\n  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond\n  fullName: HttpListenerTimeoutManager.MinSendBytesPerSecond\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n- uid: System.Net.HttpListenerTimeoutManager.RequestQueue*\n  parent: System.Net.HttpListenerTimeoutManager\n  isExternal: false\n  name: RequestQueue\n  nameWithType: HttpListenerTimeoutManager.RequestQueue\n  fullName: HttpListenerTimeoutManager.RequestQueue\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/HttpListenerTimeoutManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}