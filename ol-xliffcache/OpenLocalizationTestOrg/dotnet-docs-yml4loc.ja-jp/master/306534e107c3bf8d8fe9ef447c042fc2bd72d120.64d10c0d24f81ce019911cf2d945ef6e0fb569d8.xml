{"nodes":[{"content":"Defines options that affect the behavior of the <xref href=\"System.Data.Objects.ObjectContext\"></xref>.","nodes":[{"pos":[0,103],"content":"Defines options that affect the behavior of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectContext\"&gt;&lt;/xref&gt;</ph>.","source":"Defines options that affect the behavior of the <xref href=\"System.Data.Objects.ObjectContext\"></xref>."}],"pos":[778,882],"yaml":true},{"content":"No content here will be updated; please do not add material here.","nodes":[{"pos":[0,65],"content":"No content here will be updated; please do not add material here.","nodes":[{"content":"No content here will be updated; please do not add material here.","pos":[0,65]}]}],"pos":[893,959],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a Boolean value that determines whether related objects are loaded automatically when a navigation property is accessed.","nodes":[{"pos":[0,133],"content":"Gets or sets a Boolean value that determines whether related objects are loaded automatically when a navigation property is accessed.","nodes":[{"content":"Gets or sets a Boolean value that determines whether related objects are loaded automatically when a navigation property is accessed.","pos":[0,133]}]}],"pos":[2380,2514],"yaml":true},{"content":"`true` if lazy loading is enabled; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if lazy loading is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if lazy loading is enabled; otherwise, `false`."}],"pos":[2640,2697],"yaml":true},{"content":"Gets or sets a Boolean value that determines whether proxy instances are created for custom data classes that are persistence ignorant.","nodes":[{"pos":[0,135],"content":"Gets or sets a Boolean value that determines whether proxy instances are created for custom data classes that are persistence ignorant.","nodes":[{"content":"Gets or sets a Boolean value that determines whether proxy instances are created for custom data classes that are persistence ignorant.","pos":[0,135]}]}],"pos":[3812,3948],"yaml":true},{"content":"`true` if proxies are created; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,79],"content":"`true` if proxies are created; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if proxies are created; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,50],"source":"`true` if proxies are created; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[51,79],"source":" The default value is `true`."}]}],"pos":[4076,4158],"yaml":true},{"content":"Gets or sets a Boolean value that determines whether to use the consistent NullReference behavior.","nodes":[{"pos":[0,98],"content":"Gets or sets a Boolean value that determines whether to use the consistent NullReference behavior.","nodes":[{"content":"Gets or sets a Boolean value that determines whether to use the consistent NullReference behavior.","pos":[0,98]}]}],"pos":[5359,5458],"yaml":true},{"content":"If this flag is set to `false`, then setting the Value property of the <xref:System.Data.Objects.DataClasses.EntityReference%601> for an FK relationship to null when it is already null will have no effect. When this flag is set to `true`, then setting the value to null will always cause the FK to be nulled and the relationship to be deleted even if the value is currently null. The default value is `false` when using ObjectContext and `true` when using DbContext.","nodes":[{"pos":[0,466],"content":"If this flag is set to `false`, then setting the Value property of the <xref:System.Data.Objects.DataClasses.EntityReference%601> for an FK relationship to null when it is already null will have no effect. When this flag is set to `true`, then setting the value to null will always cause the FK to be nulled and the relationship to be deleted even if the value is currently null. The default value is `false` when using ObjectContext and `true` when using DbContext.","nodes":[{"content":"If this flag is set to <ph id=\"ph1\">`false`</ph>, then setting the Value property of the <ph id=\"ph2\">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph> for an FK relationship to null when it is already null will have no effect.","pos":[0,205],"source":"If this flag is set to `false`, then setting the Value property of the <xref:System.Data.Objects.DataClasses.EntityReference%601> for an FK relationship to null when it is already null will have no effect."},{"content":"When this flag is set to <ph id=\"ph1\">`true`</ph>, then setting the value to null will always cause the FK to be nulled and the relationship to be deleted even if the value is currently null.","pos":[206,379],"source":" When this flag is set to `true`, then setting the value to null will always cause the FK to be nulled and the relationship to be deleted even if the value is currently null."},{"content":"The default value is <ph id=\"ph1\">`false`</ph> when using ObjectContext and <ph id=\"ph2\">`true`</ph> when using DbContext.","pos":[380,466],"source":" The default value is `false` when using ObjectContext and `true` when using DbContext."}]}],"pos":[5469,5936],"yaml":true,"extradata":"MT"},{"content":"`true` if the consistent NullReference behavior should be used; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the consistent NullReference behavior should be used; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the consistent NullReference behavior should be used; otherwise, `false`."}],"pos":[6078,6164],"yaml":true},{"content":"Gets or sets a Boolean value that determines whether to use the C# NullComparison behavior.","nodes":[{"pos":[0,91],"content":"Gets or sets a Boolean value that determines whether to use the C# NullComparison behavior.","nodes":[{"content":"Gets or sets a Boolean value that determines whether to use the C# NullComparison behavior.","pos":[0,91]}]}],"pos":[7361,7453],"yaml":true},{"content":"`true` if the C# NullComparison behavior should be used; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the C# NullComparison behavior should be used; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the C# NullComparison behavior should be used; otherwise, `false`."}],"pos":[7592,7671],"yaml":true},{"content":"Gets or sets a Boolean value that determines whether to use the legacy PreserveChanges behavior.","nodes":[{"pos":[0,96],"content":"Gets or sets a Boolean value that determines whether to use the legacy PreserveChanges behavior.","nodes":[{"content":"Gets or sets a Boolean value that determines whether to use the legacy PreserveChanges behavior.","pos":[0,96]}]}],"pos":[8871,8968],"yaml":true},{"content":"`true` if the legacy PreserveChanges behavior should be used; otherwise, `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> if the legacy PreserveChanges behavior should be used; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the legacy PreserveChanges behavior should be used; otherwise, `false`."}],"pos":[9108,9192],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Objects.ObjectContextOptions\n  commentId: T:System.Data.Objects.ObjectContextOptions\n  id: ObjectContextOptions\n  children:\n  - System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled\n  - System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled\n  - System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior\n  - System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior\n  - System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior\n  langs:\n  - csharp\n  name: ObjectContextOptions\n  nameWithType: ObjectContextOptions\n  fullName: System.Data.Objects.ObjectContextOptions\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Defines options that affect the behavior of the <xref href=\"System.Data.Objects.ObjectContext\"></xref>.\n  remarks: No content here will be updated; please do not add material here.\n  syntax:\n    content: public sealed class ObjectContextOptions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectContextOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled\n  commentId: P:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled\n  id: LazyLoadingEnabled\n  parent: System.Data.Objects.ObjectContextOptions\n  langs:\n  - csharp\n  name: LazyLoadingEnabled\n  nameWithType: ObjectContextOptions.LazyLoadingEnabled\n  fullName: ObjectContextOptions.LazyLoadingEnabled\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Gets or sets a Boolean value that determines whether related objects are loaded automatically when a navigation property is accessed.\n  syntax:\n    content: public bool LazyLoadingEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if lazy loading is enabled; otherwise, `false`.'\n  overload: System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectContextOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled\n  commentId: P:System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled\n  id: ProxyCreationEnabled\n  parent: System.Data.Objects.ObjectContextOptions\n  langs:\n  - csharp\n  name: ProxyCreationEnabled\n  nameWithType: ObjectContextOptions.ProxyCreationEnabled\n  fullName: ObjectContextOptions.ProxyCreationEnabled\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Gets or sets a Boolean value that determines whether proxy instances are created for custom data classes that are persistence ignorant.\n  syntax:\n    content: public bool ProxyCreationEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if proxies are created; otherwise, `false`. The default value is `true`.'\n  overload: System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectContextOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior\n  commentId: P:System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior\n  id: UseConsistentNullReferenceBehavior\n  parent: System.Data.Objects.ObjectContextOptions\n  langs:\n  - csharp\n  name: UseConsistentNullReferenceBehavior\n  nameWithType: ObjectContextOptions.UseConsistentNullReferenceBehavior\n  fullName: ObjectContextOptions.UseConsistentNullReferenceBehavior\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Gets or sets a Boolean value that determines whether to use the consistent NullReference behavior.\n  remarks: If this flag is set to `false`, then setting the Value property of the <xref:System.Data.Objects.DataClasses.EntityReference%601> for an FK relationship to null when it is already null will have no effect. When this flag is set to `true`, then setting the value to null will always cause the FK to be nulled and the relationship to be deleted even if the value is currently null. The default value is `false` when using ObjectContext and `true` when using DbContext.\n  syntax:\n    content: public bool UseConsistentNullReferenceBehavior { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the consistent NullReference behavior should be used; otherwise, `false`.'\n  overload: System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectContextOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior\n  commentId: P:System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior\n  id: UseCSharpNullComparisonBehavior\n  parent: System.Data.Objects.ObjectContextOptions\n  langs:\n  - csharp\n  name: UseCSharpNullComparisonBehavior\n  nameWithType: ObjectContextOptions.UseCSharpNullComparisonBehavior\n  fullName: ObjectContextOptions.UseCSharpNullComparisonBehavior\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Gets or sets a Boolean value that determines whether to use the C# NullComparison behavior.\n  syntax:\n    content: public bool UseCSharpNullComparisonBehavior { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the C# NullComparison behavior should be used; otherwise, `false`.'\n  overload: System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectContextOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior\n  commentId: P:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior\n  id: UseLegacyPreserveChangesBehavior\n  parent: System.Data.Objects.ObjectContextOptions\n  langs:\n  - csharp\n  name: UseLegacyPreserveChangesBehavior\n  nameWithType: ObjectContextOptions.UseLegacyPreserveChangesBehavior\n  fullName: ObjectContextOptions.UseLegacyPreserveChangesBehavior\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Gets or sets a Boolean value that determines whether to use the legacy PreserveChanges behavior.\n  syntax:\n    content: public bool UseLegacyPreserveChangesBehavior { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the legacy PreserveChanges behavior should be used; otherwise, `false`.'\n  overload: System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectContextOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled\n  parent: System.Data.Objects.ObjectContextOptions\n  isExternal: false\n  name: LazyLoadingEnabled\n  nameWithType: ObjectContextOptions.LazyLoadingEnabled\n  fullName: ObjectContextOptions.LazyLoadingEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled\n  parent: System.Data.Objects.ObjectContextOptions\n  isExternal: false\n  name: ProxyCreationEnabled\n  nameWithType: ObjectContextOptions.ProxyCreationEnabled\n  fullName: ObjectContextOptions.ProxyCreationEnabled\n- uid: System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior\n  parent: System.Data.Objects.ObjectContextOptions\n  isExternal: false\n  name: UseConsistentNullReferenceBehavior\n  nameWithType: ObjectContextOptions.UseConsistentNullReferenceBehavior\n  fullName: ObjectContextOptions.UseConsistentNullReferenceBehavior\n- uid: System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior\n  parent: System.Data.Objects.ObjectContextOptions\n  isExternal: false\n  name: UseCSharpNullComparisonBehavior\n  nameWithType: ObjectContextOptions.UseCSharpNullComparisonBehavior\n  fullName: ObjectContextOptions.UseCSharpNullComparisonBehavior\n- uid: System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior\n  parent: System.Data.Objects.ObjectContextOptions\n  isExternal: false\n  name: UseLegacyPreserveChangesBehavior\n  nameWithType: ObjectContextOptions.UseLegacyPreserveChangesBehavior\n  fullName: ObjectContextOptions.UseLegacyPreserveChangesBehavior\n- uid: System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled*\n  parent: System.Data.Objects.ObjectContextOptions\n  isExternal: false\n  name: LazyLoadingEnabled\n  nameWithType: ObjectContextOptions.LazyLoadingEnabled\n  fullName: ObjectContextOptions.LazyLoadingEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectContextOptions.xml\n- uid: System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled*\n  parent: System.Data.Objects.ObjectContextOptions\n  isExternal: false\n  name: ProxyCreationEnabled\n  nameWithType: ObjectContextOptions.ProxyCreationEnabled\n  fullName: ObjectContextOptions.ProxyCreationEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectContextOptions.xml\n- uid: System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior*\n  parent: System.Data.Objects.ObjectContextOptions\n  isExternal: false\n  name: UseConsistentNullReferenceBehavior\n  nameWithType: ObjectContextOptions.UseConsistentNullReferenceBehavior\n  fullName: ObjectContextOptions.UseConsistentNullReferenceBehavior\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectContextOptions.xml\n- uid: System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior*\n  parent: System.Data.Objects.ObjectContextOptions\n  isExternal: false\n  name: UseCSharpNullComparisonBehavior\n  nameWithType: ObjectContextOptions.UseCSharpNullComparisonBehavior\n  fullName: ObjectContextOptions.UseCSharpNullComparisonBehavior\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectContextOptions.xml\n- uid: System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior*\n  parent: System.Data.Objects.ObjectContextOptions\n  isExternal: false\n  name: UseLegacyPreserveChangesBehavior\n  nameWithType: ObjectContextOptions.UseLegacyPreserveChangesBehavior\n  fullName: ObjectContextOptions.UseLegacyPreserveChangesBehavior\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectContextOptions.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}