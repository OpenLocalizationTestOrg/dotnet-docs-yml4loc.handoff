{"nodes":[{"content":"Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.","nodes":[{"pos":[0,78],"content":"Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.","nodes":[{"content":"Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.","pos":[0,78]}]}],"pos":[1041,1120],"yaml":true},{"content":"When you apply this attribute to a data field, you must follow the guidelines for the use of the attributes. For more information, see [ASP.NET Dynamic Data Guidelines](http://msdn.microsoft.com/en-us/c563bbf3-feb9-484e-81d1-a585f1b0e192).","nodes":[{"pos":[0,239],"content":"When you apply this attribute to a data field, you must follow the guidelines for the use of the attributes. For more information, see [ASP.NET Dynamic Data Guidelines](http://msdn.microsoft.com/en-us/c563bbf3-feb9-484e-81d1-a585f1b0e192).","nodes":[{"content":"When you apply this attribute to a data field, you must follow the guidelines for the use of the attributes.","pos":[0,108]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>ASP.NET Dynamic Data Guidelines<ept id=\"p1\">](http://msdn.microsoft.com/en-us/c563bbf3-feb9-484e-81d1-a585f1b0e192)</ept>.","pos":[109,239],"source":" For more information, see [ASP.NET Dynamic Data Guidelines](http://msdn.microsoft.com/en-us/c563bbf3-feb9-484e-81d1-a585f1b0e192)."}]}],"pos":[1131,1371],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute\"></xref> class.","nodes":[{"pos":[0,122],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute\"></xref> class."}],"pos":[8949,9072],"yaml":true},{"content":"Gets or sets a value that indicates whether the formatting string that is specified by the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\"></xref> property is applied to the field value when the data field is in edit mode.","nodes":[{"pos":[0,265],"content":"Gets or sets a value that indicates whether the formatting string that is specified by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\"&gt;&lt;/xref&gt;</ph> property is applied to the field value when the data field is in edit mode.","source":"Gets or sets a value that indicates whether the formatting string that is specified by the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\"></xref> property is applied to the field value when the data field is in edit mode."}],"pos":[10634,10900],"yaml":true},{"content":"By default, the formatting string that is specified by the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode.","nodes":[{"pos":[0,237],"content":"By default, the formatting string that is specified by the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode.","nodes":[{"content":"By default, the formatting string that is specified by the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A&gt;</ph> property is applied to field values only when the data-bound control is in read-only mode.","pos":[0,237],"source":"By default, the formatting string that is specified by the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode."}]}],"pos":[10911,11149],"yaml":true,"extradata":"MT"},{"content":"`true` if the formatting string applies to the field value in edit mode; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,116],"content":"`true` if the formatting string applies to the field value in edit mode; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the formatting string applies to the field value in edit mode; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,92],"source":"`true` if the formatting string applies to the field value in edit mode; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[93,116],"source":" The default is `false`."}]}],"pos":[12113,12232],"yaml":true},{"content":"Gets or sets a value that indicates whether empty string values (\"\") are automatically converted to `null` when the data field is updated in the data source.","nodes":[{"pos":[0,157],"content":"Gets or sets a value that indicates whether empty string values (\"\") are automatically converted to <ph id=\"ph1\">`null`</ph> when the data field is updated in the data source.","source":"Gets or sets a value that indicates whether empty string values (\"\") are automatically converted to `null` when the data field is updated in the data source."}],"pos":[13752,13910],"yaml":true},{"content":"Users might enter an empty string for a field value. Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to `null` when the data field is updated in the database.  \n  \n> [!NOTE]\n>  By default, a <xref:System.Web.DynamicData.DynamicField> object displays `null` values as empty strings. To display a different value, set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property.","nodes":[{"pos":[0,291],"content":"Users might enter an empty string for a field value. Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to `null` when the data field is updated in the database.","nodes":[{"content":"Users might enter an empty string for a field value.","pos":[0,52]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A&gt;</ph> property to specify whether an empty string value is automatically converted to <ph id=\"ph2\">`null`</ph> when the data field is updated in the database.","pos":[53,291],"source":" Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to `null` when the data field is updated in the database."}]},{"pos":[299,549],"content":"[!NOTE]\n By default, a <xref:System.Web.DynamicData.DynamicField> object displays `null` values as empty strings. To display a different value, set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property.","leadings":["","> "],"nodes":[{"content":" By default, a <xref:System.Web.DynamicData.DynamicField> object displays `null` values as empty strings. To display a different value, set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property.","pos":[8,248],"nodes":[{"content":"By default, a <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicField&gt;</ph> object displays <ph id=\"ph2\">`null`</ph> values as empty strings.","pos":[1,105],"source":" By default, a <xref:System.Web.DynamicData.DynamicField> object displays `null` values as empty strings."},{"content":"To display a different value, set the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A&gt;</ph> property.","pos":[106,240],"source":" To display a different value, set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property."}]}]}],"pos":[13921,14476],"yaml":true,"extradata":"MT"},{"content":"`true` if empty string values are automatically converted to `null`; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,111],"content":"`true` if empty string values are automatically converted to `null`; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if empty string values are automatically converted to <ph id=\"ph2\">`null`</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,88],"source":"`true` if empty string values are automatically converted to `null`; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[89,111],"source":" The default is `true`."}]}],"pos":[15238,15352],"yaml":true},{"content":"Gets or sets the display format for the field value.","nodes":[{"pos":[0,52],"content":"Gets or sets the display format for the field value.","nodes":[{"content":"Gets or sets the display format for the field value.","pos":[0,52]}]}],"pos":[16827,16880],"yaml":true},{"content":"Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property to specify a custom display format for the values that are displayed in the <xref:System.Web.DynamicData.DynamicField> object. If the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is not set, the field's value is displayed without any special formatting. For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n> [!NOTE]\n>  When the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property is `true`, the value of the field is HTML encoded to its string representation before the formatting string is applied. For some objects, such as dates, you might want to control how the object is displayed with a formatting string. In those cases, you must set the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property to `false`.  \n  \n By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode. To apply the formatting string to field values when they are in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.  \n  \n The formatting string can be any literal string and usually includes a placeholder for the field's value. For example, in the formatting string \"Item Value: {0}\", the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.DynamicData.DynamicField> object. The remainder of the formatting string is displayed as literal text.  \n  \n> [!NOTE]\n>  If the formatting string does not include a placeholder, the field's value from the data source is not included in the final display text.","nodes":[{"pos":[0,504],"content":"Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property to specify a custom display format for the values that are displayed in the <xref:System.Web.DynamicData.DynamicField> object. If the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is not set, the field's value is displayed without any special formatting. For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A&gt;</ph> property to specify a custom display format for the values that are displayed in the <ph id=\"ph2\">&lt;xref:System.Web.DynamicData.DynamicField&gt;</ph> object.","pos":[0,231],"source":"Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property to specify a custom display format for the values that are displayed in the <xref:System.Web.DynamicData.DynamicField> object."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A&gt;</ph> property is not set, the field's value is displayed without any special formatting.","pos":[232,410],"source":" If the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is not set, the field's value is displayed without any special formatting."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","pos":[411,504],"source":" For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."}]},{"pos":[512,991],"content":"[!NOTE]\n When the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property is `true`, the value of the field is HTML encoded to its string representation before the formatting string is applied. For some objects, such as dates, you might want to control how the object is displayed with a formatting string. In those cases, you must set the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property to `false`.","leadings":["","> "],"nodes":[{"content":" When the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property is `true`, the value of the field is HTML encoded to its string representation before the formatting string is applied. For some objects, such as dates, you might want to control how the object is displayed with a formatting string. In those cases, you must set the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property to `false`.","pos":[8,477],"nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, the value of the field is HTML encoded to its string representation before the formatting string is applied.","pos":[1,220],"source":" When the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property is `true`, the value of the field is HTML encoded to its string representation before the formatting string is applied."},{"content":"For some objects, such as dates, you might want to control how the object is displayed with a formatting string.","pos":[221,333]},{"content":"In those cases, you must set the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName&gt;</ph> property to <ph id=\"ph2\">`false`</ph>.","pos":[334,469],"source":" In those cases, you must set the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property to `false`."}]}]},{"pos":[998,1355],"content":"By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode. To apply the formatting string to field values when they are in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.","nodes":[{"content":"By default, the formatting string is applied to the field value only when the data-bound control that contains the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicField&gt;</ph> object is in read-only mode.","pos":[0,186],"source":"By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode."},{"content":"To apply the formatting string to field values when they are in edit mode, set the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[187,357],"source":" To apply the formatting string to field values when they are in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`."}]},{"pos":[1362,1737],"content":"The formatting string can be any literal string and usually includes a placeholder for the field's value. For example, in the formatting string \"Item Value: {0}\", the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.DynamicData.DynamicField> object. The remainder of the formatting string is displayed as literal text.","nodes":[{"content":"The formatting string can be any literal string and usually includes a placeholder for the field's value. For example, in the formatting string \"Item Value: {0}\", the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.DynamicData.DynamicField> object. The remainder of the formatting string is displayed as literal text.","pos":[0,375],"nodes":[{"content":"The formatting string can be any literal string and usually includes a placeholder for the field's value.","pos":[0,105]},{"content":"For example, in the formatting string \"Item Value: {0}\", the field's value is substituted for the {0} placeholder when the string is displayed in the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicField&gt;</ph> object.","pos":[106,306],"source":" For example, in the formatting string \"Item Value: {0}\", the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.DynamicData.DynamicField> object."},{"content":"The remainder of the formatting string is displayed as literal text.","pos":[307,375]}]}]},{"pos":[1745,1894],"content":"[!NOTE]\n If the formatting string does not include a placeholder, the field's value from the data source is not included in the final display text.","leadings":["","> "],"nodes":[{"content":"If the formatting string does not include a placeholder, the field's value from the data source is not included in the final display text.","pos":[9,147]}]}],"pos":[16891,18800],"yaml":true,"extradata":"MT"},{"content":"A formatting string that specifies the display format for the value of the data field. The default is an empty string (\"\"), which indicates that no special formatting is applied to the field value.","nodes":[{"pos":[0,197],"content":"A formatting string that specifies the display format for the value of the data field. The default is an empty string (\"\"), which indicates that no special formatting is applied to the field value.","nodes":[{"content":"A formatting string that specifies the display format for the value of the data field. The default is an empty string (\"\"), which indicates that no special formatting is applied to the field value.","pos":[0,197],"nodes":[{"content":"A formatting string that specifies the display format for the value of the data field.","pos":[0,86]},{"content":"The default is an empty string (\"\"), which indicates that no special formatting is applied to the field value.","pos":[87,197]}]}]}],"pos":[20099,20297],"yaml":true},{"content":"Gets or sets a value that indicates whether the field should be HTML-encoded.","nodes":[{"pos":[0,77],"content":"Gets or sets a value that indicates whether the field should be HTML-encoded.","nodes":[{"content":"Gets or sets a value that indicates whether the field should be HTML-encoded.","pos":[0,77]}]}],"pos":[21728,21806],"yaml":true},{"content":"`true` if the field should be HTML-encoded; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if the field should be HTML-encoded; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the field should be HTML-encoded; otherwise, `false`."}],"pos":[21924,21990],"yaml":true},{"content":"Gets or sets the text that is displayed for a field when the field's value is `null`.","nodes":[{"pos":[0,85],"content":"Gets or sets the text that is displayed for a field when the field's value is <ph id=\"ph1\">`null`</ph>.","source":"Gets or sets the text that is displayed for a field when the field's value is `null`."}],"pos":[23445,23531],"yaml":true},{"content":"Sometimes a data field's value is stored as null values in the source. You can specify custom text to display for data fields that have a null value by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property. If this property is not set, null field values are displayed as empty strings (\"\").  \n  \n> [!NOTE]\n>  To convert an empty string field value to a null value, you must set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to `true`.","nodes":[{"pos":[0,344],"content":"Sometimes a data field's value is stored as null values in the source. You can specify custom text to display for data fields that have a null value by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property. If this property is not set, null field values are displayed as empty strings (\"\").","nodes":[{"content":"Sometimes a data field's value is stored as null values in the source. You can specify custom text to display for data fields that have a null value by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property. If this property is not set, null field values are displayed as empty strings (\"\").","pos":[0,344],"nodes":[{"content":"Sometimes a data field's value is stored as null values in the source.","pos":[0,70]},{"content":"You can specify custom text to display for data fields that have a null value by setting the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A&gt;</ph> property.","pos":[71,260],"source":" You can specify custom text to display for data fields that have a null value by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property."},{"content":"If this property is not set, null field values are displayed as empty strings (\"\").","pos":[261,344]}]}]},{"pos":[352,551],"content":"[!NOTE]\n To convert an empty string field value to a null value, you must set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to `true`.","leadings":["","> "],"nodes":[{"content":"To convert an empty string field value to a null value, you must set the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[9,197],"source":" To convert an empty string field value to a null value, you must set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to `true`."}]}],"pos":[23542,24101],"yaml":true,"extradata":"MT"},{"content":"The text that is displayed for a field when the field's value is `null`. The default is an empty string (\"\"), which indicates that this property is not set.","nodes":[{"pos":[0,156],"content":"The text that is displayed for a field when the field's value is `null`. The default is an empty string (\"\"), which indicates that this property is not set.","nodes":[{"content":"The text that is displayed for a field when the field's value is <ph id=\"ph1\">`null`</ph>.","pos":[0,72],"source":"The text that is displayed for a field when the field's value is `null`."},{"content":"The default is an empty string (\"\"), which indicates that this property is not set.","pos":[73,156]}]}],"pos":[24849,25006],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  commentId: T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  id: DisplayFormatAttribute\n  children:\n  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor\n  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode\n  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull\n  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\n  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode\n  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText\n  langs:\n  - csharp\n  name: DisplayFormatAttribute\n  nameWithType: DisplayFormatAttribute\n  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  type: Class\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.\n  remarks: When you apply this attribute to a data field, you must follow the guidelines for the use of the attributes. For more information, see [ASP.NET Dynamic Data Guidelines](http://msdn.microsoft.com/en-us/c563bbf3-feb9-484e-81d1-a585f1b0e192).\n  example:\n  - \"See an online example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.ComponentModel.DataAnnotations.DisplayFormatAttribute).  \\n  \\n The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> to customize formatting for a data field. The example performs the following steps:  \\n  \\n-   Implements a metadata partial class and an associated metadata class.  \\n  \\n-   In the associated metadata class, it applies the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute to specify the following results:  \\n  \\n    -   Display the text \\\"[Null]\\\" when a data field is empty.  \\n  \\n    -   Display currency data in locale specific currency format.  \\n  \\n    -   Display date information in short format (mm/dd/yy). This format also applies in edit mode.  \\n  \\n [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#1)]\\n [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#1)]  \\n  \\n To compile the example, you need the following:  \\n  \\n-   [!INCLUDE[vs_orcas_ext](~/includes/vs-orcas-ext-md.md)] Service Pack 1 or [!INCLUDE[vwd_exp_orcas_long](~/includes/vwd-exp-orcas-long-md.md)] Service Pack 1.  \\n  \\n-   The AdventureWorksLT sample database. For information about how to download and install the SQL Server sample database, see [Microsoft SQL Server Product Samples: Database](http://go.microsoft.com/fwlink/?LinkId=117483) on the CodePlex site. Make sure that you install the correct version of the sample database for the version of SQL Server that you are running ([!INCLUDE[sqprsqext](~/includes/sqprsqext-md.md)] or [!INCLUDE[ssKatmai_long](~/includes/sskatmai-long-md.md)]).  \\n  \\n-   A data-driven Web site. This enables you to create a data context for the database and the class that contains the data field to customize. For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)]\n\n      public class DisplayFormatAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor\n  commentId: M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  langs:\n  - csharp\n  name: DisplayFormatAttribute()\n  nameWithType: DisplayFormatAttribute.DisplayFormatAttribute()\n  fullName: DisplayFormatAttribute.DisplayFormatAttribute()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute\"></xref> class.\n  syntax:\n    content: public DisplayFormatAttribute ();\n    parameters: []\n  overload: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode\n  commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode\n  id: ApplyFormatInEditMode\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  langs:\n  - csharp\n  name: ApplyFormatInEditMode\n  nameWithType: DisplayFormatAttribute.ApplyFormatInEditMode\n  fullName: DisplayFormatAttribute.ApplyFormatInEditMode\n  type: Property\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets or sets a value that indicates whether the formatting string that is specified by the <xref href=\"System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\"></xref> property is applied to the field value when the data field is in edit mode.\n  remarks: By default, the formatting string that is specified by the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode.\n  example:\n  - \"The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A> property to set the display format for date information when the data field is in edit mode. The data field format to use for the data field is specified by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property.  \\n  \\n [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#4)]\\n [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#4)]\"\n  syntax:\n    content: public bool ApplyFormatInEditMode { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the formatting string applies to the field value in edit mode; otherwise, `false`. The default is `false`.'\n  overload: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull\n  commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull\n  id: ConvertEmptyStringToNull\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  langs:\n  - csharp\n  name: ConvertEmptyStringToNull\n  nameWithType: DisplayFormatAttribute.ConvertEmptyStringToNull\n  fullName: DisplayFormatAttribute.ConvertEmptyStringToNull\n  type: Property\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets or sets a value that indicates whether empty string values (\"\") are automatically converted to `null` when the data field is updated in the data source.\n  remarks: \"Users might enter an empty string for a field value. Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to `null` when the data field is updated in the database.  \\n  \\n> [!NOTE]\\n>  By default, a <xref:System.Web.DynamicData.DynamicField> object displays `null` values as empty strings. To display a different value, set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property.\"\n  example:\n  - \"The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> to enable the conversion of empty string values to `null`.  \\n  \\n [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#2)]\\n [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#2)]\"\n  syntax:\n    content: public bool ConvertEmptyStringToNull { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if empty string values are automatically converted to `null`; otherwise, `false`. The default is `true`.'\n  overload: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\n  commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\n  id: DataFormatString\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  langs:\n  - csharp\n  name: DataFormatString\n  nameWithType: DisplayFormatAttribute.DataFormatString\n  fullName: DisplayFormatAttribute.DataFormatString\n  type: Property\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets or sets the display format for the field value.\n  remarks: \"Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property to specify a custom display format for the values that are displayed in the <xref:System.Web.DynamicData.DynamicField> object. If the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is not set, the field's value is displayed without any special formatting. For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \\n  \\n> [!NOTE]\\n>  When the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property is `true`, the value of the field is HTML encoded to its string representation before the formatting string is applied. For some objects, such as dates, you might want to control how the object is displayed with a formatting string. In those cases, you must set the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property to `false`.  \\n  \\n By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode. To apply the formatting string to field values when they are in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.  \\n  \\n The formatting string can be any literal string and usually includes a placeholder for the field's value. For example, in the formatting string \\\"Item Value: {0}\\\", the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.DynamicData.DynamicField> object. The remainder of the formatting string is displayed as literal text.  \\n  \\n> [!NOTE]\\n>  If the formatting string does not include a placeholder, the field's value from the data source is not included in the final display text.\"\n  example:\n  - \"The following examples show how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property to set the display format of data fields. The first example sets the display format for a currency type data field. The second example sets the display format for a date type data field.  \\n  \\n [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#3)]\\n [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#3)]  \\n  \\n [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#4)]\\n [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#4)]\"\n  syntax:\n    content: public string DataFormatString { get; set; }\n    return:\n      type: System.String\n      description: A formatting string that specifies the display format for the value of the data field. The default is an empty string (\"\"), which indicates that no special formatting is applied to the field value.\n  overload: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode\n  commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode\n  id: HtmlEncode\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  langs:\n  - csharp\n  name: HtmlEncode\n  nameWithType: DisplayFormatAttribute.HtmlEncode\n  fullName: DisplayFormatAttribute.HtmlEncode\n  type: Property\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets or sets a value that indicates whether the field should be HTML-encoded.\n  syntax:\n    content: public bool HtmlEncode { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the field should be HTML-encoded; otherwise, `false`.'\n  overload: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText\n  commentId: P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText\n  id: NullDisplayText\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  langs:\n  - csharp\n  name: NullDisplayText\n  nameWithType: DisplayFormatAttribute.NullDisplayText\n  fullName: DisplayFormatAttribute.NullDisplayText\n  type: Property\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets or sets the text that is displayed for a field when the field's value is `null`.\n  remarks: \"Sometimes a data field's value is stored as null values in the source. You can specify custom text to display for data fields that have a null value by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property. If this property is not set, null field values are displayed as empty strings (\\\"\\\").  \\n  \\n> [!NOTE]\\n>  To convert an empty string field value to a null value, you must set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to `true`.\"\n  example:\n  - \"The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> to define a caption to display when the data field is `null`.  \\n  \\n [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#2)]\\n [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#2)]\"\n  syntax:\n    content: public string NullDisplayText { get; set; }\n    return:\n      type: System.String\n      description: The text that is displayed for a field when the field's value is `null`. The default is an empty string (\"\"), which indicates that this property is not set.\n  overload: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: DisplayFormatAttribute()\n  nameWithType: DisplayFormatAttribute.DisplayFormatAttribute()\n  fullName: DisplayFormatAttribute.DisplayFormatAttribute()\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: ApplyFormatInEditMode\n  nameWithType: DisplayFormatAttribute.ApplyFormatInEditMode\n  fullName: DisplayFormatAttribute.ApplyFormatInEditMode\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: ConvertEmptyStringToNull\n  nameWithType: DisplayFormatAttribute.ConvertEmptyStringToNull\n  fullName: DisplayFormatAttribute.ConvertEmptyStringToNull\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: DataFormatString\n  nameWithType: DisplayFormatAttribute.DataFormatString\n  fullName: DisplayFormatAttribute.DataFormatString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: HtmlEncode\n  nameWithType: DisplayFormatAttribute.HtmlEncode\n  fullName: DisplayFormatAttribute.HtmlEncode\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: NullDisplayText\n  nameWithType: DisplayFormatAttribute.NullDisplayText\n  fullName: DisplayFormatAttribute.NullDisplayText\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor*\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: DisplayFormatAttribute\n  nameWithType: DisplayFormatAttribute.DisplayFormatAttribute\n  fullName: DisplayFormatAttribute.DisplayFormatAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode*\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: ApplyFormatInEditMode\n  nameWithType: DisplayFormatAttribute.ApplyFormatInEditMode\n  fullName: DisplayFormatAttribute.ApplyFormatInEditMode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull*\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: ConvertEmptyStringToNull\n  nameWithType: DisplayFormatAttribute.ConvertEmptyStringToNull\n  fullName: DisplayFormatAttribute.ConvertEmptyStringToNull\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString*\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: DataFormatString\n  nameWithType: DisplayFormatAttribute.DataFormatString\n  fullName: DisplayFormatAttribute.DataFormatString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode*\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: HtmlEncode\n  nameWithType: DisplayFormatAttribute.HtmlEncode\n  fullName: DisplayFormatAttribute.HtmlEncode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText*\n  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute\n  isExternal: false\n  name: NullDisplayText\n  nameWithType: DisplayFormatAttribute.NullDisplayText\n  fullName: DisplayFormatAttribute.NullDisplayText\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/DisplayFormatAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}