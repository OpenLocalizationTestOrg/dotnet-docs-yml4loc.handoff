{"nodes":[{"content":"Defines a control and optional event of the control as an asynchronous postback control trigger that causes an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control to refresh.","nodes":[{"pos":[0,177],"content":"Defines a control and optional event of the control as an asynchronous postback control trigger that causes an <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control to refresh.","source":"Defines a control and optional event of the control as an asynchronous postback control trigger that causes an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control to refresh."}],"pos":[764,942],"yaml":true},{"content":"Use the <xref:System.Web.UI.AsyncPostBackTrigger> control to enable controls to be triggers for an <xref:System.Web.UI.UpdatePanel> control. Controls that are triggers for an update panel cause a refresh of the panel's content after an asynchronous postback. Defining an asynchronous trigger control is useful in the following scenarios:  \n  \n-   For controls that are outside a panel.  \n  \n-   For controls that are inside a panel when the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `false`.  \n  \n-   For controls that are inside nested panels, in order to cause a refresh of parent panels.  \n  \n The control that the <xref:System.Web.UI.AsyncPostBackTrigger> control references must be in the same naming container as the update panel for which it is a trigger. Triggers that are based on controls in other naming containers are not supported.  \n  \n Add <xref:System.Web.UI.AsyncPostBackTrigger> controls either by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by creating a `Triggers` element declaratively in the <xref:System.Web.UI.UpdatePanel> control. The <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> property is required, but the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional. If the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event. For example, the default event for the <xref:System.Web.UI.WebControls.Button> control is the <xref:System.Web.UI.WebControls.Button.Click> event. The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is case-insensitive.  \n  \n You can also reference a naming container as a trigger. In that case, all child controls in the container that cause a postback are considered triggers for the <xref:System.Web.UI.UpdatePanel> control.  \n  \n Programmatically adding <xref:System.Web.UI.AsyncPostBackTrigger> controls is not supported. To programmatically register a postback control, use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control. Then call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control when the control posts back.  \n  \n If you define a control using both <xref:System.Web.UI.PostBackTrigger> and <xref:System.Web.UI.AsyncPostBackTrigger>, an exception is thrown.","nodes":[{"pos":[0,337],"content":"Use the <xref:System.Web.UI.AsyncPostBackTrigger> control to enable controls to be triggers for an <xref:System.Web.UI.UpdatePanel> control. Controls that are triggers for an update panel cause a refresh of the panel's content after an asynchronous postback. Defining an asynchronous trigger control is useful in the following scenarios:","nodes":[{"content":"Use the <xref:System.Web.UI.AsyncPostBackTrigger> control to enable controls to be triggers for an <xref:System.Web.UI.UpdatePanel> control. Controls that are triggers for an update panel cause a refresh of the panel's content after an asynchronous postback. Defining an asynchronous trigger control is useful in the following scenarios:","pos":[0,337],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.AsyncPostBackTrigger&gt;</ph> control to enable controls to be triggers for an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","pos":[0,140],"source":"Use the <xref:System.Web.UI.AsyncPostBackTrigger> control to enable controls to be triggers for an <xref:System.Web.UI.UpdatePanel> control."},{"content":"Controls that are triggers for an update panel cause a refresh of the panel's content after an asynchronous postback.","pos":[141,258]},{"content":"Defining an asynchronous trigger control is useful in the following scenarios:","pos":[259,337]}]}]},{"pos":[347,385],"content":"For controls that are outside a panel.","nodes":[{"content":"For controls that are outside a panel.","pos":[0,38]}]},{"pos":[395,516],"content":"For controls that are inside a panel when the <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>.","source":"For controls that are inside a panel when the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `false`."},{"pos":[526,615],"content":"For controls that are inside nested panels, in order to cause a refresh of parent panels.","nodes":[{"content":"For controls that are inside nested panels, in order to cause a refresh of parent panels.","pos":[0,89]}]},{"pos":[622,869],"content":"The control that the <xref:System.Web.UI.AsyncPostBackTrigger> control references must be in the same naming container as the update panel for which it is a trigger. Triggers that are based on controls in other naming containers are not supported.","nodes":[{"content":"The control that the <xref:System.Web.UI.AsyncPostBackTrigger> control references must be in the same naming container as the update panel for which it is a trigger. Triggers that are based on controls in other naming containers are not supported.","pos":[0,247],"nodes":[{"content":"The control that the <ph id=\"ph1\">&lt;xref:System.Web.UI.AsyncPostBackTrigger&gt;</ph> control references must be in the same naming container as the update panel for which it is a trigger.","pos":[0,165],"source":"The control that the <xref:System.Web.UI.AsyncPostBackTrigger> control references must be in the same naming container as the update panel for which it is a trigger."},{"content":"Triggers that are based on controls in other naming containers are not supported.","pos":[166,247]}]}]},{"pos":[876,1728],"content":"Add <xref:System.Web.UI.AsyncPostBackTrigger> controls either by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by creating a `Triggers` element declaratively in the <xref:System.Web.UI.UpdatePanel> control. The <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> property is required, but the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional. If the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event. For example, the default event for the <xref:System.Web.UI.WebControls.Button> control is the <xref:System.Web.UI.WebControls.Button.Click> event. The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is case-insensitive.","nodes":[{"content":"Add <ph id=\"ph1\">&lt;xref:System.Web.UI.AsyncPostBackTrigger&gt;</ph> controls either by using the <bpt id=\"p1\">**</bpt>UpdatePanelTrigger Collection Editor<ept id=\"p1\">**</ept> dialog box in the designer or by creating a <ph id=\"ph2\">`Triggers`</ph> element declaratively in the <ph id=\"ph3\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","pos":[0,241],"source":"Add <xref:System.Web.UI.AsyncPostBackTrigger> controls either by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by creating a `Triggers` element declaratively in the <xref:System.Web.UI.UpdatePanel> control."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A&gt;</ph> property is required, but the <ph id=\"ph2\">&lt;xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A&gt;</ph> property is optional.","pos":[242,407],"source":" The <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> property is required, but the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A&gt;</ph> property is not specified, the <ph id=\"ph2\">&lt;xref:System.ComponentModel.DefaultEventAttribute&gt;</ph> attribute of the control is used to determine the default event.","pos":[408,616],"source":" If the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event."},{"content":"For example, the default event for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control is the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.Button.Click&gt;</ph> event.","pos":[617,763],"source":" For example, the default event for the <xref:System.Web.UI.WebControls.Button> control is the <xref:System.Web.UI.WebControls.Button.Click> event."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A&gt;</ph> property is case-insensitive.","pos":[764,852],"source":" The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is case-insensitive."}]},{"pos":[1735,1936],"content":"You can also reference a naming container as a trigger. In that case, all child controls in the container that cause a postback are considered triggers for the <xref:System.Web.UI.UpdatePanel> control.","nodes":[{"content":"You can also reference a naming container as a trigger. In that case, all child controls in the container that cause a postback are considered triggers for the <xref:System.Web.UI.UpdatePanel> control.","pos":[0,201],"nodes":[{"content":"You can also reference a naming container as a trigger.","pos":[0,55]},{"content":"In that case, all child controls in the container that cause a postback are considered triggers for the <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","pos":[56,201],"source":" In that case, all child controls in the container that cause a postback are considered triggers for the <xref:System.Web.UI.UpdatePanel> control."}]}]},{"pos":[1943,2358],"content":"Programmatically adding <xref:System.Web.UI.AsyncPostBackTrigger> controls is not supported. To programmatically register a postback control, use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control. Then call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control when the control posts back.","nodes":[{"content":"Programmatically adding <xref:System.Web.UI.AsyncPostBackTrigger> controls is not supported. To programmatically register a postback control, use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control. Then call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control when the control posts back.","pos":[0,415],"nodes":[{"content":"Programmatically adding <ph id=\"ph1\">&lt;xref:System.Web.UI.AsyncPostBackTrigger&gt;</ph> controls is not supported.","pos":[0,92],"source":"Programmatically adding <xref:System.Web.UI.AsyncPostBackTrigger> controls is not supported."},{"content":"To programmatically register a postback control, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control.","pos":[93,274],"source":" To programmatically register a postback control, use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control."},{"content":"Then call the <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel.Update%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control when the control posts back.","pos":[275,415],"source":" Then call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control when the control posts back."}]}]},{"pos":[2365,2507],"content":"If you define a control using both <xref:System.Web.UI.PostBackTrigger> and <xref:System.Web.UI.AsyncPostBackTrigger>, an exception is thrown.","nodes":[{"content":"If you define a control using both <ph id=\"ph1\">&lt;xref:System.Web.UI.PostBackTrigger&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.UI.AsyncPostBackTrigger&gt;</ph>, an exception is thrown.","pos":[0,142],"source":"If you define a control using both <xref:System.Web.UI.PostBackTrigger> and <xref:System.Web.UI.AsyncPostBackTrigger>, an exception is thrown."}]}],"pos":[953,3479],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of an <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> class.","nodes":[{"pos":[0,95],"content":"Initializes a new instance of an <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.AsyncPostBackTrigger\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of an <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> class."}],"pos":[6064,6160],"yaml":true},{"content":"Add <xref:System.Web.UI.AsyncPostBackTrigger> controls either by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by creating a `Triggers` element declaratively in the <xref:System.Web.UI.UpdatePanel> control.  \n  \n Adding <xref:System.Web.UI.AsyncPostBackTrigger> controls programmatically is not supported.","nodes":[{"pos":[0,241],"content":"Add <ph id=\"ph1\">&lt;xref:System.Web.UI.AsyncPostBackTrigger&gt;</ph> controls either by using the <bpt id=\"p1\">**</bpt>UpdatePanelTrigger Collection Editor<ept id=\"p1\">**</ept> dialog box in the designer or by creating a <ph id=\"ph2\">`Triggers`</ph> element declaratively in the <ph id=\"ph3\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","source":"Add <xref:System.Web.UI.AsyncPostBackTrigger> controls either by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by creating a `Triggers` element declaratively in the <xref:System.Web.UI.UpdatePanel> control."},{"pos":[248,340],"content":"Adding <xref:System.Web.UI.AsyncPostBackTrigger> controls programmatically is not supported.","nodes":[{"content":"Adding <ph id=\"ph1\">&lt;xref:System.Web.UI.AsyncPostBackTrigger&gt;</ph> controls programmatically is not supported.","pos":[0,92],"source":"Adding <xref:System.Web.UI.AsyncPostBackTrigger> controls programmatically is not supported."}]}],"pos":[6171,6516],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the name of the control that triggers an asynchronous postback for an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.","nodes":[{"pos":[0,138],"content":"Gets or sets the name of the control that triggers an asynchronous postback for an <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control.","source":"Gets or sets the name of the control that triggers an asynchronous postback for an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."}],"pos":[7572,7711],"yaml":true},{"content":"A server control ID.","nodes":[{"pos":[0,20],"content":"A server control ID.","nodes":[{"content":"A server control ID.","pos":[0,20]}]}],"pos":[8043,8064],"yaml":true},{"content":"Gets or sets the postback control event that triggers an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control to be updated.","nodes":[{"pos":[0,126],"content":"Gets or sets the postback control event that triggers an <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control to be updated.","source":"Gets or sets the postback control event that triggers an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control to be updated."}],"pos":[9119,9246],"yaml":true},{"content":"The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional. If it is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event. The following table lists default events for some common ASP.NET 2.0 controls.  \n  \n|Control|Default event|  \n|-------------|-------------------|  \n|<xref:System.Web.UI.WebControls.Button>|<xref:System.Web.UI.WebControls.Button.Click>|  \n|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|  \n|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|  \n|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|  \n|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.TextChanged>|","nodes":[{"pos":[0,303],"content":"The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional. If it is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event. The following table lists default events for some common ASP.NET 2.0 controls.","nodes":[{"content":"The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional. If it is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event. The following table lists default events for some common ASP.NET 2.0 controls.","pos":[0,303],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A&gt;</ph> property is optional.","pos":[0,80],"source":"The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional."},{"content":"If it is not specified, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DefaultEventAttribute&gt;</ph> attribute of the control is used to determine the default event.","pos":[81,224],"source":" If it is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event."},{"content":"The following table lists default events for some common ASP.NET 2.0 controls.","pos":[225,303]}]}]},{"pos":[310,317],"content":"Control","nodes":[{"content":"Control","pos":[0,7]}]},{"pos":[318,331],"content":"Default event","nodes":[{"content":"Default event","pos":[0,13]}]},{"pos":[374,413],"content":"<xref:System.Web.UI.WebControls.Button>","nodes":[]},{"pos":[414,459],"content":"<xref:System.Web.UI.WebControls.Button.Click>","nodes":[]},{"pos":[464,505],"content":"<xref:System.Web.UI.WebControls.Calendar>","nodes":[]},{"pos":[506,564],"content":"<xref:System.Web.UI.WebControls.Calendar.SelectionChanged>","nodes":[]},{"pos":[569,610],"content":"<xref:System.Web.UI.WebControls.CheckBox>","nodes":[]},{"pos":[611,667],"content":"<xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>","nodes":[]},{"pos":[672,713],"content":"<xref:System.Web.UI.WebControls.GridView>","nodes":[]},{"pos":[714,776],"content":"<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>","nodes":[]},{"pos":[781,821],"content":"<xref:System.Web.UI.WebControls.TextBox>","nodes":[]},{"pos":[822,874],"content":"<xref:System.Web.UI.WebControls.TextBox.TextChanged>","nodes":[]}],"pos":[9257,10143],"yaml":true,"extradata":"MT"},{"content":"The event name. The default value is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,78],"content":"The event name. The default value is <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"The event name.","pos":[0,15]},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[16,78],"source":" The default value is <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[10475,10554],"yaml":true},{"content":"Returns a value that indicates whether the trigger was invoked.","nodes":[{"pos":[0,63],"content":"Returns a value that indicates whether the trigger was invoked.","nodes":[{"content":"Returns a value that indicates whether the trigger was invoked.","pos":[0,63]}]}],"pos":[11631,11695],"yaml":true},{"content":"Control developers can override the <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> method to provide custom logic for determining whether the trigger was invoked. To see a custom trigger in the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control, you can add an  directive to the page or to the  element of the Web.config file.","nodes":[{"pos":[0,353],"content":"Control developers can override the <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> method to provide custom logic for determining whether the trigger was invoked. To see a custom trigger in the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control, you can add an  directive to the page or to the  element of the Web.config file.","nodes":[{"content":"Control developers can override the <ph id=\"ph1\">&lt;xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A&gt;</ph> method to provide custom logic for determining whether the trigger was invoked.","pos":[0,173],"source":"Control developers can override the <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> method to provide custom logic for determining whether the trigger was invoked."},{"content":"To see a custom trigger in the <ph id=\"ph1\">`Triggers`</ph> element of the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, you can add an  directive to the page or to the  element of the Web.config file.","pos":[174,353],"source":" To see a custom trigger in the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control, you can add an  directive to the page or to the  element of the Web.config file."}]}],"pos":[11706,12060],"yaml":true,"extradata":"MT"},{"content":"`true` if the trigger was invoked; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the trigger was invoked; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the trigger was invoked; otherwise, `false`."}],"pos":[12201,12258],"yaml":true},{"content":"Initializes the <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> control and determines whether the event that is named in the trigger exists and is valid.","nodes":[{"pos":[0,162],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.AsyncPostBackTrigger\"&gt;&lt;/xref&gt;</ph> control and determines whether the event that is named in the trigger exists and is valid.","source":"Initializes the <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> control and determines whether the event that is named in the trigger exists and is valid."}],"pos":[13257,13420],"yaml":true},{"content":"No <xref href=\"System.Web.UI.ScriptManager\"></xref> control was found on the page.  \n  \n \\- or -  \n  \n The event that is named in the <xref href=\"System.Web.UI.AsyncPostBackTrigger.EventName\"></xref> property is not found for the control that is named in the <xref href=\"System.Web.UI.UpdatePanelControlTrigger.ControlID\"></xref> property.  \n  \n \\- or -  \n  \n The event that is named in the <xref href=\"System.Web.UI.AsyncPostBackTrigger.EventName\"></xref> property for the control that is named in the <xref href=\"System.Web.UI.UpdatePanelControlTrigger.ControlID\"></xref> property does not match a standard event handler signature.","nodes":[{"pos":[0,82],"content":"No <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control was found on the page.","source":"No <xref href=\"System.Web.UI.ScriptManager\"></xref> control was found on the page."},{"pos":[89,96],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[103,339],"content":"The event that is named in the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.AsyncPostBackTrigger.EventName\"&gt;&lt;/xref&gt;</ph> property is not found for the control that is named in the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanelControlTrigger.ControlID\"&gt;&lt;/xref&gt;</ph> property.","source":"The event that is named in the <xref href=\"System.Web.UI.AsyncPostBackTrigger.EventName\"></xref> property is not found for the control that is named in the <xref href=\"System.Web.UI.UpdatePanelControlTrigger.ControlID\"></xref> property."},{"pos":[346,353],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[360,633],"content":"The event that is named in the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.AsyncPostBackTrigger.EventName\"&gt;&lt;/xref&gt;</ph> property for the control that is named in the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanelControlTrigger.ControlID\"&gt;&lt;/xref&gt;</ph> property does not match a standard event handler signature.","source":"The event that is named in the <xref href=\"System.Web.UI.AsyncPostBackTrigger.EventName\"></xref> property for the control that is named in the <xref href=\"System.Web.UI.UpdatePanelControlTrigger.ControlID\"></xref> property does not match a standard event handler signature."}],"pos":[13684,14340],"yaml":true},{"content":"Raises the event that will trigger a postback and refresh of an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.","nodes":[{"pos":[0,119],"content":"Raises the event that will trigger a postback and refresh of an <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control.","source":"Raises the event that will trigger a postback and refresh of an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."}],"pos":[15390,15510],"yaml":true},{"content":"The event sender.","nodes":[{"pos":[0,17],"content":"The event sender.","nodes":[{"content":"The event sender.","pos":[0,17]}]}],"pos":[15661,15679],"yaml":true},{"content":"The event data.","nodes":[{"pos":[0,15],"content":"The event data.","nodes":[{"content":"The event data.","pos":[0,15]}]}],"pos":[15739,15755],"yaml":true},{"content":"Returns a string representation of the current <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> control.","nodes":[{"pos":[0,111],"content":"Returns a string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.AsyncPostBackTrigger\"&gt;&lt;/xref&gt;</ph> control.","source":"Returns a string representation of the current <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> control."}],"pos":[16737,16849],"yaml":true},{"content":"A string that represents the current <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> control.","nodes":[{"pos":[0,101],"content":"A string that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.AsyncPostBackTrigger\"&gt;&lt;/xref&gt;</ph> control.","source":"A string that represents the current <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> control."}],"pos":[16984,17086],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.AsyncPostBackTrigger\n  commentId: T:System.Web.UI.AsyncPostBackTrigger\n  id: AsyncPostBackTrigger\n  children:\n  - System.Web.UI.AsyncPostBackTrigger.#ctor\n  - System.Web.UI.AsyncPostBackTrigger.ControlID\n  - System.Web.UI.AsyncPostBackTrigger.EventName\n  - System.Web.UI.AsyncPostBackTrigger.HasTriggered\n  - System.Web.UI.AsyncPostBackTrigger.Initialize\n  - System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)\n  - System.Web.UI.AsyncPostBackTrigger.ToString\n  langs:\n  - csharp\n  name: AsyncPostBackTrigger\n  nameWithType: AsyncPostBackTrigger\n  fullName: System.Web.UI.AsyncPostBackTrigger\n  type: Class\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Defines a control and optional event of the control as an asynchronous postback control trigger that causes an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control to refresh.\n  remarks: \"Use the <xref:System.Web.UI.AsyncPostBackTrigger> control to enable controls to be triggers for an <xref:System.Web.UI.UpdatePanel> control. Controls that are triggers for an update panel cause a refresh of the panel's content after an asynchronous postback. Defining an asynchronous trigger control is useful in the following scenarios:  \\n  \\n-   For controls that are outside a panel.  \\n  \\n-   For controls that are inside a panel when the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `false`.  \\n  \\n-   For controls that are inside nested panels, in order to cause a refresh of parent panels.  \\n  \\n The control that the <xref:System.Web.UI.AsyncPostBackTrigger> control references must be in the same naming container as the update panel for which it is a trigger. Triggers that are based on controls in other naming containers are not supported.  \\n  \\n Add <xref:System.Web.UI.AsyncPostBackTrigger> controls either by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by creating a `Triggers` element declaratively in the <xref:System.Web.UI.UpdatePanel> control. The <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> property is required, but the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional. If the <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event. For example, the default event for the <xref:System.Web.UI.WebControls.Button> control is the <xref:System.Web.UI.WebControls.Button.Click> event. The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is case-insensitive.  \\n  \\n You can also reference a naming container as a trigger. In that case, all child controls in the container that cause a postback are considered triggers for the <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n Programmatically adding <xref:System.Web.UI.AsyncPostBackTrigger> controls is not supported. To programmatically register a postback control, use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control. Then call the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the <xref:System.Web.UI.UpdatePanel> control when the control posts back.  \\n  \\n If you define a control using both <xref:System.Web.UI.PostBackTrigger> and <xref:System.Web.UI.AsyncPostBackTrigger>, an exception is thrown.\"\n  example:\n  - \"The following example shows how to add an <xref:System.Web.UI.AsyncPostBackTrigger> control declaratively. A <xref:System.Web.UI.WebControls.Button> control that is outside an <xref:System.Web.UI.UpdatePanel> control lets users enter a search term to find in the `Products` table of the Northwind database. A <xref:System.Web.UI.WebControls.GridView> control that is inside the <xref:System.Web.UI.UpdatePanel> control shows the results. The <xref:System.Web.UI.WebControls.Button> control is specified as an asynchronous trigger for the <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/CS/AsyncPostBackTriggerCS.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/VB/AsyncPostBackTriggerVB.aspx#1)]  -->\"\n  syntax:\n    content: 'public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger'\n  inheritance:\n  - System.Object\n  - System.Web.UI.UpdatePanelTrigger\n  - System.Web.UI.UpdatePanelControlTrigger\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)\n  - System.Web.UI.UpdatePanelTrigger.Owner\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.AsyncPostBackTrigger.#ctor\n  commentId: M:System.Web.UI.AsyncPostBackTrigger.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.AsyncPostBackTrigger\n  langs:\n  - csharp\n  name: AsyncPostBackTrigger()\n  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger()\n  fullName: AsyncPostBackTrigger.AsyncPostBackTrigger()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Initializes a new instance of an <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> class.\n  remarks: \"Add <xref:System.Web.UI.AsyncPostBackTrigger> controls either by using the **UpdatePanelTrigger Collection Editor** dialog box in the designer or by creating a `Triggers` element declaratively in the <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n Adding <xref:System.Web.UI.AsyncPostBackTrigger> controls programmatically is not supported.\"\n  syntax:\n    content: public AsyncPostBackTrigger ();\n    parameters: []\n  overload: System.Web.UI.AsyncPostBackTrigger.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.AsyncPostBackTrigger.ControlID\n  commentId: P:System.Web.UI.AsyncPostBackTrigger.ControlID\n  id: ControlID\n  parent: System.Web.UI.AsyncPostBackTrigger\n  langs:\n  - csharp\n  name: ControlID\n  nameWithType: AsyncPostBackTrigger.ControlID\n  fullName: AsyncPostBackTrigger.ControlID\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets the name of the control that triggers an asynchronous postback for an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(\"System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\")]\n\n      public string ControlID { get; set; }\n    return:\n      type: System.String\n      description: A server control ID.\n  overload: System.Web.UI.AsyncPostBackTrigger.ControlID*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.AsyncPostBackTrigger.EventName\n  commentId: P:System.Web.UI.AsyncPostBackTrigger.EventName\n  id: EventName\n  parent: System.Web.UI.AsyncPostBackTrigger\n  langs:\n  - csharp\n  name: EventName\n  nameWithType: AsyncPostBackTrigger.EventName\n  fullName: AsyncPostBackTrigger.EventName\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets the postback control event that triggers an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control to be updated.\n  remarks: \"The <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> property is optional. If it is not specified, the <xref:System.ComponentModel.DefaultEventAttribute> attribute of the control is used to determine the default event. The following table lists default events for some common ASP.NET 2.0 controls.  \\n  \\n|Control|Default event|  \\n|-------------|-------------------|  \\n|<xref:System.Web.UI.WebControls.Button>|<xref:System.Web.UI.WebControls.Button.Click>|  \\n|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|  \\n|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|  \\n|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|  \\n|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.TextChanged>|\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(\"System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\")]\n\n      public string EventName { get; set; }\n    return:\n      type: System.String\n      description: The event name. The default value is <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Web.UI.AsyncPostBackTrigger.EventName*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered\n  commentId: M:System.Web.UI.AsyncPostBackTrigger.HasTriggered\n  id: HasTriggered\n  parent: System.Web.UI.AsyncPostBackTrigger\n  langs:\n  - csharp\n  name: HasTriggered()\n  nameWithType: AsyncPostBackTrigger.HasTriggered()\n  fullName: AsyncPostBackTrigger.HasTriggered()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Returns a value that indicates whether the trigger was invoked.\n  remarks: Control developers can override the <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> method to provide custom logic for determining whether the trigger was invoked. To see a custom trigger in the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control, you can add an  directive to the page or to the  element of the Web.config file.\n  syntax:\n    content: protected override bool HasTriggered ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the trigger was invoked; otherwise, `false`.'\n  overload: System.Web.UI.AsyncPostBackTrigger.HasTriggered*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.AsyncPostBackTrigger.Initialize\n  commentId: M:System.Web.UI.AsyncPostBackTrigger.Initialize\n  id: Initialize\n  parent: System.Web.UI.AsyncPostBackTrigger\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: AsyncPostBackTrigger.Initialize()\n  fullName: AsyncPostBackTrigger.Initialize()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Initializes the <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> control and determines whether the event that is named in the trigger exists and is valid.\n  syntax:\n    content: protected override void Initialize ();\n    parameters: []\n  overload: System.Web.UI.AsyncPostBackTrigger.Initialize*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"No <xref href=\\\"System.Web.UI.ScriptManager\\\"></xref> control was found on the page.  \\n  \\n \\\\- or -  \\n  \\n The event that is named in the <xref href=\\\"System.Web.UI.AsyncPostBackTrigger.EventName\\\"></xref> property is not found for the control that is named in the <xref href=\\\"System.Web.UI.UpdatePanelControlTrigger.ControlID\\\"></xref> property.  \\n  \\n \\\\- or -  \\n  \\n The event that is named in the <xref href=\\\"System.Web.UI.AsyncPostBackTrigger.EventName\\\"></xref> property for the control that is named in the <xref href=\\\"System.Web.UI.UpdatePanelControlTrigger.ControlID\\\"></xref> property does not match a standard event handler signature.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)\n  commentId: M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)\n  id: OnEvent(System.Object,System.EventArgs)\n  parent: System.Web.UI.AsyncPostBackTrigger\n  langs:\n  - csharp\n  name: OnEvent(Object, EventArgs)\n  nameWithType: AsyncPostBackTrigger.OnEvent(Object, EventArgs)\n  fullName: AsyncPostBackTrigger.OnEvent(Object, EventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the event that will trigger a postback and refresh of an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  syntax:\n    content: public void OnEvent (object sender, EventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The event sender.\n    - id: e\n      type: System.EventArgs\n      description: The event data.\n  overload: System.Web.UI.AsyncPostBackTrigger.OnEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.AsyncPostBackTrigger.ToString\n  commentId: M:System.Web.UI.AsyncPostBackTrigger.ToString\n  id: ToString\n  parent: System.Web.UI.AsyncPostBackTrigger\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: AsyncPostBackTrigger.ToString()\n  fullName: AsyncPostBackTrigger.ToString()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Returns a string representation of the current <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> control.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the current <xref href=\"System.Web.UI.AsyncPostBackTrigger\"></xref> control.\n  overload: System.Web.UI.AsyncPostBackTrigger.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Web.UI.UpdatePanelControlTrigger\n  parent: System.Web.UI\n  isExternal: false\n  name: UpdatePanelControlTrigger\n  nameWithType: UpdatePanelControlTrigger\n  fullName: System.Web.UI.UpdatePanelControlTrigger\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Web.UI.AsyncPostBackTrigger.#ctor\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: AsyncPostBackTrigger()\n  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger()\n  fullName: AsyncPostBackTrigger.AsyncPostBackTrigger()\n- uid: System.Web.UI.AsyncPostBackTrigger.ControlID\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: ControlID\n  nameWithType: AsyncPostBackTrigger.ControlID\n  fullName: AsyncPostBackTrigger.ControlID\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.AsyncPostBackTrigger.EventName\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: EventName\n  nameWithType: AsyncPostBackTrigger.EventName\n  fullName: AsyncPostBackTrigger.EventName\n- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: HasTriggered()\n  nameWithType: AsyncPostBackTrigger.HasTriggered()\n  fullName: AsyncPostBackTrigger.HasTriggered()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.AsyncPostBackTrigger.Initialize\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: Initialize()\n  nameWithType: AsyncPostBackTrigger.Initialize()\n  fullName: AsyncPostBackTrigger.Initialize()\n- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: OnEvent(Object, EventArgs)\n  nameWithType: AsyncPostBackTrigger.OnEvent(Object, EventArgs)\n  fullName: AsyncPostBackTrigger.OnEvent(Object, EventArgs)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.UI.AsyncPostBackTrigger.ToString\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: ToString()\n  nameWithType: AsyncPostBackTrigger.ToString()\n  fullName: AsyncPostBackTrigger.ToString()\n- uid: System.Web.UI.AsyncPostBackTrigger.#ctor*\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: AsyncPostBackTrigger\n  nameWithType: AsyncPostBackTrigger.AsyncPostBackTrigger\n  fullName: AsyncPostBackTrigger.AsyncPostBackTrigger\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n- uid: System.Web.UI.AsyncPostBackTrigger.ControlID*\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: ControlID\n  nameWithType: AsyncPostBackTrigger.ControlID\n  fullName: AsyncPostBackTrigger.ControlID\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n- uid: System.Web.UI.AsyncPostBackTrigger.EventName*\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: EventName\n  nameWithType: AsyncPostBackTrigger.EventName\n  fullName: AsyncPostBackTrigger.EventName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n- uid: System.Web.UI.AsyncPostBackTrigger.HasTriggered*\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: HasTriggered\n  nameWithType: AsyncPostBackTrigger.HasTriggered\n  fullName: AsyncPostBackTrigger.HasTriggered\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n- uid: System.Web.UI.AsyncPostBackTrigger.Initialize*\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: Initialize\n  nameWithType: AsyncPostBackTrigger.Initialize\n  fullName: AsyncPostBackTrigger.Initialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n- uid: System.Web.UI.AsyncPostBackTrigger.OnEvent*\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: OnEvent\n  nameWithType: AsyncPostBackTrigger.OnEvent\n  fullName: AsyncPostBackTrigger.OnEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n- uid: System.Web.UI.AsyncPostBackTrigger.ToString*\n  parent: System.Web.UI.AsyncPostBackTrigger\n  isExternal: false\n  name: ToString\n  nameWithType: AsyncPostBackTrigger.ToString\n  fullName: AsyncPostBackTrigger.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AsyncPostBackTrigger.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Web.UI.UpdatePanelTrigger.Owner\n  parent: System.Web.UI.UpdatePanelTrigger\n  isExternal: false\n  name: Owner\n  nameWithType: UpdatePanelTrigger.Owner\n  fullName: UpdatePanelTrigger.Owner\n- uid: System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)\n  parent: System.Web.UI.UpdatePanelControlTrigger\n  isExternal: false\n  name: FindTargetControl(Boolean)\n  nameWithType: UpdatePanelControlTrigger.FindTargetControl(Boolean)\n  fullName: UpdatePanelControlTrigger.FindTargetControl(Boolean)\n"}