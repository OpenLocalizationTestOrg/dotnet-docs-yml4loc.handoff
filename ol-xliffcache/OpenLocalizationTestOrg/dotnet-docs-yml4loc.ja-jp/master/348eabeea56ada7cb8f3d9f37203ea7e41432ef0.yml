### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Button
  commentId: T:System.Web.UI.WebControls.Button
  id: Button
  children:
  - System.Web.UI.WebControls.Button.#ctor
  - System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.CausesValidation
  - System.Web.UI.WebControls.Button.Click
  - System.Web.UI.WebControls.Button.Command
  - System.Web.UI.WebControls.Button.CommandArgument
  - System.Web.UI.WebControls.Button.CommandName
  - System.Web.UI.WebControls.Button.GetPostBackOptions
  - System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  - System.Web.UI.WebControls.Button.OnClientClick
  - System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.Button.PostBackUrl
  - System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.Text
  - System.Web.UI.WebControls.Button.UseSubmitBehavior
  - System.Web.UI.WebControls.Button.ValidationGroup
  - System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  langs:
  - csharp
  name: Button
  nameWithType: Button
  fullName: System.Web.UI.WebControls.Button
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Displays a push button control on the Web page.
  remarks: "In this topic:  \n  \n-   [Introduction](#Introduction)  \n  \n-   [Button Postback Behavior and Server Events](#ButtonPostbackBehaviorandServerEvents)  \n  \n-   [Handling Button Events in Client Script](#HandlingButtonEventsinClientScript)  \n  \n-   [Button Controls and Validation](#ButtonControlsAndValidation)  \n  \n-   [Buttons in Data Controls](#ButtonsInDataControls)  \n  \n-   [Binding Data to the Controls](#BindingDataToTheControls)  \n  \n-   [Using Buttons with UpdatePanel Controls](#UsingButtonsWithUpdatePanelControls)  \n  \n-   [Declarative Syntax](#DeclarativeSyntax)  \n  \n<a name=\"Introduction\"></a>   \n## Introduction  \n Use the <xref:System.Web.UI.WebControls.Button> control to create a push button on the Web page that lets users to post a page to the server. The control triggers an event in server code that you can handle to respond to the postback. It can also raise an event in client script that you can handle before the page is posted or that can run and then cancel submission of the page.  \n  \n> [!NOTE]\n>  ASP.NET includes several kinds of button controls, each of which appears differently on Web pages. They are the <xref:System.Web.UI.WebControls.Button> control, which renders as a push button; the <xref:System.Web.UI.WebControls.LinkButton> control, which renders as a link; and the <xref:System.Web.UI.WebControls.ImageButton> control, which renders as an image; and the <xref:System.Web.UI.WebControls.ImageMap> control, which lets you create a graphic that has hotspots that users can click. By default, all button controls submit the page when clicked. You can also use the <xref:System.Web.UI.HtmlControls.HtmlButton> and <xref:System.Web.UI.HtmlControls.HtmlInputButton> controls to create buttons on the page that are programmable in server code. For details about the differences between HTML and Web server controls, see [ASP.NET Web Server Controls Overview](http://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84).  \n  \n By default, a <xref:System.Web.UI.WebControls.Button> control is a Submit button. A Submit button does not have a command name (specified by the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property) associated with the button and simply posts the Web page back to the server. You can provide an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event to programmatically control the actions performed when the Submit button is clicked.  \n  \n A Command button has a command name associated with the button, such as `Sort`, by setting the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property. This allows you to create multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page and programmatically determine which <xref:System.Web.UI.WebControls.Button> control is clicked. You can also use the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property with a command button to provide additional information about the command to perform, such as `Ascending`. You can provide an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to programmatically control the actions performed when the Command button is clicked.  \n  \n<a name=\"ButtonPostbackBehaviorandServerEvents\"></a>   \n## Button Postback Behavior and Server Events  \n When a user clicks any Web server control button, the page is sent to the server. This causes the Web page to be processed and any pending events to be raised in server-based code. When all page and control processing has finished, the page renders itself to the browser again.  \n  \n The buttons can raise their own <xref:System.Web.UI.WebControls.Button.Click> events or <xref:System.Web.UI.WebControls.Button.Command> event, which you can handle by using server-based code. This is different than events in traditional HTML pages or in client-based Web applications, where a button's `onclick` event is handled by using JavaScript that runs in the client. For more information, see [ASP.NET Web Forms Server Control Event Model](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).  \n  \n When users click a button control, the page is posted back to the server. By default, the page is posted back to itself,  \n  \n You can configure buttons to post the current page to another page. This can be useful for creating multi-page forms. For details, see [Cross-Page Posting in ASP.NET Web Forms](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  \n  \n<a name=\"HandlingButtonEventsinClientScript\"></a>   \n## Handling Button Events in Client Script  \n Button controls can raise both server events and client events. Server events occur after postback, and they are handled in the server-side code that you write for the page. Client events are handled in client script, typically ECMAScript (JavaScript), and are raised before the page is submitted. By adding client-side events to ASP.NET button controls, you can perform tasks such as displaying confirmation dialog boxes before submitting the page, and potentially cancel the submission. For details, see [Client Script in ASP.NET Web Pages](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa) and [How to: Respond to Button Web Server Control Events in Client Script](http://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b).  \n  \n You might also want the <xref:System.Web.UI.WebControls.Button> control to also use client script to perform the postback (instead of simply performing an HTTP POST operation). This can be useful if you want to programmatically manipulate the postback, such as attaching it to other elements on the page. You can set the <xref:System.Web.UI.WebControls.Button> control's <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property to `true` to cause the <xref:System.Web.UI.WebControls.Button> control to use client-script based postback.  \n  \n<a name=\"ButtonControlsAndValidation\"></a>   \n## Button Controls and Validation  \n If a page contains ASP.NET validator controls, by default, clicking a button control causes the validator control to perform its check. If client-side validation is enabled for a validator control, the page is not submitted if a validation check has failed.  \n  \n The following table describes the properties supported by button controls that enable you to control the validation process more precisely.  \n  \n|Property|Description|  \n|--------------|-----------------|  \n|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|Specifies whether clicking the button also performs a validation check. Set this property to `false` to prevent a validation check.|  \n|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|Enables you to specify which validators on the page are called when the button is clicked. If no validation groups are established, a button click calls all of the validators that are on the page.|  \n  \n For more information, see [Validating User Input in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  \n  \n<a name=\"ButtonsInDataControls\"></a>   \n## Buttons in Data Controls  \n Button Web server controls are often used in data controls, such as in the <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, and <xref:System.Web.UI.WebControls.Repeater> list controls. In those cases, you typically do not respond directly to the button click event. Instead, a button in a data control raises an event that is specific to the data control. For example, in the <xref:System.Web.UI.WebControls.DataList> control, a button might raise the <xref:System.Web.UI.WebControls.DataList> control's <xref:System.Web.UI.WebControls.DataList.ItemCommand> event instead of raising the <xref:System.Web.UI.WebControls.Button> control's <xref:System.Web.UI.WebControls.Button.Click> event.  \n  \n Because data-bound list controls can contain many buttons, you can set the button's <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to specify a value to pass as part of the event. You can then test for this argument to see which button was clicked.  \n  \n<a name=\"BindingDataToTheControls\"></a>   \n## Binding Data to the Controls  \n You can bind the button Web server controls to a data source in order to control their property settings dynamically. For example, you can set a button's <xref:System.Web.UI.WebControls.Button.Text%2A> property by using data binding.  \n  \n<a name=\"UsingButtonsWithUpdatePanelControls\"></a>   \n## Using Buttons with UpdatePanel Controls  \n Partial-page rendering makes it possible to refresh portions of a page without a postback. <xref:System.Web.UI.UpdatePanel> controls enable you to mark parts of the page that participate in partial-page rendering. By default, the behavior of controls inside an <xref:System.Web.UI.UpdatePanel> control, including <xref:System.Web.UI.WebControls.Button> controls, is to perform an asynchronous postback instead of a postback. This refreshes only the contents of the <xref:System.Web.UI.UpdatePanel> control from which the postback originates.  \n  \n In addition to the scenario of a <xref:System.Web.UI.WebControls.Button> control that is inside an <xref:System.Web.UI.UpdatePanel> control, you can use <xref:System.Web.UI.WebControls.Button> controls with <xref:System.Web.UI.UpdatePanel> controls in the following scenarios:  \n  \n-   Defining a <xref:System.Web.UI.WebControls.Button> control that is outside an <xref:System.Web.UI.UpdatePanel> control as an <xref:System.Web.UI.AsyncPostBackTrigger> control for that panel. When the button is clicked, it performs an asynchronous postback and refreshes the contents of the panel.  \n  \n-   Defining a <xref:System.Web.UI.WebControls.Button> control that is inside an <xref:System.Web.UI.UpdatePanel> control as a <xref:System.Web.UI.PostBackTrigger> for the panel. When the button is clicked, it performs a postback even though it is inside an <xref:System.Web.UI.UpdatePanel> control.  \n  \n For more information about partial-page rendering and using <xref:System.Web.UI.UpdatePanel> controls, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) and [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  \n  \n<a name=\"DeclarativeSyntax\"></a>   \n## Declarative Syntax  \n  \n```  \n<asp:Button  \n    AccessKey=\"string\"  \n    BackColor=\"color name|#dddddd\"  \n    BorderColor=\"color name|#dddddd\"  \n    BorderStyle=\"NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  \n        Inset|Outset\"  \n    BorderWidth=\"size\"  \n    CausesValidation=\"True|False\"  \n    CommandArgument=\"string\"  \n    CommandName=\"string\"  \n    CssClass=\"string\"  \n    Enabled=\"True|False\"  \n    EnableTheming=\"True|False\"  \n    EnableViewState=\"True|False\"  \n    Font-Bold=\"True|False\"  \n    Font-Italic=\"True|False\"  \n    Font-Names=\"string\"  \n    Font-Overline=\"True|False\"  \n    Font-Size=\"string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  \n        Large|X-Large|XX-Large\"  \n    Font-Strikeout=\"True|False\"  \n    Font-Underline=\"True|False\"  \n    ForeColor=\"color name|#dddddd\"  \n    Height=\"size\"  \n    ID=\"string\"  \n    OnClick=\"Click event handler\"  \n    OnClientClick=\"string\"  \n    OnCommand=\"Command event handler\"  \n    OnDataBinding=\"DataBinding event handler\"  \n    OnDisposed=\"Disposed event handler\"  \n    OnInit=\"Init event handler\"  \n    OnLoad=\"Load event handler\"  \n    OnPreRender=\"PreRender event handler\"  \n    OnUnload=\"Unload event handler\"  \n    PostBackUrl=\"uri\"  \n    runat=\"server\"  \n    SkinID=\"string\"  \n    Style=\"string\"  \n    TabIndex=\"integer\"  \n    Text=\"string\"  \n    ToolTip=\"string\"  \n    UseSubmitBehavior=\"True|False\"  \n    ValidationGroup=\"string\"  \n    Visible=\"True|False\"  \n    Width=\"size\"  \n/>  \n```"
  example:
  - "The following code example demonstrates how to create a Submit <xref:System.Web.UI.WebControls.Button> control that posts the Web page content back to the server.  \n  \n <!-- TODO: review snippet reference [!code-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  -->  \n  \n The following code example demonstrates how to create a Command <xref:System.Web.UI.WebControls.Button> control that sorts a list.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  -->"
  syntax:
    content: 'public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl'
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IButtonControl
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  extensionMethods:
  - System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)
  - System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)
  - System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.#ctor
  commentId: M:System.Web.UI.WebControls.Button.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Button()
  nameWithType: Button.Button()
  fullName: Button.Button()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.Button"></xref> class.
  remarks: Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  -->"
  syntax:
    content: public Button ();
    parameters: []
  overload: System.Web.UI.WebControls.Button.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  commentId: M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: Button.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Adds the attributes of the <xref href="System.Web.UI.WebControls.Button"></xref> control to the output stream for rendering on the client.
  remarks: ''
  example:
  - "The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> method in a custom server control, so that the <xref:System.Web.UI.WebControls.Button> text always displays in red.  \n  \n <!-- TODO: review snippet reference [!code-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  -->  \n[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]\n[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: An <xref href="System.Web.UI.HtmlTextWriter"></xref> that contains the output stream to render on the client.
  overload: System.Web.UI.WebControls.Button.AddAttributesToRender*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.CausesValidation
  commentId: P:System.Web.UI.WebControls.Button.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: Button.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether validation is performed when the <xref href="System.Web.UI.WebControls.Button"></xref> control is clicked.
  remarks: "By default, page validation is performed when a <xref:System.Web.UI.WebControls.Button> control is clicked. Page validation determines whether the input controls associated with a validation control on the page all pass the validation rules specified by the validation control.  \n  \n You can specify or determine whether validation is performed on both the client and the server when a <xref:System.Web.UI.WebControls.Button> control is clicked by using the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property. To prevent validation from being performed, set the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property to `false`.  \n  \n> [!NOTE]\n>  You should set the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property to `false` when you are using the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property to post back to a different page. You should explicitly check validation when posting back to a different page. For an example, see the Remarks section of the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property.  \n  \n This property is commonly set to `false` for a `reset` or `clear` button to prevent validation from being performed when the button is clicked.  \n  \n When the value of the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property is set to `true`, you can also use the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property to specify the name of the validation group for which the <xref:System.Web.UI.WebControls.Button> control causes validation.  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property to prevent page validation from occurring. Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Web.UI.Themeable(false)]

      public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: '`true` if validation is performed when the <xref href="System.Web.UI.WebControls.Button"></xref> control is clicked; otherwise, `false`. The default value is `true`.'
  overload: System.Web.UI.WebControls.Button.CausesValidation*
  exceptions: []
  attributes:
  - type: System.Web.UI.ThemeableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.Click
  commentId: E:System.Web.UI.WebControls.Button.Click
  id: Click
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Click
  nameWithType: Button.Click
  fullName: Button.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs when the <xref href="System.Web.UI.WebControls.Button"></xref> control is clicked.
  remarks: "The <xref:System.Web.UI.WebControls.Button.Click> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked. This event is commonly used when no command name is associated with the <xref:System.Web.UI.WebControls.Button> control (for instance, with a Submit button).  \n  \n For more information about handling events, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a message on the Web page when the <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  -->"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.Command
  commentId: E:System.Web.UI.WebControls.Button.Command
  id: Command
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Command
  nameWithType: Button.Command
  fullName: Button.Command
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Occurs when the <xref href="System.Web.UI.WebControls.Button"></xref> control is clicked.
  remarks: "The <xref:System.Web.UI.WebControls.Button.Command> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked. This event is commonly used when a command name, such as `Sort`, is associated with the <xref:System.Web.UI.WebControls.Button> control. This allows you to create multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page and programmatically determine which <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n> [!NOTE]\n>  The <xref:System.Web.UI.WebControls.Button.Command> event is raised through the control hierarchy in the form of the `BubbleEvent`.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  -->  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  -->"
  syntax:
    content: public event System.Web.UI.WebControls.CommandEventHandler Command;
    return:
      type: System.Web.UI.WebControls.CommandEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.CommandArgument
  commentId: P:System.Web.UI.WebControls.Button.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: Button.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets an optional parameter passed to the <xref href="System.Web.UI.WebControls.Button.Command"></xref> event along with the associated <xref href="System.Web.UI.WebControls.Button.CommandName"></xref>.
  remarks: "Use the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to specify a parameter that compliments the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property.  \n  \n> [!NOTE]\n>  Although you can set the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property by itself, it is normally only used when the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property is also set.  \n  \n The <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property complements the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property by allowing you to provide additional information about the command to perform. For example, if you set the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to `Sort` and the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to `Ascending`, you specify a command to sort in ascending order.  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list in ascending order.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      [System.Web.UI.Themeable(false)]

      public string CommandArgument { get; set; }
    return:
      type: System.String
      description: An optional parameter passed to the <xref href="System.Web.UI.WebControls.Button.Command"></xref> event along with the associated <xref href="System.Web.UI.WebControls.Button.CommandName"></xref>. The default value is <xref href="System.String.Empty"></xref>.
  overload: System.Web.UI.WebControls.Button.CommandArgument*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  - type: System.Web.UI.ThemeableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.CommandName
  commentId: P:System.Web.UI.WebControls.Button.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandName
  nameWithType: Button.CommandName
  fullName: Button.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the command name associated with the <xref href="System.Web.UI.WebControls.Button"></xref> control that is passed to the <xref href="System.Web.UI.WebControls.Button.Command"></xref> event.
  remarks: "When you have multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page, use the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to specify or determine the command name associated with each <xref:System.Web.UI.WebControls.Button> control. You can set the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property with any string that identifies the command to perform. You can then programmatically determine the command name of the <xref:System.Web.UI.WebControls.Button> control and perform the appropriate actions.  \n  \n Additional information about the command, such as `Ascending`, may be specified by using the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property.  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Web.UI.Themeable(false)]

      public string CommandName { get; set; }
    return:
      type: System.String
      description: The command name of the <xref href="System.Web.UI.WebControls.Button"></xref> control. The default value is <xref href="System.String.Empty"></xref>.
  overload: System.Web.UI.WebControls.Button.CommandName*
  exceptions: []
  attributes:
  - type: System.Web.UI.ThemeableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  commentId: M:System.Web.UI.WebControls.Button.GetPostBackOptions
  id: GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: Button.GetPostBackOptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Creates a <xref href="System.Web.UI.PostBackOptions"></xref> object that represents the <xref href="System.Web.UI.WebControls.Button"></xref> control's postback behavior.
  remarks: "The <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> method creates a <xref:System.Web.UI.PostBackOptions> object that represents the <xref:System.Web.UI.WebControls.Button> control's postback behavior. The <xref:System.Web.UI.PostBackOptions> object is then typically passed to the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> method, which is used to obtain a reference to a client-side script function that, when invoked, causes the server to post back to the page.  \n  \n This method is used primarily by control developers when extending the <xref:System.Web.UI.WebControls.Button> class."
  syntax:
    content: protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();
    parameters: []
    return:
      type: System.Web.UI.PostBackOptions
      description: A <xref href="System.Web.UI.PostBackOptions"></xref> that represents the <xref href="System.Web.UI.WebControls.Button"></xref> control's postback behavior.
  overload: System.Web.UI.WebControls.Button.GetPostBackOptions*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  commentId: M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: Button.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <xref href="System.Web.UI.WebControls.Button.Click"></xref> event of the <xref href="System.Web.UI.WebControls.Button"></xref> control.
  remarks: "The <xref:System.Web.UI.WebControls.Button.Click> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked. This event is commonly used when no command name is associated with the <xref:System.Web.UI.WebControls.Button> control (for instance, with a Submit button).  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.Web.UI.WebControls.Button.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a simple message on the Web page.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  -->"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: The event data.
  overload: System.Web.UI.WebControls.Button.OnClick*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.OnClientClick
  commentId: P:System.Web.UI.WebControls.Button.OnClientClick
  id: OnClientClick
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: Button.OnClientClick
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the client-side script that executes when a <xref href="System.Web.UI.WebControls.Button"></xref> control's <xref href="System.Web.UI.WebControls.Button.Click"></xref> event is raised.
  remarks: "Use the <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control's <xref:System.Web.UI.WebControls.Button.Click> event is raised. The script that you specify for this property is rendered in the <xref:System.Web.UI.WebControls.Button> control's `OnClick` attribute in addition to the control's predefined client-side script.  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192871).  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n <!-- TODO: review snippet reference [!code-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Web.UI.Themeable(false)]

      public virtual string OnClientClick { get; set; }
    return:
      type: System.String
      description: The client-side script that executes when a <xref href="System.Web.UI.WebControls.Button"></xref> control's <xref href="System.Web.UI.WebControls.Button.Click"></xref> event is raised.
  overload: System.Web.UI.WebControls.Button.OnClientClick*
  exceptions: []
  attributes:
  - type: System.Web.UI.ThemeableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  commentId: M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  id: OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: Button.OnCommand(CommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises the <xref href="System.Web.UI.WebControls.Button.Command"></xref> event of the <xref href="System.Web.UI.WebControls.Button"></xref> control.
  remarks: "The <xref:System.Web.UI.WebControls.Button.Command> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked. This event is commonly used when a command name, such as `Sort`, is associated with the <xref:System.Web.UI.WebControls.Button> control. This allows you to create multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page and programmatically determine which <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n> [!NOTE]\n>  The <xref:System.Web.UI.WebControls.Button.Command> event is raised through the control hierarchy in the form of the `BubbleEvent`.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.Web.UI.WebControls.Button.OnCommand%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  -->  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  -->"
  syntax:
    content: protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: The event data.
  overload: System.Web.UI.WebControls.Button.OnCommand*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  commentId: M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: Button.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Determines whether the button has been clicked prior to rendering on the client.
  remarks: The <xref:System.Web.UI.WebControls.Button.OnPreRender%2A> method is used primarily by control developers when deriving a custom class from the <xref:System.Web.UI.WebControls.Button> control.
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: The event data.
  overload: System.Web.UI.WebControls.Button.OnPreRender*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  commentId: P:System.Web.UI.WebControls.Button.PostBackUrl
  id: PostBackUrl
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: Button.PostBackUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the URL of the page to post to from the current page when the <xref href="System.Web.UI.WebControls.Button"></xref> control is clicked.
  remarks: "The <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.Button> control.  \n  \n> [!NOTE]\n>  Only correctly specified paths work with this property. For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\\Test\\default.aspx) work correctly. Incorrectly formed paths such as \"/Test/default.aspx\" or \"\\Test\\default.aspx\" do not work. See [ASP.NET Web Project Paths](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd) for a discussion on creating correct paths.  \n  \n Set the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.Button> control is clicked. For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.Button> control to post to `Page2.aspx`. If you do not specify a value for the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property, the page posts back to itself.  \n  \n> [!IMPORTANT]\n>  When performing a cross-page postback with controls with server-side validation, you should check that the page's <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback. In the case of a cross-page postback, the page to check is the <xref:System.Web.UI.Page.PreviousPage%2A>. The following VB code shows how this is done:  \n  \n```  \nSub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  \n        If Page.PreviousPage.IsValid Then  \n            ' Handle the post back  \n        Else  \n            Response.Write(\"Invalid\")  \n        End If  \nEnd Sub  \n```  \n  \n For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property to perform a cross-page post. When the user clicks the <xref:System.Web.UI.WebControls.Button> control, the page posts the value entered in the text box to the target page specified by the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property. To run this sample, you must also create a file for the target page in the same directory as this code example. The code for target page is provided in the next example.  \n  \n <!-- TODO: review snippet reference [!code-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  -->  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> property to access a value that was posted from another page using the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property. This page gets the string that was posted from the previous page and displays it to the user. If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`. Instead, use this code to create a target page and place the file in the same directory as the code for the previous example. The name of the file must correspond to the value specified for the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property in the previous example. When you run the code for the previous example, this page will execute automatically when the cross page post occurs.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Web.UI.Themeable(false)]

      public virtual string PostBackUrl { get; set; }
    return:
      type: System.String
      description: The URL of the Web page to post to from the current page when the <xref href="System.Web.UI.WebControls.Button"></xref> control is clicked. The default value is an empty string (""), which causes the page to post back to itself.
  overload: System.Web.UI.WebControls.Button.PostBackUrl*
  exceptions: []
  attributes:
  - type: System.Web.UI.ThemeableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  commentId: M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: Button.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises events for the <xref href="System.Web.UI.WebControls.Button"></xref> control when it posts back to the server.
  remarks: This event is used internally by the <xref:System.Web.UI.WebControls.Button> control, when it is clicked, to raise a <xref:System.Web.UI.WebControls.Button.Click> event, and if defined, a <xref:System.Web.UI.WebControls.Button.Command> event.
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: The argument for the event.
  overload: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  commentId: M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: Button.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Renders the contents of the control to the specified writer.
  remarks: ''
  example:
  - "The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Button.RenderContents%2A> method in a custom server control so that it always displays text following a custom <xref:System.Web.UI.WebControls.Button> server control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  -->  \n[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]\n[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: A <xref href="System.Web.UI.HtmlTextWriter"></xref> object that represents the output stream to render HTML content on the client.
  overload: System.Web.UI.WebControls.Button.RenderContents*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.Text
  commentId: P:System.Web.UI.WebControls.Button.Text
  id: Text
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Text
  nameWithType: Button.Text
  fullName: Button.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the text caption displayed in the <xref href="System.Web.UI.WebControls.Button"></xref> control.
  remarks: "Use the <xref:System.Web.UI.WebControls.Button.Text%2A> property to specify or determine the caption to display in the <xref:System.Web.UI.WebControls.Button> control.  \n  \n The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.Text%2A> property to specify the caption displayed in the <xref:System.Web.UI.WebControls.Button> control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  -->"
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      public string Text { get; set; }
    return:
      type: System.String
      description: The text caption displayed in the <xref href="System.Web.UI.WebControls.Button"></xref> control. The default value is <xref href="System.String.Empty"></xref>.
  overload: System.Web.UI.WebControls.Button.Text*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  commentId: P:System.Web.UI.WebControls.Button.UseSubmitBehavior
  id: UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: Button.UseSubmitBehavior
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value indicating whether the <xref href="System.Web.UI.WebControls.Button"></xref> control uses the client browser's submit mechanism or the ASP.NET postback mechanism.
  remarks: "Use the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property to specify whether a <xref:System.Web.UI.WebControls.Button> control uses the client browser's submit mechanism or the ASP.NET postback mechanism. By default the value of this property is `true`, causing the <xref:System.Web.UI.WebControls.Button> control to use the browser's submit mechanism. If you specify `false`, the ASP.NET page framework adds client-side script to the page to post the form to the server.  \n  \n When the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`, control developers can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button>. The string returned by the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method contains the text of the client-side function call and can be inserted into a client-side event handler.  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property to specify the submit mechanism that a <xref:System.Web.UI.WebControls.Button> control uses when it posts back to the server. The <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, causing the button to use the ASP.NET postback mechanism. If you view the source code for the rendered page using your browser's View Source command, you will see that client-side script has been added by the ASP.NET page framework to post the form to the server.  \n  \n <!-- TODO: review snippet reference [!code-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Web.UI.Themeable(false)]

      public virtual bool UseSubmitBehavior { get; set; }
    return:
      type: System.Boolean
      description: "`true` if the control uses the client browser's submit mechanism; otherwise, `false`. The default is `true`."
  overload: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  exceptions: []
  attributes:
  - type: System.Web.UI.ThemeableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  commentId: P:System.Web.UI.WebControls.Button.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: Button.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets or sets the group of controls for which the <xref href="System.Web.UI.WebControls.Button"></xref> control causes validation when it posts back to the server.
  remarks: "Validation groups allow you to assign validation controls on a page to a specific category. Each validation group can be validated independently of other validation groups on the page. Use the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property to specify the name of the validation group for which the <xref:System.Web.UI.WebControls.Button> control causes validation when it posts back to the server.  \n  \n This property has an effect only when the value of the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property is set to `true`. When you specify a value for the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property, only the validation controls that are part of the specified group are validated when the <xref:System.Web.UI.WebControls.Button> control posts back to the server. If you do not specify a value for this property and the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property is set to `true`, all validation controls on the page that are not assigned to a validation group are validated when the control posts back to the server.  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property to specify the controls to validate when a <xref:System.Web.UI.WebControls.Button> control posts back to the server. The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group. When `Button1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated. When `Button2` is clicked, only the control in validation group `LocationInfoGroup` is validated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Web.UI.Themeable(false)]

      public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: The group of controls for which the <xref href="System.Web.UI.WebControls.Button"></xref> control causes validation when it posts back to the server. The default value is an empty string ("").
  overload: System.Web.UI.WebControls.Button.ValidationGroup*
  exceptions: []
  attributes:
  - type: System.Web.UI.ThemeableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  commentId: M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: Button.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Raises events for the <xref href="System.Web.UI.WebControls.Button"></xref> control when it posts back to the server.
  remarks: This event is used internally by the <xref:System.Web.UI.WebControls.Button> control, when it is clicked, to raise a <xref:System.Web.UI.WebControls.Button.Click> event, and if defined, a <xref:System.Web.UI.WebControls.Button.Command> event.
  example:
  - "The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> method so that it always raises the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event in a custom <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]\n [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: The argument for the event.
  overload: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Web.UI.WebControls.WebControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WebControl
  nameWithType: WebControl
  fullName: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.Button.#ctor
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button()
  nameWithType: Button.Button()
  fullName: Button.Button()
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: Button.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Button.CausesValidation
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: Button.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Button.Click
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Click
  nameWithType: Button.Click
  fullName: Button.Click
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.Button.Command
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Command
  nameWithType: Button.Command
  fullName: Button.Command
- uid: System.Web.UI.WebControls.CommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventHandler
  nameWithType: CommandEventHandler
  fullName: System.Web.UI.WebControls.CommandEventHandler
- uid: System.Web.UI.WebControls.Button.CommandArgument
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: Button.CommandArgument
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Button.CommandName
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
  fullName: Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: Button.GetPostBackOptions()
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: Button.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.Button.OnClientClick
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: Button.OnCommand(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: Button.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: Button.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: Button.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Button.Text
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
  fullName: Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: Button.ValidationGroup
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: Button.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.#ctor*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button
  nameWithType: Button.Button
  fullName: Button.Button
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender
  nameWithType: Button.AddAttributesToRender
  fullName: Button.AddAttributesToRender
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.CausesValidation*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: Button.CausesValidation
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.CommandArgument*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: Button.CommandArgument
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.CommandName*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
  fullName: Button.CommandName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions
  nameWithType: Button.GetPostBackOptions
  fullName: Button.GetPostBackOptions
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.OnClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick
  nameWithType: Button.OnClick
  fullName: Button.OnClick
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.OnClientClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: Button.OnClientClick
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.OnCommand*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand
  nameWithType: Button.OnCommand
  fullName: Button.OnCommand
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.OnPreRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender
  nameWithType: Button.OnPreRender
  fullName: Button.OnPreRender
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.PostBackUrl*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: Button.PostBackUrl
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Button.RaisePostBackEvent
  fullName: Button.RaisePostBackEvent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.RenderContents*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents
  nameWithType: Button.RenderContents
  fullName: Button.RenderContents
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.Text*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
  fullName: Button.Text
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: Button.UseSubmitBehavior
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.ValidationGroup*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: Button.ValidationGroup
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  fullName: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/Button.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Web.UI.Control.Adapter
  parent: System.Web.UI.Control
  isExternal: false
  name: Adapter
  nameWithType: Control.Adapter
  fullName: Control.Adapter
- uid: System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  parent: System.Web.UI.Control
  isExternal: false
  name: AddedControl(Control, Int32)
  nameWithType: Control.AddedControl(Control, Int32)
  fullName: Control.AddedControl(Control, Int32)
- uid: System.Web.UI.Control.AddParsedSubObject(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: Control.AddParsedSubObject(Object)
  fullName: Control.AddParsedSubObject(Object)
- uid: System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  parent: System.Web.UI.Control
  isExternal: false
  name: ApplyStyleSheetSkin(Page)
  nameWithType: Control.ApplyStyleSheetSkin(Page)
  fullName: Control.ApplyStyleSheetSkin(Page)
- uid: System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  parent: System.Web.UI.Control
  isExternal: false
  name: AppRelativeTemplateSourceDirectory
  nameWithType: Control.AppRelativeTemplateSourceDirectory
  fullName: Control.AppRelativeTemplateSourceDirectory
- uid: System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: BeginRenderTracing(TextWriter, Object)
  nameWithType: Control.BeginRenderTracing(TextWriter, Object)
  fullName: Control.BeginRenderTracing(TextWriter, Object)
- uid: System.Web.UI.Control.BindingContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: BindingContainer
  nameWithType: Control.BindingContainer
  fullName: Control.BindingContainer
- uid: System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  parent: System.Web.UI.Control
  isExternal: false
  name: BuildProfileTree(String, Boolean)
  nameWithType: Control.BuildProfileTree(String, Boolean)
  fullName: Control.BuildProfileTree(String, Boolean)
- uid: System.Web.UI.Control.ChildControlsCreated
  parent: System.Web.UI.Control
  isExternal: false
  name: ChildControlsCreated
  nameWithType: Control.ChildControlsCreated
  fullName: Control.ChildControlsCreated
- uid: System.Web.UI.Control.ClearCachedClientID
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearCachedClientID()
  nameWithType: Control.ClearCachedClientID()
  fullName: Control.ClearCachedClientID()
- uid: System.Web.UI.Control.ClearChildControlState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildControlState()
  nameWithType: Control.ClearChildControlState()
  fullName: Control.ClearChildControlState()
- uid: System.Web.UI.Control.ClearChildState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildState()
  nameWithType: Control.ClearChildState()
  fullName: Control.ClearChildState()
- uid: System.Web.UI.Control.ClearChildViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildViewState()
  nameWithType: Control.ClearChildViewState()
  fullName: Control.ClearChildViewState()
- uid: System.Web.UI.Control.ClearEffectiveClientIDMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearEffectiveClientIDMode()
  nameWithType: Control.ClearEffectiveClientIDMode()
  fullName: Control.ClearEffectiveClientIDMode()
- uid: System.Web.UI.Control.ClientID
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientID
  nameWithType: Control.ClientID
  fullName: Control.ClientID
- uid: System.Web.UI.Control.ClientIDMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDMode
  nameWithType: Control.ClientIDMode
  fullName: Control.ClientIDMode
- uid: System.Web.UI.Control.ClientIDSeparator
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDSeparator
  nameWithType: Control.ClientIDSeparator
  fullName: Control.ClientIDSeparator
- uid: System.Web.UI.Control.Context
  parent: System.Web.UI.Control
  isExternal: false
  name: Context
  nameWithType: Control.Context
  fullName: Control.Context
- uid: System.Web.UI.Control.Controls
  parent: System.Web.UI.Control
  isExternal: false
  name: Controls
  nameWithType: Control.Controls
  fullName: Control.Controls
- uid: System.Web.UI.Control.CreateChildControls
  parent: System.Web.UI.Control
  isExternal: false
  name: CreateChildControls()
  nameWithType: Control.CreateChildControls()
  fullName: Control.CreateChildControls()
- uid: System.Web.UI.Control.CreateControlCollection
  parent: System.Web.UI.Control
  isExternal: false
  name: CreateControlCollection()
  nameWithType: Control.CreateControlCollection()
  fullName: Control.CreateControlCollection()
- uid: System.Web.UI.Control.DataBind
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBind()
  nameWithType: Control.DataBind()
  fullName: Control.DataBind()
- uid: System.Web.UI.Control.DataBind(System.Boolean)
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBind(Boolean)
  nameWithType: Control.DataBind(Boolean)
  fullName: Control.DataBind(Boolean)
- uid: System.Web.UI.Control.DataBindChildren
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBindChildren()
  nameWithType: Control.DataBindChildren()
  fullName: Control.DataBindChildren()
- uid: System.Web.UI.Control.DataBinding
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBinding
  nameWithType: Control.DataBinding
  fullName: Control.DataBinding
- uid: System.Web.UI.Control.DataItemContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: DataItemContainer
  nameWithType: Control.DataItemContainer
  fullName: Control.DataItemContainer
- uid: System.Web.UI.Control.DataKeysContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: DataKeysContainer
  nameWithType: Control.DataKeysContainer
  fullName: Control.DataKeysContainer
- uid: System.Web.UI.Control.DesignMode
  parent: System.Web.UI.Control
  isExternal: false
  name: DesignMode
  nameWithType: Control.DesignMode
  fullName: Control.DesignMode
- uid: System.Web.UI.Control.Dispose
  parent: System.Web.UI.Control
  isExternal: false
  name: Dispose()
  nameWithType: Control.Dispose()
  fullName: Control.Dispose()
- uid: System.Web.UI.Control.Disposed
  parent: System.Web.UI.Control
  isExternal: false
  name: Disposed
  nameWithType: Control.Disposed
  fullName: Control.Disposed
- uid: System.Web.UI.WebControls.WebControl.EnableTheming
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: EnableTheming
  nameWithType: WebControl.EnableTheming
  fullName: WebControl.EnableTheming
- uid: System.Web.UI.Control.EnableViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: EnableViewState
  nameWithType: Control.EnableViewState
  fullName: Control.EnableViewState
- uid: System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: EndRenderTracing(TextWriter, Object)
  nameWithType: Control.EndRenderTracing(TextWriter, Object)
  fullName: Control.EndRenderTracing(TextWriter, Object)
- uid: System.Web.UI.Control.EnsureChildControls
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureChildControls()
  nameWithType: Control.EnsureChildControls()
  fullName: Control.EnsureChildControls()
- uid: System.Web.UI.Control.EnsureID
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureID()
  nameWithType: Control.EnsureID()
  fullName: Control.EnsureID()
- uid: System.Web.UI.Control.Events
  parent: System.Web.UI.Control
  isExternal: false
  name: Events
  nameWithType: Control.Events
  fullName: Control.Events
- uid: System.Web.UI.Control.FindControl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: FindControl(String)
  nameWithType: Control.FindControl(String)
  fullName: Control.FindControl(String)
- uid: System.Web.UI.Control.FindControl(System.String,System.Int32)
  parent: System.Web.UI.Control
  isExternal: false
  name: FindControl(String, Int32)
  nameWithType: Control.FindControl(String, Int32)
  fullName: Control.FindControl(String, Int32)
- uid: System.Web.UI.Control.Focus
  parent: System.Web.UI.Control
  isExternal: false
  name: Focus()
  nameWithType: Control.Focus()
  fullName: Control.Focus()
- uid: System.Web.UI.Control.GetDesignModeState
  parent: System.Web.UI.Control
  isExternal: false
  name: GetDesignModeState()
  nameWithType: Control.GetDesignModeState()
  fullName: Control.GetDesignModeState()
- uid: System.Web.UI.Control.GetRouteUrl(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(Object)
  nameWithType: Control.GetRouteUrl(Object)
  fullName: Control.GetRouteUrl(Object)
- uid: System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(RouteValueDictionary)
  fullName: Control.GetRouteUrl(RouteValueDictionary)
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(String, Object)
  nameWithType: Control.GetRouteUrl(String, Object)
  fullName: Control.GetRouteUrl(String, Object)
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(String, RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(String, RouteValueDictionary)
  fullName: Control.GetRouteUrl(String, RouteValueDictionary)
- uid: System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetUniqueIDRelativeTo(Control)
  nameWithType: Control.GetUniqueIDRelativeTo(Control)
  fullName: Control.GetUniqueIDRelativeTo(Control)
- uid: System.Web.UI.Control.HasChildViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: HasChildViewState
  nameWithType: Control.HasChildViewState
  fullName: Control.HasChildViewState
- uid: System.Web.UI.Control.HasControls
  parent: System.Web.UI.Control
  isExternal: false
  name: HasControls()
  nameWithType: Control.HasControls()
  fullName: Control.HasControls()
- uid: System.Web.UI.Control.HasEvents
  parent: System.Web.UI.Control
  isExternal: false
  name: HasEvents()
  nameWithType: Control.HasEvents()
  fullName: Control.HasEvents()
- uid: System.Web.UI.Control.ID
  parent: System.Web.UI.Control
  isExternal: false
  name: ID
  nameWithType: Control.ID
  fullName: Control.ID
- uid: System.Web.UI.Control.IdSeparator
  parent: System.Web.UI.Control
  isExternal: false
  name: IdSeparator
  nameWithType: Control.IdSeparator
  fullName: Control.IdSeparator
- uid: System.Web.UI.Control.Init
  parent: System.Web.UI.Control
  isExternal: false
  name: Init
  nameWithType: Control.Init
  fullName: Control.Init
- uid: System.Web.UI.Control.IsChildControlStateCleared
  parent: System.Web.UI.Control
  isExternal: false
  name: IsChildControlStateCleared
  nameWithType: Control.IsChildControlStateCleared
  fullName: Control.IsChildControlStateCleared
- uid: System.Web.UI.Control.IsLiteralContent
  parent: System.Web.UI.Control
  isExternal: false
  name: IsLiteralContent()
  nameWithType: Control.IsLiteralContent()
  fullName: Control.IsLiteralContent()
- uid: System.Web.UI.Control.IsTrackingViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: IsTrackingViewState
  nameWithType: Control.IsTrackingViewState
  fullName: Control.IsTrackingViewState
- uid: System.Web.UI.Control.IsViewStateEnabled
  parent: System.Web.UI.Control
  isExternal: false
  name: IsViewStateEnabled
  nameWithType: Control.IsViewStateEnabled
  fullName: Control.IsViewStateEnabled
- uid: System.Web.UI.Control.Load
  parent: System.Web.UI.Control
  isExternal: false
  name: Load
  nameWithType: Control.Load
  fullName: Control.Load
- uid: System.Web.UI.Control.LoadControlState(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: Control.LoadControlState(Object)
  fullName: Control.LoadControlState(Object)
- uid: System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: WebControl.LoadViewState(Object)
  fullName: WebControl.LoadViewState(Object)
- uid: System.Web.UI.Control.LoadViewStateByID
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadViewStateByID
  nameWithType: Control.LoadViewStateByID
  fullName: Control.LoadViewStateByID
- uid: System.Web.UI.Control.MapPathSecure(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: MapPathSecure(String)
  nameWithType: Control.MapPathSecure(String)
  fullName: Control.MapPathSecure(String)
- uid: System.Web.UI.Control.NamingContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: NamingContainer
  nameWithType: Control.NamingContainer
  fullName: Control.NamingContainer
- uid: System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnBubbleEvent(Object, EventArgs)
  nameWithType: Control.OnBubbleEvent(Object, EventArgs)
  fullName: Control.OnBubbleEvent(Object, EventArgs)
- uid: System.Web.UI.Control.OnDataBinding(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnDataBinding(EventArgs)
  nameWithType: Control.OnDataBinding(EventArgs)
  fullName: Control.OnDataBinding(EventArgs)
- uid: System.Web.UI.Control.OnInit(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: Control.OnInit(EventArgs)
  fullName: Control.OnInit(EventArgs)
- uid: System.Web.UI.Control.OnLoad(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: Control.OnLoad(EventArgs)
  fullName: Control.OnLoad(EventArgs)
- uid: System.Web.UI.Control.OnUnload(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: Control.OnUnload(EventArgs)
  fullName: Control.OnUnload(EventArgs)
- uid: System.Web.UI.Control.OpenFile(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: OpenFile(String)
  nameWithType: Control.OpenFile(String)
  fullName: Control.OpenFile(String)
- uid: System.Web.UI.Control.Page
  parent: System.Web.UI.Control
  isExternal: false
  name: Page
  nameWithType: Control.Page
  fullName: Control.Page
- uid: System.Web.UI.Control.Parent
  parent: System.Web.UI.Control
  isExternal: false
  name: Parent
  nameWithType: Control.Parent
  fullName: Control.Parent
- uid: System.Web.UI.Control.PreRender
  parent: System.Web.UI.Control
  isExternal: false
  name: PreRender
  nameWithType: Control.PreRender
  fullName: Control.PreRender
- uid: System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: RaiseBubbleEvent(Object, EventArgs)
  nameWithType: Control.RaiseBubbleEvent(Object, EventArgs)
  fullName: Control.RaiseBubbleEvent(Object, EventArgs)
- uid: System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: RemovedControl(Control)
  nameWithType: Control.RemovedControl(Control)
  fullName: Control.RemovedControl(Control)
- uid: System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: WebControl.Render(HtmlTextWriter)
  fullName: WebControl.Render(HtmlTextWriter)
- uid: System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: Control.RenderChildren(HtmlTextWriter)
  fullName: Control.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderControl(HtmlTextWriter)
  nameWithType: Control.RenderControl(HtmlTextWriter)
  fullName: Control.RenderControl(HtmlTextWriter)
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderControl(HtmlTextWriter, ControlAdapter)
  nameWithType: Control.RenderControl(HtmlTextWriter, ControlAdapter)
  fullName: Control.RenderControl(HtmlTextWriter, ControlAdapter)
- uid: System.Web.UI.Control.RenderingCompatibility
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderingCompatibility
  nameWithType: Control.RenderingCompatibility
  fullName: Control.RenderingCompatibility
- uid: System.Web.UI.Control.ResolveAdapter
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveAdapter()
  nameWithType: Control.ResolveAdapter()
  fullName: Control.ResolveAdapter()
- uid: System.Web.UI.Control.ResolveClientUrl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveClientUrl(String)
  nameWithType: Control.ResolveClientUrl(String)
  fullName: Control.ResolveClientUrl(String)
- uid: System.Web.UI.Control.ResolveUrl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveUrl(String)
  nameWithType: Control.ResolveUrl(String)
  fullName: Control.ResolveUrl(String)
- uid: System.Web.UI.Control.SaveControlState
  parent: System.Web.UI.Control
  isExternal: false
  name: SaveControlState()
  nameWithType: Control.SaveControlState()
  fullName: Control.SaveControlState()
- uid: System.Web.UI.WebControls.WebControl.SaveViewState
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SaveViewState()
  nameWithType: WebControl.SaveViewState()
  fullName: WebControl.SaveViewState()
- uid: System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetDesignModeState(IDictionary)
  nameWithType: Control.SetDesignModeState(IDictionary)
  fullName: Control.SetDesignModeState(IDictionary)
- uid: System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetRenderMethodDelegate(RenderMethod)
  nameWithType: Control.SetRenderMethodDelegate(RenderMethod)
  fullName: Control.SetRenderMethodDelegate(RenderMethod)
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetTraceData(Object, Object)
  nameWithType: Control.SetTraceData(Object, Object)
  fullName: Control.SetTraceData(Object, Object)
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetTraceData(Object, Object, Object)
  nameWithType: Control.SetTraceData(Object, Object, Object)
  fullName: Control.SetTraceData(Object, Object, Object)
- uid: System.Web.UI.Control.Site
  parent: System.Web.UI.Control
  isExternal: false
  name: Site
  nameWithType: Control.Site
  fullName: Control.Site
- uid: System.Web.UI.WebControls.WebControl.SkinID
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SkinID
  nameWithType: WebControl.SkinID
  fullName: WebControl.SkinID
- uid: System.Web.UI.Control.TemplateControl
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateControl
  nameWithType: Control.TemplateControl
  fullName: Control.TemplateControl
- uid: System.Web.UI.Control.TemplateSourceDirectory
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateSourceDirectory
  nameWithType: Control.TemplateSourceDirectory
  fullName: Control.TemplateSourceDirectory
- uid: System.Web.UI.WebControls.WebControl.TrackViewState
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TrackViewState()
  nameWithType: WebControl.TrackViewState()
  fullName: WebControl.TrackViewState()
- uid: System.Web.UI.Control.UniqueID
  parent: System.Web.UI.Control
  isExternal: false
  name: UniqueID
  nameWithType: Control.UniqueID
  fullName: Control.UniqueID
- uid: System.Web.UI.Control.Unload
  parent: System.Web.UI.Control
  isExternal: false
  name: Unload
  nameWithType: Control.Unload
  fullName: Control.Unload
- uid: System.Web.UI.Control.ValidateRequestMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Control.ValidateRequestMode
  fullName: Control.ValidateRequestMode
- uid: System.Web.UI.Control.ViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewState
  nameWithType: Control.ViewState
  fullName: Control.ViewState
- uid: System.Web.UI.Control.ViewStateIgnoresCase
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateIgnoresCase
  nameWithType: Control.ViewStateIgnoresCase
  fullName: Control.ViewStateIgnoresCase
- uid: System.Web.UI.Control.ViewStateMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateMode
  nameWithType: Control.ViewStateMode
  fullName: Control.ViewStateMode
- uid: System.Web.UI.Control.Visible
  parent: System.Web.UI.Control
  isExternal: false
  name: Visible
  nameWithType: Control.Visible
  fullName: Control.Visible
- uid: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  parent: System.Web.UI.Control
  isExternal: false
  name: IControlBuilderAccessor.ControlBuilder
  nameWithType: Control.IControlBuilderAccessor.ControlBuilder
  fullName: Control.IControlBuilderAccessor.ControlBuilder
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  parent: System.Web.UI.Control
  isExternal: false
  name: IControlDesignerAccessor.GetDesignModeState()
  nameWithType: Control.IControlDesignerAccessor.GetDesignModeState()
  fullName: Control.IControlDesignerAccessor.GetDesignModeState()
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: IControlDesignerAccessor.SetDesignModeState(IDictionary)
  nameWithType: Control.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  fullName: Control.IControlDesignerAccessor.SetDesignModeState(IDictionary)
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: IControlDesignerAccessor.SetOwnerControl(Control)
  nameWithType: Control.IControlDesignerAccessor.SetOwnerControl(Control)
  fullName: Control.IControlDesignerAccessor.SetOwnerControl(Control)
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  parent: System.Web.UI.Control
  isExternal: false
  name: IControlDesignerAccessor.UserData
  nameWithType: Control.IControlDesignerAccessor.UserData
  fullName: Control.IControlDesignerAccessor.UserData
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  parent: System.Web.UI.Control
  isExternal: false
  name: IDataBindingsAccessor.DataBindings
  nameWithType: Control.IDataBindingsAccessor.DataBindings
  fullName: Control.IDataBindingsAccessor.DataBindings
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  parent: System.Web.UI.Control
  isExternal: false
  name: IDataBindingsAccessor.HasDataBindings
  nameWithType: Control.IDataBindingsAccessor.HasDataBindings
  fullName: Control.IDataBindingsAccessor.HasDataBindings
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  parent: System.Web.UI.Control
  isExternal: false
  name: IExpressionsAccessor.Expressions
  nameWithType: Control.IExpressionsAccessor.Expressions
  fullName: Control.IExpressionsAccessor.Expressions
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  parent: System.Web.UI.Control
  isExternal: false
  name: IExpressionsAccessor.HasExpressions
  nameWithType: Control.IExpressionsAccessor.HasExpressions
  fullName: Control.IExpressionsAccessor.HasExpressions
- uid: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: IParserAccessor.AddParsedSubObject(Object)
  nameWithType: Control.IParserAccessor.AddParsedSubObject(Object)
  fullName: Control.IParserAccessor.AddParsedSubObject(Object)
- uid: System.Web.UI.WebControls.WebControl.AccessKey
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: AccessKey
  nameWithType: WebControl.AccessKey
  fullName: WebControl.AccessKey
- uid: System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ApplyStyle(Style)
  nameWithType: WebControl.ApplyStyle(Style)
  fullName: WebControl.ApplyStyle(Style)
- uid: System.Web.UI.WebControls.WebControl.Attributes
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Attributes
  nameWithType: WebControl.Attributes
  fullName: WebControl.Attributes
- uid: System.Web.UI.WebControls.WebControl.BackColor
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BackColor
  nameWithType: WebControl.BackColor
  fullName: WebControl.BackColor
- uid: System.Web.UI.WebControls.WebControl.BorderColor
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderColor
  nameWithType: WebControl.BorderColor
  fullName: WebControl.BorderColor
- uid: System.Web.UI.WebControls.WebControl.BorderStyle
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderStyle
  nameWithType: WebControl.BorderStyle
  fullName: WebControl.BorderStyle
- uid: System.Web.UI.WebControls.WebControl.BorderWidth
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderWidth
  nameWithType: WebControl.BorderWidth
  fullName: WebControl.BorderWidth
- uid: System.Web.UI.WebControls.WebControl.ControlStyle
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ControlStyle
  nameWithType: WebControl.ControlStyle
  fullName: WebControl.ControlStyle
- uid: System.Web.UI.WebControls.WebControl.ControlStyleCreated
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ControlStyleCreated
  nameWithType: WebControl.ControlStyleCreated
  fullName: WebControl.ControlStyleCreated
- uid: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CopyBaseAttributes(WebControl)
  nameWithType: WebControl.CopyBaseAttributes(WebControl)
  fullName: WebControl.CopyBaseAttributes(WebControl)
- uid: System.Web.UI.WebControls.WebControl.CreateControlStyle
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CreateControlStyle()
  nameWithType: WebControl.CreateControlStyle()
  fullName: WebControl.CreateControlStyle()
- uid: System.Web.UI.WebControls.WebControl.CssClass
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CssClass
  nameWithType: WebControl.CssClass
  fullName: WebControl.CssClass
- uid: System.Web.UI.WebControls.WebControl.DisabledCssClass
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: DisabledCssClass
  nameWithType: WebControl.DisabledCssClass
  fullName: WebControl.DisabledCssClass
- uid: System.Web.UI.WebControls.WebControl.Enabled
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Enabled
  nameWithType: WebControl.Enabled
  fullName: WebControl.Enabled
- uid: System.Web.UI.WebControls.WebControl.Font
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Font
  nameWithType: WebControl.Font
  fullName: WebControl.Font
- uid: System.Web.UI.WebControls.WebControl.ForeColor
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ForeColor
  nameWithType: WebControl.ForeColor
  fullName: WebControl.ForeColor
- uid: System.Web.UI.WebControls.WebControl.HasAttributes
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: HasAttributes
  nameWithType: WebControl.HasAttributes
  fullName: WebControl.HasAttributes
- uid: System.Web.UI.WebControls.WebControl.Height
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Height
  nameWithType: WebControl.Height
  fullName: WebControl.Height
- uid: System.Web.UI.WebControls.WebControl.IsEnabled
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: IsEnabled
  nameWithType: WebControl.IsEnabled
  fullName: WebControl.IsEnabled
- uid: System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: MergeStyle(Style)
  nameWithType: WebControl.MergeStyle(Style)
  fullName: WebControl.MergeStyle(Style)
- uid: System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: WebControl.RenderBeginTag(HtmlTextWriter)
  fullName: WebControl.RenderBeginTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderEndTag(HtmlTextWriter)
  nameWithType: WebControl.RenderEndTag(HtmlTextWriter)
  fullName: WebControl.RenderEndTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebControl.Style
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Style
  nameWithType: WebControl.Style
  fullName: WebControl.Style
- uid: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: WebControl.SupportsDisabledAttribute
  fullName: WebControl.SupportsDisabledAttribute
- uid: System.Web.UI.WebControls.WebControl.TabIndex
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TabIndex
  nameWithType: WebControl.TabIndex
  fullName: WebControl.TabIndex
- uid: System.Web.UI.WebControls.WebControl.TagKey
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TagKey
  nameWithType: WebControl.TagKey
  fullName: WebControl.TagKey
- uid: System.Web.UI.WebControls.WebControl.TagName
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TagName
  nameWithType: WebControl.TagName
  fullName: WebControl.TagName
- uid: System.Web.UI.WebControls.WebControl.ToolTip
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ToolTip
  nameWithType: WebControl.ToolTip
  fullName: WebControl.ToolTip
- uid: System.Web.UI.WebControls.WebControl.Width
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Width
  nameWithType: WebControl.Width
  fullName: WebControl.Width
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: IAttributeAccessor.GetAttribute(String)
  nameWithType: WebControl.IAttributeAccessor.GetAttribute(String)
  fullName: WebControl.IAttributeAccessor.GetAttribute(String)
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: IAttributeAccessor.SetAttribute(String, String)
  nameWithType: WebControl.IAttributeAccessor.SetAttribute(String, String)
  fullName: WebControl.IAttributeAccessor.SetAttribute(String, String)
- uid: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindDataSourceControl(Control)
  nameWithType: DynamicDataExtensions.FindDataSourceControl(Control)
  fullName: DynamicDataExtensions.FindDataSourceControl(Control)
- uid: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindFieldTemplate(Control, String)
  nameWithType: DynamicDataExtensions.FindFieldTemplate(Control, String)
  fullName: DynamicDataExtensions.FindFieldTemplate(Control, String)
- uid: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindMetaTable(Control)
  nameWithType: DynamicDataExtensions.FindMetaTable(Control)
  fullName: DynamicDataExtensions.FindMetaTable(Control)
- uid: System.Web.UI.IPostBackEventHandler
  parent: System.Web.UI
  isExternal: false
  name: IPostBackEventHandler
  nameWithType: IPostBackEventHandler
  fullName: System.Web.UI.IPostBackEventHandler
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
