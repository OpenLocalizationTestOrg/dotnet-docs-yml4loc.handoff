{"nodes":[{"content":"Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm. This class cannot be inherited.","nodes":[{"pos":[0,194],"content":"Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm. This class cannot be inherited.","nodes":[{"content":"Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;&lt;/xref&gt;</ph> algorithm.","pos":[0,162],"source":"Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm."},{"content":"This class cannot be inherited.","pos":[163,194]}]}],"pos":[1066,1261],"yaml":true},{"content":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.  \n  \n The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object is a block cipher that encrypts and decrypts data in blocks of 8 bytes.  This class pads the final block of data if it is less than 8 bytes.  As a result of this padding, the length of encrypted data could be greater than the original plaintext.  \n  \n Note that the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object does not use salt.  \n  \n> [!NOTE]\n>  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> class. Use <xref:System.Security.Cryptography.RC2CryptoServiceProvider> only for compatibility with legacy applications and data.","nodes":[{"pos":[0,150],"content":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.","pos":[0,150],"source":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits."}]},{"pos":[157,474],"content":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object is a block cipher that encrypts and decrypts data in blocks of 8 bytes.  This class pads the final block of data if it is less than 8 bytes.  As a result of this padding, the length of encrypted data could be greater than the original plaintext.","nodes":[{"content":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object is a block cipher that encrypts and decrypts data in blocks of 8 bytes.  This class pads the final block of data if it is less than 8 bytes.  As a result of this padding, the length of encrypted data could be greater than the original plaintext.","pos":[0,317],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> object is a block cipher that encrypts and decrypts data in blocks of 8 bytes.","pos":[0,143],"source":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object is a block cipher that encrypts and decrypts data in blocks of 8 bytes."},{"content":"This class pads the final block of data if it is less than 8 bytes.","pos":[145,212]},{"content":"As a result of this padding, the length of encrypted data could be greater than the original plaintext.","pos":[214,317]}]}]},{"pos":[481,581],"content":"Note that the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object does not use salt.","nodes":[{"content":"Note that the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> object does not use salt.","pos":[0,100],"source":"Note that the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object does not use salt."}]},{"pos":[589,988],"content":"[!NOTE]\n A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> class. Use <xref:System.Security.Cryptography.RC2CryptoServiceProvider> only for compatibility with legacy applications and data.","leadings":["","> "],"nodes":[{"content":" A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> class. Use <xref:System.Security.Cryptography.RC2CryptoServiceProvider> only for compatibility with legacy applications and data.","pos":[8,397],"nodes":[{"content":"A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.","pos":[1,90]},{"content":"Consider using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Aes&gt;</ph> algorithm and its derived classes instead of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> class.","pos":[91,266],"source":" Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> class."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> only for compatibility with legacy applications and data.","pos":[267,389],"source":" Use <xref:System.Security.Cryptography.RC2CryptoServiceProvider> only for compatibility with legacy applications and data."}]}]}],"pos":[1272,2270],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RC2CryptoServiceProvider\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RC2CryptoServiceProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.RC2CryptoServiceProvider\"></xref> class."}],"pos":[6459,6575],"yaml":true},{"content":"The cryptographic service provider (CSP) cannot be acquired.","nodes":[{"pos":[0,60],"content":"The cryptographic service provider (CSP) cannot be acquired.","nodes":[{"content":"The cryptographic service provider (CSP) cannot be acquired.","pos":[0,60]}]}],"pos":[7408,7469],"yaml":true},{"content":"A non-compliant FIPS algorithm was found.","nodes":[{"pos":[0,41],"content":"A non-compliant FIPS algorithm was found.","nodes":[{"content":"A non-compliant FIPS algorithm was found.","pos":[0,41]}]}],"pos":[7579,7621],"yaml":true},{"content":"Creates a symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> decryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>)and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).","nodes":[{"pos":[0,288],"content":"Creates a symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;&lt;/xref&gt;</ph> decryptor object with the specified key (<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph>)and initialization vector (<ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>).","source":"Creates a symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> decryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>)and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>)."}],"pos":[9070,9359],"yaml":true},{"content":"This method is used to decrypt an encrypted message created using the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.","nodes":[{"pos":[0,184],"content":"This method is used to decrypt an encrypted message created using the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.","nodes":[{"content":"This method is used to decrypt an encrypted message created using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A&gt;</ph> overload with the same parameters.","pos":[0,184],"source":"This method is used to decrypt an encrypted message created using the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters."}]}],"pos":[9370,9555],"yaml":true,"extradata":"MT"},{"content":"The secret key to use for the symmetric algorithm.","nodes":[{"pos":[0,50],"content":"The secret key to use for the symmetric algorithm.","nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]}],"pos":[10271,10322],"yaml":true},{"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"pos":[0,61],"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]}],"pos":[10383,10445],"yaml":true},{"content":"A symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> decryptor object.","nodes":[{"pos":[0,83],"content":"A symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;&lt;/xref&gt;</ph> decryptor object.","source":"A symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> decryptor object."}],"pos":[10534,10618],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref> cipher mode was used.  \n  \n -or-  \n  \n A <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> cipher mode with a feedback size other than 8 bits was used.  \n  \n -or-  \n  \n An invalid key size was used.  \n  \n -or-  \n  \n The algorithm key size was not available.","nodes":[{"pos":[0,89],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CipherMode.OFB\"&gt;&lt;/xref&gt;</ph> cipher mode was used.","source":"An <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref> cipher mode was used."},{"pos":[96,100],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[107,234],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CFB\"&gt;&lt;/xref&gt;</ph> cipher mode with a feedback size other than 8 bits was used.","source":"A <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> cipher mode with a feedback size other than 8 bits was used."},{"pos":[241,245],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[252,281],"content":"An invalid key size was used.","nodes":[{"content":"An invalid key size was used.","pos":[0,29]}]},{"pos":[288,292],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[299,340],"content":"The algorithm key size was not available.","nodes":[{"content":"The algorithm key size was not available.","pos":[0,41]}]}],"pos":[10863,11222],"yaml":true},{"content":"Creates a symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> encryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).","nodes":[{"pos":[0,289],"content":"Creates a symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;&lt;/xref&gt;</ph> encryptor object with the specified key (<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph>) and initialization vector (<ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>).","source":"Creates a symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> encryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>)."}],"pos":[12671,12961],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.","nodes":[{"pos":[0,159],"content":"Use the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A&gt;</ph> overload with the same parameters to decrypt the result of this method.","pos":[0,159],"source":"Use the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method."}]}],"pos":[12972,13132],"yaml":true,"extradata":"MT"},{"content":"The secret key to use for the symmetric algorithm.","nodes":[{"pos":[0,50],"content":"The secret key to use for the symmetric algorithm.","nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]}],"pos":[13848,13899],"yaml":true},{"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"pos":[0,61],"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]}],"pos":[13960,14022],"yaml":true},{"content":"A symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> encryptor object.","nodes":[{"pos":[0,83],"content":"A symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;&lt;/xref&gt;</ph> encryptor object.","source":"A symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> encryptor object."}],"pos":[14111,14195],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref> cipher mode was used.  \n  \n -or-  \n  \n A <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> cipher mode with a feedback size other than 8 bits was used.  \n  \n -or-  \n  \n An invalid key size was used.  \n  \n -or-  \n  \n The algorithm key size was not available.","nodes":[{"pos":[0,89],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CipherMode.OFB\"&gt;&lt;/xref&gt;</ph> cipher mode was used.","source":"An <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref> cipher mode was used."},{"pos":[96,100],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[107,234],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CFB\"&gt;&lt;/xref&gt;</ph> cipher mode with a feedback size other than 8 bits was used.","source":"A <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> cipher mode with a feedback size other than 8 bits was used."},{"pos":[241,245],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[252,281],"content":"An invalid key size was used.","nodes":[{"content":"An invalid key size was used.","pos":[0,29]}]},{"pos":[288,292],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[299,340],"content":"The algorithm key size was not available.","nodes":[{"content":"The algorithm key size was not available.","pos":[0,41]}]}],"pos":[14440,14799],"yaml":true},{"content":"Gets or sets the effective size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm.","nodes":[{"pos":[0,136],"content":"Gets or sets the effective size, in bits, of the secret key used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;&lt;/xref&gt;</ph> algorithm.","source":"Gets or sets the effective size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm."}],"pos":[16121,16258],"yaml":true},{"content":"The effective key size, in bits, used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm.","nodes":[{"pos":[0,109],"content":"The effective key size, in bits, used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RC2\"&gt;&lt;/xref&gt;</ph> algorithm.","source":"The effective key size, in bits, used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm."}],"pos":[16388,16498],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\"></xref> property was set to a value other than the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\"></xref> property.","nodes":[{"pos":[0,230],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\"&gt;&lt;/xref&gt;</ph> property was set to a value other than the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\"&gt;&lt;/xref&gt;</ph> property.","source":"The <xref href=\"System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\"></xref> property was set to a value other than the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\"></xref> property."}],"pos":[16782,17013],"yaml":true},{"content":"Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to use for the algorithm.","nodes":[{"pos":[0,140],"content":"Generates a random initialization vector (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>) to use for the algorithm.","source":"Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to use for the algorithm."}],"pos":[18286,18427],"yaml":true},{"content":"Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.","nodes":[{"pos":[0,121],"content":"Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.","nodes":[{"content":"Use this method to generate a random <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</ph> when none is specified.","pos":[0,121],"source":"Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified."}]}],"pos":[18438,18560],"yaml":true,"extradata":"MT"},{"content":"Generates a random key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) to be used for the algorithm.","nodes":[{"pos":[0,127],"content":"Generates a random key (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph>) to be used for the algorithm.","source":"Generates a random key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) to be used for the algorithm."}],"pos":[20518,20646],"yaml":true},{"content":"Use this method to generate a random key when none is specified.  \n  \n The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.","nodes":[{"pos":[0,64],"content":"Use this method to generate a random key when none is specified.","nodes":[{"content":"Use this method to generate a random key when none is specified.","pos":[0,64]}]},{"pos":[71,221],"content":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.","pos":[0,150],"source":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits."}]}],"pos":[20657,20883],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value that determines whether to create a key with an 11-byte-long, zero-value salt.","nodes":[{"pos":[0,99],"content":"Gets or sets a value that determines whether to create a key with an 11-byte-long, zero-value salt.","nodes":[{"content":"Gets or sets a value that determines whether to create a key with an 11-byte-long, zero-value salt.","pos":[0,99]}]}],"pos":[22815,22915],"yaml":true},{"content":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.  For most scenarios, you should not use a salt with an <xref:System.Security.Cryptography.RC2CryptoServiceProvider> key.","nodes":[{"pos":[0,305],"content":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.  For most scenarios, you should not use a salt with an <xref:System.Security.Cryptography.RC2CryptoServiceProvider> key.","nodes":[{"content":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.  For most scenarios, you should not use a salt with an <xref:System.Security.Cryptography.RC2CryptoServiceProvider> key.","pos":[0,305],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A&gt;</ph> property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.","pos":[0,184],"source":"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt."},{"content":"For most scenarios, you should not use a salt with an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> key.","pos":[186,305],"source":"  For most scenarios, you should not use a salt with an <xref:System.Security.Cryptography.RC2CryptoServiceProvider> key."}]}]}],"pos":[22926,23232],"yaml":true,"extradata":"MT"},{"content":"`true` if the key should be created with an 11-byte-long, zero-value salt; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,118],"content":"`true` if the key should be created with an 11-byte-long, zero-value salt; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the key should be created with an 11-byte-long, zero-value salt; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,94],"source":"`true` if the key should be created with an 11-byte-long, zero-value salt; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[95,118],"source":" The default is `false`."}]}],"pos":[24067,24188],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider\n  commentId: T:System.Security.Cryptography.RC2CryptoServiceProvider\n  id: RC2CryptoServiceProvider\n  children:\n  - System.Security.Cryptography.RC2CryptoServiceProvider.#ctor\n  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV\n  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey\n  - System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  langs:\n  - csharp\n  name: RC2CryptoServiceProvider\n  nameWithType: RC2CryptoServiceProvider\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm. This class cannot be inherited.\n  remarks: \"The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.  \\n  \\n The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object is a block cipher that encrypts and decrypts data in blocks of 8 bytes.  This class pads the final block of data if it is less than 8 bytes.  As a result of this padding, the length of encrypted data could be greater than the original plaintext.  \\n  \\n Note that the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object does not use salt.  \\n  \\n> [!NOTE]\\n>  A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available. Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> class. Use <xref:System.Security.Cryptography.RC2CryptoServiceProvider> only for compatibility with legacy applications and data.\"\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class RC2CryptoServiceProvider : System.Security.Cryptography.RC2\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.RC2\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.RC2.Create\n  - System.Security.Cryptography.RC2.Create(System.String)\n  - System.Security.Cryptography.RC2.EffectiveKeySizeValue\n  - System.Security.Cryptography.RC2.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Key\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor\n  commentId: M:System.Security.Cryptography.RC2CryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: RC2CryptoServiceProvider()\n  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n  fullName: RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.RC2CryptoServiceProvider\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]\"\n  syntax:\n    content: public RC2CryptoServiceProvider ();\n    parameters: []\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The cryptographic service provider (CSP) cannot be acquired.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A non-compliant FIPS algorithm was found.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  fullName: RC2CryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> decryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>)and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).\n  remarks: This method is used to decrypt an encrypted message created using the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> decryptor object.\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An <xref href=\\\"System.Security.Cryptography.CipherMode.OFB\\\"></xref> cipher mode was used.  \\n  \\n -or-  \\n  \\n A <xref href=\\\"System.Security.Cryptography.CipherMode.CFB\\\"></xref> cipher mode with a feedback size other than 8 bits was used.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  fullName: RC2CryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> encryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).\n  remarks: Use the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.RC2\"></xref> encryptor object.\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An <xref href=\\\"System.Security.Cryptography.CipherMode.OFB\\\"></xref> cipher mode was used.  \\n  \\n -or-  \\n  \\n A <xref href=\\\"System.Security.Cryptography.CipherMode.CFB\\\"></xref> cipher mode with a feedback size other than 8 bits was used.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  commentId: P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  id: EffectiveKeySize\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: EffectiveKeySize\n  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize\n  fullName: RC2CryptoServiceProvider.EffectiveKeySize\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Gets or sets the effective size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm.\n  syntax:\n    content: public override int EffectiveKeySize { get; set; }\n    return:\n      type: System.Int32\n      description: The effective key size, in bits, used by the <xref href=\"System.Security.Cryptography.RC2\"></xref> algorithm.\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: The <xref href=\"System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\"></xref> property was set to a value other than the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\"></xref> property.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV\n  commentId: M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: RC2CryptoServiceProvider.GenerateIV()\n  fullName: RC2CryptoServiceProvider.GenerateIV()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to use for the algorithm.\n  remarks: Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]\"\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey\n  commentId: M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: RC2CryptoServiceProvider.GenerateKey()\n  fullName: RC2CryptoServiceProvider.GenerateKey()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Generates a random key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) to be used for the algorithm.\n  remarks: \"Use this method to generate a random key when none is specified.  \\n  \\n The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.\"\n  example:\n  - \"The following code example encrypts and then decrypts a string.  \\n  \\n [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]\\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]\"\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  commentId: P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  id: UseSalt\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: UseSalt\n  nameWithType: RC2CryptoServiceProvider.UseSalt\n  fullName: RC2CryptoServiceProvider.UseSalt\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Gets or sets a value that determines whether to create a key with an 11-byte-long, zero-value salt.\n  remarks: The <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.  For most scenarios, you should not use a salt with an <xref:System.Security.Cryptography.RC2CryptoServiceProvider> key.\n  example:\n  - \"The following code example sets the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> property to `true`, and then encrypts and decrypts a value.  \\n  \\n [!code-cpp[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/cpp/example.cpp#1)]\\n [!code-csharp[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/CS/example.cs#1)]\\n [!code-vb[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/VB/example.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public bool UseSalt { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the key should be created with an 11-byte-long, zero-value salt; otherwise, `false`. The default is `false`.'\n  overload: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.RC2\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RC2\n  nameWithType: RC2\n  fullName: System.Security.Cryptography.RC2\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicUnexpectedOperationException\n  nameWithType: CryptographicUnexpectedOperationException\n  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: RC2CryptoServiceProvider()\n  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n  fullName: RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  fullName: RC2CryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  fullName: RC2CryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: EffectiveKeySize\n  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize\n  fullName: RC2CryptoServiceProvider.EffectiveKeySize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: RC2CryptoServiceProvider.GenerateIV()\n  fullName: RC2CryptoServiceProvider.GenerateIV()\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: RC2CryptoServiceProvider.GenerateKey()\n  fullName: RC2CryptoServiceProvider.GenerateKey()\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: UseSalt\n  nameWithType: RC2CryptoServiceProvider.UseSalt\n  fullName: RC2CryptoServiceProvider.UseSalt\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: RC2CryptoServiceProvider\n  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider\n  fullName: RC2CryptoServiceProvider.RC2CryptoServiceProvider\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: RC2CryptoServiceProvider.CreateDecryptor\n  fullName: RC2CryptoServiceProvider.CreateDecryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: RC2CryptoServiceProvider.CreateEncryptor\n  fullName: RC2CryptoServiceProvider.CreateEncryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: EffectiveKeySize\n  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize\n  fullName: RC2CryptoServiceProvider.EffectiveKeySize\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: GenerateIV\n  nameWithType: RC2CryptoServiceProvider.GenerateIV\n  fullName: RC2CryptoServiceProvider.GenerateIV\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: GenerateKey\n  nameWithType: RC2CryptoServiceProvider.GenerateKey\n  fullName: RC2CryptoServiceProvider.GenerateKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt*\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: UseSalt\n  nameWithType: RC2CryptoServiceProvider.UseSalt\n  fullName: RC2CryptoServiceProvider.UseSalt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/RC2CryptoServiceProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSize\n  nameWithType: SymmetricAlgorithm.BlockSize\n  fullName: SymmetricAlgorithm.BlockSize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: SymmetricAlgorithm.BlockSizeValue\n  fullName: SymmetricAlgorithm.BlockSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: SymmetricAlgorithm.Clear()\n  fullName: SymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.RC2.Create\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: Create()\n  nameWithType: RC2.Create()\n  fullName: RC2.Create()\n- uid: System.Security.Cryptography.RC2.Create(System.String)\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: Create(String)\n  nameWithType: RC2.Create(String)\n  fullName: RC2.Create(String)\n- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: SymmetricAlgorithm.CreateDecryptor()\n  fullName: SymmetricAlgorithm.CreateDecryptor()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: SymmetricAlgorithm.CreateEncryptor()\n  fullName: SymmetricAlgorithm.CreateEncryptor()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymmetricAlgorithm.Dispose()\n  fullName: SymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymmetricAlgorithm.Dispose(Boolean)\n  fullName: SymmetricAlgorithm.Dispose(Boolean)\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: SymmetricAlgorithm.FeedbackSize\n  fullName: SymmetricAlgorithm.FeedbackSize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSizeValue\n  nameWithType: SymmetricAlgorithm.FeedbackSizeValue\n  fullName: SymmetricAlgorithm.FeedbackSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IV\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IV\n  nameWithType: SymmetricAlgorithm.IV\n  fullName: SymmetricAlgorithm.IV\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IVValue\n  nameWithType: SymmetricAlgorithm.IVValue\n  fullName: SymmetricAlgorithm.IVValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Key\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Key\n  nameWithType: SymmetricAlgorithm.Key\n  fullName: SymmetricAlgorithm.Key\n- uid: System.Security.Cryptography.RC2.KeySize\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: KeySize\n  nameWithType: RC2.KeySize\n  fullName: RC2.KeySize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: SymmetricAlgorithm.KeySizeValue\n  fullName: SymmetricAlgorithm.KeySizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeyValue\n  nameWithType: SymmetricAlgorithm.KeyValue\n  fullName: SymmetricAlgorithm.KeyValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: SymmetricAlgorithm.LegalBlockSizes\n  fullName: SymmetricAlgorithm.LegalBlockSizes\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizesValue\n  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue\n  fullName: SymmetricAlgorithm.LegalBlockSizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: SymmetricAlgorithm.LegalKeySizes\n  fullName: SymmetricAlgorithm.LegalKeySizes\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: SymmetricAlgorithm.LegalKeySizesValue\n  fullName: SymmetricAlgorithm.LegalKeySizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Mode\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Mode\n  nameWithType: SymmetricAlgorithm.Mode\n  fullName: SymmetricAlgorithm.Mode\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ModeValue\n  nameWithType: SymmetricAlgorithm.ModeValue\n  fullName: SymmetricAlgorithm.ModeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Padding\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Padding\n  nameWithType: SymmetricAlgorithm.Padding\n  fullName: SymmetricAlgorithm.Padding\n- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: PaddingValue\n  nameWithType: SymmetricAlgorithm.PaddingValue\n  fullName: SymmetricAlgorithm.PaddingValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ValidKeySize(Int32)\n  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)\n  fullName: SymmetricAlgorithm.ValidKeySize(Int32)\n- uid: System.Security.Cryptography.RC2.EffectiveKeySizeValue\n  parent: System.Security.Cryptography.RC2\n  isExternal: false\n  name: EffectiveKeySizeValue\n  nameWithType: RC2.EffectiveKeySizeValue\n  fullName: RC2.EffectiveKeySizeValue\n"}