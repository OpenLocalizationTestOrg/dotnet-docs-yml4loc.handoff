{"nodes":[{"content":"An abstraction that represents the mapping between a database and domain objects.","nodes":[{"pos":[0,81],"content":"An abstraction that represents the mapping between a database and domain objects.","nodes":[{"content":"An abstraction that represents the mapping between a database and domain objects.","pos":[0,81]}]}],"pos":[925,1007],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> class.","nodes":[{"pos":[0,96],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaModel\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> class."}],"pos":[2359,2456],"yaml":true},{"content":"Gets the type of <xref href=\"System.Data.Linq.DataContext\"></xref> type that this model describes.","nodes":[{"pos":[0,98],"content":"Gets the type of <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> type that this model describes.","source":"Gets the type of <xref href=\"System.Data.Linq.DataContext\"></xref> type that this model describes."}],"pos":[3559,3658],"yaml":true},{"content":"The data context type.","nodes":[{"pos":[0,22],"content":"The data context type.","nodes":[{"content":"The data context type.","pos":[0,22]}]}],"pos":[3778,3801],"yaml":true},{"content":"Gets the name of the database.","nodes":[{"pos":[0,30],"content":"Gets the name of the database.","nodes":[{"content":"Gets the name of the database.","pos":[0,30]}]}],"pos":[4850,4881],"yaml":true},{"content":"The database name as a string.","nodes":[{"pos":[0,30],"content":"The database name as a string.","nodes":[{"content":"The database name as a string.","pos":[0,30]}]}],"pos":[5006,5037],"yaml":true},{"content":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaFunction\"></xref> that corresponds to a database function.","nodes":[{"pos":[0,108],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaFunction\"&gt;&lt;/xref&gt;</ph> that corresponds to a database function.","source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaFunction\"></xref> that corresponds to a database function."}],"pos":[6205,6314],"yaml":true},{"content":"Database functions are user-defined functions, table-valued functions, and stored procedures.","nodes":[{"pos":[0,93],"content":"Database functions are user-defined functions, table-valued functions, and stored procedures.","nodes":[{"content":"Database functions are user-defined functions, table-valued functions, and stored procedures.","pos":[0,93]}]}],"pos":[6325,6419],"yaml":true,"extradata":"MT"},{"content":"The method defined on the <xref href=\"System.Data.Linq.DataContext\"></xref> or subordinate class that represents the database function.","nodes":[{"pos":[0,135],"content":"The method defined on the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataContext\"&gt;&lt;/xref&gt;</ph> or subordinate class that represents the database function.","source":"The method defined on the <xref href=\"System.Data.Linq.DataContext\"></xref> or subordinate class that represents the database function."}],"pos":[6640,6776],"yaml":true},{"content":"The meta-function that corresponds to a database function.","nodes":[{"pos":[0,58],"content":"The meta-function that corresponds to a database function.","nodes":[{"content":"The meta-function that corresponds to a database function.","pos":[0,58]}]}],"pos":[6857,6916],"yaml":true},{"content":"Gets an enumeration of all functions.","nodes":[{"pos":[0,37],"content":"Gets an enumeration of all functions.","nodes":[{"content":"Gets an enumeration of all functions.","pos":[0,37]}]}],"pos":[7969,8007],"yaml":true},{"content":"An enumeration that can be used to iterate through all functions.","nodes":[{"pos":[0,65],"content":"An enumeration that can be used to iterate through all functions.","nodes":[{"content":"An enumeration that can be used to iterate through all functions.","pos":[0,65]}]}],"pos":[8281,8347],"yaml":true},{"content":"Discovers the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> for the specified <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,120],"content":"Discovers the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;&lt;/xref&gt;</ph> for the specified <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"Discovers the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> for the specified <xref href=\"System.Type\"></xref>."}],"pos":[9446,9567],"yaml":true},{"content":"The type for which the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> is sought.","nodes":[{"pos":[0,88],"content":"The type for which the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaType\"&gt;&lt;/xref&gt;</ph> is sought.","source":"The type for which the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> is sought."}],"pos":[9739,9828],"yaml":true},{"content":"A meta-type that corresponds to the specified type.","nodes":[{"pos":[0,51],"content":"A meta-type that corresponds to the specified type.","nodes":[{"content":"A meta-type that corresponds to the specified type.","pos":[0,51]}]}],"pos":[9905,9957],"yaml":true},{"content":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaTable\"></xref> associated with a specified <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,126],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Mapping.MetaTable\"&gt;&lt;/xref&gt;</ph> associated with a specified <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Data.Linq.Mapping.MetaTable\"></xref> associated with a specified <xref href=\"System.Type\"></xref>."}],"pos":[11037,11164],"yaml":true},{"content":"The common language runtime (CLR) row type.","nodes":[{"pos":[0,43],"content":"The common language runtime (CLR) row type.","nodes":[{"content":"The common language runtime (CLR) row type.","pos":[0,43]}]}],"pos":[11340,11384],"yaml":true},{"content":"A meta-table associated with the specified row type.","nodes":[{"pos":[0,52],"content":"A meta-table associated with the specified row type.","nodes":[{"content":"A meta-table associated with the specified row type.","pos":[0,52]}]}],"pos":[11462,11515],"yaml":true},{"content":"Get an enumeration of all tables.","nodes":[{"pos":[0,33],"content":"Get an enumeration of all tables.","nodes":[{"content":"Get an enumeration of all tables.","pos":[0,33]}]}],"pos":[12547,12581],"yaml":true},{"content":"An enumerator that can be used to iterate over the tables.","nodes":[{"pos":[0,58],"content":"An enumerator that can be used to iterate over the tables.","nodes":[{"content":"An enumerator that can be used to iterate over the tables.","pos":[0,58]}]}],"pos":[12846,12905],"yaml":true},{"content":"Gets the mapping source that originated this model.","nodes":[{"pos":[0,51],"content":"Gets the mapping source that originated this model.","nodes":[{"content":"Gets the mapping source that originated this model.","pos":[0,51]}]}],"pos":[13958,14010],"yaml":true},{"content":"The originating mapping source.","nodes":[{"pos":[0,31],"content":"The originating mapping source.","nodes":[{"content":"The originating mapping source.","pos":[0,31]}]}],"pos":[14193,14225],"yaml":true},{"content":"Gets or sets the provider type.","nodes":[{"pos":[0,31],"content":"Gets or sets the provider type.","nodes":[{"content":"Gets or sets the provider type.","pos":[0,31]}]}],"pos":[15276,15308],"yaml":true},{"content":"If this property is specified, an existing provider type can be used. This will eliminate a round trip to the server to obtain this information. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] has to know the provider type to establish appropriate query translation rules. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] supports <xref:System.Data.Linq.SqlClient.Sql2000Provider> and <xref:System.Data.Linq.SqlClient.Sql2005Provider> providers.","nodes":[{"pos":[0,452],"content":"If this property is specified, an existing provider type can be used. This will eliminate a round trip to the server to obtain this information. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] has to know the provider type to establish appropriate query translation rules. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] supports <xref:System.Data.Linq.SqlClient.Sql2000Provider> and <xref:System.Data.Linq.SqlClient.Sql2005Provider> providers.","nodes":[{"content":"If this property is specified, an existing provider type can be used.","pos":[0,69]},{"content":"This will eliminate a round trip to the server to obtain this information.","pos":[70,144]},{"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> has to know the provider type to establish appropriate query translation rules.","pos":[145,276],"source":"[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] has to know the provider type to establish appropriate query translation rules."},{"content":"<ph id=\"ph1\">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> supports <ph id=\"ph2\">&lt;xref:System.Data.Linq.SqlClient.Sql2000Provider&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Data.Linq.SqlClient.Sql2005Provider&gt;</ph> providers.","pos":[277,452],"source":"[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] supports <xref:System.Data.Linq.SqlClient.Sql2000Provider> and <xref:System.Data.Linq.SqlClient.Sql2005Provider> providers."}]}],"pos":[15319,15772],"yaml":true,"extradata":"MT"},{"content":"The provider type.","nodes":[{"pos":[0,18],"content":"The provider type.","nodes":[{"content":"The provider type.","pos":[0,18]}]}],"pos":[15893,15912],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Mapping.MetaModel\n  commentId: T:System.Data.Linq.Mapping.MetaModel\n  id: MetaModel\n  children:\n  - System.Data.Linq.Mapping.MetaModel.#ctor\n  - System.Data.Linq.Mapping.MetaModel.ContextType\n  - System.Data.Linq.Mapping.MetaModel.DatabaseName\n  - System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)\n  - System.Data.Linq.Mapping.MetaModel.GetFunctions\n  - System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)\n  - System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)\n  - System.Data.Linq.Mapping.MetaModel.GetTables\n  - System.Data.Linq.Mapping.MetaModel.MappingSource\n  - System.Data.Linq.Mapping.MetaModel.ProviderType\n  langs:\n  - csharp\n  name: MetaModel\n  nameWithType: MetaModel\n  fullName: System.Data.Linq.Mapping.MetaModel\n  type: Class\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: An abstraction that represents the mapping between a database and domain objects.\n  syntax:\n    content: public abstract class MetaModel\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaModel.#ctor\n  commentId: M:System.Data.Linq.Mapping.MetaModel.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.Mapping.MetaModel\n  langs:\n  - csharp\n  name: MetaModel()\n  nameWithType: MetaModel.MetaModel()\n  fullName: MetaModel.MetaModel()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Mapping.MetaModel\"></xref> class.\n  syntax:\n    content: protected MetaModel ();\n    parameters: []\n  overload: System.Data.Linq.Mapping.MetaModel.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaModel.ContextType\n  commentId: P:System.Data.Linq.Mapping.MetaModel.ContextType\n  id: ContextType\n  parent: System.Data.Linq.Mapping.MetaModel\n  langs:\n  - csharp\n  name: ContextType\n  nameWithType: MetaModel.ContextType\n  fullName: MetaModel.ContextType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the type of <xref href=\"System.Data.Linq.DataContext\"></xref> type that this model describes.\n  syntax:\n    content: public abstract Type ContextType { get; }\n    return:\n      type: System.Type\n      description: The data context type.\n  overload: System.Data.Linq.Mapping.MetaModel.ContextType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaModel.DatabaseName\n  commentId: P:System.Data.Linq.Mapping.MetaModel.DatabaseName\n  id: DatabaseName\n  parent: System.Data.Linq.Mapping.MetaModel\n  langs:\n  - csharp\n  name: DatabaseName\n  nameWithType: MetaModel.DatabaseName\n  fullName: MetaModel.DatabaseName\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the name of the database.\n  syntax:\n    content: public abstract string DatabaseName { get; }\n    return:\n      type: System.String\n      description: The database name as a string.\n  overload: System.Data.Linq.Mapping.MetaModel.DatabaseName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)\n  commentId: M:System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)\n  id: GetFunction(System.Reflection.MethodInfo)\n  parent: System.Data.Linq.Mapping.MetaModel\n  langs:\n  - csharp\n  name: GetFunction(MethodInfo)\n  nameWithType: MetaModel.GetFunction(MethodInfo)\n  fullName: MetaModel.GetFunction(MethodInfo)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaFunction\"></xref> that corresponds to a database function.\n  remarks: Database functions are user-defined functions, table-valued functions, and stored procedures.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaFunction GetFunction (System.Reflection.MethodInfo method);\n    parameters:\n    - id: method\n      type: System.Reflection.MethodInfo\n      description: The method defined on the <xref href=\"System.Data.Linq.DataContext\"></xref> or subordinate class that represents the database function.\n    return:\n      type: System.Data.Linq.Mapping.MetaFunction\n      description: The meta-function that corresponds to a database function.\n  overload: System.Data.Linq.Mapping.MetaModel.GetFunction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaModel.GetFunctions\n  commentId: M:System.Data.Linq.Mapping.MetaModel.GetFunctions\n  id: GetFunctions\n  parent: System.Data.Linq.Mapping.MetaModel\n  langs:\n  - csharp\n  name: GetFunctions()\n  nameWithType: MetaModel.GetFunctions()\n  fullName: MetaModel.GetFunctions()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets an enumeration of all functions.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerable<System.Data.Linq.Mapping.MetaFunction> GetFunctions ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Data.Linq.Mapping.MetaFunction}\n      description: An enumeration that can be used to iterate through all functions.\n  overload: System.Data.Linq.Mapping.MetaModel.GetFunctions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)\n  commentId: M:System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)\n  id: GetMetaType(System.Type)\n  parent: System.Data.Linq.Mapping.MetaModel\n  langs:\n  - csharp\n  name: GetMetaType(Type)\n  nameWithType: MetaModel.GetMetaType(Type)\n  fullName: MetaModel.GetMetaType(Type)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Discovers the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> for the specified <xref href=\"System.Type\"></xref>.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaType GetMetaType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type for which the <xref href=\"System.Data.Linq.Mapping.MetaType\"></xref> is sought.\n    return:\n      type: System.Data.Linq.Mapping.MetaType\n      description: A meta-type that corresponds to the specified type.\n  overload: System.Data.Linq.Mapping.MetaModel.GetMetaType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)\n  commentId: M:System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)\n  id: GetTable(System.Type)\n  parent: System.Data.Linq.Mapping.MetaModel\n  langs:\n  - csharp\n  name: GetTable(Type)\n  nameWithType: MetaModel.GetTable(Type)\n  fullName: MetaModel.GetTable(Type)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the <xref href=\"System.Data.Linq.Mapping.MetaTable\"></xref> associated with a specified <xref href=\"System.Type\"></xref>.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MetaTable GetTable (Type rowType);\n    parameters:\n    - id: rowType\n      type: System.Type\n      description: The common language runtime (CLR) row type.\n    return:\n      type: System.Data.Linq.Mapping.MetaTable\n      description: A meta-table associated with the specified row type.\n  overload: System.Data.Linq.Mapping.MetaModel.GetTable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaModel.GetTables\n  commentId: M:System.Data.Linq.Mapping.MetaModel.GetTables\n  id: GetTables\n  parent: System.Data.Linq.Mapping.MetaModel\n  langs:\n  - csharp\n  name: GetTables()\n  nameWithType: MetaModel.GetTables()\n  fullName: MetaModel.GetTables()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Get an enumeration of all tables.\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerable<System.Data.Linq.Mapping.MetaTable> GetTables ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Data.Linq.Mapping.MetaTable}\n      description: An enumerator that can be used to iterate over the tables.\n  overload: System.Data.Linq.Mapping.MetaModel.GetTables*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaModel.MappingSource\n  commentId: P:System.Data.Linq.Mapping.MetaModel.MappingSource\n  id: MappingSource\n  parent: System.Data.Linq.Mapping.MetaModel\n  langs:\n  - csharp\n  name: MappingSource\n  nameWithType: MetaModel.MappingSource\n  fullName: MetaModel.MappingSource\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets the mapping source that originated this model.\n  syntax:\n    content: public abstract System.Data.Linq.Mapping.MappingSource MappingSource { get; }\n    return:\n      type: System.Data.Linq.Mapping.MappingSource\n      description: The originating mapping source.\n  overload: System.Data.Linq.Mapping.MetaModel.MappingSource*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Mapping.MetaModel.ProviderType\n  commentId: P:System.Data.Linq.Mapping.MetaModel.ProviderType\n  id: ProviderType\n  parent: System.Data.Linq.Mapping.MetaModel\n  langs:\n  - csharp\n  name: ProviderType\n  nameWithType: MetaModel.ProviderType\n  fullName: MetaModel.ProviderType\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq.Mapping\n  summary: Gets or sets the provider type.\n  remarks: If this property is specified, an existing provider type can be used. This will eliminate a round trip to the server to obtain this information. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] has to know the provider type to establish appropriate query translation rules. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] supports <xref:System.Data.Linq.SqlClient.Sql2000Provider> and <xref:System.Data.Linq.SqlClient.Sql2005Provider> providers.\n  syntax:\n    content: public abstract Type ProviderType { get; }\n    return:\n      type: System.Type\n      description: The provider type.\n  overload: System.Data.Linq.Mapping.MetaModel.ProviderType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.Mapping.MetaModel.#ctor\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: MetaModel()\n  nameWithType: MetaModel.MetaModel()\n  fullName: MetaModel.MetaModel()\n- uid: System.Data.Linq.Mapping.MetaModel.ContextType\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: ContextType\n  nameWithType: MetaModel.ContextType\n  fullName: MetaModel.ContextType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Data.Linq.Mapping.MetaModel.DatabaseName\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: DatabaseName\n  nameWithType: MetaModel.DatabaseName\n  fullName: MetaModel.DatabaseName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Mapping.MetaModel.GetFunction(System.Reflection.MethodInfo)\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: GetFunction(MethodInfo)\n  nameWithType: MetaModel.GetFunction(MethodInfo)\n  fullName: MetaModel.GetFunction(MethodInfo)\n- uid: System.Data.Linq.Mapping.MetaFunction\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaFunction\n  nameWithType: MetaFunction\n  fullName: System.Data.Linq.Mapping.MetaFunction\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Data.Linq.Mapping.MetaModel.GetFunctions\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: GetFunctions()\n  nameWithType: MetaModel.GetFunctions()\n  fullName: MetaModel.GetFunctions()\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Data.Linq.Mapping.MetaFunction}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<MetaFunction>\n  nameWithType: IEnumerable<MetaFunction>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Linq.Mapping.MetaFunction>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Linq.Mapping.MetaFunction\n    name: MetaFunction\n    nameWithType: MetaFunction\n    fullName: System.Data.Linq.Mapping.MetaFunction\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Mapping.MetaModel.GetMetaType(System.Type)\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: GetMetaType(Type)\n  nameWithType: MetaModel.GetMetaType(Type)\n  fullName: MetaModel.GetMetaType(Type)\n- uid: System.Data.Linq.Mapping.MetaType\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaType\n  nameWithType: MetaType\n  fullName: System.Data.Linq.Mapping.MetaType\n- uid: System.Data.Linq.Mapping.MetaModel.GetTable(System.Type)\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: GetTable(Type)\n  nameWithType: MetaModel.GetTable(Type)\n  fullName: MetaModel.GetTable(Type)\n- uid: System.Data.Linq.Mapping.MetaTable\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MetaTable\n  nameWithType: MetaTable\n  fullName: System.Data.Linq.Mapping.MetaTable\n- uid: System.Data.Linq.Mapping.MetaModel.GetTables\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: GetTables()\n  nameWithType: MetaModel.GetTables()\n  fullName: MetaModel.GetTables()\n- uid: System.Collections.Generic.IEnumerable{System.Data.Linq.Mapping.MetaTable}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<MetaTable>\n  nameWithType: IEnumerable<MetaTable>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Linq.Mapping.MetaTable>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Linq.Mapping.MetaTable\n    name: MetaTable\n    nameWithType: MetaTable\n    fullName: System.Data.Linq.Mapping.MetaTable\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.Mapping.MetaModel.MappingSource\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: MappingSource\n  nameWithType: MetaModel.MappingSource\n  fullName: MetaModel.MappingSource\n- uid: System.Data.Linq.Mapping.MappingSource\n  parent: System.Data.Linq.Mapping\n  isExternal: false\n  name: MappingSource\n  nameWithType: MappingSource\n  fullName: System.Data.Linq.Mapping.MappingSource\n- uid: System.Data.Linq.Mapping.MetaModel.ProviderType\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: ProviderType\n  nameWithType: MetaModel.ProviderType\n  fullName: MetaModel.ProviderType\n- uid: System.Data.Linq.Mapping.MetaModel.#ctor*\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: MetaModel\n  nameWithType: MetaModel.MetaModel\n  fullName: MetaModel.MetaModel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n- uid: System.Data.Linq.Mapping.MetaModel.ContextType*\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: ContextType\n  nameWithType: MetaModel.ContextType\n  fullName: MetaModel.ContextType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n- uid: System.Data.Linq.Mapping.MetaModel.DatabaseName*\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: DatabaseName\n  nameWithType: MetaModel.DatabaseName\n  fullName: MetaModel.DatabaseName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n- uid: System.Data.Linq.Mapping.MetaModel.GetFunction*\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: GetFunction\n  nameWithType: MetaModel.GetFunction\n  fullName: MetaModel.GetFunction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n- uid: System.Data.Linq.Mapping.MetaModel.GetFunctions*\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: GetFunctions\n  nameWithType: MetaModel.GetFunctions\n  fullName: MetaModel.GetFunctions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n- uid: System.Data.Linq.Mapping.MetaModel.GetMetaType*\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: GetMetaType\n  nameWithType: MetaModel.GetMetaType\n  fullName: MetaModel.GetMetaType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n- uid: System.Data.Linq.Mapping.MetaModel.GetTable*\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: GetTable\n  nameWithType: MetaModel.GetTable\n  fullName: MetaModel.GetTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n- uid: System.Data.Linq.Mapping.MetaModel.GetTables*\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: GetTables\n  nameWithType: MetaModel.GetTables\n  fullName: MetaModel.GetTables\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n- uid: System.Data.Linq.Mapping.MetaModel.MappingSource*\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: MappingSource\n  nameWithType: MetaModel.MappingSource\n  fullName: MetaModel.MappingSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n- uid: System.Data.Linq.Mapping.MetaModel.ProviderType*\n  parent: System.Data.Linq.Mapping.MetaModel\n  isExternal: false\n  name: ProviderType\n  nameWithType: MetaModel.ProviderType\n  fullName: MetaModel.ProviderType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq.Mapping/MetaModel.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}