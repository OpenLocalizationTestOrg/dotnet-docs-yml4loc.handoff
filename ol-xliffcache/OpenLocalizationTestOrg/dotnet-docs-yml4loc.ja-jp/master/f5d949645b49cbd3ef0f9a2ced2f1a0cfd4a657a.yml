### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  commentId: T:System.Web.UI.WebControls.WebParts.WebPartManager
  id: WebPartManager
  children:
  - System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  - System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  - System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  - System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  - System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  langs:
  - csharp
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Serves as the central class of the Web Parts control set, managing all the Web Parts controls, functionality, and events that occur on a Web page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control acts as the hub or control center of a Web Parts application. There must be one--and only one--<xref:System.Web.UI.WebControls.WebParts.WebPartManager> control instance on every page that uses Web Parts controls. As with most aspects of Web Parts applications, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control works only with authenticated users. Further, its functionality works almost entirely with server controls that reside within Web Parts zones that inherit from the <xref:System.Web.UI.WebControls.WebParts.WebZone> class. Server controls that reside on a page outside of these zones can have very little Web Parts functionality or interaction with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n As the hub for Web Parts functionality on a page, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control carries out the kinds of tasks described in the following table.  \n  \n|Task category|What the control does|  \n|-------------------|---------------------------|  \n|Tracking Web Parts controls|Keeps track of the many different kinds of controls on a page that provide Web Parts features, including <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, connections, zones, and others.|  \n|Adding and removing Web Parts controls|Provides the methods for adding, deleting, and closing <xref:System.Web.UI.WebControls.WebParts.WebPart> controls on a page.|  \n|Administering connections|Creates connections between controls, and monitors the connections as well as the processes of adding and removing them.|  \n|Personalizing controls and pages|Enables users to move controls to different locations on a page, and launches the views in which users can edit the appearance, properties, and behavior of controls. Maintains user-specific personalization settings on each page.|  \n|Toggling between different page views|Switches a page among different specialized views of the page, so that users can carry out certain tasks such as changing page layout or editing controls.|  \n|Raising Web Parts life-cycle events|Defines, raises, and enables developers to handle life-cycle events of Web Parts controls, such as when controls are being added, moved, connected, or deleted.|  \n|Enabling import and export of controls|Exports XML streams that contain the state of the properties of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and allows users to import the files for convenience in personalizing complex controls in other pages or sites.|  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class has a large set of properties. Consistent with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> role of tracking other controls, it has a number of properties that reference collections of either Web Parts controls, or other special Web Parts objects. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> properties are all collections used by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control for its tracking and other management tasks.  \n  \n Another group of properties contains customizable warnings that apply in certain scenarios that occur in a Web Parts application. These include the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>, and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> properties.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overrides some of its base inherited properties, which are used by many Web server controls. These include the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> properties.  \n  \n Finally, there is a group of properties useful for accessing the current state of the application. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property indicates the current display mode that a page is in. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> property indicates whether a control is allowed to render client-side script, which is relevant in situations where users might have browsers with different capabilities or have scripting turned off. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> property is useful for referencing a utility class that contains the calls to a number of important Web Parts methods that are used for extensibility cases. By hiding the calls to these methods in a separate class (the <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> class), the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class's own API is simplified. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> property provides access to the personalization objects that store users' personalization settings and persist that data to permanent storage. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> property indicates which <xref:System.Web.UI.WebControls.WebParts.WebPart> control on a page is currently selected by the user or the application. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> property indicates whether custom personalization data on a <xref:System.Web.UI.WebControls.WebParts.WebPart> control has changed.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control contains five built-in display modes, or views of a Web page. Developers can extend this feature, creating custom display modes by extending types such as the <xref:System.Web.UI.WebControls.WebParts.WebZone> class or the <xref:System.Web.UI.WebControls.WebParts.ToolZone> class. Users can switch a page into the various display modes, provided that the proper kind of controls that correspond to a given display mode are present on a page.  \n  \n> [!NOTE]\n>  It is possible to extend this feature so that users can switch into a custom display mode without having a corresponding zone on the page. However, the default behavior is that display modes correspond to zones.  \n  \n The standard display modes are represented by public fields in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class. The following table summarizes the fields and the display modes they refer to. The current display mode of a page, as noted above, is always referenced in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property, and the set of display modes that is possible on a particular page, given the kind of zones that are present on the page, is contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property.  \n  \n|Field|Display mode details|  \n|-----------|--------------------------|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|The normal user view of a Web page; the default and most common display mode.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|The view in which users can rearrange or delete controls to change the page layout.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|The view in which an editing user interface (UI) becomes visible; users can edit the appearance, properties, and behavior of the controls that are visible in the normal browse mode.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|The view in which a catalog UI becomes visible; users can add controls to a page from catalogs of available controls.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|The view in which a connection UI becomes visible; users can connect, manage, or disconnect connections between controls.|  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control also contains a number of events that are critical in the life cycle of Web Parts pages and controls. These events provide precise programmatic control over the behavior of Web Parts controls. Most methods pertain directly to <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (or other server or user controls that are placed in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones so that they can behave as <xref:System.Web.UI.WebControls.WebParts.WebPart> controls). However, a few events pertain to the state of the page or connections on the page. The following table lists the available events and summarizes their purposes.  \n  \n> [!NOTE]\n>  In all cases in the following table, the word \"control\" refers to a <xref:System.Web.UI.WebControls.WebParts.WebPart> control or any server control that resides in a zone and is wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time.  \n  \n|Event|Description|  \n|-----------|-----------------|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>|Occurs just before a control is added to a page to verify that it is authorized.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>|Occurs after all the connections on a page have been activated.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>|Occurs just before the process of activating all the connections on a page.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>|Occurs after the current display mode of a page has changed.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>|Occurs just before the process of changing a page's display mode.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>|Occurs after the selection of a control has been canceled.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>|Occurs just before the process of canceling the selection of a control.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>|Occurs after a control has been added to a zone.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>|Occurs just before the process of adding a control to a zone.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>|Occurs after a control has been closed (removed from a page).|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>|Occurs just before the process of closing a control.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>|Occurs after an instance of a dynamic control (one that was created programmatically or added from a catalog) has been permanently deleted.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>|Occurs just before the process of deleting a dynamic control.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>|Occurs after a control has moved within its zone or to another zone.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>|Occurs just before the process of moving a control.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>|Occurs after two controls selected for participation in a connection have established the connection.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>|Occurs just before the process of connecting two controls.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>|Occurs after two connected controls have been disconnected.|  \n|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>|Occurs just before the process of disconnecting two controls.|  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has numerous methods for managing Web Parts pages. A large set of the methods, not listed here, are methods whose names take the form of On*EventName*. These methods typically raise their associated event, and provide the event with a handler of type <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>. Most of these methods can be overridden by developers who inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class. Also, page developers can provide custom handlers for the events associated with these methods. For example, in the case of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> event, a page developer could add an `OnWebPartAdded` attribute to the `<asp:webpartmanager>` element in the markup of a Web page, and then assign a custom method name to the attribute to provide custom handling for the event. The attribute corresponds to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> method, and this basic pattern of event handling works for most Web Parts events and their associated methods.  \n  \n In addition, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has methods particular to the task of managing <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (and server or user controls used as <xref:System.Web.UI.WebControls.WebParts.WebPart> controls). These methods include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.  \n  \n Another set of methods is specialized for connections. This includes methods such as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.  \n  \n Finally, some <xref:System.Web.UI.WebControls.WebParts.WebPartManager> methods focus on personalization functionality. These include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.  \n  \n For more information on other <xref:System.Web.UI.WebControls.WebParts.WebPartManager> methods that are accessible through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> property, see the documentation for the <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> class."
  example:
  - "The following code example demonstrates both declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The user control has a drop-down list control that shows the possible display modes on a page, given the Web Parts controls that are present on the page. In the Web page for this code example, this user control is declared just below the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> element in the page's markup, and there is a `Register` directive near the top of the Web page to register the control. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/displaymodemenucs.ascx#6)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/DisplayModeMenuVB.ascx#6)]  -->  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. The page also contains some inline code that handles connection-related events for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control; you can see the effect of this code as you connect and disconnect controls.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  -->  \n  \n The third part of the example is the source code for the controls. Note that there is an interface named `IZipCode`, and this interface is implemented in the `ZipCodeWebPart` class. This class has a special callback method named `ProvideIZipCode` that serves as a provider. The other type, named `WeatherWebPart`, is also implemented with a special method named `GetIZipCode`, which enables the control to act as a consumer of the other control.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you have compiled the source into an assembly, and the `Register` directive in the Web page references the assembly name. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n [!code-csharp[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/ZipCodeComponent.cs#2)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/ZipCodeComponent.vb#2)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection UI appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and then click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. You can enter a ZIP Code, and the consumer control will be updated with the value you enter. Because the `ZipCode` property was marked with the `Personalizable` attribute in the source code, this property value will persist across browser sessions, thus saving the value entered by a user. A more sophisticated consumer control could take the ZIP code information, look up weather information based on the code, and display it to a user."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  extensionMethods:
  - System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)
  - System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)
  - System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)
  - System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer)
  - System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer)
  - System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable)
  - System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)
  - System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)
  - System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type)
  - System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)
  attributes:
  - type: System.ComponentModel.BindableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: WebPartManager.WebPartManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> class.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.%23ctor%2A> constructor initializes several important variables used by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. One assignment that directly impacts all Web Parts pages is the fact that the default page display mode is set to browse mode (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>).
  syntax:
    content: public WebPartManager ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  id: ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: WebPartManager.ActivateConnections()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Makes active all connections on a Web page that are currently inactive.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> method is called on each request to a page to activate existing connections between <xref:System.Web.UI.WebControls.WebParts.WebPart> and other server controls residing in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones. In some cases, for instance if there is a conflict in the connections being activated, this method in turn calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> method to end the problematic connection. During the disconnection process the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event is raised. Normally developers can cancel this event, but in the case where this is a conflict among the connections it cannot be cancelled, because the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control needs to resolve the conflict in order to finish the process of activating connections. For details, see <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event.
  syntax:
    content: protected virtual void ActivateConnections ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AddWebPart(WebPart, WebPartZoneBase, Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart, WebPartZoneBase, Int32)
  fullName: WebPartManager.AddWebPart(WebPart, WebPartZoneBase, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Provides the standard programmatic method for adding <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls to a Web page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> method is used both to add new dynamic <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to a page, and to reopen static or dynamic controls that have previously been closed on a page. When the method is called to add a new control, it actually creates a copy of the control referenced in the `webPart` parameter. A new ID is generated for the copy of the control, so developers should reference the <xref:System.Web.UI.WebControls.WebParts.WebPart> control returned from the method to get the new ID value. When the method is called to reopen a previously closed control, it returns a direct reference to the control referenced by the `webPart` parameter.  \n  \n> [!IMPORTANT]\n>  You should always use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> method, rather than the <xref:System.Web.UI.ControlCollection.Add%2A> method of the collection of controls referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName> property, to add <xref:System.Web.UI.WebControls.WebParts.WebPart> controls programmatically to the page, because using the <xref:System.Web.UI.ControlCollection.Add%2A> method throws an exception. To add a control that is not a <xref:System.Web.UI.WebControls.WebParts.WebPart> control (in other words, a server control that will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control at run time), you should first call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> method to create the control, and then call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> method to add the control. For a demonstration of this approach, see the Example section."
  example:
  - "The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> method to add a server control programmatically to a page. The page markup contains an empty `<asp:webpartzone>` element, and an `<asp:webpartmanager>` element. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object, calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> method.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  -->"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> (or server or user control) to be added to a Web page or opened on a page.
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: The <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> that <code>webPart</code> is being added to.
    - id: zoneIndex
      type: System.Int32
      description: An integer that represents the ordinal position that <code>webPart</code> occupies in <code>zone</code>, relative to other controls in <code>zone</code>.
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control that was added to the page.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is `null`.  \n  \n \\- or -  \n  \n <code>zone</code> is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>zone</code> is not registered in the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control's collection of zones.  \n  \n \\- or -  \n  \n <code>webPart</code> is already in <code>zone</code>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value of <code>zoneIndex</code> is less than zero.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  id: AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: WebPartManager.AuthorizeWebPart
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs when the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*"></xref> method is called to determine whether a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server control can be added to a page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event occurs whenever a <xref:System.Web.UI.WebControls.WebParts.WebPart> control is being added to a page. There are a number of common scenarios where a control can be added to a page. For a full description of these, see the Remarks section for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> method. When a control is added, it must be checked to see whether its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property has been set and, if so, whether the control is authorized to be added to the page.  \n  \n Developers can create event handlers for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, to provide filtering for controls. If a control's <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property value does not meet the criteria in the event handler code, the control is not added to the page."
  example:
  - "The following code example demonstrates how to set a custom event handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, which automatically overrides the default <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method.  \n  \n The code in the `mgr1_AuthorizeWebPart` method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `user` and, if so, returns `true`, which means that they will be authorized and added to the page. This assumes the default approach is to allow users to view controls with a page in user personalization scope. Notice, however, that in the example one of the controls has its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property value set to `admin`. Developers might place this filter on a specialized control that was designed for only administrative users to see. This control will fail the authorization check during the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, and will not be displayed. Note that controls that do not have the property set are displayed as well; they are assumed not to be part of a filtering scenario because their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties are not set.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  -->"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  id: AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: WebPartManager.AvailableTransformers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a collection of <xref href="System.Web.UI.WebControls.WebParts.WebPartTransformer"></xref> objects that are available for use in creating Web Parts connections between server controls.
  remarks: This property uses the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> method to create the collection. By default, it reads the available transformers from the application configuration file.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: A <xref href="System.Web.UI.WebControls.WebParts.TransformerTypeCollection"></xref> that contains a set of <xref href="System.Web.UI.WebControls.WebParts.WebPartTransformer"></xref> objects.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: WebPartManager.BeginWebPartConnecting(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Starts the process of connecting two <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> method exists so that the process of forming connections between controls can be done in distinct stages, giving developers more control over the connection process. The method performs a set of initial checks to ensure that `webPart` is in a state where a connection can legitimately be formed. If `webPart` passes all the checks, it is then set as the currently selected control (see the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> property), and the connecting process can continue.
  syntax:
    content: public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The control for which the connection is being formed.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>webPart</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current display mode on the page is not <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode"></xref>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.Controls\"></xref> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart\"></xref> control."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: WebPartManager.BeginWebPartEditing(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Starts the process of editing a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> method exists so that the process of editing controls can be done in distinct stages, giving developers more control over the process. The method performs a set of initial checks to ensure that `webPart` is in a state where it can be edited. If `webPart` passes all the checks, it is then set as the currently selected control (see the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> property), and the editing process can continue.
  syntax:
    content: public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The control to be edited.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>webPart</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current display mode on the page is not <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode"></xref>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.Controls\"></xref> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart\"></xref> control."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  commentId: F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  id: BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: WebPartManager.BrowseDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Represents the default display mode for pages that contain Web Parts controls. This field is read-only.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> field references a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object that is created and contained by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Because this is a static object, you can refer to it directly through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class without needing an instance of the control.  \n  \n When a page that contains Web Parts controls first loads, it is in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (browse mode) by default. When users are simply browsing as they would on a normal Web page, the page remains in browse mode. If users want to personalize a page's layout, controls, appearance, or behavior, they must switch the page into one of the specialized display modes available through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property."
  example:
  - "The following code example demonstrates how to work with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> field programmatically. The code populates a drop-down list with the supported display modes, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/CS/wpmgrBrowseDisplayModecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/VB/wpmgrBrowseDisplayModevb.aspx#1)]  -->  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page that indicates you are in browse mode. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now hidden."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
  fullName: WebPartManager.CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Checks the <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls that will be participating in a connection to determine whether they are capable of being connected, when the consumer and provider controls have compatible interfaces and a <xref href="System.Web.UI.WebControls.WebParts.WebPartTransformer"></xref> object is not needed.
  remarks: "This method is used to connect `provider` and `consumer` when both controls have compatible connection point types, so that a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object is not needed. You might want to use this method to verify that two controls can be connected before calling <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> to create a programmatic connection.  \n  \n This overload uses the same implementation as the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> method overload, with the only exception being that this overload does not require a transformer."
  example:
  - "The following code example demonstrates how to use this method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, an `<asp:webpartmanager>` element, and some event-handling code that creates a connection using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks whether the connection can be made and, if so, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  -->  \n  \n The third part of the example is the source code for the controls. It contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, one acting as a provider, and the other as a consumer. Because they have compatible connection points (both of them recognize the `IZipCode` interface), a transformer is not needed to make the connection. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n [!code-csharp[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/ZipCodeComponent.cs#2)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/ZipCodeComponent.vb#2)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method."
  syntax:
    content: public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The control that provides data to <code>consumer</code> when the controls are connected.
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: A <xref href="System.Web.UI.WebControls.WebParts.ConnectionPoint"></xref> that enables <code>provider</code> to participate in a connection.
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The control that receives data from <code>provider</code> when the controls are connected.
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: A <xref href="System.Web.UI.WebControls.WebParts.ConnectionPoint"></xref> that acts as a callback method so that <code>consumer</code> can participate in a connection.
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether <code>provider</code> and <code>consumer</code> can be connected.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
  fullName: WebPartManager.CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Checks the <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls that will be participating in a connection to determine whether they are capable of being connected, and uses a <xref href="System.Web.UI.WebControls.WebParts.WebPartTransformer"></xref> object to create the connection between an incompatible consumer and provider.
  remarks: "This method is used to connect `provider` and `consumer` when both controls have incompatible connection point types, so that a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object is required. You might want to use this method to verify that two controls can be connected before calling <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> to create a programmatic connection.  \n  \n This overload uses the same implementation as the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29> method overload, with the only exception being that this overload requires a transformer."
  syntax:
    content: public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The control that provides data to <code>consumer</code> when the controls are connected.
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: A <xref href="System.Web.UI.WebControls.WebParts.ConnectionPoint"></xref> that acts as a callback method so that <code>provider</code> can participate in a connection.
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The control that receives data from <code>provider</code> when the controls are connected.
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: A <xref href="System.Web.UI.WebControls.WebParts.ConnectionPoint"></xref> that acts as a callback method so that <code>consumer</code> can participate in a connection.
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartTransformer"></xref> that enables an incompatible <code>provider</code> and <code>consumer</code> to connect.
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether <code>provider</code> and <code>consumer</code> can form a connection.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  commentId: F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  id: CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: WebPartManager.CatalogDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Represents the display mode used for adding server controls from a catalog of controls to a Web page. This field is read-only.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> field references a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object that is created and contained by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Because this is a static object, you can refer to it directly through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class without needing an instance of the control.  \n  \n When users want to add controls to a page, if a catalog of server controls is available, they can switch the page to <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> (catalog mode), and the catalog user interface (UI) appears. The UI for a Web Parts catalog is provided by a <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone control. Developers add this zone to the page at design time, and then add server controls to the zone, so that users will be able to add those controls to their pages at run time. After the developer has added these controls, catalog mode becomes a supported display mode on the page because the necessary controls are there to enable catalog mode.  \n  \n When a user switches a page to catalog mode, the zone and all the server controls that were added to it become visible, and the user can select controls from the catalog to add to the page, or remove controls from the page. After the controls have been added to the page, they appear in normal browse mode and the page is updated."
  example:
  - "The following code example demonstrates how to work with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and catalog. The catalog mode is available because of the `<asp:CatalogZone>` element and its child elements in the Web page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/CS/wpmgrCatalogDisplayModecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/VB/wpmgrCatalogDisplayModevb.aspx#1)]  -->  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to catalog mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. You can select the control in the catalog and add it to either of the two zones on the page."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  id: CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: WebPartManager.CheckRenderClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Checks the capabilities of the browser making the request, and the value of the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript"></xref> property, to determine whether to render client script.
  syntax:
    content: protected virtual bool CheckRenderClientScript ();
    parameters: []
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether to render client script.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  id: CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: WebPartManager.CloseProviderWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets or sets a warning that is displayed when a user closes a control that is acting as a provider to other controls in a connection.
  remarks: "When a user closes a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, normally no message is displayed. For more information about what it means to close a control, see the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> method.  \n  \n However, when a control is connected to another control and is acting as a provider of data to the other control, a default warning message is displayed when a user attempts to close the control. The message tells users that a provider control is about to close, which means that controls connected to this provider as consumers will no longer have any data to consume. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> property enables developers to customize the warning message that is displayed to the user.  \n  \n If a page developer assigns an empty or null string value to this property, no warning message box will be shown when a user closes a <xref:System.Web.UI.WebControls.WebParts.WebPart> control that is a provider."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> property to display a custom warning to users.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to assign a custom warning message to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> property in declarative markup in the `<asp:webpartmanager>` element.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/CS/webpartmanagerConnectionCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/VB/webpartmanagerConnectionVB.aspx#1)]  -->  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Finally, click the verbs menu for the **ZIP Code** control (which is the provider control in this case) and select **Close**. The custom message you assigned to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A> property is displayed."
  syntax:
    content: public virtual string CloseProviderWarning { get; set; }
    return:
      type: System.String
      description: A string that contains the warning message. The default is a culture-specific message supplied by the .NET Framework.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: WebPartManager.CloseWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Closes a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control in such a way that it is not rendered on a Web page, but can be reopened.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> method removes a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control so that it is not rendered on the Web page that originally contained it. The closed control is added to a <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> object, which maintains a reference to the closed control and makes it possible for the control to be restored to the page. A closed <xref:System.Web.UI.WebControls.WebParts.WebPart> control still appears in the collection referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> property.  \n  \n Closing a control is different from deleting it. Closed controls are still available to be restored to a page, but a deleted control instance is permanently removed and can never be restored. Regardless of whether a <xref:System.Web.UI.WebControls.WebParts.WebPart> or server control is static (declared in the markup of a page) or dynamic (added to the page programmatically or by a user from a Web Parts catalog), it can be closed and reopened on a page.  \n  \n Typically, users can close a <xref:System.Web.UI.WebControls.WebParts.WebPart> control by clicking its verbs menu and selecting the close verb. A control can also be closed by directly calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> method and passing it a reference to `webPart`.  \n  \n On a page where <xref:System.Web.UI.WebControls.WebParts.WebPart> controls have been closed, if a developer declares an `<asp:catalogzone>` element, and within it adds an `<asp:pagecatalogpart>` element, it provides a simple user interface (UI) for users to restore closed controls to the page at run time. Users can switch the page into catalog display mode, and the closed controls will appear within the page catalog. Users can select closed controls and add them back to the page at whatever position they desire, and then the selected controls are restored to the page and rendered as normal.  \n  \n When the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> method is called, it raises several events: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> (if there are multiple controls), and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> (if there are connected controls). Normally developers can cancel these events, but in certain cases it is not possible to cancel them. For details, see the documentation for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> events."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n [!code-csharp[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/textdisplaywebpart.cs#3)]\n [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/textdisplaywebpart.vb#3)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with an <`asp:pagecatalogpart>` element declared within it. This is what will contain the closed <xref:System.Web.UI.WebControls.WebParts.WebPart> control and enable users to add it back to the page. The `Button1_Click` method directly calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> method to close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, although a user can also close the control through the verbs menu.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/closeWebPartCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/closeWebPartVB.aspx#1)]  -->  \n  \n After you load the page in a browser, close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control by clicking the verbs menu (the arrow symbol) in the header of the control, and clicking **Close**. Now change the page to catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. The page catalog appears with the closed control. Select the check box next to the closed control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. The control is restored to the page. Now close it again, this time by clicking the **Close WebPart** button."
  syntax:
    content: public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server control that is being closed in a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref>.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>webPart</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not in the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.Controls\"></xref> collection.  \n  \n \\- or -  \n  \n <code>webPart</code> is a shared control and has already been closed by another user."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  commentId: F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  id: ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: WebPartManager.ConnectDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Represents the display mode used for displaying a special user interface (UI) for users to manage connections between <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls. This field is read-only.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> field references a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object that is created and contained by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Because this is a static object, you can refer to it directly through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class without needing an instance of the control.  \n  \n When users want to manage connections between <xref:System.Web.UI.WebControls.WebParts.WebPart> controls on a Web page, if a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> zone has been declared on the page, they can switch the page into the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> mode. The connect display mode displays a special UI for managing connections, which includes the ability to connect or disconnect controls, and to edit the details of existing connections.  \n  \n If you want to provide users with the ability to manage connections with the UI provided by the Web Parts control set, you must declare an `<asp:connectionszone>` element in the markup of a page. Unlike the elements for the other types of <xref:System.Web.UI.WebControls.WebParts.WebZone> zones, you do not need to add any other tags within this element; you simply declare the element by itself."
  example:
  - "The following code example demonstrates the usage of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> mode.  \n  \n The code example has three parts:  \n  \n-   A source file that contains an interface and custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection.  \n  \n-   A Web page that provides a connection UI and demonstrates working with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> mode.  \n  \n-   An explanation of how to run the example.  \n  \n The first part of the code example is a source file that contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that are designed so they can be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compilation approach. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n [!code-csharp[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ZipCodeComponent.cs#2)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ZipCodeComponent.vb#2)]  \n  \n The second part of the example is a Web page that hosts the custom controls. Within the server `<script>` tags on the page are several methods that populate a drop-down list with the display modes available on the page. A user can select these from the drop-down list to change the page's display mode. One of the available display modes is connect display mode, because an `<asp:connectionszone>` element is declared in the page's markup. Notice that this element does not contain any other child elements; it exists only to enable the connection management UI for users.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> mode appears in this example in two places. First, in the `Page_Init` method, the connect display mode is added to the drop-down list of display modes, as the code loops through the collection referenced in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property. Second, the `Page_PreRender` method checks the current display mode on the page, and if the current mode is <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>, a message is displayed in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ConnectDisplayModecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ConnectDisplayModeVB.aspx#1)]  -->  \n  \n After you load the page in a browser, click the drop-down list and select **Connect** to switch the page into connect display mode. Notice that a message appears, telling you that the page is in connect display mode. Now click the verbs menu (an arrow symbol) in the title bar of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and then click **Connect** in the verbs menu. After the connection UI is displayed, click the link to create a connection. Use the drop-down list within the connection UI that appears, select the other control that will participate in the connection, and click the **Connect** button. The connection is established. Click the **Close** button, and then use the drop-down list at the top of the page to return the page to browse display mode."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  id: Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: WebPartManager.Connections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a reference to the collection of all current connections on a Web page.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> property provides a way to access the current set of connections on a page. The collection itself is read-only, and developers who want to manipulate a specific connection from the collection should use <xref:System.Web.UI.WebControls.WebParts.WebPartManager> methods such as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.
  example:
  - "The following code example demonstrates declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> property programmatically to get the count of current connections on a page. Note that in the `<script>` tag section, the code to handle two events for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> property to obtain the count.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  -->  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) displays, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Note that a label now displays the number of connections and the number of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. If you now return to connect mode and disconnect the two controls, when you return to browse mode, the label's content should be updated and there should be no connections."
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartConnectionCollection"></xref> that contains a set of <xref href="System.Web.UI.WebControls.WebParts.WebPartConnection"></xref> objects.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  id: ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: WebPartManager.ConnectionsActivated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs after all the current Web Parts connections on a page are not only connected, but have also begun actively sharing data between the consumer and provider controls involved in each connection.
  remarks: "In the life cycle of connections, this event occurs after a page completes its loading process. It also occurs after the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> event, which indicates only that the <xref:System.Web.UI.WebControls.WebParts.WebPart> or server controls involved in a specific connection have successfully connected. In a case where there are multiple connections on a page, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> method indicates that all the valid Web Parts connections on a page are now active and able to share data. Knowing that all connections are active, developers can carry out any number of tasks, including notifying users of the status of all the connections, notifying consumer controls to process and display data from their providers, and so on.  \n  \n This event is associated with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A> method, which raises the event and allows developers to create custom handlers for the event.  \n  \n Page developers can create a custom handler for the event by adding the `OnConnectionsActivated` attribute to the `<asp:webpartmanager>` element in the page, and then assigning a custom method name to the attribute."
  syntax:
    content: public event EventHandler ConnectionsActivated;
    return:
      type: System.EventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  id: ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: WebPartManager.ConnectionsActivating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs during the process of activating all the established Web Parts connections on a Web page.
  remarks: "In the life cycle of connections, this event occurs as a page is completing its loading process, just before the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> method is called. It is different from the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> event, which involves a particular connection between <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server controls. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> event occurs when all the possible connections on a page have been connected and are about to be activated.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> event is associated with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> method, which raises the event. Control developers who want to extend the type of connections that can be added to a page could override the protected <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> method and activate additional types of connections.  \n  \n Page developers can create a custom handler for the event by adding the `OnConnectionsActivating` attribute to the `<asp:webpartmanager>` element in the page, and then assigning a custom method name to the attribute."
  syntax:
    content: public event EventHandler ConnectionsActivating;
    return:
      type: System.EventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
  fullName: WebPartManager.ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Creates a connection between two <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref> controls using only the references to the controls and their specified <xref href="System.Web.UI.WebControls.WebParts.ConnectionPoint"></xref> objects.
  remarks: "This overload is used to connect controls when their connection points are sufficiently compatible that they can connect without using a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object. When this overload of the method is called, it simply passes the call to the other overloaded version of the method, and passes `null` for the parameter that requires a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.  \n  \n When you attempt to connect two controls programmatically, you can use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method in a conditional check to determine whether the controls can be directly connected."
  example:
  - "The following code example demonstrates how to use this method to create a connection programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. From that example, you will need the source code for the user control that allows you to change display modes on the page, and the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The code for the Web page that hosts the two controls follows. The page uses `Register` directives at the top to declare the user control and the custom controls. The custom controls are then referenced declaratively within an `<asp:webpartzone>` element. The code that handles the `Button1_Click` method creates a connection between the controls by using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/CS/wpmgrConnectWebPartsCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/VB/wpmgrConnectWebPartsVB.aspx#1)]  -->  \n  \n After you load the page in a browser, click the **Connect WebPart Controls** button to form the connection. You can then enter some data in the text box, and click the **Enter 5-digit ZIP Code** button to demonstrate that the controls are connected, and that data entered in the first control is updated in the second."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control that has the role of furnishing data to another connected control.
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: A method that serves as a callback method for the connection. As implemented in the Web Parts control set, this is a public method in <code>provider</code> that is marked with a `ConnectionProvider` metadata attribute.
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control that has the role of receiving data from <code>provider</code>, and then processing or displaying it.
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: A method that connects with <code>providerConnectionPoint</code> to receive the data for the connection. As implemented in the Web Parts control set, this is a public method in <code>consumer</code> that is marked with a `ConnectionConsumer` metadata attribute.
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartConnection"></xref> that contains the various information about the provider and the consumer needed for a connection.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control's collection of dynamic collections is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
  fullName: WebPartManager.ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Creates a connection between two <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref> controls using the references to the controls, their specified <xref href="System.Web.UI.WebControls.WebParts.ConnectionPoint"></xref> objects, and a <xref href="System.Web.UI.WebControls.WebParts.WebPartTransformer"></xref> object.
  remarks: This overload is used to connect controls when their connection points are incompatible. The incompatibility occurs when `consumer` implements a different interface than `provider` as its connection point. The transformer converts the data into a type that can be understood by `consumer`.
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> that has the role of furnishing data to another connected control.
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: A public method in <code>provider</code> that is marked with a `ConnectionProvider` metadata attribute, and serves as a callback method for the connection.
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> that has the role of receiving data from <code>provider</code> or <code>transformer</code>, and then processing or displaying it.
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: A public method in <code>consumer</code> that is marked with a `ConnectionConsumer` metadata attribute, and connects with <code>providerConnectionPoint</code> to receive the data for the connection.
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartTransformer"></xref> that enables a connection between two controls by converting the data from <code>provider</code> to a format that <code>consumer</code> can process.
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartConnection"></xref> that contains the information about the provider, consumer, and transformer needed for a connection.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Connections have already been activated in <xref href="System.Web.UI.Control.PreRender"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  id: Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: WebPartManager.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets the collection of all <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref>, server, or user controls that are contained in <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zones on a Web page and are managed by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> property does not reference the other controls that are referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, such as the various zone controls, <xref:System.Web.UI.WebControls.WebParts.EditorPart> or <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, and others.  \n  \n This property is used by the Web Parts control set, and in most development situations it is not intended to be called from your code. For this reason, although the property is public, it is hidden from IntelliSense. Developers who want to access the collection of <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server controls managed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control should use its <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> property."
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: A <xref href="System.Web.UI.ControlCollection"></xref> that contains all controls managed by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: WebPartManager.CopyWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Used by the Web Parts control set to create a copy of a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server control for the purpose of adding the control to a Web page.
  remarks: "You cannot call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> method directly from your code. This method is called internally by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control as part of the process of adding a new dynamic <xref:System.Web.UI.WebControls.WebParts.WebPart> or server control to a page. A dynamic control is added to a page programmatically or through the Web Parts user interface (UI), for example by a user adding a control from a catalog of controls, as opposed to a static control, which is declared directly in the markup of a page.  \n  \n> [!NOTE]\n>  The method can be overridden in a derived class if developers want to enable the method to handle additional control copying scenarios. For details, see the Notes to Inheritors section.  \n  \n When a new dynamic control is added, if it is a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> method returns a new instance of the control. If the control being added is some other type of server control (such as a user control, a custom control, or an ASP.NET control), the control will already have been wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object by the Web Parts control set. When the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> method encounters a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control, it returns a new instance of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control with a new instance of the child control wrapped within it.  \n  \n When the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> method creates a new copy of a control to return, it also resets the values of all the properties to their default values. Note that, if you want to preserve the values of the personalizable properties and have them copied to the new control instance, you should call the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> method as well. The final step carried out by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A> method is to call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A> method to obtain a new ID for the control.  \n  \n> [!NOTE]\n>  Because the method obtains a new ID for a copied control, you should not rely on referencing a dynamic control that is added to a page by its original ID. Instead, you should reference the new instance of the control returned by the method."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server control to be copied.
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> to be added to a page.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  id: CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: WebPartManager.CreateAvailableTransformers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Creates a set of transformers specified in a Web site's configuration file and adds them to the collection of transformers referenced by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers"></xref> property.
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: The collection of transformers specified in a Web site's configuration file.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: WebPartManager.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Returns the collection of all controls that are managed by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control on a Web page. This class cannot be inherited.
  syntax:
    content: protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: A <xref href="System.Web.UI.ControlCollection"></xref> consisting of all the various Web Parts controls managed by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  id: CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: WebPartManager.CreateDisplayModes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Creates the set of all possible display modes for a Web Parts application.
  remarks: "This method creates the list of all possible display modes, not just the display modes supported on a particular page. For more information about the supported display modes, see the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property.  \n  \n By default, the Web Parts control set creates the following set of display modes to be used on Web Parts pages:  \n  \n-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>  \n  \n-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>  \n  \n-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>  \n  \n-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>  \n  \n-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>  \n  \n Developers can create custom display modes, either with or without accompanying custom zones that derive from the <xref:System.Web.UI.WebControls.WebParts.WebZone> or <xref:System.Web.UI.WebControls.WebParts.ToolZone> classes. To create a custom display mode, you must inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> class, and to add your display mode as a supported mode on a page, you must inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class and override the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> method.  \n  \n When you add display modes by using the <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A> method, you should add them in the order that you want them to appear in any user interface (UI) controls (such as a <xref:System.Web.UI.WebControls.ListBox> control) that provide to users the possible display modes on a page."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> method.  \n  \n The code example has five parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that hosts the other controls.  \n  \n-   A user control that resides in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone on the Web page, and enables you to enter and display text in a label.  \n  \n-   A source code file that contains two controls. One is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and the other is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object to add to the page's default display modes.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n The second part of the example is the Web page. It contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controls, both user controls, and the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Notice the `Register` directives at the top of the page to reference the user controls and namespace for the compiled controls.  \n  \n <!-- TODO: review snippet reference [!code-csharp[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/createDisplayModeCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/createDisplayModeVB.aspx#1)]  -->  \n  \n The third part of the example is the user control for entering and displaying text. It uses a <xref:System.Web.UI.WebControls.MultiView> control to create multiple views of the UI. One view appears with the `Button1` button, the other without. Notice that in the overridden `OnPreRender` method, the code checks to see whether the page is currently in the custom display mode and, if so, displays the first view of the user control, which includes the button. If the page is not in the custom display mode, for example if the page is in browse or design mode, the button is hidden.  \n  \n <!-- TODO: review snippet reference [!code-csharp[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/TextDisplaycs.ascx#2)]  -->\n <!-- TODO: review snippet reference [!code-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/TextDisplayvb.ascx#2)]  -->  \n  \n The fourth part of the example is the source file for the two custom classes. Notice that the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> method, and that it first calls the base method to add all the default display modes, and then adds the custom display mode. The custom display mode class, `InLineEditDisplayMode`, simply inherits from <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, sets the name of the display mode in the constructor, and overrides a number of the base properties to establish the characteristics of the custom display.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n [!code-csharp[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/CustomDisplayMode.cs#3)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/CustomDisplayMode.vb#3)]  \n  \n To run the code example, load the page in a browser. Notice that the page is currently in browse mode, and no button is visible. Using the **Display Mode** drop-down list control, change the page to **Inline Edit Display** mode, and notice that now the `Button1` button is visible in the lower user control. Add some text, and click the button to update the control. Notice that the page display is returned to browse mode, the text you entered is now displayed, and the button is once again hidden because the page is no longer in the custom display mode."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection"></xref> that contains all the display modes that are supported.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  id: CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: WebPartManager.CreateDynamicConnectionID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a unique value to serve as an ID for a dynamic connection.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> method generates a GUID value and converts it to a string to serve as the unique ID for a connection. The method is called each time a dynamic connection is created.
  syntax:
    content: protected virtual string CreateDynamicConnectionID ();
    parameters: []
    return:
      type: System.String
      description: A string that contains a unique ID for a connection.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  id: CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: WebPartManager.CreateDynamicWebPartID(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Generates a unique ID for a dynamic <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  remarks: "When <xref:System.Web.UI.WebControls.WebParts.WebPart> controls are added to a Web page, they can be static (which means the control is declared in the page markup) or dynamic (which means they are added programmatically). In any scenario where the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is creating new dynamic controls to add to the page, it calls this method to generate a unique ID.  \n  \n The method is virtual so that developers can override it if they want to provide a custom implementation for generating the ID."
  syntax:
    content: protected virtual string CreateDynamicWebPartID (Type webPartType);
    parameters:
    - id: webPartType
      type: System.Type
      description: The <xref href="System.Type"></xref> of the control for which an ID is being generated.
    return:
      type: System.String
      description: A string that contains the unique ID for a control.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>webPartType</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  id: CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateErrorWebPart(String, String, String, String, String)
  nameWithType: WebPartManager.CreateErrorWebPart(String, String, String, String, String)
  fullName: WebPartManager.CreateErrorWebPart(String, String, String, String, String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Creates a special control that is inserted into a page and displayed for end users, when an attempt to load or create a dynamic <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control fails for some reason.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> method is called when the Web Parts control set attempts to load or create an instance of a dynamic <xref:System.Web.UI.WebControls.WebParts.WebPart> or server control, and it fails for some reason. The method creates an <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> object, assigns an error message to it, and returns it. The <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> control is inserted in place of the control that failed, and its error message is displayed on the page.  \n  \n You cannot call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> method directly from your code. However, you can inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class and extend the method. For details, see the Notes for Inheritors section.  \n  \n End users can work with an <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> control in a page much like they would a normal <xref:System.Web.UI.WebControls.WebParts.WebPart> control. To remove the error message, they can close the control by clicking the close verb, at which point the control will be added to a <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> object, like any other closed control. If an end user deletes an <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> control, the server control that failed to load will also be deleted from the page."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);
    parameters:
    - id: originalID
      type: System.String
      description: A string that is the ID of the failing control. If a <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref> is involved in the failure, the ID is the ID of its child server control.
    - id: originalTypeName
      type: System.String
      description: A string that is the name of the <xref href="System.Type"></xref> of the failed control. If a <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref> is involved in the failure, the type name is the type of its child server control.
    - id: originalPath
      type: System.String
      description: A string that contains the path to a user control, if a <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref> that contains a child user control is involved in the failure.
    - id: genericWebPartID
      type: System.String
      description: A string that returns the ID of a <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref>, if that type of control was involved in the failure to load or create a control.
    - id: errorMessage
      type: System.String
      description: A string that contains the error message to display on the page.
    return:
      type: System.Web.UI.WebControls.WebParts.ErrorWebPart
      description: An <xref href="System.Web.UI.WebControls.WebParts.ErrorWebPart"></xref> that is inserted into a page in place of a control that failed to be loaded or created.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  id: CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: WebPartManager.CreatePersonalization()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Returns a personalization object to contain a user's personalization data for the current Web page.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A> method returns an object to contain and manage the user's personalization settings for the current page. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control manages this object.
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartPersonalization"></xref> to contain a user's personalization data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  id: CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: WebPartManager.CreateWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Wraps a server control that is not a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control with a <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref> object, so that the control can have Web Parts functionality.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> method is the main mechanism for enabling server controls that are not <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to take on the same functionality as a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and thus to participate fully in Web Parts applications. By using this method, developers vastly expand the number of server controls that they can use in a Web Parts application, because virtually any type of server control--standard ASP.NET controls, user controls, and custom controls--can be used.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control also uses this method in two other scenarios to wrap server controls with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. When users add server controls to a page by using the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, if the imported control is not a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> method is called. Also, when server controls are declared in persistence format within a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone on a Web page, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> method is called for any controls that are not <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n When you add a server control to a zone programmatically, a typical approach is to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> method to wrap the control with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object, and then call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> method to add the control to the collection of all <xref:System.Web.UI.WebControls.WebParts.WebPart> controls on the page, which is referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> property."
  example:
  - "The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> method. In the `Button2_Click method`, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> method is called to wrap a <xref:System.Web.UI.WebControls.Calendar> control with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object before adding it to the zone.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  -->"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: A server control that is not a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref> that wraps <code>control</code> and enables it to function as a true <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  id: DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: WebPartManager.DeleteWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets or sets a custom warning message displayed to end users when they delete a control.
  remarks: "When a user deletes a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, normally a default warning message is displayed. It warns the user that when this instance of a control is deleted, the deletion is permanent. The page developer might provide users with a way to add a new instance of the control to the page (such as through a catalog of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, or through some programmatic means), but the current instance of a control that is deleted is permanently removed. The dialog box that displays the warning includes a button for the user to cancel the deletion, if desired.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> property enables developers to set the warning message that is displayed to the user.  \n  \n If a page developer assigns an empty string (\"\") value to this property, no warning message dialog box will be shown when a user deletes a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n> [!NOTE]\n>  The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> property is not displayed in the case of static <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and server controls. Static controls are server controls that are declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone in the markup of a Web page. Because such controls are static, they cannot be deleted, so the delete warning message is never displayed in that case. Static controls can be closed by a user, but a closed control is added to the page catalog, from which it can be added back to the page by a user, whereas a deleted control can never be recovered."
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> property declaratively and programmatically.  \n  \n There are four parts to the code example:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n [!code-csharp[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/textdisplaywebpart.cs#3)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/textdisplaywebpart.vb#3)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control declared in the zone, so that a user can add it to the page at run time. Note that only dynamic controls (controls that are added to a page programmatically or from a catalog like this one) can be deleted from a page. Static controls (controls that are declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone in the markup of a page) can be closed, but never deleted. The `<asp:webpartmanager>` element declares a custom value for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> property by using the `DeleteWarning` attribute. The `Button1_Click` method assigns another custom value to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> property.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/deleteWarningCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/deleteWarningVB.aspx#1)]  -->  \n  \n After you load the page in a browser, you need to add the <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page. Using the **Display Mode** drop-down list control, select catalog mode. When the catalog appears, select the check box next to the custom control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. Now that the control is visible, you can delete it. Using the **Display Mode** control again, switch the page into design mode (you cannot delete controls while the page is in browse mode). Click the verbs menu (the arrow symbol) in the header of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and select **Delete**. The warning that you set on the `DeleteWarning` attribute appears. Click **Cancel**. Now click the button labeled **Change Delete Warning**, which changes the property value programmatically. From the verbs menu on the control, select **Delete** again, and notice that this time the other warning message appears."
  syntax:
    content: public virtual string DeleteWarning { get; set; }
    return:
      type: System.String
      description: A string that contains the text of the warning message. The default value is a localized warning message.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: WebPartManager.DeleteWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Permanently removes a dynamic instance of a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control from a Web page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> method permanently removes the control represented by the `webPart` parameter from a page. Unlike a closed control, which is added to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control and can be added back to the page, a deleted control instance can never be added back to the page.  \n  \n> [!NOTE]\n>  As implemented by the Web Parts control set, the ability for users to delete a dynamic <xref:System.Web.UI.WebControls.WebParts.WebPart> control depends on the user and the personalization scope in which the control was added to a page. If the control is added when the page is in shared scope (by a user who has permissions), then the control cannot be deleted by individual users when the page is in user scope.  \n  \n Only dynamic controls can be deleted. Dynamic controls are added to a page programmatically or by users adding controls from a catalog. Static controls are added to a page declaratively in the markup or persistence format. Because the declarative tags are permanently present in the markup, static controls can never be deleted, but they can be closed and reopened."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> method. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Because the control is added programmatically, it is a dynamic control, and therefore it can be deleted. When a user clicks the **Delete Calendar** button, the code ensures that the control exists, and then deletes it by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> method.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  -->"
  syntax:
    content: public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The server control to be deleted.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  commentId: F:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  id: DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: WebPartManager.DesignDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Represents the display mode used for changing the layout of Web pages that contain Web Parts controls. This field is read-only.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> field references a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object that is created and contained by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Because this is a static object, you can refer to it directly through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class without needing an instance of the control.  \n  \n When a page that contains Web Parts controls first loads, it is in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (browse mode) by default. When users want to change the layout of the page by moving controls to different zones or within the current zones, they must first switch the page to <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> (design mode). In design mode, the user interface (UI) for the various zones appears, and users can then drag controls to change the layout."
  example:
  - "The following code example demonstrates how to work with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/CS/wpmgrDesignDisplayModecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/VB/wpmgrDesignDisplayModevb.aspx#1)]  -->  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: WebPartManager.DisconnectWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Removes a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server control that is being closed or deleted from any connections it is participating in.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> method is called internally by the Web Parts control set when a control is either closed on a page or deleted from a page. In such a scenario, the method is called to remove the control from any connections where it is involved as a consumer or provider. If the control is removed from any connection, this method also calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method to end any connections in which `webPart` was involved.  \n  \n When the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> method is called, it raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event. Normally this event can be cancelled, but in two cases it cannot be cancelled. One case occurs during requests to the page, when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> method is called. If there is a conflict among existing connections, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> method will be invoked to close one of the conflicting connections, and in this instance the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event cannot be cancelled, because the conflict must be resolved.  \n  \n The other case occurs when a <xref:System.Web.UI.WebControls.WebParts.WebPart> or server control that is currently connected is either closed or deleted. In this case, because of the control is being removed from the page, its connection needs to be terminated as well, therefore by design it is not possible to cancel the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event to interrupt the process of ending a connection. For more information, see the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls. If you close one of the controls while the page is in browse mode and the controls are connected, an override of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> method disconnects the closed control, ends the connection, and displays a message.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n The second part is the file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected, and a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n In the source code, notice the inherited control `MyWebPartManager` that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> method. This method checks each connection in a page to see whether the control being closed participates in the connection and, if so, calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method to end the connection. This is identical to the base implementation of the method in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. The overridden method then customizes the base implementation by writing a message to the page.  \n  \n [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control, and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, while the `Button2_Click` method disconnects the controls.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  -->  \n  \n After you load the page, click the **Connect** button to connect the controls. Then click the verbs menu in one of the controls (the downward arrow in the header of the control), and select **Close** from the verbs menu. When you try to close the control, the overridden method is called, the connection is ended, and the message is written to the page. If you want to reset the page to restore the closed control and experiment with other options, click the **Reset User State** link to remove personalization data and restore the page's original state."
  syntax:
    content: protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control that is to be disconnected.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  id: DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: WebPartManager.DisconnectWebParts(WebPartConnection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Carries out the process of disconnecting server controls that are connected on a Web page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method carries out the complete process of ending a connection between <xref:System.Web.UI.WebControls.WebParts.WebPart> or server controls, when you pass it the `connection` parameter.  \n  \n This method is used to disconnect controls when you place an `<asp:connectionszone>` element in a Web page, to provide a user interface (UI) for managing connections. When a page is in connect display mode (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>), and a current connection exists, users can click a button that calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method to end the connection.  \n  \n You can also call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method directly from your code, if you want to disconnect controls programmatically and without having to add an `<asp:connectionszone>` element to a page."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n The second part is a file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, and the `Button2_Click` method disconnects the controls.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  -->  \n  \n After you load the page, you can click the **Connect** button to connect the controls. If you enter some text in the text box control, and then click the **Enter** button, the text will be displayed in the connected control (it would not be displayed if the controls were disconnected). If you click the **Disconnect** button, the controls will be disconnected. You can verify the connection status of the controls by using the **Display Mode** drop-down list control to switch the page into **Connect** mode. After doing that, click the verbs menu (represented by an arrow) in the title bar of one of the controls, and select the **Connect** item. The connection UI is displayed; it is available because there is an `<asp:connectionszone>` element declared in the page. You can also connect and disconnect the controls from this UI."
  syntax:
    content: public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);
    parameters:
    - id: connection
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartConnection"></xref> that represents the connection between server controls.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>connection</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>connection</code> is not contained in either <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections"></xref> or <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections"></xref>.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections\"></xref> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections\"></xref>.  \n  \n \\- or -  \n  \n <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections\"></xref> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  id: DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: WebPartManager.DisplayMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets or sets the active display mode for a Web page that contains Web Parts controls.
  remarks: "A page that contains Web Parts controls is always in one of several possible display modes. For details about display modes, see [Web Parts Page Display Modes](http://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4).  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class creates the display modes for a Web page. Using the base <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> class, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control creates several standard display mode objects that can be used on pages that contain Web Parts controls. These standard display modes are described in the <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> class overview.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control also manages the display modes for pages that use Web Parts controls. Using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control keeps a reference to the current display mode on a page. You can also use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property to switch a page into different display modes. For an example of changing display modes on a page that uses Web Parts controls, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n As part of managing the display mode, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control also provides events and event handlers relating to display modes, such as the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> method and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> method. These methods provide a mechanism for customizing a page's behavior, and even for adding a custom display mode."
  example:
  - "The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property. After loading the page in a browser, you can use the buttons near the bottom of the page to switch display modes. The page is in browse mode by default when it loads. If you switch to design mode, you can drag the server controls from one zone to another, or arrange two controls within one zone. If you switch to edit mode, you can click the verbs menu in the header of either of the server controls, select **Edit**, and edit the control using the provided editing user interface (UI).  \n  \n> [!NOTE]\n>  Switching among display modes in a Web Parts application is very common, and you might want to provide a consistent, reusable way to do this on all your pages that contain Web Parts controls. For an example of a user control that changes display modes and that can be reused on many pages, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/CS/wpmgrDisplayModecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/VB/wpmgrDisplayModevb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartDisplayMode"></xref> that determines a page's display mode.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <xref href="System.Web.UI.WebControls.WebParts.WebPartDisplayMode"></xref> object being assigned to the property is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is not one of the supported display modes.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is disabled."
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  id: DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: WebPartManager.DisplayModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs after the current display mode on a Web Parts page has changed.
  remarks: "Display modes are an integral part of Web Parts applications. When users switch to a different display mode on a Web page, the page will often take on a very different appearance, depending on the purpose of the new display mode. After a display mode has changed, you might want to make certain changes in the user interface (UI), such as hiding or showing certain controls, changing the appearance of selected UI elements, and so on.  \n  \n> [!NOTE]\n>  For more information on display modes, see [Web Parts Page Display Modes](http://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). For more information on consuming events, see [How to: Consume Events in a Web Forms Application](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  id: DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: WebPartManager.DisplayModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs after a user clicks a verb on a Web page that begins the process of changing to a different display mode.
  remarks: "Display modes are an integral part of Web Parts applications. When users switch to a different display mode on a Web page, the page will often take on a very different appearance, depending on the purpose of the new display mode. After a user initiates the process of changing to a new display mode by clicking a verb, you might want to make certain changes in the user interface (UI) by using the <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> property to determine what the new display mode will be, and then changing various UI elements accordingly. A useful way to do this is to override the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> method to customize the UI.  \n  \n> [!NOTE]\n>  For more information on display modes, see [Web Parts Page Display Modes](http://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4). For more information on consuming events, see [How to: Consume Events in a Web Forms Application](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  id: DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: WebPartManager.DisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a read-only collection of all display modes that are associated with a <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> property references all associated display modes, in contrast with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property, which references only the display modes that are available (supported) on the current page.  \n  \n Two of the provided display modes, browse and design, are always supported on a page. The other three display modes, edit, catalog, and connections, are supported only when a page has the corresponding type of zone necessary for a particular display mode to work. For example, if you page does not contain an <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone, the edit display mode would appear in the collection referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> property, but would not appear in the collection referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property."
  example:
  - "The following code example shows the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> property. The code uses this property to populate the list with all the display modes available in the Web Parts control set, even those that are not supported on the current page. In this case, the catalog and connect display modes are not supported, because their corresponding required zones are not on the page.  \n  \n The other three display modes--browse, design, and edit--are supported on the page. Edit mode is supported because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone, while browse and design modes are always supported.  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control. Note that if you select **Catalog** or **Connect** in the drop-down list, an error page is generated.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/CS/wpmgrDisplayModescs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/VB/wpmgrDisplayModesvb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection"></xref> that contains the set of <xref href="System.Web.UI.WebControls.WebParts.WebPartDisplayMode"></xref> objects associated with the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  id: DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: WebPartManager.DynamicConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets the collection of all dynamic connections that currently exist on a Web page.
  remarks: "Dynamic connections are connections that are created programmatically, as opposed to statically. Static connections are created by declaring them in the markup of a Web Forms page. Dynamic connections are formed either programmatically, or by a user creating a connection using the connection user interface (UI).  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> collection, though it is read-only and you cannot change its contents, does provide programmatic access to each dynamic connection object.  \n  \n> [!NOTE]\n>  To perform common operations such as connecting or disconnecting <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, developers should use the public methods on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class, such as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, rather than trying to directly modify connection objects in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> collection."
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartConnectionCollection"></xref> that contains references to all dynamic connections on a page.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  commentId: F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  id: EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: WebPartManager.EditDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Represents the display mode in which end users can edit and modify server controls. This field is read-only.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> field references a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object that is created and contained by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Because this is a static object, you can refer to it directly through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class without needing an instance of the control.  \n  \n When a page that contains Web Parts controls first loads, it is in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> (browse mode) by default. When users want to edit or modify a server control, they must first switch the page to <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> (edit mode). Second, they must select a specific server control to edit, by clicking the edit verb on the verbs menu in that control's header. After the control is in edit mode, the editing user interface (UI) appears for editing the selected control.  \n  \n To enable edit mode on a page, the page must contain at least one <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone that includes one or more of the provided editing controls, such as the <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> control, or custom editing controls."
  example:
  - "The following code example demonstrates how to work with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and edit. To support editing, an `<asp:EditorZone>` element is in the page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/CS/wpmgrEditDisplayModecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/VB/wpmgrEditDisplayModevb.aspx#1)]  -->  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page is hidden. Use the drop-down list control to switch the page to edit mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. Click the **Edit** verb in the verbs menu on one of the controls, to enable editing of that specific control."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: WebPartManager.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets or sets a value that determines whether client-side scripting is enabled on the Web page that contains a <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> property provides a way for developers to disable client scripts. You might want to disable client scripting for security purposes, or to ensure that all users of a page will have a similar user experience, even if they use different browsers.  \n  \n You can disable client scripting by adding an `EnableClientScript` attribute to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> element on a Web page, as in the following line of declarative code:  \n  \n `<asp:webpartmanager id=\"manager\" runat=\"server\"`  \n  \n `EnableClientScript=\"false\" />`  \n  \n Also, developers could eliminate this property by inheriting from the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class and setting the default value to `false`.  \n  \n The Web Parts control set uses client scripting to provide some of the client user interface (UI) and personalization features. If you disable client scripting, Web Parts controls still work, but some features are disabled. The ability to drag controls into different zones is disabled, along with the ability to render verbs in a drop-down verbs menu in a control's title bar (the verbs are instead displayed as links in the control's title bar)."
  syntax:
    content: public virtual bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether client script can run on the page. The default value is `true`.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: WebPartManager.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a value indicating that the use of themes is enabled on a Web page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control overrides the base <xref:System.Web.UI.Control.EnableTheming%2A> property to ensure that it always returns a value of `true`. This is done because the Web Parts control set requires the use of themes to render the Web Parts controls that are child controls of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control and that form the user interface (UI) of a Web page. For example, themes are used to render the various zones, and the controls that reside in the zones, including the various types of part controls (controls that inherit from the <xref:System.Web.UI.WebControls.WebParts.Part> class), user controls, ASP.NET server controls, and custom server controls.  \n  \n Although the overridden <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A> property is implemented as a read/write property in accordance with its base property, you cannot set the property, because by design it must always return a value of `true`. If you attempt to set the property, a <xref:System.NotSupportedException> exception is thrown."
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether themes are enabled. `true` in all cases.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: An attempt was made to set the property value.
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  id: EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: WebPartManager.EndWebPartConnecting()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Completes the process of connecting a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control to another control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> method finishes the process of connecting a <xref:System.Web.UI.WebControls.WebParts.WebPart> control to another control. It is the counterpart to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> method.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A> method ensures that the personalization object referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> property is modifiable, which is necessary because forming a connection is itself a type of personalization. The method then ensures that the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> object is not `null`, and finally calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> method."
  syntax:
    content: public virtual void EndWebPartConnecting ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The control referenced by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart"></xref> property is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  id: EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: WebPartManager.EndWebPartEditing()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Completes the process of editing a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> method finishes the process of editing a <xref:System.Web.UI.WebControls.WebParts.WebPart> control. It is the counterpart to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> method.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> method ensures that the personalization object referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> property is modifiable, which is necessary because editing a control is a process that requires personalization changes. The method then ensures that the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> object is not `null`, so that the currently selected <xref:System.Web.UI.WebControls.WebParts.WebPart> control can change, and finally it calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> method."
  syntax:
    content: public virtual void EndWebPartEditing ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The control referenced by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart"></xref> property is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  id: ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: WebPartManager.ExportSensitiveDataWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets or sets the text of a warning message that is displayed when a user attempts to export sensitive state data from a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  remarks: "When a user attempts to export sensitive state data from a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, if any of the data being exported comes from a member that was marked as sensitive in the source code, a warning message is displayed to the user in a message box, telling them that sensitive data is being exported and providing an opportunity to cancel the export. Developers can mark a specific member's data as sensitive by setting the `isSensitive` parameter of the `[Personalizable]` attribute to `true` on the member. For more information about this attribute and parameter, see the <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> class.  \n  \n> [!IMPORTANT]\n>  When you use the export feature of Web Parts, sensitive data could potentially be exported to unauthorized users. For details on how to protect against this threat, see [Securing Web Parts Pages](http://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2).  \n  \n The default message is displayed whenever users attempt to export. However, by assigning a value to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> property, you can provide a custom warning message."
  example:
  - "The following code example demonstrates the declarative use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> property.  \n  \n The code for the following Web page uses a standard <xref:System.Web.UI.WebControls.BulletedList> control and places it in a zone. The control will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control at run time, which enables it to act as a true <xref:System.Web.UI.WebControls.WebParts.WebPart> control. To make the control exportable, an `ExportMode` attribute is added to the `<asp:bulletedlist>` element, and the attribute value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>, which means that both sensitive and non-sensitive data can be exported. Note also that in the `<asp:webpartmanager>` element, the `ExportSensitiveDataWarning` attribute is assigned a custom value.  \n  \n Note that for the code example to work, there is a setting you must add in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/CS/wpmgrExportSensitiveWarningCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/VB/wpmgrExportSensitiveWarningVB.aspx#1)]  -->  \n  \n After you load the page in a browser, click the verbs menu (represented by a downward arrow) in the title bar of the control that contains the links. In the verbs menu, select **Export**, and notice that a message box appears with the custom warning. If you want to continue with the export, click **OK**, which will allow you to save a local copy of an XML description file with all the data about the control."
  syntax:
    content: public virtual string ExportSensitiveDataWarning { get; set; }
    return:
      type: System.String
      description: A string that contains the warning message. The default message is a culture-specific value supplied by the .NET Framework.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  id: ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportWebPart(WebPart, XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart, XmlWriter)
  fullName: WebPartManager.ExportWebPart(WebPart, XmlWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Creates an XML description file that contains state and property data for a server control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> method assembles various state and property data from `webPart` into an XML file. The data includes information about the control itself, including its assembly, state data, and property data. The user who initiates the export can save the XML file to disk on the local computer or the network. Other users can then import the description file to a different page or Web site, and apply the state and property data to a different instance of `webPart`. This provides a fast and convenient mechanism for users to share and reuse their settings on server controls, and it also provides developers with a means to control the appearance and behavior of exported and imported controls.  \n  \n Properties on `webPart` are not exported by default. To enable export of a property, you must mark it with the `[Personalizable]` attribute in the source code. You can also optionally mark an exportable property as containing sensitive data, by setting the `isSensitive` parameter of the `[Personalizable]` attribute to `true`. By default, `isSensitive` is `false`. Developers can set the parameter to `true` to indicate that the data is sensitive.  \n  \n To enable `webPart` to be exported, a developer sets its <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property value to either <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All> (which includes all personalizable and sensitive properties), or to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, which exports everything except for sensitive properties.  \n  \n> [!IMPORTANT]\n>  Allowing users to export data from controls, and to import data into other controls, entails some security risks. Developers should use the approach discussed above to protect sensitive data, and if they want to avoid the risk of exposing data altogether, they should not enable export on `webPart` at all. For details on Web Parts security issues, see [Securing Web Parts Pages](http://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2)."
  syntax:
    content: public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The control from which data will be exported.
    - id: writer
      type: System.Xml.XmlWriter
      description: An <xref href="System.Xml.XmlWriter"></xref> that writes the exported data from <code>webPart</code> to an XML description file.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is `null`.  \n  \n \\- or -  \n  \n <code>writer</code> is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the collection of controls referenced in <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.Controls\"></xref>.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.WebParts.WebPart.ExportMode\"></xref> property of <code>webPart</code> is set to a value of <xref href=\"System.Web.UI.WebControls.WebParts.WebPartExportMode.None\"></xref>, which means that export is disabled for <code>webPart</code>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  id: Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: WebPartManager.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Overridden to prevent focus from ever being set on the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control, because it has no user interface (UI).
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Focus%2A> method overrides the base <xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName> method, and throws an exception if a caller calls the method. Because the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has no UI and is never visible to users, it can never allow focus to be set on itself.
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: A caller tries to call the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.Focus"></xref> method, which is not supported in a control that has no UI.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: WebPartManager.GetConsumerConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Retrieves the collection of <xref href="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint"></xref> objects that can act as connection points from a server control that is acting as a consumer within a Web Parts connection.
  remarks: "A Web Parts connection always involves exactly two controls, one acting as the provider of data, the other acting as the consumer of data. Each control must have one or more methods that are defined as connection points. In the case of a consumer control, its connection points are <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects. Retrieving the consumer connection points is a necessary step in forming a Web Parts connection.  \n  \n A consumer must always have at least one connection point to be able to establish a connection. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method checks a consumer control and retrieves a collection of all its connection points. If a <xref:System.Web.UI.WebControls.WebParts.WebPart> control has no connection points, the method returns an empty collection."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> object that is retrieved by using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  -->  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A server control that is acting as a consumer in a connection.
    return:
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
      description: A <xref href="System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection"></xref> that contains all connection points in the consumer.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>webPart</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  id: GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: WebPartManager.GetCurrentWebPartManager(Page)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Retrieves a reference to the current instance of the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control on a page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> method is useful in contexts where you want to retrieve a reference to the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. A common scenario where this would occur is if you are writing a custom control that cannot know during development what the ID of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control on its page will be.  \n  \n> [!NOTE]\n>  The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> method is static, so you can call it directly without needing an instance of a <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n Some controls in the Web Parts control set, such as <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, have a <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> property that can retrieve a reference to the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Hence, when working with such controls, you should use this property to retrieve a reference.  \n  \n If you are coding in a context where you know the ID of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, such as writing code inline within a Web page, it is simplest and most efficient to refer directly to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control by using its ID."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> method. The example has two parts: a custom server control, and a Web page that hosts the control.  \n  \n The custom <xref:System.Web.UI.WebControls.Label> control uses the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> method to retrieve the ID of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control on the current page, and then displays the ID.  \n  \n [!code-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/MyManagerIDLabel.cs#2)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/MyManagerIDLabel.vb#2)]  \n  \n The following code example provides the Web page that hosts the control in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/getCurrentWPManagerCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/getcurrentWPManagervb.aspx#1)]  -->  \n  \n After you load the page in a browser, notice that the ID of the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is displayed within the custom <xref:System.Web.UI.WebControls.Label> control."
  syntax:
    content: public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: The Web page that contains an instance of the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref>.
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> that references the current instance of the control on a page.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>page</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: WebPartManager.GetDisplayTitle(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a string containing the value for the <xref href="System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle"></xref> property of a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  remarks: Gets the calculated value of the <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> property for `webPart`. When developers do not assign a value to the <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> property of a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, this method produces the value to display as the title. The calculated value for untitled controls consists of a number appended to a string, with the number indicating a control's sequence within the current zone.
  syntax:
    content: protected virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The control for which the method returns the value of <xref href="System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle"></xref>.
    return:
      type: System.String
      description: A string that contains the calculated value of <xref href="System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle"></xref> for <code>webPart</code>.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>webPart</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>webPart</code> is not in the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.Controls"></xref> collection.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: WebPartManager.GetExportUrl(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets the relative virtual path and the query string that are part of the request when a user attempts to export a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control.
  remarks: "The value returned by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A> method is a relative virtual path to the server location of the page that contains the control, plus the appended query string value that forms the export request submitted to the server. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A> method encodes the string before allowing the request to be submitted, to protect against malicious script attacks.  \n  \n> [!NOTE]\n>  For more information about securing Web Parts applications, see [Securing Web Parts Pages](http://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2)."
  syntax:
    content: public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> that is being exported.
    return:
      type: System.String
      description: A string that contains the relative virtual path and the query string that together form the request to export a control.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  id: GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: WebPartManager.GetGenericWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a reference to the instance of the <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref> control that contains a server control.
  remarks: "In general, there are two categories of controls that developers place in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones to participate in Web Parts applications: <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, which inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class, and other server controls, which can be standard ASP.NET controls, custom controls, or user controls. When any of these controls is placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, it takes on the functionality of a <xref:System.Web.UI.WebControls.WebParts.WebPart> control. A <xref:System.Web.UI.WebControls.WebParts.WebPart> control has this functionality inherently, but the other kinds of server controls do not. To enable the other server controls to act as <xref:System.Web.UI.WebControls.WebParts.WebPart> controls when they are placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, ASP.NET wraps them with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control. Because the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control inherits directly from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, it provides its child controls with true Web Parts features.  \n  \n Often at run time, page developers might want to get a reference to the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control that contains one of the server controls in a zone. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> method enables them to retrieve a reference to the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control."
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> method. The code example contains a <xref:System.Web.UI.WebControls.Calendar> control declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone. The `Button1_Click` method first prints the ID of the <xref:System.Web.UI.WebControls.Calendar> control to a label, and then uses the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> method to retrieve a reference to the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control that wraps the calendar. The ID of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control, and the ID of its child control (which is the <xref:System.Web.UI.WebControls.Calendar> control), are both printed to a second label.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/CS/getGenericWebPartCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/VB/getGenericWebPartVB.aspx#1)]  -->"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: A server control that exists in a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> and is wrapped as a child control of a <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref> at run time.
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref> that wraps <code>control</code> as a child control. The method returns `null` if <code>control</code> is not contained in a <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref>.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>control</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: WebPartManager.GetProviderConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Retrieves the collection of <xref href="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint"></xref> objects that can act as connection points from a server control that is acting as a provider within a Web Parts connection.
  remarks: "A Web Parts connection always involves exactly two controls, one acting as the provider of data, the other acting as the consumer of data. Each control must have one or more methods that are defined as connection points. In the case of a provider control, its connection points are <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> objects.  \n  \n A provider must always have at least one connection point to be able to establish a connection. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method checks a provider control and retrieves a collection of all its connection points. Retrieving the provider connection points is a necessary step in forming a Web Parts connection."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method.  \n  \n The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> object that is retrieved by using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  -->  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A server control that is acting as a provider in a connection.
    return:
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
      description: A <xref href="System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection"></xref> that contains all connection points in the provider.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>webPart</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  id: ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ImportWebPart(XmlReader, String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader, String)
  fullName: WebPartManager.ImportWebPart(XmlReader, String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Imports an XML description file that contains state and property data for a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control, and applies the data to the control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> method imports an XML description file that was created by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> method for a server control. It is not the actual server control that is imported, but only the description file containing state and property data about the control. The control and assembly referenced in the description file must already be available on the server where a user attempts to import the description file.  \n  \n To enable importing a control, a developer needs to add a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control on the page where import will be enabled. Within the zone, an <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control must be added. This control provides a file dialog box that allows users to browse and locate the description file to import.  \n  \n After a user finds a description file and begins the import, the description file is read by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> method. If there are no errors and if the assembly and control are found, the server control is added to the catalog within the <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, and the various property and state data specified in the description file are applied to the control. The user can then select the control and add it to the page.  \n  \n> [!IMPORTANT]\n>  Like the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> method, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A> method has some potential for security risks. Because it involves importing data into a Web site, a malicious user could try to insert bad data or even script code into the description file that is imported. Then the bad data could appear on a page, or in a database, or the inserted script could run. For an overview of the potential risks associated with importing description files, and ways of avoiding those risks, see [Securing Web Parts Pages](http://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2)."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: An <xref href="System.Xml.XmlReader"></xref> that reads the state and property data from the XML description file that is being imported.
    - id: errorMessage
      type: System.String
      description: A <xref href="System.String"></xref> that is displayed to the user if an error is encountered during import.
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> (or a server control that is wrapped by a <xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"></xref> and thus treated as a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref>) that is referenced in the imported XML description file.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>reader</code> is `null`.
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: "<code>reader</code> could not read the file.  \n  \n \\- or -  \n  \n <code>reader</code> needed to display an import error message but did not find one in the file.  \n  \n \\- or -  \n  \n <code>reader</code> reached the end of the file without finding the XML element that contains the exported data."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  id: Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: WebPartManager.Internals
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a reference to the <xref href="System.Web.UI.WebControls.WebParts.WebPartManagerInternals"></xref> class, which is used to combine and separate a set of methods that are actually implemented in the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> class, but are mostly useful for control developers.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> property exposes the APIs to call into a set of <xref:System.Web.UI.WebControls.WebParts.WebPartManager> methods that are used mostly in extensibility cases.  \n  \n The designed way to use these internal methods is to access them through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> property. Because the property is protected, you can only access it and call the methods within an instance of the <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> class by inheriting from the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class.  \n  \n> [!NOTE]\n>  This property is hidden from IntelliSense in [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]. However, in a derived <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class, you can still access the property and its various members."
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartManagerInternals"></xref>, through which a <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> can reference the various methods that have been separated into the <xref href="System.Web.UI.WebControls.WebParts.WebPartManagerInternals"></xref>.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  id: IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: WebPartManager.IsAuthorized(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Carries out the initial steps in determining whether a control is authorized to be added to a page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> method is the initial method called by the Web Parts control set to check authorization for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control. It accepts `webPart` as a parameter, and begins a process that ultimately determines whether the control will be added to a page. Call this method from your code directly when you need to determine whether a given control is authorized.  \n  \n This method carries out the initial tasks of determining whether the control inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class or is a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control and, if so, what type of child control it contains. To finish the task of authorization, it calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload method."
  example:
  - "The following code example demonstrates how to call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> method from your code to determine whether a control is authorized to be added to a page.  \n  \n The code example has three parts:  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> method.  \n  \n-   A Web page that creates a filter for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   An explanation of how to run the code example.  \n  \n This code example uses a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload method to provide custom handling of the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property. This control checks for a property value of `admin` and, if the value is present, authorizes the control. If a control has a different value, it is not authorized; controls without the property value are authorized as well, as they are presumed not to be part of the filtering scenario.  \n  \n For this code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  \n  \n The second part of the code example creates a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer. Notice also that in the `Page_Load` method, the code calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> method to determine whether each of the controls is authorized, and if so, it sets each control's <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  -->  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because it is excluded by the filter. The third control is also added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. Notice that if you click the verbs menu icon in the title bar of either control, they can both be exported because their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property values were assigned."
  syntax:
    content: public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or other server control being checked for authorization.
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether <code>webPart</code> can be added to a page.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>webPart</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  id: IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(Type, String, String, Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type, String, String, Boolean)
  fullName: WebPartManager.IsAuthorized(Type, String, String, Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Carries out the final steps in determining whether a control is authorized to be added to a page.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload method carries out the final steps in determining whether a control is authorized to be added to a page. The method ensures that `type` is a valid type, and that `path` has a value only if the control being checked is a user control. Then it calls the critical <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method, which raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event.
  example:
  - "The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> method to determine whether a control is authorized to be added to a page.  \n  \n The first step is to create a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  -->  \n  \n The second step is to override the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> method, and create custom handling for authorization filters. Note that the code first checks whether the property has a value, so that any control that does not assign the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property will be added automatically. If a control has a filter, the code returns `true` only if the filter value is equal to `admin`. This demonstrates a simple mechanism you can use for displaying certain controls to certain users, depending on their role. While a full example using roles is beyond the scope of this topic, you could use the same logic as the overridden method in this code example, except that you could check whether the current user is in a role that matches the authorization filter value, and then add the control only for that user. This would enable you to create pages where some users would see all the controls, and other users would see only selected controls. This is how the logic that checks the filter might look if you used roles:  \n  \n```vb  \nIf Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  \n  return True  \nElse  \n  return False  \nEnd If  \n```  \n  \n```csharp  \nif(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  \n    return true;  \nelse  \n    return false;  \n```  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because its filter value is excluded. The third control is added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. If you change the property value on the second control to match that of the first control, and then run the page again, the second control is added as well."
  syntax:
    content: public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> of the control being checked for authorization.
    - id: path
      type: System.String
      description: The relative application path to the source file for the control being authorized, if the control is a user control.
    - id: authorizationFilter
      type: System.String
      description: An arbitrary string value assigned to the <xref href="System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter"></xref> property of a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control, used to authorize whether a control can be added to a page.
    - id: isShared
      type: System.Boolean
      description: Indicates whether the control being checked for authorization is a shared control, meaning that it is visible to many or all users of the application, and its <xref href="System.Web.UI.WebControls.WebParts.WebPart.IsShared"></xref> property value is set to `true`.
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether a control is authorized to be added to a page.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>type</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code> is a user control, and <code>path</code> is either `null` or an empty string (\"\").  \n  \n \\- or -  \n  \n <code>type</code> is not a user control, and <code>path</code> has a value assigned to it."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  id: IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: WebPartManager.IsCustomPersonalizationStateDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a value that indicates whether personalization changes have been made that affect page-level personalization details controlled by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control uses the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> property internally to track whether any of the page-level personalization data that it manages has changed. The personalization data changes when users carry out various personalization actions at the page level, such as adding or removing <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, connecting or disconnecting controls, changing the page's layout by moving controls, and other actions.  \n  \n> [!NOTE]\n>  Users can also perform personalization at the control level, which means that they make personalization changes to a specific control, and the changes affect only that control. An example would be editing the control and changing its title text, or its background color. Control-level personalization does not affect the page-level personalization data tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and so the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> property value is not changed to `true` when control-level personalization occurs.  \n  \n Although the method is protected and cannot be accessed directly by a caller, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> property can be accessed directly by callers, and it returns the value of this property."
  syntax:
    content: protected virtual bool IsCustomPersonalizationStateDirty { get; }
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether personalization changes have been made. The default value is `false`.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: WebPartManager.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Loads control state data that was saved from a previous page request, and needs to be restored on a subsequent request.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A> method is helpful for restoring property data that should be persisted across postbacks of a page, even when the <xref:System.Web.UI.Control.EnableViewState%2A> property is set to `false`.
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: Contains the persisted state data to be loaded.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>savedState</code> is not a valid <xref href="System.Web.UI.PageStatePersister.ControlState"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Stores the custom personalization data that has been passed to the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control by the personalization objects to be used later during the initialization process.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> method provides saved state data in the form of a <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> object. This data is eventually used to load personalization data into the Web Parts controls and to perform other initialization tasks.  \n  \n> [!NOTE]\n>  This method is called by a sequence of methods that begins when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A> method initially requests the associated <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> object to supply personalization data to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n You cannot call this method directly from your code. You can, however, directly call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A> method, which itself calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A> method and returns the personalization data."
  syntax:
    content: protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: A <xref href="System.Web.UI.WebControls.WebParts.PersonalizationDictionary"></xref> that contains the state data to be loaded.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  id: MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: WebPartManager.MediumPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a <xref href="System.Security.PermissionSet"></xref> object that allows only <xref href="System.Security.Permissions.SecurityPermissionFlag.Execution"></xref> permission and <xref href="System.Web.AspNetHostingPermissionLevel.Medium"></xref> permission.
  remarks: The <xref:System.Security.PermissionSet> object that is returned by this property is used during import for type deserialization.
  syntax:
    content: protected virtual System.Security.PermissionSet MediumPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: A <xref href="System.Security.PermissionSet"></xref> object that allows only <xref href="System.Security.Permissions.SecurityPermissionFlag.Execution"></xref> permission and <xref href="System.Web.AspNetHostingPermissionLevel.Medium"></xref> permission.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  id: MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: WebPartManager.MinimalPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a <xref href="System.Security.PermissionSet"></xref> object that allows only <xref href="System.Security.Permissions.SecurityPermissionFlag.Execution"></xref> permission and <xref href="System.Web.AspNetHostingPermissionLevel.Minimal"></xref> permission.
  remarks: The <xref:System.Security.PermissionSet> object returned by this property is used during import for everything except type deserialization.
  syntax:
    content: protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: Gets a <xref href="System.Security.PermissionSet"></xref> object that allows only <xref href="System.Security.Permissions.SecurityPermissionFlag.Execution"></xref> permission and <xref href="System.Web.AspNetHostingPermissionLevel.Minimal"></xref> permission.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MoveWebPart(WebPart, WebPartZoneBase, Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart, WebPartZoneBase, Int32)
  fullName: WebPartManager.MoveWebPart(WebPart, WebPartZoneBase, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Moves a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server control from one <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone to another, or to a new position within the same zone.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control uses the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> method to move `webPart` to a new location in the same zone, or in a different zone. You can call this method directly from code, and it is also invoked when a user moves a control to a new position using various options in the Web Parts user interface (UI).  \n  \n A number of conditions must be met before `webPart` can be moved, and most of these are indicated by items listed in the Exceptions section of this topic. If `webPart` was not contained in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone to begin with, it cannot be moved into a zone.  \n  \n After the conditions have been met, the following sequence of actions occurs to move `webPart`:  \n  \n1.  The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> event.  \n  \n2.  `webPart` is removed from its current zone (if necessary), and added to its new zone or new position within its current zone.  \n  \n3.  The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> event.  \n  \n4.  The `zoneIndex` of every <xref:System.Web.UI.WebControls.WebParts.WebPart> control in both the origin and destination zones is reset to reflect the moved control."
  example:
  - "The following code example demonstrates how to call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> method directly from code to move a <xref:System.Web.UI.WebControls.WebParts.WebPart> control from one zone to another.  \n  \n The code example has three parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how to run the code example.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n The second part of the example is a Web page that contains two zones, each of which contains two server controls. When a user clicks the **Move WebPart** button on the page, the code in the `Button1_Click` method moves a control from the first zone to a new position in the second zone. Notice that the code first must call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> method to retrieve the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object that wraps the `list1` control. This is required because the first parameter of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> method requires a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, whereas `list1` is an ASP.NET server control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/CS/MoveWebPartCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/VB/MoveWebPartVB.aspx#1)]  -->  \n  \n After the page loads, click the **Move WebPart** button, and note that the control that contains the links moves into the middle position in the second zone. This movement of the control is accomplished programmatically by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> method. You can also use the **Display Mode** drop-down list control to switch the page to design mode, and in design mode, you can drag the controls to different zones or different positions within their zones. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> method is also called by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to handle such user-initiated moves."
  syntax:
    content: public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: The <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or other server control being moved.
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: The target <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> to which <code>webPart</code> is being moved.
    - id: zoneIndex
      type: System.Int32
      description: An integer that indicates the index of <code>webPart</code> relative to other controls within <code>zone</code>.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.Controls\"></xref> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n <code>zone</code> is not contained in the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager.Zones\"></xref> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n The zone referenced by the <code>webPart</code> control's <xref href=\"System.Web.UI.WebControls.WebParts.WebPart.Zone\"></xref> property is `null`, which means that <code>webPart</code> is not currently contained in a zone."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>webPart</code> or <code>zone</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>zoneIndex</code> is less than zero.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  id: OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart"></xref> event and invokes a handler for the event, if one exists.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method is called by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> method, when a <xref:System.Web.UI.WebControls.WebParts.WebPart> control is being checked for authorization to be added to a page. When the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method is called, it raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, and if there is a handler method for the event, it invokes the handler.  \n  \n The process of authorizing <xref:System.Web.UI.WebControls.WebParts.WebPart> controls is an important Web Parts feature. Every <xref:System.Web.UI.WebControls.WebParts.WebPart> or server control that is added to a zone by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control goes through an authorization process to determine whether the control can be added. By default, the Web Parts control set does not provide any filtering criteria to prevent controls from being added to a zone. But the control set does provide the mechanisms necessary for developers to create their own filtering criteria. By using these mechanisms, you can create custom filtering scenarios. For example, you could create a filter so that, if a user is in an administrator role, certain controls would be added to a zone when the page is rendered, and if the user is in a user role, those controls would not be added.  \n  \n The mechanisms for filtering controls during the authorization process are the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property on <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> methods, and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n To create a filtering scenario, there are essentially two tasks. First, you assign strings to the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control you want to filter. These string values can be arbitrary, but they should contain the criteria you want to filter on. For example, if you wanted a given control to be added to a zone only if an administrator user is viewing the page, then you might assign a string value of `admin` to the property. Then you could use the ASP.NET roles feature, and add all users of your site to various roles such as administrator, manager, and user. When a page is loading, your filtering code would check what role a user is in, compare it to the authorization filter value on a control being checked, and if (for example) the user is in an administrator role and you had set the control's <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> value to `admin`, the control could be added.  \n  \n The second step in creating a filtering scenario is to write code to check the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values on <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and determine whether each control is authorized before it is added to its zone. There are two options for where to place this filtering code. The first option is the preferred option for page developers. You can create a method to handle the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event directly in the Web page server script code, or in a code separation file. Associate your method with the event by adding the `OnAuthorizeWebPart` attribute to the tag for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control in the page, as shown in the following sample markup code.  \n  \n```  \n<asp:webpartmanager id=\"manager1\" runat=\"server\"   \n   OnAuthorizeWebPart=\"manager1_AuthorizeWebPart\" />  \n```  \n  \n All your custom method has to do is check each <xref:System.Web.UI.WebControls.WebParts.WebPart> control for the filtering criteria and then, based on the results, assign a Boolean value to the <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> property of the <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> object to indicate whether the <xref:System.Web.UI.WebControls.WebParts.WebPart> control can be added. The code in the Example section demonstrates how to do this.  \n  \n The second option for where to place your filtering code is to inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class, and override a method to check the filter criteria. The two methods you can override to do this are the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method. Although either method would work, in most cases it is preferable to override the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> method, because it provides you with greater programmatic control over the whole authorization process, whereas the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method does only one specific task, which is to raise the event and check for a handler. For a code example of a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> method, see the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> overload of the method."
  example:
  - "The following code example demonstrates how to set a custom event handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, so that the handler can provide custom filtering code for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method. This example would be a typical way for a page developer to provide a filtering scenario and authorization of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to be added to a page.  \n  \n In the Web page, notice that the `<asp:webpartmanager>` element has the `OnAuthorizeWebPart` attribute with the name of the event handler assigned to it. The method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `admin` and, if so, returns `true`, which means that they will be authorized and added to the page.  \n  \n> [!NOTE]\n>  Note that controls that do not have any value assigned to the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property are added as well, because they are assumed not to be part of a filtering scenario. This would be a common approach in a filtering scenario: some controls would be filtered, and others would not be, because they are presumed to be available for all users.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  -->  \n  \n Because setting up users in roles is beyond the scope of this topic, this code example does not check user roles in the filtering. However, the scenario of filtering controls according to user roles is likely to be one of the most common uses of this filtering feature. If you have roles on your site, and you want to check user roles in this method to filter controls, the method would resemble the following code block (versus the simpler approach in the preceding code example, which does not use roles).  \n  \n```vb  \nProtected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  \n  As Object, ByVal e As WebPartAuthorizationEventArgs)  \n  \n  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  \n    If Roles.IsUserInRole(Page.User.Identity.Name, _  \n      e.AuthorizationFilter) Then  \n  \n      e.IsAuthorized = True  \n    Else  \n      e.IsAuthorized = False  \n    End If  \n  End If  \n  \nEnd Sub  \n```  \n  \n```csharp  \nprotected void mgr1_AuthorizeWebPart(object sender,   \n  WebPartAuthorizationEventArgs e)  \n{  \n  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  \n  {  \n    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  \n      e.IsAuthorized = true;  \n    else  \n      e.IsAuthorized = false;  \n  }  \n}  \n```"
  syntax:
    content: protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs"></xref> that contains event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  id: OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: WebPartManager.OnConnectionsActivated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated"></xref> event to indicate that a page and its controls are loaded, and connections on the page have been activated to begin sharing data.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> event after a page has completed the loading process. The method provides a way to add a handler for the event.  \n  \n Page developers can add a custom handler for the event by adding an `OnConnectionsActivated` attribute to the `<asp:webpartmanager>` element in a page, and then assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnConnectionsActivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: An <xref href="System.EventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  id: OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: WebPartManager.OnConnectionsActivating(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating"></xref> event to indicate that a page and its controls have loaded, and the process of activating connections can begin.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> event, which provides developers with a mechanism for programmatically customizing the process of activating connections.  \n  \n Page developers can add a custom handler for the event by adding an `OnConnectionsActivating` attribute to the `<asp:webpartmanager>` element in a page, and then assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnConnectionsActivating (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: An <xref href="System.EventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  id: OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged"></xref> event to indicate that the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control has completed the process of switching from one display mode to another on a Web page.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> method in its base form simply raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> event.
  syntax:
    content: protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs"></xref> that contains event data associated with a changed display mode.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  id: OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging"></xref> event to indicate that the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control is in the process of switching from one display mode to another on a Web page.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> method in its base form simply raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> event.
  syntax:
    content: protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
      description: An <xref href="System.EventArgs"></xref> that contains event data associated with a changing display mode.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: WebPartManager.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.Control.Init"></xref> event, which is the first event in the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control life cycle.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> method calls the base method, which raises the <xref:System.Web.UI.Control.Init> event for the control, and then carries out several preparatory steps, such as ensuring that there is only one instance of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control on a page, and loading personalization data.
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: An <xref href="System.EventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: There is another <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control on the page
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: WebPartManager.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.Control.PreRender"></xref> event, which occurs just before a <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control is rendered on a Web page.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender%2A> method calls the base method, which raises the <xref:System.Web.UI.Control.PreRender> event for the control, and then registers several client scripts that are needed on pages that contain Web Parts controls.
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: An <xref href="System.EventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged"></xref> event, which occurs after a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control has either been newly selected or had its selection cleared.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> event, which is typically a point in time where a developer might want to change the appearance of the user interface (UI). For example, when a new <xref:System.Web.UI.WebControls.WebParts.WebPart> control is selected, the Web Parts control set changes the rendering of the newly selected control. After a control's selection is cleared, the rendering is returned to normal.  \n  \n After a user selects a particular <xref:System.Web.UI.WebControls.WebParts.WebPart> control for editing, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> method is called. When the user finishes editing the control and closes it, with the result that the control's selection is cleared, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> method is called again."
  syntax:
    content: protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging"></xref> event, which occurs during the process of changing which <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control is currently selected.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> event, which occurs during the process of changing which <xref:System.Web.UI.WebControls.WebParts.WebPart> control is currently selected.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control uses this method, and the associated event, to provide an opportunity to cancel a process in which the selected control is changing. For example, the method is called within the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> method, and also within the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> method, to provide a way to cancel the process. If a user clicks the cancel verb on a control that is being edited, the control is no longer selected and any editing changes are not saved, because the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> method makes it possible to cancel the editing changes.  \n  \n> [!NOTE]\n>  The method is similarly called during the methods that begin and end the process of connecting a <xref:System.Web.UI.WebControls.WebParts.WebPart> control to another control, to enable canceling that process.  \n  \n Page developers can create a custom handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> event by adding the `OnSelectedWebPartChanging` attribute to the `<asp:webpartmanager>` element in declarative page markup, and assigning to the attribute the name of a custom method."
  syntax:
    content: protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: WebPartManager.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the base <xref href="System.Web.UI.Control.Unload"></xref> event and removes the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> instance from a Web page.
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: Event data associated with the removal of the control.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded"></xref> event, which occurs after a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control has been added to a page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> method is called during the process of adding a <xref:System.Web.UI.WebControls.WebParts.WebPart> control (or other server control that is added to a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone) to a page.  \n  \n Page developers can create a custom handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> event by adding the `OnWebPartAdded` attribute to the <`asp:webpartmanager>` element, and assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  id: OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding"></xref> event, which occurs during the process of adding a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control (or a server or user control) to a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> event to indicate that a control is in the process of being added. The method also provides the option to cancel the adding process. If the control is successfully added, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> event follows.  \n  \n Page developers can provide a custom handler for the associated event by adding the `OnWebPartAdding` attribute to the `<asp:webpartmanager>` element on a Web page, and then assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed"></xref> event to signal that a control has been removed from a page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> event to indicate that a <xref:System.Web.UI.WebControls.WebParts.WebPart> control (or other server or user control) has been successfully closed on a page.  \n  \n To close a <xref:System.Web.UI.WebControls.WebParts.WebPart> control means to remove it from a page so that it is not rendered, and also to place it in a special holding object called a page catalog. A page catalog, which corresponds to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, maintains references to closed <xref:System.Web.UI.WebControls.WebParts.WebPart> controls for each page. If a <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control is declared on a page within a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, users can switch the page into catalog display mode, and add back to the page any controls that were previously closed.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> method provides an opportunity for developers to create a custom handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> event. Page developers can add a custom handler for the event by adding an `OnWebPartClosed` attribute to the `<asp:webpartmanager>` element in a page, and then assigning a custom method name to the attribute. One useful task a developer might carry out in this method is to display a placeholder in place of the closed control, complete with a ToolTip that would inform users how to add the control back to the page."
  syntax:
    content: protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing"></xref> event, which occurs during the process of a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server control being removed from a page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> event to indicate that a control is in the process of being closed or removed from a page. The method also provides the option to cancel the closing process. If the control is successfully removed from the page, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> event follows.  \n  \n Page developers can provide a custom handler for the associated event by adding the `OnWebPartClosinging` attribute to the `<asp:webpartmanager>` element on a Web page, and then assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted"></xref> event, which occurs after a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control has been permanently deleted from a page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A> method is called during the process of deleting a <xref:System.Web.UI.WebControls.WebParts.WebPart> control (or other server control that is added to a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone) from a page.  \n  \n Page developers can create a custom handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> event by adding the `OnWebPartDeleted` attribute to the <`asp:webpartmanager>` element, and assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting"></xref> event, which indicates that a dynamic <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control (or server or user control that is contained in a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone) is in the process of being deleted.
  remarks: "Only dynamic <xref:System.Web.UI.WebControls.WebParts.WebPart> controls can be deleted, and when a control is deleted, the control instance is permanently removed from a page and cannot be restored. Dynamic <xref:System.Web.UI.WebControls.WebParts.WebPart> controls are those that are added programmatically, or from a Web Parts catalog, as opposed to static controls that are declared in the markup of a Web page.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> event to indicate that a control is being permanently deleted from its zone. The method also provides the opportunity to cancel the deleting process. If the control is successfully deleted from the page, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> event follows.  \n  \n Page developers can provide a custom handler for the associated event by adding the `OnWebPartDeleting` attribute to the `<asp:webpartmanager>` element on a Web page, and then assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved"></xref> event, which occurs after a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control has been moved to a different location on a page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> event at the very end of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> method, which ensures that the process of moving a control is complete before any code in the event handler runs.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> event is raised when a control is moved within its current zone, or to another zone, and it does not matter whether the movement is done programmatically or by a user dragging the control.  \n  \n Page developers can create a custom handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> event by adding the `OnWebPartMoved` attribute to the <`asp:webpartmanager>` element, and assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  id: OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving"></xref> event, which indicates that a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server or user control in a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone is in the process of being moved.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> event, which occurs when a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control is being moved within its zone or to another zone. The method also provides the opportunity to cancel the moving process. If the move is successfully completed, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> event follows.  \n  \n Page developers can provide a custom handler for the associated event by adding the `OnWebPartMoving` attribute to the `<asp:webpartmanager>` element on a Web page, and then assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected"></xref> event, which occurs after a connection has been established between <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> method raises its corresponding event at the very end of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method, which ensures that the steps necessary to connect two controls are completed before any code in the event handler runs.  \n  \n The method provides programmatic control over the process of creating connections, and the associated event is a convenient point at which to update the user interface (UI) or notify a user that a connection has been established.  \n  \n Page developers can create a custom handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> event by adding the `OnWebPartsConnected` attribute to the <`asp:webpartmanager>` element, and assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting"></xref> event, which occurs during the process of establishing a connection between two <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server or user controls contained in a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> event, which occurs when two controls attempt to establish a connection. The method provides the opportunity to cancel the connection attempt. If the connection is successful, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> event follows.  \n  \n Page developers can provide a custom handler for the associated event by adding the `OnWebPartsConnecting` attribute to the `<asp:webpartmanager>` element on a Web page, and then assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected"></xref> event, which occurs after a connection between <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls has ended.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> method raises its corresponding event at the very end of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method, which carries out the process of terminating a connection between two controls.  \n  \n The method provides programmatic control over the process of ending a connection, so that developers can inform the user, make changes to the user interface (UI), or make other changes to the application.  \n  \n Page developers can create a custom handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> event by adding the `OnWebPartsDisconnected` attribute to the <`asp:webpartmanager>` element, and assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Raises the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting"></xref> event, which indicates that two <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server or user controls in a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone are in the process of ending a connection.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> method raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event, which occurs when two controls are ending a connection. The method provides the opportunity to cancel the disconnection process. If the connection is successfully removed, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> event follows.  \n  \n Page developers can provide a custom handler for the associated event by adding the `OnWebPartsDisconnecting` attribute to the `<asp:webpartmanager>` element on a Web page, and then assigning a custom method name to the attribute."
  syntax:
    content: protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  id: Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: WebPartManager.Personalization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a reference to an object that contains personalization data for a Web page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> property provides a way to access the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> object that is associated with a page through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Using this property, you can access the various members of the personalization object. For example, you can use the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> method to switch the page's personalization scope from shared to user scope, or vice versa. You can also find out the current personalization scope of the page, whether personalization is even enabled on the page, which provider is being used for the personalization data, and more.  \n  \n Note that the data referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> property is only the page-level personalization data that is tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Control-specific personalization data, such as the values of personalizable properties on <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> property.  \n  \n> [!NOTE]\n>  For more information on Web Parts personalization, see [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> property programmatically.  \n  \n The following Web page allows a user to enter edit mode to edit certain aspects of the <xref:System.Web.UI.WebControls.Calendar> control. The **Toggle Scope** button switches the page to user or shared personalization scope. The **Edit Mode** and **Browse Mode** buttons each switch the page into the appropriate display mode. Notice that in the `<script>` tag section of the file, two of the methods that handle events use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> property to access useful members of the underlying object. Specifically, these methods use the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> method and the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> property on the object accessed through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> property.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_Personalization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/CS/wpmgrPersonalizationCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_Personalization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/VB/wpmgrPersonalizationVB.aspx#1)]  -->  \n  \n For the code example to run, you also must enable a user or users to personalize pages in shared scope. Add an entry to the Web.config file, within the `<system.web>` section, that looks like the following markup.  \n  \n```  \n<webParts>  \n  <personalization>  \n    <authorization>  \n      <allow  \n        users=\"[Replace the text and brackets with a user name or   \n           group.]\"  \n        roles=\"admin\"   \n        verbs=\"enterSharedScope\"  />  \n    </authorization>  \n  </personalization>  \n</webParts>   \n```  \n  \n After you load the page in a browser, click the **Toggle Scope** button, and notice that the page now says the scope is shared. Click **Edit Mode** to change the display mode, click the verbs menu on the visible control, and select **Edit** from the menu. Notice that the user interface (UI) for both editing controls appears. Now click **Browse Mode** to return to normal browsing. If the page says it is in shared scope, click **Toggle Scope** again to ensure the page is in user scope. Next, follow the same steps to edit the control again, but notice that now in the editing UI, the <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> control does not appear. That is because this control only works when the page is in shared personalization scope."
  syntax:
    content: >-
      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]

      public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartPersonalization"></xref> that contains personalization data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  exceptions: []
  attributes:
  - type: System.Web.UI.PersistenceModeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  id: RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: WebPartManager.RegisterClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Enables the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control to emit client-side script that is used for various personalization features, such as dragging <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls in a Web page.
  syntax:
    content: protected virtual void RegisterClientScript ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: WebPartManager.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Overridden to prevent the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control from rendering any content.
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: An <xref href="System.Web.UI.HtmlTextWriter"></xref> that receives the content of the control to write to the page.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: WebPartManager.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Saves state data for the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control so the data can be restored on future request to the Web page that contains the control.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A> method saves state data for properties that should be persisted across page postbacks, even when the <xref:System.Web.UI.Control.EnableViewState%2A> property is set to `false`.
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> to contain the control's saved state data.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Saves custom personalization state data maintained by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control, so that this data can be reloaded whenever the page is reloaded.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A> method is critical in the process of personalization, because it enables personalized user settings to be stored for future browser sessions and visits to a page. The method saves custom personalization state data, which includes items such as the following: dynamic <xref:System.Web.UI.WebControls.WebParts.WebPart> or server controls that have been added to a page or deleted from a page; controls that have been moved on a page; and dynamic connections that have been created or deleted.  \n  \n You cannot call this method directly from your code. You can, however, call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> method, which itself calls this method to save personalization data."
  syntax:
    content: protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: A <xref href="System.Web.UI.WebControls.WebParts.PersonalizationDictionary"></xref> that contains the state data to be loaded.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  id: SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: WebPartManager.SelectedWebPart
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a reference to a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or other server control that is currently selected for editing or for creating a connection with another control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> property returns a reference to a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control that is currently selected for editing or for creating a connection with another control.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control provides several useful methods and events for handling the process of selecting a control. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> event occurs just after a control is selected, but before any changes are made. To carry out some actions on the control after it is selected, override the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> method. For example, you might want to change the appearance of a control that is selected but has not changed yet, to emphasize visually which control is selected.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> event occurs just after the selected control has been changed. To carry out some actions on the control after it has changed, override the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> method."
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control that is currently selected for editing or forming a connection.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  id: SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: WebPartManager.SelectedWebPartChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs after the selection of one <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control has changed and moved to another control on a Web page.
  remarks: "This event can be used in conjunction with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> method to change the user interface (UI) of a selected control. For example, if the user switches the page to design mode (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>), and then selects a <xref:System.Web.UI.WebControls.WebParts.WebPart> control with the intent of dragging it to a new position, it is common to change the rendering of the selected control, for example by changing the color of its border or background while it is selected.  \n  \n> [!NOTE]\n>  For more information on consuming events, see [How to: Consume Events in a Web Forms Application](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  id: SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: WebPartManager.SelectedWebPartChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs during the process of changing which <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server control is currently selected on a Web page.
  remarks: "This event can be used in conjunction with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> method. Page developers can create an event handler in their code by adding the `OnSelectedWebPartChanging` attribute to the `<asp:webpartmanager>` element in a page, and setting the value of the attribute to the name of a custom method that will handle the event.  \n  \n This event is raised during the process of beginning or ending a connection between controls, and when beginning and ending an edit of a control. For details, see the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> method.  \n  \n Normally, when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> event is raised as a direct result of a user's action that changes the selected control, the event can be cancelled. However, there is a scenario in which the event cannot be cancelled. If a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control is deleted, the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls it contains must all be closed, otherwise they would be orphaned. In this case the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control closes the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, not the user, and it must determine which control is currently selected and when to change the selection without any chance of interruption, so that it can complete the process of cleaning up all the controls. Therefore, by design the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> method cannot be cancelled in this scenario. For a related event that can be cancelled, see the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> event."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  id: SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: WebPartManager.SetPersonalizationDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Sets a flag indicating that custom personalization data for the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control has changed.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> method sets a flag that ultimately causes the personalization components in the Web Parts control set to save the updated personalization data. For more information on the scenarios that can cause changes to the personalization data tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, see the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> property.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A> method cannot be called directly from your code, and cannot be overridden, because it is used internally by the Web Parts control set as part of the Web Parts personalization feature."
  syntax:
    content: protected void SetPersonalizationDirty ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: WebPartManager.SetSelectedWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Sets the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart"></xref> property value equal to the currently selected <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A> method is called during the processes that begin or end editing of the control specified by the `webPart` parameter, and those that begin or end a connection that includes `webPart`.  \n  \n At the beginning of the edit and connection processes, `webPart` is the control that has been selected to be edited or to enter a connection.  \n  \n At the end of the edit and connection processes, `null` is passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A> method, which results in the currently selected control no longer being selected."
  syntax:
    content: protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server control that has been selected.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: WebPartManager.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets or sets an empty string ("") so that no skin can be applied to the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> property overrides the inherited <xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName> property to prevent the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, which is an invisible control, from using skins. The implementation of the property prevents a skin from being assigned by always returning an empty string from the `get` accessor, and always throwing an exception if there is an attempt to set a value in the `set` accessor.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public override string SkinID { get; set; }
    return:
      type: System.String
      description: An empty string that prevents the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control from having a skin assigned to it.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: An attempt was made to set the property value.
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  id: StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: WebPartManager.StaticConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a reference to the collection of all <xref href="System.Web.UI.WebControls.WebParts.WebPartConnection"></xref> objects on a Web page that are defined as static connections.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property is used by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to track and manage all static connections on a page. A static connection, in contrast with a dynamic connection, does not need to be added to a page every time the page is rendered.  \n  \n The collection referenced by this property contains all the static connections that exist on the page, whether they are created programmatically or specified with an `<asp:webpartconnection>` element in the page's markup."
  example:
  - "The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need to obtain the first two parts of the example--the custom user control and the source code for the custom controls and interface--from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. That topic also explains your options for compiling the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The third part of the code example is the Web page. The declarative markup for the page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  -->  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: >-
      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]

      public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartConnectionCollection"></xref> that contains all the static connections on the page.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  exceptions: []
  attributes:
  - type: System.Web.UI.PersistenceModeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  id: SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: WebPartManager.SupportedDisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a read-only collection of all display modes that are available on a particular Web page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property contains only the display modes that are actually available on a page, given the kinds of zone controls present on the page.  \n  \n> [!NOTE]\n>  Display modes can be disabled, and when a display mode is disabled, it is not added to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> collection, even when the corresponding type of zone that supports that display mode is present on the page.  \n  \n Browse mode and design mode are always supported. The display modes that can vary are the edit, catalog, and connect modes. Each of these display modes is associated with a particular type of <xref:System.Web.UI.WebControls.WebParts.ToolZone> control. It is the presence of that specially typed zone on a Web page that causes a particular display mode to be added to the collection referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property. For example, if a Web page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone but not a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, then the edit display mode is one of the supported modes on that page, but the catalog display mode is not supported.  \n  \n> [!NOTE]\n>  The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property differs from the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> property, which references a collection containing all the display modes that are available to the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, even those that are not supported on a particular page."
  example:
  - "The following code example shows the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property. The code uses this property to populate the list with only the display modes available in the current Web page.  \n  \n There are three supported display modes on this page: browse, design, and edit. The first two are always available, and the edit mode is available in this code example because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control. The catalog and connect display modes are not shown, because their corresponding zones are not on this page.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/CS/wpmgrSuppDisplayModescs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/VB/wpmgrSuppDisplayModesvb.aspx#1)]  -->  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control."
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection"></xref> that contains the set of <xref href="System.Web.UI.WebControls.WebParts.WebPartDisplayMode"></xref> objects available on a specific Web page.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: WebPartManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Applies personalization state data to the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control, and calls the base method to enable tracking changes to the view-state data for the control.
  remarks: The changes to the view-state data are stored in a <xref:System.Web.UI.StateBag> object, and can be accessed through the control's <xref:System.Web.UI.Control.ViewState%2A> property.
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  id: Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: WebPartManager.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a value that enables child controls to be visible.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control overrides the base <xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName> property to always return a value of `true` for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> property. Even though the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control itself is not visible, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> property needs to be set to `true` so that all its child controls are visible by default.  \n  \n If you try to set the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> property, it always generates an error because the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has overridden the base property behavior and prevents assigning any value to the property.  \n  \n This property is not bindable in visual designers, but is bindable at runtime. For more information, see <xref:System.ComponentModel.BindableAttribute>."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.Browsable(false)]

      public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether a <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control and its child controls are visible. `true` in all cases.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: An attempt was made to assign a value to the property.
  attributes:
  - type: System.ComponentModel.BindableAttribute
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  id: WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: WebPartManager.WebPartAdded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs after a dynamic <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or other server control has been added to a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone, to indicate that the control was added successfully.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> event is useful for indicating that a dynamic control (a control added programmatically, as opposed to being declared in page markup) was successfully added to a zone. In conjunction with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A> method, the event provides developers with a way to update the user interface (UI) or otherwise notify users that a control was successfully added.
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  id: WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: WebPartManager.WebPartAdding
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs during the process of adding a dynamic <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or other server control to a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> method after the process of adding a control to a zone has begun. This event provides an opportunity to cancel the process before it is complete. If the adding process is successful, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> event.  \n  \n Page developers can provide custom handlers for the event by adding the `OnWebPartAdding` attribute to the `<asp:webpartmanager>` element in a page, and assigning a custom method name to the attribute."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  id: WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: WebPartManager.WebPartClosed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs when a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control (or server or user control) is removed from a page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> event indicates that a control has been successfully closed, either by a user or programmatically. To close a <xref:System.Web.UI.WebControls.WebParts.WebPart> control means to remove it from a page so that it is not rendered, and also to place it in a special holding object called a page catalog. A page catalog, which corresponds to the <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control, maintains references to closed <xref:System.Web.UI.WebControls.WebParts.WebPart> controls for each page. If a <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> control is declared on a page within a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, users can switch a page into catalog display mode, and add back to a page any controls that were previously closed.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> event is associated with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A> method, which both raises the event and provides a handler for it.  \n  \n Page developers can add a custom handler for the event by adding an `OnWebPartClosed` attribute to the `<asp:webpartmanager>` element in a page, and then assigning a custom method name to the attribute."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  id: WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: WebPartManager.WebPartClosing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs during the process of removing a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> control (or server or user control) from a page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> method when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is in the process of closing a control. If the removal of the control is successful, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> event.  \n  \n Page developers can provide a custom handler for the event by adding the `OnWebPartClosed` attribute to the <`asp:webpartmanager>` element in a page, and assigning a custom method name to the attribute.  \n  \n Normally, when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> event is raised as a direct result of a user closing a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, the event can be cancelled. However, there is a scenario in which the event cannot be cancelled. If a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control is deleted, the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls it contains must all be closed, otherwise they would be orphaned. In this case the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control closes the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, not the user. And when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is in the process of calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> method to close each control, and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> event is raised, the event cannot be cancelled (by design) because the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> needs to complete the task of cleaning up all the zone's controls."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  id: WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: WebPartManager.WebPartDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs after a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or other server control has been deleted from a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone.
  remarks: The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> event is useful for indicating that a dynamic control (a control added programmatically, as opposed to being declared in page markup) was successfully deleted from a zone. In conjunction with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A> method, the event provides developers with a way to update the user interface (UI) or otherwise notify users that a control was successfully deleted.
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  id: WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: WebPartManager.WebPartDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs during the process of permanently deleting an instance of a dynamic <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or other server control from a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> method, during the process of deleting a dynamic control (one that has been added programmatically or by a user through the Web Parts user interface). The event provides an opportunity to cancel the process before it is finished. If the deletion process is successfully completed, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> event.  \n  \n Page developers can provide custom handlers for the event by adding the `OnWebPartDeleting` attribute to the `<asp:webpartmanager>` element in a page, and assigning a custom method name to the attribute."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  id: WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: WebPartManager.WebPartMoved
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs after a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server control has been moved to a different location on a Web page.
  remarks: This event applies to both static (declared in the markup of a Web page) and dynamic controls. It is associated with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> method. Because the event is raised after a move is complete, developers can include an event handler to provide some notification to users, some validation, or some other actions. To add an event handler, you can add an `OnWebPartMoved` attribute to the `<asp:webpartmanager>` element in a page, and assign the name of a custom method to the attribute.
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  id: WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: WebPartManager.WebPartMoving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs during the process of moving a <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or other server control that is contained in a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> event is raised when a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control is being moved within its own zone, or to another zone. This can occur both when a user drags a control, and when there is a programmatic move.  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> method, and it provides an opportunity to cancel the moving process before it is complete. If the move is completed and the control placed in a new position, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> event.  \n  \n Page developers can create a custom handler for the event by adding the `OnWebPartMoving` attribute to the `<asp:webpartmanager>` element, and assigning a custom method name to the attribute."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  id: WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: WebPartManager.WebParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a reference to all <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls tracked by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control on a Web page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> property is used by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to track all <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that are contained within <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones on the page. Although the collection is read-only, you can access individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls through the collection and make changes to them programmatically.  \n  \n> [!NOTE]\n>  It is possible to have a <xref:System.Web.UI.WebControls.WebParts.WebPart> control placed on a page outside of a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone, which results in the control not being tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control or referenced in its <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> collection. However, there is little reason to use a <xref:System.Web.UI.WebControls.WebParts.WebPart> control outside of a zone, because it then loses its Web Parts functionality and acts as a normal server control.  \n  \n Any type of control that can be placed in a zone, whether a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, a standard ASP.NET control, a user control, or a custom server control, can be treated as a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time. When a control that is not a <xref:System.Web.UI.WebControls.WebParts.WebPart> control is placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone, at run time ASP.NET wraps the control with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object, so that the control can behave as a true <xref:System.Web.UI.WebControls.WebParts.WebPart> control. Therefore, by using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> property, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control can track any type of server control, regardless of whether it derives from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that in the declarative markup for the Web page, within the `<asp:webpartzone>` element there are two standard ASP.NET server controls. Although these do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, because they are in a zone they will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, and thus will be included in the collection referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> property. You could also add custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, user controls, or custom server controls in this zone, and they would be handled the same way.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_WebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/CS/wpmgrWebPartsCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_WebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/VB/wpmgrWebPartsVB.aspx#1)]  -->  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **WebPart Count** button, the code uses the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> property to return the count of controls in the collection. If you click the **Hide Calendar Title** button, the code changes the calendar so that it renders with only a border and not a title."
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCollection
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartCollection"></xref> that contains references to a set of <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  id: WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: WebPartManager.WebPartsConnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs after a specific connection has been established between <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls (or server or user controls).
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> event is associated with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> method. The event is useful because after you know that a connection is complete, you might want to inform the user of the fact, or even change the user interface (UI) of the page. For example, you might want to display some graphic image that suggests a successful connection between two controls, or display a brief message, and then change the page display mode back to browse mode.  \n  \n Page developers can associate a custom event handler with this event by adding the `OnWebPartsConnected` attribute to the `<asp:webpartmanager>` element in the page, and assigning a custom method name to the attribute."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  id: WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: WebPartManager.WebPartsConnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs during the process of creating a connection between <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> controls (or server or user controls placed in a <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zone).
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> method, and it signals that the connection process has begun (for example, a user has selected a control and clicked a connect verb), but is not yet completed. The event provides an opportunity to cancel a connection before it is complete. If the connection is successfully completed, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> event.  \n  \n Page developers can add a custom handler for the event by adding the `OnWebPartsConnecting` attribute to the `<asp:webpartmanager>` element, and assigning a custom method name to the attribute."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  id: WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: WebPartManager.WebPartsDisconnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs after a connection between two <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server controls has been terminated.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> event is associated with the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> method. The event is useful because after you know that a connection is terminated, you might want to inform the user, perform some cleanup actions in the code, or make other changes in the user interface (UI).  \n  \n Page developers can associate a custom event handler with this event by adding the `OnWebPartsDisConnected` attribute to the `<asp:webpartmanager>` element in the page, and assigning a custom method name to the attribute."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  commentId: E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  id: WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: WebPartManager.WebPartsDisconnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Occurs during the process of ending the connection between previously connected <xref href="System.Web.UI.WebControls.WebParts.WebPart"></xref> or server controls.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> method, and it signals the fact that a user has clicked a disconnect verb, or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method has otherwise been called. The event provides an opportunity to cancel the process of ending a connection before it is complete. If the connection is ended successfully, this event is followed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> event.  \n  \n Page developers can add a custom handler for the event by adding the `OnWebPartsDisconnecting` attribute to the `<asp:webpartmanager>` element, and assigning a custom method name to the attribute.  \n  \n Normally, when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event is raised as a direct result of a user's action that ends a connection, the event can be cancelled. However, there are several scenarios in which the event cannot be cancelled. The first scenario is, if a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control is deleted, the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls it contains must all be closed, otherwise they would be orphaned. In this case the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control closes the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, not the user, and it must also be able to terminate the connections of any connected controls without any chance of interruption, so that it can complete the process of cleaning up and closing all the controls. Therefore, by design the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> method cannot be cancelled in this scenario. For a related event that can be cancelled, see the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> event.  \n  \n The second scenario in which the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event cannot be cancelled is when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> method is called (this called during each request to a page, for example), and there is some type of conflict in the existing connections on a page. For example, perhaps a user connects control x to control y, but a shared user connects control x to control z, and yet control x is not allowed to form multiple connections. In this case, the individual user's settings for the connection take precedence, and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control resolves the conflict by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> method and ending the connection between x and z for the particular user. Because this disconnection is essential to resolving the conflict, by design the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event cannot be cancelled in this scenario.  \n  \n The third scenario in which the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> method cannot be cancelled is when a <xref:System.Web.UI.WebControls.WebParts.WebPart> or server control that is currently connected is either deleted or closed. Because the control is definitely going to be removed from the page, it is a logical necessity to remove its connection. Therefore, when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control invokes the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> method, which in turn raises the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> event, by design there is no possibility of canceling the event."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  id: Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: WebPartManager.Zones
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a reference to a collection of all the <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zones on a Web page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> property is used by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to track the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones on a Web page. Note that the property does not reference all types of zones; it references only zones that derive from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class, including <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zones.  \n  \n Although the collection referenced by the property is read-only, you can use it to access the individual objects in the collection and work with them programmatically."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone controls. Notice that in the declarative markup for the Web page, there are two `<asp:webpartzone>` elements, each containing a server control. In the `<script>` section of the page, the code uses the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> property to access the individual zones, listing all the zone IDs and then changing the background color on the second zone.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_Zones#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/CS/wpmgrzonescs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_Zones#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/VB/wpmgrzonesvb.aspx#1)]  -->  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **List Zone IDs** button, the code uses the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> property to list the IDs of all zones in the collection. If you click the **Change Zone BackColor** button, the code changes the background color of the second zone."
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
      description: A <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneCollection"></xref> that references a set of <xref href="System.Web.UI.WebControls.WebParts.WebPartZoneBase"></xref> zones.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  commentId: P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IPersonalizable.IsDirty
  nameWithType: WebPartManager.IPersonalizable.IsDirty
  fullName: WebPartManager.IPersonalizable.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Gets a value that indicates whether custom personalization state data managed by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control has changed on a Web page.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> property provides a way for callers to determine whether personalization state data that is managed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has changed. When users personalize page-level details, for example by changing page layout, creating or deleting connections, and adding or deleting controls, the personalization data managed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control changes. This is a pass-through method that returns to callers the value of the protected <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A> property, which cannot be directly accessed by callers.  \n  \n> [!NOTE]\n>  The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> property does not indicate whether personalizable property values, or individual properties that affect the appearance of individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, have changed. Control-level personalization is tracked for each control individually. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> property indicates only whether personalization data that is at the page level and is managed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has changed.  \n  \n The following list describes some common instances of personalization that would cause the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> property to return a value of `true`, indicating that the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has some changed personalization data:  \n  \n-   Closing a static <xref:System.Web.UI.WebControls.WebParts.WebPart> control (or server or user control) on a page.  \n  \n-   Restoring a closed static <xref:System.Web.UI.WebControls.WebParts.WebPart> control from a page catalog back to a page.  \n  \n-   Moving any control within its zone or to another zone.  \n  \n-   Adding a control from a catalog of <xref:System.Web.UI.WebControls.WebParts.WebPart> or server controls, or adding a control programmatically.  \n  \n-   Creating a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, either programmatically or by using the connection user interface (UI).  \n  \n-   Deleting a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, either programmatically or by using the connection UI.  \n  \n To access this property value, you must cast the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control instance to the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interface; you can then read the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> property value."
  example:
  - "The following code example demonstrates a simple usage of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> property, to indicate some common page personalization instances that cause a <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control's personalization data to change.  \n  \n The code example has four parts:  \n  \n-   A user control that allows you to change display modes on a page that contains Web Parts controls.  \n  \n-   A source file that contains the code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an interface.  \n  \n-   A Web page that hosts all the controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  \n  \n The second part of the example is the source file with the custom controls and the interface. Notice that the `IZipCode` interface exposes one method, and that this method as implemented in the custom `ZipCodeWebPart` control serves as a callback method to enable `ZipCodeWebPart` to act as a provider in a connection scenario. The other control, `WeatherWebPart`, acts as the consumer control in a connection; it can consume the particular interface provided by `ZipCodeWebPart`. In a real application, `WeatherWebPart` could consume a personalized ZIP Code value from the provider, and then provide graphical weather information to users.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation; therefore, notice that the `Register` directive for this component at the top of the Web page contains only `TagPrefix` and `Namespace` attributes, without an `Assembly` attribute. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  \n  \n [!code-csharp[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/ZipCodeComponent.cs#2)]\n [!code-vb[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/ZipCodeComponent.vb#2)]  \n  \n The third part of the code example is the Web page. Notice that it contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zones, with the first one containing the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. There is also a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, which contains a standard <xref:System.Web.UI.WebControls.Calendar> control that users can add to the page. The `<asp:connectionszone>` element provides a connection UI for users to create connections between controls. In the `Page_PreRender` method, notice that it checks to see whether the personalization data has changed and, if so, updates the text of `Label1`.  \n  \n <!-- TODO: review snippet reference [!code-csharp[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/wpmgrIsDirtyCS.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/wpmgrIsDirtyVB.aspx#1)]  -->  \n  \n After you load the page in a browser, try to create some of the scenarios listed in the Remarks section of this topic that will change the personalization data. As you make various changes, when a change involves one of the personalization scenarios tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, the text of the `Label1` control is displayed to indicate that personalization data has changed. For example, you can:  \n  \n-   Create a connection between controls by clicking the **Connect WebPart Controls** button.  \n  \n-   Use the **Display Mode** drop-down list control to switch the page to catalog mode, and add the **My Calendar** control to the second <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n-   Change the page back to browse mode, click on the verbs menu (shown with an arrow symbol in the title bar) for the **My Calendar** control, and select **Close** to close it and add it to the page catalog.  \n  \n-   Return the page to catalog mode, and add the **My Calendar** control back to the page.  \n  \n-   Use the **Display Mode** control to switch the page to design mode, and rearrange the layout of the controls by dragging one or more of them to another zone, or to a different position in the same zone."
  syntax:
    content: bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether the personalization state data has changed.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.IPersonalizable.Load(PersonalizationDictionary)
  fullName: WebPartManager.IPersonalizable.Load(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Returns previously saved custom personalization state data that needs to be loaded to the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control.
  remarks: "This method is an implementation of the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName> method, which provides a way for the Web Parts control set to directly access the protected <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName> method. When this method is called, it stores the custom personalized data that is managed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and that was previously saved in the permanent data store for use later in the initialization process.  \n  \n> [!NOTE]\n>  In most cases, page and control developer code does not need to call this method, because it is primarily used by the Web Parts control set as its mechanism for retrieving personalization data."
  syntax:
    content: void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: A <xref href="System.Web.UI.WebControls.WebParts.PersonalizationDictionary"></xref> that contains the state data to be loaded.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  commentId: M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.IPersonalizable.Save(PersonalizationDictionary)
  fullName: WebPartManager.IPersonalizable.Save(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: Saves custom personalization state data that is managed by the <xref href="System.Web.UI.WebControls.WebParts.WebPartManager"></xref> control.
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A> method is an implementation of the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName> method, which provides a way for the Web Parts control set to directly access the protected <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName> method. When this method is called, it saves all personalized data that is managed by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to the permanent data store configured for a Web Parts application.  \n  \n> [!NOTE]\n>  In most cases, page and control developer code does not need to call this method, because it is primarily used by the Web Parts control set as its mechanism for saving personalization data."
  syntax:
    content: void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: A <xref href="System.Web.UI.WebControls.WebParts.PersonalizationDictionary"></xref> that contains the state data to be saved.
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.IO.EndOfStreamException
  parent: System.IO
  isExternal: false
  name: EndOfStreamException
  nameWithType: EndOfStreamException
  fullName: System.IO.EndOfStreamException
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: WebPartManager.WebPartManager()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: WebPartManager.ActivateConnections()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart(WebPart, WebPartZoneBase, Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart, WebPartZoneBase, Int32)
  fullName: WebPartManager.AddWebPart(WebPart, WebPartZoneBase, Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneBase
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneBase
  nameWithType: WebPartZoneBase
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneBase
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: WebPartManager.AuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventHandler
  nameWithType: WebPartAuthorizationEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: TransformerTypeCollection
  nameWithType: TransformerTypeCollection
  fullName: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: WebPartManager.BeginWebPartConnecting(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: WebPartManager.BeginWebPartEditing(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: WebPartManager.BrowseDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
  fullName: WebPartManager.CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPoint
  nameWithType: ProviderConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPoint
  nameWithType: ConsumerConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
  fullName: WebPartManager.CanConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartTransformer
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartTransformer
  nameWithType: WebPartTransformer
  fullName: System.Web.UI.WebControls.WebParts.WebPartTransformer
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: WebPartManager.CatalogDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: WebPartManager.CheckRenderClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: WebPartManager.CloseProviderWarning
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: WebPartManager.CloseWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: WebPartManager.ConnectDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionCollection
  nameWithType: WebPartConnectionCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: WebPartManager.ConnectionsActivated
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: WebPartManager.ConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
  fullName: WebPartManager.ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnection
  nameWithType: WebPartConnection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
  fullName: WebPartManager.ConnectWebParts(WebPart, ProviderConnectionPoint, WebPart, ConsumerConnectionPoint, WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: WebPartManager.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: WebPartManager.CopyWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: WebPartManager.CreateAvailableTransformers()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: WebPartManager.CreateControlCollection()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: WebPartManager.CreateDisplayModes()
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCollection
  nameWithType: WebPartDisplayModeCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: WebPartManager.CreateDynamicConnectionID()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: WebPartManager.CreateDynamicWebPartID(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart(String, String, String, String, String)
  nameWithType: WebPartManager.CreateErrorWebPart(String, String, String, String, String)
  fullName: WebPartManager.CreateErrorWebPart(String, String, String, String, String)
- uid: System.Web.UI.WebControls.WebParts.ErrorWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ErrorWebPart
  nameWithType: ErrorWebPart
  fullName: System.Web.UI.WebControls.WebParts.ErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: WebPartManager.CreatePersonalization()
- uid: System.Web.UI.WebControls.WebParts.WebPartPersonalization
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartPersonalization
  nameWithType: WebPartPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: WebPartManager.CreateWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.GenericWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: GenericWebPart
  nameWithType: GenericWebPart
  fullName: System.Web.UI.WebControls.WebParts.GenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: WebPartManager.DeleteWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: WebPartManager.DesignDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: WebPartManager.DisconnectWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: WebPartManager.DisconnectWebParts(WebPartConnection)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: WebPartManager.DisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventHandler
  nameWithType: WebPartDisplayModeEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: WebPartManager.DisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventHandler
  nameWithType: WebPartDisplayModeCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: WebPartManager.EditDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: WebPartManager.EndWebPartConnecting()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: WebPartManager.EndWebPartEditing()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart(WebPart, XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart, XmlWriter)
  fullName: WebPartManager.ExportWebPart(WebPart, XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: WebPartManager.Focus()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: WebPartManager.GetConsumerConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPointCollection
  nameWithType: ConsumerConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: WebPartManager.GetCurrentWebPartManager(Page)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: WebPartManager.GetDisplayTitle(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: WebPartManager.GetExportUrl(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: WebPartManager.GetGenericWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: WebPartManager.GetProviderConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPointCollection
  nameWithType: ProviderConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart(XmlReader, String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader, String)
  fullName: WebPartManager.ImportWebPart(XmlReader, String)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManagerInternals
  nameWithType: WebPartManagerInternals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: WebPartManager.IsAuthorized(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(Type, String, String, Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type, String, String, Boolean)
  fullName: WebPartManager.IsAuthorized(Type, String, String, Boolean)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: WebPartManager.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationDictionary
  nameWithType: PersonalizationDictionary
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: WebPartManager.MediumPermissionSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart(WebPart, WebPartZoneBase, Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart, WebPartZoneBase, Int32)
  fullName: WebPartManager.MoveWebPart(WebPart, WebPartZoneBase, Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventArgs
  nameWithType: WebPartAuthorizationEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: WebPartManager.OnConnectionsActivated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: WebPartManager.OnConnectionsActivating(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventArgs
  nameWithType: WebPartDisplayModeEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventArgs
  nameWithType: WebPartDisplayModeCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: WebPartManager.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: WebPartManager.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventArgs
  nameWithType: WebPartEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventArgs
  nameWithType: WebPartCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: WebPartManager.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: WebPartManager.OnWebPartAdded(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventArgs
  nameWithType: WebPartAddingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: WebPartManager.OnWebPartClosed(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: WebPartManager.OnWebPartMoved(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventArgs
  nameWithType: WebPartMovingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventArgs
  nameWithType: WebPartConnectionsEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventArgs
  nameWithType: WebPartConnectionsCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: WebPartManager.RegisterClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: WebPartManager.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: WebPartManager.SaveControlState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: WebPartManager.SelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventHandler
  nameWithType: WebPartEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: WebPartManager.SelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventHandler
  nameWithType: WebPartCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: WebPartManager.SetPersonalizationDirty()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: WebPartManager.SetSelectedWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: WebPartManager.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: WebPartManager.WebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: WebPartManager.WebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventHandler
  nameWithType: WebPartAddingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: WebPartManager.WebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: WebPartManager.WebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: WebPartManager.WebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: WebPartManager.WebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: WebPartManager.WebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: WebPartManager.WebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventHandler
  nameWithType: WebPartMovingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCollection
  nameWithType: WebPartCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: WebPartManager.WebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventHandler
  nameWithType: WebPartConnectionsEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: WebPartManager.WebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventHandler
  nameWithType: WebPartConnectionsCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: WebPartManager.WebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: WebPartManager.WebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: WebPartManager.Zones
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneCollection
  nameWithType: WebPartZoneCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IPersonalizable.IsDirty
  nameWithType: WebPartManager.IPersonalizable.IsDirty
  fullName: WebPartManager.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.IPersonalizable.Load(PersonalizationDictionary)
  fullName: WebPartManager.IPersonalizable.Load(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.IPersonalizable.Save(PersonalizationDictionary)
  fullName: WebPartManager.IPersonalizable.Save(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts
  nameWithType: WebPartManager.CanConnectWebParts
  fullName: WebPartManager.CanConnectWebParts
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts
  nameWithType: WebPartManager.ConnectWebParts
  fullName: WebPartManager.ConnectWebParts
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized
  nameWithType: WebPartManager.IsAuthorized
  fullName: WebPartManager.IsAuthorized
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager.WebPartManager
  fullName: WebPartManager.WebPartManager
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections
  nameWithType: WebPartManager.ActivateConnections
  fullName: WebPartManager.ActivateConnections
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart
  nameWithType: WebPartManager.AddWebPart
  fullName: WebPartManager.AddWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: WebPartManager.AvailableTransformers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting
  nameWithType: WebPartManager.BeginWebPartConnecting
  fullName: WebPartManager.BeginWebPartConnecting
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing
  nameWithType: WebPartManager.BeginWebPartEditing
  fullName: WebPartManager.BeginWebPartEditing
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript
  nameWithType: WebPartManager.CheckRenderClientScript
  fullName: WebPartManager.CheckRenderClientScript
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: WebPartManager.CloseProviderWarning
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart
  nameWithType: WebPartManager.CloseWebPart
  fullName: WebPartManager.CloseWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: WebPartManager.Connections
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: WebPartManager.Controls
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart
  nameWithType: WebPartManager.CopyWebPart
  fullName: WebPartManager.CopyWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers
  nameWithType: WebPartManager.CreateAvailableTransformers
  fullName: WebPartManager.CreateAvailableTransformers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection
  nameWithType: WebPartManager.CreateControlCollection
  fullName: WebPartManager.CreateControlCollection
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes
  nameWithType: WebPartManager.CreateDisplayModes
  fullName: WebPartManager.CreateDisplayModes
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID
  nameWithType: WebPartManager.CreateDynamicConnectionID
  fullName: WebPartManager.CreateDynamicConnectionID
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID
  nameWithType: WebPartManager.CreateDynamicWebPartID
  fullName: WebPartManager.CreateDynamicWebPartID
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart
  nameWithType: WebPartManager.CreateErrorWebPart
  fullName: WebPartManager.CreateErrorWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization
  nameWithType: WebPartManager.CreatePersonalization
  fullName: WebPartManager.CreatePersonalization
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart
  nameWithType: WebPartManager.CreateWebPart
  fullName: WebPartManager.CreateWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: WebPartManager.DeleteWarning
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart
  nameWithType: WebPartManager.DeleteWebPart
  fullName: WebPartManager.DeleteWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart
  nameWithType: WebPartManager.DisconnectWebPart
  fullName: WebPartManager.DisconnectWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts
  nameWithType: WebPartManager.DisconnectWebParts
  fullName: WebPartManager.DisconnectWebParts
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: WebPartManager.DisplayMode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: WebPartManager.DisplayModes
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: WebPartManager.DynamicConnections
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: WebPartManager.EnableClientScript
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: WebPartManager.EnableTheming
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting
  nameWithType: WebPartManager.EndWebPartConnecting
  fullName: WebPartManager.EndWebPartConnecting
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing
  nameWithType: WebPartManager.EndWebPartEditing
  fullName: WebPartManager.EndWebPartEditing
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: WebPartManager.ExportSensitiveDataWarning
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart
  nameWithType: WebPartManager.ExportWebPart
  fullName: WebPartManager.ExportWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus
  nameWithType: WebPartManager.Focus
  fullName: WebPartManager.Focus
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints
  nameWithType: WebPartManager.GetConsumerConnectionPoints
  fullName: WebPartManager.GetConsumerConnectionPoints
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager
  nameWithType: WebPartManager.GetCurrentWebPartManager
  fullName: WebPartManager.GetCurrentWebPartManager
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle
  nameWithType: WebPartManager.GetDisplayTitle
  fullName: WebPartManager.GetDisplayTitle
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl
  nameWithType: WebPartManager.GetExportUrl
  fullName: WebPartManager.GetExportUrl
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart
  nameWithType: WebPartManager.GetGenericWebPart
  fullName: WebPartManager.GetGenericWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints
  nameWithType: WebPartManager.GetProviderConnectionPoints
  fullName: WebPartManager.GetProviderConnectionPoints
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart
  nameWithType: WebPartManager.ImportWebPart
  fullName: WebPartManager.ImportWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: WebPartManager.Internals
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: WebPartManager.IsCustomPersonalizationStateDirty
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState
  nameWithType: WebPartManager.LoadControlState
  fullName: WebPartManager.LoadControlState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState
  nameWithType: WebPartManager.LoadCustomPersonalizationState
  fullName: WebPartManager.LoadCustomPersonalizationState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: WebPartManager.MediumPermissionSet
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: WebPartManager.MinimalPermissionSet
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart
  nameWithType: WebPartManager.MoveWebPart
  fullName: WebPartManager.MoveWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart
  nameWithType: WebPartManager.OnAuthorizeWebPart
  fullName: WebPartManager.OnAuthorizeWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated
  nameWithType: WebPartManager.OnConnectionsActivated
  fullName: WebPartManager.OnConnectionsActivated
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating
  nameWithType: WebPartManager.OnConnectionsActivating
  fullName: WebPartManager.OnConnectionsActivating
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged
  nameWithType: WebPartManager.OnDisplayModeChanged
  fullName: WebPartManager.OnDisplayModeChanged
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging
  nameWithType: WebPartManager.OnDisplayModeChanging
  fullName: WebPartManager.OnDisplayModeChanging
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit
  nameWithType: WebPartManager.OnInit
  fullName: WebPartManager.OnInit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender
  nameWithType: WebPartManager.OnPreRender
  fullName: WebPartManager.OnPreRender
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged
  nameWithType: WebPartManager.OnSelectedWebPartChanged
  fullName: WebPartManager.OnSelectedWebPartChanged
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging
  nameWithType: WebPartManager.OnSelectedWebPartChanging
  fullName: WebPartManager.OnSelectedWebPartChanging
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload
  nameWithType: WebPartManager.OnUnload
  fullName: WebPartManager.OnUnload
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded
  nameWithType: WebPartManager.OnWebPartAdded
  fullName: WebPartManager.OnWebPartAdded
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding
  nameWithType: WebPartManager.OnWebPartAdding
  fullName: WebPartManager.OnWebPartAdding
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed
  nameWithType: WebPartManager.OnWebPartClosed
  fullName: WebPartManager.OnWebPartClosed
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing
  nameWithType: WebPartManager.OnWebPartClosing
  fullName: WebPartManager.OnWebPartClosing
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted
  nameWithType: WebPartManager.OnWebPartDeleted
  fullName: WebPartManager.OnWebPartDeleted
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting
  nameWithType: WebPartManager.OnWebPartDeleting
  fullName: WebPartManager.OnWebPartDeleting
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved
  nameWithType: WebPartManager.OnWebPartMoved
  fullName: WebPartManager.OnWebPartMoved
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving
  nameWithType: WebPartManager.OnWebPartMoving
  fullName: WebPartManager.OnWebPartMoving
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected
  nameWithType: WebPartManager.OnWebPartsConnected
  fullName: WebPartManager.OnWebPartsConnected
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting
  nameWithType: WebPartManager.OnWebPartsConnecting
  fullName: WebPartManager.OnWebPartsConnecting
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected
  nameWithType: WebPartManager.OnWebPartsDisconnected
  fullName: WebPartManager.OnWebPartsDisconnected
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting
  nameWithType: WebPartManager.OnWebPartsDisconnecting
  fullName: WebPartManager.OnWebPartsDisconnecting
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: WebPartManager.Personalization
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript
  nameWithType: WebPartManager.RegisterClientScript
  fullName: WebPartManager.RegisterClientScript
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render
  nameWithType: WebPartManager.Render
  fullName: WebPartManager.Render
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState
  nameWithType: WebPartManager.SaveControlState
  fullName: WebPartManager.SaveControlState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState
  nameWithType: WebPartManager.SaveCustomPersonalizationState
  fullName: WebPartManager.SaveCustomPersonalizationState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: WebPartManager.SelectedWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty
  nameWithType: WebPartManager.SetPersonalizationDirty
  fullName: WebPartManager.SetPersonalizationDirty
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart
  nameWithType: WebPartManager.SetSelectedWebPart
  fullName: WebPartManager.SetSelectedWebPart
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: WebPartManager.SkinID
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: WebPartManager.StaticConnections
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: WebPartManager.SupportedDisplayModes
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState
  nameWithType: WebPartManager.TrackViewState
  fullName: WebPartManager.TrackViewState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: WebPartManager.Visible
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: WebPartManager.WebParts
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: WebPartManager.Zones
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load
  fullName: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save
  fullName: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls.WebParts/WebPartManager.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Web.UI.Control.Adapter
  parent: System.Web.UI.Control
  isExternal: false
  name: Adapter
  nameWithType: Control.Adapter
  fullName: Control.Adapter
- uid: System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  parent: System.Web.UI.Control
  isExternal: false
  name: AddedControl(Control, Int32)
  nameWithType: Control.AddedControl(Control, Int32)
  fullName: Control.AddedControl(Control, Int32)
- uid: System.Web.UI.Control.AddParsedSubObject(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: Control.AddParsedSubObject(Object)
  fullName: Control.AddParsedSubObject(Object)
- uid: System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  parent: System.Web.UI.Control
  isExternal: false
  name: ApplyStyleSheetSkin(Page)
  nameWithType: Control.ApplyStyleSheetSkin(Page)
  fullName: Control.ApplyStyleSheetSkin(Page)
- uid: System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  parent: System.Web.UI.Control
  isExternal: false
  name: AppRelativeTemplateSourceDirectory
  nameWithType: Control.AppRelativeTemplateSourceDirectory
  fullName: Control.AppRelativeTemplateSourceDirectory
- uid: System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: BeginRenderTracing(TextWriter, Object)
  nameWithType: Control.BeginRenderTracing(TextWriter, Object)
  fullName: Control.BeginRenderTracing(TextWriter, Object)
- uid: System.Web.UI.Control.BindingContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: BindingContainer
  nameWithType: Control.BindingContainer
  fullName: Control.BindingContainer
- uid: System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  parent: System.Web.UI.Control
  isExternal: false
  name: BuildProfileTree(String, Boolean)
  nameWithType: Control.BuildProfileTree(String, Boolean)
  fullName: Control.BuildProfileTree(String, Boolean)
- uid: System.Web.UI.Control.ChildControlsCreated
  parent: System.Web.UI.Control
  isExternal: false
  name: ChildControlsCreated
  nameWithType: Control.ChildControlsCreated
  fullName: Control.ChildControlsCreated
- uid: System.Web.UI.Control.ClearCachedClientID
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearCachedClientID()
  nameWithType: Control.ClearCachedClientID()
  fullName: Control.ClearCachedClientID()
- uid: System.Web.UI.Control.ClearChildControlState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildControlState()
  nameWithType: Control.ClearChildControlState()
  fullName: Control.ClearChildControlState()
- uid: System.Web.UI.Control.ClearChildState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildState()
  nameWithType: Control.ClearChildState()
  fullName: Control.ClearChildState()
- uid: System.Web.UI.Control.ClearChildViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildViewState()
  nameWithType: Control.ClearChildViewState()
  fullName: Control.ClearChildViewState()
- uid: System.Web.UI.Control.ClearEffectiveClientIDMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearEffectiveClientIDMode()
  nameWithType: Control.ClearEffectiveClientIDMode()
  fullName: Control.ClearEffectiveClientIDMode()
- uid: System.Web.UI.Control.ClientID
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientID
  nameWithType: Control.ClientID
  fullName: Control.ClientID
- uid: System.Web.UI.Control.ClientIDMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDMode
  nameWithType: Control.ClientIDMode
  fullName: Control.ClientIDMode
- uid: System.Web.UI.Control.ClientIDSeparator
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDSeparator
  nameWithType: Control.ClientIDSeparator
  fullName: Control.ClientIDSeparator
- uid: System.Web.UI.Control.Context
  parent: System.Web.UI.Control
  isExternal: false
  name: Context
  nameWithType: Control.Context
  fullName: Control.Context
- uid: System.Web.UI.Control.CreateChildControls
  parent: System.Web.UI.Control
  isExternal: false
  name: CreateChildControls()
  nameWithType: Control.CreateChildControls()
  fullName: Control.CreateChildControls()
- uid: System.Web.UI.Control.DataBind
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBind()
  nameWithType: Control.DataBind()
  fullName: Control.DataBind()
- uid: System.Web.UI.Control.DataBind(System.Boolean)
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBind(Boolean)
  nameWithType: Control.DataBind(Boolean)
  fullName: Control.DataBind(Boolean)
- uid: System.Web.UI.Control.DataBindChildren
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBindChildren()
  nameWithType: Control.DataBindChildren()
  fullName: Control.DataBindChildren()
- uid: System.Web.UI.Control.DataBinding
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBinding
  nameWithType: Control.DataBinding
  fullName: Control.DataBinding
- uid: System.Web.UI.Control.DataItemContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: DataItemContainer
  nameWithType: Control.DataItemContainer
  fullName: Control.DataItemContainer
- uid: System.Web.UI.Control.DataKeysContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: DataKeysContainer
  nameWithType: Control.DataKeysContainer
  fullName: Control.DataKeysContainer
- uid: System.Web.UI.Control.DesignMode
  parent: System.Web.UI.Control
  isExternal: false
  name: DesignMode
  nameWithType: Control.DesignMode
  fullName: Control.DesignMode
- uid: System.Web.UI.Control.Dispose
  parent: System.Web.UI.Control
  isExternal: false
  name: Dispose()
  nameWithType: Control.Dispose()
  fullName: Control.Dispose()
- uid: System.Web.UI.Control.Disposed
  parent: System.Web.UI.Control
  isExternal: false
  name: Disposed
  nameWithType: Control.Disposed
  fullName: Control.Disposed
- uid: System.Web.UI.Control.EnableViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: EnableViewState
  nameWithType: Control.EnableViewState
  fullName: Control.EnableViewState
- uid: System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: EndRenderTracing(TextWriter, Object)
  nameWithType: Control.EndRenderTracing(TextWriter, Object)
  fullName: Control.EndRenderTracing(TextWriter, Object)
- uid: System.Web.UI.Control.EnsureChildControls
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureChildControls()
  nameWithType: Control.EnsureChildControls()
  fullName: Control.EnsureChildControls()
- uid: System.Web.UI.Control.EnsureID
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureID()
  nameWithType: Control.EnsureID()
  fullName: Control.EnsureID()
- uid: System.Web.UI.Control.Events
  parent: System.Web.UI.Control
  isExternal: false
  name: Events
  nameWithType: Control.Events
  fullName: Control.Events
- uid: System.Web.UI.Control.FindControl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: FindControl(String)
  nameWithType: Control.FindControl(String)
  fullName: Control.FindControl(String)
- uid: System.Web.UI.Control.FindControl(System.String,System.Int32)
  parent: System.Web.UI.Control
  isExternal: false
  name: FindControl(String, Int32)
  nameWithType: Control.FindControl(String, Int32)
  fullName: Control.FindControl(String, Int32)
- uid: System.Web.UI.Control.GetDesignModeState
  parent: System.Web.UI.Control
  isExternal: false
  name: GetDesignModeState()
  nameWithType: Control.GetDesignModeState()
  fullName: Control.GetDesignModeState()
- uid: System.Web.UI.Control.GetRouteUrl(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(Object)
  nameWithType: Control.GetRouteUrl(Object)
  fullName: Control.GetRouteUrl(Object)
- uid: System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(RouteValueDictionary)
  fullName: Control.GetRouteUrl(RouteValueDictionary)
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(String, Object)
  nameWithType: Control.GetRouteUrl(String, Object)
  fullName: Control.GetRouteUrl(String, Object)
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(String, RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(String, RouteValueDictionary)
  fullName: Control.GetRouteUrl(String, RouteValueDictionary)
- uid: System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetUniqueIDRelativeTo(Control)
  nameWithType: Control.GetUniqueIDRelativeTo(Control)
  fullName: Control.GetUniqueIDRelativeTo(Control)
- uid: System.Web.UI.Control.HasChildViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: HasChildViewState
  nameWithType: Control.HasChildViewState
  fullName: Control.HasChildViewState
- uid: System.Web.UI.Control.HasControls
  parent: System.Web.UI.Control
  isExternal: false
  name: HasControls()
  nameWithType: Control.HasControls()
  fullName: Control.HasControls()
- uid: System.Web.UI.Control.HasEvents
  parent: System.Web.UI.Control
  isExternal: false
  name: HasEvents()
  nameWithType: Control.HasEvents()
  fullName: Control.HasEvents()
- uid: System.Web.UI.Control.ID
  parent: System.Web.UI.Control
  isExternal: false
  name: ID
  nameWithType: Control.ID
  fullName: Control.ID
- uid: System.Web.UI.Control.IdSeparator
  parent: System.Web.UI.Control
  isExternal: false
  name: IdSeparator
  nameWithType: Control.IdSeparator
  fullName: Control.IdSeparator
- uid: System.Web.UI.Control.Init
  parent: System.Web.UI.Control
  isExternal: false
  name: Init
  nameWithType: Control.Init
  fullName: Control.Init
- uid: System.Web.UI.Control.IsChildControlStateCleared
  parent: System.Web.UI.Control
  isExternal: false
  name: IsChildControlStateCleared
  nameWithType: Control.IsChildControlStateCleared
  fullName: Control.IsChildControlStateCleared
- uid: System.Web.UI.Control.IsLiteralContent
  parent: System.Web.UI.Control
  isExternal: false
  name: IsLiteralContent()
  nameWithType: Control.IsLiteralContent()
  fullName: Control.IsLiteralContent()
- uid: System.Web.UI.Control.IsTrackingViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: IsTrackingViewState
  nameWithType: Control.IsTrackingViewState
  fullName: Control.IsTrackingViewState
- uid: System.Web.UI.Control.IsViewStateEnabled
  parent: System.Web.UI.Control
  isExternal: false
  name: IsViewStateEnabled
  nameWithType: Control.IsViewStateEnabled
  fullName: Control.IsViewStateEnabled
- uid: System.Web.UI.Control.Load
  parent: System.Web.UI.Control
  isExternal: false
  name: Load
  nameWithType: Control.Load
  fullName: Control.Load
- uid: System.Web.UI.Control.LoadViewState(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: Control.LoadViewState(Object)
  fullName: Control.LoadViewState(Object)
- uid: System.Web.UI.Control.LoadViewStateByID
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadViewStateByID
  nameWithType: Control.LoadViewStateByID
  fullName: Control.LoadViewStateByID
- uid: System.Web.UI.Control.MapPathSecure(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: MapPathSecure(String)
  nameWithType: Control.MapPathSecure(String)
  fullName: Control.MapPathSecure(String)
- uid: System.Web.UI.Control.NamingContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: NamingContainer
  nameWithType: Control.NamingContainer
  fullName: Control.NamingContainer
- uid: System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnBubbleEvent(Object, EventArgs)
  nameWithType: Control.OnBubbleEvent(Object, EventArgs)
  fullName: Control.OnBubbleEvent(Object, EventArgs)
- uid: System.Web.UI.Control.OnDataBinding(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnDataBinding(EventArgs)
  nameWithType: Control.OnDataBinding(EventArgs)
  fullName: Control.OnDataBinding(EventArgs)
- uid: System.Web.UI.Control.OnLoad(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: Control.OnLoad(EventArgs)
  fullName: Control.OnLoad(EventArgs)
- uid: System.Web.UI.Control.OpenFile(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: OpenFile(String)
  nameWithType: Control.OpenFile(String)
  fullName: Control.OpenFile(String)
- uid: System.Web.UI.Control.Page
  parent: System.Web.UI.Control
  isExternal: false
  name: Page
  nameWithType: Control.Page
  fullName: Control.Page
- uid: System.Web.UI.Control.Parent
  parent: System.Web.UI.Control
  isExternal: false
  name: Parent
  nameWithType: Control.Parent
  fullName: Control.Parent
- uid: System.Web.UI.Control.PreRender
  parent: System.Web.UI.Control
  isExternal: false
  name: PreRender
  nameWithType: Control.PreRender
  fullName: Control.PreRender
- uid: System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: RaiseBubbleEvent(Object, EventArgs)
  nameWithType: Control.RaiseBubbleEvent(Object, EventArgs)
  fullName: Control.RaiseBubbleEvent(Object, EventArgs)
- uid: System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: RemovedControl(Control)
  nameWithType: Control.RemovedControl(Control)
  fullName: Control.RemovedControl(Control)
- uid: System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: Control.RenderChildren(HtmlTextWriter)
  fullName: Control.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderControl(HtmlTextWriter)
  nameWithType: Control.RenderControl(HtmlTextWriter)
  fullName: Control.RenderControl(HtmlTextWriter)
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderControl(HtmlTextWriter, ControlAdapter)
  nameWithType: Control.RenderControl(HtmlTextWriter, ControlAdapter)
  fullName: Control.RenderControl(HtmlTextWriter, ControlAdapter)
- uid: System.Web.UI.Control.RenderingCompatibility
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderingCompatibility
  nameWithType: Control.RenderingCompatibility
  fullName: Control.RenderingCompatibility
- uid: System.Web.UI.Control.ResolveAdapter
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveAdapter()
  nameWithType: Control.ResolveAdapter()
  fullName: Control.ResolveAdapter()
- uid: System.Web.UI.Control.ResolveClientUrl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveClientUrl(String)
  nameWithType: Control.ResolveClientUrl(String)
  fullName: Control.ResolveClientUrl(String)
- uid: System.Web.UI.Control.ResolveUrl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveUrl(String)
  nameWithType: Control.ResolveUrl(String)
  fullName: Control.ResolveUrl(String)
- uid: System.Web.UI.Control.SaveViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: SaveViewState()
  nameWithType: Control.SaveViewState()
  fullName: Control.SaveViewState()
- uid: System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetDesignModeState(IDictionary)
  nameWithType: Control.SetDesignModeState(IDictionary)
  fullName: Control.SetDesignModeState(IDictionary)
- uid: System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetRenderMethodDelegate(RenderMethod)
  nameWithType: Control.SetRenderMethodDelegate(RenderMethod)
  fullName: Control.SetRenderMethodDelegate(RenderMethod)
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetTraceData(Object, Object)
  nameWithType: Control.SetTraceData(Object, Object)
  fullName: Control.SetTraceData(Object, Object)
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetTraceData(Object, Object, Object)
  nameWithType: Control.SetTraceData(Object, Object, Object)
  fullName: Control.SetTraceData(Object, Object, Object)
- uid: System.Web.UI.Control.Site
  parent: System.Web.UI.Control
  isExternal: false
  name: Site
  nameWithType: Control.Site
  fullName: Control.Site
- uid: System.Web.UI.Control.TemplateControl
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateControl
  nameWithType: Control.TemplateControl
  fullName: Control.TemplateControl
- uid: System.Web.UI.Control.TemplateSourceDirectory
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateSourceDirectory
  nameWithType: Control.TemplateSourceDirectory
  fullName: Control.TemplateSourceDirectory
- uid: System.Web.UI.Control.UniqueID
  parent: System.Web.UI.Control
  isExternal: false
  name: UniqueID
  nameWithType: Control.UniqueID
  fullName: Control.UniqueID
- uid: System.Web.UI.Control.Unload
  parent: System.Web.UI.Control
  isExternal: false
  name: Unload
  nameWithType: Control.Unload
  fullName: Control.Unload
- uid: System.Web.UI.Control.ValidateRequestMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Control.ValidateRequestMode
  fullName: Control.ValidateRequestMode
- uid: System.Web.UI.Control.ViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewState
  nameWithType: Control.ViewState
  fullName: Control.ViewState
- uid: System.Web.UI.Control.ViewStateIgnoresCase
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateIgnoresCase
  nameWithType: Control.ViewStateIgnoresCase
  fullName: Control.ViewStateIgnoresCase
- uid: System.Web.UI.Control.ViewStateMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateMode
  nameWithType: Control.ViewStateMode
  fullName: Control.ViewStateMode
- uid: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  parent: System.Web.UI.Control
  isExternal: false
  name: IControlBuilderAccessor.ControlBuilder
  nameWithType: Control.IControlBuilderAccessor.ControlBuilder
  fullName: Control.IControlBuilderAccessor.ControlBuilder
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  parent: System.Web.UI.Control
  isExternal: false
  name: IControlDesignerAccessor.GetDesignModeState()
  nameWithType: Control.IControlDesignerAccessor.GetDesignModeState()
  fullName: Control.IControlDesignerAccessor.GetDesignModeState()
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: IControlDesignerAccessor.SetDesignModeState(IDictionary)
  nameWithType: Control.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  fullName: Control.IControlDesignerAccessor.SetDesignModeState(IDictionary)
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: IControlDesignerAccessor.SetOwnerControl(Control)
  nameWithType: Control.IControlDesignerAccessor.SetOwnerControl(Control)
  fullName: Control.IControlDesignerAccessor.SetOwnerControl(Control)
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  parent: System.Web.UI.Control
  isExternal: false
  name: IControlDesignerAccessor.UserData
  nameWithType: Control.IControlDesignerAccessor.UserData
  fullName: Control.IControlDesignerAccessor.UserData
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  parent: System.Web.UI.Control
  isExternal: false
  name: IDataBindingsAccessor.DataBindings
  nameWithType: Control.IDataBindingsAccessor.DataBindings
  fullName: Control.IDataBindingsAccessor.DataBindings
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  parent: System.Web.UI.Control
  isExternal: false
  name: IDataBindingsAccessor.HasDataBindings
  nameWithType: Control.IDataBindingsAccessor.HasDataBindings
  fullName: Control.IDataBindingsAccessor.HasDataBindings
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  parent: System.Web.UI.Control
  isExternal: false
  name: IExpressionsAccessor.Expressions
  nameWithType: Control.IExpressionsAccessor.Expressions
  fullName: Control.IExpressionsAccessor.Expressions
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  parent: System.Web.UI.Control
  isExternal: false
  name: IExpressionsAccessor.HasExpressions
  nameWithType: Control.IExpressionsAccessor.HasExpressions
  fullName: Control.IExpressionsAccessor.HasExpressions
- uid: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: IParserAccessor.AddParsedSubObject(Object)
  nameWithType: Control.IParserAccessor.AddParsedSubObject(Object)
  fullName: Control.IParserAccessor.AddParsedSubObject(Object)
- uid: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindDataSourceControl(Control)
  nameWithType: DynamicDataExtensions.FindDataSourceControl(Control)
  fullName: DynamicDataExtensions.FindDataSourceControl(Control)
- uid: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindFieldTemplate(Control, String)
  nameWithType: DynamicDataExtensions.FindFieldTemplate(Control, String)
  fullName: DynamicDataExtensions.FindFieldTemplate(Control, String)
- uid: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: FindMetaTable(Control)
  nameWithType: DynamicDataExtensions.FindMetaTable(Control)
  fullName: DynamicDataExtensions.FindMetaTable(Control)
- uid: System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetDefaultValues(INamingContainer)
  nameWithType: DynamicDataExtensions.GetDefaultValues(INamingContainer)
  fullName: DynamicDataExtensions.GetDefaultValues(INamingContainer)
- uid: System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: GetMetaTable(INamingContainer)
  nameWithType: DynamicDataExtensions.GetMetaTable(INamingContainer)
  fullName: DynamicDataExtensions.GetMetaTable(INamingContainer)
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: SetMetaTable(INamingContainer, MetaTable)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer, MetaTable)
  fullName: DynamicDataExtensions.SetMetaTable(INamingContainer, MetaTable)
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: SetMetaTable(INamingContainer, MetaTable, IDictionary<String,Object>)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer, MetaTable, IDictionary<String,Object>)
  fullName: DynamicDataExtensions.SetMetaTable(INamingContainer, MetaTable, IDictionary<String,Object>)
- uid: System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: SetMetaTable(INamingContainer, MetaTable, Object)
  nameWithType: DynamicDataExtensions.SetMetaTable(INamingContainer, MetaTable, Object)
  fullName: DynamicDataExtensions.SetMetaTable(INamingContainer, MetaTable, Object)
- uid: System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.DynamicDataExtensions
  isExternal: false
  name: TryGetMetaTable(INamingContainer, MetaTable)
  nameWithType: DynamicDataExtensions.TryGetMetaTable(INamingContainer, MetaTable)
  fullName: DynamicDataExtensions.TryGetMetaTable(INamingContainer, MetaTable)
- uid: System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type)
  parent: System.Web.UI.DataControlExtensions
  isExternal: false
  name: EnableDynamicData(INamingContainer, Type)
  nameWithType: DataControlExtensions.EnableDynamicData(INamingContainer, Type)
  fullName: DataControlExtensions.EnableDynamicData(INamingContainer, Type)
- uid: System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Web.UI.DataControlExtensions
  isExternal: false
  name: EnableDynamicData(INamingContainer, Type, IDictionary<String,Object>)
  nameWithType: DataControlExtensions.EnableDynamicData(INamingContainer, Type, IDictionary<String,Object>)
  fullName: DataControlExtensions.EnableDynamicData(INamingContainer, Type, IDictionary<String,Object>)
- uid: System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)
  parent: System.Web.UI.DataControlExtensions
  isExternal: false
  name: EnableDynamicData(INamingContainer, Type, Object)
  nameWithType: DataControlExtensions.EnableDynamicData(INamingContainer, Type, Object)
  fullName: DataControlExtensions.EnableDynamicData(INamingContainer, Type, Object)
- uid: System.Web.UI.INamingContainer
  parent: System.Web.UI
  isExternal: false
  name: INamingContainer
  nameWithType: INamingContainer
  fullName: System.Web.UI.INamingContainer
- uid: System.Web.UI.WebControls.WebParts.IPersonalizable
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: IPersonalizable
  nameWithType: IPersonalizable
  fullName: System.Web.UI.WebControls.WebParts.IPersonalizable
