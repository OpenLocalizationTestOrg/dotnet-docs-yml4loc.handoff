### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Timer
  commentId: T:System.Windows.Forms.Timer
  id: Timer
  children:
  - System.Windows.Forms.Timer.#ctor
  - System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)
  - System.Windows.Forms.Timer.Dispose(System.Boolean)
  - System.Windows.Forms.Timer.Enabled
  - System.Windows.Forms.Timer.Interval
  - System.Windows.Forms.Timer.OnTick(System.EventArgs)
  - System.Windows.Forms.Timer.Start
  - System.Windows.Forms.Timer.Stop
  - System.Windows.Forms.Timer.Tag
  - System.Windows.Forms.Timer.Tick
  - System.Windows.Forms.Timer.ToString
  langs:
  - csharp
  name: Timer
  nameWithType: Timer
  fullName: System.Windows.Forms.Timer
  type: Class
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Implements a timer that raises an event at user-defined intervals. This timer is optimized for use in Windows Forms applications and must be used in a window.
  remarks: "A <xref:System.Windows.Forms.Timer> is used to raise an event at user-defined intervals. This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing. It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.  \n  \n When you use this timer, use the <xref:System.Windows.Forms.Timer.Tick> event to perform a polling operation or to display a splash screen for a specified period of time. Whenever the <xref:System.Windows.Forms.Timer.Enabled%2A> property is set to `true` and the <xref:System.Windows.Forms.Timer.Interval%2A> property is greater than zero, the <xref:System.Windows.Forms.Timer.Tick> event is raised at intervals based on the <xref:System.Windows.Forms.Timer.Interval%2A> property setting.  \n  \n This class provides methods to set the interval, and to start and stop the timer.  \n  \n> [!NOTE]\n>  The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds. If you require a multithreaded timer with greater accuracy, use the <xref:System.Timers.Timer> class in the <xref:System.Timers> namespace."
  example:
  - "The following example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]\n [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]\n [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]"
  syntax:
    content: 'public class Timer : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.Timer.#ctor
  commentId: M:System.Windows.Forms.Timer.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Timer()
  nameWithType: Timer.Timer()
  fullName: Timer.Timer()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Initializes a new instance of the <xref href="System.Windows.Forms.Timer"></xref> class.
  remarks: "When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`. To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.  \n  \n If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs. If the timer is enabled, even if it is out of scope, it is not subject to garbage collection."
  syntax:
    content: public Timer ();
    parameters: []
  overload: System.Windows.Forms.Timer.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)
  commentId: M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Timer(IContainer)
  nameWithType: Timer.Timer(IContainer)
  fullName: Timer.Timer(IContainer)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Initializes a new instance of the <xref href="System.Windows.Forms.Timer"></xref> class together with the specified container.
  remarks: "The <xref:System.Windows.Forms.Timer> constructor enables you to associate a <xref:System.Windows.Forms.Timer> with any <xref:System.ComponentModel.Container> object. By associating the <xref:System.Windows.Forms.Timer> like this, you hand over control of the lifetime of the <xref:System.Windows.Forms.Timer> to the <xref:System.ComponentModel.Container>. This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously. For example, if you associate a <xref:System.Windows.Forms.ToolTip>, an <xref:System.Windows.Forms.ImageList>, and a <xref:System.Windows.Forms.Timer> with a <xref:System.ComponentModel.Container>, calling <xref:System.ComponentModel.Container.Dispose%2A> on the <xref:System.ComponentModel.Container> will force disposal of all of these components as well.  \n  \n When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`. To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.  \n  \n This instance will exist until its container releases it to garbage collection."
  syntax:
    content: public Timer (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: An <xref href="System.ComponentModel.IContainer"></xref> that represents the container for the timer.
  overload: System.Windows.Forms.Timer.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.Timer.Dispose(System.Boolean)
  commentId: M:System.Windows.Forms.Timer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Timer.Dispose(Boolean)
  fullName: Timer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Disposes of the resources, other than memory, used by the timer.
  remarks: "Call <xref:System.Windows.Forms.Timer.Dispose%2A> when you are finished using the timer. The <xref:System.Windows.Forms.Timer.Dispose%2A> method leaves the timer in an unusable state. After you call <xref:System.Windows.Forms.Timer.Dispose%2A>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.  \n  \n> [!NOTE]\n>  Always call <xref:System.Windows.Forms.Timer.Dispose%2A> before you release your last reference to the timer. Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources. `false` to release only the unmanaged resources.'
  overload: System.Windows.Forms.Timer.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.Timer.Enabled
  commentId: P:System.Windows.Forms.Timer.Enabled
  id: Enabled
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Enabled
  nameWithType: Timer.Enabled
  fullName: Timer.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets or sets whether the timer is running.
  remarks: "The timer is not subject to garbage collection when the value is `true`.  \n  \n Calling the <xref:System.Windows.Forms.Timer.Start%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`. Likewise, calling the <xref:System.Windows.Forms.Timer.Stop%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `false`."
  example:
  - "The following example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]\n [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]\n [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]"
  syntax:
    content: public virtual bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the timer is currently enabled; otherwise, `false`. The default is `false`.'
  overload: System.Windows.Forms.Timer.Enabled*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.Timer.Interval
  commentId: P:System.Windows.Forms.Timer.Interval
  id: Interval
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Interval
  nameWithType: Timer.Interval
  fullName: Timer.Interval
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets or sets the time, in milliseconds, before the <xref href="System.Windows.Forms.Timer.Tick"></xref> event is raised relative to the last occurrence of the <xref href="System.Windows.Forms.Timer.Tick"></xref> event.
  remarks: To get the number of seconds in the interval, divide this number by 1,000.
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]\n [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]\n [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]"
  syntax:
    content: public int Interval { get; set; }
    return:
      type: System.Int32
      description: An <xref href="System.Int32"></xref> specifying the number of milliseconds before the <xref href="System.Windows.Forms.Timer.Tick"></xref> event is raised relative to the last occurrence of the <xref href="System.Windows.Forms.Timer.Tick"></xref> event. The value cannot be less than one.
  overload: System.Windows.Forms.Timer.Interval*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.Timer.OnTick(System.EventArgs)
  commentId: M:System.Windows.Forms.Timer.OnTick(System.EventArgs)
  id: OnTick(System.EventArgs)
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: OnTick(EventArgs)
  nameWithType: Timer.OnTick(EventArgs)
  fullName: Timer.OnTick(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Raises the <xref href="System.Windows.Forms.Timer.Tick"></xref> event.
  remarks: "This method is called for each timer tick. It calls any methods that are added through <xref:System.Windows.Forms.Timer.Tick>. If you are inheriting from <xref:System.Windows.Forms.Timer>, you can override this method.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."
  syntax:
    content: protected virtual void OnTick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: An <xref href="System.EventArgs"></xref> that contains the event data. This is always <xref href="System.EventArgs.Empty"></xref>.
  overload: System.Windows.Forms.Timer.OnTick*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.Timer.Start
  commentId: M:System.Windows.Forms.Timer.Start
  id: Start
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Start()
  nameWithType: Timer.Start()
  fullName: Timer.Start()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Starts the timer.
  remarks: You can also start the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `true`.
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]\n [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]\n [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Windows.Forms.Timer.Start*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.Timer.Stop
  commentId: M:System.Windows.Forms.Timer.Stop
  id: Stop
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Stop()
  nameWithType: Timer.Stop()
  fullName: Timer.Stop()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Stops the timer.
  remarks: "You can also stop the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `false`. A <xref:System.Windows.Forms.Timer> object may be enabled and disabled multiple times within the same application session.  \n  \n Calling <xref:System.Windows.Forms.Timer.Start%2A> after you have disabled a <xref:System.Windows.Forms.Timer> by calling <xref:System.Windows.Forms.Timer.Stop%2A> will cause the <xref:System.Windows.Forms.Timer> to restart the interrupted interval. If your <xref:System.Windows.Forms.Timer> is set for a 5000-millisecond interval, and you call <xref:System.Windows.Forms.Timer.Stop%2A> at around 3000 milliseconds, calling <xref:System.Windows.Forms.Timer.Start%2A> will cause the <xref:System.Windows.Forms.Timer> to wait 5000 milliseconds before raising the <xref:System.Windows.Forms.Timer.Tick> event.  \n  \n> [!NOTE]\n>  Calling Stop on any <xref:System.Windows.Forms.Timer> within a Windows Forms application can cause messages from other <xref:System.Windows.Forms.Timer> components in the application to be processed immediately, because all <xref:System.Windows.Forms.Timer> components operate on the main application thread. If you have two <xref:System.Windows.Forms.Timer> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <xref:System.Windows.Forms.Timer.Stop%2A> on the first <xref:System.Windows.Forms.Timer>, your application may receive an event callback for the second component first. If this proves problematic, consider using the <xref:System.Threading.Timer> class in the <xref:System.Threading> namespace instead."
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]\n [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]\n [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Windows.Forms.Timer.Stop*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Forms.Timer.Tag
  commentId: P:System.Windows.Forms.Timer.Tag
  id: Tag
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Tag
  nameWithType: Timer.Tag
  fullName: Timer.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets or sets an arbitrary string representing some type of user state.
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))]

      public object Tag { get; set; }
    return:
      type: System.Object
      description: An arbitrary string representing some type of user state.
  overload: System.Windows.Forms.Timer.Tag*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.Timer.Tick
  commentId: E:System.Windows.Forms.Timer.Tick
  id: Tick
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Tick
  nameWithType: Timer.Tick
  fullName: Timer.Tick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Occurs when the specified timer interval has elapsed and the timer is enabled.
  remarks: "Calling the <xref:System.Diagnostics.Debug.Assert%2A> method on the <xref:System.Diagnostics.Debug> class from within the <xref:System.Windows.Forms.Timer.Tick> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <xref:System.Windows.Forms.Timer.Tick> event repeatedly. We recommend that you refrain from testing assertions within this event, and use the <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, or <xref:System.Diagnostics.Debug.WriteLineIf%2A> methods instead.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]\n [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]\n [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]"
  syntax:
    content: public event EventHandler Tick;
    return:
      type: System.EventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.Timer.ToString
  commentId: M:System.Windows.Forms.Timer.ToString
  id: ToString
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: ToString()
  nameWithType: Timer.ToString()
  fullName: Timer.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Returns a string that represents the <xref href="System.Windows.Forms.Timer"></xref>.
  remarks: The <xref:System.Windows.Forms.Timer.ToString%2A> method returns a string that includes the value of the <xref:System.Windows.Forms.Timer.Interval%2A> property.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string that represents the current <xref href="System.Windows.Forms.Timer"></xref>.
  overload: System.Windows.Forms.Timer.ToString*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.ComponentModel.Component
  parent: System.ComponentModel
  isExternal: false
  name: Component
  nameWithType: Component
  fullName: System.ComponentModel.Component
- uid: System.Windows.Forms.Timer.#ctor
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Timer()
  nameWithType: Timer.Timer()
  fullName: Timer.Timer()
- uid: System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Timer(IContainer)
  nameWithType: Timer.Timer(IContainer)
  fullName: Timer.Timer(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.Windows.Forms.Timer.Dispose(System.Boolean)
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Timer.Dispose(Boolean)
  fullName: Timer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Timer.Enabled
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Enabled
  nameWithType: Timer.Enabled
  fullName: Timer.Enabled
- uid: System.Windows.Forms.Timer.Interval
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Interval
  nameWithType: Timer.Interval
  fullName: Timer.Interval
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Timer.OnTick(System.EventArgs)
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: OnTick(EventArgs)
  nameWithType: Timer.OnTick(EventArgs)
  fullName: Timer.OnTick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.Timer.Start
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Start()
  nameWithType: Timer.Start()
  fullName: Timer.Start()
- uid: System.Windows.Forms.Timer.Stop
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Stop()
  nameWithType: Timer.Stop()
  fullName: Timer.Stop()
- uid: System.Windows.Forms.Timer.Tag
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Tag
  nameWithType: Timer.Tag
  fullName: Timer.Tag
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.Timer.Tick
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Tick
  nameWithType: Timer.Tick
  fullName: Timer.Tick
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.Timer.ToString
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: ToString()
  nameWithType: Timer.ToString()
  fullName: Timer.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Timer.#ctor*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Timer
  nameWithType: Timer.Timer
  fullName: Timer.Timer
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
- uid: System.Windows.Forms.Timer.Dispose*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Dispose
  nameWithType: Timer.Dispose
  fullName: Timer.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
- uid: System.Windows.Forms.Timer.Enabled*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Enabled
  nameWithType: Timer.Enabled
  fullName: Timer.Enabled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
- uid: System.Windows.Forms.Timer.Interval*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Interval
  nameWithType: Timer.Interval
  fullName: Timer.Interval
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
- uid: System.Windows.Forms.Timer.OnTick*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: OnTick
  nameWithType: Timer.OnTick
  fullName: Timer.OnTick
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
- uid: System.Windows.Forms.Timer.Start*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Start
  nameWithType: Timer.Start
  fullName: Timer.Start
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
- uid: System.Windows.Forms.Timer.Stop*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Stop
  nameWithType: Timer.Stop
  fullName: Timer.Stop
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
- uid: System.Windows.Forms.Timer.Tag*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Tag
  nameWithType: Timer.Tag
  fullName: Timer.Tag
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
- uid: System.Windows.Forms.Timer.ToString*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: ToString
  nameWithType: Timer.ToString
  fullName: Timer.ToString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Timer.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: MarshalByRefObject.CreateObjRef(Type)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.ComponentModel.Component.CanRaiseEvents
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: Component.CanRaiseEvents
- uid: System.ComponentModel.Component.Container
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
  fullName: Component.Container
- uid: System.ComponentModel.Component.DesignMode
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: Component.DesignMode
- uid: System.ComponentModel.Component.Dispose
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: Component.Dispose()
- uid: System.ComponentModel.Component.Disposed
  parent: System.ComponentModel.Component
  isExternal: false
  name: Disposed
  nameWithType: Component.Disposed
  fullName: Component.Disposed
- uid: System.ComponentModel.Component.Events
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
  fullName: Component.Events
- uid: System.ComponentModel.Component.GetService(System.Type)
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: Component.GetService(Type)
- uid: System.ComponentModel.Component.Site
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
  fullName: Component.Site
