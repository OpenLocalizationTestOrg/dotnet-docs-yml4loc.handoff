{"nodes":[{"content":"Represents advanced options for creating a <xref href=\"System.IO.FileStream\"></xref> object.","nodes":[{"pos":[0,92],"content":"Represents advanced options for creating a <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> object.","source":"Represents advanced options for creating a <xref href=\"System.IO.FileStream\"></xref> object."}],"pos":[633,726],"yaml":true},{"content":"Indicates that a file can be used for asynchronous reading and writing.","nodes":[{"pos":[0,71],"content":"Indicates that a file can be used for asynchronous reading and writing.","nodes":[{"content":"Indicates that a file can be used for asynchronous reading and writing.","pos":[0,71]}]}],"pos":[2703,2775],"yaml":true},{"content":"Indicates that a file is automatically deleted when it is no longer in use.","nodes":[{"pos":[0,75],"content":"Indicates that a file is automatically deleted when it is no longer in use.","nodes":[{"content":"Indicates that a file is automatically deleted when it is no longer in use.","pos":[0,75]}]}],"pos":[4104,4180],"yaml":true},{"content":"Indicates that a file is encrypted and can be decrypted only by using the same user account used for encryption.","nodes":[{"pos":[0,112],"content":"Indicates that a file is encrypted and can be decrypted only by using the same user account used for encryption.","nodes":[{"content":"Indicates that a file is encrypted and can be decrypted only by using the same user account used for encryption.","pos":[0,112]}]}],"pos":[5486,5599],"yaml":true},{"content":"Indicates that no additional options should be used when creating a <xref href=\"System.IO.FileStream\"></xref> object.","nodes":[{"pos":[0,117],"content":"Indicates that no additional options should be used when creating a <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> object.","source":"Indicates that no additional options should be used when creating a <xref href=\"System.IO.FileStream\"></xref> object."}],"pos":[6871,6989],"yaml":true},{"content":"Indicates that the file is accessed randomly. The system can use this as a hint to optimize file caching.","nodes":[{"pos":[0,105],"content":"Indicates that the file is accessed randomly. The system can use this as a hint to optimize file caching.","nodes":[{"content":"Indicates that the file is accessed randomly. The system can use this as a hint to optimize file caching.","pos":[0,105],"nodes":[{"content":"Indicates that the file is accessed randomly.","pos":[0,45]},{"content":"The system can use this as a hint to optimize file caching.","pos":[46,105]}]}]}],"pos":[8304,8410],"yaml":true},{"content":"Indicates that the file is to be accessed sequentially from beginning to end. The system can use this as a hint to optimize file caching. If an application moves the file pointer for random access, optimum caching may not occur; however, correct operation is still guaranteed.","nodes":[{"pos":[0,276],"content":"Indicates that the file is to be accessed sequentially from beginning to end. The system can use this as a hint to optimize file caching. If an application moves the file pointer for random access, optimum caching may not occur; however, correct operation is still guaranteed.","nodes":[{"content":"Indicates that the file is to be accessed sequentially from beginning to end. The system can use this as a hint to optimize file caching. If an application moves the file pointer for random access, optimum caching may not occur; however, correct operation is still guaranteed.","pos":[0,276],"nodes":[{"content":"Indicates that the file is to be accessed sequentially from beginning to end.","pos":[0,77]},{"content":"The system can use this as a hint to optimize file caching.","pos":[78,137]},{"content":"If an application moves the file pointer for random access, optimum caching may not occur; however, correct operation is still guaranteed.","pos":[138,276]}]}]}],"pos":[9745,10022],"yaml":true},{"content":"Specifying this flag can increase performance for applications that read large files using sequential access. Performance gains can be even more noticeable for applications that read large files mostly sequentially, but occasionally skip over small ranges of bytes.","nodes":[{"pos":[0,265],"content":"Specifying this flag can increase performance for applications that read large files using sequential access. Performance gains can be even more noticeable for applications that read large files mostly sequentially, but occasionally skip over small ranges of bytes.","nodes":[{"content":"Specifying this flag can increase performance for applications that read large files using sequential access. Performance gains can be even more noticeable for applications that read large files mostly sequentially, but occasionally skip over small ranges of bytes.","pos":[0,265],"nodes":[{"content":"Specifying this flag can increase performance for applications that read large files using sequential access.","pos":[0,109]},{"content":"Performance gains can be even more noticeable for applications that read large files mostly sequentially, but occasionally skip over small ranges of bytes.","pos":[110,265]}]}]}],"pos":[10033,10299],"yaml":true,"extradata":"MT"},{"content":"Indicates that the system should write through any intermediate cache and go directly to disk.","nodes":[{"pos":[0,94],"content":"Indicates that the system should write through any intermediate cache and go directly to disk.","nodes":[{"content":"Indicates that the system should write through any intermediate cache and go directly to disk.","pos":[0,94]}]}],"pos":[11624,11719],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.FileOptions\n  commentId: T:System.IO.FileOptions\n  id: FileOptions\n  children:\n  - System.IO.FileOptions.Asynchronous\n  - System.IO.FileOptions.DeleteOnClose\n  - System.IO.FileOptions.Encrypted\n  - System.IO.FileOptions.None\n  - System.IO.FileOptions.RandomAccess\n  - System.IO.FileOptions.SequentialScan\n  - System.IO.FileOptions.WriteThrough\n  langs:\n  - csharp\n  name: FileOptions\n  nameWithType: FileOptions\n  fullName: System.IO.FileOptions\n  type: Enum\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Represents advanced options for creating a <xref href=\"System.IO.FileStream\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the Asynchronous value when creating a file stream.  \\n  \\n [!code-csharp[IO.FileStream.ctor2#2](~/samples/snippets/csharp/VS_Snippets_CLR/IO.FileStream.ctor2/CS/example2.cs#2)]\\n [!code-vb[IO.FileStream.ctor2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.FileStream.ctor2/VB/example2.vb#2)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum FileOptions\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileOptions.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.FileOptions.Asynchronous\n  commentId: F:System.IO.FileOptions.Asynchronous\n  id: Asynchronous\n  parent: System.IO.FileOptions\n  langs:\n  - csharp\n  name: Asynchronous\n  nameWithType: FileOptions.Asynchronous\n  fullName: FileOptions.Asynchronous\n  type: Field\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Indicates that a file can be used for asynchronous reading and writing.\n  syntax:\n    content: Asynchronous\n    return:\n      type: System.IO.FileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileOptions.xml\n- uid: System.IO.FileOptions.DeleteOnClose\n  commentId: F:System.IO.FileOptions.DeleteOnClose\n  id: DeleteOnClose\n  parent: System.IO.FileOptions\n  langs:\n  - csharp\n  name: DeleteOnClose\n  nameWithType: FileOptions.DeleteOnClose\n  fullName: FileOptions.DeleteOnClose\n  type: Field\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Indicates that a file is automatically deleted when it is no longer in use.\n  syntax:\n    content: DeleteOnClose\n    return:\n      type: System.IO.FileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileOptions.xml\n- uid: System.IO.FileOptions.Encrypted\n  commentId: F:System.IO.FileOptions.Encrypted\n  id: Encrypted\n  parent: System.IO.FileOptions\n  langs:\n  - csharp\n  name: Encrypted\n  nameWithType: FileOptions.Encrypted\n  fullName: FileOptions.Encrypted\n  type: Field\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Indicates that a file is encrypted and can be decrypted only by using the same user account used for encryption.\n  syntax:\n    content: Encrypted\n    return:\n      type: System.IO.FileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileOptions.xml\n- uid: System.IO.FileOptions.None\n  commentId: F:System.IO.FileOptions.None\n  id: None\n  parent: System.IO.FileOptions\n  langs:\n  - csharp\n  name: None\n  nameWithType: FileOptions.None\n  fullName: FileOptions.None\n  type: Field\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Indicates that no additional options should be used when creating a <xref href=\"System.IO.FileStream\"></xref> object.\n  syntax:\n    content: None\n    return:\n      type: System.IO.FileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileOptions.xml\n- uid: System.IO.FileOptions.RandomAccess\n  commentId: F:System.IO.FileOptions.RandomAccess\n  id: RandomAccess\n  parent: System.IO.FileOptions\n  langs:\n  - csharp\n  name: RandomAccess\n  nameWithType: FileOptions.RandomAccess\n  fullName: FileOptions.RandomAccess\n  type: Field\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Indicates that the file is accessed randomly. The system can use this as a hint to optimize file caching.\n  syntax:\n    content: RandomAccess\n    return:\n      type: System.IO.FileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileOptions.xml\n- uid: System.IO.FileOptions.SequentialScan\n  commentId: F:System.IO.FileOptions.SequentialScan\n  id: SequentialScan\n  parent: System.IO.FileOptions\n  langs:\n  - csharp\n  name: SequentialScan\n  nameWithType: FileOptions.SequentialScan\n  fullName: FileOptions.SequentialScan\n  type: Field\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Indicates that the file is to be accessed sequentially from beginning to end. The system can use this as a hint to optimize file caching. If an application moves the file pointer for random access, optimum caching may not occur; however, correct operation is still guaranteed.\n  remarks: Specifying this flag can increase performance for applications that read large files using sequential access. Performance gains can be even more noticeable for applications that read large files mostly sequentially, but occasionally skip over small ranges of bytes.\n  syntax:\n    content: SequentialScan\n    return:\n      type: System.IO.FileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileOptions.xml\n- uid: System.IO.FileOptions.WriteThrough\n  commentId: F:System.IO.FileOptions.WriteThrough\n  id: WriteThrough\n  parent: System.IO.FileOptions\n  langs:\n  - csharp\n  name: WriteThrough\n  nameWithType: FileOptions.WriteThrough\n  fullName: FileOptions.WriteThrough\n  type: Field\n  assemblies:\n  - System.IO.FileSystem\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.IO\n  summary: Indicates that the system should write through any intermediate cache and go directly to disk.\n  syntax:\n    content: WriteThrough\n    return:\n      type: System.IO.FileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/FileOptions.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.IO.FileOptions.Asynchronous\n  parent: System.IO.FileOptions\n  isExternal: false\n  name: Asynchronous\n  nameWithType: FileOptions.Asynchronous\n  fullName: FileOptions.Asynchronous\n- uid: System.IO.FileOptions\n  parent: System.IO\n  isExternal: false\n  name: FileOptions\n  nameWithType: FileOptions\n  fullName: System.IO.FileOptions\n- uid: System.IO.FileOptions.DeleteOnClose\n  parent: System.IO.FileOptions\n  isExternal: false\n  name: DeleteOnClose\n  nameWithType: FileOptions.DeleteOnClose\n  fullName: FileOptions.DeleteOnClose\n- uid: System.IO.FileOptions.Encrypted\n  parent: System.IO.FileOptions\n  isExternal: false\n  name: Encrypted\n  nameWithType: FileOptions.Encrypted\n  fullName: FileOptions.Encrypted\n- uid: System.IO.FileOptions.None\n  parent: System.IO.FileOptions\n  isExternal: false\n  name: None\n  nameWithType: FileOptions.None\n  fullName: FileOptions.None\n- uid: System.IO.FileOptions.RandomAccess\n  parent: System.IO.FileOptions\n  isExternal: false\n  name: RandomAccess\n  nameWithType: FileOptions.RandomAccess\n  fullName: FileOptions.RandomAccess\n- uid: System.IO.FileOptions.SequentialScan\n  parent: System.IO.FileOptions\n  isExternal: false\n  name: SequentialScan\n  nameWithType: FileOptions.SequentialScan\n  fullName: FileOptions.SequentialScan\n- uid: System.IO.FileOptions.WriteThrough\n  parent: System.IO.FileOptions\n  isExternal: false\n  name: WriteThrough\n  nameWithType: FileOptions.WriteThrough\n  fullName: FileOptions.WriteThrough\n"}