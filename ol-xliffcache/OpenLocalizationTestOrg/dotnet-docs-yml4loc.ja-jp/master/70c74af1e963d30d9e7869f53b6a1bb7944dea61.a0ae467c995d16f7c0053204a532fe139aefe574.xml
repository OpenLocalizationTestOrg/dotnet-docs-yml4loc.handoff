{"nodes":[{"content":"The <xref href=\"System.Net.Sockets.TransmitFileOptions\"></xref> enumeration defines values used in file transfer requests.","nodes":[{"pos":[0,122],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.TransmitFileOptions\"&gt;&lt;/xref&gt;</ph> enumeration defines values used in file transfer requests.","source":"The <xref href=\"System.Net.Sockets.TransmitFileOptions\"></xref> enumeration defines values used in file transfer requests."}],"pos":[774,897],"yaml":true},{"content":"**Note** The flags Disconnect and ReuseSocket return the socket to a disconnected, reusable state after the file has been transmitted. These flags should not be used on a socket where quality of service (QOS) has been requested, because the service provider might immediately delete any quality of service associated with the socket before the file transfer has completed. The best approach for a QOS-enabled socket is to call <xref:System.Net.Sockets.Socket.Close%2A> when the file transfer has completed, rather than relying on these flags.","nodes":[{"pos":[0,542],"content":"**Note** The flags Disconnect and ReuseSocket return the socket to a disconnected, reusable state after the file has been transmitted. These flags should not be used on a socket where quality of service (QOS) has been requested, because the service provider might immediately delete any quality of service associated with the socket before the file transfer has completed. The best approach for a QOS-enabled socket is to call <xref:System.Net.Sockets.Socket.Close%2A> when the file transfer has completed, rather than relying on these flags.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept> The flags Disconnect and ReuseSocket return the socket to a disconnected, reusable state after the file has been transmitted.","pos":[0,134],"source":"**Note** The flags Disconnect and ReuseSocket return the socket to a disconnected, reusable state after the file has been transmitted."},{"content":"These flags should not be used on a socket where quality of service (QOS) has been requested, because the service provider might immediately delete any quality of service associated with the socket before the file transfer has completed.","pos":[135,372]},{"content":"The best approach for a QOS-enabled socket is to call <ph id=\"ph1\">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> when the file transfer has completed, rather than relying on these flags.","pos":[373,542],"source":" The best approach for a QOS-enabled socket is to call <xref:System.Net.Sockets.Socket.Close%2A> when the file transfer has completed, rather than relying on these flags."}]}],"pos":[908,1453],"yaml":true,"extradata":"MT"},{"content":"Start a transport-level disconnect after all the file data has been queued for transmission. When used with <xref href=\"System.Net.Sockets.TransmitFileOptions.ReuseSocket\"></xref>, these flags return the socket to a disconnected, reusable state after the file has been transmitted.","nodes":[{"pos":[0,281],"content":"Start a transport-level disconnect after all the file data has been queued for transmission. When used with <xref href=\"System.Net.Sockets.TransmitFileOptions.ReuseSocket\"></xref>, these flags return the socket to a disconnected, reusable state after the file has been transmitted.","nodes":[{"content":"Start a transport-level disconnect after all the file data has been queued for transmission.","pos":[0,92]},{"content":"When used with <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.TransmitFileOptions.ReuseSocket\"&gt;&lt;/xref&gt;</ph>, these flags return the socket to a disconnected, reusable state after the file has been transmitted.","pos":[93,281],"source":" When used with <xref href=\"System.Net.Sockets.TransmitFileOptions.ReuseSocket\"></xref>, these flags return the socket to a disconnected, reusable state after the file has been transmitted."}]}],"pos":[3491,3773],"yaml":true},{"content":"The socket handle may be reused when the request completes. This flag is valid only if <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref> is also specified. When used with <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref>, these flags return the socket to a disconnected, reusable state after the file has been transmitted.","nodes":[{"pos":[0,364],"content":"The socket handle may be reused when the request completes. This flag is valid only if <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref> is also specified. When used with <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref>, these flags return the socket to a disconnected, reusable state after the file has been transmitted.","nodes":[{"content":"The socket handle may be reused when the request completes.","pos":[0,59]},{"content":"This flag is valid only if <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"&gt;&lt;/xref&gt;</ph> is also specified.","pos":[60,176],"source":" This flag is valid only if <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref> is also specified."},{"content":"When used with <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"&gt;&lt;/xref&gt;</ph>, these flags return the socket to a disconnected, reusable state after the file has been transmitted.","pos":[177,364],"source":" When used with <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref>, these flags return the socket to a disconnected, reusable state after the file has been transmitted."}]}],"pos":[4991,5356],"yaml":true},{"content":"Use the default thread to process long file transfer requests.","nodes":[{"pos":[0,62],"content":"Use the default thread to process long file transfer requests.","nodes":[{"content":"Use the default thread to process long file transfer requests.","pos":[0,62]}]}],"pos":[6641,6704],"yaml":true},{"content":"Use kernel asynchronous procedure calls (APCs) instead of worker threads to process long file transfer requests. Long requests are defined as requests that require more than a single read from the file or a cache; the request therefore depends on the size of the file and the specified length of the send packet.","nodes":[{"pos":[0,312],"content":"Use kernel asynchronous procedure calls (APCs) instead of worker threads to process long file transfer requests. Long requests are defined as requests that require more than a single read from the file or a cache; the request therefore depends on the size of the file and the specified length of the send packet.","nodes":[{"content":"Use kernel asynchronous procedure calls (APCs) instead of worker threads to process long file transfer requests. Long requests are defined as requests that require more than a single read from the file or a cache; the request therefore depends on the size of the file and the specified length of the send packet.","pos":[0,312],"nodes":[{"content":"Use kernel asynchronous procedure calls (APCs) instead of worker threads to process long file transfer requests.","pos":[0,112]},{"content":"Long requests are defined as requests that require more than a single read from the file or a cache; the request therefore depends on the size of the file and the specified length of the send packet.","pos":[113,312]}]}]}],"pos":[7940,8253],"yaml":true},{"content":"Use system threads to process long file transfer requests.","nodes":[{"pos":[0,58],"content":"Use system threads to process long file transfer requests.","nodes":[{"content":"Use system threads to process long file transfer requests.","pos":[0,58]}]}],"pos":[9497,9556],"yaml":true},{"content":"Complete the file transfer request immediately, without pending. If this flag is specified and the file transfer succeeds, the data has been accepted by the system but not necessarily acknowledged by the remote end. Do not use this flag with the <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref> and <xref href=\"System.Net.Sockets.TransmitFileOptions.ReuseSocket\"></xref> flags.","nodes":[{"pos":[0,399],"content":"Complete the file transfer request immediately, without pending. If this flag is specified and the file transfer succeeds, the data has been accepted by the system but not necessarily acknowledged by the remote end. Do not use this flag with the <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref> and <xref href=\"System.Net.Sockets.TransmitFileOptions.ReuseSocket\"></xref> flags.","nodes":[{"content":"Complete the file transfer request immediately, without pending.","pos":[0,64]},{"content":"If this flag is specified and the file transfer succeeds, the data has been accepted by the system but not necessarily acknowledged by the remote end.","pos":[65,215]},{"content":"Do not use this flag with the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.TransmitFileOptions.ReuseSocket\"&gt;&lt;/xref&gt;</ph> flags.","pos":[216,399],"source":" Do not use this flag with the <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref> and <xref href=\"System.Net.Sockets.TransmitFileOptions.ReuseSocket\"></xref> flags."}]}],"pos":[10779,11179],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Sockets.TransmitFileOptions\n  commentId: T:System.Net.Sockets.TransmitFileOptions\n  id: TransmitFileOptions\n  children:\n  - System.Net.Sockets.TransmitFileOptions.Disconnect\n  - System.Net.Sockets.TransmitFileOptions.ReuseSocket\n  - System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread\n  - System.Net.Sockets.TransmitFileOptions.UseKernelApc\n  - System.Net.Sockets.TransmitFileOptions.UseSystemThread\n  - System.Net.Sockets.TransmitFileOptions.WriteBehind\n  langs:\n  - csharp\n  name: TransmitFileOptions\n  nameWithType: TransmitFileOptions\n  fullName: System.Net.Sockets.TransmitFileOptions\n  type: Enum\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: The <xref href=\"System.Net.Sockets.TransmitFileOptions\"></xref> enumeration defines values used in file transfer requests.\n  remarks: '**Note** The flags Disconnect and ReuseSocket return the socket to a disconnected, reusable state after the file has been transmitted. These flags should not be used on a socket where quality of service (QOS) has been requested, because the service provider might immediately delete any quality of service associated with the socket before the file transfer has completed. The best approach for a QOS-enabled socket is to call <xref:System.Net.Sockets.Socket.Close%2A> when the file transfer has completed, rather than relying on these flags.'\n  example:\n  - \"The following example demonstrates the use of <xref:System.Net.Sockets.TransmitFileOptions.ReuseSocket> in a call to <xref:System.Net.Sockets.Socket.SendFile%2A>. The file \\\"test.txt\\\" is located in the root directory of the local machine. In this example, a prebuffer and postbuffer of data are created and sent to the remote host with the file. To use the system's default thread, UseDefaultWorkerThread is specified.  \\n  \\n [!code-cpp[NCLSocketEnhancements#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#4)]\\n [!code-csharp[NCLSocketEnhancements#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#4)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum TransmitFileOptions\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.TransmitFileOptions.Disconnect\n  commentId: F:System.Net.Sockets.TransmitFileOptions.Disconnect\n  id: Disconnect\n  parent: System.Net.Sockets.TransmitFileOptions\n  langs:\n  - csharp\n  name: Disconnect\n  nameWithType: TransmitFileOptions.Disconnect\n  fullName: TransmitFileOptions.Disconnect\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Start a transport-level disconnect after all the file data has been queued for transmission. When used with <xref href=\"System.Net.Sockets.TransmitFileOptions.ReuseSocket\"></xref>, these flags return the socket to a disconnected, reusable state after the file has been transmitted.\n  syntax:\n    content: Disconnect\n    return:\n      type: System.Net.Sockets.TransmitFileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml\n- uid: System.Net.Sockets.TransmitFileOptions.ReuseSocket\n  commentId: F:System.Net.Sockets.TransmitFileOptions.ReuseSocket\n  id: ReuseSocket\n  parent: System.Net.Sockets.TransmitFileOptions\n  langs:\n  - csharp\n  name: ReuseSocket\n  nameWithType: TransmitFileOptions.ReuseSocket\n  fullName: TransmitFileOptions.ReuseSocket\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: The socket handle may be reused when the request completes. This flag is valid only if <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref> is also specified. When used with <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref>, these flags return the socket to a disconnected, reusable state after the file has been transmitted.\n  syntax:\n    content: ReuseSocket\n    return:\n      type: System.Net.Sockets.TransmitFileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml\n- uid: System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread\n  commentId: F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread\n  id: UseDefaultWorkerThread\n  parent: System.Net.Sockets.TransmitFileOptions\n  langs:\n  - csharp\n  name: UseDefaultWorkerThread\n  nameWithType: TransmitFileOptions.UseDefaultWorkerThread\n  fullName: TransmitFileOptions.UseDefaultWorkerThread\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Use the default thread to process long file transfer requests.\n  syntax:\n    content: UseDefaultWorkerThread\n    return:\n      type: System.Net.Sockets.TransmitFileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml\n- uid: System.Net.Sockets.TransmitFileOptions.UseKernelApc\n  commentId: F:System.Net.Sockets.TransmitFileOptions.UseKernelApc\n  id: UseKernelApc\n  parent: System.Net.Sockets.TransmitFileOptions\n  langs:\n  - csharp\n  name: UseKernelApc\n  nameWithType: TransmitFileOptions.UseKernelApc\n  fullName: TransmitFileOptions.UseKernelApc\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Use kernel asynchronous procedure calls (APCs) instead of worker threads to process long file transfer requests. Long requests are defined as requests that require more than a single read from the file or a cache; the request therefore depends on the size of the file and the specified length of the send packet.\n  syntax:\n    content: UseKernelApc\n    return:\n      type: System.Net.Sockets.TransmitFileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml\n- uid: System.Net.Sockets.TransmitFileOptions.UseSystemThread\n  commentId: F:System.Net.Sockets.TransmitFileOptions.UseSystemThread\n  id: UseSystemThread\n  parent: System.Net.Sockets.TransmitFileOptions\n  langs:\n  - csharp\n  name: UseSystemThread\n  nameWithType: TransmitFileOptions.UseSystemThread\n  fullName: TransmitFileOptions.UseSystemThread\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Use system threads to process long file transfer requests.\n  syntax:\n    content: UseSystemThread\n    return:\n      type: System.Net.Sockets.TransmitFileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml\n- uid: System.Net.Sockets.TransmitFileOptions.WriteBehind\n  commentId: F:System.Net.Sockets.TransmitFileOptions.WriteBehind\n  id: WriteBehind\n  parent: System.Net.Sockets.TransmitFileOptions\n  langs:\n  - csharp\n  name: WriteBehind\n  nameWithType: TransmitFileOptions.WriteBehind\n  fullName: TransmitFileOptions.WriteBehind\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Sockets\n  namespace: System.Net.Sockets\n  summary: Complete the file transfer request immediately, without pending. If this flag is specified and the file transfer succeeds, the data has been accepted by the system but not necessarily acknowledged by the remote end. Do not use this flag with the <xref href=\"System.Net.Sockets.TransmitFileOptions.Disconnect\"></xref> and <xref href=\"System.Net.Sockets.TransmitFileOptions.ReuseSocket\"></xref> flags.\n  syntax:\n    content: WriteBehind\n    return:\n      type: System.Net.Sockets.TransmitFileOptions\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/TransmitFileOptions.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Net.Sockets.TransmitFileOptions.Disconnect\n  parent: System.Net.Sockets.TransmitFileOptions\n  isExternal: false\n  name: Disconnect\n  nameWithType: TransmitFileOptions.Disconnect\n  fullName: TransmitFileOptions.Disconnect\n- uid: System.Net.Sockets.TransmitFileOptions\n  parent: System.Net.Sockets\n  isExternal: false\n  name: TransmitFileOptions\n  nameWithType: TransmitFileOptions\n  fullName: System.Net.Sockets.TransmitFileOptions\n- uid: System.Net.Sockets.TransmitFileOptions.ReuseSocket\n  parent: System.Net.Sockets.TransmitFileOptions\n  isExternal: false\n  name: ReuseSocket\n  nameWithType: TransmitFileOptions.ReuseSocket\n  fullName: TransmitFileOptions.ReuseSocket\n- uid: System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread\n  parent: System.Net.Sockets.TransmitFileOptions\n  isExternal: false\n  name: UseDefaultWorkerThread\n  nameWithType: TransmitFileOptions.UseDefaultWorkerThread\n  fullName: TransmitFileOptions.UseDefaultWorkerThread\n- uid: System.Net.Sockets.TransmitFileOptions.UseKernelApc\n  parent: System.Net.Sockets.TransmitFileOptions\n  isExternal: false\n  name: UseKernelApc\n  nameWithType: TransmitFileOptions.UseKernelApc\n  fullName: TransmitFileOptions.UseKernelApc\n- uid: System.Net.Sockets.TransmitFileOptions.UseSystemThread\n  parent: System.Net.Sockets.TransmitFileOptions\n  isExternal: false\n  name: UseSystemThread\n  nameWithType: TransmitFileOptions.UseSystemThread\n  fullName: TransmitFileOptions.UseSystemThread\n- uid: System.Net.Sockets.TransmitFileOptions.WriteBehind\n  parent: System.Net.Sockets.TransmitFileOptions\n  isExternal: false\n  name: WriteBehind\n  nameWithType: TransmitFileOptions.WriteBehind\n  fullName: TransmitFileOptions.WriteBehind\n"}