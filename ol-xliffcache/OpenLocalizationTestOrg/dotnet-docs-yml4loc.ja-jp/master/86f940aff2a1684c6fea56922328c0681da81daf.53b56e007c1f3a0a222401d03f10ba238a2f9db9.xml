{"nodes":[{"content":"Provides HTTP content based on a byte array.","nodes":[{"pos":[0,44],"content":"Provides HTTP content based on a byte array.","nodes":[{"content":"Provides HTTP content based on a byte array.","pos":[0,44]}]}],"pos":[769,814],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.Http.ByteArrayContent\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.ByteArrayContent\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Net.Http.ByteArrayContent\"></xref> class."}],"pos":[3338,3433],"yaml":true},{"content":"The content used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>.","nodes":[{"pos":[0,89],"content":"The content used to initialize the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.ByteArrayContent\"&gt;&lt;/xref&gt;</ph>.","source":"The content used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>."}],"pos":[3577,3667],"yaml":true},{"content":"The <code>content</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">content</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>content</code> parameter is `null`."}],"pos":[3835,3881],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.Http.ByteArrayContent\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.ByteArrayContent\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Net.Http.ByteArrayContent\"></xref> class."}],"pos":[5411,5506],"yaml":true},{"content":"Only the range specified by the `offset` parameter and the `count`  parameter is used as content. Syntax","nodes":[{"pos":[0,104],"content":"Only the range specified by the `offset` parameter and the `count`  parameter is used as content. Syntax","nodes":[{"content":"Only the range specified by the <ph id=\"ph1\">`offset`</ph> parameter and the <ph id=\"ph2\">`count`</ph>  parameter is used as content.","pos":[0,97],"source":"Only the range specified by the `offset` parameter and the `count`  parameter is used as content."},{"content":"Syntax","pos":[98,104]}]}],"pos":[5517,5622],"yaml":true,"extradata":"MT"},{"content":"The content used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>.","nodes":[{"pos":[0,89],"content":"The content used to initialize the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.ByteArrayContent\"&gt;&lt;/xref&gt;</ph>.","source":"The content used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>."}],"pos":[5789,5879],"yaml":true},{"content":"The offset, in bytes, in the <code>content</code> parameter used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>.","nodes":[{"pos":[0,137],"content":"The offset, in bytes, in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">content</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter used to initialize the <ph id=\"ph2\">&lt;xref href=\"System.Net.Http.ByteArrayContent\"&gt;&lt;/xref&gt;</ph>.","source":"The offset, in bytes, in the <code>content</code> parameter used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>."}],"pos":[5940,6078],"yaml":true},{"content":"The number of bytes in the <code>content</code> starting from the <code>offset</code> parameter used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>.","nodes":[{"pos":[0,173],"content":"The number of bytes in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">content</ph><ept id=\"p1\">&lt;/code&gt;</ept> starting from the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">offset</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter used to initialize the <ph id=\"ph3\">&lt;xref href=\"System.Net.Http.ByteArrayContent\"&gt;&lt;/xref&gt;</ph>.","source":"The number of bytes in the <code>content</code> starting from the <code>offset</code> parameter used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>."}],"pos":[6138,6312],"yaml":true},{"content":"The <code>content</code> parameter is `null`.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">content</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>content</code> parameter is `null`."}],"pos":[6480,6526],"yaml":true},{"content":"The <code>offset</code> parameter is less than zero.  \n  \n -or-  \n  \n The <code>offset</code> parameter is greater than the length of content specified by the <code>content</code> parameter.  \n  \n -or-  \n  \n The <code>count</code> parameter is less than zero.  \n  \n -or-  \n  \n The <code>count</code> parameter is greater than the length of content specified by the <code>content</code> parameter - minus the <code>offset</code> parameter.","nodes":[{"pos":[0,52],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than zero.","source":"The <code>offset</code> parameter is less than zero."},{"pos":[59,63],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[70,190],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than the length of content specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">content</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","source":"The <code>offset</code> parameter is greater than the length of content specified by the <code>content</code> parameter."},{"pos":[197,201],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[208,259],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">count</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is less than zero.","source":"The <code>count</code> parameter is less than zero."},{"pos":[266,270],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[277,438],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">count</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is greater than the length of content specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">content</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter - minus the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">offset</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter.","source":"The <code>count</code> parameter is greater than the length of content specified by the <code>content</code> parameter - minus the <code>offset</code> parameter."}],"pos":[6640,7093],"yaml":true},{"content":"Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>.","nodes":[{"pos":[0,165],"content":"Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.ByteArrayContent\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>."}],"pos":[8538,8704],"yaml":true},{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601>object will complete after all of the content stream has been created.","nodes":[{"pos":[0,152],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601>object will complete after all of the content stream has been created.","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601>object will complete after all of the content stream has been created.","pos":[0,152],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>object will complete after all of the content stream has been created.","pos":[31,152],"source":" The returned <xref:System.Threading.Tasks.Task%601>object will complete after all of the content stream has been created."}]}]}],"pos":[8715,8868],"yaml":true,"extradata":"MT"},{"content":"The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[9097,9154],"yaml":true},{"content":"Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.","nodes":[{"pos":[0,118],"content":"Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.","nodes":[{"content":"Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.","pos":[0,118]}]}],"pos":[10865,10984],"yaml":true},{"content":"This operation does not block. When the returned <xref:System.Threading.Tasks.Task> object completes, the whole byte array has been written to the `stream` parameter.","nodes":[{"pos":[0,166],"content":"This operation does not block. When the returned <xref:System.Threading.Tasks.Task> object completes, the whole byte array has been written to the `stream` parameter.","nodes":[{"content":"This operation does not block.","pos":[0,30]},{"content":"When the returned <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object completes, the whole byte array has been written to the <ph id=\"ph2\">`stream`</ph> parameter.","pos":[31,166],"source":" When the returned <xref:System.Threading.Tasks.Task> object completes, the whole byte array has been written to the `stream` parameter."}]}],"pos":[10995,11162],"yaml":true,"extradata":"MT"},{"content":"The target stream.","nodes":[{"pos":[0,18],"content":"The target stream.","nodes":[{"content":"The target stream.","pos":[0,18]}]}],"pos":[11400,11419],"yaml":true},{"content":"Information about the transport, like channel binding token. This parameter may be `null`.","nodes":[{"pos":[0,90],"content":"Information about the transport, like channel binding token. This parameter may be `null`.","nodes":[{"content":"Information about the transport, like channel binding token.","pos":[0,60]},{"content":"This parameter may be <ph id=\"ph1\">`null`</ph>.","pos":[61,90],"source":" This parameter may be `null`."}]}],"pos":[11496,11587],"yaml":true},{"content":"The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[11658,11715],"yaml":true},{"content":"Determines whether a byte array has a valid length in bytes.","nodes":[{"pos":[0,60],"content":"Determines whether a byte array has a valid length in bytes.","nodes":[{"content":"Determines whether a byte array has a valid length in bytes.","pos":[0,60]}]}],"pos":[13234,13295],"yaml":true},{"content":"The <xref:System.Net.Http.ByteArrayContent.TryComputeLength%2A> method gives a derived content type the ability to calculate the content length. This is useful for content types which are able to easily calculate the content length. If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`. If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.  \n  \n This method always returned `true` for <xref:System.Net.Http.ByteArrayContent>.","nodes":[{"pos":[0,624],"content":"The <xref:System.Net.Http.ByteArrayContent.TryComputeLength%2A> method gives a derived content type the ability to calculate the content length. This is useful for content types which are able to easily calculate the content length. If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`. If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Http.ByteArrayContent.TryComputeLength%2A&gt;</ph> method gives a derived content type the ability to calculate the content length.","pos":[0,144],"source":"The <xref:System.Net.Http.ByteArrayContent.TryComputeLength%2A> method gives a derived content type the ability to calculate the content length."},{"content":"This is useful for content types which are able to easily calculate the content length.","pos":[145,232]},{"content":"If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return <ph id=\"ph1\">`false`</ph>.","pos":[233,474],"source":" If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`."},{"content":"If this method returns <ph id=\"ph1\">`false`</ph>, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.","pos":[475,624],"source":" If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server."}]},{"pos":[631,710],"content":"This method always returned <ph id=\"ph1\">`true`</ph> for <ph id=\"ph2\">&lt;xref:System.Net.Http.ByteArrayContent&gt;</ph>.","source":"This method always returned `true` for <xref:System.Net.Http.ByteArrayContent>."}],"pos":[13306,14021],"yaml":true,"extradata":"MT"},{"content":"The length in bytes of the byte array.","nodes":[{"pos":[0,38],"content":"The length in bytes of the byte array.","nodes":[{"content":"The length in bytes of the byte array.","pos":[0,38]}]}],"pos":[14181,14220],"yaml":true},{"content":"`true` if <code>length</code> is a valid length; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">length</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a valid length; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>length</code> is a valid length; otherwise, `false`."}],"pos":[14278,14349],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.ByteArrayContent\n  commentId: T:System.Net.Http.ByteArrayContent\n  id: ByteArrayContent\n  children:\n  - System.Net.Http.ByteArrayContent.#ctor(System.Byte[])\n  - System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)\n  - System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync\n  - System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  - System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)\n  langs:\n  - csharp\n  name: ByteArrayContent\n  nameWithType: ByteArrayContent\n  fullName: System.Net.Http.ByteArrayContent\n  type: Class\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Provides HTTP content based on a byte array.\n  syntax:\n    content: 'public class ByteArrayContent : System.Net.Http.HttpContent'\n  inheritance:\n  - System.Object\n  - System.Net.Http.HttpContent\n  derivedClasses:\n  - System.Net.Http.FormUrlEncodedContent\n  - System.Net.Http.StringContent\n  implements: []\n  inheritedMembers:\n  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n  - System.Net.Http.HttpContent.Dispose\n  - System.Net.Http.HttpContent.Dispose(System.Boolean)\n  - System.Net.Http.HttpContent.Headers\n  - System.Net.Http.HttpContent.LoadIntoBufferAsync\n  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  - System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  - System.Net.Http.HttpContent.ReadAsStreamAsync\n  - System.Net.Http.HttpContent.ReadAsStringAsync\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/ByteArrayContent.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[])\n  commentId: M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Net.Http.ByteArrayContent\n  langs:\n  - csharp\n  name: ByteArrayContent(Byte[])\n  nameWithType: ByteArrayContent.ByteArrayContent(Byte[])\n  fullName: ByteArrayContent.ByteArrayContent(Byte[])\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.ByteArrayContent\"></xref> class.\n  syntax:\n    content: public ByteArrayContent (byte[] content);\n    parameters:\n    - id: content\n      type: System.Byte[]\n      description: The content used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>.\n  overload: System.Net.Http.ByteArrayContent.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>content</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/ByteArrayContent.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)\n  id: '#ctor(System.Byte[],System.Int32,System.Int32)'\n  parent: System.Net.Http.ByteArrayContent\n  langs:\n  - csharp\n  name: ByteArrayContent(Byte[], Int32, Int32)\n  nameWithType: ByteArrayContent.ByteArrayContent(Byte[], Int32, Int32)\n  fullName: ByteArrayContent.ByteArrayContent(Byte[], Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Initializes a new instance of the <xref href=\"System.Net.Http.ByteArrayContent\"></xref> class.\n  remarks: Only the range specified by the `offset` parameter and the `count`  parameter is used as content. Syntax\n  syntax:\n    content: public ByteArrayContent (byte[] content, int offset, int count);\n    parameters:\n    - id: content\n      type: System.Byte[]\n      description: The content used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>.\n    - id: offset\n      type: System.Int32\n      description: The offset, in bytes, in the <code>content</code> parameter used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>.\n    - id: count\n      type: System.Int32\n      description: The number of bytes in the <code>content</code> starting from the <code>offset</code> parameter used to initialize the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>.\n  overload: System.Net.Http.ByteArrayContent.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>content</code> parameter is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The <code>offset</code> parameter is less than zero.  \\n  \\n -or-  \\n  \\n The <code>offset</code> parameter is greater than the length of content specified by the <code>content</code> parameter.  \\n  \\n -or-  \\n  \\n The <code>count</code> parameter is less than zero.  \\n  \\n -or-  \\n  \\n The <code>count</code> parameter is greater than the length of content specified by the <code>content</code> parameter - minus the <code>offset</code> parameter.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/ByteArrayContent.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync\n  commentId: M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync\n  id: CreateContentReadStreamAsync\n  parent: System.Net.Http.ByteArrayContent\n  langs:\n  - csharp\n  name: CreateContentReadStreamAsync()\n  nameWithType: ByteArrayContent.CreateContentReadStreamAsync()\n  fullName: ByteArrayContent.CreateContentReadStreamAsync()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Creates an HTTP content stream as an asynchronous operation for reading whose backing store is memory from the <xref href=\"System.Net.Http.ByteArrayContent\"></xref>.\n  remarks: This operation will not block. The returned <xref:System.Threading.Tasks.Task%601>object will complete after all of the content stream has been created.\n  syntax:\n    content: protected override System.Threading.Tasks.Task<System.IO.Stream> CreateContentReadStreamAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.IO.Stream}\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/ByteArrayContent.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  commentId: M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.ByteArrayContent\n  langs:\n  - csharp\n  name: SerializeToStreamAsync(Stream, TransportContext)\n  nameWithType: ByteArrayContent.SerializeToStreamAsync(Stream, TransportContext)\n  fullName: ByteArrayContent.SerializeToStreamAsync(Stream, TransportContext)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Serialize and write the byte array provided in the constructor to an HTTP content stream as an asynchronous operation.\n  remarks: This operation does not block. When the returned <xref:System.Threading.Tasks.Task> object completes, the whole byte array has been written to the `stream` parameter.\n  syntax:\n    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The target stream.\n    - id: context\n      type: System.Net.TransportContext\n      description: Information about the transport, like channel binding token. This parameter may be `null`.\n    return:\n      type: System.Threading.Tasks.Task\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Http.ByteArrayContent.SerializeToStreamAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/ByteArrayContent.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)\n  commentId: M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)\n  id: TryComputeLength(System.Int64@)\n  parent: System.Net.Http.ByteArrayContent\n  langs:\n  - csharp\n  name: TryComputeLength(Int64)\n  nameWithType: ByteArrayContent.TryComputeLength(Int64)\n  fullName: ByteArrayContent.TryComputeLength(Int64)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Determines whether a byte array has a valid length in bytes.\n  remarks: \"The <xref:System.Net.Http.ByteArrayContent.TryComputeLength%2A> method gives a derived content type the ability to calculate the content length. This is useful for content types which are able to easily calculate the content length. If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`. If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.  \\n  \\n This method always returned `true` for <xref:System.Net.Http.ByteArrayContent>.\"\n  syntax:\n    content: protected override bool TryComputeLength (out long length);\n    parameters:\n    - id: length\n      type: System.Int64\n      description: The length in bytes of the byte array.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>length</code> is a valid length; otherwise, `false`.'\n  overload: System.Net.Http.ByteArrayContent.TryComputeLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/ByteArrayContent.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Net.Http.HttpContent\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpContent\n  nameWithType: HttpContent\n  fullName: System.Net.Http.HttpContent\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[])\n  parent: System.Net.Http.ByteArrayContent\n  isExternal: false\n  name: ByteArrayContent(Byte[])\n  nameWithType: ByteArrayContent.ByteArrayContent(Byte[])\n  fullName: ByteArrayContent.ByteArrayContent(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.Http.ByteArrayContent\n  isExternal: false\n  name: ByteArrayContent(Byte[], Int32, Int32)\n  nameWithType: ByteArrayContent.ByteArrayContent(Byte[], Int32, Int32)\n  fullName: ByteArrayContent.ByteArrayContent(Byte[], Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync\n  parent: System.Net.Http.ByteArrayContent\n  isExternal: false\n  name: CreateContentReadStreamAsync()\n  nameWithType: ByteArrayContent.CreateContentReadStreamAsync()\n  fullName: ByteArrayContent.CreateContentReadStreamAsync()\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.IO.Stream\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Threading.Tasks.Task{System.IO.Stream}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Stream>\n  nameWithType: Task<Stream>\n  fullName: System.Threading.Tasks.Task<System.IO.Stream>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IO.Stream\n    name: Stream\n    nameWithType: Stream\n    fullName: System.IO.Stream\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.ByteArrayContent\n  isExternal: false\n  name: SerializeToStreamAsync(Stream, TransportContext)\n  nameWithType: ByteArrayContent.SerializeToStreamAsync(Stream, TransportContext)\n  fullName: ByteArrayContent.SerializeToStreamAsync(Stream, TransportContext)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Net.TransportContext\n  parent: System.Net\n  isExternal: false\n  name: TransportContext\n  nameWithType: TransportContext\n  fullName: System.Net.TransportContext\n- uid: System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)\n  parent: System.Net.Http.ByteArrayContent\n  isExternal: false\n  name: TryComputeLength(Int64)\n  nameWithType: ByteArrayContent.TryComputeLength(Int64)\n  fullName: ByteArrayContent.TryComputeLength(Int64)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.Http.ByteArrayContent.#ctor*\n  parent: System.Net.Http.ByteArrayContent\n  isExternal: false\n  name: ByteArrayContent\n  nameWithType: ByteArrayContent.ByteArrayContent\n  fullName: ByteArrayContent.ByteArrayContent\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/ByteArrayContent.xml\n- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync*\n  parent: System.Net.Http.ByteArrayContent\n  isExternal: false\n  name: CreateContentReadStreamAsync\n  nameWithType: ByteArrayContent.CreateContentReadStreamAsync\n  fullName: ByteArrayContent.CreateContentReadStreamAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/ByteArrayContent.xml\n- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync*\n  parent: System.Net.Http.ByteArrayContent\n  isExternal: false\n  name: SerializeToStreamAsync\n  nameWithType: ByteArrayContent.SerializeToStreamAsync\n  fullName: ByteArrayContent.SerializeToStreamAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/ByteArrayContent.xml\n- uid: System.Net.Http.ByteArrayContent.TryComputeLength*\n  parent: System.Net.Http.ByteArrayContent\n  isExternal: false\n  name: TryComputeLength\n  nameWithType: ByteArrayContent.TryComputeLength\n  fullName: ByteArrayContent.TryComputeLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/ByteArrayContent.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: HttpContent.CopyToAsync(Stream)\n  fullName: HttpContent.CopyToAsync(Stream)\n- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: CopyToAsync(Stream, TransportContext)\n  nameWithType: HttpContent.CopyToAsync(Stream, TransportContext)\n  fullName: HttpContent.CopyToAsync(Stream, TransportContext)\n- uid: System.Net.Http.HttpContent.Dispose\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: Dispose()\n  nameWithType: HttpContent.Dispose()\n  fullName: HttpContent.Dispose()\n- uid: System.Net.Http.HttpContent.Dispose(System.Boolean)\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: HttpContent.Dispose(Boolean)\n  fullName: HttpContent.Dispose(Boolean)\n- uid: System.Net.Http.HttpContent.Headers\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: Headers\n  nameWithType: HttpContent.Headers\n  fullName: HttpContent.Headers\n- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: LoadIntoBufferAsync()\n  nameWithType: HttpContent.LoadIntoBufferAsync()\n  fullName: HttpContent.LoadIntoBufferAsync()\n- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: LoadIntoBufferAsync(Int64)\n  nameWithType: HttpContent.LoadIntoBufferAsync(Int64)\n  fullName: HttpContent.LoadIntoBufferAsync(Int64)\n- uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsByteArrayAsync()\n  nameWithType: HttpContent.ReadAsByteArrayAsync()\n  fullName: HttpContent.ReadAsByteArrayAsync()\n- uid: System.Net.Http.HttpContent.ReadAsStreamAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsStreamAsync()\n  nameWithType: HttpContent.ReadAsStreamAsync()\n  fullName: HttpContent.ReadAsStreamAsync()\n- uid: System.Net.Http.HttpContent.ReadAsStringAsync\n  parent: System.Net.Http.HttpContent\n  isExternal: false\n  name: ReadAsStringAsync()\n  nameWithType: HttpContent.ReadAsStringAsync()\n  fullName: HttpContent.ReadAsStringAsync()\n"}