{"nodes":[{"content":"Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of individual, selectable child items. The children of this control must implement <xref href=\"System.Windows.Automation.Provider.ISelectionItemProvider\"></xref>.","nodes":[{"pos":[0,284],"content":"Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of individual, selectable child items. The children of this control must implement <xref href=\"System.Windows.Automation.Provider.ISelectionItemProvider\"></xref>.","nodes":[{"content":"Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of individual, selectable child items.","pos":[0,160]},{"content":"The children of this control must implement <ph id=\"ph1\">&lt;xref href=\"System.Windows.Automation.Provider.ISelectionItemProvider\"&gt;&lt;/xref&gt;</ph>.","pos":[161,284],"source":" The children of this control must implement <xref href=\"System.Windows.Automation.Provider.ISelectionItemProvider\"></xref>."}]}],"pos":[692,977],"yaml":true},{"content":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionPattern> control pattern.","nodes":[{"pos":[0,128],"content":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionPattern> control pattern.","nodes":[{"content":"Implemented on a UI Automation provider that must support the <ph id=\"ph1\">&lt;xref:System.Windows.Automation.SelectionPattern&gt;</ph> control pattern.","pos":[0,128],"source":"Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionPattern> control pattern."}]}],"pos":[988,1117],"yaml":true,"extradata":"MT"},{"content":"Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.","nodes":[{"pos":[0,126],"content":"Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.","nodes":[{"content":"Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.","pos":[0,126]}]}],"pos":[3222,3349],"yaml":true},{"content":"This property may be dynamic. For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.","nodes":[{"pos":[0,184],"content":"This property may be dynamic. For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.","nodes":[{"content":"This property may be dynamic. For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.","pos":[0,184],"nodes":[{"content":"This property may be dynamic.","pos":[0,29]},{"content":"For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.","pos":[30,184]}]}]}],"pos":[3360,3545],"yaml":true,"extradata":"MT"},{"content":"`true` if multiple selection is allowed; otherwise `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if multiple selection is allowed; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if multiple selection is allowed; otherwise `false`."}],"pos":[4269,4331],"yaml":true},{"content":"Retrieves a UI Automation provider for each child element that is selected.","nodes":[{"pos":[0,75],"content":"Retrieves a UI Automation provider for each child element that is selected.","nodes":[{"content":"Retrieves a UI Automation provider for each child element that is selected.","pos":[0,75]}]}],"pos":[5469,5545],"yaml":true},{"content":"A default empty array is returned by UIAutoCore.dll when the provider doesn't supply a value.","nodes":[{"pos":[0,93],"content":"A default empty array is returned by UIAutoCore.dll when the provider doesn't supply a value.","nodes":[{"content":"A default empty array is returned by UIAutoCore.dll when the provider doesn't supply a value.","pos":[0,93]}]}],"pos":[5556,5650],"yaml":true,"extradata":"MT"},{"content":"A collection of UI Automation providers.","nodes":[{"pos":[0,40],"content":"A collection of UI Automation providers.","nodes":[{"content":"A collection of UI Automation providers.","pos":[0,40]}]}],"pos":[6457,6498],"yaml":true},{"content":"Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.","nodes":[{"pos":[0,114],"content":"Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.","nodes":[{"content":"Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.","pos":[0,114]}]}],"pos":[7669,7784],"yaml":true},{"content":"This property can be dynamic. For example, the initial state of a control might not have any items selected by default, meaning that <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> is `false`. However, after an item is selected, the control must always have at least one item selected.","nodes":[{"pos":[0,321],"content":"This property can be dynamic. For example, the initial state of a control might not have any items selected by default, meaning that <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> is `false`. However, after an item is selected, the control must always have at least one item selected.","nodes":[{"content":"This property can be dynamic.","pos":[0,29]},{"content":"For example, the initial state of a control might not have any items selected by default, meaning that <ph id=\"ph1\">&lt;xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","pos":[30,228],"source":" For example, the initial state of a control might not have any items selected by default, meaning that <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> is `false`."},{"content":"However, after an item is selected, the control must always have at least one item selected.","pos":[229,321]}]}],"pos":[7795,8117],"yaml":true,"extradata":"MT"},{"content":"`true` if selection is required; otherwise `false`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">`true`</ph> if selection is required; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if selection is required; otherwise `false`."}],"pos":[8839,8893],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Automation.Provider.ISelectionProvider\n  commentId: T:System.Windows.Automation.Provider.ISelectionProvider\n  id: ISelectionProvider\n  children:\n  - System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple\n  - System.Windows.Automation.Provider.ISelectionProvider.GetSelection\n  - System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired\n  langs:\n  - csharp\n  name: ISelectionProvider\n  nameWithType: ISelectionProvider\n  fullName: System.Windows.Automation.Provider.ISelectionProvider\n  type: Interface\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Exposes methods and properties to support UI Automation client access to controls that act as containers for a collection of individual, selectable child items. The children of this control must implement <xref href=\"System.Windows.Automation.Provider.ISelectionItemProvider\"></xref>.\n  remarks: Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.SelectionPattern> control pattern.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"fb8b03af-3bdf-48d4-bd36-1a65793be168\")]\n\n      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\n\n      public interface ISelectionProvider\n  derivedClasses:\n  - System.Windows.Automation.Peers.CalendarAutomationPeer\n  - System.Windows.Automation.Peers.DataGridAutomationPeer\n  - System.Windows.Automation.Peers.DataGridItemAutomationPeer\n  - System.Windows.Automation.Peers.RibbonAutomationPeer\n  - System.Windows.Automation.Peers.RibbonGalleryAutomationPeer\n  - System.Windows.Automation.Peers.SelectorAutomationPeer\n  - System.Windows.Automation.Peers.TabControlAutomationPeer\n  - System.Windows.Automation.Peers.TreeViewAutomationPeer\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  - type: System.Runtime.InteropServices.GuidAttribute\n  - type: System.Runtime.InteropServices.InterfaceTypeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISelectionProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\n- uid: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple\n  commentId: P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple\n  id: CanSelectMultiple\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  langs:\n  - csharp\n  name: CanSelectMultiple\n  nameWithType: ISelectionProvider.CanSelectMultiple\n  fullName: ISelectionProvider.CanSelectMultiple\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets a value that specifies whether the UI Automation provider allows more than one child element to be selected concurrently.\n  remarks: This property may be dynamic. For example, in rare cases a control might allow multiple items to be selected on initialization but subsequently allow only single selections to be made.\n  example:\n  - \"The following example shows an implementation of this method for a list that does not allow selection of more than one item at a time.  \\n  \\n [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#canselectmultiple)]\\n [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#CanSelectMultiple](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#canselectmultiple)]\"\n  syntax:\n    content: public bool CanSelectMultiple { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if multiple selection is allowed; otherwise `false`.'\n  overload: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISelectionProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\n- uid: System.Windows.Automation.Provider.ISelectionProvider.GetSelection\n  commentId: M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection\n  id: GetSelection\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  langs:\n  - csharp\n  name: GetSelection()\n  nameWithType: ISelectionProvider.GetSelection()\n  fullName: ISelectionProvider.GetSelection()\n  type: Method\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Retrieves a UI Automation provider for each child element that is selected.\n  remarks: A default empty array is returned by UIAutoCore.dll when the provider doesn't supply a value.\n  example:\n  - \"The following example shows one possible implementation of this method for a list box that supports only single selection.  \\n  \\n [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#getselection)]\\n [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#GetSelection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#getselection)]\"\n  syntax:\n    content: public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetSelection ();\n    parameters: []\n    return:\n      type: System.Windows.Automation.Provider.IRawElementProviderSimple[]\n      description: A collection of UI Automation providers.\n  overload: System.Windows.Automation.Provider.ISelectionProvider.GetSelection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISelectionProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\n- uid: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired\n  commentId: P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired\n  id: IsSelectionRequired\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  langs:\n  - csharp\n  name: IsSelectionRequired\n  nameWithType: ISelectionProvider.IsSelectionRequired\n  fullName: ISelectionProvider.IsSelectionRequired\n  type: Property\n  assemblies:\n  - UIAutomationProvider\n  namespace: System.Windows.Automation.Provider\n  summary: Gets a value that specifies whether the UI Automation provider requires at least one child element to be selected.\n  remarks: This property can be dynamic. For example, the initial state of a control might not have any items selected by default, meaning that <xref:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired%2A> is `false`. However, after an item is selected, the control must always have at least one item selected.\n  example:\n  - \"The following example shows an implementation of this method for a list that requires an item to be selected at all times.  \\n  \\n [!code-csharp[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/CSharp/ListFragment.cs#isselectionrequired)]\\n [!code-vb[UIAISelectionProvider_ISelectionItemProvider_snip#IsSelectionRequired](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAISelectionProvider_ISelectionItemProvider_snip/visualbasic/listfragment.vb#isselectionrequired)]\"\n  syntax:\n    content: public bool IsSelectionRequired { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if selection is required; otherwise `false`.'\n  overload: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISelectionProvider.xml\n  ms.technology:\n  - dotnet-wpf\n  author: Xansky\n  ms.author: mhopkins\n  manager: markl\nreferences:\n- uid: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: CanSelectMultiple\n  nameWithType: ISelectionProvider.CanSelectMultiple\n  fullName: ISelectionProvider.CanSelectMultiple\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Automation.Provider.ISelectionProvider.GetSelection\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: GetSelection()\n  nameWithType: ISelectionProvider.GetSelection()\n  fullName: ISelectionProvider.GetSelection()\n- uid: System.Windows.Automation.Provider.IRawElementProviderSimple\n  name: IRawElementProviderSimple\n  nameWithType: IRawElementProviderSimple\n  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple\n- uid: System.Windows.Automation.Provider.IRawElementProviderSimple[]\n  parent: System.Windows.Automation.Provider\n  isExternal: false\n  name: IRawElementProviderSimple[]\n  nameWithType: IRawElementProviderSimple[]\n  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple[]\n  spec.csharp:\n  - uid: System.Windows.Automation.Provider.IRawElementProviderSimple\n    name: IRawElementProviderSimple\n    nameWithType: IRawElementProviderSimple\n    fullName: System.Windows.Automation.Provider.IRawElementProviderSimple\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: IsSelectionRequired\n  nameWithType: ISelectionProvider.IsSelectionRequired\n  fullName: ISelectionProvider.IsSelectionRequired\n- uid: System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple*\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: CanSelectMultiple\n  nameWithType: ISelectionProvider.CanSelectMultiple\n  fullName: ISelectionProvider.CanSelectMultiple\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISelectionProvider.xml\n- uid: System.Windows.Automation.Provider.ISelectionProvider.GetSelection*\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: GetSelection\n  nameWithType: ISelectionProvider.GetSelection\n  fullName: ISelectionProvider.GetSelection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISelectionProvider.xml\n- uid: System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired*\n  parent: System.Windows.Automation.Provider.ISelectionProvider\n  isExternal: false\n  name: IsSelectionRequired\n  nameWithType: ISelectionProvider.IsSelectionRequired\n  fullName: ISelectionProvider.IsSelectionRequired\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Automation.Provider/ISelectionProvider.xml\n"}