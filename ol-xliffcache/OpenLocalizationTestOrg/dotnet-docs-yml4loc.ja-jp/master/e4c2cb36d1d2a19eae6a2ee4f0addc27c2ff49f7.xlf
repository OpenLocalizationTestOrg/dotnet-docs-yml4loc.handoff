<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4c2cb36d1d2a19eae6a2ee4f0addc27c2ff49f7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Channels.CommunicationObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86eab5a517764b4f7ab3dbbdda8cbd9827865666</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8cc56ca34b486e5405b643b3a02dccae71207e3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a common base implementation for the basic state machine common to all communication-oriented objects in the system, including channels, listeners, and the channel and listener factories.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> interface for all communication objects in <ph id="ph3">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method implementations handle parameter validation, raise events that notify the occurrence of state transitions, provide the means to associated additional processing with these state transitions, and ensure that such state changes are coordinated.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.CommunicationObject"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.CommunicationObject"&gt;&lt;/xref&gt;</ph> class with the mutually exclusive lock to protect the state transitions specified.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The mutually exclusive lock that protects the class instance during a state transition.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Causes a communication object to transition immediately from its current state into the closing state.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method indicates that any unfinished work should be ignored or ungracefully terminated before returning.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method can be used to cancel any outstanding operations, including outstanding calls to <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To gracefully transition a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> from any state other than <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, call <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> or one of its asynchronous versions, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to close a communication object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method causes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state within a default interval of time.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, finish sending any buffered messages).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object was initially in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives notification of the completion of the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to close a communication object with a specified timeout.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method causes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state with in a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, finish sending any buffered messages).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object was initially in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives notification of the completion of the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to open a communication object.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object is initially in the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives notification of the completion of the asynchronous open operation.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous open operation.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous open operation.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to open a communication object within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object is initially in the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the send operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives notification of the completion of the asynchronous open operation.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous open operation.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous open operation.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Causes a communication object to transition from its current state into the closed state.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method causes a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, finish sending any buffered messages.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> enters the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> state and remains in it after the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method is called until the transition to the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is completed.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transition consists of making successive calls to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is also an asynchronous version of the close method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Causes a communication object to transition from its current state into the closed state within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method causes a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, finish sending any buffered messages.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> enters the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> state and remains in it after the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method is called until the transition to the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is completed.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transition consists of making successive calls to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is also an asynchronous version of the close method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Occurs when a communication object transitions into the closed state.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Occurs when a communication object transitions into the closing state.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closing&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the default interval of time provided for a close operation to complete.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The default <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the default interval of time provided for an open operation to complete.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The default <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to close a communication object.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>A synchronous version of this method is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.CommunicationObject.BeginClose*"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to open a communication object.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>A synchronous version of this method is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.CommunicationObject.BeginClose*"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Causes a communication object to transition from its current state into the faulted state.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Occurs when a communication object transitions into the faulted state.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets the type of communication object.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The type of communication object.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the communication object has been disposed.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>An object is considered disposed when the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the communication object is in a closed state; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnAbort%2A&gt;</ph> if the communication object is not already in a <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph>method.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the on close operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives notification of the completion of the asynchronous on close operation.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on close operation.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous on close operation.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>To insert processing after a communication object transitions to a opening state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the on open operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives notification of the completion of the asynchronous on open operation.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on open operation.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous on open operation.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of an asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the on close operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.ServiceModel.Channels.CommunicationObject.Close*"&gt;&lt;/xref&gt;</ph> was called on an object in the <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A communication error occurred while closing the object.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Invoked during the transition of a communication object into the closing state.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> (and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> if the communication object is not already in a <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Invoked during the transition of a communication object into the closing state.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation on the close of a communication object.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%28System.IAsyncResult%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> if the communication object is not already in a <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation on the open of a communication object.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndOpen%2A&gt;</ph> (and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Inserts processing on a communication object after it transitions to the faulted state due to the invocation of a synchronous fault operation.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpen%28System.TimeSpan%29&gt;</ph> (after calling <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and before calling <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>) if the communication object is initially in the <ph id="ph5">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>To insert processing as a communication object transitions to a opening state due to the invocation of an asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the on open operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Invoked during the transition of a communication object into the opened state.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This provides a way to add processing when it is called by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Invoked during the transition of a communication object into the opening state.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This provides a way to add processing when it is called by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Causes a communication object to transition from the created state into the opened state.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>When called, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method causes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state and calls <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method completes the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method by setting the state of the object to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph>is usable (for example, messages can be received), but it is no longer configurable.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is also an asynchronous version of the open method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Credentials Capture with Windows Authentication</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using Windows authentication, credentials used by the service are based on the current context thread.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>The credentials are obtained when the <ph id="ph1">`Open`</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>For asynchronous calls, credentials are captured when the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> is invoked.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the actual credentials cannot be guaranteed.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the credentials of the caller may be switched to another identity.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Message Security with a Windows Client<ept id="p1">](~/docs/framework/wcf/feature-details/message-security-with-a-windows-client.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>When called, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method causes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state and calls <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method completes the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method by setting the state of the object to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is usable (for example, messages can be received), but it is no longer configurable.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is also an asynchronous version of the open method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Occurs when a communication object transitions into the opened state.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opened&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Occurs when a communication object transitions into the opening state.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opening&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates the current state of the communication object.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A value from the <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState"&gt;&lt;/xref&gt;</ph> enumeration that indicates the current state of the object.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Gets the mutually exclusive lock that protects the class instance during a state transition.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The mutually exclusive lock that protects the class instance during a state transition.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Throws an exception if the communication object is disposed.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is thrown if the communication object is in a <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>A communication object is disposed once <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> is called on it.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Throws an exception if the communication object the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.CommunicationObject.State"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Created"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since an object is immutable after <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> is called on it, the only state that is both mutable and not disposed is the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Throws an exception if the communication object is not in the <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The communication object is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Created"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state and cannot be used.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>