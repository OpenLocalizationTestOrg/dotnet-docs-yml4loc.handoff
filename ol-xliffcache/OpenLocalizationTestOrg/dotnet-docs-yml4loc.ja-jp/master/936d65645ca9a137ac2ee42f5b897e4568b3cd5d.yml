### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.AsyncCompletedEventArgs
  commentId: T:System.ComponentModel.AsyncCompletedEventArgs
  id: AsyncCompletedEventArgs
  children:
  - System.ComponentModel.AsyncCompletedEventArgs.#ctor
  - System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  - System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  - System.ComponentModel.AsyncCompletedEventArgs.Error
  - System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  - System.ComponentModel.AsyncCompletedEventArgs.UserState
  langs:
  - csharp
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
  type: Class
  assemblies:
  - System.ComponentModel.EventBasedAsync
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Provides data for the *MethodName*`Completed` event.
  remarks: "If you are using a class that implements the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), the class will provide a *MethodName*`Completed` event. If you add an instance of the <xref:System.ComponentModel.AsyncCompletedEventHandler?displayProperty=fullName> delegate to the event, you will receive information about the outcome of asynchronous operations in the <xref:System.ComponentModel.AsyncCompletedEventArgs> parameter of the corresponding event-handler method.  \n  \n The client application's event-handler delegate can check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property to determine if the asynchronous task was cancelled.  \n  \n The client application's event-handler delegate can check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property to determine if an exception occurred during execution of the asynchronous task.  \n  \n If the class supports multiple asynchronous methods, or multiple calls to the same asynchronous method, you can determine which task raised the *MethodName*`Completed` event by checking the value of the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property. Your code will need to track these tokens, known as task IDs, as their corresponding asynchronous tasks start and complete."
  example:
  - "The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations. This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=fullName> class.  \n  \n [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]\n [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  \n[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]\n[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]"
  syntax:
    content: 'public class AsyncCompletedEventArgs : EventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  derivedClasses:
  - System.Activities.InvokeCompletedEventArgs
  - System.ComponentModel.RunWorkerCompletedEventArgs
  - System.Deployment.Application.CheckForUpdateCompletedEventArgs
  - System.Deployment.Application.DownloadApplicationCompletedEventArgs
  - System.Deployment.Application.DownloadFileGroupCompletedEventArgs
  - System.Deployment.Application.GetManifestCompletedEventArgs
  - System.Device.Location.ResolveAddressCompletedEventArgs
  - System.Net.DownloadDataCompletedEventArgs
  - System.Net.DownloadStringCompletedEventArgs
  - System.Net.OpenReadCompletedEventArgs
  - System.Net.OpenWriteCompletedEventArgs
  - System.Net.UploadDataCompletedEventArgs
  - System.Net.UploadFileCompletedEventArgs
  - System.Net.UploadStringCompletedEventArgs
  - System.Net.UploadValuesCompletedEventArgs
  - System.Net.NetworkInformation.PingCompletedEventArgs
  - System.Net.PeerToPeer.ResolveCompletedEventArgs
  - System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs
  - System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs
  - System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs
  - System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs
  - System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs
  - System.ServiceModel.Discovery.FindCompletedEventArgs
  - System.ServiceModel.Discovery.ResolveCompletedEventArgs
  - System.Speech.Recognition.EmulateRecognizeCompletedEventArgs
  - System.Speech.Recognition.LoadGrammarCompletedEventArgs
  - System.Speech.Recognition.RecognizeCompletedEventArgs
  - System.Speech.Synthesis.PromptEventArgs
  - System.Web.Services.Protocols.InvokeCompletedEventArgs
  - System.Windows.Documents.GetPageCompletedEventArgs
  - System.Windows.Documents.GetPageNumberCompletedEventArgs
  - System.Windows.Documents.GetPageRootCompletedEventArgs
  - System.Windows.Documents.Serialization.WritingCompletedEventArgs
  - System.Windows.Xps.Serialization.XpsSerializationCompletedEventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor
  commentId: M:System.ComponentModel.AsyncCompletedEventArgs.#ctor
  id: '#ctor'
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  name: AsyncCompletedEventArgs()
  nameWithType: AsyncCompletedEventArgs.AsyncCompletedEventArgs()
  fullName: AsyncCompletedEventArgs.AsyncCompletedEventArgs()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.AsyncCompletedEventArgs"></xref> class.
  syntax:
    content: >-
      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public AsyncCompletedEventArgs ();
    parameters: []
  overload: System.ComponentModel.AsyncCompletedEventArgs.#ctor*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  commentId: M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  id: '#ctor(System.Exception,System.Boolean,System.Object)'
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  name: AsyncCompletedEventArgs(Exception, Boolean, Object)
  nameWithType: AsyncCompletedEventArgs.AsyncCompletedEventArgs(Exception, Boolean, Object)
  fullName: AsyncCompletedEventArgs.AsyncCompletedEventArgs(Exception, Boolean, Object)
  type: Constructor
  assemblies:
  - System.ComponentModel.EventBasedAsync
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.AsyncCompletedEventArgs"></xref> class.
  syntax:
    content: public AsyncCompletedEventArgs (Exception error, bool cancelled, object userState);
    parameters:
    - id: error
      type: System.Exception
      description: Any error that occurred during the asynchronous operation.
    - id: cancelled
      type: System.Boolean
      description: A value indicating whether the asynchronous operation was canceled.
    - id: userState
      type: System.Object
      description: The optional user-supplied state object passed to the <xref href="System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)"></xref> method.
  overload: System.ComponentModel.AsyncCompletedEventArgs.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  id: Cancelled
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  name: Cancelled
  nameWithType: AsyncCompletedEventArgs.Cancelled
  fullName: AsyncCompletedEventArgs.Cancelled
  type: Property
  assemblies:
  - System.ComponentModel.EventBasedAsync
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Gets a value indicating whether an asynchronous operation has been canceled.
  remarks: "When the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property is `true`, the asynchronous operation was interrupted.  \n  \n The client application's event-handler delegate should check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property before accessing any properties in a class derived from <xref:System.ComponentModel.AsyncCompletedEventArgs>; otherwise, the property will raise an <xref:System.InvalidOperationException> if the asynchronous operation was interrupted."
  example:
  - "The following code example demonstrates the using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations. This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=fullName> class.  \n  \n [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]\n [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  \n[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]\n[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]"
  syntax:
    content: public bool Cancelled { get; }
    return:
      type: System.Boolean
      description: '`true` if the background operation has been canceled; otherwise `false`. The default is `false`.'
  overload: System.ComponentModel.AsyncCompletedEventArgs.Cancelled*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AsyncCompletedEventArgs.Error
  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.Error
  id: Error
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  name: Error
  nameWithType: AsyncCompletedEventArgs.Error
  fullName: AsyncCompletedEventArgs.Error
  type: Property
  assemblies:
  - System.ComponentModel.EventBasedAsync
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Gets a value indicating which error occurred during an asynchronous operation.
  remarks: "If an exception is raised during an asynchronous operation, the class will assign the exception to the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property. The client application's event-handler delegate should check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property before accessing any properties in a class derived from <xref:System.ComponentModel.AsyncCompletedEventArgs>; otherwise, the property will raise a <xref:System.Reflection.TargetInvocationException> with its <xref:System.Exception.InnerException%2A> property holding a reference to <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>.  \n  \n The value of the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is `null` if the operation was canceled."
  example:
  - "The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations. This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=fullName> class.  \n  \n [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]\n [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  \n[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]\n[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]"
  syntax:
    content: public Exception Error { get; }
    return:
      type: System.Exception
      description: An <xref href="System.Exception"></xref> instance, if an error occurred during an asynchronous operation; otherwise `null`.
  overload: System.ComponentModel.AsyncCompletedEventArgs.Error*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  commentId: M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  id: RaiseExceptionIfNecessary
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  name: RaiseExceptionIfNecessary()
  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()
  fullName: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()
  type: Method
  assemblies:
  - System.ComponentModel.EventBasedAsync
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Raises a user-supplied exception if an asynchronous operation failed.
  remarks: ''
  example:
  - "The following code example demonstrates using <xref:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary%2A> in derived class properties.  \n  \n  \n[!code-csharp[System.ComponentModel.AsyncOperationManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#6)]\n[!code-vb[System.ComponentModel.AsyncOperationManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#6)]"
  syntax:
    content: protected void RaiseExceptionIfNecessary ();
    parameters: []
  overload: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.ComponentModel.AsyncCompletedEventArgs.Cancelled"></xref> property is `true`.
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: The <xref href="System.ComponentModel.AsyncCompletedEventArgs.Error"></xref> property has been set by the asynchronous operation. The <xref href="System.Exception.InnerException"></xref> property holds a reference to <xref href="System.ComponentModel.AsyncCompletedEventArgs.Error"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState
  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.UserState
  id: UserState
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  name: UserState
  nameWithType: AsyncCompletedEventArgs.UserState
  fullName: AsyncCompletedEventArgs.UserState
  type: Property
  assemblies:
  - System.ComponentModel.EventBasedAsync
  - System
  - netstandard
  namespace: System.ComponentModel
  summary: Gets the unique identifier for the asynchronous task.
  remarks: "If a class supports multiple asynchronous methods, or multiple invocations of a single method, you can determine which task raised the *MethodName*`Completed` event by checking the value of the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property. Your code will need track these tokens, known as task IDs, as their corresponding asynchronous tasks start and complete.  \n  \n The value of this property is set during the original call to the asynchronous method that started the task."
  example:
  - "The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations. This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=fullName> class.  \n  \n [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]\n [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  \n[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]\n[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]"
  syntax:
    content: public object UserState { get; }
    return:
      type: System.Object
      description: An object reference that uniquely identifies the asynchronous task; otherwise, `null` if no value has been set.
  overload: System.ComponentModel.AsyncCompletedEventArgs.UserState*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Reflection.TargetInvocationException
  parent: System.Reflection
  isExternal: false
  name: TargetInvocationException
  nameWithType: TargetInvocationException
  fullName: System.Reflection.TargetInvocationException
- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: AsyncCompletedEventArgs()
  nameWithType: AsyncCompletedEventArgs.AsyncCompletedEventArgs()
  fullName: AsyncCompletedEventArgs.AsyncCompletedEventArgs()
- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: AsyncCompletedEventArgs(Exception, Boolean, Object)
  nameWithType: AsyncCompletedEventArgs.AsyncCompletedEventArgs(Exception, Boolean, Object)
  fullName: AsyncCompletedEventArgs.AsyncCompletedEventArgs(Exception, Boolean, Object)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: Cancelled
  nameWithType: AsyncCompletedEventArgs.Cancelled
  fullName: AsyncCompletedEventArgs.Cancelled
- uid: System.ComponentModel.AsyncCompletedEventArgs.Error
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: Error
  nameWithType: AsyncCompletedEventArgs.Error
  fullName: AsyncCompletedEventArgs.Error
- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: RaiseExceptionIfNecessary()
  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()
  fullName: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()
- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: UserState
  nameWithType: AsyncCompletedEventArgs.UserState
  fullName: AsyncCompletedEventArgs.UserState
- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor*
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs.AsyncCompletedEventArgs
  fullName: AsyncCompletedEventArgs.AsyncCompletedEventArgs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled*
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: Cancelled
  nameWithType: AsyncCompletedEventArgs.Cancelled
  fullName: AsyncCompletedEventArgs.Cancelled
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
- uid: System.ComponentModel.AsyncCompletedEventArgs.Error*
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: Error
  nameWithType: AsyncCompletedEventArgs.Error
  fullName: AsyncCompletedEventArgs.Error
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary*
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: RaiseExceptionIfNecessary
  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  fullName: AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState*
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: UserState
  nameWithType: AsyncCompletedEventArgs.UserState
  fullName: AsyncCompletedEventArgs.UserState
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/AsyncCompletedEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
