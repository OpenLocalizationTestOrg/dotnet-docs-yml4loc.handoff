{"nodes":[{"content":"Represents an object that waits for the completion of an asynchronous task and provides a parameter for the result.","nodes":[{"pos":[0,115],"content":"Represents an object that waits for the completion of an asynchronous task and provides a parameter for the result.","nodes":[{"content":"Represents an object that waits for the completion of an asynchronous task and provides a parameter for the result.","pos":[0,115]}]}],"pos":[775,891],"yaml":true},{"content":"This type and its members are intended for use by the compiler.","nodes":[{"pos":[0,63],"content":"This type and its members are intended for use by the compiler.","nodes":[{"content":"This type and its members are intended for use by the compiler.","pos":[0,63]}]}],"pos":[902,966],"yaml":true,"extradata":"MT"},{"content":"The result for the task.","nodes":[{"pos":[0,24],"content":"The result for the task.","nodes":[{"content":"The result for the task.","pos":[0,24]}]}],"pos":[1143,1168],"yaml":true},{"content":"Ends the wait for the completion of the asynchronous task.","nodes":[{"pos":[0,58],"content":"Ends the wait for the completion of the asynchronous task.","nodes":[{"content":"Ends the wait for the completion of the asynchronous task.","pos":[0,58]}]}],"pos":[2870,2929],"yaml":true},{"content":"This type and its members are intended for use by the compiler.","nodes":[{"pos":[0,63],"content":"This type and its members are intended for use by the compiler.","nodes":[{"content":"This type and its members are intended for use by the compiler.","pos":[0,63]}]}],"pos":[2940,3004],"yaml":true,"extradata":"MT"},{"content":"The result of the completed task.","nodes":[{"pos":[0,33],"content":"The result of the completed task.","nodes":[{"content":"The result of the completed task.","pos":[0,33]}]}],"pos":[3126,3160],"yaml":true},{"content":"The <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object was not properly initialized.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"&gt;&lt;/xref&gt;</ph> object was not properly initialized.","source":"The <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object was not properly initialized."}],"pos":[3347,3455],"yaml":true},{"content":"The task was canceled.","nodes":[{"pos":[0,22],"content":"The task was canceled.","nodes":[{"content":"The task was canceled.","pos":[0,22]}]}],"pos":[3589,3612],"yaml":true},{"content":"The task completed in a <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state.","nodes":[{"pos":[0,93],"content":"The task completed in a <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"&gt;&lt;/xref&gt;</ph> state.","source":"The task completed in a <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state."}],"pos":[3690,3784],"yaml":true},{"content":"Gets a value that indicates whether the asynchronous task has completed.","nodes":[{"pos":[0,72],"content":"Gets a value that indicates whether the asynchronous task has completed.","nodes":[{"content":"Gets a value that indicates whether the asynchronous task has completed.","pos":[0,72]}]}],"pos":[5364,5437],"yaml":true},{"content":"This type and its members are intended for use by the compiler.","nodes":[{"pos":[0,63],"content":"This type and its members are intended for use by the compiler.","nodes":[{"content":"This type and its members are intended for use by the compiler.","pos":[0,63]}]}],"pos":[5448,5512],"yaml":true,"extradata":"MT"},{"content":"`true` if the task has completed; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if the task has completed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the task has completed; otherwise, `false`."}],"pos":[5626,5682],"yaml":true},{"content":"The <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object was not properly initialized.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"&gt;&lt;/xref&gt;</ph> object was not properly initialized.","source":"The <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object was not properly initialized."}],"pos":[5871,5979],"yaml":true},{"content":"Sets the action to perform when the <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object stops waiting for the asynchronous task to complete.","nodes":[{"pos":[0,162],"content":"Sets the action to perform when the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"&gt;&lt;/xref&gt;</ph> object stops waiting for the asynchronous task to complete.","source":"Sets the action to perform when the <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object stops waiting for the asynchronous task to complete."}],"pos":[7626,7789],"yaml":true},{"content":"This type and its members are intended for use by the compiler.","nodes":[{"pos":[0,63],"content":"This type and its members are intended for use by the compiler.","nodes":[{"content":"This type and its members are intended for use by the compiler.","pos":[0,63]}]}],"pos":[7800,7864],"yaml":true,"extradata":"MT"},{"content":"The action to perform when the wait operation completes.","nodes":[{"pos":[0,56],"content":"The action to perform when the wait operation completes.","nodes":[{"content":"The action to perform when the wait operation completes.","pos":[0,56]}]}],"pos":[8018,8075],"yaml":true},{"content":"<code>continuation</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;continuation&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>continuation</code> is `null`."}],"pos":[8262,8299],"yaml":true},{"content":"The <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object was not properly initialized.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"&gt;&lt;/xref&gt;</ph> object was not properly initialized.","source":"The <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object was not properly initialized."}],"pos":[8403,8511],"yaml":true},{"content":"Schedules the continuation action for the asynchronous task associated with this awaiter.","nodes":[{"pos":[0,89],"content":"Schedules the continuation action for the asynchronous task associated with this awaiter.","nodes":[{"content":"Schedules the continuation action for the asynchronous task associated with this awaiter.","pos":[0,89]}]}],"pos":[10211,10301],"yaml":true},{"content":"The action to invoke when the await operation completes.","nodes":[{"pos":[0,56],"content":"The action to invoke when the await operation completes.","nodes":[{"content":"The action to invoke when the await operation completes.","pos":[0,56]}]}],"pos":[10512,10569],"yaml":true},{"content":"<code>continuation</code> is `null`.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;continuation&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>continuation</code> is `null`."}],"pos":[10762,10799],"yaml":true},{"content":"The awaiter was not properly initialized.","nodes":[{"pos":[0,41],"content":"The awaiter was not properly initialized.","nodes":[{"content":"The awaiter was not properly initialized.","pos":[0,41]}]}],"pos":[10909,10951],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1\n  commentId: T:System.Runtime.CompilerServices.TaskAwaiter`1\n  id: TaskAwaiter`1\n  children:\n  - System.Runtime.CompilerServices.TaskAwaiter`1.GetResult\n  - System.Runtime.CompilerServices.TaskAwaiter`1.IsCompleted\n  - System.Runtime.CompilerServices.TaskAwaiter`1.OnCompleted(System.Action)\n  - System.Runtime.CompilerServices.TaskAwaiter`1.UnsafeOnCompleted(System.Action)\n  langs:\n  - csharp\n  name: TaskAwaiter<TResult>\n  nameWithType: TaskAwaiter<TResult>\n  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>\n  type: Struct\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: Represents an object that waits for the completion of an asynchronous task and provides a parameter for the result.\n  remarks: This type and its members are intended for use by the compiler.\n  syntax:\n    content: 'public struct TaskAwaiter<TResult> : System.Runtime.CompilerServices.ICriticalNotifyCompletion'\n    typeParameters:\n    - id: TResult\n      description: The result for the task.\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Runtime.CompilerServices.ICriticalNotifyCompletion\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TaskAwaiter`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.GetResult\n  commentId: M:System.Runtime.CompilerServices.TaskAwaiter`1.GetResult\n  id: GetResult\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  langs:\n  - csharp\n  name: GetResult()\n  nameWithType: TaskAwaiter<TResult>.GetResult()\n  fullName: TaskAwaiter<TResult>.GetResult()\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: Ends the wait for the completion of the asynchronous task.\n  remarks: This type and its members are intended for use by the compiler.\n  syntax:\n    content: public TResult GetResult ();\n    parameters: []\n    return:\n      type: TResult\n      description: The result of the completed task.\n  overload: System.Runtime.CompilerServices.TaskAwaiter`1.GetResult*\n  exceptions:\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: The <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object was not properly initialized.\n  - type: System.Threading.Tasks.TaskCanceledException\n    commentId: T:System.Threading.Tasks.TaskCanceledException\n    description: The task was canceled.\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: The task completed in a <xref href=\"System.Threading.Tasks.TaskStatus.Faulted\"></xref> state.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TaskAwaiter`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.IsCompleted\n  commentId: P:System.Runtime.CompilerServices.TaskAwaiter`1.IsCompleted\n  id: IsCompleted\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  langs:\n  - csharp\n  name: IsCompleted\n  nameWithType: TaskAwaiter<TResult>.IsCompleted\n  fullName: TaskAwaiter<TResult>.IsCompleted\n  type: Property\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: Gets a value that indicates whether the asynchronous task has completed.\n  remarks: This type and its members are intended for use by the compiler.\n  syntax:\n    content: public bool IsCompleted { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the task has completed; otherwise, `false`.'\n  overload: System.Runtime.CompilerServices.TaskAwaiter`1.IsCompleted*\n  exceptions:\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: The <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object was not properly initialized.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TaskAwaiter`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.OnCompleted(System.Action)\n  commentId: M:System.Runtime.CompilerServices.TaskAwaiter`1.OnCompleted(System.Action)\n  id: OnCompleted(System.Action)\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  langs:\n  - csharp\n  name: OnCompleted(Action)\n  nameWithType: TaskAwaiter<TResult>.OnCompleted(Action)\n  fullName: TaskAwaiter<TResult>.OnCompleted(Action)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: Sets the action to perform when the <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object stops waiting for the asynchronous task to complete.\n  remarks: This type and its members are intended for use by the compiler.\n  syntax:\n    content: public void OnCompleted (Action continuation);\n    parameters:\n    - id: continuation\n      type: System.Action\n      description: The action to perform when the wait operation completes.\n  overload: System.Runtime.CompilerServices.TaskAwaiter`1.OnCompleted*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>continuation</code> is `null`.\n  - type: System.NullReferenceException\n    commentId: T:System.NullReferenceException\n    description: The <xref href=\"System.Runtime.CompilerServices.TaskAwaiter`1\"></xref> object was not properly initialized.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TaskAwaiter`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.UnsafeOnCompleted(System.Action)\n  commentId: M:System.Runtime.CompilerServices.TaskAwaiter`1.UnsafeOnCompleted(System.Action)\n  id: UnsafeOnCompleted(System.Action)\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  langs:\n  - csharp\n  name: UnsafeOnCompleted(Action)\n  nameWithType: TaskAwaiter<TResult>.UnsafeOnCompleted(Action)\n  fullName: TaskAwaiter<TResult>.UnsafeOnCompleted(Action)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: Schedules the continuation action for the asynchronous task associated with this awaiter.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void UnsafeOnCompleted (Action continuation);\n    parameters:\n    - id: continuation\n      type: System.Action\n      description: The action to invoke when the await operation completes.\n  overload: System.Runtime.CompilerServices.TaskAwaiter`1.UnsafeOnCompleted*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>continuation</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The awaiter was not properly initialized.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TaskAwaiter`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.NullReferenceException\n  parent: System\n  isExternal: false\n  name: NullReferenceException\n  nameWithType: NullReferenceException\n  fullName: System.NullReferenceException\n- uid: System.Threading.Tasks.TaskCanceledException\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCanceledException\n  nameWithType: TaskCanceledException\n  fullName: System.Threading.Tasks.TaskCanceledException\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.GetResult\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  isExternal: false\n  name: GetResult()\n  nameWithType: TaskAwaiter<TResult>.GetResult()\n  fullName: TaskAwaiter<TResult>.GetResult()\n- uid: TResult\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.IsCompleted\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  isExternal: false\n  name: IsCompleted\n  nameWithType: TaskAwaiter<TResult>.IsCompleted\n  fullName: TaskAwaiter<TResult>.IsCompleted\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.OnCompleted(System.Action)\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  isExternal: false\n  name: OnCompleted(Action)\n  nameWithType: TaskAwaiter<TResult>.OnCompleted(Action)\n  fullName: TaskAwaiter<TResult>.OnCompleted(Action)\n- uid: System.Action\n  parent: System\n  isExternal: false\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.UnsafeOnCompleted(System.Action)\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  isExternal: false\n  name: UnsafeOnCompleted(Action)\n  nameWithType: TaskAwaiter<TResult>.UnsafeOnCompleted(Action)\n  fullName: TaskAwaiter<TResult>.UnsafeOnCompleted(Action)\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.GetResult*\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  isExternal: false\n  name: GetResult\n  nameWithType: TaskAwaiter<TResult>.GetResult\n  fullName: TaskAwaiter<TResult>.GetResult\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TaskAwaiter`1.xml\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.IsCompleted*\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  isExternal: false\n  name: IsCompleted\n  nameWithType: TaskAwaiter<TResult>.IsCompleted\n  fullName: TaskAwaiter<TResult>.IsCompleted\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TaskAwaiter`1.xml\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.OnCompleted*\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  isExternal: false\n  name: OnCompleted\n  nameWithType: TaskAwaiter<TResult>.OnCompleted\n  fullName: TaskAwaiter<TResult>.OnCompleted\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TaskAwaiter`1.xml\n- uid: System.Runtime.CompilerServices.TaskAwaiter`1.UnsafeOnCompleted*\n  parent: System.Runtime.CompilerServices.TaskAwaiter`1\n  isExternal: false\n  name: UnsafeOnCompleted\n  nameWithType: TaskAwaiter<TResult>.UnsafeOnCompleted\n  fullName: TaskAwaiter<TResult>.UnsafeOnCompleted\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TaskAwaiter`1.xml\n- uid: System.Runtime.CompilerServices.ICriticalNotifyCompletion\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: ICriticalNotifyCompletion\n  nameWithType: ICriticalNotifyCompletion\n  fullName: System.Runtime.CompilerServices.ICriticalNotifyCompletion\n"}