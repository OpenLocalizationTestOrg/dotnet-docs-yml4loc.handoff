{"nodes":[{"content":"Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control.","nodes":[{"pos":[0,204],"content":"Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSource\"&gt;&lt;/xref&gt;</ph> control.","source":"Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control."}],"pos":[1347,1552],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class contains type conversion and property setter exceptions. All of the exceptions that are thrown during validation are contained in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection. You can retrieve each validation exception by iterating through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.  \n  \n You typically handle exceptions in the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, and <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> events. If a validation exception is thrown, the `Exception` property of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, or <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> object. If no exception is thrown, the `Exception` property contains `null`.  \n  \n To handle validation exceptions, create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. In the event handler, check whether the `Exception` property of the event argument class contains a value other than `null`. If the `Exception` property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.  \n  \n A validation exception can occur if a value does not match the type of the property. For example, trying to update an integer property by using non-numeric characters causes a validation exception. A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.","nodes":[{"pos":[0,474],"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class contains type conversion and property setter exceptions. All of the exceptions that are thrown during validation are contained in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection. You can retrieve each validation exception by iterating through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class contains type conversion and property setter exceptions. All of the exceptions that are thrown during validation are contained in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection. You can retrieve each validation exception by iterating through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.","pos":[0,474],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> class contains type conversion and property setter exceptions.","pos":[0,133],"source":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class contains type conversion and property setter exceptions."},{"content":"All of the exceptions that are thrown during validation are contained in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> collection.","pos":[134,308],"source":" All of the exceptions that are thrown during validation are contained in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection."},{"content":"You can retrieve each validation exception by iterating through the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> collection.","pos":[309,474],"source":" You can retrieve each validation exception by iterating through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection."}]}]},{"pos":[481,1130],"content":"You typically handle exceptions in the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, and <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> events. If a validation exception is thrown, the `Exception` property of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, or <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> object. If no exception is thrown, the `Exception` property contains `null`.","nodes":[{"content":"You typically handle exceptions in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> events.","pos":[0,224],"source":"You typically handle exceptions in the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, and <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> events."},{"content":"If a validation exception is thrown, the <ph id=\"ph1\">`Exception`</ph> property of the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains a <ph id=\"ph5\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> object.","pos":[225,580],"source":" If a validation exception is thrown, the `Exception` property of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, or <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> object."},{"content":"If no exception is thrown, the <ph id=\"ph1\">`Exception`</ph> property contains <ph id=\"ph2\">`null`</ph>.","pos":[581,649],"source":" If no exception is thrown, the `Exception` property contains `null`."}]},{"pos":[1137,1740],"content":"To handle validation exceptions, create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. In the event handler, check whether the `Exception` property of the event argument class contains a value other than `null`. If the `Exception` property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.","nodes":[{"content":"To handle validation exceptions, create a handler for the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.","pos":[0,241],"source":"To handle validation exceptions, create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event."},{"content":"In the event handler, check whether the <ph id=\"ph1\">`Exception`</ph> property of the event argument class contains a value other than <ph id=\"ph2\">`null`</ph>.","pos":[242,366],"source":" In the event handler, check whether the `Exception` property of the event argument class contains a value other than `null`."},{"content":"If the <ph id=\"ph1\">`Exception`</ph> property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the <ph id=\"ph2\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> property.","pos":[367,603],"source":" If the `Exception` property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property."}]},{"pos":[1747,2107],"content":"A validation exception can occur if a value does not match the type of the property. For example, trying to update an integer property by using non-numeric characters causes a validation exception. A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.","nodes":[{"content":"A validation exception can occur if a value does not match the type of the property. For example, trying to update an integer property by using non-numeric characters causes a validation exception. A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.","pos":[0,360],"nodes":[{"content":"A validation exception can occur if a value does not match the type of the property.","pos":[0,84]},{"content":"For example, trying to update an integer property by using non-numeric characters causes a validation exception.","pos":[85,197]},{"content":"A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.","pos":[198,360]}]}]}],"pos":[1563,3679],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a system-supplied message that describes the error.","nodes":[{"pos":[0,177],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"&gt;&lt;/xref&gt;</ph> class with a system-supplied message that describes the error.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a system-supplied message that describes the error."}],"pos":[6927,7105],"yaml":true},{"content":"The system-supplied message that describes the error takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|A system-supplied localized description.|","nodes":[{"pos":[0,99],"content":"The system-supplied message that describes the error takes into account the current system culture.","nodes":[{"content":"The system-supplied message that describes the error takes into account the current system culture.","pos":[0,99]}]},{"pos":[106,256],"content":"The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.","nodes":[{"content":"The following table shows the initial property values for an instance of the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> class.","pos":[0,150],"source":"The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class."}]},{"pos":[263,271],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[272,277],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[313,354],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[355,362],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[367,401],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[402,442],"content":"A system-supplied localized description.","nodes":[{"content":"A system-supplied localized description.","pos":[0,40]}]}],"pos":[7116,7569],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a specified message that describes the error.","nodes":[{"pos":[0,171],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"&gt;&lt;/xref&gt;</ph> class with a specified message that describes the error.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a specified message that describes the error."}],"pos":[8956,9128],"yaml":true},{"content":"The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|","nodes":[{"pos":[0,150],"content":"The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.","nodes":[{"content":"The following table shows the initial property values for an instance of the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> class.","pos":[0,150],"source":"The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class."}]},{"pos":[157,165],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[166,171],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[207,248],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[249,256],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[261,295],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[296,344],"content":"The error message string specified in <ph id=\"ph1\">`message`</ph>.","source":"The error message string specified in `message`."}],"pos":[9139,9492],"yaml":true,"extradata":"MT"},{"content":"The message that describes the error.","nodes":[{"pos":[0,37],"content":"The message that describes the error.","nodes":[{"content":"The message that describes the error.","pos":[0,37]}]}],"pos":[9653,9691],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with serialized data.","nodes":[{"pos":[0,142],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with serialized data."}],"pos":[11315,11458],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.","nodes":[{"pos":[0,121],"content":"This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.","pos":[0,121]}]}],"pos":[11469,11591],"yaml":true,"extradata":"MT"},{"content":"The object that holds the serialized object data.","nodes":[{"pos":[0,49],"content":"The object that holds the serialized object data.","nodes":[{"content":"The object that holds the serialized object data.","pos":[0,49]}]}],"pos":[11877,11927],"yaml":true},{"content":"Context information about the source or destination.","nodes":[{"pos":[0,52],"content":"Context information about the source or destination.","nodes":[{"content":"Context information about the source or destination.","pos":[0,52]}]}],"pos":[12022,12075],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a specified message that describes the error, and a collection of references to inner exceptions.","nodes":[{"pos":[0,223],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"&gt;&lt;/xref&gt;</ph> class with a specified message that describes the error, and a collection of references to inner exceptions.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a specified message that describes the error, and a collection of references to inner exceptions."}],"pos":[13681,13905],"yaml":true},{"content":"The message that describes the error.","nodes":[{"pos":[0,37],"content":"The message that describes the error.","nodes":[{"content":"The message that describes the error.","pos":[0,37]}]}],"pos":[14140,14178],"yaml":true},{"content":"The collection of validation exceptions.","nodes":[{"pos":[0,40],"content":"The collection of validation exceptions.","nodes":[{"content":"The collection of validation exceptions.","pos":[0,40]}]}],"pos":[14306,14347],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a specified error message and a reference to the inner exception.","nodes":[{"pos":[0,191],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a specified error message and a reference to the inner exception."}],"pos":[15731,15923],"yaml":true},{"content":"You typically will not use this constructor because validation exceptions are stored in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property, not the <xref:System.Exception.InnerException%2A> property.","nodes":[{"pos":[0,247],"content":"You typically will not use this constructor because validation exceptions are stored in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property, not the <xref:System.Exception.InnerException%2A> property.","nodes":[{"content":"You typically will not use this constructor because validation exceptions are stored in the <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> property, not the <ph id=\"ph2\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,247],"source":"You typically will not use this constructor because validation exceptions are stored in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property, not the <xref:System.Exception.InnerException%2A> property."}]}],"pos":[15934,16182],"yaml":true,"extradata":"MT"},{"content":"The message that describes the error.","nodes":[{"pos":[0,37],"content":"The message that describes the error.","nodes":[{"content":"The message that describes the error.","pos":[0,37]}]}],"pos":[16369,16407],"yaml":true},{"content":"The exception that is the cause of the current exception.","nodes":[{"pos":[0,57],"content":"The exception that is the cause of the current exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]}]}],"pos":[16480,16538],"yaml":true},{"content":"Gets information about the exception and adds it to the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object.","nodes":[{"pos":[0,131],"content":"Gets information about the exception and adds it to the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets information about the exception and adds it to the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object."}],"pos":[18119,18251],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization. During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.","nodes":[{"pos":[0,390],"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization. During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization. During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.","pos":[0,390],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A&gt;</ph> method adds information about the exception to the <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> object that is targeted for serialization.","pos":[0,235],"source":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization."},{"content":"During deserialization, the exception is reconstituted from the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> that is transmitted over the stream.","pos":[236,390],"source":" During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream."}]}]}],"pos":[18262,18653],"yaml":true,"extradata":"MT"},{"content":"The object that holds the serialized object data for the exception that is being thrown.","nodes":[{"pos":[0,88],"content":"The object that holds the serialized object data for the exception that is being thrown.","nodes":[{"content":"The object that holds the serialized object data for the exception that is being thrown.","pos":[0,88]}]}],"pos":[18981,19070],"yaml":true},{"content":"Context information about the source or destination.","nodes":[{"pos":[0,52],"content":"Context information about the source or destination.","nodes":[{"content":"Context information about the source or destination.","pos":[0,52]}]}],"pos":[19165,19218],"yaml":true},{"content":"Gets one or more exceptions that occurred when new or modified data was being validated.","nodes":[{"pos":[0,88],"content":"Gets one or more exceptions that occurred when new or modified data was being validated.","nodes":[{"content":"Gets one or more exceptions that occurred when new or modified data was being validated.","pos":[0,88]}]}],"pos":[20494,20583],"yaml":true},{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation. A validation exception can occur if a value does not match the type of the property. For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown. A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.","nodes":[{"pos":[0,595],"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation. A validation exception can occur if a value does not match the type of the property. For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown. A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.","nodes":[{"content":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation. A validation exception can occur if a value does not match the type of the property. For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown. A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.","pos":[0,595],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation.","pos":[0,226],"source":"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation."},{"content":"A validation exception can occur if a value does not match the type of the property.","pos":[227,311]},{"content":"For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown.","pos":[312,432]},{"content":"A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.","pos":[433,595]}]}]}],"pos":[20594,21190],"yaml":true,"extradata":"MT"},{"content":"A collection that contains the exceptions.","nodes":[{"pos":[0,42],"content":"A collection that contains the exceptions.","nodes":[{"content":"A collection that contains the exceptions.","pos":[0,42]}]}],"pos":[22648,22691],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException\n  commentId: T:System.Web.UI.WebControls.LinqDataSourceValidationException\n  id: LinqDataSourceValidationException\n  children:\n  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor\n  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)\n  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})\n  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)\n  - System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions\n  langs:\n  - csharp\n  name: LinqDataSourceValidationException\n  nameWithType: LinqDataSourceValidationException\n  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException\n  type: Class\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <xref href=\"System.Web.UI.WebControls.LinqDataSource\"></xref> control.\n  remarks: \"The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class contains type conversion and property setter exceptions. All of the exceptions that are thrown during validation are contained in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection. You can retrieve each validation exception by iterating through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.  \\n  \\n You typically handle exceptions in the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, and <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> events. If a validation exception is thrown, the `Exception` property of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, or <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> object. If no exception is thrown, the `Exception` property contains `null`.  \\n  \\n To handle validation exceptions, create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. In the event handler, check whether the `Exception` property of the event argument class contains a value other than `null`. If the `Exception` property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.  \\n  \\n A validation exception can occur if a value does not match the type of the property. For example, trying to update an integer property by using non-numeric characters causes a validation exception. A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.\"\n  example:\n  - \"The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \\n  \\n```vb  \\nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \\n        ByVal e As LinqDataSourceUpdateEventArgs)  \\n    If (e.Exception IsNot Nothing) Then  \\n        For Each innerException As KeyValuePair(Of String, Exception) _  \\n               In e.Exception.InnerExceptions  \\n            Label1.Text &= innerException.Key & \\\": \\\" & _  \\n                innerException.Value.Message & \\\"<br />\\\"  \\n        Next  \\n        e.ExceptionHandled = True  \\n    End If  \\nEnd Sub  \\n```  \\n  \\n```csharp  \\nprotected void LinqDataSource_Updating(object sender,   \\n        LinqDataSourceUpdateEventArgs e)  \\n{  \\n    if (e.Exception != null)  \\n    {  \\n        foreach (KeyValuePair<string, Exception> innerException in   \\n             e.Exception.InnerExceptions)  \\n        {  \\n        Label1.Text += innerException.Key + \\\": \\\" +   \\n            innerException.Value.Message + \\\"<br />\\\";  \\n        }  \\n        e.ExceptionHandled = true;  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: 'public class LinqDataSourceValidationException : Exception, System.Web.DynamicData.IDynamicValidatorException'\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements:\n  - System.Web.DynamicData.IDynamicValidatorException\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceValidationException.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor\n  commentId: M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  langs:\n  - csharp\n  name: LinqDataSourceValidationException()\n  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException()\n  fullName: LinqDataSourceValidationException.LinqDataSourceValidationException()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a system-supplied message that describes the error.\n  remarks: \"The system-supplied message that describes the error takes into account the current system culture.  \\n  \\n The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|A system-supplied localized description.|\"\n  syntax:\n    content: public LinqDataSourceValidationException ();\n    parameters: []\n  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceValidationException.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)\n  commentId: M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  langs:\n  - csharp\n  name: LinqDataSourceValidationException(String)\n  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String)\n  fullName: LinqDataSourceValidationException.LinqDataSourceValidationException(String)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a specified message that describes the error.\n  remarks: \"The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|\"\n  syntax:\n    content: public LinqDataSourceValidationException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the error.\n  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceValidationException.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  langs:\n  - csharp\n  name: LinqDataSourceValidationException(SerializationInfo, StreamingContext)\n  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo, StreamingContext)\n  fullName: LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.\n  syntax:\n    content: protected LinqDataSourceValidationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Context information about the source or destination.\n  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceValidationException.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})\n  commentId: M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})\n  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})'\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  langs:\n  - csharp\n  name: LinqDataSourceValidationException(String, IDictionary<String,Exception>)\n  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String, IDictionary<String,Exception>)\n  fullName: LinqDataSourceValidationException.LinqDataSourceValidationException(String, IDictionary<String,Exception>)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a specified message that describes the error, and a collection of references to inner exceptions.\n  syntax:\n    content: public LinqDataSourceValidationException (string message, System.Collections.Generic.IDictionary<string,Exception> innerExceptions);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the error.\n    - id: innerExceptions\n      type: System.Collections.Generic.IDictionary{System.String,System.Exception}\n      description: The collection of validation exceptions.\n  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceValidationException.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)\n  commentId: M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  langs:\n  - csharp\n  name: LinqDataSourceValidationException(String, Exception)\n  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String, Exception)\n  fullName: LinqDataSourceValidationException.LinqDataSourceValidationException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\"></xref> class with a specified error message and a reference to the inner exception.\n  remarks: You typically will not use this constructor because validation exceptions are stored in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property, not the <xref:System.Exception.InnerException%2A> property.\n  syntax:\n    content: public LinqDataSourceValidationException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the error.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception.\n  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceValidationException.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: LinqDataSourceValidationException.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: LinqDataSourceValidationException.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets information about the exception and adds it to the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object.\n  remarks: The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization. During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data for the exception that is being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Context information about the source or destination.\n  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceValidationException.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions\n  commentId: P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions\n  id: InnerExceptions\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  langs:\n  - csharp\n  name: InnerExceptions\n  nameWithType: LinqDataSourceValidationException.InnerExceptions\n  fullName: LinqDataSourceValidationException.InnerExceptions\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI.WebControls\n  summary: Gets one or more exceptions that occurred when new or modified data was being validated.\n  remarks: The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation. A validation exception can occur if a value does not match the type of the property. For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown. A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.\n  example:\n  - \"The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \\n  \\n```vb  \\nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \\n        ByVal e As LinqDataSourceUpdateEventArgs)  \\n    If (e.Exception IsNot Nothing) Then  \\n        For Each innerException As KeyValuePair(Of String, Exception) _  \\n                In e.Exception.InnerExceptions  \\n          Label1.Text &= innerException.Key & \\\": \\\" & _   \\n                  innerException.Value.Message & \\\"<br />\\\"  \\n        Next  \\n        e.ExceptionHandled = True  \\n    End If  \\nEnd Sub  \\n```  \\n  \\n```csharp  \\nprotected void LinqDataSource_Updating(object sender,   \\n        LinqDataSourceUpdateEventArgs e)   \\n{  \\n    if (e.Exception != null)  \\n    {  \\n        foreach (KeyValuePair<string, Exception> innerException in   \\n            e.Exception.InnerExceptions)  \\n        {  \\n            Label1.Text += innerException.Key + \\\": \\\" +   \\n                innerException.Message + \\\"<br />\\\";  \\n        }  \\n        e.ExceptionHandled = true;  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,Exception> InnerExceptions { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Exception}\n      description: A collection that contains the exceptions.\n  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceValidationException.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  isExternal: false\n  name: LinqDataSourceValidationException()\n  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException()\n  fullName: LinqDataSourceValidationException.LinqDataSourceValidationException()\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  isExternal: false\n  name: LinqDataSourceValidationException(String)\n  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String)\n  fullName: LinqDataSourceValidationException.LinqDataSourceValidationException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  isExternal: false\n  name: LinqDataSourceValidationException(SerializationInfo, StreamingContext)\n  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo, StreamingContext)\n  fullName: LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  isExternal: false\n  name: LinqDataSourceValidationException(String, IDictionary<String,Exception>)\n  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String, IDictionary<String,Exception>)\n  fullName: LinqDataSourceValidationException.LinqDataSourceValidationException(String, IDictionary<String,Exception>)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.String,System.Exception}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Exception>\n  nameWithType: IDictionary<String,Exception>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Exception>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Exception\n    name: Exception\n    nameWithType: Exception\n    fullName: System.Exception\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  isExternal: false\n  name: LinqDataSourceValidationException(String, Exception)\n  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String, Exception)\n  fullName: LinqDataSourceValidationException.LinqDataSourceValidationException(String, Exception)\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: LinqDataSourceValidationException.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: LinqDataSourceValidationException.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  isExternal: false\n  name: InnerExceptions\n  nameWithType: LinqDataSourceValidationException.InnerExceptions\n  fullName: LinqDataSourceValidationException.InnerExceptions\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  isExternal: false\n  name: LinqDataSourceValidationException\n  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException\n  fullName: LinqDataSourceValidationException.LinqDataSourceValidationException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceValidationException.xml\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData*\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  isExternal: false\n  name: GetObjectData\n  nameWithType: LinqDataSourceValidationException.GetObjectData\n  fullName: LinqDataSourceValidationException.GetObjectData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceValidationException.xml\n- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions*\n  parent: System.Web.UI.WebControls.LinqDataSourceValidationException\n  isExternal: false\n  name: InnerExceptions\n  nameWithType: LinqDataSourceValidationException.InnerExceptions\n  fullName: LinqDataSourceValidationException.InnerExceptions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceValidationException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n- uid: System.Web.DynamicData.IDynamicValidatorException\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: IDynamicValidatorException\n  nameWithType: IDynamicValidatorException\n  fullName: System.Web.DynamicData.IDynamicValidatorException\n"}