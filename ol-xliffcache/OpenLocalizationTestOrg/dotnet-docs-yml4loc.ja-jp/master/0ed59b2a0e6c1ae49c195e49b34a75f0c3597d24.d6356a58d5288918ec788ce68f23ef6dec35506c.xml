{"nodes":[{"content":"When applied to a type, stores the name of a static method of the type that returns an XML schema and a <xref href=\"System.Xml.XmlQualifiedName\"></xref> (or <xref href=\"System.Xml.Schema.XmlSchemaType\"></xref> for anonymous types) that controls the serialization of the type.","nodes":[{"pos":[0,275],"content":"When applied to a type, stores the name of a static method of the type that returns an XML schema and a <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlQualifiedName\"&gt;&lt;/xref&gt;</ph> (or <ph id=\"ph2\">&lt;xref href=\"System.Xml.Schema.XmlSchemaType\"&gt;&lt;/xref&gt;</ph> for anonymous types) that controls the serialization of the type.","source":"When applied to a type, stores the name of a static method of the type that returns an XML schema and a <xref href=\"System.Xml.XmlQualifiedName\"></xref> (or <xref href=\"System.Xml.Schema.XmlSchemaType\"></xref> for anonymous types) that controls the serialization of the type."}],"pos":[711,987],"yaml":true},{"content":"The main purpose of the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> is to enable the <xref:System.Xml.Serialization.XmlSchemaExporter> class to return a schema when queried by the Web Services Description Language tool (WSDL.exe), or when using the **Add Web Reference** feature of [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]. You can control the actual schema for the type in the static method.  \n  \n> [!NOTE]\n>  The target class of the attribute must implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.  \n  \n The <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property returns the name of a static method through reflection. The method, which must be implemented, must take a single parameter, an <xref:System.Xml.Schema.XmlSchemaSet> object, which the method populates with an <xref:System.Xml.Schema.XmlSchema> object. The method must also return an <xref:System.Xml.XmlQualifiedName> object that identifies the data type.  \n  \n## Returning Anonymous Types  \n An anonymous complex type cannot be created using a method that returns <xref:System.Xml.XmlQualifiedName>. Because an anonymous type has no name, and you cannot add an anonymous type to a schema, the anonymous type must be returned as an <xref:System.Xml.Schema.XmlSchemaType>.","nodes":[{"pos":[0,410],"content":"The main purpose of the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> is to enable the <xref:System.Xml.Serialization.XmlSchemaExporter> class to return a schema when queried by the Web Services Description Language tool (WSDL.exe), or when using the **Add Web Reference** feature of [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]. You can control the actual schema for the type in the static method.","nodes":[{"content":"The main purpose of the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> is to enable the <ph id=\"ph2\">&lt;xref:System.Xml.Serialization.XmlSchemaExporter&gt;</ph> class to return a schema when queried by the Web Services Description Language tool (WSDL.exe), or when using the <bpt id=\"p1\">**</bpt>Add Web Reference<ept id=\"p1\">**</ept> feature of <ph id=\"ph3\">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>.","pos":[0,341],"source":"The main purpose of the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> is to enable the <xref:System.Xml.Serialization.XmlSchemaExporter> class to return a schema when queried by the Web Services Description Language tool (WSDL.exe), or when using the **Add Web Reference** feature of [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]."},{"content":"You can control the actual schema for the type in the static method.","pos":[342,410]}]},{"pos":[418,541],"content":"[!NOTE]\n The target class of the attribute must implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.","leadings":["","> "],"nodes":[{"content":"The target class of the attribute must implement the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.","pos":[9,121],"source":" The target class of the attribute must implement the <xref:System.Xml.Serialization.IXmlSerializable> interface."}]},{"pos":[548,989],"content":"The <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property returns the name of a static method through reflection. The method, which must be implemented, must take a single parameter, an <xref:System.Xml.Schema.XmlSchemaSet> object, which the method populates with an <xref:System.Xml.Schema.XmlSchema> object. The method must also return an <xref:System.Xml.XmlQualifiedName> object that identifies the data type.","nodes":[{"content":"The <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property returns the name of a static method through reflection. The method, which must be implemented, must take a single parameter, an <xref:System.Xml.Schema.XmlSchemaSet> object, which the method populates with an <xref:System.Xml.Schema.XmlSchema> object. The method must also return an <xref:System.Xml.XmlQualifiedName> object that identifies the data type.","pos":[0,441],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A&gt;</ph> property returns the name of a static method through reflection.","pos":[0,141],"source":"The <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property returns the name of a static method through reflection."},{"content":"The method, which must be implemented, must take a single parameter, an <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object, which the method populates with an <ph id=\"ph2\">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object.","pos":[142,337],"source":" The method, which must be implemented, must take a single parameter, an <xref:System.Xml.Schema.XmlSchemaSet> object, which the method populates with an <xref:System.Xml.Schema.XmlSchema> object."},{"content":"The method must also return an <ph id=\"ph1\">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph> object that identifies the data type.","pos":[338,441],"source":" The method must also return an <xref:System.Xml.XmlQualifiedName> object that identifies the data type."}]}]},{"pos":[998,1023],"content":"Returning Anonymous Types","linkify":"Returning Anonymous Types","nodes":[{"content":"Returning Anonymous Types","pos":[0,25]}]},{"pos":[1027,1305],"content":"An anonymous complex type cannot be created using a method that returns <xref:System.Xml.XmlQualifiedName>. Because an anonymous type has no name, and you cannot add an anonymous type to a schema, the anonymous type must be returned as an <xref:System.Xml.Schema.XmlSchemaType>.","nodes":[{"content":"An anonymous complex type cannot be created using a method that returns <xref:System.Xml.XmlQualifiedName>. Because an anonymous type has no name, and you cannot add an anonymous type to a schema, the anonymous type must be returned as an <xref:System.Xml.Schema.XmlSchemaType>.","pos":[0,278],"nodes":[{"content":"An anonymous complex type cannot be created using a method that returns <ph id=\"ph1\">&lt;xref:System.Xml.XmlQualifiedName&gt;</ph>.","pos":[0,107],"source":"An anonymous complex type cannot be created using a method that returns <xref:System.Xml.XmlQualifiedName>."},{"content":"Because an anonymous type has no name, and you cannot add an anonymous type to a schema, the anonymous type must be returned as an <ph id=\"ph1\">&lt;xref:System.Xml.Schema.XmlSchemaType&gt;</ph>.","pos":[108,278],"source":" Because an anonymous type has no name, and you cannot add an anonymous type to a schema, the anonymous type must be returned as an <xref:System.Xml.Schema.XmlSchemaType>."}]}]}],"pos":[998,2314],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSchemaProviderAttribute\"></xref> class, taking the name of the static method that supplies the type's XML schema.","nodes":[{"pos":[0,187],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Serialization.XmlSchemaProviderAttribute\"&gt;&lt;/xref&gt;</ph> class, taking the name of the static method that supplies the type's XML schema.","source":"Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSchemaProviderAttribute\"></xref> class, taking the name of the static method that supplies the type's XML schema."}],"pos":[8602,8790],"yaml":true},{"content":"The name of the static method that must be implemented.","nodes":[{"pos":[0,55],"content":"The name of the static method that must be implemented.","nodes":[{"content":"The name of the static method that must be implemented.","pos":[0,55]}]}],"pos":[8950,9006],"yaml":true},{"content":"Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an `xs:any` element.","nodes":[{"pos":[0,148],"content":"Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an <ph id=\"ph1\">`xs:any`</ph> element.","source":"Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an `xs:any` element."}],"pos":[10495,10644],"yaml":true},{"content":"The target class of the attribute can be any class. This can be achieved in the following ways:  \n  \n-   The method named by the attribute can return `null`.  \n  \n-   Set the value of this property to `true` to prevent the method from being called.","nodes":[{"pos":[0,95],"content":"The target class of the attribute can be any class. This can be achieved in the following ways:","nodes":[{"content":"The target class of the attribute can be any class. This can be achieved in the following ways:","pos":[0,95],"nodes":[{"content":"The target class of the attribute can be any class.","pos":[0,51]},{"content":"This can be achieved in the following ways:","pos":[52,95]}]}]},{"pos":[105,157],"content":"The method named by the attribute can return <ph id=\"ph1\">`null`</ph>.","source":"The method named by the attribute can return `null`."},{"pos":[167,248],"content":"Set the value of this property to <ph id=\"ph1\">`true`</ph> to prevent the method from being called.","source":"Set the value of this property to `true` to prevent the method from being called."}],"pos":[10655,10910],"yaml":true,"extradata":"MT"},{"content":"`true`, if the class is a wildcard, or if the schema contains only the `xs:any` element; otherwise, `false`.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph>, if the class is a wildcard, or if the schema contains only the <ph id=\"ph2\">`xs:any`</ph> element; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true`, if the class is a wildcard, or if the schema contains only the `xs:any` element; otherwise, `false`."}],"pos":[11023,11134],"yaml":true},{"content":"Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.","nodes":[{"pos":[0,112],"content":"Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.","nodes":[{"content":"Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.","pos":[0,112]}]}],"pos":[12653,12766],"yaml":true},{"content":"The name of the method that is invoked by the XML infrastructure to return an XML schema.","nodes":[{"pos":[0,89],"content":"The name of the method that is invoked by the XML infrastructure to return an XML schema.","nodes":[{"content":"The name of the method that is invoked by the XML infrastructure to return an XML schema.","pos":[0,89]}]}],"pos":[12880,12970],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Serialization.XmlSchemaProviderAttribute\n  commentId: T:System.Xml.Serialization.XmlSchemaProviderAttribute\n  id: XmlSchemaProviderAttribute\n  children:\n  - System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)\n  - System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny\n  - System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName\n  langs:\n  - csharp\n  name: XmlSchemaProviderAttribute\n  nameWithType: XmlSchemaProviderAttribute\n  fullName: System.Xml.Serialization.XmlSchemaProviderAttribute\n  type: Class\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml.Serialization\n  summary: When applied to a type, stores the name of a static method of the type that returns an XML schema and a <xref href=\"System.Xml.XmlQualifiedName\"></xref> (or <xref href=\"System.Xml.Schema.XmlSchemaType\"></xref> for anonymous types) that controls the serialization of the type.\n  remarks: \"The main purpose of the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> is to enable the <xref:System.Xml.Serialization.XmlSchemaExporter> class to return a schema when queried by the Web Services Description Language tool (WSDL.exe), or when using the **Add Web Reference** feature of [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]. You can control the actual schema for the type in the static method.  \\n  \\n> [!NOTE]\\n>  The target class of the attribute must implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.  \\n  \\n The <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property returns the name of a static method through reflection. The method, which must be implemented, must take a single parameter, an <xref:System.Xml.Schema.XmlSchemaSet> object, which the method populates with an <xref:System.Xml.Schema.XmlSchema> object. The method must also return an <xref:System.Xml.XmlQualifiedName> object that identifies the data type.  \\n  \\n## Returning Anonymous Types  \\n An anonymous complex type cannot be created using a method that returns <xref:System.Xml.XmlQualifiedName>. Because an anonymous type has no name, and you cannot add an anonymous type to a schema, the anonymous type must be returned as an <xref:System.Xml.Schema.XmlSchemaType>.\"\n  example:\n  - \"The following example applies the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> to a server-side class. When invoked, the method named by the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property creates the schema. This simple implementation reads an existing schema off the disk. However, you can also create a custom schema, if necessary, using the types found in the <xref:System.Xml.Schema> namespace.  \\n  \\n [!code-csharp[HowToChunkSerializedData#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HowToChunkSerializedData/CS/SerializationChunk.cs#2)]\\n [!code-vb[HowToChunkSerializedData#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HowToChunkSerializedData/VB/SerializationChunk.vb#2)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Interface)]\n\n      public sealed class XmlSchemaProviderAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/XmlSchemaProviderAttribute.xml\n  ms.technology:\n  - dotnet-wcf\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)\n  commentId: M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Xml.Serialization.XmlSchemaProviderAttribute\n  langs:\n  - csharp\n  name: XmlSchemaProviderAttribute(String)\n  nameWithType: XmlSchemaProviderAttribute.XmlSchemaProviderAttribute(String)\n  fullName: XmlSchemaProviderAttribute.XmlSchemaProviderAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSchemaProviderAttribute\"></xref> class, taking the name of the static method that supplies the type's XML schema.\n  syntax:\n    content: public XmlSchemaProviderAttribute (string methodName);\n    parameters:\n    - id: methodName\n      type: System.String\n      description: The name of the static method that must be implemented.\n  overload: System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/XmlSchemaProviderAttribute.xml\n  ms.technology:\n  - dotnet-wcf\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny\n  commentId: P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny\n  id: IsAny\n  parent: System.Xml.Serialization.XmlSchemaProviderAttribute\n  langs:\n  - csharp\n  name: IsAny\n  nameWithType: XmlSchemaProviderAttribute.IsAny\n  fullName: XmlSchemaProviderAttribute.IsAny\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml.Serialization\n  summary: Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an `xs:any` element.\n  remarks: \"The target class of the attribute can be any class. This can be achieved in the following ways:  \\n  \\n-   The method named by the attribute can return `null`.  \\n  \\n-   Set the value of this property to `true` to prevent the method from being called.\"\n  syntax:\n    content: public bool IsAny { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true`, if the class is a wildcard, or if the schema contains only the `xs:any` element; otherwise, `false`.'\n  overload: System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/XmlSchemaProviderAttribute.xml\n  ms.technology:\n  - dotnet-wcf\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName\n  commentId: P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName\n  id: MethodName\n  parent: System.Xml.Serialization.XmlSchemaProviderAttribute\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: XmlSchemaProviderAttribute.MethodName\n  fullName: XmlSchemaProviderAttribute.MethodName\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml.Serialization\n  summary: Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.\n  syntax:\n    content: public string MethodName { get; }\n    return:\n      type: System.String\n      description: The name of the method that is invoked by the XML infrastructure to return an XML schema.\n  overload: System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/XmlSchemaProviderAttribute.xml\n  ms.technology:\n  - dotnet-wcf\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)\n  parent: System.Xml.Serialization.XmlSchemaProviderAttribute\n  isExternal: false\n  name: XmlSchemaProviderAttribute(String)\n  nameWithType: XmlSchemaProviderAttribute.XmlSchemaProviderAttribute(String)\n  fullName: XmlSchemaProviderAttribute.XmlSchemaProviderAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny\n  parent: System.Xml.Serialization.XmlSchemaProviderAttribute\n  isExternal: false\n  name: IsAny\n  nameWithType: XmlSchemaProviderAttribute.IsAny\n  fullName: XmlSchemaProviderAttribute.IsAny\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName\n  parent: System.Xml.Serialization.XmlSchemaProviderAttribute\n  isExternal: false\n  name: MethodName\n  nameWithType: XmlSchemaProviderAttribute.MethodName\n  fullName: XmlSchemaProviderAttribute.MethodName\n- uid: System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor*\n  parent: System.Xml.Serialization.XmlSchemaProviderAttribute\n  isExternal: false\n  name: XmlSchemaProviderAttribute\n  nameWithType: XmlSchemaProviderAttribute.XmlSchemaProviderAttribute\n  fullName: XmlSchemaProviderAttribute.XmlSchemaProviderAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/XmlSchemaProviderAttribute.xml\n- uid: System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny*\n  parent: System.Xml.Serialization.XmlSchemaProviderAttribute\n  isExternal: false\n  name: IsAny\n  nameWithType: XmlSchemaProviderAttribute.IsAny\n  fullName: XmlSchemaProviderAttribute.IsAny\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/XmlSchemaProviderAttribute.xml\n- uid: System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName*\n  parent: System.Xml.Serialization.XmlSchemaProviderAttribute\n  isExternal: false\n  name: MethodName\n  nameWithType: XmlSchemaProviderAttribute.MethodName\n  fullName: XmlSchemaProviderAttribute.MethodName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Serialization/XmlSchemaProviderAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}